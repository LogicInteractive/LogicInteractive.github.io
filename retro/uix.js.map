{
"version":3,
"file":"uix.js",
"sourceRoot":"file:///",
"sources":["c:/HaxeToolkit/kha/Tools/haxe/std/js/_std/EReg.hx","c:/HaxeToolkit/kha/Tools/haxe/std/js/_std/HxOverrides.hx","c:/HaxeToolkit/kha/Tools/haxe/std/js/_std/Reflect.hx","c:/dev/haxe/Kha/UIX.kha/uix/no/logic/kha/uix/scene/DisplayObject.hx","c:/dev/haxe/Kha/UIX.kha/uix/no/logic/kha/uix/scene/InteractiveObject.hx","c:/dev/haxe/Kha/UIX.kha/uix/no/logic/kha/uix/scene/Shape.hx","c:/dev/haxe/Kha/UIX.kha/uix/no/logic/kha/uix/scene/Sprite.hx","c:/dev/haxe/Kha/UIX.kha/uix/no/logic/kha/uix/scene/Stage.hx","c:/dev/haxe/Kha/UIX.kha/uix/no/logic/kha/uix/app/App.hx","C:/dev/haxe/Kha/projects/UIX.kha_AppTemplate/src/STMain.hx","c:/dev/haxe/Kha/UIX.kha/uix/no/logic/kha/uix/graphics/Draw.hx","c:/HaxeToolkit/kha/Tools/haxe/std/js/_std/Std.hx","c:/HaxeToolkit/kha/Tools/haxe/std/StringBuf.hx","c:/HaxeToolkit/kha/Tools/haxe/std/StringTools.hx","c:/HaxeToolkit/kha/Tools/haxe/std/js/_std/Type.hx","c:/HaxeToolkit/kha/Tools/haxe/std/UInt.hx","c:/HaxeToolkit/kha/Tools/haxe/std/Xml.hx","c:/HaxeToolkit/kha/Tools/haxe/std/haxe/Log.hx","c:/HaxeToolkit/kha/Sources/haxe/Timer.hx","c:/HaxeToolkit/kha/Tools/haxe/std/haxe/Unserializer.hx","c:/HaxeToolkit/kha/Tools/haxe/std/haxe/crypto/Adler32.hx","c:/HaxeToolkit/kha/Tools/haxe/std/js/_std/haxe/io/Bytes.hx","c:/HaxeToolkit/kha/Tools/haxe/std/haxe/crypto/Base64.hx","c:/HaxeToolkit/kha/Tools/haxe/std/haxe/crypto/BaseCode.hx","c:/HaxeToolkit/kha/Tools/haxe/std/js/_std/haxe/ds/IntMap.hx","c:/HaxeToolkit/kha/Tools/haxe/std/haxe/ds/List.hx","c:/HaxeToolkit/kha/Tools/haxe/std/js/_std/haxe/ds/ObjectMap.hx","c:/HaxeToolkit/kha/Tools/haxe/std/js/_std/haxe/ds/StringMap.hx","c:/HaxeToolkit/kha/Tools/haxe/std/haxe/io/Input.hx","c:/HaxeToolkit/kha/Tools/haxe/std/js/_std/haxe/io/BytesBuffer.hx","c:/HaxeToolkit/kha/Tools/haxe/std/haxe/io/BytesInput.hx","c:/HaxeToolkit/kha/Tools/haxe/std/haxe/io/Output.hx","c:/HaxeToolkit/kha/Tools/haxe/std/haxe/io/BytesOutput.hx","c:/HaxeToolkit/kha/Tools/haxe/std/haxe/io/Eof.hx","c:/HaxeToolkit/kha/Tools/haxe/std/js/_std/haxe/io/UInt8Array.hx","c:/HaxeToolkit/kha/Tools/haxe/std/haxe/xml/Access.hx","c:/HaxeToolkit/kha/Tools/haxe/std/haxe/xml/Parser.hx","c:/HaxeToolkit/kha/Tools/haxe/std/haxe/xml/Printer.hx","c:/HaxeToolkit/kha/Tools/haxe/std/haxe/zip/Huffman.hx","c:/HaxeToolkit/kha/Tools/haxe/std/haxe/zip/InflateImpl.hx","c:/HaxeToolkit/kha/Tools/haxe/std/haxe/zip/Reader.hx","c:/dev/haxe/Kha/UIX.kha/common/hx/ws/Buffer.hx","c:/dev/haxe/Kha/UIX.kha/common/hx/ws/WebSocket.hx","c:/dev/haxe/Kha/UIX.kha/common/hxPolyK/PolyK.hx","c:/HaxeToolkit/kha/Tools/haxe/std/js/Boot.hx","c:/HaxeToolkit/kha/Sources/kha/Assets.hx","c:/HaxeToolkit/kha/Sources/kha/internal/AssetsBuilder.hx","c:/HaxeToolkit/kha/Backends/HTML5/kha/Image.hx","c:/HaxeToolkit/kha/Backends/HTML5/kha/CanvasImage.hx","c:/HaxeToolkit/kha/Sources/kha/Color.hx","c:/HaxeToolkit/kha/Backends/HTML5/kha/Display.hx","c:/HaxeToolkit/kha/Sources/kha/Framebuffer.hx","c:/HaxeToolkit/kha/Sources/kha/FramebufferOptions.hx","c:/HaxeToolkit/kha/Sources/kha/Kravur.hx","c:/HaxeToolkit/kha/Backends/HTML5/kha/LoaderImpl.hx","c:/HaxeToolkit/kha/Sources/kha/Scheduler.hx","c:/HaxeToolkit/kha/Sources/kha/Shaders.hx","c:/HaxeToolkit/kha/Sources/kha/internal/ShadersBuilder.hx","c:/HaxeToolkit/kha/Sources/kha/Sound.hx","c:/HaxeToolkit/kha/Sources/kha/StringExtensions.hx","c:/HaxeToolkit/kha/Sources/kha/System.hx","c:/HaxeToolkit/kha/Backends/HTML5/kha/SystemImpl.hx","c:/HaxeToolkit/kha/Sources/kha/Video.hx","c:/HaxeToolkit/kha/Backends/HTML5/kha/WebGLImage.hx","c:/HaxeToolkit/kha/Backends/HTML5/kha/Window.hx","c:/HaxeToolkit/kha/Sources/kha/WindowOptions.hx","c:/HaxeToolkit/kha/Sources/kha/internal/IntBox.hx","c:/HaxeToolkit/kha/Backends/HTML5/kha/audio2/Audio.hx","c:/HaxeToolkit/kha/Sources/kha/audio2/Audio1.hx","c:/HaxeToolkit/kha/Sources/kha/audio2/AudioChannel.hx","c:/HaxeToolkit/kha/Sources/kha/audio2/Buffer.hx","c:/HaxeToolkit/kha/Sources/kha/audio2/StreamChannel.hx","c:/HaxeToolkit/kha/Backends/HTML5/kha/audio2/VirtualStreamChannel.hx","c:/HaxeToolkit/kha/Sources/kha/audio2/ogg/tools/Crc32.hx","c:/HaxeToolkit/kha/Sources/kha/audio2/ogg/vorbis/Reader.hx","c:/HaxeToolkit/kha/Sources/kha/audio2/ogg/vorbis/VorbisDecodeState.hx","c:/HaxeToolkit/kha/Sources/kha/audio2/ogg/vorbis/VorbisTools.hx","c:/HaxeToolkit/kha/Sources/kha/audio2/ogg/vorbis/VorbisDecoder.hx","c:/HaxeToolkit/kha/Sources/kha/audio2/ogg/tools/Mdct.hx","c:/HaxeToolkit/kha/Sources/kha/audio2/ogg/vorbis/data/Codebook.hx","c:/HaxeToolkit/kha/Sources/kha/audio2/ogg/vorbis/data/Comment.hx","c:/HaxeToolkit/kha/Sources/kha/audio2/ogg/vorbis/data/Floor.hx","c:/HaxeToolkit/kha/Sources/kha/audio2/ogg/vorbis/data/Header.hx","c:/HaxeToolkit/kha/Sources/kha/audio2/ogg/vorbis/data/IntPoint.hx","c:/HaxeToolkit/kha/Sources/kha/audio2/ogg/vorbis/data/Mapping.hx","c:/HaxeToolkit/kha/Sources/kha/audio2/ogg/vorbis/data/Mode.hx","c:/HaxeToolkit/kha/Sources/kha/audio2/ogg/vorbis/data/Page.hx","c:/HaxeToolkit/kha/Sources/kha/audio2/ogg/vorbis/data/ProbedPage.hx","c:/HaxeToolkit/kha/Sources/kha/audio2/ogg/vorbis/data/ReaderError.hx","c:/HaxeToolkit/kha/Sources/kha/audio2/ogg/vorbis/data/Residue.hx","c:/HaxeToolkit/kha/Sources/kha/graphics2/Graphics.hx","c:/HaxeToolkit/kha/Sources/kha/graphics2/Graphics1.hx","c:/HaxeToolkit/kha/Sources/kha/graphics2/GraphicsExtension.hx","c:/HaxeToolkit/kha/Sources/kha/graphics2/truetype/StbTruetype.hx","c:/HaxeToolkit/kha/Backends/HTML5/kha/graphics4/CubeMap.hx","c:/HaxeToolkit/kha/Backends/HTML5/kha/graphics4/FragmentShader.hx","c:/HaxeToolkit/kha/Sources/kha/graphics4/Graphics2.hx","c:/HaxeToolkit/kha/Sources/kha/math/FastVector2.hx","c:/HaxeToolkit/kha/Backends/HTML5/kha/graphics4/IndexBuffer.hx","c:/HaxeToolkit/kha/Sources/kha/graphics4/PipelineStateBase.hx","c:/HaxeToolkit/kha/Backends/HTML5/kha/graphics4/PipelineState.hx","c:/HaxeToolkit/kha/Backends/HTML5/kha/graphics4/VertexBuffer.hx","c:/HaxeToolkit/kha/Sources/kha/graphics4/VertexElement.hx","c:/HaxeToolkit/kha/Backends/HTML5/kha/graphics4/VertexShader.hx","c:/HaxeToolkit/kha/Sources/kha/graphics4/VertexStructure.hx","c:/HaxeToolkit/kha/Sources/kha/input/Gamepad.hx","c:/HaxeToolkit/kha/Sources/kha/netsync/Controller.hx","c:/HaxeToolkit/kha/Sources/kha/input/Keyboard.hx","c:/HaxeToolkit/kha/Sources/kha/netsync/ControllerBuilder.hx","c:/HaxeToolkit/kha/Sources/kha/input/Mouse.hx","c:/HaxeToolkit/kha/Backends/HTML5/kha/input/MouseImpl.hx","c:/HaxeToolkit/kha/Sources/kha/input/Surface.hx","c:/HaxeToolkit/kha/Sources/kha/internal/BytesBlob.hx","c:/HaxeToolkit/kha/Sources/kha/internal/HdrFormat.hx","c:/HaxeToolkit/kha/Backends/HTML5/kha/js/AEAudioChannel.hx","c:/HaxeToolkit/kha/Backends/HTML5/kha/js/AudioElementAudio.hx","c:/HaxeToolkit/kha/Backends/HTML5/kha/js/CanvasGraphics.hx","c:/HaxeToolkit/kha/Backends/HTML5/kha/js/Font.hx","c:/HaxeToolkit/kha/Backends/HTML5/kha/js/MobileWebAudio.hx","c:/HaxeToolkit/kha/Backends/HTML5/kha/js/MobileWebAudioChannel.hx","c:/HaxeToolkit/kha/Backends/HTML5/kha/js/MobileWebAudioSound.hx","c:/HaxeToolkit/kha/Backends/HTML5/kha/js/Sound.hx","c:/HaxeToolkit/kha/Backends/HTML5/kha/js/Video.hx","c:/HaxeToolkit/kha/Backends/HTML5/kha/js/graphics4/ConstantLocation.hx","c:/HaxeToolkit/kha/Backends/HTML5/kha/js/graphics4/Graphics.hx","c:/HaxeToolkit/kha/Backends/HTML5/kha/js/graphics4/Graphics2.hx","c:/HaxeToolkit/kha/Backends/HTML5/kha/js/graphics4/TextureUnit.hx","c:/HaxeToolkit/kha/Sources/kha/vr/VrInterface.hx","c:/HaxeToolkit/kha/Backends/HTML5/kha/js/vr/VrInterface.hx","c:/HaxeToolkit/kha/Sources/kha/math/FastMatrix3.hx","c:/HaxeToolkit/kha/Sources/kha/math/FastMatrix4.hx","c:/HaxeToolkit/kha/Sources/kha/netsync/Session.hx","c:/dev/haxe/Kha/UIX.kha/uix/no/logic/kha/uix/core/UIXAssets.hx","c:/dev/haxe/Kha/UIX.kha/uix/no/logic/kha/uix/core/loading/UIXCache.hx","c:/dev/haxe/Kha/UIX.kha/uix/no/logic/kha/uix/core/BindData.hx","c:/dev/haxe/Kha/UIX.kha/uix/no/logic/kha/uix/UIX.hx","c:/dev/haxe/Kha/UIX.kha/uix/no/logic/kha/uix/utils/FontUtils.hx","c:/dev/haxe/Kha/UIX.kha/uix/no/logic/kha/uix/audio/modplayer/ModPlayer.hx","c:/dev/haxe/Kha/UIX.kha/uix/no/logic/kha/uix/audio/modplayer/Protracker.hx","c:/dev/haxe/Kha/UIX.kha/uix/no/logic/kha/uix/console/Fps.hx","c:/dev/haxe/Kha/UIX.kha/uix/no/logic/kha/uix/console/UIXConsole.hx","c:/dev/haxe/Kha/UIX.kha/uix/no/logic/kha/uix/core/loading/UIXLoader.hx","c:/dev/haxe/Kha/UIX.kha/uix/no/logic/kha/uix/debug/DebugInspector.hx","c:/dev/haxe/Kha/UIX.kha/uix/no/logic/kha/uix/file/ZipFile.hx","c:/dev/haxe/Kha/UIX.kha/uix/no/logic/kha/uix/fla/Fla.hx","c:/dev/haxe/Kha/UIX.kha/uix/no/logic/kha/uix/fla/FlaElement.hx","c:/dev/haxe/Kha/UIX.kha/uix/no/logic/kha/uix/scene/uixcomp/UIXGComponentManager.hx","c:/dev/haxe/Kha/UIX.kha/uix/no/logic/kha/uix/fla/FlaFrame.hx","c:/dev/haxe/Kha/UIX.kha/uix/no/logic/kha/uix/fla/FlaLayer.hx","c:/dev/haxe/Kha/UIX.kha/uix/no/logic/kha/uix/fla/FlaLibrary.hx","c:/dev/haxe/Kha/UIX.kha/uix/no/logic/kha/uix/fla/FlaSymbol.hx","c:/dev/haxe/Kha/UIX.kha/uix/no/logic/kha/uix/fla/FlaTimeline.hx","c:/dev/haxe/Kha/UIX.kha/uix/no/logic/kha/uix/graphics/shaders/PipelineTools.hx","c:/dev/haxe/Kha/UIX.kha/uix/no/logic/kha/uix/input/MouseManager.hx","c:/dev/haxe/Kha/UIX.kha/uix/no/logic/kha/uix/kontentum/Kontentum.hx","c:/dev/haxe/Kha/UIX.kha/uix/no/logic/kha/uix/network/LocalClient.hx","c:/dev/haxe/Kha/UIX.kha/uix/no/logic/kha/uix/scene/MediaObject.hx","c:/dev/haxe/Kha/UIX.kha/uix/no/logic/kha/uix/scene/Bitmap.hx","c:/dev/haxe/Kha/UIX.kha/uix/no/logic/kha/uix/scene/SimpleButton.hx","c:/dev/haxe/Kha/UIX.kha/uix/no/logic/kha/uix/scene/Text.hx","c:/dev/haxe/Kha/UIX.kha/uix/no/logic/kha/uix/scene/animation/Ease.hx","c:/dev/haxe/Kha/UIX.kha/uix/no/logic/kha/uix/scene/animation/Frame.hx","c:/dev/haxe/Kha/UIX.kha/uix/no/logic/kha/uix/scene/animation/Timeline.hx","c:/dev/haxe/Kha/UIX.kha/uix/no/logic/kha/uix/scene/layout/Layout.hx","c:/dev/haxe/Kha/UIX.kha/uix/no/logic/kha/uix/scene/shapes/ShapeParser.hx","c:/dev/haxe/Kha/UIX.kha/common/trilateral/tri/TriangleArray.hx","c:/dev/haxe/Kha/UIX.kha/common/trilateral/tri/TrilateralArray.hx","c:/dev/haxe/Kha/UIX.kha/common/trilateral/polys/Poly.hx","c:/dev/haxe/Kha/UIX.kha/uix/no/logic/kha/uix/scene/shapes/ShapeRenderer.hx","c:/dev/haxe/Kha/UIX.kha/uix/no/logic/kha/uix/scene/uixcomp/UIXGComponent.hx","c:/dev/haxe/Kha/UIX.kha/uix/no/logic/kha/uix/scene/uixcomp/UIXGButtonComponent.hx","c:/dev/haxe/Kha/UIX.kha/uix/no/logic/kha/uix/scene/uixcomp/UIXGElement.hx","c:/dev/haxe/Kha/UIX.kha/uix/no/logic/kha/uix/scene/uixcomp/UIXGImageComponent.hx","c:/dev/haxe/Kha/UIX.kha/uix/no/logic/kha/uix/scene/uixcomp/UIXGTextComponent.hx","c:/dev/haxe/Kha/UIX.kha/uix/no/logic/kha/uix/script/As3Interpreter.hx","c:/dev/haxe/Kha/UIX.kha/uix/no/logic/kha/uix/text/bitmapfont/BMFont.hx","c:/dev/haxe/Kha/UIX.kha/uix/no/logic/kha/uix/types/HistoryFloat.hx","c:/dev/haxe/Kha/UIX.kha/uix/no/logic/kha/uix/types/Object.hx","c:/dev/haxe/Kha/UIX.kha/uix/no/logic/kha/uix/types/Rectangle.hx","c:/dev/haxe/Kha/UIX.kha/uix/no/logic/kha/uix/utils/ColorUtils.hx","c:/dev/haxe/Kha/UIX.kha/uix/no/logic/kha/uix/utils/Convert.hx","c:/dev/haxe/Kha/UIX.kha/uix/no/logic/kha/uix/utils/DateUtils.hx","c:/dev/haxe/Kha/UIX.kha/uix/no/logic/kha/uix/utils/ImageUtils.hx","c:/dev/haxe/Kha/UIX.kha/uix/no/logic/kha/uix/utils/MathUtils.hx","c:/dev/haxe/Kha/UIX.kha/uix/no/logic/kha/uix/utils/ObjUtils.hx","c:/dev/haxe/Kha/UIX.kha/uix/no/logic/kha/uix/utils/PointUtils.hx","c:/dev/haxe/Kha/UIX.kha/uix/no/logic/kha/uix/utils/SmoothFloat.hx","c:/dev/haxe/Kha/UIX.kha/uix/no/logic/kha/uix/utils/StringUtils.hx","c:/dev/haxe/Kha/UIX.kha/uix/no/logic/kha/uix/utils/TimeUtils.hx","C:/dev/haxe/Kha/projects/UIX.kha_AppTemplate/src/testcomp/Blurg.hx","C:/dev/haxe/Kha/projects/UIX.kha_AppTemplate/src/testcomp/TestText.hx","c:/dev/haxe/Kha/UIX.kha/common/trilateral/geom/Contour.hx","c:/dev/haxe/Kha/UIX.kha/common/trilateral/justPath/EllipseArc.hx","c:/dev/haxe/Kha/UIX.kha/common/trilateral/justPath/StoreF6.hx","c:/dev/haxe/Kha/UIX.kha/common/trilateral/justPath/SvgPath.hx","c:/dev/haxe/Kha/UIX.kha/common/trilateral/justPath/transform/ScaleContext.hx","c:/dev/haxe/Kha/UIX.kha/common/trilateral/justPath/transform/ScaleTranslateContext.hx","c:/dev/haxe/Kha/UIX.kha/common/trilateral/path/Base.hx","c:/dev/haxe/Kha/UIX.kha/common/trilateral/geom/Algebra.hx","c:/dev/haxe/Kha/UIX.kha/common/trilateral/path/FillOnly.hx","c:/dev/haxe/Kha/UIX.kha/common/trilateral/path/RoundEnd.hx","c:/dev/haxe/Kha/UIX.kha/common/trilateral/tri/Trilateral.hx","c:/dev/haxe/Kha/UIX.kha/common/trilateral/tri/Triangle.hx","c:/dev/haxe/Kha/UIX.kha/common/zip/Zip.hx","c:/dev/haxe/Kha/UIX.kha/common/zip/ZipReader.hx","c:/HaxeToolkit/kha/Tools/haxe/std/js/_std/Math.hx","c:/HaxeToolkit/kha/Tools/haxe/std/js/_std/String.hx","c:/dev/haxe/Kha/UIX.kha/uix/no/logic/kha/uix/assets/EmbeddedAssets.hx","c:/dev/haxe/Kha/UIX.kha/uix/no/logic/kha/uix/scene/styles/Styles.hx"],
"sourcesContent":["/*\r\n * Copyright (C)2005-2019 Haxe Foundation\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a\r\n * copy of this software and associated documentation files (the \"Software\"),\r\n * to deal in the Software without restriction, including without limitation\r\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\r\n * and/or sell copies of the Software, and to permit persons to whom the\r\n * Software is furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\r\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\r\n * DEALINGS IN THE SOFTWARE.\r\n */\r\n@:coreApi class EReg {\r\n\tvar r:HaxeRegExp;\r\n\r\n\tpublic inline function new(r:String, opt:String):Void {\r\n\t\tthis.r = new HaxeRegExp(r, opt.split(\"u\").join(\"\")); // 'u' (utf8) depends on page encoding\r\n\t}\r\n\r\n\tpublic function match(s:String):Bool {\r\n\t\tif (r.global)\r\n\t\t\tr.lastIndex = 0;\r\n\t\tr.m = r.exec(s);\r\n\t\tr.s = s;\r\n\t\treturn (r.m != null);\r\n\t}\r\n\r\n\tpublic function matched(n:Int):String {\r\n\t\treturn if (r.m != null && n >= 0 && n < r.m.length) r.m[n] else throw \"EReg::matched\";\r\n\t}\r\n\r\n\tpublic function matchedLeft():String {\r\n\t\tif (r.m == null)\r\n\t\t\tthrow \"No string matched\";\r\n\t\treturn r.s.substr(0, r.m.index);\r\n\t}\r\n\r\n\tpublic function matchedRight():String {\r\n\t\tif (r.m == null)\r\n\t\t\tthrow \"No string matched\";\r\n\t\tvar sz = r.m.index + r.m[0].length;\r\n\t\treturn r.s.substr(sz, r.s.length - sz);\r\n\t}\r\n\r\n\tpublic function matchedPos():{pos:Int, len:Int} {\r\n\t\tif (r.m == null)\r\n\t\t\tthrow \"No string matched\";\r\n\t\treturn {pos: r.m.index, len: r.m[0].length};\r\n\t}\r\n\r\n\tpublic function matchSub(s:String, pos:Int, len:Int = -1):Bool {\r\n\t\treturn if (r.global) {\r\n\t\t\tr.lastIndex = pos;\r\n\t\t\tr.m = r.exec(len < 0 ? s : s.substr(0, pos + len));\r\n\t\t\tvar b = r.m != null;\r\n\t\t\tif (b) {\r\n\t\t\t\tr.s = s;\r\n\t\t\t}\r\n\t\t\tb;\r\n\t\t} else {\r\n\t\t\t// TODO: check some ^/$ related corner cases\r\n\t\t\tvar b = match(len < 0 ? s.substr(pos) : s.substr(pos, len));\r\n\t\t\tif (b) {\r\n\t\t\t\tr.s = s;\r\n\t\t\t\tr.m.index += pos;\r\n\t\t\t}\r\n\t\t\tb;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic function split(s:String):Array<String> {\r\n\t\t// we can't use directly s.split because it's ignoring the 'g' flag\r\n\t\tvar d = \"#__delim__#\";\r\n\t\treturn replace(s, d).split(d);\r\n\t}\r\n\r\n\tpublic inline function replace(s:String, by:String):String {\r\n\t\treturn (cast s).replace(r, by);\r\n\t}\r\n\r\n\tpublic function map(s:String, f:EReg->String):String {\r\n\t\tvar offset = 0;\r\n\t\tvar buf = new StringBuf();\r\n\t\tdo {\r\n\t\t\tif (offset >= s.length)\r\n\t\t\t\tbreak;\r\n\t\t\telse if (!matchSub(s, offset)) {\r\n\t\t\t\tbuf.add(s.substr(offset));\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tvar p = matchedPos();\r\n\t\t\tbuf.add(s.substr(offset, p.pos - offset));\r\n\t\t\tbuf.add(f(this));\r\n\t\t\tif (p.len == 0) {\r\n\t\t\t\tbuf.add(s.substr(p.pos, 1));\r\n\t\t\t\toffset = p.pos + 1;\r\n\t\t\t} else\r\n\t\t\t\toffset = p.pos + p.len;\r\n\t\t} while (r.global);\r\n\t\tif (!r.global && offset > 0 && offset < s.length)\r\n\t\t\tbuf.add(s.substr(offset));\r\n\t\treturn buf.toString();\r\n\t}\r\n\r\n\tpublic static inline function escape(s:String):String {\r\n\t\treturn (cast s).replace(escapeRe, \"\\\\$&\");\r\n\t}\r\n\r\n\tstatic var escapeRe = new js.lib.RegExp(\"[.*+?^${}()|[\\\\]\\\\\\\\]\", \"g\");\r\n}\r\n\r\n@:native(\"RegExp\")\r\nprivate extern class HaxeRegExp extends js.lib.RegExp {\r\n\tvar m:js.lib.RegExp.RegExpMatch;\r\n\tvar s:String;\r\n}\r\n","/*\r\n * Copyright (C)2005-2019 Haxe Foundation\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a\r\n * copy of this software and associated documentation files (the \"Software\"),\r\n * to deal in the Software without restriction, including without limitation\r\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\r\n * and/or sell copies of the Software, and to permit persons to whom the\r\n * Software is furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\r\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\r\n * DEALINGS IN THE SOFTWARE.\r\n */\r\n@:noDoc\r\nclass HxOverrides {\r\n\tstatic function dateStr(date:Date):String {\r\n\t\tvar m = date.getMonth() + 1;\r\n\t\tvar d = date.getDate();\r\n\t\tvar h = date.getHours();\r\n\t\tvar mi = date.getMinutes();\r\n\t\tvar s = date.getSeconds();\r\n\t\treturn date.getFullYear() + \"-\" + (if (m < 10) \"0\" + m else \"\" + m) + \"-\" + (if (d < 10) \"0\" + d else \"\" + d) + \" \"\r\n\t\t\t+ (if (h < 10) \"0\" + h else \"\" + h) + \":\" + (if (mi < 10) \"0\" + mi else \"\" + mi) + \":\" + (if (s < 10) \"0\" + s else \"\" + s);\r\n\t}\r\n\r\n\tstatic function strDate(s:String):Date {\r\n\t\tswitch (s.length) {\r\n\t\t\tcase 8: // hh:mm:ss\r\n\t\t\t\tvar k = s.split(\":\");\r\n\t\t\t\tvar d = js.Syntax.construct(Date);\r\n\t\t\t\t(cast d)[cast \"setTime\"](0);\r\n\t\t\t\t(cast d)[cast \"setUTCHours\"](k[0]);\r\n\t\t\t\t(cast d)[cast \"setUTCMinutes\"](k[1]);\r\n\t\t\t\t(cast d)[cast \"setUTCSeconds\"](k[2]);\r\n\t\t\t\treturn d;\r\n\t\t\tcase 10: // YYYY-MM-DD\r\n\t\t\t\tvar k = s.split(\"-\");\r\n\t\t\t\treturn new Date(cast k[0], (cast k[1]) - 1, cast k[2], 0, 0, 0);\r\n\t\t\tcase 19: // YYYY-MM-DD hh:mm:ss\r\n\t\t\t\tvar k = s.split(\" \");\r\n\t\t\t\tvar y = k[0].split(\"-\");\r\n\t\t\t\tvar t = k[1].split(\":\");\r\n\t\t\t\treturn new Date(cast y[0], (cast y[1]) - 1, cast y[2], cast t[0], cast t[1], cast t[2]);\r\n\t\t\tdefault:\r\n\t\t\t\tthrow \"Invalid date format : \" + s;\r\n\t\t}\r\n\t}\r\n\r\n\t@:pure\r\n\tstatic function cca(s:String, index:Int):Null<Int> {\r\n\t\tvar x = (cast s).charCodeAt(index);\r\n\t\tif (x != x) // fast isNaN\r\n\t\t\treturn js.Lib.undefined; // isNaN will still return true\r\n\t\treturn x;\r\n\t}\r\n\r\n\t@:pure\r\n\tstatic function substr(s:String, pos:Int, ?len:Int):String {\r\n\t\tif (len == null) {\r\n\t\t\tlen = s.length;\r\n\t\t} else if (len < 0) {\r\n\t\t\tif (pos == 0)\r\n\t\t\t\tlen = s.length + len;\r\n\t\t\telse\r\n\t\t\t\treturn \"\";\r\n\t\t}\r\n\r\n\t\t#if (js_es < 5)\r\n\t\tif (pos < 0) {\r\n\t\t\tpos = s.length + pos;\r\n\t\t\tif (pos < 0)\r\n\t\t\t\tpos = 0;\r\n\t\t}\r\n\t\t#end\r\n\r\n\t\treturn (cast s).substr(pos, len);\r\n\t}\r\n\r\n\t@:pure\r\n\tstatic function indexOf<T>(a:Array<T>, obj:T, i:Int) {\r\n\t\tvar len = a.length;\r\n\t\tif (i < 0) {\r\n\t\t\ti += len;\r\n\t\t\tif (i < 0)\r\n\t\t\t\ti = 0;\r\n\t\t}\r\n\t\twhile (i < len) {\r\n\t\t\tif (js.Syntax.strictEq(a[i], obj))\r\n\t\t\t\treturn i;\r\n\t\t\ti++;\r\n\t\t}\r\n\t\treturn -1;\r\n\t}\r\n\r\n\t@:pure\r\n\tstatic function lastIndexOf<T>(a:Array<T>, obj:T, i:Int) {\r\n\t\tvar len = a.length;\r\n\t\tif (i >= len)\r\n\t\t\ti = len - 1;\r\n\t\telse if (i < 0)\r\n\t\t\ti += len;\r\n\t\twhile (i >= 0) {\r\n\t\t\tif (js.Syntax.strictEq(a[i], obj))\r\n\t\t\t\treturn i;\r\n\t\t\ti--;\r\n\t\t}\r\n\t\treturn -1;\r\n\t}\r\n\r\n\tstatic function remove<T>(a:Array<T>, obj:T) {\r\n\t\tvar i = a.indexOf(obj);\r\n\t\tif (i == -1)\r\n\t\t\treturn false;\r\n\t\ta.splice(i, 1);\r\n\t\treturn true;\r\n\t}\r\n\r\n\t@:pure\r\n\tstatic function iter<T>(a:Array<T>):Iterator<T>\r\n\t\tuntyped {\r\n\t\t\treturn {\r\n\t\t\t\tcur: 0,\r\n\t\t\t\tarr: a,\r\n\t\t\t\thasNext: function() {\r\n\t\t\t\t\treturn __this__.cur < __this__.arr.length;\r\n\t\t\t\t},\r\n\t\t\t\tnext: function() {\r\n\t\t\t\t\treturn __this__.arr[__this__.cur++];\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t}\r\n\r\n\tstatic function __init__()\r\n\t\tuntyped {\r\n\t\t\t#if (js_es < 5)\r\n\t\t\t__feature__('HxOverrides.indexOf',\r\n\t\t\t\tif (Array.prototype.indexOf) __js__(\"HxOverrides\").indexOf = function(a, o, i) return Array.prototype.indexOf.call(a, o, i));\r\n\t\t\t__feature__('HxOverrides.lastIndexOf',\r\n\t\t\t\tif (Array.prototype.lastIndexOf) __js__(\"HxOverrides\").lastIndexOf = function(a, o, i) return Array.prototype.lastIndexOf.call(a, o, i));\r\n\t\t\t#end\r\n\t\t}\r\n}\r\n","/*\r\n * Copyright (C)2005-2019 Haxe Foundation\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a\r\n * copy of this software and associated documentation files (the \"Software\"),\r\n * to deal in the Software without restriction, including without limitation\r\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\r\n * and/or sell copies of the Software, and to permit persons to whom the\r\n * Software is furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\r\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\r\n * DEALINGS IN THE SOFTWARE.\r\n */\r\n@:coreApi class Reflect {\r\n\t@:pure\r\n\tpublic inline static function hasField(o:Dynamic, field:String):Bool {\r\n\t\treturn js.lib.Object.prototype.hasOwnProperty.call(o, field);\r\n\t}\r\n\r\n\t@:pure\r\n\tpublic static function field(o:Dynamic, field:String):Dynamic {\r\n\t\ttry\r\n\t\t\treturn o[cast field]\r\n\t\tcatch (e:Dynamic)\r\n\t\t\treturn null;\r\n\t}\r\n\r\n\tpublic inline static function setField(o:Dynamic, field:String, value:Dynamic):Void {\r\n\t\to[cast field] = value;\r\n\t}\r\n\r\n\tpublic static function getProperty(o:Dynamic, field:String):Dynamic\r\n\t\tuntyped {\r\n\t\t\tvar tmp;\r\n\t\t\treturn if (o == null) __define_feature__(\"Reflect.getProperty\",\r\n\t\t\t\tnull) else if (o.__properties__ && (tmp = o.__properties__[\"get_\" + field])) o[tmp]() else o[field];\r\n\t\t}\r\n\r\n\tpublic static function setProperty(o:Dynamic, field:String, value:Dynamic):Void\r\n\t\tuntyped {\r\n\t\t\tvar tmp;\r\n\t\t\tif (o.__properties__ && (tmp = o.__properties__[\"set_\" + field]))\r\n\t\t\t\to[tmp](value)\r\n\t\t\telse\r\n\t\t\t\to[field] = __define_feature__(\"Reflect.setProperty\", value);\r\n\t\t}\r\n\r\n\tpublic inline static function callMethod(o:Dynamic, func:haxe.Constraints.Function, args:Array<Dynamic>):Dynamic {\r\n\t\treturn (cast func : js.lib.Function).apply(o, args);\r\n\t}\r\n\r\n\tpublic static function fields(o:Dynamic):Array<String> {\r\n\t\tvar a = [];\r\n\t\tif (o != null)\r\n\t\t\tuntyped {\r\n\t\t\t\tvar hasOwnProperty = js.lib.Object.prototype.hasOwnProperty;\r\n\t\t\t\t__js__(\"for( var f in o ) {\");\r\n\t\t\t\tif (f != \"__id__\" && f != \"hx__closures__\" && hasOwnProperty.call(o, f))\r\n\t\t\t\t\ta.push(f);\r\n\t\t\t\t__js__(\"}\");\r\n\t\t\t}\r\n\t\treturn a;\r\n\t}\r\n\r\n\t@:access(js.Boot)\r\n\tpublic static function isFunction(f:Dynamic):Bool {\r\n\t\treturn js.Syntax.typeof(f) == \"function\" && !(js.Boot.isClass(f) || js.Boot.isEnum(f));\r\n\t}\r\n\r\n\tpublic static function compare<T>(a:T, b:T):Int {\r\n\t\treturn (a == b) ? 0 : (((cast a) > (cast b)) ? 1 : -1);\r\n\t}\r\n\r\n\tpublic static function compareMethods(f1:Dynamic, f2:Dynamic):Bool {\r\n\t\tif (f1 == f2)\r\n\t\t\treturn true;\r\n\t\tif (!isFunction(f1) || !isFunction(f2))\r\n\t\t\treturn false;\r\n\t\treturn f1.scope == f2.scope && f1.method == f2.method && f1.method != null;\r\n\t}\r\n\r\n\t@:access(js.Boot)\r\n\tpublic static function isObject(v:Dynamic):Bool {\r\n\t\tif (v == null)\r\n\t\t\treturn false;\r\n\t\tvar t = js.Syntax.typeof(v);\r\n\t\treturn (t == \"string\" || (t == \"object\" && v.__enum__ == null))\r\n\t\t\t|| (t == \"function\" && (js.Boot.isClass(v) || js.Boot.isEnum(v)) != null);\r\n\t}\r\n\r\n\tpublic static function isEnumValue(v:Dynamic):Bool {\r\n\t\treturn v != null && v.__enum__ != null;\r\n\t}\r\n\r\n\tpublic static function deleteField(o:Dynamic, field:String):Bool {\r\n\t\tif (!hasField(o, field))\r\n\t\t\treturn false;\r\n\t\tjs.Syntax.delete(o, field);\r\n\t\treturn true;\r\n\t}\r\n\r\n\tpublic static function copy<T>(o:Null<T>):Null<T> {\r\n\t\tif (o == null)\r\n\t\t\treturn null;\r\n\t\tvar o2:Dynamic = {};\r\n\t\tfor (f in Reflect.fields(o))\r\n\t\t\tReflect.setField(o2, f, Reflect.field(o, f));\r\n\t\treturn o2;\r\n\t}\r\n\r\n\t@:overload(function(f:Array<Dynamic>->Void):Dynamic {})\r\n\tpublic static function makeVarArgs(f:Array<Dynamic>->Dynamic):Dynamic {\r\n\t\treturn function() {\r\n\t\t\tvar a = untyped Array.prototype.slice.call(__js__(\"arguments\"));\r\n\t\t\treturn f(a);\r\n\t\t};\r\n\t}\r\n}\r\n","package no.logic.kha.uix.scene;\r\nimport kha.Color;\r\nimport kha.FastFloat;\r\nimport kha.graphics2.Graphics;\r\nimport no.logic.kha.uix.app.App;\r\nimport no.logic.kha.uix.debug.DebugInspector;\r\nimport no.logic.kha.uix.input.MouseInfo;\r\nimport no.logic.kha.uix.input.MouseManager;\r\nimport no.logic.kha.uix.scene.DisplayObject;\r\nimport no.logic.kha.uix.scene.Sprite.MovieClip;\r\nimport no.logic.kha.uix.scene.layout.Layout;\r\nimport no.logic.kha.uix.scene.uixcomp.UIXGElement;\r\nimport no.logic.kha.uix.types.HistoryFloat;\r\nimport no.logic.kha.uix.types.Object;\r\nimport no.logic.kha.uix.types.Rectangle;\r\nimport no.logic.kha.uix.utils.Convert;\r\nimport no.logic.kha.uix.utils.MathUtils;\r\nimport no.logic.kha.uix.utils.SmoothFloat;\r\n\r\nenum Align\r\n{\r\n\tleft;\r\n\tcenter;\r\n\tright;\r\n\tjustify;\r\n}\r\n\r\nclass DisplayObject\r\n{\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\r\n\t//===================================================================================\r\n\t// Consts \r\n\t//-----------------------------------------------------------------------------------\r\n\t\r\n\t//===================================================================================\r\n\t// Properties \r\n\t//-----------------------------------------------------------------------------------\r\n\r\n\tstatic var instanceCounter\t\t\t\t: Int\t\t\t\t\t= 0;\r\n\t\r\n\tpublic var type\t\t\t\t\t\t\t: String;\r\n\tpublic var uuid\t\t\t\t\t\t\t: String;\r\n\tpublic var name(default, set)\t\t\t: String;\r\n\tpublic var x\t\t\t\t\t\t\t: Float\t\t\t\t\t= 0;\r\n\tpublic var y\t\t\t\t\t\t\t: Float\t\t\t\t\t= 0;\r\n\tpublic var globalX\t\t\t\t\t\t: Null<Float>;\r\n\tpublic var globalY\t\t\t\t\t\t: Null<Float>;\r\n\tpublic var width\t\t\t\t\t\t: Float\t\t\t\t\t= 0;\r\n\tpublic var height\t\t\t\t\t\t: Float\t\t\t\t\t= 0;\r\n\tpublic var scale\t\t\t\t\t\t: Float\t\t\t\t\t= 1;\t\r\n\tpublic var scaleX\t\t\t\t\t\t: Float\t\t\t\t\t= 1;\t\r\n\tpublic var scaleY\t\t\t\t\t\t: Float\t\t\t\t\t= 1;\t\r\n\tpublic var alpha\t\t\t\t\t\t: Float\t\t\t\t\t= 1;\r\n\tpublic var rotation\t\t\t\t\t\t: Float\t\t\t\t\t= 0;\r\n\tpublic var centerx\t\t\t\t\t\t: Float\t\t\t\t\t= 0;\r\n\tpublic var centery\t\t\t\t\t\t: Float\t\t\t\t\t= 0;\r\n\tpublic var prevX\t\t\t\t\t\t: Float\t\t\t\t\t= 0;\r\n\tpublic var prevY\t\t\t\t\t\t: Float\t\t\t\t\t= 0;\r\n\tpublic var dx\t\t\t\t\t\t\t: Float\t\t\t\t\t= 0;\r\n\tpublic var dy\t\t\t\t\t\t\t: Float\t\t\t\t\t= 0;\r\n\tpublic var sx\t\t\t\t\t\t\t: Float\t\t\t\t\t= 0;\r\n\tpublic var sy\t\t\t\t\t\t\t: Float\t\t\t\t\t= 0;\r\n\tpublic var velocityX\t\t\t\t\t: Float\t\t\t\t\t= 0;\r\n\tpublic var velocityY\t\t\t\t\t: Float\t\t\t\t\t= 0;\r\n\tpublic var movementX\t\t\t\t\t: SmoothFloat\t\t\t= new SmoothFloat(5);\r\n\tpublic var movementY\t\t\t\t\t: SmoothFloat\t\t\t= new SmoothFloat(5);\r\n\tpublic var velocityHistoryX\t\t\t\t: HistoryFloat;\r\n\tpublic var velocityHistoryY\t\t\t\t: HistoryFloat;\r\n\tpublic var uixData\t\t\t\t\t\t: Object;\r\n\tpublic var uixElement\t\t\t\t\t: UIXGElement;\r\n\t\r\n\tpublic var libraryItemName(default, set)\t\t\t\t: String;\r\n\t\r\n\tpublic var visible\t\t\t\t\t\t: Bool\t\t\t\t\t= true;\r\n\tpublic var clipping\t\t\t\t\t\t: Bool\t\t\t\t\t= true;\r\n\tpublic var autoPlay\t\t\t\t\t\t: Bool\t\t\t\t\t= true;\r\n\t//public var isPlaying\t\t\t\t\t: Bool;\r\n\tpublic var isDragging\t\t\t\t\t: Bool\t\t\t\t\t= false;\r\n\tpublic var useInertia(default, set)\t\t: Bool;\r\n\tpublic var damping\t\t\t\t\t\t: Float\t\t\t\t\t= 0.96;\r\n\tpublic var motionSmoothing(default, set): Int\t\t\t\t\t= 0;\r\n\tpublic var frameRate\t\t\t\t\t: Int;\r\n\t\r\n\tpublic var numChildren(get, null) \t\t: Int;\r\n\tpublic var isMouseOver(get, null) \t\t: Bool;\r\n\t\r\n\tpublic var stageX(get, null)\t\t\t: Int;\r\n\tpublic var stageY(get, null)\t\t\t: Int;\r\n\tpublic var mouseX(get, null)\t\t\t: Int;\r\n\tpublic var mouseY(get, null)\t\t\t: Int;\r\n\tpublic var children\t\t\t\t\t\t: Array<DisplayObject>;\r\n\tpublic var _\t\t\t\t\t\t\t: Object;\r\n\tpublic var parent(default, set)\t\t\t: DisplayObject;\r\n\tpublic var disposeOnRemove\t\t\t\t: Bool;\r\n\tpublic var autoTransition\t\t\t\t: Bool\t\t\t\t\t= false;\r\n\tpublic var isDisposed\t\t\t\t\t: Bool\t\t\t\t\t= false;\r\n\tpublic var isDirty\t\t\t\t\t\t: Bool\t\t\t\t\t= false;\r\n\tpublic var explicitSize\t\t\t\t\t: Bool\t\t\t\t\t= false;\r\n\tpublic var isComponentPart\t\t\t\t: Bool\t\t\t\t\t= false;\r\n\tpublic var style\t\t\t\t\t\t: String;\r\n\tpublic var layoutHandler\t\t\t\t: Layout\t\t\t\t= new Layout();\r\n\tpublic var tintMultiplier\t\t\t\t: Null<Float>;\r\n\tpublic var tintColor\t\t\t\t\t: Null<Color>;\r\n\t\r\n\tpublic var variable(default, set)\t\t: String;\r\n\tpublic var asset(default, set)\t\t\t: String;\r\n\t\r\n\t@:isVar\r\n\tpublic var layout(get, set)\t\t\t\t: LayoutData;\r\n\t\r\n\t@:isVar \r\n\tpublic var rect(get, set)\t\t\t\t: Rectangle;\r\n\r\n\t// Computed values used for actual drawing\r\n\t\r\n\tvar _smoothX\t\t\t\t\t\t\t: SmoothFloat;\r\n\tvar _smoothY\t\t\t\t\t\t\t: SmoothFloat;\r\n\tvar _x\t\t\t\t\t\t\t\t\t: Float\t\t\t\t\t= 0;\r\n\tvar _y\t\t\t\t\t\t\t\t\t: Float\t\t\t\t\t= 0;\r\n\tvar _width\t\t\t\t\t\t\t\t: Float\t\t\t\t\t= 0;\r\n\tvar _height\t\t\t\t\t\t\t\t: Float\t\t\t\t\t= 0;\r\n\tvar _alpha\t\t\t\t\t\t\t\t: Float\t\t\t\t\t= 1;\r\n\r\n\t//===================================================================================\r\n\t// Declarations \r\n\t//-----------------------------------------------------------------------------------\r\n\t\r\n\tfunction dpRenderComplete()\t{};\r\n\t\r\n\t//===================================================================================\r\n\t// Variables \r\n\t//-----------------------------------------------------------------------------------\t\t\r\n\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\r\n\tpublic function new(?data:Dynamic)\r\n\t{\r\n\t\tif (data != null)\r\n\t\t\tsetPropsFromData(data);\r\n\t\t\r\n\t\tif (this.name == null)\r\n\t\t\tthis.name = \"Instance\" + (instanceCounter++);\r\n\t\t\t\r\n\t\tchildren = [];\r\n\t\t_ = {};\r\n\t\t//tintColor = Color.Yellow;\r\n\t\t//tintMultiplier = 0.5;\r\n\r\n\t\tupdate();\r\n\t}\r\n\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\t\r\n\tpublic function addChild(displayObject:DisplayObject,?name:String):DisplayObject\r\n\t{\r\n\t\tif (displayObject == null)\r\n\t\t\treturn null;\r\n\t\t\t\r\n\t\tif (name != null)\r\n\t\t\tdisplayObject.name = name;\r\n\t\t\t\r\n\t\tvar mc:MovieClip = cast displayObject;\r\n\t\tif (mc != null && mc.timeline!=null)\r\n\t\t{\r\n\t\t\t//trace(displayObject.name);\r\n\t\t}\r\n\t\t\r\n\t\tif (displayObject.parent != this)\r\n\t\t{\r\n\t\t\tdisplayObject.parent = this;\r\n\t\t\tchildren.push(displayObject);\r\n\t\t\t_[displayObject.name] = displayObject;\r\n\t\t}\r\n\t\treturn displayObject;\r\n\t}\r\n\r\n\tpublic function addChildAt(displayObject:DisplayObject, ?index:Int = 0, ?name:String):DisplayObject\r\n\t{\r\n\t\tif (displayObject == null)\r\n\t\t\treturn null;\r\n\t\t\t\r\n\t\tif (name != null)\r\n\t\t\tdisplayObject.name = name;\r\n\t\t\t\r\n\t\tif (displayObject.parent != this)\r\n\t\t{\r\n\t\t\tdisplayObject.parent = this;\r\n\t\t\tchildren.insert(index, displayObject);\r\n\t\t\t_[displayObject.name] = displayObject;\r\n\t\t}\r\n\t\treturn displayObject;\r\n\t}\t\r\n\t\r\n\t//public function addChildForcedZ(displayObject:DisplayObject, ?index:Int = 0, ?name:String):DisplayObject\r\n\t//{\r\n\t\t//if (displayObject == null)\r\n\t\t\t//return null;\r\n\t\t\t//\r\n\t\t//if (name != null)\r\n\t\t\t//displayObject.name = name;\r\n\t\t\t//\r\n\t\t//if (displayObject.parent != this)\r\n\t\t//{\r\n\t\t\t//displayObject.parent = this;\r\n\t\t\t//children[index]=displayObject;\r\n\t\t\t//_[displayObject.name] = displayObject;\r\n\t\t//}\r\n\t\t//children = children.filter( function(dp:DisplayObject):Bool{ return dp != null; } );\r\n\t\t//return displayObject;\r\n\t//}\r\n\t//\r\n\tpublic function tx(childName:String):Text return cast getChildByName(childName);\r\n\tpublic function bm(childName:String):Bitmap return cast getChildByName(childName);\r\n\tpublic function sp(childName:String):Sprite return cast getChildByName(childName);\r\n\tpublic function sh(childName:String):Shape return cast getChildByName(childName);\r\n\t//public function c(childName:String):DisplayObject return getChildByName(childName);\r\n\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\t\r\n\tpublic function removeChild(displayObject:DisplayObject):Bool\r\n\t{\r\n\t\tvar removed:Bool = children.remove(displayObject);\r\n\t\tif (removed)\r\n\t\t{\r\n\t\t\tdisplayObject.parent = null;\r\n\t\t\tif (displayObject.disposeOnRemove)\r\n\t\t\t{\r\n\t\t\t\tdisplayObject.dispose();\r\n\t\t\t\tdisplayObject = null;\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tdisplayObject.onRemovedFromStage();\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn removed;\r\n\t}\r\n\r\n\tpublic function removeChildByUUID(uuid:String):Bool \r\n\t{\r\n\t\tif (uuid == null)\r\n\t\t\treturn false;\r\n\t\t\t\r\n\t\tfor (c in children) \r\n\t\t{\r\n\t\t\tif (c!=null && c.uuid == uuid)\r\n\t\t\t{\r\n\t\t\t\tvar removed:Bool = children.remove(c);\r\n\t\t\t\tif (removed)\r\n\t\t\t\t{\r\n\t\t\t\t\tc.parent = null;\r\n\t\t\t\t\tif (c.disposeOnRemove)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tc.dispose();\r\n\t\t\t\t\t\tc = null;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tc.onRemovedFromStage();\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\t\t\t\treturn removed;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\r\n\tpublic function getChildByName(childName:String,?recursive:Bool = false):DisplayObject\r\n\t{\r\n\t\tfor (c in children) \r\n\t\t{\r\n\t\t\tif (c.name == childName)\r\n\t\t\t{\r\n\t\t\t\treturn c;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (recursive)\r\n\t\t{\r\n\t\t\tfor (c in children) \r\n\t\t\t{\r\n\t\t\t\tvar fd:DisplayObject = getCBNR(childName, c);\r\n\t\t\t\tif (fd != null)\r\n\t\t\t\t\treturn fd;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\t\r\n\tpublic function getChildByUUID(uuid:String,?recursive:Bool = false):DisplayObject \r\n\t{\r\n\t\tfor (c in children) \r\n\t\t{\r\n\t\t\tif (c.uuid == uuid)\r\n\t\t\t{\r\n\t\t\t\treturn c;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\t\r\n\tfunction getCBNR(childName:String, child:DisplayObject):DisplayObject \r\n\t{\r\n\t\tfor (c in child.children) \r\n\t\t{\r\n\t\t\tif (childName == c.name)\r\n\t\t\t\treturn c;\r\n\t\t\t\t\r\n\t\t\tvar fd:DisplayObject = getCBNR(childName, c);\r\n\t\t\tif (fd != null)\r\n\t\t\t\treturn fd;\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\t\r\n\tpublic function getNumChildren(recursive:Bool = false):Int\r\n\t{\r\n\t\treturn countChildren(this,recursive);\r\n\t}\r\n\t\r\n\tfunction countChildren(dispObj:DisplayObject, recursive:Bool):Int \r\n\t{\r\n\t\tvar nc = 0;\r\n\t\tif (dispObj != null)\r\n\t\t{\r\n\t\t\tfor (c in dispObj.children) \r\n\t\t\t{\r\n\t\t\t\tnc++;\r\n\t\t\t\tif (recursive)\r\n\t\t\t\t\tnc += countChildren(c, recursive);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn nc;\r\n\t}\r\n\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\t\r\n\tpublic function setCenter(x:Float = 0.5, y:Float = 0.5)\r\n\t{\r\n\t\tcenterx = x;\r\n\t\tcentery = y;\r\n\t}\r\n\t\r\n\tpublic function setPos(x:Float, y:Float)\r\n\t{\r\n\t\tthis.x = x;\r\n\t\tthis.y = y;\r\n\t}\r\n\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\t\r\n\tpublic function update()\r\n\t{\r\n\t\trotation = rotation % 360;\r\n\r\n\t\t//if (scale != 1)\r\n\t\t//{\r\n\t\t\t//scaleX = scale;\r\n\t\t\t//scaleY = scale;\r\n\t\t//}\r\n\t\t\r\n\t\tsetLayout();\r\n\t\t//if (layoutHandler._x!=null)\r\n\t\t\t//_x = layoutHandler._x;\r\n\t\t//else\r\n\t\t\t//_x = x;\r\n\t\t//if (layoutHandler._y!=null)\r\n\t\t\t//_y = layoutHandler._y;\r\n\t\t//else\r\n\t\t\t//_y = y;\r\n\t\t\t\r\n\t\tfor (c in children) \r\n\t\t\tif (c!=null)\r\n\t\t\t\tc.update();\r\n\t\t\t\r\n\t\tif (useInertia && !isDragging)\r\n\t\t{\r\n\t\t\tvelocityX *= damping;\r\n\t\t\tvelocityY *= damping;\r\n\t\t}\r\n\t\tif (uixElement != null)\r\n\t\t\tuixElement.update();\r\n\t}\r\n\t\r\n\tfunction setLayout()\r\n\t{\r\n\t\t_x = x;\r\n\t\t_y = y;\r\n\t\tif (!explicitSize)\r\n\t\t{\r\n\t\t\tvar r:Rectangle = getNestedDimension(this,new Rectangle());\r\n\t\t\t_width = r.width;\r\n\t\t\t_height = r.height;\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t_width = width;\r\n\t\t\t_height = height;\r\n\t\t}\r\n\t\t//if (name == \"ImgX\")\r\n\t\t//{\r\n\t\t\t//trace(_x, _y, _width, _height);\r\n\t\t//}\r\n\r\n\t\tif (parent != null)\r\n\t\t{\r\n\t\t\tif (layoutHandler != null)\r\n\t\t\t{\r\n\t\t\t\tlayoutHandler.update(this);\r\n\t\t\t\tif (layoutHandler._x != null)\r\n\t\t\t\t\t_x = layoutHandler._x;\r\n\t\t\t\tif (layoutHandler._y != null)\r\n\t\t\t\t\t_y = layoutHandler._y;\r\n\t\t\t\tif (layoutHandler._width != null)\r\n\t\t\t\t\t_width = layoutHandler._width;\r\n\t\t\t\tif (layoutHandler._height != null)\r\n\t\t\t\t\t_height = layoutHandler._height;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tglobalX = parent.globalX+_x;\r\n\t\t\tglobalY = parent.globalY+_y;\r\n\t\t}\r\n\t}\r\n\t\r\n\tpublic function render(g:Graphics) \r\n\t{\r\n\t\tif (!Std.is(this,Stage))\r\n\t\t{\r\n\t\t\tif (globalX == null || globalY==null)\r\n\t\t\t\tsetLayout();\r\n\t\t\t\r\n\t\t\tif (useInertia && !isDragging)\r\n\t\t\t{\r\n\t\t\t\tif (!Std.is(x, String) && _smoothX==null)\r\n\t\t\t\t\tx = x + velocityX;\r\n\t\t\t\tif (!Std.is(y, String) && _smoothY==null)\r\n\t\t\t\t\ty = y + velocityY;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t//if (y > 0)\r\n\t\t\t\t//y = 0;\r\n\t\t\t//if (y < (App.appHeight - height))\r\n\t\t\t\t//y = App.appHeight - height;\r\n\t\t\t\r\n/*\t\t\tvar _x = parent != null ? Convert.toFloat(x, parent.width) : Convert.toFloat(x);\r\n\t\t\tvar _y = parent != null ? Convert.toFloat(y, parent.height) : Convert.toFloat(y);\r\n\t\t\tvar _width = parent != null ? Convert.toFloat(width, parent.width) : Convert.toFloat(width);\r\n\t\t\tvar _height = parent != null ? Convert.toFloat(height, parent.height) : Convert.toFloat(height);*/\r\n\t\t\tdx = _x - prevX;\r\n\t\t\tdy = _y - prevY;\r\n\t\t\t\r\n\t\t\tif (isDragging)\r\n\t\t\t{\r\n\t\t\t\t//if (velocityHistoryX!=null)\r\n\t\t\t\t\t//velocityX = velocityHistoryX.set(dx);\r\n\t\t\t\t//if (velocityHistoryY!=null)\r\n\t\t\t\t\t//velocityY = velocityHistoryY.set(dy);\r\n\t\t\t\t\t\r\n\t\t\t\tmovementY.add(dy);// velocityHistoryY.set(dy));\r\n\t\t\t\tvelocityY = movementY.value;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t//_width = 978;// Convert.toFloat(\"50%\", parent.width);\r\n\t\t\t//trace(_x+\":\"+_y+\"  \"+_width+\"x\"+_height);\r\n\t\t\t\r\n\t\t\t//var _y = Convert.toFloat(y);\r\n\t\t\t//var _width = Convert.toFloat(width);\r\n\t\t\t//var _height = Convert.toFloat(height);\r\n\t\t\r\n\t\t\t//trace(parent.width+\" - \"+Convert.toFloat(\"50%\", parent.width));\r\n\t\t\t\r\n\t\t\tif (parent != null)\r\n\t\t\t{\r\n\t\t\t\t//_alpha = parent.alpha - (1-alpha);\r\n\t\t\t\t_alpha = parent._alpha*alpha;\r\n\t\t\t\t//_alpha = 1;\r\n\t\t\t}\t\t\t\r\n\t\t\t\r\n\t\t\tif (_smoothX != null)\r\n\t\t\t\t_x = _smoothX.add(_x);\r\n\t\t\tif (_smoothX != null)\r\n\t\t\t\t_y = _smoothY.add(_y);\r\n\t\t\t\r\n\t\t\t//if (visible)\r\n\t\t\t//{\r\n\t\t\t\t\r\n\t\t\t\tif (rotation != 0)\r\n\t\t\t\t\tg.pushRotation(MathUtils.degreesToRadians(rotation), _width * centerx, _height * centery);\r\n\r\n\t\t\t\tif (!(_x==0&&_y==0))\r\n\t\t\t\t\tg.pushTranslation((_x * (1 / scaleX)) - (_width * centerx), (_y * (1 / scaleY)) - (_height * centery));\r\n\t\t\t\t\t\r\n\t\t\t\tif (scaleX != 1 || scaleY != 1)\r\n\t\t\t\t\tg.scale(scaleX, scaleY);\r\n\t\t\t\t\t\r\n\t\t\t\t//if (alpha!=null)\r\n\t\t\t\t\t//g.pushOpacity(alpha);\r\n\t\t\t\t\t\r\n\t\t\t\t//trace(globalX, globalY, _width, _height);\r\n\t\t\t\t\t\r\n\t\t\t\tif (clipping && _width>0 && _height>0)\r\n\t\t\t\t\tg.scissor(cast globalX, cast globalY, cast _width, cast _height);\r\n\t\t\t\t\t\r\n\t\t\t\tdpRenderComplete();\r\n\t\t\t\t\r\n\t\t\t\tif (clipping)\r\n\t\t\t\t\tg.disableScissor();\r\n\t\t\t\t\r\n\t\t\t\tfor (c in children) \r\n\t\t\t\t\tif (c!=null)\r\n\t\t\t\t\t\tc.render(g);\r\n\r\n\t\t\t\t//if (alpha!=null)\r\n\t\t\t\t\t//g.popOpacity();\r\n\r\n\t\t\t\tif (scaleX != 1 || scaleY != 1)\r\n\t\t\t\t\tg.scale(1 / scaleX, 1 / scaleY);\r\n\t\t\t\t\t\r\n\t\t\t\tif (!(_x==0&&_y==0))\r\n\t\t\t\t\tg.popTransformation();\r\n\t\t\t\t\t\r\n\t\t\t\tif (rotation != 0)\r\n\t\t\t\t\tg.popTransformation();\r\n\t\t\t\t\r\n\t\t\t//}\r\n\t\t\t\r\n\t\t\tprevX = _x;\r\n\t\t\tprevY = _y;\r\n\t\t}\r\n\t\telse if (visible)\r\n\t\t{\r\n\t\t\t\t\r\n\t\t\tif (clipping)\r\n\t\t\t\tg.scissor(0,0,App.appWidth,App.appHeight);\r\n\t\t\t\r\n\t\t\tdpRenderComplete();\r\n\t\t\t\r\n\t\t\tfor (c in children) \r\n\t\t\t\tc.render(g);\r\n\r\n\t\t\tif (clipping)\r\n\t\t\t\tg.disableScissor();\t\t\t\r\n\t\t}\r\n\t}\r\n\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\t\r\n\t//function findNestedDimenstions():Rectangle\r\n\t//{\r\n\t\t//var r:Rectangle = getNestedDimension(this, new Rectangle());\r\n\t\t//return r;\r\n\t//}\r\n\t\r\n\tfunction getNestedDimension(t:DisplayObject,r:Rectangle):Rectangle\r\n\t{\r\n\t\t//if (t.name != \"ImgX\")\r\n\t\t\t//return r;\r\n\t\t\t\r\n\t\tvar cx:Float = 0;\r\n\t\tvar cy:Float = 0;\r\n\t\tvar cw:Float = _width;\r\n\t\tvar ch:Float = _height;\r\n\t\t//if (t.children.length > 0)\r\n\t\t//{\r\n\t\t\tfor (c in t.children) \r\n\t\t\t{\r\n\t\t\t\t//var rn = getNestedDimension(c, r);\r\n\t\t\t\t//var rn:Rectangle = new Rectangle(@:privateAccess c.x, @:privateAccess c.y, @:privateAccess c.width, @:privateAccess c.height);\r\n\t\t\t\t//trace(rn);\r\n\t\t\t\t\r\n\t\t\t\tvar mx = c.x + c.width;\r\n\t\t\t\tvar my = c.y + c.height;\r\n\t\t\t\t\r\n\t\t\t\t//if (@:privateAccess c.width > cw)\r\n\t\t\t\t\t//cw = @:privateAccess c.width;\r\n\t\t\t\t//if (@:privateAccess c.height > ch)\r\n\t\t\t\t\t//ch = @:privateAccess c.height;\r\n\t\t\t\t//if (@:privateAccess c.x > cx)\r\n\t\t\t\t\t//cx = @:privateAccess c.x;\r\n\t\t\t\t//if (@:privateAccess c.y > cy)\r\n\t\t\t\t\t//cy = @:privateAccess c.y;\r\n\t\t\t\t//if (rn.x > cx)\r\n\t\t\t\t\t//cx = rn.x;\r\n\t\t\t\t//if (rn.y > cy)\r\n\t\t\t\t\t//cy = rn.y;\r\n\t\t\t\t\t\r\n\t\t\t\tif (mx > cw)\r\n\t\t\t\t\tcw = mx;\r\n\t\t\t\tif (my > ch)\r\n\t\t\t\t\tch = my;\r\n\t\t\t}\r\n\t\t//}\r\n\t\t\r\n\t\t//r.x += cx+x;\r\n\t\t//r.y += cy+y;\r\n\t\t//if (cx > r.x)\r\n\t\t\t//r.x = 1;\r\n\t\t//if (cy > r.y)\r\n\t\t\t//r.y = 1;\r\n\t\tif (cw > r.width)\r\n\t\t\tr.width = cw;\r\n\t\tif (ch > r.height)\r\n\t\t\tr.height = ch;\r\n\t\t//if (r.width<_width)\r\n\t\t\t//r.width =_width;\r\n\t\t//if (r.height < _height)\r\n\t\t\t//r.height = _height;\r\n\t\t\t\r\n\t\t//if (t.name == \"ImgX\")\r\n\t\t//{\r\n\t\t\t//for (cc in t.children)\r\n\t\t\t\t//if (cc.type!=null)\r\n\t\t\t\t\t//trace(cc.width);\r\n\t\t//}\r\n\t\t\t//\r\n\t\t\t\r\n\t\treturn r;\r\n\t}\r\n\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\t\r\n\tpublic function setPropsFromData(data:Null<Dynamic>)\r\n\t{\r\n\t\tif (data == null)\r\n\t\t\treturn;\r\n\t\t\t\r\n\t\tfor (field in Reflect.fields(data))\r\n\t\t{\r\n\t\t\t//Type.getClassFields(\r\n\r\n\t\t\t// need to find types!!\r\n\t\t\t//if (Reflect.hasField(this, field)\r\n\t\t\t//{\r\n\t\t\t\tif (field == \"parent\")// || field == \"parentFrame\" || field == \"uuid\")\r\n\t\t\t\t\tthis.parent = Reflect.field(data, field);\r\n\t\t\t\telse if (field == \"timeline\")// || field == \"parentFrame\" || field == \"uuid\")\r\n\t\t\t\t{}\r\n\t\t\t\telse if (field == \"asset\" || field == \"bindAsset\")\r\n\t\t\t\t\tthis.asset = Reflect.field(data, \"asset\");\r\n\t\t\t\telse if (field == \"variable\" || field == \"bindVar\")\r\n\t\t\t\t\tthis.variable = Reflect.field(data, \"variable\");\r\n\t\t\t\telse if (field == \"name\")\r\n\t\t\t\t\tthis.name = Reflect.field(data, field);\r\n\t\t\t\telse if (field == \"useInertia\")\r\n\t\t\t\t\tthis.useInertia = Reflect.field(data, field);\r\n\t\t\t\telse if (field == \"motionSmoothing\")\r\n\t\t\t\t\tthis.motionSmoothing = Reflect.field(data, field);\r\n\t\t\t\telse if (field == \"layout\")\r\n\t\t\t\t\tthis.layout = Reflect.field(data, field);\r\n\t\t\t\telse if (field == \"alpha\")\r\n\t\t\t\t\tthis.alpha = Reflect.field(data, field);\r\n\t\t\t\telse\r\n\t\t\t\t\tReflect.setProperty(this, field, Reflect.field(data, field));\r\n\t\t\t//}\r\n\t\t}\r\n\t}\r\n\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\t\r\n\tfunction onBindAsset(value:Any) {}\r\n\tfunction onBindVar(value:Any) {}\r\n\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\t\r\n\tpublic function getVar(varCode:String):Dynamic\r\n\t{\r\n\t\treturn UIX.getVar(varCode);\r\n\t}\r\n\t\r\n\tpublic function getAsset(varCode:String):Dynamic \r\n\t{\r\n\t\treturn UIX.getAsset(varCode);\r\n\t}\r\n\t\r\n\tpublic function setVar(varCode:String,value:Dynamic) \r\n\t{\r\n\t\treturn UIX.setVar(varCode,value);\r\n\t}\r\n\t\r\n\tpublic function hasVar(varCode:String):Bool\r\n\t{\r\n\t\treturn UIX.hasVar(varCode);\r\n\t}\r\n\t\r\n\tpublic function debug(value:Dynamic)\r\n\t{\r\n\t\treturn UIX.c.debug(value);\r\n\t}\r\n\t\r\n\tpublic function log(value:Dynamic)\r\n\t{\r\n\t\treturn DebugInspector.i.log(value);\r\n\t}\r\n\t\r\n\tpublic function warning(value:Dynamic)\r\n\t{\r\n\t\treturn DebugInspector.i.warning(value);\r\n\t}\r\n\t\r\n\tpublic function report(value:Dynamic)\r\n\t{\r\n\t\treturn DebugInspector.i.report(value);\r\n\t}\r\n\t\r\n\tpublic function error(value:Dynamic)\r\n\t{\r\n\t\treturn DebugInspector.i.error(value);\r\n\t}\r\n\t\r\n\tpublic function notfound(value:Dynamic)\r\n\t{\r\n\t\treturn DebugInspector.i.notfound(value);\r\n\t}\r\n\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\r\n\tfunction set_libraryItemName(value:String):String \r\n\t{\r\n\t\treturn libraryItemName = value;\r\n\t}\r\n\t\r\n\tfunction get_rect():Rectangle \r\n\t{\r\n\t\treturn new Rectangle(x,y,width,height);\r\n\t}\r\n\t\r\n\tfunction set_rect(value:Rectangle):Rectangle \r\n\t{\r\n\t\tif (value != null)\r\n\t\t{\r\n\t\t\tif (value.x != null)\r\n\t\t\t\tthis.x = value.x;\r\n\t\t\tif (value.y != null)\r\n\t\t\t\tthis.y = value.y;\r\n\t\t\tif (value.width != null)\r\n\t\t\t\tthis.width = value.width;\r\n\t\t\tif (value.height != null)\r\n\t\t\t\tthis.height = value.height;\r\n\t\t}\r\n\t\treturn rect = value;\r\n\t}\r\n\r\n\tfunction get_numChildren():Int \r\n\t{\r\n\t\treturn children.length;\r\n\t}\r\n\t\r\n\tfunction set_asset(bindCode:String):String \r\n\t{\r\n\t\tif (bindCode != null)\r\n\t\t{\r\n\t\t\tUIX.bindAsset(bindCode, onBindAsset);\r\n\t\t\tonBindAsset(UIX.getAsset(bindCode));\r\n\t\t}\r\n\t\treturn asset = bindCode;\r\n\t}\r\n\t\r\n\tfunction set_variable(bindCode:String):String \r\n\t{\r\n\t\tif (bindCode != null)\r\n\t\t{\r\n\t\t\tUIX.bindVar(bindCode, onBindVar);\r\n\t\t\tonBindVar(UIX.getVar(bindCode));\r\n\t\t}\r\n\t\treturn variable = bindCode;\r\n\t}\r\n\t\r\n\tfunction get_mouseX():Int \r\n\t{\r\n\t\treturn MouseManager.stageX - Math.round(this.globalX);\r\n\t}\r\n\r\n\tfunction get_mouseY():Int \r\n\t{\r\n\t\treturn MouseManager.stageY - Math.round(this.globalY);\r\n\t}\r\n\r\n\tfunction get_stageX():Int \r\n\t{\r\n\t\treturn MouseManager.stageX;\r\n\t}\r\n\r\n\tfunction get_stageY():Int \r\n\t{\r\n\t\treturn MouseManager.stageY;\r\n\t}\r\n\t\r\n\tfunction get_isMouseOver():Bool\r\n\t{\r\n\t\treturn (mouseX >= 0 && mouseY >= 0 && mouseX < this.width && mouseY < this.height);\r\n\t}\r\n\t\r\n\tfunction set_motionSmoothing(value:Int):Int \r\n\t{\r\n\t\tif (value == 0)\r\n\t\t{\r\n\t\t\tif (_smoothX != null)\r\n\t\t\t{\r\n\t\t\t\t_smoothX.dispose();\r\n\t\t\t\t_smoothX = null;\r\n\t\t\t}\r\n\t\t\tif (_smoothY != null)\r\n\t\t\t{\r\n\t\t\t\t_smoothY.dispose();\r\n\t\t\t\t_smoothY = null;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tif (_smoothX == null)\r\n\t\t\t\t_smoothX = new SmoothFloat(value,x);\r\n\t\t\telse\r\n\t\t\t\t_smoothX.setSmoothing(value);\r\n\t\t\t\t\r\n\t\t\tif (_smoothY == null)\r\n\t\t\t\t_smoothY = new SmoothFloat(value,y);\r\n\t\t\telse\r\n\t\t\t\t_smoothY.setSmoothing(value);\r\n\t\t}\r\n\t\treturn motionSmoothing = value;\r\n\t}\r\n\t\r\n\tfunction set_useInertia(value:Bool):Bool \r\n\t{\r\n\t\tif (velocityHistoryX == null)\r\n\t\t\tvelocityHistoryX = new HistoryFloat();\t\r\n\t\t\t\r\n\t\tif (velocityHistoryY == null)\r\n\t\t\tvelocityHistoryY = new HistoryFloat();\r\n\t\treturn useInertia = value;\r\n\t}\r\n\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\r\n\tfunction onAddedToStage()\r\n\t{\r\n\t\tif (uixData != null && uixElement==null)\r\n\t\t\tuixElement = new UIXGElement(uixData, this);\r\n\t}\r\n\r\n\tfunction onRemovedFromStage()\r\n\t{\r\n\t\tif (uixElement != null)\r\n\t\t{\r\n\t\t\tuixElement.dispose();\r\n\t\t\tuixElement = null;\r\n\t\t}\r\n\t}\r\n\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\r\n\tfunction set_name(value:String):String \r\n\t{\r\n\t\tif (_ != null)\r\n\t\t{\r\n\t\t\tif (_.hasOwnProperty(name))\r\n\t\t\t\tReflect.deleteField(_, name);\r\n\t\t\t_[value] = this;\t\t\r\n\t\t}\r\n\t\treturn name = value;\r\n\t}\r\n\t\r\n\tfunction set_parent(value:DisplayObject):DisplayObject \r\n\t{\r\n\t\t//if (value == null)\r\n\t\t\t//return null;\r\n\t\t\t//\r\n\t\t//if (parent == null)\r\n\t\t\t//\r\n\t\t//if (parent!=this)\r\n\t\t//{\r\n\t\t\t//parent.children.push(this);\r\n\t\t\t//parent._[name] = this;\r\n\t\t//}\r\n\t\t\t//\r\n\t\tif (value != parent)\r\n\t\t{\r\n\t\t\tparent = value;\r\n\t\t\tif (value!=null)\r\n\t\t\t\tonAddedToStage();\r\n\t\t\telse\r\n\t\t\t\tonRemovedFromStage();\r\n\t\t\t\t\r\n\t\t\treturn value;\r\n\t\t}\r\n\t\telse\r\n\t\t\treturn parent=value;\r\n\t}\r\n\t\r\n\tfunction get_layout():LayoutData \r\n\t{\r\n\t\treturn this.layout;\r\n\t}\r\n\tfunction set_layout(value:LayoutData):LayoutData \r\n\t{\r\n\t\tif (value != null)\r\n\t\t{\t\t\r\n\t\t\tfor (field in Reflect.fields(value))\r\n\t\t\t{\r\n\t\t\t\tReflect.setProperty(layoutHandler,field,Reflect.field(value,field));\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn layout = value;\r\n\t}\r\n\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\r\n\tpublic function dispose()\r\n\t{\r\n\t\tif (!isDisposed)\r\n\t\t{\r\n\t\t\tisDisposed = true;\r\n\t\t\t\r\n\t\t\tif (uixElement != null)\r\n\t\t\t{\r\n\t\t\t\tuixElement.dispose();\r\n\t\t\t\tuixElement = null;\r\n\t\t\t}\r\n\t\t\tuixData = null;\r\n\t\t\t\r\n\t\t\tif (children != null)\r\n\t\t\t{\r\n\t\t\t\tfor (ch in 0...children.length) \r\n\t\t\t\t{\r\n\t\t\t\t\tif (children[ch] != null)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tchildren[ch].dispose();\r\n\t\t\t\t\t\tchildren[ch] = null;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tchildren = null;\r\n\t\t\t}\r\n\t\t\tif (this.parent != null)\r\n\t\t\t{\r\n\t\t\t\tthis.parent.removeChild(this);\r\n\t\t\t\tthis.parent = null;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\ttype = null;\r\n\t\t\tuuid = null;\r\n\t\t\tname = null;\r\n\t\t\tif (movementX != null)\r\n\t\t\t{\r\n\t\t\t\tmovementX.dispose();\r\n\t\t\t\tmovementX = null;\r\n\t\t\t}\r\n\t\t\tif (movementY != null)\r\n\t\t\t{\r\n\t\t\t\tmovementY.dispose();\r\n\t\t\t\tmovementY = null;\r\n\t\t\t}\r\n\t\t\tif (velocityHistoryX != null)\r\n\t\t\t{\r\n\t\t\t\tvelocityHistoryX.dispose();\r\n\t\t\t\tvelocityHistoryX = null;\r\n\t\t\t}\r\n\t\t\tif (velocityHistoryY != null)\r\n\t\t\t{\r\n\t\t\t\tvelocityHistoryY.dispose();\r\n\t\t\t\tvelocityHistoryY = null;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tlibraryItemName = null;\r\n\t\t\t_ = null;\r\n\t\t\tstyle = null;\r\n\t\t\t\r\n\t\t\tif (layoutHandler != null)\r\n\t\t\t{\r\n\t\t\t\tlayoutHandler.dispose();\r\n\t\t\t\tlayoutHandler = null;\r\n\t\t\t}\r\n\t\t\tlayout = null;\r\n\t\t\tif (variable != null)\r\n\t\t\t{\r\n\t\t\t\tUIX.removeBindVar(variable);\t\r\n\t\t\t\tvariable = null;\r\n\t\t\t}\r\n\t\t\tif (asset != null)\r\n\t\t\t{\r\n\t\t\t\tUIX.removeBindAsset(asset);\t\r\n\t\t\t\tasset = null;\r\n\t\t\t}\r\n\t\t\trect = null;\r\n\t\r\n\t\t\tif (_smoothX != null)\r\n\t\t\t{\r\n\t\t\t\t_smoothX.dispose();\r\n\t\t\t\t_smoothX = null;\r\n\t\t\t}\r\n\t\t\tif (_smoothY != null)\r\n\t\t\t{\r\n\t\t\t\t_smoothY.dispose();\r\n\t\t\t\t_smoothY = null;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n}\r\n","package no.logic.kha.uix.scene;\r\n\r\nimport kha.FastFloat;\r\nimport kha.graphics2.Graphics;\r\nimport no.logic.kha.uix.input.MouseManager;\r\nimport no.logic.kha.uix.types.Rectangle;\r\nimport no.logic.kha.uix.utils.MathUtils;\r\n\r\nclass InteractiveObject extends DisplayObject\r\n{\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\r\n\t//===================================================================================\r\n\t// Consts \r\n\t//-----------------------------------------------------------------------------------\r\n\t\r\n\t//===================================================================================\r\n\t// Properties \r\n\t//-----------------------------------------------------------------------------------\r\n\r\n\tpublic var mouseEnabled(default, set)\t: Bool\t\t\t= false;\r\n\tpublic var buttonMode\t\t\t\t\t: Bool\t\t\t= false;\r\n\tpublic var isPressed(default,null)\t\t: Bool\t\t\t= false;\r\n\tpublic var dragEnabled\t\t\t\t\t: Bool\t\t\t= false;\r\n\tpublic var dragLockCenter\t\t\t\t: Bool\t\t\t= false;\r\n\tpublic var canDragX\t\t\t\t\t\t: Bool\t\t\t= true;\r\n\tpublic var canDragY\t\t\t\t\t\t: Bool\t\t\t= true;\r\n\tpublic var dragBounds\t\t\t\t\t: Rectangle;\r\n\tpublic var moveWithWheel\t\t\t\t: Bool\t\t\t= false;\r\n\t\r\n\t//===================================================================================\r\n\t// Declarations \r\n\t//-----------------------------------------------------------------------------------\r\n\t\r\n\tfunction interactiveObjRenderComplete()\t{};\r\n\t\r\n\tpublic var onMouseOver\t\t\t: (InteractiveObject)->Void;\r\n\tpublic var onMouseOut\t\t\t: (InteractiveObject)->Void;\r\n\tpublic var onMouseDown\t\t\t: (InteractiveObject)->Void;\r\n\tpublic var onMouseUp\t\t\t: (InteractiveObject)->Void;\r\n\tpublic var onClick\t\t\t\t: (InteractiveObject)->Void;\r\n\tpublic var onRightClick\t\t\t: (InteractiveObject)->Void;\r\n\tpublic var onMiddleClick\t\t: (InteractiveObject)->Void;\r\n\tpublic var onStartDrag\t\t\t: (InteractiveObject)->Void;\r\n\tpublic var onStopDrag\t\t\t: (InteractiveObject)->Void;\r\n\tpublic var onDragging\t\t\t: (InteractiveObject)->Void;\r\n\t\r\n\t//===================================================================================\r\n\t// Variables \r\n\t//-----------------------------------------------------------------------------------\t\t\r\n\t\r\n\tvar wasMousePressedLastFrame\t: Bool;\r\n\tvar wasMouseOverLastFrame\t\t: Bool;\r\n\tvar dragOffsetX\t\t\t\t\t: FastFloat;\r\n\tvar dragOffsetY\t\t\t\t\t: FastFloat;\r\n\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\t\r\n\tpublic function new(?data:Dynamic)\r\n\t{\r\n\t\tsuper(data);\r\n\t}\r\n\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\t\r\n\toverride function dpRenderComplete()\r\n\t{\r\n\t\tsuper.dpRenderComplete();\r\n\t\tinteractiveObjRenderComplete();\r\n\t}\r\n\t\r\n\tfunction checkMouse():Void \r\n\t{\r\n\t\tif (isMouseOver != wasMouseOverLastFrame)\r\n\t\t{\r\n\t\t\tisMouseOver ? _mouseOver() : _mouseOut();\r\n\t\t}\r\n\t\tif (isMouseOver)\r\n\t\t{\r\n\t\t\tif (MouseManager.isPressed != wasMousePressedLastFrame)\r\n\t\t\t{\r\n\t\t\t\tif (MouseManager.isPressed)\r\n\t\t\t\t{\r\n\t\t\t\t\t_click();\r\n\t\t\t\t\t_mouseDown();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse if (isPressed && !MouseManager.isPressed)\r\n\t\t\t\t_mouseUp();\r\n\t\t\telse if (moveWithWheel)\r\n\t\t\t{\r\n\t\t\t\tif (Math.isNaN(cast y))\r\n\t\t\t\t\ty = 0;\r\n\t\t\t\tif (MouseManager.wheelDelta != null)\r\n\t\t\t\t{\r\n\t\t\t\t\ty-=MouseManager.wheelDeltaSmooth.value*100;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\t\r\n\t\t}\r\n\t\tif (isDragging)\r\n\t\t\t_whileDragging();\r\n\t\t\r\n\t\twasMouseOverLastFrame = isMouseOver;\r\n\t\twasMousePressedLastFrame = MouseManager.isPressed;\r\n\t}\r\n\t\r\n\t//===================================================================================\r\n\t// Mouse Events \r\n\t//-----------------------------------------------------------------------------------\t\t\r\n\t\r\n\t@:noCompletion\r\n\tfunction _mouseOver()\r\n\t{\r\n\t\tif (buttonMode)\r\n\t\t\tMouseManager.setCursorType(CursorType.POINTER);\r\n\t\t\t\r\n\t\tif (onMouseOver != null)\r\n\t\t\tonMouseOver(this);\r\n\t}\r\n\t\r\n\t@:noCompletion\r\n\tfunction _mouseOut()\r\n\t{\r\n\t\tif (isDragging)\r\n\t\t\treturn;\r\n\t\t\t\r\n\t\tif (isPressed)\r\n\t\t\t_mouseUp();\r\n\t\t\t\r\n\t\tif (buttonMode)\r\n\t\t\tMouseManager.setCursorType(CursorType.DEFAULT);\r\n\t\t\t\r\n\t\tif (onMouseOut != null)\r\n\t\t\tonMouseOut(this);\r\n\t}\r\n\t\r\n\t@:noCompletion\r\n\tfunction _click()\r\n\t{\r\n\t\tif (onClick != null)\r\n\t\t\tonClick(this);\r\n\t}\r\n\t\r\n\t@:noCompletion\r\n\tfunction _mouseDown()\r\n\t{\r\n\t\tisPressed = true;\r\n\t\tif (dragEnabled)\r\n\t\t\tstartDrag();\r\n\t\tif (onMouseDown != null)\r\n\t\t\tonMouseDown(this);\r\n\t}\r\n\t\r\n\t@:noCompletion\r\n\tfunction _mouseUp()\r\n\t{\r\n\t\tisPressed = false;\r\n\t\tif (dragEnabled)\r\n\t\t\tstopDrag();\r\n\t\tif (onMouseUp != null)\r\n\t\t\tonMouseUp(this);\r\n\t}\r\n\t\r\n\t@:noCompletion\r\n\tfunction _rightClick()\r\n\t{\r\n\t\tif (onRightClick != null)\r\n\t\t\tonRightClick(this);\r\n\t}\r\n\t\r\n\t@:noCompletion\r\n\tfunction _middleClick()\r\n\t{\r\n\t\tif (onMiddleClick != null)\r\n\t\t\tonMiddleClick(this);\r\n\t}\r\n\t\r\n\t@:noCompletion\r\n\tfunction set_mouseEnabled(value:Bool):Bool \r\n\t{\r\n\t\tbuttonMode = value;\r\n\t\treturn mouseEnabled = value;\r\n\t}\r\n\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\t\r\n\tpublic function startDrag(?lockCenter:Null<Bool>,?left:Null<FastFloat>,?top:Null<FastFloat>,?right:Null<FastFloat>,?bottom:Null<FastFloat>)\r\n\t{\r\n\t\tif ((left != null || top != null || right != null || bottom != null) && dragBounds == null)\r\n\t\t\tdragBounds = new Rectangle(left, top, right, bottom);\r\n\t\telse\r\n\t\t{\r\n\t\t\tif (left != null)\r\n\t\t\t\tdragBounds.x = left;\r\n\t\t\tif (top != null)\r\n\t\t\t\tdragBounds.y = top;\r\n\t\t\tif (right != null)\r\n\t\t\t\tdragBounds.width = right;\r\n\t\t\tif (bottom != null)\r\n\t\t\t\tdragBounds.height = bottom;\r\n\t\t}\r\n\t\t\r\n\t\tif (lockCenter != null)\r\n\t\t\tthis.dragLockCenter = lockCenter;\r\n\t\telse\r\n\t\t{\r\n\t\t\tdragOffsetX = this.mouseX;\r\n\t\t\tdragOffsetY = this.mouseY;\r\n\t\t}\r\n\t\t\r\n\t\tdx = 0;\r\n\t\tdy = 0;\r\n\t\tvelocityX = 0;\r\n\t\tvelocityY = 0;\r\n\t\tvelocityHistoryX.clear();\r\n\t\tvelocityHistoryY.clear();\r\n\t\tmovementX.setTo(0);\r\n\t\tmovementY.setTo(0);\r\n\t\tisDragging = true;\r\n\t\tif (onStartDrag != null)\r\n\t\t\tonStartDrag(this);\t\t\r\n\t}\r\n\t\r\n\tpublic function stopDrag()\r\n\t{\r\n\t\tisDragging = false;\r\n\t\tif (useInertia)\r\n\t\t{\r\n\t\t\t\r\n\t\t}\r\n\t\tif (onStopDrag != null)\r\n\t\t\tonStopDrag(this);\t\t\r\n\t}\r\n\t\r\n\tpublic function _whileDragging()\r\n\t{\r\n\t\tif (isDragging)\r\n\t\t{\r\n\t\t\tif (parent != null)\r\n\t\t\t{\r\n\t\t\t\tif (canDragX)\r\n\t\t\t\t\tx = parent.mouseX;\r\n\t\t\t\tif (canDragY)\r\n\t\t\t\t\ty = parent.mouseY;\r\n\t\t\t\t\r\n\t\t\t\tif (dragLockCenter)\r\n\t\t\t\t{\r\n\t\t\t\t\tif (canDragX)\r\n\t\t\t\t\t\tx -= width * 0.5;\r\n\t\t\t\t\tif (canDragY)\r\n\t\t\t\t\t\ty -= height * 0.5;\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\tif (canDragX)\r\n\t\t\t\t\t\tx -= dragOffsetX;\r\n\t\t\t\t\tif (canDragY)\r\n\t\t\t\t\t\ty -= dragOffsetY;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n/*\t\t\t\tif (dragBounds != null)\r\n\t\t\t\t{\r\n\t\t\t\t\tif (dragBounds.x != null && x < dragBounds.x)\r\n\t\t\t\t\t\tx = dragBounds.x;\r\n\t\t\t\t\tif (dragBounds.y != null && y < dragBounds.y)\r\n\t\t\t\t\t\ty = dragBounds.y;\r\n\t\t\t\t\tif (dragBounds.width != null && x > dragBounds.width)\r\n\t\t\t\t\t\tx = dragBounds.width;\r\n\t\t\t\t\tif (dragBounds.height != null && x > dragBounds.height)\r\n\t\t\t\t\t\ty = dragBounds.height;\r\n\t\t\t\t}*/\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\tif (onDragging != null)\r\n\t\t\t\tonDragging(this);\t\r\n\t\t}\r\n\t}\r\n\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\t\r\n\toverride public function update()\r\n\t{\r\n\t\tsuper.update();\r\n\t\tif (mouseEnabled)\r\n\t\t\tcheckMouse();\r\n\t}\r\n\t\r\n\toverride public function render(g:Graphics) \r\n\t{\r\n\t\tsuper.render(g);\r\n\t}\r\n\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\t\r\n\toverride public function setPropsFromData(data:Null<Dynamic>)\r\n\t{\r\n\t\tsuper.setPropsFromData(data);\r\n\t\tif (data == null)\r\n\t\t\treturn;\r\n\t\t\t\r\n\t\tfor (field in Reflect.fields(data))\r\n\t\t{\r\n\t\t\tif (field == \"mouseEnabled\")\r\n\t\t\t\tthis.mouseEnabled = Reflect.field(data, field);\r\n\t\t\t//else if (field == \"color\")\r\n\t\t\t\t//this.color = Reflect.field(data, field);\r\n\t\t}\r\n\t}\r\n\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\r\n\toverride public function dispose()\r\n\t{\r\n\t\tif (!isDisposed)\r\n\t\t{\r\n\t\t\tthis.mouseEnabled = false;\r\n\t\t\tdragBounds = null;\r\n\t\t\tonMouseOver = null;\r\n\t\t\tonMouseOut = null;\r\n\t\t\tonMouseDown = null;\r\n\t\t\tonMouseUp = null;\r\n\t\t\tonClick = null;\r\n\t\t\tonRightClick = null;\r\n\t\t\tonMiddleClick = null;\r\n\t\t\tonStartDrag = null;\r\n\t\t\tonStopDrag = null;\r\n\t\t\tonDragging = null;\t\r\n\t\t\tsuper.dispose();\r\n\t\t}\r\n\t}\r\n\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\r\n}\r\n","package no.logic.kha.uix.scene;\r\nimport kha.Color;\r\nimport kha.graphics2.Graphics;\r\nimport no.logic.kha.uix.scene.DisplayObject;\r\nimport no.logic.kha.uix.scene.shapes.ShapeData;\r\nimport no.logic.kha.uix.scene.shapes.ShapeRenderer;\r\nimport trilateral.tri.TriangleArray;\r\n\r\nclass Shape extends InteractiveObject\r\n{\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\r\n\t//===================================================================================\r\n\t// Consts \r\n\t//-----------------------------------------------------------------------------------\r\n\t\r\n\t//===================================================================================\r\n\t// Properties \r\n\t//-----------------------------------------------------------------------------------\r\n\r\n\tpublic var g\t\t\t\t\t\t: Graphics;\r\n\tpublic var shapeData\t\t\t\t: ShapeData;\r\n\tpublic var fill\t\t\t\t\t\t: Bool\t\t\t= false;\r\n\tpublic var fillColor(default, set)\t: Color;\r\n\tpublic var color(default, set)\t\t: Null<Color>;\r\n\t\r\n\t@:noCompletion\r\n\tvar _color\t\t\t\t\t\t\t: Color\t\t\t= Color.White;\r\n\t\r\n\t@:noCompletion\r\n\tvar _fillColor\t\t\t\t\t\t: Color\t\t\t= Color.White;\r\n\t\r\n\t//===================================================================================\r\n\t// Declarations \r\n\t//-----------------------------------------------------------------------------------\r\n\t\r\n\tfunction shapeRenderComplete()\t{};\r\n\t\r\n\t//===================================================================================\r\n\t// Variables \r\n\t//-----------------------------------------------------------------------------------\t\t\r\n\t\r\n\tpublic function new(?data:Dynamic)\r\n\t{\r\n\t\tsuper(data);\r\n\t}\r\n\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\t\r\n\tfunction drawShapes()\r\n\t{\r\n\t\tif (shapeData!=null)\r\n\t\t{\r\n\t\t\tg.opacity = _alpha;\r\n\t\t\tShapeRenderer.drawTestShape(g, shapeData, tintColor, tintMultiplier);\r\n\t\t\twidth = shapeData.rect.width;\r\n\t\t\theight = shapeData.rect.height;\r\n\t\t}\r\n\t\t\r\n\t\t/*\t\tif (fill)\r\n\t\t{\r\n\t\t\tg.color = _fillColor;\r\n\t\t\tg.opacity = alpha;\r\n\t\t\tg.fillRect(0, 0, width, height);\r\n\t\t}*/\r\n\t}\r\n\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\t\r\n\toverride function dpRenderComplete()\r\n\t{\r\n\t\tsuper.dpRenderComplete();\r\n\t\tif (visible)\r\n\t\t\tdrawShapes();\r\n\t\tif (shapeData!=null)\r\n\t\t{\r\n\t\t\twidth = shapeData.rect.width;\r\n\t\t\theight = shapeData.rect.height;\r\n\t\t}\r\n\t\t\t\r\n\t\tshapeRenderComplete();\r\n\t}\r\n\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\t\r\n\toverride public function update()\r\n\t{\r\n\t\tsuper.update();\r\n\t}\r\n\t\r\n\toverride public function render(g:Graphics) \r\n\t{\r\n\t\tthis.g = g;\r\n\t\tsuper.render(g);\r\n\t}\r\n\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\t\r\n\toverride public function setPropsFromData(data:Null<Dynamic>)\r\n\t{\r\n\t\tsuper.setPropsFromData(data);\r\n\t\tif (data == null)\r\n\t\t\treturn;\r\n\t\t\t\r\n\t\tfor (field in Reflect.fields(data))\r\n\t\t{\r\n\t\t\tif (field == \"fillColor\")\r\n\t\t\t\tthis.fillColor = Reflect.field(data, field);\r\n\t\t\telse if (field == \"color\")\r\n\t\t\t\tthis.color = Reflect.field(data, field);\r\n\t\t\telse if (field == \"fill\")\r\n\t\t\t\tthis.fill = Reflect.field(data, field);\r\n\t\t}\r\n\t}\t\r\n\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\r\n\tfunction set_fillColor(value:Color):Color \r\n\t{\r\n\t\tfill = true;\r\n\t\t_fillColor = value;\r\n\t\treturn fillColor = value;\r\n\t}\r\n\t\r\n\tfunction set_color(value:Null<Color>):Null<Color>\r\n\t{\r\n\t\t_color = value;\r\n\t\treturn color = value;\r\n\t}\r\n\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\t\r\n\toverride public function dispose()\r\n\t{\r\n\t\tif (!isDisposed)\r\n\t\t{\r\n\t\t\tif (shapeData != null)\r\n\t\t\t{\r\n\t\t\t\t//shapeData.triangles = null;\r\n\t\t\t\tshapeData = null;\r\n\t\t\t}\r\n\t\t\tsuper.dispose();\r\n\t\t}\r\n\t}\r\n\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\r\n}\r\n","package no.logic.kha.uix.scene;\r\nimport kha.graphics2.Graphics;\r\nimport no.logic.kha.uix.fla.FlaElement;\r\nimport no.logic.kha.uix.fla.FlaFrame;\r\nimport no.logic.kha.uix.fla.FlaTimeline;\r\nimport no.logic.kha.uix.scene.animation.Timeline;\r\nimport no.logic.kha.uix.types.Object;\r\n\r\ntypedef MovieClip = Sprite;\r\n\r\nclass Sprite extends Shape\r\n{\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\r\n\t//===================================================================================\r\n\t// Consts \r\n\t//-----------------------------------------------------------------------------------\r\n\t\r\n\t//===================================================================================\r\n\t// Properties \r\n\t//-----------------------------------------------------------------------------------\r\n\r\n\tpublic var timeline\t\t\t: Timeline;\r\n\r\n\tpublic var numFrames\t\t(get, null)\t: Int;\r\n\r\n\t@:isVar \r\n\tpublic var currentFrame(get, set)\t\t: Int\t\t\t\t\t= 1;\r\n\r\n\t//===================================================================================\r\n\t// Declarations \r\n\t//-----------------------------------------------------------------------------------\r\n\t\r\n\tfunction spriteRenderComplete()\t{};\r\n\t\r\n\t//===================================================================================\r\n\t// Variables \r\n\t//-----------------------------------------------------------------------------------\t\t\r\n\t\r\n\tpublic function new(?data:Dynamic)\r\n\t{\r\n\t\tsuper(data);\r\n\t\ttimeline = new Timeline(this);\r\n\t}\r\n\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\t\r\n\tpublic function setTimelineDataFromFLA(flaTimeline:FlaTimeline)\r\n\t{\r\n\t\ttimeline.setFLAtimelineData(flaTimeline);\r\n\t}\r\n\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\r\n\toverride function shapeRenderComplete()\r\n\t{\r\n\t\tsuper.shapeRenderComplete();\r\n\t\tif (isDisposed)\r\n\t\t\treturn;\r\n\r\n\t\tspriteRenderComplete();\r\n\t}\r\n\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\t\r\n/*\tpublic function goto(?frameNr:Int=0)\r\n\t{\r\n\t\tif (timeline == null)\r\n\t\t\treturn;\r\n\t\t\t\r\n\t\tif (frameNr < 1)\r\n\t\t\tframeNr = currentFrame;\r\n\t\telse\r\n\t\t\tcurrentFrame = frameNr;\r\n\r\n\t\tparseCurrentFrame();\r\n\t}\r\n\t\r\n\tfunction parseCurrentFrame()\r\n\t{\r\n\t\t//if (timeline != null && timeline.layers != null)\r\n\t\t//{\r\n\t\t\t//for (layer in timeline.layers)\r\n\t\t\t//{\r\n\t\t\t\t//for (frame in layer.frames)\r\n\t\t\t\t//{\r\n\t\t\t\t\t//if (isFrameInRange(currentFrame,frame))\r\n\t\t\t\t\t//{\r\n\t\t\t\t\t\t//\r\n\t\t\t\t\t\t//for (element in frame.elements)\r\n\t\t\t\t\t\t//{\r\n\t\t\t\t\t\t\t//checkElement(element, frame);\r\n\t\t\t\t\t\t//}\r\n\t\t\t\t\t//}\r\n\t\t\t\t\t//layer.previousFrameData = frame;\r\n\t\t\t\t//}\r\n\t\t\t//}\r\n\t\t//}\r\n\t}*/\r\n\r\n/*\tinline function isFrameInRange(frameNr:Null<Int>, keyframe:FlaFrame):Bool\r\n\t{\r\n\t\tif (frameNr == keyframe.index)\r\n\t\t\treturn true;\r\n\r\n\t\tvar frRange:Int = keyframe.index + keyframe.duration-1;\r\n\r\n\t\tif (frameNr > keyframe.index && frameNr < frRange)\r\n\t\t\treturn true;\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\tinline function checkElement(fe:FlaElement, f:FlaFrame)\r\n\t{\r\n\t\tif (fe == null)\r\n\t\t\treturn;\r\n\r\n\t\t//UIX.c.debug(\"Frame \" + f.index + \" : \"+fe.uuid);\r\n\t\tif (this.getChildByUUID(fe.uuid) == null)\r\n\t\t{\r\n\t\t\tif (f.parentLayer.previousFrameData != null)\r\n\t\t\t{\r\n\t\t\t\tfor (pe in f.parentLayer.previousFrameData.elements)\r\n\t\t\t\t{\r\n\t\t\t\t\t//UIX.c.debug(\"Removed \"+pe.name+\"  -  \");\r\n\t\t\t\t\tremoveChildByUUID(pe.uuid);\r\n\t\t\t\t}\r\n\t\t\t\tf.parentLayer.previousFrameData = null;\r\n\t\t\t}\r\n\r\n\t\t\taddChild(fe.instantiateDisplayObject());\r\n\t\t\t//UIX.c.debug(\"Added \"+fe.uuid);\r\n\t\t\t//UIX.c.debug(\"Added \"+fe.libraryItemName);\r\n\t\t}\r\n\t\t//else\r\n\t\t//{\r\n\t\t\t//UIX.c.debug(\"Keyframe \" + f.index + \" has already added : \"+fe.uuid);\r\n\t\t//}\r\n\t}*/\r\n\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\t\r\n\toverride public function setPropsFromData(data:Null<Dynamic>)\r\n\t{\r\n\t\tsuper.setPropsFromData(data);\r\n\t\tvar dataObj:Object = data;\r\n\t\t//if (dataObj.hasOwnProperty(\"timeline\"))\r\n\t\t//{\r\n\t\t\t//this.timeline = dataObj.timeline;\r\n\t\t//}\r\n\t}\r\n\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\t\r\n\toverride public function update()\r\n\t{\r\n\t\tif (isDisposed)\r\n\t\t\treturn;\r\n\t\t\t\r\n\t\tsuper.update();\r\n\t\t\r\n\t\t//if(timeline == null)\r\n\t\t\t//trace(this.name);\r\n\t\tif (timeline != null)\r\n\t\t\ttimeline.update();\r\n\r\n\t\t// if (disposeOnRemove && this.parent == null)\r\n\t\t\t// dispose();\r\n\t\t\t\r\n\t\t//if (name == \"Fish\")\r\n\t\t//{\r\n\t\t\t//trace(currentFrame+\"  ::  \"+numFrames);\t\t\t\r\n\t\t//}\r\n\r\n\t}\r\n\t\r\n\toverride public function render(g:Graphics) \r\n\t{\r\n\t\tsuper.render(g);\r\n\t}\r\n\t\r\n\t//////////////////////////////////////////////////////////////////////////////////////\r\n\t\r\n\tpublic function nextFrame()\r\n\t{\r\n\t\tif (timeline != null)\r\n\t\t\ttimeline.nextFrame();\r\n\t}\r\n\r\n\tpublic function previousFrame()\r\n\t{\r\n\t\tif (timeline != null)\r\n\t\t\ttimeline.previousFrame();\r\n\t}\r\n\r\n\tpublic function play()\r\n\t{\r\n\t\tif (timeline != null)\r\n\t\t\ttimeline.play();\r\n\t}\r\n\t\r\n\tpublic function stop()\r\n\t{\r\n\t\tif (timeline != null)\r\n\t\t\ttimeline.stop();\r\n\t}\r\n\t\r\n\tfunction goto(frameNrOrLabel:Dynamic)\r\n\t{\r\n\t\tif (timeline != null)\r\n\t\t\ttimeline.goto(frameNrOrLabel);\r\n\t}\r\n\t\r\n\tpublic function gotoAndStop(frameNrOrLabel:Dynamic)\r\n\t{\r\n\t\tif (timeline != null)\r\n\t\t\ttimeline.gotoAndStop(frameNrOrLabel);\r\n\t}\r\n\t\r\n\tpublic function gotoAndPlay(frameNrOrLabel:Dynamic)\r\n\t{\r\n\t\tif (timeline != null)\r\n\t\t\ttimeline.gotoAndPlay(frameNrOrLabel);\r\n\t}\r\n\t\r\n\tpublic function gotoAndPlayRandom() \r\n\t{\r\n\t\tif (timeline != null)\r\n\t\t\ttimeline.gotoAndPlayRandom();\r\n\t}\r\n\t\r\n\tpublic function gotoAndStopRandom()\r\n\t{\r\n\t\tif (timeline != null)\r\n\t\t\ttimeline.gotoAndStopRandom();\r\n\t}\r\n\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\t\r\n\tfunction get_numFrames():Int \r\n\t{\r\n\t\tif (timeline == null)\r\n\t\t\treturn 0;\r\n\t\telse\r\n\t\t\treturn timeline.numFrames;\r\n\t}\r\n\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\t\r\n\tfunction get_currentFrame():Int \r\n\t{\r\n\t\tif (timeline == null)\r\n\t\t\treturn 0;\r\n\t\telse\r\n\t\t\treturn timeline.currentFrame;\r\n\t}\r\n\t\r\n\tfunction set_currentFrame(value:Int):Int \r\n\t{\r\n\t\tif (timeline == null)\r\n\t\t\treturn currentFrame = 0;\r\n\t\telse\r\n\t\t{\r\n\t\t\ttimeline.currentFrame = value;\t\t\r\n\t\t\treturn currentFrame\t= value;\t\t\r\n\t\t}\r\n\t}\r\n\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\t\r\n\toverride public function dispose()\r\n\t{\r\n\t\tif (!isDisposed)\r\n\t\t{\r\n\t\t\tif (timeline != null)\r\n\t\t\t{\r\n\t\t\t\ttimeline.dispose();\r\n\t\t\t\ttimeline = null;\r\n\t\t\t}\r\n\t\t\tsuper.dispose();\r\n\t\t}\r\n\t}\r\n\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n}\r\n","package no.logic.kha.uix.scene;\r\n\r\nimport kha.Framebuffer;\r\nimport kha.graphics2.Graphics;\r\nimport kha.input.Mouse;\r\nimport no.logic.kha.uix.input.MouseManager;\r\n\r\nclass Stage extends Sprite\r\n{\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\r\n\t//===================================================================================\r\n\t// Consts \r\n\t//-----------------------------------------------------------------------------------\r\n\t\r\n\t//===================================================================================\r\n\t// Properties \r\n\t//-----------------------------------------------------------------------------------\r\n\r\n\tpublic var framebuffer\t\t\t: Framebuffer;\r\n\t\r\n\t//===================================================================================\r\n\t// Declarations \r\n\t//-----------------------------------------------------------------------------------\r\n\t\r\n\tfunction stageRenderComplete()\t{};\r\n\r\n\t//===================================================================================\r\n\t// Variables \r\n\t//-----------------------------------------------------------------------------------\t\t\r\n\t\r\n\tpublic function new()\r\n\t{\r\n\t\tsuper({name:\"Stage\"});\r\n\t\tdisposeOnRemove = false;\r\n\t\t//Surface.get().notify(onTouchStart, onTouchEnd, onTouchMove);\r\n\t}\r\n\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\r\n\toverride function spriteRenderComplete()\r\n\t{\r\n\t\tsuper.spriteRenderComplete();\r\n\t\t//draw();\r\n\t\tstageRenderComplete();\r\n\t}\r\n\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\r\n\toverride public function update()\r\n\t{\r\n\t\tsuper.update();\r\n\t}\r\n\t\r\n\toverride public function render(g:Graphics) \r\n\t{\r\n\t\tsuper.render(g);\r\n\t}\r\n\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\t\r\n\toverride public function dispose()\r\n\t{\r\n\t\tsuper.dispose();\r\n\t}\r\n\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n}\r\n","package no.logic.kha.uix.app;\r\n\r\nimport haxe.Timer;\r\nimport kha.Assets;\r\nimport kha.Color;\r\nimport kha.Display;\r\nimport kha.Framebuffer;\r\nimport kha.Scheduler;\r\nimport kha.System;\r\nimport no.logic.kha.uix.fla.Fla;\r\n//import kha.SystemImpl;\r\nimport kha.Window;\r\nimport kha.WindowMode;\r\nimport kha.WindowOptions;\r\nimport kha.graphics2.Graphics;\r\nimport kha.input.Mouse;\r\nimport no.logic.kha.uix.console.Fps;\r\nimport no.logic.kha.uix.console.UIXConsole;\r\nimport no.logic.kha.uix.debug.DebugInspector;\r\nimport no.logic.kha.uix.graphics.Draw;\r\nimport no.logic.kha.uix.input.MouseManager;\r\nimport no.logic.kha.uix.kontentum.Kontentum;\r\nimport no.logic.kha.uix.network.LocalClient;\r\nimport no.logic.kha.uix.scene.Sprite;\r\nimport no.logic.kha.uix.scene.Stage;\r\nimport Inject;\r\n\r\nclass App extends Stage\r\n{\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\r\n\t//===================================================================================\r\n\t// Variables\r\n\t//-----------------------------------------------------------------------------------\r\n\t\r\n\tstatic public var\tappName\t\t\t\t: String\t\t\t= \"UIX\";\r\n\tstatic public var\tappWidth\t\t\t: Int\t\t\t\t= 1920;\r\n\tstatic public var\tappHeight\t\t\t: Int\t\t\t\t= 1080;\r\n\tstatic public var\twindowMode(default, set): WindowMode\t= WindowMode.Windowed;\r\n\tstatic public var\tbgColor\t\t\t\t: UInt\t\t\t\t= 0xff000000;\r\n\tstatic public var \tshowMouse\t\t\t: Bool\t\t\t\t= true;\r\n\tstatic public var \tshowFPS\t\t\t\t: Bool\t\t\t\t= true;\r\n\tstatic public var \tdpi\t\t\t\t\t: Float\t\t\t\t= 72;\r\n\tstatic public var \tkontentumExhibit\t: String\t\t\t= \"\";\r\n\tstatic public var \tkontentumDomain\t\t: String\t\t\t= \"https://kontentum.link\";\r\n\tstatic public var\tkontentumLiveUpdate\t: Bool\t\t\t\t= false;\r\n\tstatic public var\tkontentumPreload\t: Bool\t\t\t\t= false;\r\n\tstatic public var\tuseLocalClient\t\t: Bool\t\t\t\t= false;\r\n\tstatic public var\tpreloadFLA\t\t\t: String;\r\n\t\r\n\t@:isVar \r\n\tstatic public var \tfullscreen(get, set): Bool\t\t\t\t= false;\r\n\r\n\tstatic var baseClass\t\t\t\t\t: Class<App>;\r\n\tstatic var baseApp\t\t\t\t\t\t: App;\r\n\r\n\t//===================================================================================\r\n\t// Declarations\r\n\t//-----------------------------------------------------------------------------------\r\n\r\n\tstatic public var kontentum\t\t\t\t: Kontentum;\r\n\tstatic public var window\t\t\t\t: Window;\r\n\tstatic public var stage\t\t\t\t\t: Stage;\r\n\tstatic public var lc\t\t\t\t\t: LocalClient;\r\n\t\r\n\t//===================================================================================\r\n\t// Static Init\r\n\t//-----------------------------------------------------------------------------------\r\n\r\n\tstatic public function init(baseClass:Class<App>)\r\n\t{\r\n\t\t#if hotml new hotml.client.Client(); #end\r\n\t\t\t\t\r\n\t\tApp.baseClass = baseClass;\r\n\t\tvar wo:WindowOptions = {};\r\n\t\t//wo.x = ;\r\n\t\t//wo.y = ;\r\n\t\t//wo.width = width;\r\n\t\t//wo.height = height;\r\n\t\two.title = appName;\r\n\t\two.visible = true;\r\n\t\two.display = -1;\r\n\t\two.windowFeatures = FeatureResizable | FeatureMaximizable | FeatureMinimizable;\r\n\t\two.mode = windowMode;\r\n\t\t\r\n\t\tvar so:SystemOptions = {};\r\n\t\tso.title = appName;\r\n\t\tso.width = appWidth;\r\n\t\tso.height = appHeight;\r\n\t\tso.framebuffer.samplesPerPixel = 4;\r\n\t\t//so.framebuffer.verticalSync = true;\r\n\t\t//so.framebuffer.frequency = 60;\r\n\t\t\r\n\t\tdpi = Display.primary.pixelsPerInch;\r\n\t\t\r\n\t\tSystem.start(so, onStart);\t\t\r\n\t}\r\n\t\r\n\tstatic function kontentumReady()\r\n\t{\r\n\t\ttrace(\"Kontentum exhibit fetched : \"+Kontentum.i.exhibitToken);\r\n\t\tstartLoad();\r\n\t}\r\n\t\r\n\tstatic function kontentumFailed(status:KontentumStatus) \r\n\t{\r\n\t\ttrace(\"Kontentum fetch failed :\"+status);\r\n\t\tstartLoad();\r\n\t}\r\n\t\r\n\tstatic function onStart(w:Window)\r\n\t{\r\n\t\twindow = w;\r\n\t\tScheduler.addTimeTask(function () { baseUpdate(); }, 0, 1 / 60);\r\n\t\tSystem.notifyOnFrames(function (framebuffers) { baseRender(framebuffers); });\t\t\r\n\r\n\t\tUIXConsole.init();\r\n\t\tDebugInspector.i.init();\r\n\t\t\r\n\t\t#if (kha_js && !kha_krom)\r\n\t\tjs.Browser.window.onerror = cast customErrorHandler;// errorHandler;\r\n\t\t#end\r\n\t\t\r\n\t\tMouseManager.init();\r\n\t\tMouseManager.hasLeft = true;\r\n\t\tApp.lc = LocalClient.i;\r\n\t\tlc.init(App.useLocalClient);\r\n\r\n\t\tif (kontentumExhibit != null && kontentumExhibit != \"\")\r\n\t\t{\r\n\t\t\tkontentum = Kontentum.i.init(kontentumDomain, kontentumExhibit, null, false, kontentumPreload, kontentumLiveUpdate, false);\r\n\t\t\tkontentum.onComplete = kontentumReady;\r\n\t\t\tkontentum.onFail = kontentumFailed;\r\n\t\t\tkontentum.fetch();\r\n\t\t}\r\n\t\telse\r\n\t\t\tstartLoad();\r\n\t}\r\n\t\r\n\tstatic function startLoad()\r\n\t{\r\n\t\t//Assets.loadEverything(function()\r\n\t\t//{\r\n\t\t\tif (preloadFLA != null)\r\n\t\t\t{\r\n\t\t\t\tFla.fla = new Fla(preloadFLA, true, null, FlaInitAction.STOPPED);\r\n\t\t\t\tcheckPreloadReady();\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t\tstart();\r\n\t\t//});\r\n\t}\r\n\t\r\n\tstatic function checkPreloadReady()\r\n\t{\r\n\t\tif (Fla.fla.library!=null && Fla.fla.library.bitmapsReady == true && @:privateAccess Fla.fla.flaTimeline!=null)\r\n\t\t{\r\n\t\t\tstart();\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tTimer.delay(checkPreloadReady, 17);\r\n\t\t}\r\n\t\t\r\n\t}\t\t\t\r\n\r\n\tstatic function start()\r\n\t{\r\n\t\tbaseApp = Type.createInstance(baseClass,[]);\r\n\t}\r\n\t\r\n\tstatic function baseUpdate()\r\n\t{\r\n\t\tFps.timeTrack(FpsTimerState.UPDATE_START);\r\n\t\tpreUpdate();\r\n\t\tif (stage!=null)\r\n\t\t{\r\n\t\t\tstage.width = appWidth;\r\n\t\t\tstage.height = appHeight;\r\n\t\t\tstage.stageX = MouseManager.stageX;\r\n\t\t\tstage.stageY = MouseManager.stageY;\r\n\t\t\tstage.update();\r\n\t\t}\r\n\t\tMouseManager.update();\r\n\t\tpostUpdate();\r\n\t\tFps.timeTrack(FpsTimerState.UPDATE_END);\r\n\t}\r\n\t\r\n\tstatic function baseRender(f:Array<Framebuffer>)\r\n\t{\r\n\t\tFps.timeTrack(FpsTimerState.RENDER_START);\r\n\t\tvar fb:Framebuffer = f[0];\r\n\t\tvar g = f[0].g2;\r\n\t\tif (Draw.g == null)\r\n\t\t\tDraw.g = g;\r\n\r\n\t\tpreRenderSys(f);\r\n\t\tg.scissor(0, 0, App.appWidth, App.appHeight);\t\r\n\r\n\t\tif (stage != null)\t\r\n\t\t{\r\n\t\t\tstage.framebuffer = fb;\r\n\t\t\tstage.render(g);\r\n\t\t}\r\n\r\n\t\tg.disableScissor();\r\n\t\tpostRenderSys(f);\r\n\t\tFps.timeTrack(FpsTimerState.RENDER_END);\r\n\t}\r\n\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\r\n\tstatic function preUpdate():Void \r\n\t{\r\n\t\tif (window.width == App.appWidth && window.height == App.appHeight)\r\n\t\t\treturn;\r\n\t\t\t\r\n\t\tApp.appWidth = window.width;\r\n\t\tApp.appHeight = window.height;\r\n\t\tUIX.dispatch(\"app::resize\");\r\n\t}\r\n\t\r\n\tstatic function postUpdate():Void \r\n\t{\r\n\t\tDebugInspector.i.update();\r\n\t\t\t\r\n\t\tUIXConsole.i.update();\r\n\t\tif (showFPS)\r\n\t\t\tFps.update();\r\n\t}\r\n\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\t\r\n\tstatic function preRenderSys(f:Array<Framebuffer>) \r\n\t{\r\n\t\tvar g = f[0].g2;\r\n\t\tg.begin(true, App.bgColor);\r\n\t\tg.end();\r\n\t}\r\n\t\r\n\tstatic function postRenderSys(f:Array<Framebuffer>) \r\n\t{\r\n\t\tvar g = f[0].g2;\r\n\t\tif (DebugInspector.i.enabled)\r\n\t\t\tDebugInspector.i.render(g);\r\n\r\n\t\tg.begin(false);\r\n\r\n\t\tUIXConsole.i.render(g);\r\n\t\t\r\n\t\tif (showFPS)\r\n\t\t\tFps.render(g);\r\n\t\t\r\n\t\tg.end();\r\n\t\t\r\n\t\tif (baseApp!=null)\r\n\t\t\tbaseApp.postRender(f[0]);\r\n\t}\r\n\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\t\r\n\t#if (kha_js && !kha_krom)\r\n\tstatic function customErrorHandler(message: String, source: String, lineno: Int, colno: Int, error: Dynamic) \r\n\t{\r\n\t\tvar useDefault = true;\r\n\t\tvar continueToRun = true;\r\n\t\tif (useDefault)\r\n\t\t{\r\n\t\t\t@:privateAccess kha.SystemImpl.errorHandler(message, source, lineno, colno, error);\r\n\t\t\t\r\n\t\t\t//or\r\n\t\t\t//js.Browser.console.error(error.stack);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\ttrace(error.stack);\r\n\t\t}\r\n\t\treturn continueToRun;\r\n\t}\r\n\t#end\r\n\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\r\n\tstatic public function setFullscreen(fullscreen:Bool)\r\n\t{\r\n\t\tfullscreen ? windowMode = WindowMode.Fullscreen : windowMode = WindowMode.Windowed;\r\n\t}\r\n\t\r\n\tstatic function get_fullscreen():Bool \r\n\t{\r\n\t\treturn Window.get(0).mode == WindowMode.Fullscreen;\r\n\t}\r\n\t\r\n\tstatic function set_fullscreen(value:Bool):Bool \r\n\t{\r\n\t\tsetFullscreen(value);\r\n\t\treturn fullscreen = value;\r\n\t}\r\n\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\r\n\tstatic function set_windowMode(value:WindowMode):WindowMode \r\n\t{\r\n\t\tif (Window.get(0)!=null)\r\n\t\t\tWindow.get(0).mode = value;\r\n\t\t\t\r\n\t\treturn windowMode = value;\r\n\t}\r\n\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\r\n\t//===================================================================================\r\n\t// Base\r\n\t//-----------------------------------------------------------------------------------\r\n\r\n\tpublic function new()\r\n\t{\r\n\t\tsuper();\r\n\t\tApp.stage = this;\r\n\t}\r\n\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\t\r\n\tfunction enterFrame()\r\n\t{\r\n\t\t\r\n\t}\r\n\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\t\r\n\toverride public function update()\r\n\t{\r\n\t\tenterFrame();\r\n\t\tsuper.update();\r\n\t}\r\n\r\n\toverride public function render(g:Graphics)\r\n\t{\r\n\t\tsuper.render(g);\r\n\t}\r\n\t\r\n\tfunction postRender(f:Framebuffer)\r\n\t{\r\n\t\t\r\n\t}\r\n\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n}\r\n","package;\r\n\r\nimport haxe.Timer;\r\nimport haxe.io.Bytes;\r\nimport haxe.io.BytesData;\r\nimport haxe.io.FPHelper;\r\nimport kha.Assets;\r\nimport kha.Color;\r\nimport kha.Framebuffer;\r\nimport kha.Image;\r\nimport kha.Scheduler;\r\nimport kha.Shaders;\r\nimport kha.StringExtensions;\r\nimport kha.SystemImpl;\r\nimport kha.WindowMode;\r\nimport kha.graphics2.Graphics;\r\nimport kha.graphics4.ConstantLocation;\r\nimport kha.graphics4.PipelineState;\r\nimport kha.math.FastVector2;\r\nimport no.logic.kha.uix.UIX;\r\nimport no.logic.kha.uix.app.App;\r\n#if (!kha_krom && !kha_kore)\r\nimport no.logic.kha.uix.audio.modplayer.ModPlayer;\r\n#end\r\nimport no.logic.kha.uix.graphics.Draw;\r\nimport no.logic.kha.uix.graphics.shaders.PipelineTools;\r\nimport no.logic.kha.uix.kontentum.Kontentum;\r\nimport no.logic.kha.uix.scene.Bitmap;\r\nimport no.logic.kha.uix.scene.Text;\r\nimport no.logic.kha.uix.scene.styles.Styles;\r\nimport no.logic.kha.uix.text.bitmapfont.BMFont;\r\nimport no.logic.kha.uix.utils.MathUtils;\r\n\r\nclass STMain extends App\r\n{\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\r\n\tstatic public function main()\r\n\t{\r\n\t\tApp.appName\t\t\t\t= \"Logic Interactive\";\r\n\t\tApp.appWidth\t\t\t= 1920;\r\n\t\tApp.appHeight\t\t\t= 1080;\r\n\t\tApp.bgColor\t\t\t\t= 0xff000000;\r\n\t\tApp.windowMode\t\t\t= WindowMode.Windowed;\r\n\t\tApp.showMouse\t\t\t= true;\r\n\t\tApp.kontentumExhibit\t= \"jn9vao\";\r\n\t\tApp.kontentumLiveUpdate\t= false;\r\n\t\tApp.init(STMain);\r\n\t}\r\n\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\r\n\t//===================================================================================\r\n\t// Consts \r\n\t//-----------------------------------------------------------------------------------\r\n\t\r\n\t//===================================================================================\r\n\t// Properties \r\n\t//-----------------------------------------------------------------------------------\r\n\t\r\n\t//===================================================================================\r\n\t// Declarations \r\n\t//-----------------------------------------------------------------------------------\r\n\t\r\n\t//===================================================================================\r\n\t// Variables \r\n\t//-----------------------------------------------------------------------------------\t\t\r\n\t\r\n\tvar stars\t\t\t\t\t: Array<Star>;\r\n\tvar scrollText \t\t\t\t: String\t\t\t= \"                    ... Logic Interactive says hello from a retro scroll-text.... A flashback to the golden days of the demo-scene!                    \";\r\n\tvar scrollTextX\t\t\t\t: Float \t\t\t= -32*4*2;\r\n\tvar sca\t\t\t\t\t\t: Array<Int>;\r\n\tvar letterW\t\t\t\t\t: Float = 0;\r\n\tvar fi\t\t\t\t\t\t: Int = 0;\r\n\tvar bmFont\t\t\t\t\t: BMFont;\r\n\tvar numLetters\t\t\t\t: Int;\r\n\tvar rt\t\t\t\t\t\t: Image;\r\n\tvar pipeline\t\t\t\t: PipelineState;\r\n\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\t\r\n\tfunction new()\r\n\t{\r\n\t\tsuper();\r\n\t\t\r\n\t\t//Assets.loadEverything(()->\r\n\t\tAssets.loadImage(\"bmfont\",(i)->\r\n\t\t{\r\n\t\t\trt = Image.createRenderTarget(App.appWidth, 32 * 4);\r\n\t\t\tpipeline = PipelineTools.createPipeline(Shaders.sinescroll_frag, null, Blendmode.Multiply);\r\n\t\t\taddStars();\r\n\t\t\t\r\n\t\t\t#if (!kha_krom && !kha_kore)\r\n\t\t\tvar m = new ModPlayer();\r\n\t\t\tm.load(\"mod.overload\");\t\t\r\n\t\t\r\n\t\t\tthis.mouseEnabled = true;\r\n\t\t\tthis.buttonMode = false;\r\n\t\t\tthis.onClick = (i)-> {m.play(); this.onClick = null; }\r\n\t\t\t#end\r\n\t\t\t\r\n\t\t\tsca = StringExtensions.toCharArray(scrollText);\r\n\t\t\tbmFont = new BMFont(\" !\\\"    '()  ,-. 0123456789:    ? ABCDEFGHIJKLMNOPQRSTUVWXYZ\", Assets.images.bmfont, 32, 32);\r\n\t\t\tbmFont.charScale = 4;\r\n\t\t\tbmFont.upperCaseOnly = true;\r\n\t\t\tnumLetters = Math.ceil(App.appWidth / (32*4)) + 2;\r\n\t\t\tUIX.add(\"app::resize\", onResize);\r\n\t\t});\r\n\t}\r\n\t\r\n\tfunction addStars()\r\n\t{\r\n\t\tstars = [];\r\n\t\tvar numStars:Int = 1000;\r\n\t\tfor (i in 0...numStars) \r\n\t\t{\r\n\t\t\tstars.push(\r\n\t\t\t{\r\n\t\t\t\tx:MathUtils.rnd(0,App.appWidth),\r\n\t\t\t\ty:MathUtils.rnd(0,App.appHeight),\r\n\t\t\t\tdistance:MathUtils.rnd(0.25, 1)\r\n\t\t\t});\r\n\t\t}\t\t\r\n\t}\r\n\t\r\n\tfunction onResize()\r\n\t{\r\n\t\trt.unload();\r\n\t\trt = Image.createRenderTarget(App.appWidth, 32 * 4);\r\n\t\taddStars();\r\n\t\tnumLetters = Math.ceil(App.appWidth / (32*4)) + 2;\r\n\t}\r\n\t\r\n\toverride public function render(g:Graphics)\r\n\t{\r\n\t\tsuper.render(g);\r\n\t\t\r\n\t\tg.color = Color.White;\r\n\t\tvar speed:Float = 5;\r\n\t\tvar edge:Float = App.appWidth;\r\n\t\t\r\n\t\tfor (s in stars) \r\n\t\t\tDraw.fillCircleWithOpacity( s.x = (s.x + s.distance * speed) % edge, s.y, s.distance * 2, s.distance, 4);\r\n\t}\r\n\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\t\r\n\tfunction nextScrollLetter()\r\n\t{\r\n\t\tfi++;\r\n\t\tif (fi+numLetters >= scrollText.length)\r\n\t\t\tfi = 0;\r\n\t\t\t\r\n\t\tletterW = 32*4;\r\n\t}\r\n\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\t\r\n\toverride function postRender(f:Framebuffer)\r\n\t{\r\n\t\tif (rt == null)\r\n\t\t\treturn;\r\n\t\t\t\r\n\t\tvar gRT = rt.g2;\r\n\t\tgRT.begin();\r\n\t\t\r\n\t\tif (letterW < 32/5)\r\n\t\t\tnextScrollLetter();\r\n\t\telse\r\n\t\t\tletterW -= 32/5;\r\n\t\t\t\r\n\t\tgRT.opacity = 1;\r\n\t\t\r\n\t\tvar t = scrollText.substring(fi, fi+numLetters);\r\n\t\tbmFont.drawString(gRT, scrollTextX + letterW, 0, t);\r\n\t\t\r\n\t\tgRT.end();\r\n\t\t\r\n\t\tf.g4.setPipeline(pipeline);\r\n\t\tf.g4.setFloat(pipeline.getConstantLocation('time'), Scheduler.time());\r\n\t\tf.g4.setFloat(pipeline.getConstantLocation('amplitude'), MathUtils.sineCurve(3,0.5,0.5,0,true,SineBase.Zero));\r\n\t\tf.g4.setFloat(pipeline.getConstantLocation('frequency'), MathUtils.sineCurve(4,1,0,0,true,SineBase.Zero)*3);\r\n\t\tf.g4.setVector2(pipeline.getConstantLocation('resolution'), new FastVector2(App.appWidth, App.appHeight));\r\n\t\tf.g4.setVector2(pipeline.getConstantLocation('scrollRes'), new FastVector2(rt.width,rt.height));\r\n\t\tf.g4.setFloat(pipeline.getConstantLocation('yoffset'), App.appHeight*0.5);\r\n\t\t\r\n\t\tf.g2.pipeline = pipeline;\t\t\r\n\t\tf.g2.begin(false);\r\n\t\tf.g2.opacity = 1;\r\n\t\tf.g2.color = Color.White;\r\n\t\tf.g2.drawScaledImage(rt, 0, 0,App.appWidth,App.appHeight);\r\n\t\tf.g2.end();\r\n\t\tf.g2.pipeline = null;\r\n\t\t\r\n\t\t\r\n\t}\r\n\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n}\r\n\r\ntypedef Star = \r\n{\r\n\tx:Float,\r\n\ty:Float,\r\n\tdistance:Float,\r\n}\r\n\r\n\t\r\n","package no.logic.kha.uix.graphics;\r\nimport kha.Color;\r\nimport kha.FastFloat;\r\nimport kha.Font;\r\nimport kha.Image;\r\nimport kha.graphics2.Graphics;\r\nimport kha.math.FastMatrix3;\r\nusing kha.graphics2.GraphicsExtension;\r\n\r\nclass Draw\r\n{\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\r\n\t//===================================================================================\r\n\t// Variables \r\n\t//-----------------------------------------------------------------------------------\t\t\r\n\t\r\n\tstatic public var g\t\t: Graphics;\r\n\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\t\r\n\tstatic public inline function fillRect(width:Float, height:Float, ?x:Float=0, ?y:Float=0, ?opacity:Float=-1, ?color:Color) \r\n\t{\r\n\t\tif (color != null)\r\n\t\t\tg.color = color;\r\n\t\t\t\r\n\t\tif (opacity != -1)\r\n\t\t\tg.opacity = opacity;\r\n\t\t\t\r\n\t\tg.fillRect(x, y, width, height);\r\n\t}\r\n\t\r\n\tstatic public inline function text(string:String, ?x:Float=0, ?y:Float=0, ?opacity:Float=-1, ?color:Color, ?fontSize:Int=-1, ?font:Font) \r\n\t{\r\n\t\tif (font != null)\r\n\t\t\tg.font = font;\r\n\t\t\t\r\n\t\tif (color != null)\r\n\t\t\tg.color = color;\r\n\t\t\t\r\n\t\tif (opacity != -1)\r\n\t\t\tg.opacity = opacity;\r\n\t\t\t\t\t\t\r\n\t\tif (fontSize != -1)\r\n\t\t\tg.fontSize = fontSize;\r\n\t\t\t\r\n\t\tg.drawString(string, x, y);\r\n\t}\t\r\n\r\n\tstatic public inline function image(image:Image, ?x:FastFloat = 0, ?y:FastFloat = 0, ?opacity:Float =-1, ?color:Color, ?rotation:FastFloat=0, ?scale:Float = 1) \r\n\t{\r\n\t\tif (rotation != 0)\r\n\t\t\tg.pushRotation(rotation, 0, 0);\r\n\t\t\t\r\n\t\tif (color != null)\r\n\t\t\tg.color = color;\r\n\t\telse\r\n\t\t\tg.color = Color.White;\r\n\t\t\t\r\n\t\tif (opacity != -1)\r\n\t\t\tg.opacity = opacity;\r\n\t\t\t\r\n\t\tif (scale==1)\r\n\t\t\tg.drawImage(image, x, y);\r\n\t\telse\r\n\t\t\tg.drawScaledImage(image, x, y, image.width*scale, image.height*scale);\r\n\t\t\r\n\t\tif (rotation != 0)\r\n\t\t\tg.popTransformation();\r\n\t}\r\n\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\t\r\n\tstatic public inline function fillCircle(cx:Float, cy:Float, radius:Float, segments:Int=0)\r\n\t{\r\n\t\tg.fillCircle(cx, cy, radius, segments);\r\n\t}\t\r\n\t\r\n\tstatic public inline function fillCircleWithOpacity(cx:Float, cy:Float, radius:Float, opacity:Float = 1, segments:Int = 0)\r\n\t{\r\n\t\tg.opacity = opacity;\r\n\t\tg.fillCircle(cx, cy, radius, segments);\r\n\t}\r\n\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\t\r\n\t//static public inline function text(string:String, ?x:Float=0, ?y:Float=0, ?opacity:Float=-1, ?color:Color, ?fontSize:Int=-1, ?font:Font) \r\n\t//{\r\n\t\t//g.drawCharacters(string, x, y);\r\n\t//}\t\t\r\n\t///////////////////////////////////////////////////////////////////////////////////////\r\n\t\r\n}\r\n","/*\r\n * Copyright (C)2005-2019 Haxe Foundation\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a\r\n * copy of this software and associated documentation files (the \"Software\"),\r\n * to deal in the Software without restriction, including without limitation\r\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\r\n * and/or sell copies of the Software, and to permit persons to whom the\r\n * Software is furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\r\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\r\n * DEALINGS IN THE SOFTWARE.\r\n */\r\n\r\nimport js.Boot;\r\nimport js.Syntax;\r\n\r\n@:keepInit\r\n@:coreApi class Std {\r\n\tpublic static inline function is(v:Dynamic, t:Dynamic):Bool {\r\n\t\treturn @:privateAccess js.Boot.__instanceof(v, t);\r\n\t}\r\n\r\n\tpublic static inline function downcast<T:{}, S:T>(value:T, c:Class<S>):S@:privateAccess {\r\n\t\treturn if (js.Boot.__downcastCheck(value, c)) cast value else null;\r\n\t}\r\n\r\n\t@:deprecated('Std.instance() is deprecated. Use Std.downcast() instead.')\r\n\tpublic static inline function instance<T:{}, S:T>(value:T, c:Class<S>):S {\r\n\t\treturn downcast(value, c);\r\n\t}\r\n\r\n\t@:pure\r\n\tpublic static function string(s:Dynamic):String {\r\n\t\treturn @:privateAccess js.Boot.__string_rec(s, \"\");\r\n\t}\r\n\r\n\tpublic static inline function int(x:Float):Int {\r\n\t\treturn (cast x) | 0;\r\n\t}\r\n\r\n\t@:pure\r\n\tpublic static function parseInt(x:String):Null<Int> {\r\n\t\tif(x != null) {\r\n\t\t\tfor(i in 0...x.length) {\r\n\t\t\t\tvar c = StringTools.fastCodeAt(x, i);\r\n\t\t\t\tif(c <= 8 || (c >= 14 && c != ' '.code && c != '-'.code)) {\r\n\t\t\t\t\tvar v:Int = Syntax.code('parseInt({0}, ({0}[{1}]==\"x\" || {0}[{1}]==\"X\") ? 16 : 10)', x, i + 1);\r\n\t\t\t\t\treturn Math.isNaN(v) ? null : v;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\tpublic static inline function parseFloat(x:String):Float {\r\n\t\treturn untyped __js__(\"parseFloat\")(x);\r\n\t}\r\n\r\n\tpublic static function random(x:Int):Int {\r\n\t\treturn x <= 0 ? 0 : Math.floor(Math.random() * x);\r\n\t}\r\n\r\n\tstatic function __init__():Void\r\n\t\tuntyped {\r\n\t\t\t__feature__(\"js.Boot.getClass\", String.prototype.__class__ = __feature__(\"Type.resolveClass\", $hxClasses[\"String\"] = String, String));\r\n\t\t\t__feature__(\"js.Boot.isClass\", String.__name__ = __feature__(\"Type.getClassName\", \"String\", true));\r\n\t\t\t__feature__(\"Type.resolveClass\", $hxClasses[\"Array\"] = Array);\r\n\t\t\t__feature__(\"js.Boot.isClass\", Array.__name__ = __feature__(\"Type.getClassName\", \"Array\", true));\r\n\t\t\t__feature__(\"Date.*\", {\r\n\t\t\t\t__feature__(\"js.Boot.getClass\",\r\n\t\t\t\t\t__js__('Date').prototype.__class__ = __feature__(\"Type.resolveClass\", $hxClasses[\"Date\"] = __js__('Date'), __js__('Date')));\r\n\t\t\t\t__feature__(\"js.Boot.isClass\", __js__('Date').__name__ = \"Date\");\r\n\t\t\t});\r\n\t\t\t__feature__(\"Int.*\", __js__('var Int = { };'));\r\n\t\t\t__feature__(\"Dynamic.*\", __js__('var Dynamic = { };'));\r\n\t\t\t__feature__(\"Float.*\", __js__('var Float = Number'));\r\n\t\t\t__feature__(\"Bool.*\", __js__('var Bool = Boolean'));\r\n\t\t\t__feature__(\"Class.*\", __js__('var Class = { };'));\r\n\t\t\t__feature__(\"Enum.*\", __js__('var Enum = { };'));\r\n\t\t\t#if (js_es < 5)\r\n\t\t\t__feature__(\"Array.map\", if (Array.prototype.map == null) Array.prototype.map = function(f) {\r\n\t\t\t\tvar a = [];\r\n\t\t\t\tfor (i in 0...__this__.length)\r\n\t\t\t\t\ta[i] = f(__this__[i]);\r\n\t\t\t\treturn a;\r\n\t\t\t});\r\n\t\t\t__feature__(\"Array.filter\", if (Array.prototype.filter == null) Array.prototype.filter = function(f) {\r\n\t\t\t\tvar a = [];\r\n\t\t\t\tfor (i in 0...__this__.length) {\r\n\t\t\t\t\tvar e = __this__[i];\r\n\t\t\t\t\tif (f(e))\r\n\t\t\t\t\t\ta.push(e);\r\n\t\t\t\t}\r\n\t\t\t\treturn a;\r\n\t\t\t});\r\n\t\t\t#end\r\n\t\t}\r\n}\r\n","/*\r\n * Copyright (C)2005-2019 Haxe Foundation\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a\r\n * copy of this software and associated documentation files (the \"Software\"),\r\n * to deal in the Software without restriction, including without limitation\r\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\r\n * and/or sell copies of the Software, and to permit persons to whom the\r\n * Software is furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\r\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\r\n * DEALINGS IN THE SOFTWARE.\r\n */\r\n\r\n/**\r\n\tA String buffer is an efficient way to build a big string by appending small\r\n\telements together.\r\n\r\n\tIts cross-platform implementation uses String concatenation internally, but\r\n\tStringBuf may be optimized for different targets.\r\n\r\n\tUnlike String, an instance of StringBuf is not immutable in the sense that\r\n\tit can be passed as argument to functions which modify it by appending more\r\n\tvalues. However, the internal buffer cannot be modified.\r\n**/\r\nclass StringBuf {\r\n\tvar b:String;\r\n\r\n\t/**\r\n\t\tThe length of `this` StringBuf in characters.\r\n\t**/\r\n\tpublic var length(get, never):Int;\r\n\r\n\t/**\r\n\t\tCreates a new StringBuf instance.\r\n\r\n\t\tThis may involve initialization of the internal buffer.\r\n\t**/\r\n\tpublic inline function new() {\r\n\t\tb = \"\";\r\n\t}\r\n\r\n\tinline function get_length():Int {\r\n\t\treturn b.length;\r\n\t}\r\n\r\n\t/**\r\n\t\tAppends the representation of `x` to `this` StringBuf.\r\n\r\n\t\tThe exact representation of `x` may vary per platform. To get more\r\n\t\tconsistent behavior, this function should be called with\r\n\t\tStd.string(x).\r\n\r\n\t\tIf `x` is null, the String \"null\" is appended.\r\n\t**/\r\n\tpublic inline function add<T>(x:T):Void {\r\n\t\tb += x;\r\n\t}\r\n\r\n\t/**\r\n\t\tAppends the character identified by `c` to `this` StringBuf.\r\n\r\n\t\tIf `c` is negative or has another invalid value, the result is\r\n\t\tunspecified.\r\n\t**/\r\n\tpublic inline function addChar(c:Int):Void {\r\n\t\tb += String.fromCharCode(c);\r\n\t}\r\n\r\n\t/**\r\n\t\tAppends a substring of `s` to `this` StringBuf.\r\n\r\n\t\tThis function expects `pos` and `len` to describe a valid substring of\r\n\t\t`s`, or else the result is unspecified. To get more robust behavior,\r\n\t\t`this.add(s.substr(pos,len))` can be used instead.\r\n\r\n\t\tIf `s` or `pos` are null, the result is unspecified.\r\n\r\n\t\tIf `len` is omitted or null, the substring ranges from `pos` to the end\r\n\t\tof `s`.\r\n\t**/\r\n\tpublic inline function addSub(s:String, pos:Int, ?len:Int):Void {\r\n\t\tb += (len == null ? s.substr(pos) : s.substr(pos, len));\r\n\t}\r\n\r\n\t/**\r\n\t\tReturns the content of `this` StringBuf as String.\r\n\r\n\t\tThe buffer is not emptied by this operation.\r\n\t**/\r\n\tpublic inline function toString():String {\r\n\t\treturn b;\r\n\t}\r\n}\r\n","/*\r\n * Copyright (C)2005-2019 Haxe Foundation\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a\r\n * copy of this software and associated documentation files (the \"Software\"),\r\n * to deal in the Software without restriction, including without limitation\r\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\r\n * and/or sell copies of the Software, and to permit persons to whom the\r\n * Software is furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\r\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\r\n * DEALINGS IN THE SOFTWARE.\r\n */\r\n\r\nimport haxe.iterators.StringIterator;\r\nimport haxe.iterators.StringKeyValueIterator;\r\n\r\n#if cpp\r\nusing cpp.NativeString;\r\n#end\r\n\r\n/**\r\n\tThis class provides advanced methods on Strings. It is ideally used with\r\n\t`using StringTools` and then acts as an [extension](https://haxe.org/manual/lf-static-extension.html)\r\n\tto the `String` class.\r\n\r\n\tIf the first argument to any of the methods is null, the result is\r\n\tunspecified.\r\n**/\r\nclass StringTools {\r\n\t/**\r\n\t\tEncode an URL by using the standard format.\r\n\t**/\r\n\t#if (!java && !cpp && !lua && !eval) inline #end public static function urlEncode(s:String):String {\r\n\t\t#if flash\r\n\t\treturn untyped __global__[\"encodeURIComponent\"](s);\r\n\t\t#elseif neko\r\n\t\treturn untyped new String(_urlEncode(s.__s));\r\n\t\t#elseif js\r\n\t\treturn untyped encodeURIComponent(s);\r\n\t\t#elseif cpp\r\n\t\treturn untyped s.__URLEncode();\r\n\t\t#elseif java\r\n\t\treturn postProcessUrlEncode(java.net.URLEncoder.encode(s, \"UTF-8\"));\r\n\t\t#elseif cs\r\n\t\treturn untyped cs.system.Uri.EscapeDataString(s);\r\n\t\t#elseif python\r\n\t\treturn python.lib.urllib.Parse.quote(s, \"\");\r\n\t\t#elseif hl\r\n\t\tvar len = 0;\r\n\t\tvar b = @:privateAccess s.bytes.urlEncode(len);\r\n\t\treturn @:privateAccess String.__alloc__(b, len);\r\n\t\t#elseif lua\r\n\t\ts = lua.NativeStringTools.gsub(s, \"\\n\", \"\\r\\n\");\r\n\t\ts = lua.NativeStringTools.gsub(s, \"([^%w %-%_%.%~])\", function(c) {\r\n\t\t\treturn lua.NativeStringTools.format(\"%%%02X\", lua.NativeStringTools.byte(c) + '');\r\n\t\t});\r\n\t\ts = lua.NativeStringTools.gsub(s, \" \", \"+\");\r\n\t\treturn s;\r\n\t\t#else\r\n\t\treturn null;\r\n\t\t#end\r\n\t}\r\n\r\n\t#if java\r\n\tprivate static function postProcessUrlEncode(s:String):String {\r\n\t\tvar ret = new StringBuf();\r\n\t\tvar i = 0, len = s.length;\r\n\t\twhile (i < len) {\r\n\t\t\tswitch (_charAt(s, i++)) {\r\n\t\t\t\tcase '+'.code:\r\n\t\t\t\t\tret.add('%20');\r\n\t\t\t\tcase '%'.code if (i <= len - 2):\r\n\t\t\t\t\tvar c1 = _charAt(s, i++), c2 = _charAt(s, i++);\r\n\t\t\t\t\tswitch [c1, c2] {\r\n\t\t\t\t\t\tcase ['2'.code, '1'.code]:\r\n\t\t\t\t\t\t\tret.addChar('!'.code);\r\n\t\t\t\t\t\tcase ['2'.code, '7'.code]:\r\n\t\t\t\t\t\t\tret.addChar('\\''.code);\r\n\t\t\t\t\t\tcase ['2'.code, '8'.code]:\r\n\t\t\t\t\t\t\tret.addChar('('.code);\r\n\t\t\t\t\t\tcase ['2'.code, '9'.code]:\r\n\t\t\t\t\t\t\tret.addChar(')'.code);\r\n\t\t\t\t\t\tcase ['7'.code, 'E'.code] | ['7'.code, 'e'.code]:\r\n\t\t\t\t\t\t\tret.addChar('~'.code);\r\n\t\t\t\t\t\tcase _:\r\n\t\t\t\t\t\t\tret.addChar('%'.code);\r\n\t\t\t\t\t\t\tret.addChar(cast c1);\r\n\t\t\t\t\t\t\tret.addChar(cast c2);\r\n\t\t\t\t\t}\r\n\t\t\t\tcase var chr:\r\n\t\t\t\t\tret.addChar(cast chr);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn ret.toString();\r\n\t}\r\n\t#end\r\n\r\n\t/**\r\n\t\tDecode an URL using the standard format.\r\n\t**/\r\n\t#if (!java && !cpp && !lua && !eval) inline #end public static function urlDecode(s:String):String {\r\n\t\t#if flash\r\n\t\treturn untyped __global__[\"decodeURIComponent\"](s.split(\"+\").join(\" \"));\r\n\t\t#elseif neko\r\n\t\treturn untyped new String(_urlDecode(s.__s));\r\n\t\t#elseif js\r\n\t\treturn untyped decodeURIComponent(s.split(\"+\").join(\" \"));\r\n\t\t#elseif cpp\r\n\t\treturn untyped s.__URLDecode();\r\n\t\t#elseif java\r\n\t\ttry\r\n\t\t\treturn java.net.URLDecoder.decode(s, \"UTF-8\")\r\n\t\tcatch (e:Dynamic)\r\n\t\t\tthrow e;\r\n\t\t#elseif cs\r\n\t\treturn untyped cs.system.Uri.UnescapeDataString(s);\r\n\t\t#elseif python\r\n\t\treturn python.lib.urllib.Parse.unquote(s);\r\n\t\t#elseif hl\r\n\t\tvar len = 0;\r\n\t\tvar b = @:privateAccess s.bytes.urlDecode(len);\r\n\t\treturn @:privateAccess String.__alloc__(b, len);\r\n\t\t#elseif lua\r\n\t\ts = lua.NativeStringTools.gsub(s, \"+\", \" \");\r\n\t\ts = lua.NativeStringTools.gsub(s, \"%%(%x%x)\", function(h) {\r\n\t\t\treturn lua.NativeStringTools.char(lua.Lua.tonumber(h, 16));\r\n\t\t});\r\n\t\ts = lua.NativeStringTools.gsub(s, \"\\r\\n\", \"\\n\");\r\n\t\treturn s;\r\n\t\t#else\r\n\t\treturn null;\r\n\t\t#end\r\n\t}\r\n\r\n\t/**\r\n\t\tEscapes HTML special characters of the string `s`.\r\n\r\n\t\tThe following replacements are made:\r\n\r\n\t\t- `&` becomes `&amp`;\r\n\t\t- `<` becomes `&lt`;\r\n\t\t- `>` becomes `&gt`;\r\n\r\n\t\tIf `quotes` is true, the following characters are also replaced:\r\n\r\n\t\t- `\"` becomes `&quot`;\r\n\t\t- `'` becomes `&#039`;\r\n\t**/\r\n\tpublic static function htmlEscape(s:String, ?quotes:Bool):String {\r\n\t\tvar buf = new StringBuf();\r\n\t\tfor (code in new haxe.iterators.StringIteratorUnicode(s)) {\r\n\t\t\tswitch (code) {\r\n\t\t\t\tcase '&'.code:\r\n\t\t\t\t\tbuf.add(\"&amp;\");\r\n\t\t\t\tcase '<'.code:\r\n\t\t\t\t\tbuf.add(\"&lt;\");\r\n\t\t\t\tcase '>'.code:\r\n\t\t\t\t\tbuf.add(\"&gt;\");\r\n\t\t\t\tcase '\"'.code if (quotes):\r\n\t\t\t\t\tbuf.add(\"&quot;\");\r\n\t\t\t\tcase '\\''.code if (quotes):\r\n\t\t\t\t\tbuf.add(\"&#039;\");\r\n\t\t\t\tcase _:\r\n\t\t\t\t\tbuf.addChar(code);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn buf.toString();\r\n\t}\r\n\r\n\t/**\r\n\t\tUnescapes HTML special characters of the string `s`.\r\n\r\n\t\tThis is the inverse operation to htmlEscape, i.e. the following always\r\n\t\tholds: `htmlUnescape(htmlEscape(s)) == s`\r\n\r\n\t\tThe replacements follow:\r\n\r\n\t\t- `&amp;` becomes `&`\r\n\t\t- `&lt;` becomes `<`\r\n\t\t- `&gt;` becomes `>`\r\n\t\t- `&quot;` becomes `\"`\r\n\t\t- `&#039;` becomes `'`\r\n\t**/\r\n\tpublic static function htmlUnescape(s:String):String {\r\n\t\treturn s.split(\"&gt;\")\r\n\t\t\t.join(\">\")\r\n\t\t\t.split(\"&lt;\")\r\n\t\t\t.join(\"<\")\r\n\t\t\t.split(\"&quot;\")\r\n\t\t\t.join('\"')\r\n\t\t\t.split(\"&#039;\")\r\n\t\t\t.join(\"'\")\r\n\t\t\t.split(\"&amp;\")\r\n\t\t\t.join(\"&\");\r\n\t}\r\n\r\n\t/**\r\n\t\tReturns `true` if `s` contains `value` and  `false` otherwise.\r\n\r\n\t\tWhen `value` is `null`, the result is unspecified.\r\n\t**/\r\n\tpublic static inline function contains(s:String, value:String):Bool {\r\n\t\treturn s.indexOf(value) != -1;\r\n\t}\r\n\r\n\t/**\r\n\t\tTells if the string `s` starts with the string `start`.\r\n\r\n\t\tIf `start` is `null`, the result is unspecified.\r\n\r\n\t\tIf `start` is the empty String `\"\"`, the result is true.\r\n\t**/\r\n\tpublic static #if (cs || java || python) inline #end function startsWith(s:String, start:String):Bool {\r\n\t\t#if java\r\n\t\treturn (cast s : java.NativeString).startsWith(start);\r\n\t\t#elseif cs\r\n\t\treturn untyped s.StartsWith(start);\r\n\t\t#elseif cpp\r\n\t\tif (s.length < start.length)\r\n\t\t\treturn false;\r\n\t\tvar p0 = s.c_str();\r\n\t\tvar p1 = start.c_str();\r\n\t\tfor (i in 0...start.length)\r\n\t\t\tif (p0.at(i) != p1.at(i))\r\n\t\t\t\treturn false;\r\n\t\treturn true;\r\n\t\t#elseif hl\r\n\t\treturn @:privateAccess (s.length >= start.length && s.bytes.compare(0, start.bytes, 0, start.length << 1) == 0);\r\n\t\t#elseif python\r\n\t\treturn python.NativeStringTools.startswith(s, start);\r\n\t\t#else\r\n\t\treturn (s.length >= start.length && s.lastIndexOf(start, 0) == 0);\r\n\t\t#end\r\n\t}\r\n\r\n\t/**\r\n\t\tTells if the string `s` ends with the string `end`.\r\n\r\n\t\tIf `end` is `null`, the result is unspecified.\r\n\r\n\t\tIf `end` is the empty String `\"\"`, the result is true.\r\n\t**/\r\n\tpublic static #if (cs || java || python) inline #end function endsWith(s:String, end:String):Bool {\r\n\t\t#if java\r\n\t\treturn (cast s : java.NativeString).endsWith(end);\r\n\t\t#elseif cs\r\n\t\treturn untyped s.EndsWith(end);\r\n\t\t#elseif cpp\r\n\t\tif (s.length < end.length)\r\n\t\t\treturn false;\r\n\t\tvar p0 = s.c_str().add(s.length - end.length);\r\n\t\tvar p1 = end.c_str();\r\n\t\tfor (i in 0...end.length)\r\n\t\t\tif (p0.at(i) != p1.at(i))\r\n\t\t\t\treturn false;\r\n\t\treturn true;\r\n\t\t#elseif hl\r\n\t\tvar elen = end.length;\r\n\t\tvar slen = s.length;\r\n\t\treturn @:privateAccess (slen >= elen && s.bytes.compare((slen - elen) << 1, end.bytes, 0, elen << 1) == 0);\r\n\t\t#elseif python\r\n\t\treturn python.NativeStringTools.endswith(s, end);\r\n\t\t#else\r\n\t\tvar elen = end.length;\r\n\t\tvar slen = s.length;\r\n\t\treturn (slen >= elen && s.indexOf(end, (slen - elen)) == (slen - elen));\r\n\t\t#end\r\n\t}\r\n\r\n\t/**\r\n\t\tTells if the character in the string `s` at position `pos` is a space.\r\n\r\n\t\tA character is considered to be a space character if its character code\r\n\t\tis 9,10,11,12,13 or 32.\r\n\r\n\t\tIf `s` is the empty String `\"\"`, or if pos is not a valid position within\r\n\t\t`s`, the result is false.\r\n\t**/\r\n\tpublic static function isSpace(s:String, pos:Int):Bool {\r\n\t\t#if (python || lua)\r\n\t\tif (s.length == 0 || pos < 0 || pos >= s.length)\r\n\t\t\treturn false;\r\n\t\t#end\r\n\t\tvar c = s.charCodeAt(pos);\r\n\t\treturn (c > 8 && c < 14) || c == 32;\r\n\t}\r\n\r\n\t/**\r\n\t\tRemoves leading space characters of `s`.\r\n\r\n\t\tThis function internally calls `isSpace()` to decide which characters to\r\n\t\tremove.\r\n\r\n\t\tIf `s` is the empty String `\"\"` or consists only of space characters, the\r\n\t\tresult is the empty String `\"\"`.\r\n\t**/\r\n\tpublic #if cs inline #end static function ltrim(s:String):String {\r\n\t\t#if cs\r\n\t\treturn untyped s.TrimStart();\r\n\t\t#else\r\n\t\tvar l = s.length;\r\n\t\tvar r = 0;\r\n\t\twhile (r < l && isSpace(s, r)) {\r\n\t\t\tr++;\r\n\t\t}\r\n\t\tif (r > 0)\r\n\t\t\treturn s.substr(r, l - r);\r\n\t\telse\r\n\t\t\treturn s;\r\n\t\t#end\r\n\t}\r\n\r\n\t/**\r\n\t\tRemoves trailing space characters of `s`.\r\n\r\n\t\tThis function internally calls `isSpace()` to decide which characters to\r\n\t\tremove.\r\n\r\n\t\tIf `s` is the empty String `\"\"` or consists only of space characters, the\r\n\t\tresult is the empty String `\"\"`.\r\n\t**/\r\n\tpublic #if cs inline #end static function rtrim(s:String):String {\r\n\t\t#if cs\r\n\t\treturn untyped s.TrimEnd();\r\n\t\t#else\r\n\t\tvar l = s.length;\r\n\t\tvar r = 0;\r\n\t\twhile (r < l && isSpace(s, l - r - 1)) {\r\n\t\t\tr++;\r\n\t\t}\r\n\t\tif (r > 0) {\r\n\t\t\treturn s.substr(0, l - r);\r\n\t\t} else {\r\n\t\t\treturn s;\r\n\t\t}\r\n\t\t#end\r\n\t}\r\n\r\n\t/**\r\n\t\tRemoves leading and trailing space characters of `s`.\r\n\r\n\t\tThis is a convenience function for `ltrim(rtrim(s))`.\r\n\t**/\r\n\tpublic #if (cs || java) inline #end static function trim(s:String):String {\r\n\t\t#if cs\r\n\t\treturn untyped s.Trim();\r\n\t\t#elseif java\r\n\t\treturn (cast s : java.NativeString).trim();\r\n\t\t#else\r\n\t\treturn ltrim(rtrim(s));\r\n\t\t#end\r\n\t}\r\n\r\n\t/**\r\n\t\tConcatenates `c` to `s` until `s.length` is at least `l`.\r\n\r\n\t\tIf `c` is the empty String `\"\"` or if `l` does not exceed `s.length`,\r\n\t\t`s` is returned unchanged.\r\n\r\n\t\tIf `c.length` is 1, the resulting String length is exactly `l`.\r\n\r\n\t\tOtherwise the length may exceed `l`.\r\n\r\n\t\tIf `c` is null, the result is unspecified.\r\n\t**/\r\n\tpublic static function lpad(s:String, c:String, l:Int):String {\r\n\t\tif (c.length <= 0)\r\n\t\t\treturn s;\r\n\r\n\t\tvar buf = new StringBuf();\r\n\t\tl -= s.length;\r\n\t\twhile (buf.length < l) {\r\n\t\t\tbuf.add(c);\r\n\t\t}\r\n\t\tbuf.add(s);\r\n\t\treturn buf.toString();\r\n\t}\r\n\r\n\t/**\r\n\t\tAppends `c` to `s` until `s.length` is at least `l`.\r\n\r\n\t\tIf `c` is the empty String `\"\"` or if `l` does not exceed `s.length`,\r\n\t\t`s` is returned unchanged.\r\n\r\n\t\tIf `c.length` is 1, the resulting String length is exactly `l`.\r\n\r\n\t\tOtherwise the length may exceed `l`.\r\n\r\n\t\tIf `c` is null, the result is unspecified.\r\n\t**/\r\n\tpublic static function rpad(s:String, c:String, l:Int):String {\r\n\t\tif (c.length <= 0)\r\n\t\t\treturn s;\r\n\r\n\t\tvar buf = new StringBuf();\r\n\t\tbuf.add(s);\r\n\t\twhile (buf.length < l) {\r\n\t\t\tbuf.add(c);\r\n\t\t}\r\n\t\treturn buf.toString();\r\n\t}\r\n\r\n\t/**\r\n\t\tReplace all occurrences of the String `sub` in the String `s` by the\r\n\t\tString `by`.\r\n\r\n\t\tIf `sub` is the empty String `\"\"`, `by` is inserted after each character\r\n\t\tof `s` except the last one. If `by` is also the empty String `\"\"`, `s`\r\n\t\tremains unchanged.\r\n\r\n\t\tIf `sub` or `by` are null, the result is unspecified.\r\n\t**/\r\n\tpublic static function replace(s:String, sub:String, by:String):String {\r\n\t\t#if java\r\n\t\tif (sub.length == 0)\r\n\t\t\treturn s.split(sub).join(by);\r\n\t\telse\r\n\t\t\treturn (cast s : java.NativeString).replace(sub, by);\r\n\t\t#elseif cs\r\n\t\tif (sub.length == 0)\r\n\t\t\treturn s.split(sub).join(by);\r\n\t\telse\r\n\t\t\treturn untyped s.Replace(sub, by);\r\n\t\t#else\r\n\t\treturn s.split(sub).join(by);\r\n\t\t#end\r\n\t}\r\n\r\n\t/**\r\n\t\tEncodes `n` into a hexadecimal representation.\r\n\r\n\t\tIf `digits` is specified, the resulting String is padded with \"0\" until\r\n\t\tits `length` equals `digits`.\r\n\t**/\r\n\tpublic static function hex(n:Int, ?digits:Int) {\r\n\t\t#if flash\r\n\t\tvar n:UInt = n;\r\n\t\tvar s:String = untyped n.toString(16);\r\n\t\ts = s.toUpperCase();\r\n\t\t#else\r\n\t\tvar s = \"\";\r\n\t\tvar hexChars = \"0123456789ABCDEF\";\r\n\t\tdo {\r\n\t\t\ts = hexChars.charAt(n & 15) + s;\r\n\t\t\tn >>>= 4;\r\n\t\t} while (n > 0);\r\n\t\t#end\r\n\t\t#if python\r\n\t\tif (digits != null && s.length < digits) {\r\n\t\t\tvar diff = digits - s.length;\r\n\t\t\tfor (_ in 0...diff) {\r\n\t\t\t\ts = \"0\" + s;\r\n\t\t\t}\r\n\t\t}\r\n\t\t#else\r\n\t\tif (digits != null)\r\n\t\t\twhile (s.length < digits)\r\n\t\t\t\ts = \"0\" + s;\r\n\t\t#end\r\n\t\treturn s;\r\n\t}\r\n\r\n\t/**\r\n\t\tReturns the character code at position `index` of String `s`, or an\r\n\t\tend-of-file indicator at if `position` equals `s.length`.\r\n\r\n\t\tThis method is faster than `String.charCodeAt()` on some platforms, but\r\n\t\tthe result is unspecified if `index` is negative or greater than\r\n\t\t`s.length`.\r\n\r\n\t\tEnd of file status can be checked by calling `StringTools.isEof()` with\r\n\t\tthe returned value as argument.\r\n\r\n\t\tThis operation is not guaranteed to work if `s` contains the `\\0`\r\n\t\tcharacter.\r\n\t**/\r\n\tpublic static #if !eval inline #end function fastCodeAt(s:String, index:Int):Int {\r\n\t\t#if neko\r\n\t\treturn untyped __dollar__sget(s.__s, index);\r\n\t\t#elseif cpp\r\n\t\treturn untyped s.cca(index);\r\n\t\t#elseif flash\r\n\t\treturn untyped s.cca(index);\r\n\t\t#elseif java\r\n\t\treturn (index < s.length) ? cast(_charAt(s, index), Int) : -1;\r\n\t\t#elseif cs\r\n\t\treturn (cast(index, UInt) < s.length) ? cast(s[index], Int) : -1;\r\n\t\t#elseif js\r\n\t\treturn (cast s).charCodeAt(index);\r\n\t\t#elseif python\r\n\t\treturn if (index >= s.length) -1 else python.internal.UBuiltins.ord(python.Syntax.arrayAccess(s, index));\r\n\t\t#elseif hl\r\n\t\treturn @:privateAccess s.bytes.getUI16(index << 1);\r\n\t\t#elseif lua\r\n\t\t#if lua_vanilla\r\n\t\treturn lua.NativeStringTools.byte(s, index + 1);\r\n\t\t#else\r\n\t\treturn lua.lib.luautf8.Utf8.byte(s, index + 1);\r\n\t\t#end\r\n\t\t#else\r\n\t\treturn untyped s.cca(index);\r\n\t\t#end\r\n\t}\r\n\r\n\t/**\r\n\t\tReturns an iterator of the char codes.\r\n\r\n\t\tNote that char codes may differ across platforms because of different\r\n\t\tinternal encoding of strings in different runtimes.\r\n\t\tFor the consistent cross-platform UTF8 char codes see `haxe.iterators.StringIteratorUnicode`.\r\n\t**/\r\n\tpublic static inline function iterator(s:String):StringIterator {\r\n\t\treturn new StringIterator(s);\r\n\t}\r\n\r\n\t/**\r\n\t\tReturns an iterator of the char indexes and codes.\r\n\r\n\t\tNote that char codes may differ across platforms because of different\r\n\t\tinternal encoding of strings in different of runtimes.\r\n\t\tFor the consistent cross-platform UTF8 char codes see `haxe.iterators.StringKeyValueIteratorUnicode`.\r\n\t**/\r\n\tpublic static inline function keyValueIterator(s:String):StringKeyValueIterator {\r\n\t\treturn new StringKeyValueIterator(s);\r\n\t}\r\n\r\n\t/**\r\n\t\tTells if `c` represents the end-of-file (EOF) character.\r\n\t**/\r\n\t@:noUsing public static inline function isEof(c:Int):Bool {\r\n\t\t#if (flash || cpp || hl)\r\n\t\treturn c == 0;\r\n\t\t#elseif js\r\n\t\treturn c != c; // fast NaN\r\n\t\t#elseif (neko || lua || eval)\r\n\t\treturn c == null;\r\n\t\t#elseif (cs || java || python)\r\n\t\treturn c == -1;\r\n\t\t#else\r\n\t\treturn false;\r\n\t\t#end\r\n\t}\r\n\r\n\t/**\r\n\t\tReturns a String that can be used as a single command line argument\r\n\t\ton Unix.\r\n\t\tThe input will be quoted, or escaped if necessary.\r\n\t**/\r\n\t@:noCompletion\r\n\t@:deprecated('StringTools.quoteUnixArg() is deprecated. Use haxe.SysTools.quoteUnixArg() instead.')\r\n\tpublic static function quoteUnixArg(argument:String):String {\r\n\t\treturn inline haxe.SysTools.quoteUnixArg(argument);\r\n\t}\r\n\r\n\t/**\r\n\t\tCharacter codes of the characters that will be escaped by `quoteWinArg(_, true)`.\r\n\t**/\r\n\t@:noCompletion\r\n\t@:deprecated('StringTools.winMetaCharacters is deprecated. Use haxe.SysTools.winMetaCharacters instead.')\r\n\tpublic static var winMetaCharacters:Array<Int> = cast haxe.SysTools.winMetaCharacters;\r\n\r\n\t/**\r\n\t\tReturns a String that can be used as a single command line argument\r\n\t\ton Windows.\r\n\t\tThe input will be quoted, or escaped if necessary, such that the output\r\n\t\twill be parsed as a single argument using the rule specified in\r\n\t\thttp://msdn.microsoft.com/en-us/library/ms880421\r\n\r\n\t\tExamples:\r\n\t\t```haxe\r\n\t\tquoteWinArg(\"abc\") == \"abc\";\r\n\t\tquoteWinArg(\"ab c\") == '\"ab c\"';\r\n\t\t```\r\n\t**/\r\n\t@:noCompletion\r\n\t@:deprecated('StringTools.quoteWinArg() is deprecated. Use haxe.SysTools.quoteWinArg() instead.')\r\n\tpublic static function quoteWinArg(argument:String, escapeMetaCharacters:Bool):String {\r\n\t\treturn inline haxe.SysTools.quoteWinArg(argument, escapeMetaCharacters);\r\n\t}\r\n\r\n\t#if java\r\n\tprivate static inline function _charAt(str:String, idx:Int):java.StdTypes.Char16\r\n\t\treturn (cast str : java.NativeString).charAt(idx);\r\n\t#end\r\n\r\n\t#if neko\r\n\tprivate static var _urlEncode = neko.Lib.load(\"std\", \"url_encode\", 1);\r\n\tprivate static var _urlDecode = neko.Lib.load(\"std\", \"url_decode\", 1);\r\n\t#end\r\n\r\n\t#if utf16\r\n\tstatic inline var MIN_SURROGATE_CODE_POINT = 65536;\r\n\r\n\tstatic inline function utf16CodePointAt(s:String, index:Int):Int {\r\n\t\tvar c = StringTools.fastCodeAt(s, index);\r\n\t\tif (c >= 0xD800 && c <= 0xDBFF) {\r\n\t\t\tc = ((c - 0xD7C0) << 10) | (StringTools.fastCodeAt(s, index + 1) & 0x3FF);\r\n\t\t}\r\n\t\treturn c;\r\n\t}\r\n\t#end\r\n}\r\n","/*\r\n * Copyright (C)2005-2019 Haxe Foundation\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a\r\n * copy of this software and associated documentation files (the \"Software\"),\r\n * to deal in the Software without restriction, including without limitation\r\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\r\n * and/or sell copies of the Software, and to permit persons to whom the\r\n * Software is furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\r\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\r\n * DEALINGS IN THE SOFTWARE.\r\n */\r\nenum ValueType {\r\n\tTNull;\r\n\tTInt;\r\n\tTFloat;\r\n\tTBool;\r\n\tTObject;\r\n\tTFunction;\r\n\tTClass(c:Class<Dynamic>);\r\n\tTEnum(e:Enum<Dynamic>);\r\n\tTUnknown;\r\n}\r\n\r\n@:coreApi class Type {\r\n\tpublic static inline function getClass<T>(o:T):Class<T> {\r\n\t\treturn @:privateAccess js.Boot.getClass(o);\r\n\t}\r\n\r\n\tpublic static function getEnum(o:EnumValue):Enum<Dynamic>\r\n\t\tuntyped {\r\n\t\t\tif (o == null)\r\n\t\t\t\treturn null;\r\n\t\t\t#if js_enums_as_arrays\r\n\t\t\treturn o.__enum__;\r\n\t\t\t#else\r\n\t\t\treturn $hxEnums[o.__enum__];\r\n\t\t\t#end\r\n\t\t}\r\n\r\n\tpublic static inline function getSuperClass(c:Class<Dynamic>):Class<Dynamic> {\r\n\t\treturn untyped __define_feature__(\"Type.getSuperClass\", c.__super__);\r\n\t}\r\n\r\n\tpublic static inline function getClassName(c:Class<Dynamic>):String {\r\n\t\treturn untyped __define_feature__(\"Type.getClassName\", c.__name__);\r\n\t}\r\n\r\n\tpublic static inline function getEnumName(e:Enum<Dynamic>):String {\r\n\t\treturn untyped __define_feature__(\"Type.getEnumName\", e.__ename__);\r\n\t}\r\n\r\n\t#if js_enums_as_arrays\r\n\tpublic static function resolveClass(name:String):Class<Dynamic>\r\n\t\tuntyped {\r\n\t\t\tvar cl:Class<Dynamic> = $hxClasses[name];\r\n\t\t\t// ensure that this is a class\r\n\t\t\tif (cl == null || !js.Boot.isClass(cl))\r\n\t\t\t\treturn null;\r\n\t\t\treturn cl;\r\n\t\t}\r\n\r\n\tpublic static function resolveEnum(name:String):Enum<Dynamic>\r\n\t\tuntyped {\r\n\t\t\tvar e:Dynamic = $hxClasses[name];\r\n\t\t\t// ensure that this is an enum\r\n\t\t\tif (e == null || !js.Boot.isEnum(e))\r\n\t\t\t\treturn null;\r\n\t\t\treturn e;\r\n\t\t}\r\n\t#else\r\n\tpublic static inline function resolveClass(name:String):Class<Dynamic> {\r\n\t\treturn untyped __define_feature__(\"Type.resolveClass\", $hxClasses[name]);\r\n\t}\r\n\r\n\tpublic static inline function resolveEnum(name:String):Enum<Dynamic> {\r\n\t\treturn untyped __define_feature__(\"Type.resolveEnum\", $hxEnums[name]);\r\n\t}\r\n\t#end\r\n\r\n\t#if (js_es < 5)\r\n\tpublic static function createInstance<T>(cl:Class<T>, args:Array<Dynamic>):T {\r\n\t\tswitch (args.length) {\r\n\t\t\tcase 0:\r\n\t\t\t\treturn js.Syntax.construct(cl);\r\n\t\t\tcase 1:\r\n\t\t\t\treturn js.Syntax.construct(cl, args[0]);\r\n\t\t\tcase 2:\r\n\t\t\t\treturn js.Syntax.construct(cl, args[0], args[1]);\r\n\t\t\tcase 3:\r\n\t\t\t\treturn js.Syntax.construct(cl, args[0], args[1], args[2]);\r\n\t\t\tcase 4:\r\n\t\t\t\treturn js.Syntax.construct(cl, args[0], args[1], args[2], args[3]);\r\n\t\t\tcase 5:\r\n\t\t\t\treturn js.Syntax.construct(cl, args[0], args[1], args[2], args[3], args[4]);\r\n\t\t\tcase 6:\r\n\t\t\t\treturn js.Syntax.construct(cl, args[0], args[1], args[2], args[3], args[4], args[5]);\r\n\t\t\tcase 7:\r\n\t\t\t\treturn js.Syntax.construct(cl, args[0], args[1], args[2], args[3], args[4], args[5], args[6]);\r\n\t\t\tcase 8:\r\n\t\t\t\treturn js.Syntax.construct(cl, args[0], args[1], args[2], args[3], args[4], args[5], args[6], args[7]);\r\n\t\t\tcase 9:\r\n\t\t\t\treturn js.Syntax.construct(cl, args[0], args[1], args[2], args[3], args[4], args[5], args[6], args[7], args[8]);\r\n\t\t\tcase 10:\r\n\t\t\t\treturn js.Syntax.construct(cl, args[0], args[1], args[2], args[3], args[4], args[5], args[6], args[7], args[8], args[9]);\r\n\t\t\tcase 11:\r\n\t\t\t\treturn js.Syntax.construct(cl, args[0], args[1], args[2], args[3], args[4], args[5], args[6], args[7], args[8], args[9], args[10]);\r\n\t\t\tcase 12:\r\n\t\t\t\treturn js.Syntax.construct(cl, args[0], args[1], args[2], args[3], args[4], args[5], args[6], args[7], args[8], args[9], args[10], args[11]);\r\n\t\t\tcase 13:\r\n\t\t\t\treturn js.Syntax.construct(cl, args[0], args[1], args[2], args[3], args[4], args[5], args[6], args[7], args[8], args[9], args[10], args[11],\r\n\t\t\t\t\targs[12]);\r\n\t\t\tcase 14:\r\n\t\t\t\treturn js.Syntax.construct(cl, args[0], args[1], args[2], args[3], args[4], args[5], args[6], args[7], args[8], args[9], args[10], args[11],\r\n\t\t\t\t\targs[12], args[13]);\r\n\t\t\tdefault:\r\n\t\t\t\tthrow \"Too many arguments\";\r\n\t\t}\r\n\t}\r\n\r\n\tpublic static function createEmptyInstance<T>(cl:Class<T>):T\r\n\t\tuntyped {\r\n\t\t\t__js__(\"function empty() {}; empty.prototype = cl.prototype\");\r\n\t\t\treturn __js__(\"new empty()\");\r\n\t\t}\r\n\t#else\r\n\tpublic static function createInstance<T>(cl:Class<T>, args:Array<Dynamic>):T\r\n\t\tuntyped {\r\n\t\t\treturn untyped __js__(\"new ({0})\", Function.prototype.bind.apply(cl, [null].concat(args)));\r\n\t\t}\r\n\r\n\tpublic static inline function createEmptyInstance<T>(cl:Class<T>):T {\r\n\t\treturn js.lib.Object.create((cast cl).prototype);\r\n\t}\r\n\t#end\r\n\r\n\tpublic static function createEnum<T>(e:Enum<T>, constr:String, ?params:Array<Dynamic>):T {\r\n\t\tvar f:Dynamic = Reflect.field(e, constr);\r\n\t\tif (f == null)\r\n\t\t\tthrow \"No such constructor \" + constr;\r\n\t\tif (Reflect.isFunction(f)) {\r\n\t\t\tif (params == null)\r\n\t\t\t\tthrow \"Constructor \" + constr + \" need parameters\";\r\n\t\t\treturn Reflect.callMethod(e, f, params);\r\n\t\t}\r\n\t\tif (params != null && params.length != 0)\r\n\t\t\tthrow \"Constructor \" + constr + \" does not need parameters\";\r\n\t\treturn f;\r\n\t}\r\n\r\n\tpublic static function createEnumIndex<T>(e:Enum<T>, index:Int, ?params:Array<Dynamic>):T {\r\n\t\tvar c:String = (untyped e.__constructs__)[index];\r\n\t\tif (c == null)\r\n\t\t\tthrow index + \" is not a valid enum constructor index\";\r\n\t\treturn createEnum(e, c, params);\r\n\t}\r\n\r\n\t#if (js_es >= 6)\r\n\tpublic static function getInstanceFields(c:Class<Dynamic>):Array<String> {\r\n\t\tvar result = [];\r\n\t\twhile (c != null) {\r\n\t\t\tfor (name in js.lib.Object.getOwnPropertyNames((cast c).prototype)) {\r\n\t\t\t\tswitch name {\r\n\t\t\t\t\tcase \"constructor\" | \"__class__\" | \"__properties__\":\r\n\t\t\t\t\t// skip special names\r\n\t\t\t\t\tcase _:\r\n\t\t\t\t\t\tif (result.indexOf(name) == -1)\r\n\t\t\t\t\t\t\tresult.push(name);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tc = getSuperClass(c);\r\n\t\t}\r\n\t\treturn result;\r\n\t}\r\n\r\n\tpublic static function getClassFields(c:Class<Dynamic>):Array<String> {\r\n\t\tvar a = js.lib.Object.getOwnPropertyNames(cast c);\r\n\t\ta.remove(\"__id__\");\r\n\t\ta.remove(\"hx__closures__\");\r\n\t\ta.remove(\"__name__\");\r\n\t\ta.remove(\"__interfaces__\");\r\n\t\ta.remove(\"__isInterface__\");\r\n\t\ta.remove(\"__properties__\");\r\n\t\ta.remove(\"__instanceFields__\");\r\n\t\ta.remove(\"__super__\");\r\n\t\ta.remove(\"__meta__\");\r\n\t\ta.remove(\"prototype\");\r\n\t\ta.remove(\"name\");\r\n\t\ta.remove(\"length\");\r\n\t\treturn a;\r\n\t}\r\n\t#else\r\n\tpublic static function getInstanceFields(c:Class<Dynamic>):Array<String> {\r\n\t\tvar a = [];\r\n\t\tuntyped __js__(\"for(var i in c.prototype) a.push(i)\");\r\n\t\ta.remove(\"__class__\");\r\n\t\ta.remove(\"__properties__\");\r\n\t\treturn a;\r\n\t}\r\n\r\n\tpublic static function getClassFields(c:Class<Dynamic>):Array<String> {\r\n\t\tvar a = Reflect.fields(c);\r\n\t\ta.remove(\"__name__\");\r\n\t\ta.remove(\"__interfaces__\");\r\n\t\ta.remove(\"__properties__\");\r\n\t\ta.remove(\"__super__\");\r\n\t\ta.remove(\"__meta__\");\r\n\t\ta.remove(\"prototype\");\r\n\t\treturn a;\r\n\t}\r\n\t#end\r\n\r\n\tpublic static inline function getEnumConstructs(e:Enum<Dynamic>):Array<String> {\r\n\t\treturn ((cast e).__constructs__ : Array<String>).copy();\r\n\t}\r\n\r\n\t@:access(js.Boot)\r\n\tpublic static function typeof(v:Dynamic):ValueType {\r\n\t\tswitch (js.Syntax.typeof(v)) {\r\n\t\t\tcase \"boolean\":\r\n\t\t\t\treturn TBool;\r\n\t\t\tcase \"string\":\r\n\t\t\t\treturn TClass(String);\r\n\t\t\tcase \"number\":\r\n\t\t\t\t// this should handle all cases : NaN, +/-Inf and Floats outside range\r\n\t\t\t\tif (Math.ceil(v) == v % 2147483648.0)\r\n\t\t\t\t\treturn TInt;\r\n\t\t\t\treturn TFloat;\r\n\t\t\tcase \"object\":\r\n\t\t\t\tif (v == null)\r\n\t\t\t\t\treturn TNull;\r\n\t\t\t\tvar e = v.__enum__;\r\n\t\t\t\tif (e != null) {\r\n\t\t\t\t\t#if js_enums_as_arrays\r\n\t\t\t\t\treturn TEnum(e);\r\n\t\t\t\t\t#else\r\n\t\t\t\t\treturn TEnum(untyped $hxEnums[e]);\r\n\t\t\t\t\t#end\r\n\t\t\t\t}\r\n\t\t\t\tvar c = js.Boot.getClass(v);\r\n\t\t\t\tif (c != null)\r\n\t\t\t\t\treturn TClass(c);\r\n\t\t\t\treturn TObject;\r\n\t\t\tcase \"function\":\r\n\t\t\t\tif (js.Boot.isClass(v) || js.Boot.isEnum(v))\r\n\t\t\t\t\treturn TObject;\r\n\t\t\t\treturn TFunction;\r\n\t\t\tcase \"undefined\":\r\n\t\t\t\treturn TNull;\r\n\t\t\tdefault:\r\n\t\t\t\treturn TUnknown;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic static function enumEq<T:EnumValue>(a:T, b:T):Bool\r\n\t\tuntyped {\r\n\t\t\tif (a == b)\r\n\t\t\t\treturn true;\r\n\t\t\ttry {\r\n\t\t\t\tvar e = a.__enum__;\r\n\t\t\t\tif (e == null || e != b.__enum__)\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t#if js_enums_as_arrays\r\n\t\t\t\tif (a[0] != b[0])\r\n\t\t\t\t\treturn false;\r\n\t\t\t\tfor (i in 2...a.length)\r\n\t\t\t\t\tif (!enumEq(a[i], b[i]))\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t#else\r\n\t\t\t\tif (a._hx_index != b._hx_index)\r\n\t\t\t\t\treturn false;\r\n\t\t\t\tvar enm = $hxEnums[e];\r\n\t\t\t\tvar ctorName = enm.__constructs__[a._hx_index];\r\n\t\t\t\tvar params:Array<String> = enm[ctorName].__params__;\r\n\t\t\t\tfor (f in params) {\r\n\t\t\t\t\tif (!enumEq(a[f], b[f])) {\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t#end\r\n\t\t\t} catch (e:Dynamic) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\tpublic inline static function enumConstructor(e:EnumValue):String {\r\n\t\t#if js_enums_as_arrays\r\n\t\treturn untyped e[0];\r\n\t\t#else\r\n\t\treturn untyped $hxEnums[e.__enum__].__constructs__[e._hx_index];\r\n\t\t#end\r\n\t}\r\n\r\n\t#if js_enums_as_arrays\r\n\tpublic inline static function enumParameters(e:EnumValue):Array<Dynamic> {\r\n\t\treturn untyped e.slice(2);\r\n\t}\r\n\t#else\r\n\tpublic static function enumParameters(e:EnumValue):Array<Dynamic>\r\n\t\tuntyped {\r\n\t\t\tvar enm:Enum<Dynamic> = $hxEnums[e.__enum__];\r\n\t\t\tvar ctorName:String = enm.__constructs__[e._hx_index];\r\n\t\t\tvar params:Array<String> = enm[ctorName].__params__;\r\n\t\t\treturn params != null ? [for (p in params) e[p]] : [];\r\n\t\t}\r\n\t#end\r\n\r\n\tpublic inline static function enumIndex(e:EnumValue):Int {\r\n\t\t#if !js_enums_as_arrays\r\n\t\treturn untyped e._hx_index;\r\n\t\t#else\r\n\t\treturn untyped e[1];\r\n\t\t#end\r\n\t}\r\n\r\n\tpublic inline static function allEnums<T>(e:Enum<T>):Array<T> {\r\n\t\treturn untyped __define_feature__(\"Type.allEnums\", e.__empty_constructs__.slice());\r\n\t}\r\n}\r\n","/*\r\n * Copyright (C)2005-2019 Haxe Foundation\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a\r\n * copy of this software and associated documentation files (the \"Software\"),\r\n * to deal in the Software without restriction, including without limitation\r\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\r\n * and/or sell copies of the Software, and to permit persons to whom the\r\n * Software is furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\r\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\r\n * DEALINGS IN THE SOFTWARE.\r\n */\r\n#if ((flash || flash9doc || cs || hl) && !doc_gen)\r\n/**\r\n\tThe unsigned `Int` type is only defined for Flash and C#. It's currently\r\n\thandled the same as a normal Int.\r\n\r\n\t@see https://haxe.org/manual/types-basic-types.html\r\n**/\r\n@:coreType\r\n@:notNull\r\n@:runtimeValue\r\n@:analyzer(no_const_propagation)\r\nabstract UInt to Int from Int {\r\n\t@:commutative @:op(A + B) private static function addI(lhs:UInt, rhs:Int):UInt;\r\n\r\n\t@:commutative @:op(A + B) private static function addF(lhs:UInt, rhs:Float):Float;\r\n\r\n\t@:op(A + B) private static function add(lhs:UInt, rhs:UInt):UInt;\r\n\r\n\t@:commutative @:op(A * B) private static function mulI(lhs:UInt, rhs:Int):UInt;\r\n\r\n\t@:commutative @:op(A * B) private static function mulF(lhs:UInt, rhs:Float):Float;\r\n\r\n\t@:op(A * B) private static function mul(lhs:UInt, rhs:UInt):UInt;\r\n\r\n\t@:op(A % B) private static function modI(lhs:UInt, rhs:Int):UInt;\r\n\r\n\t@:op(A % B) private static function modF(lhs:UInt, rhs:Float):Float;\r\n\r\n\t@:op(A % B) private static function mod(lhs:UInt, rhs:UInt):UInt;\r\n\r\n\t@:op(A - B) private static function subI(lhs:UInt, rhs:Int):UInt;\r\n\r\n\t@:op(A - B) private static function subF(lhs:UInt, rhs:Float):Float;\r\n\r\n\t@:op(A - B) private static function sub(lhs:UInt, rhs:UInt):UInt;\r\n\r\n\t@:op(A / B) private static function divI(lhs:UInt, rhs:Int):Float;\r\n\r\n\t@:op(A / B) private static function divF(lhs:UInt, rhs:Float):Float;\r\n\r\n\t@:op(A / B) private static function div(lhs:UInt, rhs:UInt):Float;\r\n\r\n\t@:commutative @:op(A | B) private static function orI(lhs:UInt, rhs:Int):UInt;\r\n\r\n\t@:op(A | B) private static function or(lhs:UInt, rhs:UInt):UInt;\r\n\r\n\t@:commutative @:op(A ^ B) private static function xorI(lhs:UInt, rhs:Int):UInt;\r\n\r\n\t@:op(A ^ B) private static function xor(lhs:UInt, rhs:UInt):UInt;\r\n\r\n\t@:commutative @:op(A & B) private static function andI(lhs:UInt, rhs:Int):UInt;\r\n\r\n\t@:op(A & B) private static function and(lhs:UInt, rhs:UInt):UInt;\r\n\r\n\t@:op(A << B) private static function shl(lhs:UInt, rhs:Int):UInt;\r\n\r\n\t@:op(A >> B) private static inline function shr(lhs:UInt, rhs:Int):UInt\r\n\t\treturn lhs >>> rhs;\r\n\r\n\t@:op(A >>> B) private static function ushr(lhs:UInt, rhs:Int):UInt;\r\n\r\n\t@:op(A > B) private static function gt(lhs:UInt, rhs:UInt):Bool;\r\n\r\n\t@:op(A >= B) private static function gte(lhs:UInt, rhs:UInt):Bool;\r\n\r\n\t@:op(A < B) private static function lt(lhs:UInt, rhs:UInt):Bool;\r\n\r\n\t@:op(A <= B) private static function lte(lhs:UInt, rhs:UInt):Bool;\r\n\r\n\t@:op(A > B) private static function gtf(lhs:UInt, rhs:Float):Bool;\r\n\r\n\t@:op(A > B) private static function gtf2(lhs:Float, rhs:UInt):Bool;\r\n\r\n\t@:op(A >= B) private static function gtef(lhs:UInt, rhs:Float):Bool;\r\n\r\n\t@:op(A >= B) private static function gtef2(lhs:Float, rhs:UInt):Bool;\r\n\r\n\t@:op(A < B) private static function ltf(lhs:UInt, rhs:Float):Bool;\r\n\r\n\t@:op(A < B) private static function ltf2(lhs:Float, rhs:UInt):Bool;\r\n\r\n\t@:op(A <= B) private static function ltef(lhs:UInt, rhs:Float):Bool;\r\n\r\n\t@:op(A <= B) private static function ltef2(lhs:Float, rhs:UInt):Bool;\r\n\r\n\t@:op(~A) private static function bneg(t:UInt):UInt;\r\n\r\n\t@:commutative @:op(A == B) private static function equalsInt<T:Int>(a:UInt, b:T):Bool;\r\n\r\n\t@:commutative @:op(A != B) private static function notEqualsInt<T:Int>(a:UInt, b:T):Bool;\r\n\r\n\t@:commutative @:op(A == B) private static function equalsFloat<T:Float>(a:UInt, b:T):Bool;\r\n\r\n\t@:commutative @:op(A != B) private static function notEqualsFloat<T:Float>(a:UInt, b:T):Bool;\r\n\r\n\t@:op(++A) private function prefixIncrement():UInt;\r\n\r\n\t@:op(A++) private function postfixIncrement():UInt;\r\n\r\n\t@:op(--A) private function prefixDecrement():UInt;\r\n\r\n\t@:op(A--) private function postfixDecrement():UInt;\r\n}\r\n#else\r\n\r\n/**\r\n\tThe unsigned `Int` type is only defined for Flash and C#.\r\n\tSimulate it for other platforms.\r\n\r\n\t@see https://haxe.org/manual/types-basic-types.html\r\n**/\r\nabstract UInt(Int) from Int to Int {\r\n\t@:op(A + B) private static inline function add(a:UInt, b:UInt):UInt {\r\n\t\treturn a.toInt() + b.toInt();\r\n\t}\r\n\r\n\t@:op(A / B) private static inline function div(a:UInt, b:UInt):Float {\r\n\t\treturn a.toFloat() / b.toFloat();\r\n\t}\r\n\r\n\t@:op(A * B) private static inline function mul(a:UInt, b:UInt):UInt {\r\n\t\treturn a.toInt() * b.toInt();\r\n\t}\r\n\r\n\t@:op(A - B) private static inline function sub(a:UInt, b:UInt):UInt {\r\n\t\treturn a.toInt() - b.toInt();\r\n\t}\r\n\r\n\t@:op(A > B)\r\n\tprivate static #if !js inline #end function gt(a:UInt, b:UInt):Bool {\r\n\t\tvar aNeg = a.toInt() < 0;\r\n\t\tvar bNeg = b.toInt() < 0;\r\n\t\treturn if (aNeg != bNeg) aNeg; else a.toInt() > b.toInt();\r\n\t}\r\n\r\n\t@:op(A >= B)\r\n\tprivate static #if !js inline #end function gte(a:UInt, b:UInt):Bool {\r\n\t\tvar aNeg = a.toInt() < 0;\r\n\t\tvar bNeg = b.toInt() < 0;\r\n\t\treturn if (aNeg != bNeg) aNeg; else a.toInt() >= b.toInt();\r\n\t}\r\n\r\n\t@:op(A < B) private static inline function lt(a:UInt, b:UInt):Bool {\r\n\t\treturn gt(b, a);\r\n\t}\r\n\r\n\t@:op(A <= B) private static inline function lte(a:UInt, b:UInt):Bool {\r\n\t\treturn gte(b, a);\r\n\t}\r\n\r\n\t@:op(A & B) private static inline function and(a:UInt, b:UInt):UInt {\r\n\t\treturn a.toInt() & b.toInt();\r\n\t}\r\n\r\n\t@:op(A | B) private static inline function or(a:UInt, b:UInt):UInt {\r\n\t\treturn a.toInt() | b.toInt();\r\n\t}\r\n\r\n\t@:op(A ^ B) private static inline function xor(a:UInt, b:UInt):UInt {\r\n\t\treturn a.toInt() ^ b.toInt();\r\n\t}\r\n\r\n\t@:op(A << B) private static inline function shl(a:UInt, b:Int):UInt {\r\n\t\treturn a.toInt() << b;\r\n\t}\r\n\r\n\t@:op(A >> B) private static inline function shr(a:UInt, b:Int):UInt {\r\n\t\treturn a.toInt() >>> b;\r\n\t}\r\n\r\n\t@:op(A >>> B) private static inline function ushr(a:UInt, b:Int):UInt {\r\n\t\treturn a.toInt() >>> b;\r\n\t}\r\n\r\n\t@:op(A % B) private static inline function mod(a:UInt, b:UInt):UInt {\r\n\t\treturn Std.int(a.toFloat() % b.toFloat());\r\n\t}\r\n\r\n\t@:commutative @:op(A + B) private static inline function addWithFloat(a:UInt, b:Float):Float {\r\n\t\treturn a.toFloat() + b;\r\n\t}\r\n\r\n\t@:commutative @:op(A * B) private static inline function mulWithFloat(a:UInt, b:Float):Float {\r\n\t\treturn a.toFloat() * b;\r\n\t}\r\n\r\n\t@:op(A / B) private static inline function divFloat(a:UInt, b:Float):Float {\r\n\t\treturn a.toFloat() / b;\r\n\t}\r\n\r\n\t@:op(A / B) private static inline function floatDiv(a:Float, b:UInt):Float {\r\n\t\treturn a / b.toFloat();\r\n\t}\r\n\r\n\t@:op(A - B) private static inline function subFloat(a:UInt, b:Float):Float {\r\n\t\treturn a.toFloat() - b;\r\n\t}\r\n\r\n\t@:op(A - B) private static inline function floatSub(a:Float, b:UInt):Float {\r\n\t\treturn a - b.toFloat();\r\n\t}\r\n\r\n\t@:op(A > B) private static inline function gtFloat(a:UInt, b:Float):Bool {\r\n\t\treturn a.toFloat() > b;\r\n\t}\r\n\r\n\t@:commutative @:op(A == B) private static inline function equalsInt<T:Int>(a:UInt, b:T):Bool {\r\n\t\treturn a.toInt() == b;\r\n\t}\r\n\r\n\t@:commutative @:op(A != B) private static inline function notEqualsInt<T:Int>(a:UInt, b:T):Bool {\r\n\t\treturn a.toInt() != b;\r\n\t}\r\n\r\n\t@:commutative @:op(A == B) private static inline function equalsFloat<T:Float>(a:UInt, b:T):Bool {\r\n\t\treturn a.toFloat() == b;\r\n\t}\r\n\r\n\t@:commutative @:op(A != B) private static inline function notEqualsFloat<T:Float>(a:UInt, b:T):Bool {\r\n\t\treturn a.toFloat() != b;\r\n\t}\r\n\r\n\t@:op(A >= B) private static inline function gteFloat(a:UInt, b:Float):Bool {\r\n\t\treturn a.toFloat() >= b;\r\n\t}\r\n\r\n\t@:op(A > B) private static inline function floatGt(a:Float, b:UInt):Bool {\r\n\t\treturn a > b.toFloat();\r\n\t}\r\n\r\n\t@:op(A >= B) private static inline function floatGte(a:Float, b:UInt):Bool {\r\n\t\treturn a >= b.toFloat();\r\n\t}\r\n\r\n\t@:op(A < B) private static inline function ltFloat(a:UInt, b:Float):Bool {\r\n\t\treturn a.toFloat() < b;\r\n\t}\r\n\r\n\t@:op(A <= B) private static inline function lteFloat(a:UInt, b:Float):Bool {\r\n\t\treturn a.toFloat() <= b;\r\n\t}\r\n\r\n\t@:op(A < B) private static inline function floatLt(a:Float, b:UInt):Bool {\r\n\t\treturn a < b.toFloat();\r\n\t}\r\n\r\n\t@:op(A <= B) private static inline function floatLte(a:Float, b:UInt):Bool {\r\n\t\treturn a <= b.toFloat();\r\n\t}\r\n\r\n\t@:op(A % B) private static inline function modFloat(a:UInt, b:Float):Float {\r\n\t\treturn a.toFloat() % b;\r\n\t}\r\n\r\n\t@:op(A % B) private static inline function floatMod(a:Float, b:UInt):Float {\r\n\t\treturn a % b.toFloat();\r\n\t}\r\n\r\n\t@:op(~A) private inline function negBits():UInt {\r\n\t\treturn ~this;\r\n\t}\r\n\r\n\t@:op(++A) private inline function prefixIncrement():UInt {\r\n\t\treturn ++this;\r\n\t}\r\n\r\n\t@:op(A++) private inline function postfixIncrement():UInt {\r\n\t\treturn this++;\r\n\t}\r\n\r\n\t@:op(--A) private inline function prefixDecrement():UInt {\r\n\t\treturn --this;\r\n\t}\r\n\r\n\t@:op(A--) private inline function postfixDecrement():UInt {\r\n\t\treturn this--;\r\n\t}\r\n\r\n\t// TODO: radix is just defined to deal with doc_gen issues\r\n\tprivate inline function toString(?radix:Int):String {\r\n\t\t#if static\r\n\t\treturn Std.string(toFloat());\r\n\t\t#else\r\n\t\treturn Std.string(this == null ? null : toFloat());\r\n\t\t#end\r\n\t}\r\n\r\n\tprivate inline function toInt():Int {\r\n\t\treturn this;\r\n\t}\r\n\r\n\t@:to private #if (!js || analyzer) inline #end function toFloat():Float {\r\n\t\tvar int = toInt();\r\n\t\tif (int < 0) {\r\n\t\t\treturn 4294967296.0 + int;\r\n\t\t} else {\r\n\t\t\t// + 0.0 here to make sure we promote to Float on some platforms\r\n\t\t\t// In particular, PHP was having issues when comparing to Int in the == op.\r\n\t\t\treturn int + 0.0;\r\n\t\t}\r\n\t}\r\n}\r\n#end\r\n","/*\r\n * Copyright (C)2005-2019 Haxe Foundation\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a\r\n * copy of this software and associated documentation files (the \"Software\"),\r\n * to deal in the Software without restriction, including without limitation\r\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\r\n * and/or sell copies of the Software, and to permit persons to whom the\r\n * Software is furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\r\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\r\n * DEALINGS IN THE SOFTWARE.\r\n */\r\n\r\n/**\r\n\tXml node types.\r\n\r\n\t@see https://haxe.org/manual/std-Xml.html\r\n**/\r\nenum abstract XmlType(Int) {\r\n\t/**\r\n\t\tRepresents an XML element type.\r\n\t**/\r\n\tvar Element = 0;\r\n\r\n\t/**\r\n\t\tRepresents XML parsed character data type.\r\n\t**/\r\n\tvar PCData = 1;\r\n\r\n\t/**\r\n\t\tRepresents XML character data type.\r\n\t**/\r\n\tvar CData = 2;\r\n\r\n\t/**\r\n\t\tRepresents an XML comment type.\r\n\t**/\r\n\tvar Comment = 3;\r\n\r\n\t/**\r\n\t\tRepresents an XML doctype element type.\r\n\t**/\r\n\tvar DocType = 4;\r\n\r\n\t/**\r\n\t\tRepresents an XML processing instruction type.\r\n\t**/\r\n\tvar ProcessingInstruction = 5;\r\n\r\n\t/**\r\n\t\tRepresents an XML document type.\r\n\t**/\r\n\tvar Document = 6;\r\n\r\n\tpublic function toString():String {\r\n\t\treturn switch (cast this : XmlType) {\r\n\t\t\tcase Element: \"Element\";\r\n\t\t\tcase PCData: \"PCData\";\r\n\t\t\tcase CData: \"CData\";\r\n\t\t\tcase Comment: \"Comment\";\r\n\t\t\tcase DocType: \"DocType\";\r\n\t\t\tcase ProcessingInstruction: \"ProcessingInstruction\";\r\n\t\t\tcase Document: \"Document\";\r\n\t\t};\r\n\t}\r\n}\r\n\r\n/**\r\n\tCross-platform Xml API.\r\n\r\n\t@see https://haxe.org/manual/std-Xml.html\r\n**/\r\nclass Xml {\r\n\t/**\r\n\t\tXML element type.\r\n\t**/\r\n\tstatic public var Element(default, never) = XmlType.Element;\r\n\r\n\t/**\r\n\t\tXML parsed character data type.\r\n\t**/\r\n\tstatic public var PCData(default, never) = XmlType.PCData;\r\n\r\n\t/**\r\n\t\tXML character data type.\r\n\t**/\r\n\tstatic public var CData(default, never) = XmlType.CData;\r\n\r\n\t/**\r\n\t\tXML comment type.\r\n\t**/\r\n\tstatic public var Comment(default, never) = XmlType.Comment;\r\n\r\n\t/**\r\n\t\tXML doctype element type.\r\n\t**/\r\n\tstatic public var DocType(default, never) = XmlType.DocType;\r\n\r\n\t/**\r\n\t\tXML processing instruction type.\r\n\t**/\r\n\tstatic public var ProcessingInstruction(default, never) = XmlType.ProcessingInstruction;\r\n\r\n\t/**\r\n\t\tXML document type.\r\n\t**/\r\n\tstatic public var Document(default, never) = XmlType.Document;\r\n\r\n\t/**\r\n\t\tParses the String into an Xml document.\r\n\t**/\r\n\tstatic public function parse(str:String):Xml {\r\n\t\treturn haxe.xml.Parser.parse(str);\r\n\t}\r\n\r\n\t/**\r\n\t\tReturns the type of the Xml Node. This should be used before\r\n\t\taccessing other functions since some might raise an exception\r\n\t\tif the node type is not correct.\r\n\t**/\r\n\tpublic var nodeType(default, null):XmlType;\r\n\r\n\t/**\r\n\t\tReturns the node name of an Element.\r\n\t**/\r\n\t@:isVar public var nodeName(get, set):String;\r\n\r\n\t/**\r\n\t\tReturns the node value. Only works if the Xml node is not an Element or a Document.\r\n\t**/\r\n\t@:isVar public var nodeValue(get, set):String;\r\n\r\n\t/**\r\n\t\tReturns the parent object in the Xml hierarchy.\r\n\t\tThe parent can be `null`, an Element or a Document.\r\n\t**/\r\n\tpublic var parent(default, null):Xml;\r\n\r\n\tvar children:Array<Xml>;\r\n\tvar attributeMap:Map<String, String>;\r\n\r\n\t#if !cppia inline #end function get_nodeName() {\r\n\t\tif (nodeType != Element) {\r\n\t\t\tthrow 'Bad node type, expected Element but found $nodeType';\r\n\t\t}\r\n\t\treturn nodeName;\r\n\t}\r\n\r\n\t#if !cppia inline #end function set_nodeName(v) {\r\n\t\tif (nodeType != Element) {\r\n\t\t\tthrow 'Bad node type, expected Element but found $nodeType';\r\n\t\t}\r\n\t\treturn this.nodeName = v;\r\n\t}\r\n\r\n\t#if !cppia inline #end function get_nodeValue() {\r\n\t\tif (nodeType == Document || nodeType == Element) {\r\n\t\t\tthrow 'Bad node type, unexpected $nodeType';\r\n\t\t}\r\n\t\treturn nodeValue;\r\n\t}\r\n\r\n\t#if !cppia inline #end function set_nodeValue(v) {\r\n\t\tif (nodeType == Document || nodeType == Element) {\r\n\t\t\tthrow 'Bad node type, unexpected $nodeType';\r\n\t\t}\r\n\t\treturn this.nodeValue = v;\r\n\t}\r\n\r\n\t/**\r\n\t\tCreates a node of the given type.\r\n\t**/\r\n\tstatic public function createElement(name:String):Xml {\r\n\t\tvar xml = new Xml(Element);\r\n\t\txml.nodeName = name;\r\n\t\treturn xml;\r\n\t}\r\n\r\n\t/**\r\n\t\tCreates a node of the given type.\r\n\t**/\r\n\tstatic public function createPCData(data:String):Xml {\r\n\t\tvar xml = new Xml(PCData);\r\n\t\txml.nodeValue = data;\r\n\t\treturn xml;\r\n\t}\r\n\r\n\t/**\r\n\t\tCreates a node of the given type.\r\n\t**/\r\n\tstatic public function createCData(data:String):Xml {\r\n\t\tvar xml = new Xml(CData);\r\n\t\txml.nodeValue = data;\r\n\t\treturn xml;\r\n\t}\r\n\r\n\t/**\r\n\t\tCreates a node of the given type.\r\n\t**/\r\n\tstatic public function createComment(data:String):Xml {\r\n\t\tvar xml = new Xml(Comment);\r\n\t\txml.nodeValue = data;\r\n\t\treturn xml;\r\n\t}\r\n\r\n\t/**\r\n\t\tCreates a node of the given type.\r\n\t**/\r\n\tstatic public function createDocType(data:String):Xml {\r\n\t\tvar xml = new Xml(DocType);\r\n\t\txml.nodeValue = data;\r\n\t\treturn xml;\r\n\t}\r\n\r\n\t/**\r\n\t\tCreates a node of the given type.\r\n\t**/\r\n\tstatic public function createProcessingInstruction(data:String):Xml {\r\n\t\tvar xml = new Xml(ProcessingInstruction);\r\n\t\txml.nodeValue = data;\r\n\t\treturn xml;\r\n\t}\r\n\r\n\t/**\r\n\t\tCreates a node of the given type.\r\n\t**/\r\n\tstatic public function createDocument():Xml {\r\n\t\treturn new Xml(Document);\r\n\t}\r\n\r\n\t/**\r\n\t\tGet the given attribute of an Element node. Returns `null` if not found.\r\n\t\tAttributes are case-sensitive.\r\n\t**/\r\n\tpublic function get(att:String):String {\r\n\t\tif (nodeType != Element) {\r\n\t\t\tthrow 'Bad node type, expected Element but found $nodeType';\r\n\t\t}\r\n\t\treturn attributeMap[att];\r\n\t}\r\n\r\n\t/**\r\n\t\tSet the given attribute value for an Element node.\r\n\t\tAttributes are case-sensitive.\r\n\t**/\r\n\tpublic function set(att:String, value:String):Void {\r\n\t\tif (nodeType != Element) {\r\n\t\t\tthrow 'Bad node type, expected Element but found $nodeType';\r\n\t\t}\r\n\t\tattributeMap.set(att, value);\r\n\t}\r\n\r\n\t/**\r\n\t\tRemoves an attribute for an Element node.\r\n\t\tAttributes are case-sensitive.\r\n\t**/\r\n\tpublic function remove(att:String):Void {\r\n\t\tif (nodeType != Element) {\r\n\t\t\tthrow 'Bad node type, expected Element but found $nodeType';\r\n\t\t}\r\n\t\tattributeMap.remove(att);\r\n\t}\r\n\r\n\t/**\r\n\t\tTells if the Element node has a given attribute.\r\n\t\tAttributes are case-sensitive.\r\n\t**/\r\n\tpublic function exists(att:String):Bool {\r\n\t\tif (nodeType != Element) {\r\n\t\t\tthrow 'Bad node type, expected Element but found $nodeType';\r\n\t\t}\r\n\t\treturn attributeMap.exists(att);\r\n\t}\r\n\r\n\t/**\r\n\t\tReturns an `Iterator` on all the attribute names.\r\n\t**/\r\n\tpublic function attributes():Iterator<String> {\r\n\t\tif (nodeType != Element) {\r\n\t\t\tthrow 'Bad node type, expected Element but found $nodeType';\r\n\t\t}\r\n\t\treturn attributeMap.keys();\r\n\t}\r\n\r\n\t/**\r\n\t\tReturns an iterator of all child nodes.\r\n\t\tOnly works if the current node is an Element or a Document.\r\n\t**/\r\n\tpublic #if !cppia inline #end function iterator():Iterator<Xml> {\r\n\t\tensureElementType();\r\n\t\treturn children.iterator();\r\n\t}\r\n\r\n\t/**\r\n\t\tReturns an iterator of all child nodes which are Elements.\r\n\t\tOnly works if the current node is an Element or a Document.\r\n\t**/\r\n\tpublic function elements():Iterator<Xml> {\r\n\t\tensureElementType();\r\n\t\tvar ret = [for (child in children) if (child.nodeType == Element) child];\r\n\t\treturn ret.iterator();\r\n\t}\r\n\r\n\t/**\r\n\t\tReturns an iterator of all child nodes which are Elements with the given nodeName.\r\n\t\tOnly works if the current node is an Element or a Document.\r\n\t**/\r\n\tpublic function elementsNamed(name:String):Iterator<Xml> {\r\n\t\tensureElementType();\r\n\t\tvar ret = [\r\n\t\t\tfor (child in children)\r\n\t\t\t\tif (child.nodeType == Element && child.nodeName == name) child\r\n\t\t];\r\n\t\treturn ret.iterator();\r\n\t}\r\n\r\n\t/**\r\n\t\tReturns the first child node.\r\n\t**/\r\n\tpublic #if !cppia inline #end function firstChild():Xml {\r\n\t\tensureElementType();\r\n\t\treturn children[0];\r\n\t}\r\n\r\n\t/**\r\n\t\tReturns the first child node which is an Element.\r\n\t**/\r\n\tpublic function firstElement():Xml {\r\n\t\tensureElementType();\r\n\t\tfor (child in children) {\r\n\t\t\tif (child.nodeType == Element) {\r\n\t\t\t\treturn child;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t\tAdds a child node to the Document or Element.\r\n\t\tA child node can only be inside one given parent node, which is indicated by the `parent` property.\r\n\t\tIf the child is already inside this Document or Element, it will be moved to the last position among the Document or Element's children.\r\n\t\tIf the child node was previously inside a different node, it will be moved to this Document or Element.\r\n\t**/\r\n\tpublic function addChild(x:Xml):Void {\r\n\t\tensureElementType();\r\n\t\tif (x.parent != null) {\r\n\t\t\tx.parent.removeChild(x);\r\n\t\t}\r\n\t\tchildren.push(x);\r\n\t\tx.parent = this;\r\n\t}\r\n\r\n\t/**\r\n\t\tRemoves a child from the Document or Element.\r\n\t\tReturns true if the child was successfuly removed.\r\n\t**/\r\n\tpublic function removeChild(x:Xml):Bool {\r\n\t\tensureElementType();\r\n\t\tif (children.remove(x)) {\r\n\t\t\tx.parent = null;\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t\tInserts a child at the given position among the other childs.\r\n\t\tA child node can only be inside one given parent node, which is indicated by the [parent] property.\r\n\t\tIf the child is already inside this Document or Element, it will be moved to the new position among the Document or Element's children.\r\n\t\tIf the child node was previously inside a different node, it will be moved to this Document or Element.\r\n\t**/\r\n\tpublic function insertChild(x:Xml, pos:Int):Void {\r\n\t\tensureElementType();\r\n\t\tif (x.parent != null) {\r\n\t\t\tx.parent.children.remove(x);\r\n\t\t}\r\n\t\tchildren.insert(pos, x);\r\n\t\tx.parent = this;\r\n\t}\r\n\r\n\t/**\r\n\t\tReturns a String representation of the Xml node.\r\n\t**/\r\n\tpublic #if !cppia inline #end function toString():String {\r\n\t\treturn haxe.xml.Printer.print(this);\r\n\t}\r\n\r\n\tfunction new(nodeType:XmlType) {\r\n\t\tthis.nodeType = nodeType;\r\n\t\tchildren = [];\r\n\t\tattributeMap = new Map();\r\n\t}\r\n\r\n\tinline function ensureElementType() {\r\n\t\tif (nodeType != Document && nodeType != Element) {\r\n\t\t\tthrow 'Bad node type, expected Element or Document but found $nodeType';\r\n\t\t}\r\n\t}\r\n}\r\n","/*\r\n * Copyright (C)2005-2019 Haxe Foundation\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a\r\n * copy of this software and associated documentation files (the \"Software\"),\r\n * to deal in the Software without restriction, including without limitation\r\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\r\n * and/or sell copies of the Software, and to permit persons to whom the\r\n * Software is furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\r\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\r\n * DEALINGS IN THE SOFTWARE.\r\n */\r\n\r\npackage haxe;\r\n\r\n/**\r\n\tLog primarily provides the `trace()` method, which is invoked upon a call to\r\n\t`trace()` in Haxe code.\r\n**/\r\nclass Log {\r\n\t/**\r\n\t\tFormat the output of `trace` before printing it.\r\n\t**/\r\n\tpublic static function formatOutput(v:Dynamic, infos:PosInfos):String {\r\n\t\tvar str = Std.string(v);\r\n\t\tif (infos == null)\r\n\t\t\treturn str;\r\n\t\tvar pstr = infos.fileName + \":\" + infos.lineNumber;\r\n\t\tif (infos.customParams != null)\r\n\t\t\tfor (v in infos.customParams)\r\n\t\t\t\tstr += \", \" + Std.string(v);\r\n\t\treturn pstr + \": \" + str;\r\n\t}\r\n\r\n\t/**\r\n\t\tOutputs `v` in a platform-dependent way.\r\n\r\n\t\tThe second parameter `infos` is injected by the compiler and contains\r\n\t\tinformation about the position where the `trace()` call was made.\r\n\r\n\t\tThis method can be rebound to a custom function:\r\n\r\n\t\t\tvar oldTrace = haxe.Log.trace; // store old function\r\n\t\t\thaxe.Log.trace = function(v, ?infos) {\r\n\t\t\t  // handle trace\r\n\t\t\t}\r\n\t\t\t...\r\n\t\t\thaxe.Log.trace = oldTrace;\r\n\r\n\t\tIf it is bound to null, subsequent calls to `trace()` will cause an\r\n\t\texception.\r\n\t**/\r\n\tpublic static dynamic function trace(v:Dynamic, ?infos:PosInfos):Void {\r\n\t\tvar str = formatOutput(v, infos);\r\n\t\t#if js\r\n\t\tif (js.Syntax.typeof(untyped console) != \"undefined\" && (untyped console).log != null)\r\n\t\t\t(untyped console).log(str);\r\n\t\t#elseif lua\r\n\t\tuntyped __define_feature__(\"use._hx_print\", _hx_print(str));\r\n\t\t#elseif sys\r\n\t\tSys.println(str);\r\n\t\t#else\r\n\t\tthrow \"Not implemented\"\r\n\t\t#end\r\n\t}\r\n}\r\n","/*\r\n * Copyright (C)2005-2017 Haxe Foundation\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a\r\n * copy of this software and associated documentation files (the \"Software\"),\r\n * to deal in the Software without restriction, including without limitation\r\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\r\n * and/or sell copies of the Software, and to permit persons to whom the\r\n * Software is furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\r\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\r\n * DEALINGS IN THE SOFTWARE.\r\n */\r\npackage haxe;\r\n\r\n/**\r\n\tThe Timer class allows you to create asynchronous timers on platforms that\r\n\tsupport events.\r\n\r\n\tThe intended usage is to create an instance of the Timer class with a given\r\n\tinterval, set its run() method to a custom function to be invoked and\r\n\teventually call stop() to stop the Timer.\r\n\r\n\tNote that a running Timer may or may not prevent the program to exit\r\n\tautomatically when main() returns.\r\n\r\n\tIt is also possible to extend this class and override its run() method in\r\n\tthe child class.\r\n**/\r\nclass Timer {\r\n\r\n\t#if macro\r\n\t\tprivate var event : MainLoop.MainEvent;\r\n\t#else\r\n\t\tprivate var id : Null<Int>;\r\n\t#end\r\n\r\n\t/**\r\n\t\tCreates a new timer that will run every `time_ms` milliseconds.\r\n\r\n\t\tAfter creating the Timer instance, it calls `this.run` repeatedly,\r\n\t\twith delays of `time_ms` milliseconds, until `this.stop` is called.\r\n\r\n\t\tThe first invocation occurs after `time_ms` milliseconds, not\r\n\t\timmediately.\r\n\r\n\t\tThe accuracy of this may be platform-dependent.\r\n\t**/\r\n\tpublic function new( time_ms : Int ){\r\n\t\tvar me = this;\r\n\t\t#if macro\r\n\t\t\tvar dt = time_ms / 1000;\r\n\t\t\tevent = MainLoop.add(function() {\r\n\t\t\t\t@:privateAccess event.nextRun += dt;\r\n\t\t\t\trun();\r\n\t\t\t});\r\n\t\t\tevent.delay(dt);\r\n\t\t#else\r\n\t\t\tid = kha.Scheduler.addTimeTask(function() me.run(), time_ms / 1000, time_ms / 1000);\r\n\t\t#end\r\n\t}\r\n\r\n\t/**\r\n\t\tStops `this` Timer.\r\n\r\n\t\tAfter calling this method, no additional invocations of `this.run`\r\n\t\twill occur.\r\n\r\n\t\tIt is not possible to restart `this` Timer once stopped.\r\n\t**/\r\n\tpublic function stop() {\r\n\t\t#if macro\r\n\t\t\tif( event != null ) {\r\n\t\t\t\tevent.stop();\r\n\t\t\t\tevent = null;\r\n\t\t\t}\r\n\t\t#else\r\n\t\t\tif( id == null )\r\n\t\t\t\treturn;\r\n\t\t\tkha.Scheduler.removeTimeTask(id);\r\n\t\t\tid = null;\r\n\t\t#end\r\n\t}\r\n\r\n\t/**\r\n\t\tThis method is invoked repeatedly on `this` Timer.\r\n\r\n\t\tIt can be overridden in a subclass, or rebound directly to a custom\r\n\t\tfunction:\r\n\t\t\tvar timer = new haxe.Timer(1000); // 1000ms delay\r\n\t\t\ttimer.run = function() { ... }\r\n\r\n\t\tOnce bound, it can still be rebound to different functions until `this`\r\n\t\tTimer is stopped through a call to `this.stop`.\r\n\t**/\r\n\tpublic dynamic function run() {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t\tInvokes `f` after `time_ms` milliseconds.\r\n\r\n\t\tThis is a convenience function for creating a new Timer instance with\r\n\t\t`time_ms` as argument, binding its run() method to `f` and then stopping\r\n\t\t`this` Timer upon the first invocation.\r\n\r\n\t\tIf `f` is null, the result is unspecified.\r\n\t**/\r\n\tpublic static function delay( f : Void -> Void, time_ms : Int ) {\r\n\t\tvar t = new haxe.Timer(time_ms);\r\n\t\tt.run = function() {\r\n\t\t\tt.stop();\r\n\t\t\tf();\r\n\t\t};\r\n\t\treturn t;\r\n\t}\r\n\r\n\t/**\r\n\t\tMeasures the time it takes to execute `f`, in seconds with fractions.\r\n\r\n\t\tThis is a convenience function for calculating the difference between\r\n\t\tTimer.stamp() before and after the invocation of `f`.\r\n\r\n\t\tThe difference is passed as argument to Log.trace(), with \"s\" appended\r\n\t\tto denote the unit. The optional `pos` argument is passed through.\r\n\r\n\t\tIf `f` is null, the result is unspecified.\r\n\t**/\r\n\tpublic static function measure<T>( f : Void -> T, ?pos : PosInfos ) : T {\r\n\t\tvar t0 = stamp();\r\n\t\tvar r = f();\r\n\t\tLog.trace((stamp() - t0) + \"s\", pos);\r\n\t\treturn r;\r\n\t}\r\n\r\n\t/**\r\n\t\tReturns a timestamp, in seconds with fractions.\r\n\r\n\t\tThe value itself might differ depending on platforms, only differences\r\n\t\tbetween two values make sense.\r\n\t**/\r\n\tpublic static inline function stamp() : Float {\r\n\t\t#if macro\r\n\t\t\treturn Sys.time();\r\n\t\t#else\r\n\t\t\treturn kha.Scheduler.realTime();\r\n\t\t#end\r\n\t}\r\n\r\n}\r\n","/*\r\n * Copyright (C)2005-2019 Haxe Foundation\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a\r\n * copy of this software and associated documentation files (the \"Software\"),\r\n * to deal in the Software without restriction, including without limitation\r\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\r\n * and/or sell copies of the Software, and to permit persons to whom the\r\n * Software is furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\r\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\r\n * DEALINGS IN THE SOFTWARE.\r\n */\r\n\r\npackage haxe;\r\n\r\nimport haxe.ds.List;\r\n\r\n@:noDoc\r\ntypedef TypeResolver = {\r\n\tfunction resolveClass(name:String):Class<Dynamic>;\r\n\tfunction resolveEnum(name:String):Enum<Dynamic>;\r\n}\r\n\r\n/**\r\n\tThe `Unserializer` class is the complement to the `Serializer` class. It parses\r\n\ta serialization `String` and creates objects from the contained data.\r\n\r\n\tThis class can be used in two ways:\r\n\r\n\t- create a `new Unserializer()` instance with a given serialization\r\n\t\tString, then call its `unserialize()` method until all values are\r\n\t\textracted\r\n\t- call `Unserializer.run()`  to unserialize a single value from a given\r\n\t\tString\r\n\r\n\tThe specification of the serialization format can be found here:\r\n\t<https://haxe.org/manual/serialization/format>\r\n**/\r\nclass Unserializer {\r\n\t/**\r\n\t\tThis value can be set to use custom type resolvers.\r\n\r\n\t\tA type resolver finds a `Class` or `Enum` instance from a given `String`.\r\n\t\tBy default, the Haxe `Type` Api is used.\r\n\r\n\t\tA type resolver must provide two methods:\r\n\r\n\t\t1. `resolveClass(name:String):Class<Dynamic>` is called to determine a\r\n\t\t\t\t`Class` from a class name\r\n\t\t2. `resolveEnum(name:String):Enum<Dynamic>` is called to determine an\r\n\t\t\t\t`Enum` from an enum name\r\n\r\n\t\tThis value is applied when a new `Unserializer` instance is created.\r\n\t\tChanging it afterwards has no effect on previously created instances.\r\n\t**/\r\n\tpublic static var DEFAULT_RESOLVER:TypeResolver = new DefaultResolver();\r\n\r\n\tstatic var BASE64 = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789%:\";\r\n\r\n\t#if !neko\r\n\tstatic var CODES = null;\r\n\r\n\tstatic function initCodes() {\r\n\t\tvar codes = #if flash new flash.utils.ByteArray(); #else new Array(); #end\r\n\t\tfor (i in 0...BASE64.length)\r\n\t\t\tcodes[StringTools.fastCodeAt(BASE64, i)] = i;\r\n\t\treturn codes;\r\n\t}\r\n\t#end\r\n\r\n\tvar buf:String;\r\n\tvar pos:Int;\r\n\tvar length:Int;\r\n\tvar cache:Array<Dynamic>;\r\n\tvar scache:Array<String>;\r\n\tvar resolver:TypeResolver;\r\n\t#if neko\r\n\tvar upos:Int;\r\n\t#end\r\n\r\n\t/**\r\n\t\tCreates a new Unserializer instance, with its internal buffer\r\n\t\tinitialized to `buf`.\r\n\r\n\t\tThis does not parse `buf` immediately. It is parsed only when calls to\r\n\t\t`this.unserialize` are made.\r\n\r\n\t\tEach Unserializer instance maintains its own cache.\r\n\t**/\r\n\tpublic function new(buf:String) {\r\n\t\tthis.buf = buf;\r\n\t\tlength = buf.length;\r\n\t\tpos = 0;\r\n\t\t#if neko\r\n\t\tupos = 0;\r\n\t\t#end\r\n\t\tscache = new Array();\r\n\t\tcache = new Array();\r\n\t\tvar r = DEFAULT_RESOLVER;\r\n\t\tif (r == null) {\r\n\t\t\tr = new DefaultResolver();\r\n\t\t\tDEFAULT_RESOLVER = r;\r\n\t\t}\r\n\t\tresolver = r;\r\n\t}\r\n\r\n\t/**\r\n\t\tSets the type resolver of `this` Unserializer instance to `r`.\r\n\r\n\t\tIf `r` is `null`, a special resolver is used which returns `null` for all\r\n\t\tinput values.\r\n\r\n\t\tSee `DEFAULT_RESOLVER` for more information on type resolvers.\r\n\t**/\r\n\tpublic function setResolver(r) {\r\n\t\tif (r == null)\r\n\t\t\tresolver = NullResolver.instance;\r\n\t\telse\r\n\t\t\tresolver = r;\r\n\t}\r\n\r\n\t/**\r\n\t\tGets the type resolver of `this` Unserializer instance.\r\n\r\n\t\tSee `DEFAULT_RESOLVER` for more information on type resolvers.\r\n\t**/\r\n\tpublic function getResolver() {\r\n\t\treturn resolver;\r\n\t}\r\n\r\n\tinline function get(p):Int {\r\n\t\treturn StringTools.fastCodeAt(buf, p);\r\n\t}\r\n\r\n\tfunction readDigits() {\r\n\t\tvar k = 0;\r\n\t\tvar s = false;\r\n\t\tvar fpos = pos;\r\n\t\twhile (true) {\r\n\t\t\tvar c = get(pos);\r\n\t\t\tif (StringTools.isEof(c))\r\n\t\t\t\tbreak;\r\n\t\t\tif (c == \"-\".code) {\r\n\t\t\t\tif (pos != fpos)\r\n\t\t\t\t\tbreak;\r\n\t\t\t\ts = true;\r\n\t\t\t\tpos++;\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\tif (c < \"0\".code || c > \"9\".code)\r\n\t\t\t\tbreak;\r\n\t\t\tk = k * 10 + (c - \"0\".code);\r\n\t\t\tpos++;\r\n\t\t}\r\n\t\tif (s)\r\n\t\t\tk *= -1;\r\n\t\treturn k;\r\n\t}\r\n\r\n\tfunction readFloat() {\r\n\t\tvar p1 = pos;\r\n\t\twhile (true) {\r\n\t\t\tvar c = get(pos);\r\n\t\t\tif (StringTools.isEof(c))\r\n\t\t\t\tbreak;\r\n\t\t\t// + - . , 0-9\r\n\t\t\tif ((c >= 43 && c < 58) || c == \"e\".code || c == \"E\".code)\r\n\t\t\t\tpos++;\r\n\t\t\telse\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t\treturn Std.parseFloat(buf.substr(p1, pos - p1));\r\n\t}\r\n\r\n\tfunction unserializeObject(o:{}) {\r\n\t\twhile (true) {\r\n\t\t\tif (pos >= length)\r\n\t\t\t\tthrow \"Invalid object\";\r\n\t\t\tif (get(pos) == \"g\".code)\r\n\t\t\t\tbreak;\r\n\t\t\tvar k:Dynamic = unserialize();\r\n\t\t\tif (!Std.is(k, String))\r\n\t\t\t\tthrow \"Invalid object key\";\r\n\t\t\tvar v = unserialize();\r\n\t\t\tReflect.setField(o, k, v);\r\n\t\t}\r\n\t\tpos++;\r\n\t}\r\n\r\n\tfunction unserializeEnum<T>(edecl:Enum<T>, tag:String) {\r\n\t\tif (get(pos++) != \":\".code)\r\n\t\t\tthrow \"Invalid enum format\";\r\n\t\tvar nargs = readDigits();\r\n\t\tif (nargs == 0)\r\n\t\t\treturn Type.createEnum(edecl, tag);\r\n\t\tvar args = new Array();\r\n\t\twhile (nargs-- > 0)\r\n\t\t\targs.push(unserialize());\r\n\t\treturn Type.createEnum(edecl, tag, args);\r\n\t}\r\n\r\n\t/**\r\n\t\tUnserializes the next part of `this` Unserializer instance and returns\r\n\t\tthe according value.\r\n\r\n\t\tThis function may call `this.resolver.resolveClass` to determine a\r\n\t\tClass from a String, and `this.resolver.resolveEnum` to determine an\r\n\t\tEnum from a String.\r\n\r\n\t\tIf `this` Unserializer instance contains no more or invalid data, an\r\n\t\texception is thrown.\r\n\r\n\t\tThis operation may fail on structurally valid data if a type cannot be\r\n\t\tresolved or if a field cannot be set. This can happen when unserializing\r\n\t\tStrings that were serialized on a different Haxe target, in which the\r\n\t\tserialization side has to make sure not to include platform-specific\r\n\t\tdata.\r\n\r\n\t\tClasses are created from `Type.createEmptyInstance`, which means their\r\n\t\tconstructors are not called.\r\n\t**/\r\n\tpublic function unserialize():Dynamic {\r\n\t\tswitch (get(pos++)) {\r\n\t\t\tcase \"n\".code:\r\n\t\t\t\treturn null;\r\n\t\t\tcase \"t\".code:\r\n\t\t\t\treturn true;\r\n\t\t\tcase \"f\".code:\r\n\t\t\t\treturn false;\r\n\t\t\tcase \"z\".code:\r\n\t\t\t\treturn 0;\r\n\t\t\tcase \"i\".code:\r\n\t\t\t\treturn readDigits();\r\n\t\t\tcase \"d\".code:\r\n\t\t\t\treturn readFloat();\r\n\t\t\tcase \"y\".code:\r\n\t\t\t\tvar len = readDigits();\r\n\t\t\t\tif (get(pos++) != \":\".code || length - pos < len)\r\n\t\t\t\t\tthrow \"Invalid string length\";\r\n\t\t\t\tvar s = buf.substr(pos, len);\r\n\t\t\t\tpos += len;\r\n\t\t\t\ts = StringTools.urlDecode(s);\r\n\t\t\t\tscache.push(s);\r\n\t\t\t\treturn s;\r\n\t\t\tcase \"k\".code:\r\n\t\t\t\treturn Math.NaN;\r\n\t\t\tcase \"m\".code:\r\n\t\t\t\treturn Math.NEGATIVE_INFINITY;\r\n\t\t\tcase \"p\".code:\r\n\t\t\t\treturn Math.POSITIVE_INFINITY;\r\n\t\t\tcase \"a\".code:\r\n\t\t\t\tvar buf = buf;\r\n\t\t\t\tvar a = new Array<Dynamic>();\r\n\t\t\t\t#if cpp\r\n\t\t\t\tvar cachePos = cache.length;\r\n\t\t\t\t#end\r\n\t\t\t\tcache.push(a);\r\n\t\t\t\twhile (true) {\r\n\t\t\t\t\tvar c = get(pos);\r\n\t\t\t\t\tif (c == \"h\".code) {\r\n\t\t\t\t\t\tpos++;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (c == \"u\".code) {\r\n\t\t\t\t\t\tpos++;\r\n\t\t\t\t\t\tvar n = readDigits();\r\n\t\t\t\t\t\ta[a.length + n - 1] = null;\r\n\t\t\t\t\t} else\r\n\t\t\t\t\t\ta.push(unserialize());\r\n\t\t\t\t}\r\n\t\t\t\t#if cpp\r\n\t\t\t\treturn cache[cachePos] = cpp.NativeArray.resolveVirtualArray(a);\r\n\t\t\t\t#else\r\n\t\t\t\treturn a;\r\n\t\t\t\t#end\r\n\t\t\tcase \"o\".code:\r\n\t\t\t\tvar o = {};\r\n\t\t\t\tcache.push(o);\r\n\t\t\t\tunserializeObject(o);\r\n\t\t\t\treturn o;\r\n\t\t\tcase \"r\".code:\r\n\t\t\t\tvar n = readDigits();\r\n\t\t\t\tif (n < 0 || n >= cache.length)\r\n\t\t\t\t\tthrow \"Invalid reference\";\r\n\t\t\t\treturn cache[n];\r\n\t\t\tcase \"R\".code:\r\n\t\t\t\tvar n = readDigits();\r\n\t\t\t\tif (n < 0 || n >= scache.length)\r\n\t\t\t\t\tthrow \"Invalid string reference\";\r\n\t\t\t\treturn scache[n];\r\n\t\t\tcase \"x\".code:\r\n\t\t\t\tthrow unserialize();\r\n\t\t\tcase \"c\".code:\r\n\t\t\t\tvar name = unserialize();\r\n\t\t\t\tvar cl = resolver.resolveClass(name);\r\n\t\t\t\tif (cl == null)\r\n\t\t\t\t\tthrow \"Class not found \" + name;\r\n\t\t\t\tvar o = Type.createEmptyInstance(cl);\r\n\t\t\t\tcache.push(o);\r\n\t\t\t\tunserializeObject(o);\r\n\t\t\t\treturn o;\r\n\t\t\tcase \"w\".code:\r\n\t\t\t\tvar name = unserialize();\r\n\t\t\t\tvar edecl = resolver.resolveEnum(name);\r\n\t\t\t\tif (edecl == null)\r\n\t\t\t\t\tthrow \"Enum not found \" + name;\r\n\t\t\t\tvar e = unserializeEnum(edecl, unserialize());\r\n\t\t\t\tcache.push(e);\r\n\t\t\t\treturn e;\r\n\t\t\tcase \"j\".code:\r\n\t\t\t\tvar name = unserialize();\r\n\t\t\t\tvar edecl = resolver.resolveEnum(name);\r\n\t\t\t\tif (edecl == null)\r\n\t\t\t\t\tthrow \"Enum not found \" + name;\r\n\t\t\t\tpos++; /* skip ':' */\r\n\t\t\t\tvar index = readDigits();\r\n\t\t\t\tvar tag = Type.getEnumConstructs(edecl)[index];\r\n\t\t\t\tif (tag == null)\r\n\t\t\t\t\tthrow \"Unknown enum index \" + name + \"@\" + index;\r\n\t\t\t\tvar e = unserializeEnum(edecl, tag);\r\n\t\t\t\tcache.push(e);\r\n\t\t\t\treturn e;\r\n\t\t\tcase \"l\".code:\r\n\t\t\t\tvar l = new List();\r\n\t\t\t\tcache.push(l);\r\n\t\t\t\tvar buf = buf;\r\n\t\t\t\twhile (get(pos) != \"h\".code)\r\n\t\t\t\t\tl.add(unserialize());\r\n\t\t\t\tpos++;\r\n\t\t\t\treturn l;\r\n\t\t\tcase \"b\".code:\r\n\t\t\t\tvar h = new haxe.ds.StringMap();\r\n\t\t\t\tcache.push(h);\r\n\t\t\t\tvar buf = buf;\r\n\t\t\t\twhile (get(pos) != \"h\".code) {\r\n\t\t\t\t\tvar s = unserialize();\r\n\t\t\t\t\th.set(s, unserialize());\r\n\t\t\t\t}\r\n\t\t\t\tpos++;\r\n\t\t\t\treturn h;\r\n\t\t\tcase \"q\".code:\r\n\t\t\t\tvar h = new haxe.ds.IntMap();\r\n\t\t\t\tcache.push(h);\r\n\t\t\t\tvar buf = buf;\r\n\t\t\t\tvar c = get(pos++);\r\n\t\t\t\twhile (c == \":\".code) {\r\n\t\t\t\t\tvar i = readDigits();\r\n\t\t\t\t\th.set(i, unserialize());\r\n\t\t\t\t\tc = get(pos++);\r\n\t\t\t\t}\r\n\t\t\t\tif (c != \"h\".code)\r\n\t\t\t\t\tthrow \"Invalid IntMap format\";\r\n\t\t\t\treturn h;\r\n\t\t\tcase \"M\".code:\r\n\t\t\t\tvar h = new haxe.ds.ObjectMap();\r\n\t\t\t\tcache.push(h);\r\n\t\t\t\tvar buf = buf;\r\n\t\t\t\twhile (get(pos) != \"h\".code) {\r\n\t\t\t\t\tvar s = unserialize();\r\n\t\t\t\t\th.set(s, unserialize());\r\n\t\t\t\t}\r\n\t\t\t\tpos++;\r\n\t\t\t\treturn h;\r\n\t\t\tcase \"v\".code:\r\n\t\t\t\tvar d;\r\n\t\t\t\tif (get(pos) >= '0'.code && get(pos) <= '9'.code && get(pos + 1) >= '0'.code && get(pos + 1) <= '9'.code && get(pos + 2) >= '0'.code\r\n\t\t\t\t\t&& get(pos + 2) <= '9'.code && get(pos + 3) >= '0'.code && get(pos + 3) <= '9'.code && get(pos + 4) == '-'.code) {\r\n\t\t\t\t\t// Included for backwards compatibility\r\n\t\t\t\t\td = Date.fromString(buf.substr(pos, 19));\r\n\t\t\t\t\tpos += 19;\r\n\t\t\t\t} else\r\n\t\t\t\t\td = Date.fromTime(readFloat());\r\n\t\t\t\tcache.push(d);\r\n\t\t\t\treturn d;\r\n\t\t\tcase \"s\".code:\r\n\t\t\t\tvar len = readDigits();\r\n\t\t\t\tvar buf = buf;\r\n\t\t\t\tif (get(pos++) != \":\".code || length - pos < len)\r\n\t\t\t\t\tthrow \"Invalid bytes length\";\r\n\t\t\t\t#if neko\r\n\t\t\t\tvar bytes = haxe.io.Bytes.ofData(base_decode(untyped buf.substr(pos, len).__s, untyped BASE64.__s));\r\n\t\t\t\t#elseif php\r\n\t\t\t\tvar phpEncoded = php.Global.strtr(buf.substr(pos, len), '%:', '+/');\r\n\t\t\t\tvar bytes = haxe.io.Bytes.ofData(php.Global.base64_decode(phpEncoded));\r\n\t\t\t\t#else\r\n\t\t\t\tvar codes = CODES;\r\n\t\t\t\tif (codes == null) {\r\n\t\t\t\t\tcodes = initCodes();\r\n\t\t\t\t\tCODES = codes;\r\n\t\t\t\t}\r\n\t\t\t\tvar i = pos;\r\n\t\t\t\tvar rest = len & 3;\r\n\t\t\t\tvar size = (len >> 2) * 3 + ((rest >= 2) ? rest - 1 : 0);\r\n\t\t\t\tvar max = i + (len - rest);\r\n\t\t\t\tvar bytes = haxe.io.Bytes.alloc(size);\r\n\t\t\t\tvar bpos = 0;\r\n\t\t\t\twhile (i < max) {\r\n\t\t\t\t\tvar c1 = codes[StringTools.fastCodeAt(buf, i++)];\r\n\t\t\t\t\tvar c2 = codes[StringTools.fastCodeAt(buf, i++)];\r\n\t\t\t\t\tbytes.set(bpos++, (c1 << 2) | (c2 >> 4));\r\n\t\t\t\t\tvar c3 = codes[StringTools.fastCodeAt(buf, i++)];\r\n\t\t\t\t\tbytes.set(bpos++, (c2 << 4) | (c3 >> 2));\r\n\t\t\t\t\tvar c4 = codes[StringTools.fastCodeAt(buf, i++)];\r\n\t\t\t\t\tbytes.set(bpos++, (c3 << 6) | c4);\r\n\t\t\t\t}\r\n\t\t\t\tif (rest >= 2) {\r\n\t\t\t\t\tvar c1 = codes[StringTools.fastCodeAt(buf, i++)];\r\n\t\t\t\t\tvar c2 = codes[StringTools.fastCodeAt(buf, i++)];\r\n\t\t\t\t\tbytes.set(bpos++, (c1 << 2) | (c2 >> 4));\r\n\t\t\t\t\tif (rest == 3) {\r\n\t\t\t\t\t\tvar c3 = codes[StringTools.fastCodeAt(buf, i++)];\r\n\t\t\t\t\t\tbytes.set(bpos++, (c2 << 4) | (c3 >> 2));\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t#end\r\n\t\t\t\tpos += len;\r\n\t\t\t\tcache.push(bytes);\r\n\t\t\t\treturn bytes;\r\n\t\t\tcase \"C\".code:\r\n\t\t\t\tvar name = unserialize();\r\n\t\t\t\tvar cl = resolver.resolveClass(name);\r\n\t\t\t\tif (cl == null)\r\n\t\t\t\t\tthrow \"Class not found \" + name;\r\n\t\t\t\tvar o:Dynamic = Type.createEmptyInstance(cl);\r\n\t\t\t\tcache.push(o);\r\n\t\t\t\to.hxUnserialize(this);\r\n\t\t\t\tif (get(pos++) != \"g\".code)\r\n\t\t\t\t\tthrow \"Invalid custom data\";\r\n\t\t\t\treturn o;\r\n\t\t\tcase \"A\".code:\r\n\t\t\t\tvar name = unserialize();\r\n\t\t\t\tvar cl = resolver.resolveClass(name);\r\n\t\t\t\tif (cl == null)\r\n\t\t\t\t\tthrow \"Class not found \" + name;\r\n\t\t\t\treturn cl;\r\n\t\t\tcase \"B\".code:\r\n\t\t\t\tvar name = unserialize();\r\n\t\t\t\tvar e = resolver.resolveEnum(name);\r\n\t\t\t\tif (e == null)\r\n\t\t\t\t\tthrow \"Enum not found \" + name;\r\n\t\t\t\treturn e;\r\n\t\t\tdefault:\r\n\t\t}\r\n\t\tpos--;\r\n\t\tthrow(\"Invalid char \" + buf.charAt(pos) + \" at position \" + pos);\r\n\t}\r\n\r\n\t/**\r\n\t\tUnserializes `v` and returns the according value.\r\n\r\n\t\tThis is a convenience function for creating a new instance of\r\n\t\tUnserializer with `v` as buffer and calling its `unserialize()` method\r\n\t\tonce.\r\n\t**/\r\n\tpublic static function run(v:String):Dynamic {\r\n\t\treturn new Unserializer(v).unserialize();\r\n\t}\r\n\r\n\t#if neko\r\n\tstatic var base_decode = neko.Lib.load(\"std\", \"base_decode\", 2);\r\n\t#end\r\n}\r\n\r\nprivate class DefaultResolver {\r\n\tpublic function new() {}\r\n\r\n\tpublic inline function resolveClass(name:String):Class<Dynamic>\r\n\t\treturn Type.resolveClass(name);\r\n\r\n\tpublic inline function resolveEnum(name:String):Enum<Dynamic>\r\n\t\treturn Type.resolveEnum(name);\r\n}\r\n\r\nprivate class NullResolver {\r\n\tfunction new() {}\r\n\r\n\tpublic inline function resolveClass(name:String):Class<Dynamic>\r\n\t\treturn null;\r\n\r\n\tpublic inline function resolveEnum(name:String):Enum<Dynamic>\r\n\t\treturn null;\r\n\r\n\tpublic static var instance(get, null):NullResolver;\r\n\r\n\tinline static function get_instance():NullResolver {\r\n\t\tif (instance == null)\r\n\t\t\tinstance = new NullResolver();\r\n\t\treturn instance;\r\n\t}\r\n}\r\n","/*\r\n * Copyright (C)2005-2019 Haxe Foundation\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a\r\n * copy of this software and associated documentation files (the \"Software\"),\r\n * to deal in the Software without restriction, including without limitation\r\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\r\n * and/or sell copies of the Software, and to permit persons to whom the\r\n * Software is furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\r\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\r\n * DEALINGS IN THE SOFTWARE.\r\n */\r\n\r\npackage haxe.crypto;\r\n\r\n/**\r\n\tCalculates the Adler32 of the given Bytes.\r\n */\r\nclass Adler32 {\r\n\tvar a1:Int;\r\n\tvar a2:Int;\r\n\r\n\tpublic function new() {\r\n\t\ta1 = 1;\r\n\t\ta2 = 0;\r\n\t}\r\n\r\n\tpublic function get() {\r\n\t\treturn (a2 << 16) | a1;\r\n\t}\r\n\r\n\tpublic function update(b:haxe.io.Bytes, pos, len) {\r\n\t\tvar a1 = a1, a2 = a2;\r\n\t\tfor (p in pos...pos + len) {\r\n\t\t\tvar c = b.get(p);\r\n\t\t\ta1 = (a1 + c) % 65521;\r\n\t\t\ta2 = (a2 + a1) % 65521;\r\n\t\t}\r\n\t\tthis.a1 = a1;\r\n\t\tthis.a2 = a2;\r\n\t}\r\n\r\n\tpublic function equals(a:Adler32) {\r\n\t\treturn a.a1 == a1 && a.a2 == a2;\r\n\t}\r\n\r\n\tpublic function toString() {\r\n\t\treturn StringTools.hex(a2, 8) + StringTools.hex(a1, 8);\r\n\t}\r\n\r\n\tpublic static function read(i:haxe.io.Input) {\r\n\t\tvar a = new Adler32();\r\n\t\tvar a2a = i.readByte();\r\n\t\tvar a2b = i.readByte();\r\n\t\tvar a1a = i.readByte();\r\n\t\tvar a1b = i.readByte();\r\n\t\ta.a1 = (a1a << 8) | a1b;\r\n\t\ta.a2 = (a2a << 8) | a2b;\r\n\t\treturn a;\r\n\t}\r\n\r\n\tpublic static function make(b:haxe.io.Bytes) {\r\n\t\tvar a = new Adler32();\r\n\t\ta.update(b, 0, b.length);\r\n\t\treturn a.get();\r\n\t}\r\n}\r\n","/*\r\n * Copyright (C)2005-2019 Haxe Foundation\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a\r\n * copy of this software and associated documentation files (the \"Software\"),\r\n * to deal in the Software without restriction, including without limitation\r\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\r\n * and/or sell copies of the Software, and to permit persons to whom the\r\n * Software is furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\r\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\r\n * DEALINGS IN THE SOFTWARE.\r\n */\r\n\r\npackage haxe.io;\r\n\r\n@:coreApi\r\nclass Bytes {\r\n\tpublic var length(default, null):Int;\r\n\r\n\tvar b:js.lib.Uint8Array;\r\n\tvar data:js.lib.DataView;\r\n\r\n\tfunction new(data:BytesData) {\r\n\t\tthis.length = data.byteLength;\r\n\t\tthis.b = new js.lib.Uint8Array(data);\r\n\t\tuntyped {\r\n\t\t\tb.bufferValue = data; // some impl does not return the same instance in .buffer\r\n\t\t\tdata.hxBytes = this;\r\n\t\t\tdata.bytes = this.b;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic inline function get(pos:Int):Int {\r\n\t\treturn b[pos];\r\n\t}\r\n\r\n\tpublic inline function set(pos:Int, v:Int):Void {\r\n\t\tb[pos] = v;\r\n\t}\r\n\r\n\tpublic function blit(pos:Int, src:Bytes, srcpos:Int, len:Int):Void {\r\n\t\tif (pos < 0 || srcpos < 0 || len < 0 || pos + len > length || srcpos + len > src.length)\r\n\t\t\tthrow Error.OutsideBounds;\r\n\t\tif (srcpos == 0 && len == src.b.byteLength)\r\n\t\t\tb.set(src.b, pos);\r\n\t\telse\r\n\t\t\tb.set(src.b.subarray(srcpos, srcpos + len), pos);\r\n\t}\r\n\r\n\tpublic function fill(pos:Int, len:Int, value:Int):Void {\r\n\t\tfor (i in 0...len)\r\n\t\t\tset(pos++, value);\r\n\t}\r\n\r\n\tpublic function sub(pos:Int, len:Int):Bytes {\r\n\t\tif (pos < 0 || len < 0 || pos + len > length)\r\n\t\t\tthrow Error.OutsideBounds;\r\n\t\treturn new Bytes(b.buffer.slice(pos + b.byteOffset, pos + b.byteOffset + len));\r\n\t}\r\n\r\n\tpublic function compare(other:Bytes):Int {\r\n\t\tvar b1 = b;\r\n\t\tvar b2 = other.b;\r\n\t\tvar len = (length < other.length) ? length : other.length;\r\n\t\tfor (i in 0...len)\r\n\t\t\tif (b1[i] != b2[i])\r\n\t\t\t\treturn b1[i] - b2[i];\r\n\t\treturn length - other.length;\r\n\t}\r\n\r\n\tinline function initData():Void {\r\n\t\tif (data == null)\r\n\t\t\tdata = new js.lib.DataView(b.buffer, b.byteOffset, b.byteLength);\r\n\t}\r\n\r\n\tpublic function getDouble(pos:Int):Float {\r\n\t\tinitData();\r\n\t\treturn data.getFloat64(pos, true);\r\n\t}\r\n\r\n\tpublic function getFloat(pos:Int):Float {\r\n\t\tinitData();\r\n\t\treturn data.getFloat32(pos, true);\r\n\t}\r\n\r\n\tpublic function setDouble(pos:Int, v:Float):Void {\r\n\t\tinitData();\r\n\t\tdata.setFloat64(pos, v, true);\r\n\t}\r\n\r\n\tpublic function setFloat(pos:Int, v:Float):Void {\r\n\t\tinitData();\r\n\t\tdata.setFloat32(pos, v, true);\r\n\t}\r\n\r\n\tpublic function getUInt16(pos:Int):Int {\r\n\t\tinitData();\r\n\t\treturn data.getUint16(pos, true);\r\n\t}\r\n\r\n\tpublic function setUInt16(pos:Int, v:Int):Void {\r\n\t\tinitData();\r\n\t\tdata.setUint16(pos, v, true);\r\n\t}\r\n\r\n\tpublic function getInt32(pos:Int):Int {\r\n\t\tinitData();\r\n\t\treturn data.getInt32(pos, true);\r\n\t}\r\n\r\n\tpublic function setInt32(pos:Int, v:Int):Void {\r\n\t\tinitData();\r\n\t\tdata.setInt32(pos, v, true);\r\n\t}\r\n\r\n\tpublic function getInt64(pos:Int):haxe.Int64 {\r\n\t\treturn Int64.make(getInt32(pos + 4), getInt32(pos));\r\n\t}\r\n\r\n\tpublic function setInt64(pos:Int, v:haxe.Int64):Void {\r\n\t\tsetInt32(pos, v.low);\r\n\t\tsetInt32(pos + 4, v.high);\r\n\t}\r\n\r\n\tpublic function getString(pos:Int, len:Int, ?encoding:Encoding):String {\r\n\t\tif (pos < 0 || len < 0 || pos + len > length)\r\n\t\t\tthrow Error.OutsideBounds;\r\n\t\tif (encoding == null)\r\n\t\t\tencoding = UTF8;\r\n\t\tvar s = \"\";\r\n\t\tvar b = b;\r\n\t\tvar i = pos;\r\n\t\tvar max = pos + len;\r\n\t\tswitch (encoding) {\r\n\t\t\tcase UTF8:\r\n\t\t\t\tvar debug = pos > 0;\r\n\t\t\t\t// utf8-decode and utf16-encode\r\n\t\t\t\twhile (i < max) {\r\n\t\t\t\t\tvar c = b[i++];\r\n\t\t\t\t\tif (c < 0x80) {\r\n\t\t\t\t\t\tif (c == 0)\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\ts += String.fromCharCode(c);\r\n\t\t\t\t\t} else if (c < 0xE0)\r\n\t\t\t\t\t\ts += String.fromCharCode(((c & 0x3F) << 6) | (b[i++] & 0x7F));\r\n\t\t\t\t\telse if (c < 0xF0) {\r\n\t\t\t\t\t\tvar c2 = b[i++];\r\n\t\t\t\t\t\ts += String.fromCharCode(((c & 0x1F) << 12) | ((c2 & 0x7F) << 6) | (b[i++] & 0x7F));\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tvar c2 = b[i++];\r\n\t\t\t\t\t\tvar c3 = b[i++];\r\n\t\t\t\t\t\tvar u = ((c & 0x0F) << 18) | ((c2 & 0x7F) << 12) | ((c3 & 0x7F) << 6) | (b[i++] & 0x7F);\r\n\t\t\t\t\t\ts += String.fromCharCode(u);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\tcase RawNative:\r\n\t\t\t\twhile (i < max) {\r\n\t\t\t\t\tvar c = b[i++] | (b[i++] << 8);\r\n\t\t\t\t\ts += String.fromCharCode(c);\r\n\t\t\t\t}\r\n\t\t}\r\n\t\treturn s;\r\n\t}\r\n\r\n\t@:deprecated(\"readString is deprecated, use getString instead\")\r\n\t@:noCompletion\r\n\tpublic inline function readString(pos:Int, len:Int):String {\r\n\t\treturn getString(pos, len);\r\n\t}\r\n\r\n\tpublic function toString():String {\r\n\t\treturn getString(0, length);\r\n\t}\r\n\r\n\tpublic function toHex():String {\r\n\t\tvar s = new StringBuf();\r\n\t\tvar chars = [];\r\n\t\tvar str = \"0123456789abcdef\";\r\n\t\tfor (i in 0...str.length)\r\n\t\t\tchars.push(str.charCodeAt(i));\r\n\t\tfor (i in 0...length) {\r\n\t\t\tvar c = get(i);\r\n\t\t\ts.addChar(chars[c >> 4]);\r\n\t\t\ts.addChar(chars[c & 15]);\r\n\t\t}\r\n\t\treturn s.toString();\r\n\t}\r\n\r\n\tpublic inline function getData():BytesData {\r\n\t\treturn untyped b.bufferValue;\r\n\t}\r\n\r\n\tpublic static inline function alloc(length:Int):Bytes {\r\n\t\treturn new Bytes(new BytesData(length));\r\n\t}\r\n\r\n\tpublic static function ofString(s:String, ?encoding:Encoding):Bytes {\r\n\t\tif (encoding == RawNative) {\r\n\t\t\tvar buf = new js.lib.Uint8Array(s.length << 1);\r\n\t\t\tfor (i in 0...s.length) {\r\n\t\t\t\tvar c:Int = StringTools.fastCodeAt(s, i);\r\n\t\t\t\tbuf[i << 1] = c & 0xFF;\r\n\t\t\t\tbuf[(i << 1) | 1] = c >> 8;\r\n\t\t\t}\r\n\t\t\treturn new Bytes(buf.buffer);\r\n\t\t}\r\n\t\tvar a = new Array();\r\n\t\t// utf16-decode and utf8-encode\r\n\t\tvar i = 0;\r\n\t\twhile (i < s.length) {\r\n\t\t\tvar c:Int = StringTools.fastCodeAt(s, i++);\r\n\t\t\t// surrogate pair\r\n\t\t\tif (0xD800 <= c && c <= 0xDBFF)\r\n\t\t\t\tc = (c - 0xD7C0 << 10) | (StringTools.fastCodeAt(s, i++) & 0x3FF);\r\n\t\t\tif (c <= 0x7F)\r\n\t\t\t\ta.push(c);\r\n\t\t\telse if (c <= 0x7FF) {\r\n\t\t\t\ta.push(0xC0 | (c >> 6));\r\n\t\t\t\ta.push(0x80 | (c & 63));\r\n\t\t\t} else if (c <= 0xFFFF) {\r\n\t\t\t\ta.push(0xE0 | (c >> 12));\r\n\t\t\t\ta.push(0x80 | ((c >> 6) & 63));\r\n\t\t\t\ta.push(0x80 | (c & 63));\r\n\t\t\t} else {\r\n\t\t\t\ta.push(0xF0 | (c >> 18));\r\n\t\t\t\ta.push(0x80 | ((c >> 12) & 63));\r\n\t\t\t\ta.push(0x80 | ((c >> 6) & 63));\r\n\t\t\t\ta.push(0x80 | (c & 63));\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn new Bytes(new js.lib.Uint8Array(a).buffer);\r\n\t}\r\n\r\n\tpublic static function ofData(b:BytesData):Bytes {\r\n\t\tvar hb = untyped b.hxBytes;\r\n\t\tif (hb != null)\r\n\t\t\treturn hb;\r\n\t\treturn new Bytes(b);\r\n\t}\r\n\r\n\tpublic static function ofHex(s:String):Bytes {\r\n\t\tif ((s.length & 1) != 0)\r\n\t\t\tthrow \"Not a hex string (odd number of digits)\";\r\n\t\tvar a = new Array();\r\n\t\tvar i = 0;\r\n\t\tvar len = s.length >> 1;\r\n\t\twhile (i < len) {\r\n\t\t\tvar high = StringTools.fastCodeAt(s, i * 2);\r\n\t\t\tvar low = StringTools.fastCodeAt(s, i * 2 + 1);\r\n\t\t\thigh = (high & 0xF) + ((high & 0x40) >> 6) * 9;\r\n\t\t\tlow = (low & 0xF) + ((low & 0x40) >> 6) * 9;\r\n\t\t\ta.push(((high << 4) | low) & 0xFF);\r\n\t\t\ti++;\r\n\t\t}\r\n\r\n\t\treturn new Bytes(new js.lib.Uint8Array(a).buffer);\r\n\t}\r\n\r\n\tpublic inline static function fastGet(b:BytesData, pos:Int):Int {\r\n\t\t// this requires that we have wrapped it with haxe.io.Bytes beforehand\r\n\t\treturn untyped b.bytes[pos];\r\n\t}\r\n}\r\n","/*\r\n * Copyright (C)2005-2019 Haxe Foundation\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a\r\n * copy of this software and associated documentation files (the \"Software\"),\r\n * to deal in the Software without restriction, including without limitation\r\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\r\n * and/or sell copies of the Software, and to permit persons to whom the\r\n * Software is furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\r\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\r\n * DEALINGS IN THE SOFTWARE.\r\n */\r\n\r\npackage haxe.crypto;\r\n\r\n/**\r\n\tAllows one to encode/decode String and bytes using Base64 encoding.\r\n**/\r\nclass Base64 {\r\n\tpublic static var CHARS(default, null) = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\r\n\tpublic static var BYTES(default, null) = haxe.io.Bytes.ofString(CHARS);\r\n\r\n\tpublic static var URL_CHARS(default, null) = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_\";\r\n\tpublic static var URL_BYTES(default, null) = haxe.io.Bytes.ofString(URL_CHARS);\r\n\r\n\tpublic static function encode(bytes:haxe.io.Bytes, complement = true):String {\r\n\t\tvar str = new BaseCode(BYTES).encodeBytes(bytes).toString();\r\n\t\tif (complement)\r\n\t\t\tswitch (bytes.length % 3) {\r\n\t\t\t\tcase 1:\r\n\t\t\t\t\tstr += \"==\";\r\n\t\t\t\tcase 2:\r\n\t\t\t\t\tstr += \"=\";\r\n\t\t\t\tdefault:\r\n\t\t\t}\r\n\t\treturn str;\r\n\t}\r\n\r\n\tpublic static function decode(str:String, complement = true):haxe.io.Bytes {\r\n\t\tif (complement)\r\n\t\t\twhile (str.charCodeAt(str.length - 1) == \"=\".code)\r\n\t\t\t\tstr = str.substr(0, -1);\r\n\t\treturn new BaseCode(BYTES).decodeBytes(haxe.io.Bytes.ofString(str));\r\n\t}\r\n\r\n\tpublic static function urlEncode(bytes:haxe.io.Bytes, complement = false):String {\r\n\t\tvar str = new BaseCode(URL_BYTES).encodeBytes(bytes).toString();\r\n\t\tif (complement)\r\n\t\t\tswitch (bytes.length % 3) {\r\n\t\t\t\tcase 1:\r\n\t\t\t\t\tstr += \"==\";\r\n\t\t\t\tcase 2:\r\n\t\t\t\t\tstr += \"=\";\r\n\t\t\t\tdefault:\r\n\t\t\t}\r\n\t\treturn str;\r\n\t}\r\n\r\n\tpublic static function urlDecode(str:String, complement = false):haxe.io.Bytes {\r\n\t\tif (complement)\r\n\t\t\twhile (str.charCodeAt(str.length - 1) == \"=\".code)\r\n\t\t\t\tstr = str.substr(0, -1);\r\n\t\treturn new BaseCode(URL_BYTES).decodeBytes(haxe.io.Bytes.ofString(str));\r\n\t}\r\n}\r\n","/*\r\n * Copyright (C)2005-2019 Haxe Foundation\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a\r\n * copy of this software and associated documentation files (the \"Software\"),\r\n * to deal in the Software without restriction, including without limitation\r\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\r\n * and/or sell copies of the Software, and to permit persons to whom the\r\n * Software is furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\r\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\r\n * DEALINGS IN THE SOFTWARE.\r\n */\r\n\r\npackage haxe.crypto;\r\n\r\n/**\r\n\tAllows one to encode/decode String and bytes using a power of two base dictionary.\r\n**/\r\nclass BaseCode {\r\n\tvar base:haxe.io.Bytes;\r\n\tvar nbits:Int;\r\n\tvar tbl:Array<Int>;\r\n\r\n\tpublic function new(base:haxe.io.Bytes) {\r\n\t\tvar len = base.length;\r\n\t\tvar nbits = 1;\r\n\t\twhile (len > 1 << nbits)\r\n\t\t\tnbits++;\r\n\t\tif (nbits > 8 || len != 1 << nbits)\r\n\t\t\tthrow \"BaseCode : base length must be a power of two.\";\r\n\t\tthis.base = base;\r\n\t\tthis.nbits = nbits;\r\n\t}\r\n\r\n\tpublic function encodeBytes(b:haxe.io.Bytes):haxe.io.Bytes {\r\n\t\t#if (neko && !interp)\r\n\t\treturn haxe.io.Bytes.ofData(base_encode(b.getData(), base.getData()));\r\n\t\t#else\r\n\t\tvar nbits = this.nbits;\r\n\t\tvar base = this.base;\r\n\t\tvar size = Std.int(b.length * 8 / nbits);\r\n\t\tvar out = haxe.io.Bytes.alloc(size + (((b.length * 8) % nbits == 0) ? 0 : 1));\r\n\t\tvar buf = 0;\r\n\t\tvar curbits = 0;\r\n\t\tvar mask = (1 << nbits) - 1;\r\n\t\tvar pin = 0;\r\n\t\tvar pout = 0;\r\n\t\twhile (pout < size) {\r\n\t\t\twhile (curbits < nbits) {\r\n\t\t\t\tcurbits += 8;\r\n\t\t\t\tbuf <<= 8;\r\n\t\t\t\tbuf |= b.get(pin++);\r\n\t\t\t}\r\n\t\t\tcurbits -= nbits;\r\n\t\t\tout.set(pout++, base.get((buf >> curbits) & mask));\r\n\t\t}\r\n\t\tif (curbits > 0)\r\n\t\t\tout.set(pout++, base.get((buf << (nbits - curbits)) & mask));\r\n\t\treturn out;\r\n\t\t#end\r\n\t}\r\n\r\n\tfunction initTable() {\r\n\t\tvar tbl = new Array();\r\n\t\tfor (i in 0...256)\r\n\t\t\ttbl[i] = -1;\r\n\t\tfor (i in 0...base.length)\r\n\t\t\ttbl[base.get(i)] = i;\r\n\t\tthis.tbl = tbl;\r\n\t}\r\n\r\n\tpublic function decodeBytes(b:haxe.io.Bytes):haxe.io.Bytes {\r\n\t\t#if (neko && !interp)\r\n\t\treturn haxe.io.Bytes.ofData(base_decode(b.getData(), base.getData()));\r\n\t\t#else\r\n\t\tvar nbits = this.nbits;\r\n\t\tvar base = this.base;\r\n\t\tif (this.tbl == null)\r\n\t\t\tinitTable();\r\n\t\tvar tbl = this.tbl;\r\n\t\tvar size = (b.length * nbits) >> 3;\r\n\t\tvar out = haxe.io.Bytes.alloc(size);\r\n\t\tvar buf = 0;\r\n\t\tvar curbits = 0;\r\n\t\tvar pin = 0;\r\n\t\tvar pout = 0;\r\n\t\twhile (pout < size) {\r\n\t\t\twhile (curbits < 8) {\r\n\t\t\t\tcurbits += nbits;\r\n\t\t\t\tbuf <<= nbits;\r\n\t\t\t\tvar i = tbl[b.get(pin++)];\r\n\t\t\t\tif (i == -1)\r\n\t\t\t\t\tthrow \"BaseCode : invalid encoded char\";\r\n\t\t\t\tbuf |= i;\r\n\t\t\t}\r\n\t\t\tcurbits -= 8;\r\n\t\t\tout.set(pout++, (buf >> curbits) & 0xFF);\r\n\t\t}\r\n\t\treturn out;\r\n\t\t#end\r\n\t}\r\n\r\n\tpublic function encodeString(s:String) {\r\n\t\t#if (neko && !interp)\r\n\t\treturn neko.NativeString.toString(base_encode(neko.NativeString.ofString(s), base.getData()));\r\n\t\t#else\r\n\t\treturn encodeBytes(haxe.io.Bytes.ofString(s)).toString();\r\n\t\t#end\r\n\t}\r\n\r\n\tpublic function decodeString(s:String) {\r\n\t\t#if (neko && !interp)\r\n\t\treturn neko.NativeString.toString(base_decode(neko.NativeString.ofString(s), base.getData()));\r\n\t\t#else\r\n\t\treturn decodeBytes(haxe.io.Bytes.ofString(s)).toString();\r\n\t\t#end\r\n\t}\r\n\r\n\tpublic static function encode(s:String, base:String) {\r\n\t\tvar b = new BaseCode(haxe.io.Bytes.ofString(base));\r\n\t\treturn b.encodeString(s);\r\n\t}\r\n\r\n\tpublic static function decode(s:String, base:String) {\r\n\t\tvar b = new BaseCode(haxe.io.Bytes.ofString(base));\r\n\t\treturn b.decodeString(s);\r\n\t}\r\n\r\n\t#if neko\r\n\tprivate static var base_encode = neko.Lib.load(\"std\", \"base_encode\", 2);\r\n\tprivate static var base_decode = neko.Lib.load(\"std\", \"base_decode\", 2);\r\n\t#end\r\n}\r\n","/*\r\n * Copyright (C)2005-2019 Haxe Foundation\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a\r\n * copy of this software and associated documentation files (the \"Software\"),\r\n * to deal in the Software without restriction, including without limitation\r\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\r\n * and/or sell copies of the Software, and to permit persons to whom the\r\n * Software is furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\r\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\r\n * DEALINGS IN THE SOFTWARE.\r\n */\r\n\r\npackage haxe.ds;\r\n\r\n@:coreApi class IntMap<T> implements haxe.Constraints.IMap<Int, T> {\r\n\tprivate var h:Dynamic;\r\n\r\n\tpublic inline function new():Void {\r\n\t\th = {};\r\n\t}\r\n\r\n\tpublic inline function set(key:Int, value:T):Void {\r\n\t\th[key] = value;\r\n\t}\r\n\r\n\tpublic inline function get(key:Int):Null<T> {\r\n\t\treturn h[key];\r\n\t}\r\n\r\n\tpublic inline function exists(key:Int):Bool {\r\n\t\treturn (cast h).hasOwnProperty(key);\r\n\t}\r\n\r\n\tpublic function remove(key:Int):Bool {\r\n\t\tif (!(cast h).hasOwnProperty(key))\r\n\t\t\treturn false;\r\n\t\tjs.Syntax.delete(h, key);\r\n\t\treturn true;\r\n\t}\r\n\r\n\tpublic function keys():Iterator<Int> {\r\n\t\tvar a = [];\r\n\t\tuntyped __js__(\"for( var key in {0} ) {1}\", h, if (h.hasOwnProperty(key)) a.push(key | 0));\r\n\t\treturn a.iterator();\r\n\t}\r\n\r\n\tpublic function iterator():Iterator<T> {\r\n\t\treturn untyped {\r\n\t\t\tref: h,\r\n\t\t\tit: keys(),\r\n\t\t\thasNext: function() {\r\n\t\t\t\treturn __this__.it.hasNext();\r\n\t\t\t},\r\n\t\t\tnext: function() {\r\n\t\t\t\tvar i = __this__.it.next();\r\n\t\t\t\treturn __this__.ref[i];\r\n\t\t\t}\r\n\t\t};\r\n\t}\r\n\r\n\t@:runtime public inline function keyValueIterator():KeyValueIterator<Int, T> {\r\n\t\treturn new haxe.iterators.MapKeyValueIterator(this);\r\n\t}\r\n\r\n\tpublic function copy():IntMap<T> {\r\n\t\tvar copied = new IntMap();\r\n\t\tfor (key in keys())\r\n\t\t\tcopied.set(key, get(key));\r\n\t\treturn copied;\r\n\t}\r\n\r\n\tpublic function toString():String {\r\n\t\tvar s = new StringBuf();\r\n\t\ts.add(\"{\");\r\n\t\tvar it = keys();\r\n\t\tfor (i in it) {\r\n\t\t\ts.add(i);\r\n\t\t\ts.add(\" => \");\r\n\t\t\ts.add(Std.string(get(i)));\r\n\t\t\tif (it.hasNext())\r\n\t\t\t\ts.add(\", \");\r\n\t\t}\r\n\t\ts.add(\"}\");\r\n\t\treturn s.toString();\r\n\t}\r\n\r\n\tpublic inline function clear():Void {\r\n\t\th = {};\r\n\t}\r\n}\r\n","/*\r\n * Copyright (C)2005-2019 Haxe Foundation\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a\r\n * copy of this software and associated documentation files (the \"Software\"),\r\n * to deal in the Software without restriction, including without limitation\r\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\r\n * and/or sell copies of the Software, and to permit persons to whom the\r\n * Software is furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\r\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\r\n * DEALINGS IN THE SOFTWARE.\r\n */\r\n\r\npackage haxe.ds;\r\n\r\n/**\r\n\tA linked-list of elements. The list is composed of element container objects\r\n\tthat are chained together. It is optimized so that adding or removing an\r\n\telement does not imply copying the whole list content every time.\r\n\r\n\t@see https://haxe.org/manual/std-List.html\r\n**/\r\nclass List<T> {\r\n\tprivate var h:ListNode<T>;\r\n\tprivate var q:ListNode<T>;\r\n\r\n\t/**\r\n\t\tThe length of `this` List.\r\n\t**/\r\n\tpublic var length(default, null):Int;\r\n\r\n\t/**\r\n\t\tCreates a new empty list.\r\n\t**/\r\n\tpublic function new() {\r\n\t\tlength = 0;\r\n\t}\r\n\r\n\t/**\r\n\t\tAdds element `item` at the end of `this` List.\r\n\r\n\t\t`this.length` increases by 1.\r\n\t**/\r\n\tpublic function add(item:T) {\r\n\t\tvar x = ListNode.create(item, null);\r\n\t\tif (h == null)\r\n\t\t\th = x;\r\n\t\telse\r\n\t\t\tq.next = x;\r\n\t\tq = x;\r\n\t\tlength++;\r\n\t}\r\n\r\n\t/**\r\n\t\tAdds element `item` at the beginning of `this` List.\r\n\r\n\t\t`this.length` increases by 1.\r\n\t**/\r\n\tpublic function push(item:T) {\r\n\t\tvar x = ListNode.create(item, h);\r\n\t\th = x;\r\n\t\tif (q == null)\r\n\t\t\tq = x;\r\n\t\tlength++;\r\n\t}\r\n\r\n\t/**\r\n\t\tReturns the first element of `this` List, or null if no elements exist.\r\n\r\n\t\tThis function does not modify `this` List.\r\n\t**/\r\n\tpublic function first():Null<T> {\r\n\t\treturn if (h == null) null else h.item;\r\n\t}\r\n\r\n\t/**\r\n\t\tReturns the last element of `this` List, or null if no elements exist.\r\n\r\n\t\tThis function does not modify `this` List.\r\n\t**/\r\n\tpublic function last():Null<T> {\r\n\t\treturn if (q == null) null else q.item;\r\n\t}\r\n\r\n\t/**\r\n\t\tReturns the first element of `this` List, or null if no elements exist.\r\n\r\n\t\tThe element is removed from `this` List.\r\n\t**/\r\n\tpublic function pop():Null<T> {\r\n\t\tif (h == null)\r\n\t\t\treturn null;\r\n\t\tvar x = h.item;\r\n\t\th = h.next;\r\n\t\tif (h == null)\r\n\t\t\tq = null;\r\n\t\tlength--;\r\n\t\treturn x;\r\n\t}\r\n\r\n\t/**\r\n\t\tTells if `this` List is empty.\r\n\t**/\r\n\tpublic function isEmpty():Bool {\r\n\t\treturn (h == null);\r\n\t}\r\n\r\n\t/**\r\n\t\tEmpties `this` List.\r\n\r\n\t\tThis function does not traverse the elements, but simply sets the\r\n\t\tinternal references to null and `this.length` to 0.\r\n\t**/\r\n\tpublic function clear():Void {\r\n\t\th = null;\r\n\t\tq = null;\r\n\t\tlength = 0;\r\n\t}\r\n\r\n\t/**\r\n\t\tRemoves the first occurrence of `v` in `this` List.\r\n\r\n\t\tIf `v` is found by checking standard equality, it is removed from `this`\r\n\t\tList and the function returns true.\r\n\r\n\t\tOtherwise, false is returned.\r\n\t**/\r\n\tpublic function remove(v:T):Bool {\r\n\t\tvar prev:ListNode<T> = null;\r\n\t\tvar l = h;\r\n\t\twhile (l != null) {\r\n\t\t\tif (l.item == v) {\r\n\t\t\t\tif (prev == null)\r\n\t\t\t\t\th = l.next;\r\n\t\t\t\telse\r\n\t\t\t\t\tprev.next = l.next;\r\n\t\t\t\tif (q == l)\r\n\t\t\t\t\tq = prev;\r\n\t\t\t\tlength--;\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\tprev = l;\r\n\t\t\tl = l.next;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t\tReturns an iterator on the elements of the list.\r\n\t**/\r\n\tpublic inline function iterator():ListIterator<T> {\r\n\t\treturn new ListIterator<T>(h);\r\n\t}\r\n\r\n\t/**\r\n\t\tReturns an iterator of the List indices and values.\r\n\t**/\r\n\t@:pure @:runtime public inline function keyValueIterator():ListKeyValueIterator<T> {\r\n\t\treturn new ListKeyValueIterator(h);\r\n\t}\r\n\r\n\t/**\r\n\t\tReturns a string representation of `this` List.\r\n\r\n\t\tThe result is enclosed in { } with the individual elements being\r\n\t\tseparated by a comma.\r\n\t**/\r\n\tpublic function toString() {\r\n\t\tvar s = new StringBuf();\r\n\t\tvar first = true;\r\n\t\tvar l = h;\r\n\t\ts.add(\"{\");\r\n\t\twhile (l != null) {\r\n\t\t\tif (first)\r\n\t\t\t\tfirst = false;\r\n\t\t\telse\r\n\t\t\t\ts.add(\", \");\r\n\t\t\ts.add(Std.string(l.item));\r\n\t\t\tl = l.next;\r\n\t\t}\r\n\t\ts.add(\"}\");\r\n\t\treturn s.toString();\r\n\t}\r\n\r\n\t/**\r\n\t\tReturns a string representation of `this` List, with `sep` separating\r\n\t\teach element.\r\n\t**/\r\n\tpublic function join(sep:String) {\r\n\t\tvar s = new StringBuf();\r\n\t\tvar first = true;\r\n\t\tvar l = h;\r\n\t\twhile (l != null) {\r\n\t\t\tif (first)\r\n\t\t\t\tfirst = false;\r\n\t\t\telse\r\n\t\t\t\ts.add(sep);\r\n\t\t\ts.add(l.item);\r\n\t\t\tl = l.next;\r\n\t\t}\r\n\t\treturn s.toString();\r\n\t}\r\n\r\n\t/**\r\n\t\tReturns a list filtered with `f`. The returned list will contain all\r\n\t\telements for which `f(x) == true`.\r\n\t**/\r\n\tpublic function filter(f:T->Bool) {\r\n\t\tvar l2 = new List();\r\n\t\tvar l = h;\r\n\t\twhile (l != null) {\r\n\t\t\tvar v = l.item;\r\n\t\t\tl = l.next;\r\n\t\t\tif (f(v))\r\n\t\t\t\tl2.add(v);\r\n\t\t}\r\n\t\treturn l2;\r\n\t}\r\n\r\n\t/**\r\n\t\tReturns a new list where all elements have been converted by the\r\n\t\tfunction `f`.\r\n\t**/\r\n\tpublic function map<X>(f:T->X):List<X> {\r\n\t\tvar b = new List();\r\n\t\tvar l = h;\r\n\t\twhile (l != null) {\r\n\t\t\tvar v = l.item;\r\n\t\t\tl = l.next;\r\n\t\t\tb.add(f(v));\r\n\t\t}\r\n\t\treturn b;\r\n\t}\r\n}\r\n\r\n#if neko\r\nprivate extern class ListNode<T> extends neko.NativeArray<Dynamic> {\r\n\tvar item(get, set):T;\r\n\tvar next(get, set):ListNode<T>;\r\n\tprivate inline function get_item():T\r\n\t\treturn this[0];\r\n\tprivate inline function set_item(v:T):T\r\n\t\treturn this[0] = v;\r\n\tprivate inline function get_next():ListNode<T>\r\n\t\treturn this[1];\r\n\tprivate inline function set_next(v:ListNode<T>):ListNode<T>\r\n\t\treturn this[1] = v;\r\n\tinline static function create<T>(item:T, next:ListNode<T>):ListNode<T> {\r\n\t\treturn untyped __dollar__array(item, next);\r\n\t}\r\n}\r\n#else\r\nprivate class ListNode<T> {\r\n\tpublic var item:T;\r\n\tpublic var next:ListNode<T>;\r\n\r\n\tpublic function new(item:T, next:ListNode<T>) {\r\n\t\tthis.item = item;\r\n\t\tthis.next = next;\r\n\t}\r\n\r\n\textern public inline static function create<T>(item:T, next:ListNode<T>):ListNode<T> {\r\n\t\treturn new ListNode(item, next);\r\n\t}\r\n}\r\n#end\r\n\r\nprivate class ListIterator<T> {\r\n\tvar head:ListNode<T>;\r\n\r\n\tpublic inline function new(head:ListNode<T>) {\r\n\t\tthis.head = head;\r\n\t}\r\n\r\n\tpublic inline function hasNext():Bool {\r\n\t\treturn head != null;\r\n\t}\r\n\r\n\tpublic inline function next():T {\r\n\t\tvar val = head.item;\r\n\t\thead = head.next;\r\n\t\treturn val;\r\n\t}\r\n}\r\n\r\nprivate class ListKeyValueIterator<T> {\r\n\tvar idx:Int;\r\n\tvar head:ListNode<T>;\r\n\r\n\tpublic inline function new(head:ListNode<T>) {\r\n\t\tthis.head = head;\r\n\t\tthis.idx = 0;\r\n\t}\r\n\r\n\tpublic inline function hasNext():Bool {\r\n\t\treturn head != null;\r\n\t}\r\n\r\n\tpublic inline function next():{key:Int, value:T} {\r\n\t\tvar val = head.item;\r\n\t\thead = head.next;\r\n\t\treturn {value: val, key: idx++};\r\n\t}\r\n}\r\n","/*\r\n * Copyright (C)2005-2019 Haxe Foundation\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a\r\n * copy of h software and associated documentation files (the \"Software\"),\r\n * to deal in the Software without restriction, including without limitation\r\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\r\n * and/or sell copies of the Software, and to permit persons to whom the\r\n * Software is furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and h permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\r\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\r\n * DEALINGS IN THE SOFTWARE.\r\n */\r\n\r\npackage haxe.ds;\r\n\r\nimport js.Syntax;\r\nimport js.Lib;\r\n\r\n@:coreApi\r\nclass ObjectMap<K:{}, V> implements haxe.Constraints.IMap<K, V> {\r\n\tstatic var count:Int;\r\n\r\n\t// initialize count through __init__ magic, because these are generated\r\n\t// before normal static initializations for which ObjectMap should be ready to use\r\n\t// see https://github.com/HaxeFoundation/haxe/issues/6792\r\n\tstatic inline function __init__():Void\r\n\t\tcount = 0;\r\n\r\n\tstatic inline function assignId(obj:{}):Int {\r\n\t\treturn Syntax.code('({0}.__id__ = {1})', obj, Lib.getNextHaxeUID());\r\n\t}\r\n\r\n\tstatic inline function getId(obj:{}):Int {\r\n\t\treturn untyped obj.__id__;\r\n\t}\r\n\r\n\tvar h:{__keys__:{}};\r\n\r\n\tpublic function new():Void {\r\n\t\th = {__keys__: {}};\r\n\t}\r\n\r\n\tpublic function set(key:K, value:V):Void {\r\n\t\tvar id = getId(key);\r\n\t\tif(id == null) {\r\n\t\t\tid = assignId(key);\r\n\t\t}\r\n\t\tSyntax.code('{0}[{1}] = {2}', h, id, value);\r\n\t\tSyntax.code('{0}[{1}] = {2}', h.__keys__, id, key);\r\n\t}\r\n\r\n\tpublic inline function get(key:K):Null<V> {\r\n\t\treturn untyped h[getId(key)];\r\n\t}\r\n\r\n\tpublic inline function exists(key:K):Bool {\r\n\t\treturn untyped h.__keys__[getId(key)] != null;\r\n\t}\r\n\r\n\tpublic function remove(key:K):Bool {\r\n\t\tvar id = getId(key);\r\n\t\tif (untyped h.__keys__[id] == null)\r\n\t\t\treturn false;\r\n\t\tuntyped __js__(\"delete\")(h[id]);\r\n\t\tuntyped __js__(\"delete\")(h.__keys__[id]);\r\n\t\treturn true;\r\n\t}\r\n\r\n\tpublic function keys():Iterator<K> {\r\n\t\tvar a = [];\r\n\t\tuntyped {\r\n\t\t\t__js__(\"for( var key in this.h.__keys__ ) {\");\r\n\t\t\tif (h.hasOwnProperty(key))\r\n\t\t\t\ta.push(h.__keys__[key]);\r\n\t\t\t__js__(\"}\");\r\n\t\t}\r\n\t\treturn a.iterator();\r\n\t}\r\n\r\n\tpublic function iterator():Iterator<V> {\r\n\t\treturn untyped {\r\n\t\t\tref: h,\r\n\t\t\tit: keys(),\r\n\t\t\thasNext: function() {\r\n\t\t\t\treturn __this__.it.hasNext();\r\n\t\t\t},\r\n\t\t\tnext: function() {\r\n\t\t\t\tvar i = __this__.it.next();\r\n\t\t\t\treturn __this__.ref[getId(i)];\r\n\t\t\t}\r\n\t\t};\r\n\t}\r\n\r\n\t@:runtime public inline function keyValueIterator():KeyValueIterator<K, V> {\r\n\t\treturn new haxe.iterators.MapKeyValueIterator(this);\r\n\t}\r\n\r\n\tpublic function copy():ObjectMap<K, V> {\r\n\t\tvar copied = new ObjectMap();\r\n\t\tfor (key in keys())\r\n\t\t\tcopied.set(key, get(key));\r\n\t\treturn copied;\r\n\t}\r\n\r\n\tpublic function toString():String {\r\n\t\tvar s = new StringBuf();\r\n\t\ts.add(\"{\");\r\n\t\tvar it = keys();\r\n\t\tfor (i in it) {\r\n\t\t\ts.add(Std.string(i));\r\n\t\t\ts.add(\" => \");\r\n\t\t\ts.add(Std.string(get(i)));\r\n\t\t\tif (it.hasNext())\r\n\t\t\t\ts.add(\", \");\r\n\t\t}\r\n\t\ts.add(\"}\");\r\n\t\treturn s.toString();\r\n\t}\r\n\r\n\tpublic inline function clear():Void {\r\n\t\th = {__keys__: {}};\r\n\t}\r\n}\r\n","/*\r\n * Copyright (C)2005-2019 Haxe Foundation\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a\r\n * copy of this software and associated documentation files (the \"Software\"),\r\n * to deal in the Software without restriction, including without limitation\r\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\r\n * and/or sell copies of the Software, and to permit persons to whom the\r\n * Software is furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\r\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\r\n * DEALINGS IN THE SOFTWARE.\r\n */\r\n\r\npackage haxe.ds;\r\n\r\nprivate class StringMapIterator<T> {\r\n\tvar map:StringMap<T>;\r\n\tvar keys:Array<String>;\r\n\tvar index:Int;\r\n\tvar count:Int;\r\n\r\n\tpublic inline function new(map:StringMap<T>, keys:Array<String>) {\r\n\t\tthis.map = map;\r\n\t\tthis.keys = keys;\r\n\t\tthis.index = 0;\r\n\t\tthis.count = keys.length;\r\n\t}\r\n\r\n\tpublic inline function hasNext() {\r\n\t\treturn index < count;\r\n\t}\r\n\r\n\tpublic inline function next() {\r\n\t\treturn map.get(keys[index++]);\r\n\t}\r\n}\r\n\r\n@:coreApi class StringMap<T> implements haxe.Constraints.IMap<String, T> {\r\n\tprivate var h:Dynamic;\r\n\tprivate var rh:Dynamic;\r\n\r\n\tpublic inline function new():Void {\r\n\t\th = {};\r\n\t}\r\n\r\n\tinline function isReserved(key:String):Bool {\r\n\t\treturn untyped __js__(\"__map_reserved\")[key] != null;\r\n\t}\r\n\r\n\tpublic inline function set(key:String, value:T):Void {\r\n\t\tif (isReserved(key))\r\n\t\t\tsetReserved(key, value);\r\n\t\telse\r\n\t\t\th[cast key] = value;\r\n\t}\r\n\r\n\tpublic inline function get(key:String):Null<T> {\r\n\t\tif (isReserved(key))\r\n\t\t\treturn getReserved(key);\r\n\t\treturn h[cast key];\r\n\t}\r\n\r\n\tpublic inline function exists(key:String):Bool {\r\n\t\tif (isReserved(key))\r\n\t\t\treturn existsReserved(key);\r\n\t\treturn h.hasOwnProperty(key);\r\n\t}\r\n\r\n\tfunction setReserved(key:String, value:T):Void {\r\n\t\tif (rh == null)\r\n\t\t\trh = {};\r\n\t\trh[cast \"$\" + key] = value;\r\n\t}\r\n\r\n\tfunction getReserved(key:String):Null<T> {\r\n\t\treturn rh == null ? null : rh[cast \"$\" + key];\r\n\t}\r\n\r\n\tfunction existsReserved(key:String):Bool {\r\n\t\tif (rh == null)\r\n\t\t\treturn false;\r\n\t\treturn (cast rh).hasOwnProperty(\"$\" + key);\r\n\t}\r\n\r\n\tpublic function remove(key:String):Bool {\r\n\t\tif (isReserved(key)) {\r\n\t\t\tkey = \"$\" + key;\r\n\t\t\tif (rh == null || !rh.hasOwnProperty(key))\r\n\t\t\t\treturn false;\r\n\t\t\tjs.Syntax.delete(rh, key);\r\n\t\t\treturn true;\r\n\t\t} else {\r\n\t\t\tif (!h.hasOwnProperty(key))\r\n\t\t\t\treturn false;\r\n\t\t\tjs.Syntax.delete(h, key);\r\n\t\t\treturn true;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic function keys():Iterator<String> {\r\n\t\treturn arrayKeys().iterator();\r\n\t}\r\n\r\n\tfunction arrayKeys():Array<String> {\r\n\t\tvar out = [];\r\n\t\tuntyped {\r\n\t\t\t__js__(\"for( var key in this.h ) {\");\r\n\t\t\tif (h.hasOwnProperty(key))\r\n\t\t\t\tout.push(key);\r\n\t\t\t__js__(\"}\");\r\n\t\t}\r\n\t\tif (rh != null)\r\n\t\t\tuntyped {\r\n\t\t\t\t__js__(\"for( var key in this.rh ) {\");\r\n\t\t\t\tif (key.charCodeAt(0) == \"$\".code)\r\n\t\t\t\t\tout.push(key.substr(1));\r\n\t\t\t\t__js__(\"}\");\r\n\t\t\t}\r\n\t\treturn out;\r\n\t}\r\n\r\n\tpublic inline function iterator():Iterator<T> {\r\n\t\treturn new StringMapIterator(this, arrayKeys());\r\n\t}\r\n\r\n\t@:runtime public inline function keyValueIterator():KeyValueIterator<String, T> {\r\n\t\treturn new haxe.iterators.MapKeyValueIterator(this);\r\n\t}\r\n\r\n\tpublic function copy():StringMap<T> {\r\n\t\tvar copied = new StringMap();\r\n\t\tfor (key in keys())\r\n\t\t\tcopied.set(key, get(key));\r\n\t\treturn copied;\r\n\t}\r\n\r\n\tpublic function toString():String {\r\n\t\tvar s = new StringBuf();\r\n\t\ts.add(\"{\");\r\n\t\tvar keys = arrayKeys();\r\n\t\tfor (i in 0...keys.length) {\r\n\t\t\tvar k = keys[i];\r\n\t\t\ts.add(k);\r\n\t\t\ts.add(\" => \");\r\n\t\t\ts.add(Std.string(get(k)));\r\n\t\t\tif (i < keys.length - 1)\r\n\t\t\t\ts.add(\", \");\r\n\t\t}\r\n\t\ts.add(\"}\");\r\n\t\treturn s.toString();\r\n\t}\r\n\r\n\tpublic inline function clear():Void {\r\n\t\th = {};\r\n\t\trh = null;\r\n\t}\r\n\r\n\tstatic function __init__():Void {\r\n\t\tuntyped __js__(\"var __map_reserved = {};\");\r\n\t}\r\n}\r\n","/*\r\n * Copyright (C)2005-2019 Haxe Foundation\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a\r\n * copy of this software and associated documentation files (the \"Software\"),\r\n * to deal in the Software without restriction, including without limitation\r\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\r\n * and/or sell copies of the Software, and to permit persons to whom the\r\n * Software is furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\r\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\r\n * DEALINGS IN THE SOFTWARE.\r\n */\r\n\r\npackage haxe.io;\r\n\r\n/**\r\n\tAn Input is an abstract reader. See other classes in the `haxe.io` package\r\n\tfor several possible implementations.\r\n\r\n\tAll functions which read data throw `Eof` when the end of the stream\r\n\tis reached.\r\n**/\r\nclass Input {\r\n\t/**\r\n\t\tEndianness (word byte order) used when reading numbers.\r\n\r\n\t\tIf `true`, big-endian is used, otherwise `little-endian` is used.\r\n\t**/\r\n\tpublic var bigEndian(default, set):Bool;\r\n\r\n\t#if cs\r\n\tprivate var helper:BytesData;\r\n\t#elseif java\r\n\tprivate var helper:java.nio.ByteBuffer;\r\n\t#end\r\n\r\n\t/**\r\n\t\tRead and return one byte.\r\n\t**/\r\n\tpublic function readByte():Int {\r\n\t\t#if cpp\r\n\t\tthrow \"Not implemented\";\r\n\t\t#else\r\n\t\treturn throw \"Not implemented\";\r\n\t\t#end\r\n\t}\r\n\r\n\t/**\r\n\t\tRead `len` bytes and write them into `s` to the position specified by `pos`.\r\n\r\n\t\tReturns the actual length of read data that can be smaller than `len`.\r\n\r\n\t\tSee `readFullBytes` that tries to read the exact amount of specified bytes.\r\n\t**/\r\n\tpublic function readBytes(s:Bytes, pos:Int, len:Int):Int {\r\n\t\tvar k = len;\r\n\t\tvar b = #if (js || hl) @:privateAccess s.b #else s.getData() #end;\r\n\t\tif (pos < 0 || len < 0 || pos + len > s.length)\r\n\t\t\tthrow Error.OutsideBounds;\r\n\t\ttry {\r\n\t\t\twhile (k > 0) {\r\n\t\t\t\t#if neko\r\n\t\t\t\tuntyped __dollar__sset(b, pos, readByte());\r\n\t\t\t\t#elseif php\r\n\t\t\t\tb.set(pos, readByte());\r\n\t\t\t\t#elseif cpp\r\n\t\t\t\tb[pos] = untyped readByte();\r\n\t\t\t\t#else\r\n\t\t\t\tb[pos] = cast readByte();\r\n\t\t\t\t#end\r\n\t\t\t\tpos++;\r\n\t\t\t\tk--;\r\n\t\t\t}\r\n\t\t} catch (eof:haxe.io.Eof) {}\r\n\t\treturn len - k;\r\n\t}\r\n\r\n\t/**\r\n\t\tClose the input source.\r\n\r\n\t\tBehaviour while reading after calling this method is unspecified.\r\n\t**/\r\n\tpublic function close():Void {}\r\n\r\n\tfunction set_bigEndian(b:Bool):Bool {\r\n\t\tbigEndian = b;\r\n\t\treturn b;\r\n\t}\r\n\r\n\t/* ------------------ API ------------------ */\r\n\t/**\r\n\t\tRead and return all available data.\r\n\r\n\t\tThe `bufsize` optional argument specifies the size of chunks by\r\n\t\twhich data is read. Its default value is target-specific.\r\n\t**/\r\n\tpublic function readAll(?bufsize:Int):Bytes {\r\n\t\tif (bufsize == null)\r\n\t\t\t#if php\r\n\t\t\tbufsize = 8192; // default value for PHP and max under certain circumstances\r\n\t\t\t#else\r\n\t\t\tbufsize = (1 << 14); // 16 Ko\r\n\t\t\t#end\r\n\r\n\t\tvar buf = Bytes.alloc(bufsize);\r\n\t\tvar total = new haxe.io.BytesBuffer();\r\n\t\ttry {\r\n\t\t\twhile (true) {\r\n\t\t\t\tvar len = readBytes(buf, 0, bufsize);\r\n\t\t\t\tif (len == 0)\r\n\t\t\t\t\tthrow Error.Blocked;\r\n\t\t\t\ttotal.addBytes(buf, 0, len);\r\n\t\t\t}\r\n\t\t} catch (e:Eof) {}\r\n\t\treturn total.getBytes();\r\n\t}\r\n\r\n\t/**\r\n\t\tRead `len` bytes and write them into `s` to the position specified by `pos`.\r\n\r\n\t\tUnlike `readBytes`, this method tries to read the exact `len` amount of bytes.\r\n\t**/\r\n\tpublic function readFullBytes(s:Bytes, pos:Int, len:Int):Void {\r\n\t\twhile (len > 0) {\r\n\t\t\tvar k = readBytes(s, pos, len);\r\n\t\t\tif (k == 0)\r\n\t\t\t\tthrow Error.Blocked;\r\n\t\t\tpos += k;\r\n\t\t\tlen -= k;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t\tRead and return `nbytes` bytes.\r\n\t**/\r\n\tpublic function read(nbytes:Int):Bytes {\r\n\t\tvar s = Bytes.alloc(nbytes);\r\n\t\tvar p = 0;\r\n\t\twhile (nbytes > 0) {\r\n\t\t\tvar k = readBytes(s, p, nbytes);\r\n\t\t\tif (k == 0)\r\n\t\t\t\tthrow Error.Blocked;\r\n\t\t\tp += k;\r\n\t\t\tnbytes -= k;\r\n\t\t}\r\n\t\treturn s;\r\n\t}\r\n\r\n\t/**\r\n\t\tRead a string until a character code specified by `end` is occurred.\r\n\r\n\t\tThe final character is not included in the resulting string.\r\n\t**/\r\n\tpublic function readUntil(end:Int):String {\r\n\t\tvar buf = new BytesBuffer();\r\n\t\tvar last:Int;\r\n\t\twhile ((last = readByte()) != end)\r\n\t\t\tbuf.addByte(last);\r\n\t\treturn buf.getBytes().toString();\r\n\t}\r\n\r\n\t/**\r\n\t\tRead a line of text separated by CR and/or LF bytes.\r\n\r\n\t\tThe CR/LF characters are not included in the resulting string.\r\n\t**/\r\n\tpublic function readLine():String {\r\n\t\tvar buf = new BytesBuffer();\r\n\t\tvar last:Int;\r\n\t\tvar s;\r\n\t\ttry {\r\n\t\t\twhile ((last = readByte()) != 10)\r\n\t\t\t\tbuf.addByte(last);\r\n\t\t\ts = buf.getBytes().toString();\r\n\t\t\tif (s.charCodeAt(s.length - 1) == 13)\r\n\t\t\t\ts = s.substr(0, -1);\r\n\t\t} catch (e:Eof) {\r\n\t\t\ts = buf.getBytes().toString();\r\n\t\t\tif (s.length == 0)\r\n\t\t\t\t#if neko neko.Lib.rethrow #else throw #end (e);\r\n\t\t}\r\n\t\treturn s;\r\n\t}\r\n\r\n\t/**\r\n\t\tRead a 32-bit floating point number.\r\n\r\n\t\tEndianness is specified by the `bigEndian` property.\r\n\t**/\r\n\tpublic function readFloat():Float {\r\n\t\treturn FPHelper.i32ToFloat(readInt32());\r\n\t}\r\n\r\n\t/**\r\n\t\tRead a 64-bit double-precision floating point number.\r\n\r\n\t\tEndianness is specified by the `bigEndian` property.\r\n\t**/\r\n\tpublic function readDouble():Float {\r\n\t\tvar i1 = readInt32();\r\n\t\tvar i2 = readInt32();\r\n\t\treturn bigEndian ? FPHelper.i64ToDouble(i2, i1) : FPHelper.i64ToDouble(i1, i2);\r\n\t}\r\n\r\n\t/**\r\n\t\tRead a 8-bit signed integer.\r\n\t**/\r\n\tpublic function readInt8():Int {\r\n\t\tvar n = readByte();\r\n\t\tif (n >= 128)\r\n\t\t\treturn n - 256;\r\n\t\treturn n;\r\n\t}\r\n\r\n\t/**\r\n\t\tRead a 16-bit signed integer.\r\n\r\n\t\tEndianness is specified by the `bigEndian` property.\r\n\t**/\r\n\tpublic function readInt16():Int {\r\n\t\tvar ch1 = readByte();\r\n\t\tvar ch2 = readByte();\r\n\t\tvar n = bigEndian ? ch2 | (ch1 << 8) : ch1 | (ch2 << 8);\r\n\t\tif (n & 0x8000 != 0)\r\n\t\t\treturn n - 0x10000;\r\n\t\treturn n;\r\n\t}\r\n\r\n\t/**\r\n\t\tRead a 16-bit unsigned integer.\r\n\r\n\t\tEndianness is specified by the `bigEndian` property.\r\n\t**/\r\n\tpublic function readUInt16():Int {\r\n\t\tvar ch1 = readByte();\r\n\t\tvar ch2 = readByte();\r\n\t\treturn bigEndian ? ch2 | (ch1 << 8) : ch1 | (ch2 << 8);\r\n\t}\r\n\r\n\t/**\r\n\t\tRead a 24-bit signed integer.\r\n\r\n\t\tEndianness is specified by the `bigEndian` property.\r\n\t**/\r\n\tpublic function readInt24():Int {\r\n\t\tvar ch1 = readByte();\r\n\t\tvar ch2 = readByte();\r\n\t\tvar ch3 = readByte();\r\n\t\tvar n = bigEndian ? ch3 | (ch2 << 8) | (ch1 << 16) : ch1 | (ch2 << 8) | (ch3 << 16);\r\n\t\tif (n & 0x800000 != 0)\r\n\t\t\treturn n - 0x1000000;\r\n\t\treturn n;\r\n\t}\r\n\r\n\t/**\r\n\t\tRead a 24-bit unsigned integer.\r\n\r\n\t\tEndianness is specified by the `bigEndian` property.\r\n\t**/\r\n\tpublic function readUInt24():Int {\r\n\t\tvar ch1 = readByte();\r\n\t\tvar ch2 = readByte();\r\n\t\tvar ch3 = readByte();\r\n\t\treturn bigEndian ? ch3 | (ch2 << 8) | (ch1 << 16) : ch1 | (ch2 << 8) | (ch3 << 16);\r\n\t}\r\n\r\n\t/**\r\n\t\tRead a 32-bit signed integer.\r\n\r\n\t\tEndianness is specified by the `bigEndian` property.\r\n\t**/\r\n\tpublic function readInt32():Int {\r\n\t\tvar ch1 = readByte();\r\n\t\tvar ch2 = readByte();\r\n\t\tvar ch3 = readByte();\r\n\t\tvar ch4 = readByte();\r\n\t\t#if (php || python)\r\n\t\t// php will overflow integers.  Convert them back to signed 32-bit ints.\r\n\t\tvar n = bigEndian ? ch4 | (ch3 << 8) | (ch2 << 16) | (ch1 << 24) : ch1 | (ch2 << 8) | (ch3 << 16) | (ch4 << 24);\r\n\t\tif (n & 0x80000000 != 0)\r\n\t\t\treturn (n | 0x80000000);\r\n\t\telse\r\n\t\t\treturn n;\r\n\t\t#elseif lua\r\n\t\tvar n = bigEndian ? ch4 | (ch3 << 8) | (ch2 << 16) | (ch1 << 24) : ch1 | (ch2 << 8) | (ch3 << 16) | (ch4 << 24);\r\n\t\treturn lua.Boot.clampInt32(n);\r\n\t\t#else\r\n\t\treturn bigEndian ? ch4 | (ch3 << 8) | (ch2 << 16) | (ch1 << 24) : ch1 | (ch2 << 8) | (ch3 << 16) | (ch4 << 24);\r\n\t\t#end\r\n\t}\r\n\r\n\t/**\r\n\t\tRead and `len` bytes as a string.\r\n\t**/\r\n\tpublic function readString(len:Int, ?encoding:Encoding):String {\r\n\t\tvar b = Bytes.alloc(len);\r\n\t\treadFullBytes(b, 0, len);\r\n\t\t#if neko\r\n\t\treturn neko.Lib.stringReference(b);\r\n\t\t#else\r\n\t\treturn b.getString(0, len, encoding);\r\n\t\t#end\r\n\t}\r\n\r\n\t#if neko\r\n\tstatic var _float_of_bytes = neko.Lib.load(\"std\", \"float_of_bytes\", 2);\r\n\tstatic var _double_of_bytes = neko.Lib.load(\"std\", \"double_of_bytes\", 2);\r\n\r\n\tstatic function __init__()\r\n\t\tuntyped {\r\n\t\t\tInput.prototype.bigEndian = false;\r\n\t\t}\r\n\t#end\r\n\r\n\t#if (flash || js || python)\r\n\tfunction getDoubleSig(bytes:Array<Int>) {\r\n\t\treturn (((bytes[1] & 0xF) << 16) | (bytes[2] << 8) | bytes[3]) * 4294967296.\r\n\t\t\t+ (bytes[4] >> 7) * 2147483648\r\n\t\t\t+ (((bytes[4] & 0x7F) << 24) | (bytes[5] << 16) | (bytes[6] << 8) | bytes[7]);\r\n\t}\r\n\t#end\r\n}\r\n","/*\r\n * Copyright (C)2005-2019 Haxe Foundation\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a\r\n * copy of this software and associated documentation files (the \"Software\"),\r\n * to deal in the Software without restriction, including without limitation\r\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\r\n * and/or sell copies of the Software, and to permit persons to whom the\r\n * Software is furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\r\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\r\n * DEALINGS IN THE SOFTWARE.\r\n */\r\n\r\npackage haxe.io;\r\n\r\n@:coreApi\r\nclass BytesBuffer {\r\n\tvar buffer:js.lib.ArrayBuffer;\r\n\tvar view:js.lib.DataView;\r\n\tvar u8:js.lib.Uint8Array;\r\n\tvar pos:Int;\r\n\tvar size:Int;\r\n\r\n\tpublic var length(get, never):Int;\r\n\r\n\tpublic function new() {\r\n\t\tpos = 0;\r\n\t\tsize = 0;\r\n\t}\r\n\r\n\tinline function get_length():Int {\r\n\t\treturn pos;\r\n\t}\r\n\r\n\tpublic function addByte(byte:Int):Void {\r\n\t\tif (pos == size)\r\n\t\t\tgrow(1);\r\n\t\tview.setUint8(pos++, byte);\r\n\t}\r\n\r\n\tpublic function add(src:Bytes):Void {\r\n\t\tif (pos + src.length > size)\r\n\t\t\tgrow(src.length);\r\n\t\tif (size == 0)\r\n\t\t\treturn;\r\n\t\tvar sub = new js.lib.Uint8Array(@:privateAccess src.b.buffer, @:privateAccess src.b.byteOffset, src.length);\r\n\t\tu8.set(sub, pos);\r\n\t\tpos += src.length;\r\n\t}\r\n\r\n\tpublic function addString(v:String, ?encoding:Encoding):Void {\r\n\t\tadd(Bytes.ofString(v, encoding));\r\n\t}\r\n\r\n\tpublic function addInt32(v:Int):Void {\r\n\t\tif (pos + 4 > size)\r\n\t\t\tgrow(4);\r\n\t\tview.setInt32(pos, v, true);\r\n\t\tpos += 4;\r\n\t}\r\n\r\n\tpublic function addInt64(v:haxe.Int64):Void {\r\n\t\tif (pos + 8 > size)\r\n\t\t\tgrow(8);\r\n\t\tview.setInt32(pos, v.low, true);\r\n\t\tview.setInt32(pos + 4, v.high, true);\r\n\t\tpos += 8;\r\n\t}\r\n\r\n\tpublic function addFloat(v:Float):Void {\r\n\t\tif (pos + 4 > size)\r\n\t\t\tgrow(4);\r\n\t\tview.setFloat32(pos, v, true);\r\n\t\tpos += 4;\r\n\t}\r\n\r\n\tpublic function addDouble(v:Float):Void {\r\n\t\tif (pos + 8 > size)\r\n\t\t\tgrow(8);\r\n\t\tview.setFloat64(pos, v, true);\r\n\t\tpos += 8;\r\n\t}\r\n\r\n\tpublic function addBytes(src:Bytes, pos:Int, len:Int):Void {\r\n\t\tif (pos < 0 || len < 0 || pos + len > src.length)\r\n\t\t\tthrow Error.OutsideBounds;\r\n\t\tif (this.pos + len > size)\r\n\t\t\tgrow(len);\r\n\t\tif (size == 0)\r\n\t\t\treturn;\r\n\t\tvar sub = new js.lib.Uint8Array(@:privateAccess src.b.buffer, @:privateAccess src.b.byteOffset + pos, len);\r\n\t\tu8.set(sub, this.pos);\r\n\t\tthis.pos += len;\r\n\t}\r\n\r\n\tfunction grow(delta:Int):Void {\r\n\t\tvar req = pos + delta;\r\n\t\tvar nsize = size == 0 ? 16 : size;\r\n\t\twhile (nsize < req)\r\n\t\t\tnsize = (nsize * 3) >> 1;\r\n\t\tvar nbuf = new js.lib.ArrayBuffer(nsize);\r\n\t\tvar nu8 = new js.lib.Uint8Array(nbuf);\r\n\t\tif (size > 0)\r\n\t\t\tnu8.set(u8);\r\n\t\tsize = nsize;\r\n\t\tbuffer = nbuf;\r\n\t\tu8 = nu8;\r\n\t\tview = new js.lib.DataView(buffer);\r\n\t}\r\n\r\n\tpublic function getBytes():Bytes@:privateAccess {\r\n\t\tif (size == 0)\r\n\t\t\treturn haxe.io.Bytes.alloc(0);\r\n\t\tvar b = new Bytes(buffer);\r\n\t\tb.length = pos;\r\n\t\treturn b;\r\n\t}\r\n}\r\n","/*\r\n * Copyright (C)2005-2019 Haxe Foundation\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a\r\n * copy of this software and associated documentation files (the \"Software\"),\r\n * to deal in the Software without restriction, including without limitation\r\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\r\n * and/or sell copies of the Software, and to permit persons to whom the\r\n * Software is furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\r\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\r\n * DEALINGS IN THE SOFTWARE.\r\n */\r\n\r\npackage haxe.io;\r\n\r\nclass BytesInput extends Input {\r\n\tvar b:#if js js.lib.Uint8Array #elseif hl hl.Bytes #else BytesData #end;\r\n\t#if !flash\r\n\tvar pos:Int;\r\n\tvar len:Int;\r\n\tvar totlen:Int;\r\n\t#end\r\n\r\n\t/** The current position in the stream in bytes. */\r\n\tpublic var position(get, set):Int;\r\n\r\n\t/** The length of the stream in bytes. */\r\n\tpublic var length(get, never):Int;\r\n\r\n\tpublic function new(b:Bytes, ?pos:Int, ?len:Int) {\r\n\t\tif (pos == null)\r\n\t\t\tpos = 0;\r\n\t\tif (len == null)\r\n\t\t\tlen = b.length - pos;\r\n\t\tif (pos < 0 || len < 0 || pos + len > b.length)\r\n\t\t\tthrow Error.OutsideBounds;\r\n\t\t#if flash\r\n\t\tvar ba = b.getData();\r\n\t\tba.position = pos;\r\n\t\tif (len != ba.bytesAvailable) {\r\n\t\t\t// truncate\r\n\t\t\tthis.b = new flash.utils.ByteArray();\r\n\t\t\tba.readBytes(this.b, 0, len);\r\n\t\t} else\r\n\t\t\tthis.b = ba;\r\n\t\tthis.b.endian = flash.utils.Endian.LITTLE_ENDIAN;\r\n\t\t#else\r\n\t\tthis.b = #if (js || hl) @:privateAccess b.b #else b.getData() #end;\r\n\t\tthis.pos = pos;\r\n\t\tthis.len = len;\r\n\t\tthis.totlen = len;\r\n\t\t#end\r\n\t\t#if python\r\n\t\tbigEndian = false;\r\n\t\t#end\r\n\t}\r\n\r\n\tinline function get_position():Int {\r\n\t\t#if flash\r\n\t\treturn b.position;\r\n\t\t#else\r\n\t\treturn pos;\r\n\t\t#end\r\n\t}\r\n\r\n\tinline function get_length():Int {\r\n\t\t#if flash\r\n\t\treturn b.length;\r\n\t\t#else\r\n\t\treturn totlen;\r\n\t\t#end\r\n\t}\r\n\r\n\tfunction set_position(p:Int):Int {\r\n\t\tif (p < 0)\r\n\t\t\tp = 0;\r\n\t\telse if (p > length)\r\n\t\t\tp = length;\r\n\t\t#if flash\r\n\t\treturn b.position = p;\r\n\t\t#else\r\n\t\tlen = totlen - p;\r\n\t\treturn pos = p;\r\n\t\t#end\r\n\t}\r\n\r\n\tpublic override function readByte():Int {\r\n\t\t#if flash\r\n\t\treturn try b.readUnsignedByte() catch (e:Dynamic) throw new Eof();\r\n\t\t#else\r\n\t\tif (this.len == 0)\r\n\t\t\tthrow new Eof();\r\n\t\tlen--;\r\n\t\t#if neko\r\n\t\treturn untyped __dollar__sget(b, pos++);\r\n\t\t#elseif cpp\r\n\t\treturn untyped b[pos++];\r\n\t\t#elseif java\r\n\t\treturn untyped b[pos++] & 0xFF;\r\n\t\t#elseif python // dodge https://github.com/HaxeFoundation/haxe/issues/5080\r\n\t\tvar b = b[pos];\r\n\t\tpos++;\r\n\t\treturn b;\r\n\t\t#else\r\n\t\treturn b[pos++];\r\n\t\t#end\r\n\t\t#end\r\n\t}\r\n\r\n\tpublic override function readBytes(buf:Bytes, pos:Int, len:Int):Int {\r\n\t\t#if !neko\r\n\t\tif (pos < 0 || len < 0 || pos + len > buf.length)\r\n\t\t\tthrow Error.OutsideBounds;\r\n\t\t#end\r\n\t\t#if flash\r\n\t\tvar avail:Int = b.bytesAvailable;\r\n\t\tif (len > avail && avail > 0)\r\n\t\t\tlen = avail;\r\n\t\ttry\r\n\t\t\tb.readBytes(buf.getData(), pos, len)\r\n\t\tcatch (e:Dynamic)\r\n\t\t\tthrow new Eof();\r\n\t\t#elseif java\r\n\t\tvar avail:Int = this.len;\r\n\t\tif (len > avail)\r\n\t\t\tlen = avail;\r\n\t\tif (len == 0)\r\n\t\t\tthrow new Eof();\r\n\t\tjava.lang.System.arraycopy(this.b, this.pos, buf.getData(), pos, len);\r\n\t\tthis.pos += len;\r\n\t\tthis.len -= len;\r\n\t\t#elseif cs\r\n\t\tvar avail:Int = this.len;\r\n\t\tif (len > avail)\r\n\t\t\tlen = avail;\r\n\t\tif (len == 0)\r\n\t\t\tthrow new Eof();\r\n\t\tcs.system.Array.Copy(this.b, this.pos, buf.getData(), pos, len);\r\n\t\tthis.pos += len;\r\n\t\tthis.len -= len;\r\n\t\t#else\r\n\t\tif (this.len == 0 && len > 0)\r\n\t\t\tthrow new Eof();\r\n\t\tif (this.len < len)\r\n\t\t\tlen = this.len;\r\n\t\t#if neko\r\n\t\ttry\r\n\t\t\tuntyped __dollar__sblit(buf.getData(), pos, b, this.pos, len)\r\n\t\tcatch (e:Dynamic)\r\n\t\t\tthrow Error.OutsideBounds;\r\n\t\t#elseif hl\r\n\t\t@:privateAccess buf.b.blit(pos, b, this.pos, len);\r\n\t\t#else\r\n\t\tvar b1 = b;\r\n\t\tvar b2 = #if js @:privateAccess buf.b #else buf.getData() #end;\r\n\t\tfor (i in 0...len)\r\n\t\t\tb2[pos + i] = b1[this.pos + i];\r\n\t\t#end\r\n\t\tthis.pos += len;\r\n\t\tthis.len -= len;\r\n\t\t#end\r\n\t\treturn len;\r\n\t}\r\n\r\n\t#if flash\r\n\t@:dox(hide)\r\n\toverride function set_bigEndian(e) {\r\n\t\tbigEndian = e;\r\n\t\tb.endian = e ? flash.utils.Endian.BIG_ENDIAN : flash.utils.Endian.LITTLE_ENDIAN;\r\n\t\treturn e;\r\n\t}\r\n\r\n\t@:dox(hide)\r\n\toverride function readFloat() {\r\n\t\treturn try b.readFloat() catch (e:Dynamic) throw new Eof();\r\n\t}\r\n\r\n\t@:dox(hide)\r\n\toverride function readDouble() {\r\n\t\treturn try b.readDouble() catch (e:Dynamic) throw new Eof();\r\n\t}\r\n\r\n\t@:dox(hide)\r\n\toverride function readInt8() {\r\n\t\treturn try b.readByte() catch (e:Dynamic) throw new Eof();\r\n\t}\r\n\r\n\t@:dox(hide)\r\n\toverride function readInt16() {\r\n\t\treturn try b.readShort() catch (e:Dynamic) throw new Eof();\r\n\t}\r\n\r\n\t@:dox(hide)\r\n\toverride function readUInt16():Int {\r\n\t\treturn try b.readUnsignedShort() catch (e:Dynamic) throw new Eof();\r\n\t}\r\n\r\n\t@:dox(hide)\r\n\toverride function readInt32():Int {\r\n\t\treturn try b.readInt() catch (e:Dynamic) throw new Eof();\r\n\t}\r\n\r\n\t@:dox(hide)\r\n\toverride function readString(len:Int, ?encoding:Encoding) {\r\n\t\treturn try encoding == RawNative ? b.readMultiByte(len, \"unicode\") : b.readUTFBytes(len) catch (e:Dynamic) throw new Eof();\r\n\t}\r\n\t#end\r\n}\r\n","/*\r\n * Copyright (C)2005-2019 Haxe Foundation\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a\r\n * copy of this software and associated documentation files (the \"Software\"),\r\n * to deal in the Software without restriction, including without limitation\r\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\r\n * and/or sell copies of the Software, and to permit persons to whom the\r\n * Software is furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\r\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\r\n * DEALINGS IN THE SOFTWARE.\r\n */\r\n\r\npackage haxe.io;\r\n\r\n/**\r\n\tAn Output is an abstract write. A specific output implementation will only\r\n\thave to override the `writeByte` and maybe the `write`, `flush` and `close`\r\n\tmethods. See `File.write` and `String.write` for two ways of creating an\r\n\tOutput.\r\n**/\r\nclass Output {\r\n\t/**\r\n\t\tEndianness (word byte order) used when writing numbers.\r\n\r\n\t\tIf `true`, big-endian is used, otherwise `little-endian` is used.\r\n\t**/\r\n\tpublic var bigEndian(default, set):Bool;\r\n\r\n\t#if java\r\n\tprivate var helper:java.nio.ByteBuffer;\r\n\t#end\r\n\r\n\t/**\r\n\t\tWrite one byte.\r\n\t**/\r\n\tpublic function writeByte(c:Int):Void {\r\n\t\tthrow \"Not implemented\";\r\n\t}\r\n\r\n\t/**\r\n\t\tWrite `len` bytes from `s` starting by position specified by `pos`.\r\n\r\n\t\tReturns the actual length of written data that can differ from `len`.\r\n\r\n\t\tSee `writeFullBytes` that tries to write the exact amount of specified bytes.\r\n\t**/\r\n\tpublic function writeBytes(s:Bytes, pos:Int, len:Int):Int {\r\n\t\t#if !neko\r\n\t\tif (pos < 0 || len < 0 || pos + len > s.length)\r\n\t\t\tthrow Error.OutsideBounds;\r\n\t\t#end\r\n\t\tvar b = #if js @:privateAccess s.b #else s.getData() #end;\r\n\t\tvar k = len;\r\n\t\twhile (k > 0) {\r\n\t\t\t#if neko\r\n\t\t\twriteByte(untyped __dollar__sget(b, pos));\r\n\t\t\t#elseif php\r\n\t\t\twriteByte(b.get(pos));\r\n\t\t\t#elseif cpp\r\n\t\t\twriteByte(untyped b[pos]);\r\n\t\t\t#elseif hl\r\n\t\t\twriteByte(b[pos]);\r\n\t\t\t#else\r\n\t\t\twriteByte(untyped b[pos]);\r\n\t\t\t#end\r\n\t\t\tpos++;\r\n\t\t\tk--;\r\n\t\t}\r\n\t\treturn len;\r\n\t}\r\n\r\n\t/**\r\n\t\tFlush any buffered data.\r\n\t**/\r\n\tpublic function flush() {}\r\n\r\n\t/**\r\n\t\tClose the output.\r\n\r\n\t\tBehaviour while writing after calling this method is unspecified.\r\n\t**/\r\n\tpublic function close() {}\r\n\r\n\tfunction set_bigEndian(b) {\r\n\t\tbigEndian = b;\r\n\t\treturn b;\r\n\t}\r\n\r\n\t/* ------------------ API ------------------ */\r\n\t/**\r\n\t\tWrite all bytes stored in `s`.\r\n\t**/\r\n\tpublic function write(s:Bytes):Void {\r\n\t\tvar l = s.length;\r\n\t\tvar p = 0;\r\n\t\twhile (l > 0) {\r\n\t\t\tvar k = writeBytes(s, p, l);\r\n\t\t\tif (k == 0)\r\n\t\t\t\tthrow Error.Blocked;\r\n\t\t\tp += k;\r\n\t\t\tl -= k;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t\tWrite `len` bytes from `s` starting by position specified by `pos`.\r\n\r\n\t\tUnlike `writeBytes`, this method tries to write the exact `len` amount of bytes.\r\n\t**/\r\n\tpublic function writeFullBytes(s:Bytes, pos:Int, len:Int) {\r\n\t\twhile (len > 0) {\r\n\t\t\tvar k = writeBytes(s, pos, len);\r\n\t\t\tpos += k;\r\n\t\t\tlen -= k;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t\tWrite `x` as 32-bit floating point number.\r\n\r\n\t\tEndianness is specified by the `bigEndian` property.\r\n\t**/\r\n\tpublic function writeFloat(x:Float) {\r\n\t\twriteInt32(FPHelper.floatToI32(x));\r\n\t}\r\n\r\n\t/**\r\n\t\tWrite `x` as 64-bit double-precision floating point number.\r\n\r\n\t\tEndianness is specified by the `bigEndian` property.\r\n\t**/\r\n\tpublic function writeDouble(x:Float) {\r\n\t\tvar i64 = FPHelper.doubleToI64(x);\r\n\t\tif (bigEndian) {\r\n\t\t\twriteInt32(i64.high);\r\n\t\t\twriteInt32(i64.low);\r\n\t\t} else {\r\n\t\t\twriteInt32(i64.low);\r\n\t\t\twriteInt32(i64.high);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t\tWrite `x` as 8-bit signed integer.\r\n\t**/\r\n\tpublic function writeInt8(x:Int) {\r\n\t\tif (x < -0x80 || x >= 0x80)\r\n\t\t\tthrow Error.Overflow;\r\n\t\twriteByte(x & 0xFF);\r\n\t}\r\n\r\n\t/**\r\n\t\tWrite `x` as 16-bit signed integer.\r\n\r\n\t\tEndianness is specified by the `bigEndian` property.\r\n\t**/\r\n\tpublic function writeInt16(x:Int) {\r\n\t\tif (x < -0x8000 || x >= 0x8000)\r\n\t\t\tthrow Error.Overflow;\r\n\t\twriteUInt16(x & 0xFFFF);\r\n\t}\r\n\r\n\t/**\r\n\t\tWrite `x` as 16-bit unsigned integer.\r\n\r\n\t\tEndianness is specified by the `bigEndian` property.\r\n\t**/\r\n\tpublic function writeUInt16(x:Int) {\r\n\t\tif (x < 0 || x >= 0x10000)\r\n\t\t\tthrow Error.Overflow;\r\n\t\tif (bigEndian) {\r\n\t\t\twriteByte(x >> 8);\r\n\t\t\twriteByte(x & 0xFF);\r\n\t\t} else {\r\n\t\t\twriteByte(x & 0xFF);\r\n\t\t\twriteByte(x >> 8);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t\tWrite `x` as 24-bit signed integer.\r\n\r\n\t\tEndianness is specified by the `bigEndian` property.\r\n\t**/\r\n\tpublic function writeInt24(x:Int) {\r\n\t\tif (x < -0x800000 || x >= 0x800000)\r\n\t\t\tthrow Error.Overflow;\r\n\t\twriteUInt24(x & 0xFFFFFF);\r\n\t}\r\n\r\n\t/**\r\n\t\tWrite `x` as 24-bit unsigned integer.\r\n\r\n\t\tEndianness is specified by the `bigEndian` property.\r\n\t**/\r\n\tpublic function writeUInt24(x:Int) {\r\n\t\tif (x < 0 || x >= 0x1000000)\r\n\t\t\tthrow Error.Overflow;\r\n\t\tif (bigEndian) {\r\n\t\t\twriteByte(x >> 16);\r\n\t\t\twriteByte((x >> 8) & 0xFF);\r\n\t\t\twriteByte(x & 0xFF);\r\n\t\t} else {\r\n\t\t\twriteByte(x & 0xFF);\r\n\t\t\twriteByte((x >> 8) & 0xFF);\r\n\t\t\twriteByte(x >> 16);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t\tWrite `x` as 32-bit signed integer.\r\n\r\n\t\tEndianness is specified by the `bigEndian` property.\r\n\t**/\r\n\tpublic function writeInt32(x:Int) {\r\n\t\tif (bigEndian) {\r\n\t\t\twriteByte(x >>> 24);\r\n\t\t\twriteByte((x >> 16) & 0xFF);\r\n\t\t\twriteByte((x >> 8) & 0xFF);\r\n\t\t\twriteByte(x & 0xFF);\r\n\t\t} else {\r\n\t\t\twriteByte(x & 0xFF);\r\n\t\t\twriteByte((x >> 8) & 0xFF);\r\n\t\t\twriteByte((x >> 16) & 0xFF);\r\n\t\t\twriteByte(x >>> 24);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t\tInform that we are about to write at least `nbytes` bytes.\r\n\r\n\t\tThe underlying implementation can allocate proper working space depending\r\n\t\ton this information, or simply ignore it. This is not a mandatory call\r\n\t\tbut a tip and is only used in some specific cases.\r\n\t**/\r\n\tpublic function prepare(nbytes:Int) {}\r\n\r\n\t/**\r\n\t\tRead all available data from `i` and write it.\r\n\r\n\t\tThe `bufsize` optional argument specifies the size of chunks by\r\n\t\twhich data is read and written. Its default value is 4096.\r\n\t**/\r\n\tpublic function writeInput(i:Input, ?bufsize:Int) {\r\n\t\tif (bufsize == null)\r\n\t\t\tbufsize = 4096;\r\n\t\tvar buf = Bytes.alloc(bufsize);\r\n\t\ttry {\r\n\t\t\twhile (true) {\r\n\t\t\t\tvar len = i.readBytes(buf, 0, bufsize);\r\n\t\t\t\tif (len == 0)\r\n\t\t\t\t\tthrow Error.Blocked;\r\n\t\t\t\tvar p = 0;\r\n\t\t\t\twhile (len > 0) {\r\n\t\t\t\t\tvar k = writeBytes(buf, p, len);\r\n\t\t\t\t\tif (k == 0)\r\n\t\t\t\t\t\tthrow Error.Blocked;\r\n\t\t\t\t\tp += k;\r\n\t\t\t\t\tlen -= k;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} catch (e:Eof) {}\r\n\t}\r\n\r\n\t/**\r\n\t\tWrite `s` string.\r\n\t**/\r\n\tpublic function writeString(s:String, ?encoding:Encoding) {\r\n\t\t#if neko\r\n\t\tvar b = untyped new Bytes(s.length, s.__s);\r\n\t\t#else\r\n\t\tvar b = Bytes.ofString(s, encoding);\r\n\t\t#end\r\n\t\twriteFullBytes(b, 0, b.length);\r\n\t}\r\n\r\n\t#if neko\r\n\tstatic function __init__()\r\n\t\tuntyped {\r\n\t\t\tOutput.prototype.bigEndian = false;\r\n\t\t}\r\n\t#end\r\n}\r\n","/*\r\n * Copyright (C)2005-2019 Haxe Foundation\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a\r\n * copy of this software and associated documentation files (the \"Software\"),\r\n * to deal in the Software without restriction, including without limitation\r\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\r\n * and/or sell copies of the Software, and to permit persons to whom the\r\n * Software is furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\r\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\r\n * DEALINGS IN THE SOFTWARE.\r\n */\r\n\r\npackage haxe.io;\r\n\r\nclass BytesOutput extends Output {\r\n\t#if flash\r\n\tvar b:flash.utils.ByteArray;\r\n\t#else\r\n\tvar b:BytesBuffer;\r\n\t#end\r\n\r\n\t/** The length of the stream in bytes. **/\r\n\tpublic var length(get, never):Int;\r\n\r\n\tpublic function new() {\r\n\t\t#if flash\r\n\t\tb = new flash.utils.ByteArray();\r\n\t\tb.endian = flash.utils.Endian.LITTLE_ENDIAN;\r\n\t\t#else\r\n\t\tb = new BytesBuffer();\r\n\t\t#end\r\n\t\t#if python\r\n\t\tbigEndian = false;\r\n\t\t#end\r\n\t}\r\n\r\n\tinline function get_length():Int {\r\n\t\treturn b.length;\r\n\t}\r\n\r\n\toverride function writeByte(c) {\r\n\t\t#if flash\r\n\t\tb.writeByte(c);\r\n\t\t#else\r\n\t\tb.addByte(c);\r\n\t\t#end\r\n\t}\r\n\r\n\toverride function writeBytes(buf:Bytes, pos, len):Int {\r\n\t\t#if flash\r\n\t\tif (pos < 0 || len < 0 || pos + len > buf.length)\r\n\t\t\tthrow Error.OutsideBounds;\r\n\t\tb.writeBytes(buf.getData(), pos, len);\r\n\t\t#else\r\n\t\tb.addBytes(buf, pos, len);\r\n\t\t#end\r\n\t\treturn len;\r\n\t}\r\n\r\n\t#if flash\r\n\t// optimized operations\r\n\r\n\t@:dox(hide)\r\n\toverride function set_bigEndian(e) {\r\n\t\tbigEndian = e;\r\n\t\tb.endian = e ? flash.utils.Endian.BIG_ENDIAN : flash.utils.Endian.LITTLE_ENDIAN;\r\n\t\treturn e;\r\n\t}\r\n\r\n\t@:dox(hide)\r\n\toverride function writeFloat(f:Float) {\r\n\t\tb.writeFloat(f);\r\n\t}\r\n\r\n\t@:dox(hide)\r\n\toverride function writeDouble(f:Float) {\r\n\t\tb.writeDouble(f);\r\n\t}\r\n\r\n\t@:dox(hide)\r\n\toverride function writeInt8(x:Int) {\r\n\t\tif (x < -0x80 || x >= 0x80)\r\n\t\t\tthrow Error.Overflow;\r\n\t\tb.writeByte(x);\r\n\t}\r\n\r\n\t@:dox(hide)\r\n\toverride function writeInt16(x:Int) {\r\n\t\tif (x < -0x8000 || x >= 0x8000)\r\n\t\t\tthrow Error.Overflow;\r\n\t\tb.writeShort(x);\r\n\t}\r\n\r\n\t@:dox(hide)\r\n\toverride function writeUInt16(x:Int) {\r\n\t\tif (x < 0 || x >= 0x10000)\r\n\t\t\tthrow Error.Overflow;\r\n\t\tb.writeShort(x);\r\n\t}\r\n\r\n\t@:dox(hide)\r\n\toverride function writeInt32(x:Int) {\r\n\t\tb.writeInt(x);\r\n\t}\r\n\r\n\t@:dox(hide)\r\n\toverride function prepare(size:Int) {\r\n\t\tif (size > 0)\r\n\t\t\tb[size - 1] = b[size - 1];\r\n\t}\r\n\r\n\t@:dox(hide)\r\n\toverride function writeString(s:String, ?encoding:Encoding) {\r\n\t\tif (encoding == RawNative)\r\n\t\t\tb.writeMultiByte(s, \"unicode\");\r\n\t\telse\r\n\t\t\tb.writeUTFBytes(s);\r\n\t}\r\n\t#end\r\n\r\n\t/**\r\n\t\tReturns the `Bytes` of this output.\r\n\r\n\t\tThis function should not be called more than once on a given\r\n\t\t`BytesOutput` instance.\r\n\t**/\r\n\tpublic function getBytes():Bytes {\r\n\t\t#if flash\r\n\t\tvar bytes = b;\r\n\t\tb = null;\r\n\t\treturn untyped new Bytes(bytes.length, bytes);\r\n\t\t#else\r\n\t\treturn b.getBytes();\r\n\t\t#end\r\n\t}\r\n}\r\n","/*\r\n * Copyright (C)2005-2019 Haxe Foundation\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a\r\n * copy of this software and associated documentation files (the \"Software\"),\r\n * to deal in the Software without restriction, including without limitation\r\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\r\n * and/or sell copies of the Software, and to permit persons to whom the\r\n * Software is furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\r\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\r\n * DEALINGS IN THE SOFTWARE.\r\n */\r\n\r\npackage haxe.io;\r\n\r\n/**\r\n\tThis exception is raised when reading while data is no longer available in the `haxe.io.Input`.\r\n**/\r\nclass Eof {\r\n\tpublic function new() {}\r\n\r\n\t@:ifFeature(\"haxe.io.Eof.*\")\r\n\tfunction toString() {\r\n\t\treturn \"Eof\";\r\n\t}\r\n}\r\n","/*\r\n * Copyright (C)2005-2019 Haxe Foundation\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a\r\n * copy of this software and associated documentation files (the \"Software\"),\r\n * to deal in the Software without restriction, including without limitation\r\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\r\n * and/or sell copies of the Software, and to permit persons to whom the\r\n * Software is furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\r\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\r\n * DEALINGS IN THE SOFTWARE.\r\n */\r\n\r\npackage haxe.io;\r\n\r\ntypedef UInt8ArrayData = js.lib.Uint8Array;\r\n\r\n@:coreApi\r\nabstract UInt8Array(UInt8ArrayData) {\r\n\tpublic static inline var BYTES_PER_ELEMENT = 1;\r\n\r\n\tpublic var length(get, never):Int;\r\n\tpublic var view(get, never):ArrayBufferView;\r\n\r\n\tpublic inline function new(elements:Int) {\r\n\t\tthis = new UInt8ArrayData(elements);\r\n\t}\r\n\r\n\tinline function get_length():Int {\r\n\t\treturn this.length;\r\n\t}\r\n\r\n\tpublic inline function get_view():ArrayBufferView {\r\n\t\treturn ArrayBufferView.fromData(this);\r\n\t}\r\n\r\n\t@:arrayAccess public inline function get(index:Int):Int {\r\n\t\treturn this[index];\r\n\t}\r\n\r\n\t@:arrayAccess public inline function set(index:Int, value:Int):Int {\r\n\t\treturn this[index] = value;\r\n\t}\r\n\r\n\tpublic inline function sub(begin:Int, ?length:Int):UInt8Array {\r\n\t\treturn fromData(this.subarray(begin, length == null ? this.length : begin + length));\r\n\t}\r\n\r\n\tpublic inline function subarray(?begin:Int, ?end:Int):UInt8Array {\r\n\t\treturn fromData(this.subarray(begin, end));\r\n\t}\r\n\r\n\tpublic inline function getData():UInt8ArrayData {\r\n\t\treturn this;\r\n\t}\r\n\r\n\tpublic static inline function fromData(d:UInt8ArrayData):UInt8Array {\r\n\t\treturn cast d;\r\n\t}\r\n\r\n\tpublic static function fromArray(a:Array<Int>, pos:Int = 0, ?length:Int):UInt8Array {\r\n\t\tif (length == null)\r\n\t\t\tlength = a.length - pos;\r\n\t\tif (pos < 0 || length < 0 || pos + length > a.length)\r\n\t\t\tthrow Error.OutsideBounds;\r\n\t\tif (pos == 0 && length == a.length)\r\n\t\t\treturn fromData(new UInt8ArrayData(a));\r\n\t\tvar i = new UInt8Array(a.length);\r\n\t\tfor (idx in 0...length)\r\n\t\t\ti[idx] = a[idx + pos];\r\n\t\treturn i;\r\n\t}\r\n\r\n\tpublic static function fromBytes(bytes:haxe.io.Bytes, bytePos:Int = 0, ?length:Int):UInt8Array {\r\n\t\tif (length == null)\r\n\t\t\tlength = bytes.length - bytePos;\r\n\t\treturn fromData(new UInt8ArrayData(bytes.getData(), bytePos, length));\r\n\t}\r\n}\r\n","/*\r\n * Copyright (C)2005-2019 Haxe Foundation\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a\r\n * copy of this software and associated documentation files (the \"Software\"),\r\n * to deal in the Software without restriction, including without limitation\r\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\r\n * and/or sell copies of the Software, and to permit persons to whom the\r\n * Software is furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\r\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\r\n * DEALINGS IN THE SOFTWARE.\r\n */\r\n\r\npackage haxe.xml;\r\n\r\nprivate abstract NodeAccess(Xml) from Xml {\r\n\t@:op(a.b)\r\n\tpublic function resolve(name:String):Access {\r\n\t\tvar x = this.elementsNamed(name).next();\r\n\t\tif (x == null) {\r\n\t\t\tvar xname = if (this.nodeType == Xml.Document) \"Document\" else this.nodeName;\r\n\t\t\tthrow xname + \" is missing element \" + name;\r\n\t\t}\r\n\t\treturn new Access(x);\r\n\t}\r\n}\r\n\r\nprivate abstract AttribAccess(Xml) from Xml {\r\n\t@:op(a.b)\r\n\tpublic function resolve(name:String):String {\r\n\t\tif (this.nodeType == Xml.Document)\r\n\t\t\tthrow \"Cannot access document attribute \" + name;\r\n\t\tvar v = this.get(name);\r\n\t\tif (v == null)\r\n\t\t\tthrow this.nodeName + \" is missing attribute \" + name;\r\n\t\treturn v;\r\n\t}\r\n\r\n\t@:op(a.b)\r\n\tfunction _hx_set(name:String, value:String):String {\r\n\t\tif (this.nodeType == Xml.Document)\r\n\t\t\tthrow \"Cannot access document attribute \" + name;\r\n\t\tthis.set(name, value);\r\n\t\treturn value;\r\n\t}\r\n}\r\n\r\nprivate abstract HasAttribAccess(Xml) from Xml {\r\n\t@:op(a.b)\r\n\tpublic function resolve(name:String):Bool {\r\n\t\tif (this.nodeType == Xml.Document)\r\n\t\t\tthrow \"Cannot access document attribute \" + name;\r\n\t\treturn this.exists(name);\r\n\t}\r\n}\r\n\r\nprivate abstract HasNodeAccess(Xml) from Xml {\r\n\t@:op(a.b)\r\n\tpublic function resolve(name:String):Bool {\r\n\t\treturn this.elementsNamed(name).hasNext();\r\n\t}\r\n}\r\n\r\nprivate abstract NodeListAccess(Xml) from Xml {\r\n\t@:op(a.b)\r\n\tpublic function resolve(name:String):Array<Access> {\r\n\t\tvar l = [];\r\n\t\tfor (x in this.elementsNamed(name))\r\n\t\t\tl.push(new Access(x));\r\n\t\treturn l;\r\n\t}\r\n}\r\n\r\n/**\r\n\tThe `haxe.xml.Access` API helps providing a fast dot-syntax access to the\r\n\tmost common `Xml` methods.\r\n**/\r\nabstract Access(Xml) {\r\n\tpublic var x(get, never):Xml;\r\n\r\n\tpublic inline function get_x()\r\n\t\treturn this;\r\n\r\n\t/**\r\n\t\tThe name of the current element. This is the same as `Xml.nodeName`.\r\n\t**/\r\n\tpublic var name(get, never):String;\r\n\r\n\tinline function get_name() {\r\n\t\treturn if (this.nodeType == Xml.Document) \"Document\" else this.nodeName;\r\n\t}\r\n\r\n\t/**\r\n\t\tThe inner PCDATA or CDATA of the node.\r\n\r\n\t\tAn exception is thrown if there is no data or if there not only data\r\n\t\tbut also other nodes.\r\n\t**/\r\n\tpublic var innerData(get, never):String;\r\n\r\n\t/**\r\n\t\tThe XML string built with all the sub nodes, excluding the current one.\r\n\t**/\r\n\tpublic var innerHTML(get, never):String;\r\n\r\n\t/**\r\n\t\tAccess to the first sub element with the given name.\r\n\r\n\t\tAn exception is thrown if the element doesn't exists.\r\n\t\tUse `hasNode` to check the existence of a node.\r\n\r\n\t\t```haxe\r\n\t\tvar access = new haxe.xml.Access(Xml.parse(\"<user><name>John</name></user>\"));\r\n\t\tvar user = access.node.user;\r\n\t\tvar name = user.node.name;\r\n\t\ttrace(name.innerData); // John\r\n\r\n\t\t// Uncaught Error: Document is missing element password\r\n\t\tvar password = user.node.password;\r\n\t\t```\r\n\t**/\r\n\tpublic var node(get, never):NodeAccess;\r\n\r\n\tinline function get_node():NodeAccess\r\n\t\treturn x;\r\n\r\n\t/**\r\n\t\tAccess to the List of elements with the given name.\r\n\t\t```haxe\r\n\t\tvar fast = new haxe.xml.Access(Xml.parse(\"\r\n\t\t\t<users>\r\n\t\t\t\t<user name='John'/>\r\n\t\t\t\t<user name='Andy'/>\r\n\t\t\t\t<user name='Dan'/>\r\n\t\t\t</users>\"\r\n\t\t));\r\n\r\n\t\tvar users = fast.node.users;\r\n\t\tfor (user in users.nodes.user) {\r\n\t\t\ttrace(user.att.name);\r\n\t\t}\r\n\t\t```\r\n\t**/\r\n\tpublic var nodes(get, never):NodeListAccess;\r\n\r\n\tinline function get_nodes():NodeListAccess\r\n\t\treturn this;\r\n\r\n\t/**\r\n\t\tAccess to a given attribute.\r\n\r\n\t\tAn exception is thrown if the attribute doesn't exists.\r\n\t\tUse `has` to check the existence of an attribute.\r\n\r\n\t\t```haxe\r\n\t\tvar f = new haxe.xml.Access(Xml.parse(\"<user name='Mark'></user>\"));\r\n\t\tvar user = f.node.user;\r\n\t\tif (user.has.name) {\r\n\t\t\ttrace(user.att.name); // Mark\r\n\t\t}\r\n\t\t```\r\n\t**/\r\n\tpublic var att(get, never):AttribAccess;\r\n\r\n\tinline function get_att():AttribAccess\r\n\t\treturn this;\r\n\r\n\t/**\r\n\t\tCheck the existence of an attribute with the given name.\r\n\t**/\r\n\tpublic var has(get, never):HasAttribAccess;\r\n\r\n\tinline function get_has():HasAttribAccess\r\n\t\treturn this;\r\n\r\n\t/**\r\n\t\tCheck the existence of a sub node with the given name.\r\n\r\n\t\t```haxe\r\n\t\tvar f = new haxe.xml.Access(Xml.parse(\"<user><age>31</age></user>\"));\r\n\t\tvar user = f.node.user;\r\n\t\tif (user.hasNode.age) {\r\n\t\t\ttrace(user.node.age.innerData); // 31\r\n\t\t}\r\n\t\t```\r\n\t**/\r\n\tpublic var hasNode(get, never):HasNodeAccess;\r\n\r\n\tinline function get_hasNode():HasNodeAccess\r\n\t\treturn x;\r\n\r\n\t/**\r\n\t\tThe list of all sub-elements which are the nodes with type `Xml.Element`.\r\n\t**/\r\n\tpublic var elements(get, never):Iterator<Access>;\r\n\r\n\tinline function get_elements():Iterator<Access>\r\n\t\treturn cast this.elements();\r\n\r\n\tpublic inline function new(x:Xml) {\r\n\t\tif (x.nodeType != Xml.Document && x.nodeType != Xml.Element)\r\n\t\t\tthrow \"Invalid nodeType \" + x.nodeType;\r\n\t\tthis = x;\r\n\t}\r\n\r\n\tfunction get_innerData() {\r\n\t\tvar it = this.iterator();\r\n\t\tif (!it.hasNext())\r\n\t\t\tthrow name + \" does not have data\";\r\n\t\tvar v = it.next();\r\n\t\tif (it.hasNext()) {\r\n\t\t\tvar n = it.next();\r\n\t\t\t// handle <spaces>CDATA<spaces>\r\n\t\t\tif (v.nodeType == Xml.PCData && n.nodeType == Xml.CData && StringTools.trim(v.nodeValue) == \"\") {\r\n\t\t\t\tif (!it.hasNext())\r\n\t\t\t\t\treturn n.nodeValue;\r\n\t\t\t\tvar n2 = it.next();\r\n\t\t\t\tif (n2.nodeType == Xml.PCData && StringTools.trim(n2.nodeValue) == \"\" && !it.hasNext())\r\n\t\t\t\t\treturn n.nodeValue;\r\n\t\t\t}\r\n\t\t\tthrow name + \" does not only have data\";\r\n\t\t}\r\n\t\tif (v.nodeType != Xml.PCData && v.nodeType != Xml.CData)\r\n\t\t\tthrow name + \" does not have data\";\r\n\t\treturn v.nodeValue;\r\n\t}\r\n\r\n\tfunction get_innerHTML() {\r\n\t\tvar s = new StringBuf();\r\n\t\tfor (x in this)\r\n\t\t\ts.add(x.toString());\r\n\t\treturn s.toString();\r\n\t}\r\n}\r\n","/*\r\n * Copyright (C)2005-2019 Haxe Foundation\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a\r\n * copy of this software and associated documentation files (the \"Software\"),\r\n * to deal in the Software without restriction, including without limitation\r\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\r\n * and/or sell copies of the Software, and to permit persons to whom the\r\n * Software is furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\r\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\r\n * DEALINGS IN THE SOFTWARE.\r\n */\r\n\r\npackage haxe.xml;\r\n\r\nusing StringTools;\r\n\r\nprivate enum abstract S(Int) {\r\n\tvar IGNORE_SPACES;\r\n\tvar BEGIN;\r\n\tvar BEGIN_NODE;\r\n\tvar TAG_NAME;\r\n\tvar BODY;\r\n\tvar ATTRIB_NAME;\r\n\tvar EQUALS;\r\n\tvar ATTVAL_BEGIN;\r\n\tvar ATTRIB_VAL;\r\n\tvar CHILDS;\r\n\tvar CLOSE;\r\n\tvar WAIT_END;\r\n\tvar WAIT_END_RET;\r\n\tvar PCDATA;\r\n\tvar HEADER;\r\n\tvar COMMENT;\r\n\tvar DOCTYPE;\r\n\tvar CDATA;\r\n\tvar ESCAPE;\r\n}\r\n\r\nclass XmlParserException {\r\n\t/**\r\n\t\tthe XML parsing error message\r\n\t**/\r\n\tpublic var message:String;\r\n\r\n\t/**\r\n\t\tthe line number at which the XML parsing error occurred\r\n\t**/\r\n\tpublic var lineNumber:Int;\r\n\r\n\t/**\r\n\t\tthe character position in the reported line at which the parsing error occurred\r\n\t**/\r\n\tpublic var positionAtLine:Int;\r\n\r\n\t/**\r\n\t\tthe character position in the XML string at which the parsing error occurred\r\n\t**/\r\n\tpublic var position:Int;\r\n\r\n\t/**\r\n\t\tthe invalid XML string\r\n\t**/\r\n\tpublic var xml:String;\r\n\r\n\tpublic function new(message:String, xml:String, position:Int) {\r\n\t\tthis.xml = xml;\r\n\t\tthis.message = message;\r\n\t\tthis.position = position;\r\n\t\tlineNumber = 1;\r\n\t\tpositionAtLine = 0;\r\n\r\n\t\tfor (i in 0...position) {\r\n\t\t\tvar c = xml.fastCodeAt(i);\r\n\t\t\tif (c == '\\n'.code) {\r\n\t\t\t\tlineNumber++;\r\n\t\t\t\tpositionAtLine = 0;\r\n\t\t\t} else {\r\n\t\t\t\tif (c != '\\r'.code)\r\n\t\t\t\t\tpositionAtLine++;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tpublic function toString():String {\r\n\t\treturn Type.getClassName(Type.getClass(this)) + \": \" + message + \" at line \" + lineNumber + \" char \" + positionAtLine;\r\n\t}\r\n}\r\n\r\nclass Parser {\r\n\tstatic var escapes = {\r\n\t\tvar h = new haxe.ds.StringMap();\r\n\t\th.set(\"lt\", \"<\");\r\n\t\th.set(\"gt\", \">\");\r\n\t\th.set(\"amp\", \"&\");\r\n\t\th.set(\"quot\", '\"');\r\n\t\th.set(\"apos\", \"'\");\r\n\t\th;\r\n\t}\r\n\r\n\t/**\r\n\t\tParses the String into an XML Document. Set strict parsing to true in order to enable a strict check of XML attributes and entities.\r\n\r\n\t\t@throws haxe.xml.XmlParserException\r\n\t**/\r\n\tstatic public function parse(str:String, strict = false) {\r\n\t\tvar doc = Xml.createDocument();\r\n\t\tdoParse(str, strict, 0, doc);\r\n\t\treturn doc;\r\n\t}\r\n\r\n\tstatic function doParse(str:String, strict:Bool, p:Int = 0, ?parent:Xml):Int {\r\n\t\tvar xml:Xml = null;\r\n\t\tvar state = S.BEGIN;\r\n\t\tvar next = S.BEGIN;\r\n\t\tvar aname = null;\r\n\t\tvar start = 0;\r\n\t\tvar nsubs = 0;\r\n\t\tvar nbrackets = 0;\r\n\t\tvar c = str.fastCodeAt(p);\r\n\t\tvar buf = new StringBuf();\r\n\t\t// need extra state because next is in use\r\n\t\tvar escapeNext = S.BEGIN;\r\n\t\tvar attrValQuote = -1;\r\n\t\tinline function addChild(xml:Xml) {\r\n\t\t\tparent.addChild(xml);\r\n\t\t\tnsubs++;\r\n\t\t}\r\n\t\twhile (!StringTools.isEof(c)) {\r\n\t\t\tswitch (state) {\r\n\t\t\t\tcase S.IGNORE_SPACES:\r\n\t\t\t\t\tswitch (c) {\r\n\t\t\t\t\t\tcase '\\n'.code, '\\r'.code, '\\t'.code, ' '.code:\r\n\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\tstate = next;\r\n\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\t\t\t\tcase S.BEGIN:\r\n\t\t\t\t\tswitch (c) {\r\n\t\t\t\t\t\tcase '<'.code:\r\n\t\t\t\t\t\t\tstate = S.IGNORE_SPACES;\r\n\t\t\t\t\t\t\tnext = S.BEGIN_NODE;\r\n\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\tstart = p;\r\n\t\t\t\t\t\t\tstate = S.PCDATA;\r\n\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\t\t\t\tcase S.PCDATA:\r\n\t\t\t\t\tif (c == '<'.code) {\r\n\t\t\t\t\t\tbuf.addSub(str, start, p - start);\r\n\t\t\t\t\t\tvar child = Xml.createPCData(buf.toString());\r\n\t\t\t\t\t\tbuf = new StringBuf();\r\n\t\t\t\t\t\taddChild(child);\r\n\t\t\t\t\t\tstate = S.IGNORE_SPACES;\r\n\t\t\t\t\t\tnext = S.BEGIN_NODE;\r\n\t\t\t\t\t} else if (c == '&'.code) {\r\n\t\t\t\t\t\tbuf.addSub(str, start, p - start);\r\n\t\t\t\t\t\tstate = S.ESCAPE;\r\n\t\t\t\t\t\tescapeNext = S.PCDATA;\r\n\t\t\t\t\t\tstart = p + 1;\r\n\t\t\t\t\t}\r\n\t\t\t\tcase S.CDATA:\r\n\t\t\t\t\tif (c == ']'.code && str.fastCodeAt(p + 1) == ']'.code && str.fastCodeAt(p + 2) == '>'.code) {\r\n\t\t\t\t\t\tvar child = Xml.createCData(str.substr(start, p - start));\r\n\t\t\t\t\t\taddChild(child);\r\n\t\t\t\t\t\tp += 2;\r\n\t\t\t\t\t\tstate = S.BEGIN;\r\n\t\t\t\t\t}\r\n\t\t\t\tcase S.BEGIN_NODE:\r\n\t\t\t\t\tswitch (c) {\r\n\t\t\t\t\t\tcase '!'.code:\r\n\t\t\t\t\t\t\tif (str.fastCodeAt(p + 1) == '['.code) {\r\n\t\t\t\t\t\t\t\tp += 2;\r\n\t\t\t\t\t\t\t\tif (str.substr(p, 6).toUpperCase() != \"CDATA[\")\r\n\t\t\t\t\t\t\t\t\tthrow new XmlParserException(\"Expected <![CDATA[\", str, p);\r\n\t\t\t\t\t\t\t\tp += 5;\r\n\t\t\t\t\t\t\t\tstate = S.CDATA;\r\n\t\t\t\t\t\t\t\tstart = p + 1;\r\n\t\t\t\t\t\t\t} else if (str.fastCodeAt(p + 1) == 'D'.code || str.fastCodeAt(p + 1) == 'd'.code) {\r\n\t\t\t\t\t\t\t\tif (str.substr(p + 2, 6).toUpperCase() != \"OCTYPE\")\r\n\t\t\t\t\t\t\t\t\tthrow new XmlParserException(\"Expected <!DOCTYPE\", str, p);\r\n\t\t\t\t\t\t\t\tp += 8;\r\n\t\t\t\t\t\t\t\tstate = S.DOCTYPE;\r\n\t\t\t\t\t\t\t\tstart = p + 1;\r\n\t\t\t\t\t\t\t} else if (str.fastCodeAt(p + 1) != '-'.code || str.fastCodeAt(p + 2) != '-'.code)\r\n\t\t\t\t\t\t\t\tthrow new XmlParserException(\"Expected <!--\", str, p);\r\n\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\tp += 2;\r\n\t\t\t\t\t\t\t\tstate = S.COMMENT;\r\n\t\t\t\t\t\t\t\tstart = p + 1;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\tcase '?'.code:\r\n\t\t\t\t\t\t\tstate = S.HEADER;\r\n\t\t\t\t\t\t\tstart = p;\r\n\t\t\t\t\t\tcase '/'.code:\r\n\t\t\t\t\t\t\tif (parent == null)\r\n\t\t\t\t\t\t\t\tthrow new XmlParserException(\"Expected node name\", str, p);\r\n\t\t\t\t\t\t\tstart = p + 1;\r\n\t\t\t\t\t\t\tstate = S.IGNORE_SPACES;\r\n\t\t\t\t\t\t\tnext = S.CLOSE;\r\n\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\tstate = S.TAG_NAME;\r\n\t\t\t\t\t\t\tstart = p;\r\n\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\t\t\t\tcase S.TAG_NAME:\r\n\t\t\t\t\tif (!isValidChar(c)) {\r\n\t\t\t\t\t\tif (p == start)\r\n\t\t\t\t\t\t\tthrow new XmlParserException(\"Expected node name\", str, p);\r\n\t\t\t\t\t\txml = Xml.createElement(str.substr(start, p - start));\r\n\t\t\t\t\t\taddChild(xml);\r\n\t\t\t\t\t\tstate = S.IGNORE_SPACES;\r\n\t\t\t\t\t\tnext = S.BODY;\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\t\t\t\tcase S.BODY:\r\n\t\t\t\t\tswitch (c) {\r\n\t\t\t\t\t\tcase '/'.code:\r\n\t\t\t\t\t\t\tstate = S.WAIT_END;\r\n\t\t\t\t\t\tcase '>'.code:\r\n\t\t\t\t\t\t\tstate = S.CHILDS;\r\n\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\tstate = S.ATTRIB_NAME;\r\n\t\t\t\t\t\t\tstart = p;\r\n\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\t\t\t\tcase S.ATTRIB_NAME:\r\n\t\t\t\t\tif (!isValidChar(c)) {\r\n\t\t\t\t\t\tvar tmp;\r\n\t\t\t\t\t\tif (start == p)\r\n\t\t\t\t\t\t\tthrow new XmlParserException(\"Expected attribute name\", str, p);\r\n\t\t\t\t\t\ttmp = str.substr(start, p - start);\r\n\t\t\t\t\t\taname = tmp;\r\n\t\t\t\t\t\tif (xml.exists(aname))\r\n\t\t\t\t\t\t\tthrow new XmlParserException(\"Duplicate attribute [\" + aname + \"]\", str, p);\r\n\t\t\t\t\t\tstate = S.IGNORE_SPACES;\r\n\t\t\t\t\t\tnext = S.EQUALS;\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\t\t\t\tcase S.EQUALS:\r\n\t\t\t\t\tswitch (c) {\r\n\t\t\t\t\t\tcase '='.code:\r\n\t\t\t\t\t\t\tstate = S.IGNORE_SPACES;\r\n\t\t\t\t\t\t\tnext = S.ATTVAL_BEGIN;\r\n\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\tthrow new XmlParserException(\"Expected =\", str, p);\r\n\t\t\t\t\t}\r\n\t\t\t\tcase S.ATTVAL_BEGIN:\r\n\t\t\t\t\tswitch (c) {\r\n\t\t\t\t\t\tcase '\"'.code | '\\''.code:\r\n\t\t\t\t\t\t\tbuf = new StringBuf();\r\n\t\t\t\t\t\t\tstate = S.ATTRIB_VAL;\r\n\t\t\t\t\t\t\tstart = p + 1;\r\n\t\t\t\t\t\t\tattrValQuote = c;\r\n\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\tthrow new XmlParserException(\"Expected \\\"\", str, p);\r\n\t\t\t\t\t}\r\n\t\t\t\tcase S.ATTRIB_VAL:\r\n\t\t\t\t\tswitch (c) {\r\n\t\t\t\t\t\tcase '&'.code:\r\n\t\t\t\t\t\t\tbuf.addSub(str, start, p - start);\r\n\t\t\t\t\t\t\tstate = S.ESCAPE;\r\n\t\t\t\t\t\t\tescapeNext = S.ATTRIB_VAL;\r\n\t\t\t\t\t\t\tstart = p + 1;\r\n\t\t\t\t\t\tcase '>'.code | '<'.code if (strict):\r\n\t\t\t\t\t\t\t// HTML allows these in attributes values\r\n\t\t\t\t\t\t\tthrow new XmlParserException(\"Invalid unescaped \" + String.fromCharCode(c) + \" in attribute value\", str, p);\r\n\t\t\t\t\t\tcase _ if (c == attrValQuote):\r\n\t\t\t\t\t\t\tbuf.addSub(str, start, p - start);\r\n\t\t\t\t\t\t\tvar val = buf.toString();\r\n\t\t\t\t\t\t\tbuf = new StringBuf();\r\n\t\t\t\t\t\t\txml.set(aname, val);\r\n\t\t\t\t\t\t\tstate = S.IGNORE_SPACES;\r\n\t\t\t\t\t\t\tnext = S.BODY;\r\n\t\t\t\t\t}\r\n\t\t\t\tcase S.CHILDS:\r\n\t\t\t\t\tp = doParse(str, strict, p, xml);\r\n\t\t\t\t\tstart = p;\r\n\t\t\t\t\tstate = S.BEGIN;\r\n\t\t\t\tcase S.WAIT_END:\r\n\t\t\t\t\tswitch (c) {\r\n\t\t\t\t\t\tcase '>'.code:\r\n\t\t\t\t\t\t\tstate = S.BEGIN;\r\n\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\tthrow new XmlParserException(\"Expected >\", str, p);\r\n\t\t\t\t\t}\r\n\t\t\t\tcase S.WAIT_END_RET:\r\n\t\t\t\t\tswitch (c) {\r\n\t\t\t\t\t\tcase '>'.code:\r\n\t\t\t\t\t\t\tif (nsubs == 0)\r\n\t\t\t\t\t\t\t\tparent.addChild(Xml.createPCData(\"\"));\r\n\t\t\t\t\t\t\treturn p;\r\n\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\tthrow new XmlParserException(\"Expected >\", str, p);\r\n\t\t\t\t\t}\r\n\t\t\t\tcase S.CLOSE:\r\n\t\t\t\t\tif (!isValidChar(c)) {\r\n\t\t\t\t\t\tif (start == p)\r\n\t\t\t\t\t\t\tthrow new XmlParserException(\"Expected node name\", str, p);\r\n\r\n\t\t\t\t\t\tvar v = str.substr(start, p - start);\r\n\t\t\t\t\t\tif (parent == null || parent.nodeType != Element) {\r\n\t\t\t\t\t\t\tthrow new XmlParserException('Unexpected </$v>, tag is not open', str, p);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (v != parent.nodeName)\r\n\t\t\t\t\t\t\tthrow new XmlParserException(\"Expected </\" + parent.nodeName + \">\", str, p);\r\n\r\n\t\t\t\t\t\tstate = S.IGNORE_SPACES;\r\n\t\t\t\t\t\tnext = S.WAIT_END_RET;\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\t\t\t\tcase S.COMMENT:\r\n\t\t\t\t\tif (c == '-'.code && str.fastCodeAt(p + 1) == '-'.code && str.fastCodeAt(p + 2) == '>'.code) {\r\n\t\t\t\t\t\taddChild(Xml.createComment(str.substr(start, p - start)));\r\n\t\t\t\t\t\tp += 2;\r\n\t\t\t\t\t\tstate = S.BEGIN;\r\n\t\t\t\t\t}\r\n\t\t\t\tcase S.DOCTYPE:\r\n\t\t\t\t\tif (c == '['.code)\r\n\t\t\t\t\t\tnbrackets++;\r\n\t\t\t\t\telse if (c == ']'.code)\r\n\t\t\t\t\t\tnbrackets--;\r\n\t\t\t\t\telse if (c == '>'.code && nbrackets == 0) {\r\n\t\t\t\t\t\taddChild(Xml.createDocType(str.substr(start, p - start)));\r\n\t\t\t\t\t\tstate = S.BEGIN;\r\n\t\t\t\t\t}\r\n\t\t\t\tcase S.HEADER:\r\n\t\t\t\t\tif (c == '?'.code && str.fastCodeAt(p + 1) == '>'.code) {\r\n\t\t\t\t\t\tp++;\r\n\t\t\t\t\t\tvar str = str.substr(start + 1, p - start - 2);\r\n\t\t\t\t\t\taddChild(Xml.createProcessingInstruction(str));\r\n\t\t\t\t\t\tstate = S.BEGIN;\r\n\t\t\t\t\t}\r\n\t\t\t\tcase S.ESCAPE:\r\n\t\t\t\t\tif (c == ';'.code) {\r\n\t\t\t\t\t\tvar s = str.substr(start, p - start);\r\n\t\t\t\t\t\tif (s.fastCodeAt(0) == '#'.code) {\r\n\t\t\t\t\t\t\tvar c = s.fastCodeAt(1) == 'x'.code ? Std.parseInt(\"0\" + s.substr(1, s.length - 1)) : Std.parseInt(s.substr(1, s.length - 1));\r\n\t\t\t\t\t\t\t#if !(target.unicode)\r\n\t\t\t\t\t\t\tif (c >= 128) {\r\n\t\t\t\t\t\t\t\t// UTF8-encode it\r\n\t\t\t\t\t\t\t\tif (c <= 0x7FF) {\r\n\t\t\t\t\t\t\t\t\tbuf.addChar(0xC0 | (c >> 6));\r\n\t\t\t\t\t\t\t\t\tbuf.addChar(0x80 | (c & 63));\r\n\t\t\t\t\t\t\t\t} else if (c <= 0xFFFF) {\r\n\t\t\t\t\t\t\t\t\tbuf.addChar(0xE0 | (c >> 12));\r\n\t\t\t\t\t\t\t\t\tbuf.addChar(0x80 | ((c >> 6) & 63));\r\n\t\t\t\t\t\t\t\t\tbuf.addChar(0x80 | (c & 63));\r\n\t\t\t\t\t\t\t\t} else if (c <= 0x10FFFF) {\r\n\t\t\t\t\t\t\t\t\tbuf.addChar(0xF0 | (c >> 18));\r\n\t\t\t\t\t\t\t\t\tbuf.addChar(0x80 | ((c >> 12) & 63));\r\n\t\t\t\t\t\t\t\t\tbuf.addChar(0x80 | ((c >> 6) & 63));\r\n\t\t\t\t\t\t\t\t\tbuf.addChar(0x80 | (c & 63));\r\n\t\t\t\t\t\t\t\t} else\r\n\t\t\t\t\t\t\t\t\tthrow new XmlParserException(\"Cannot encode UTF8-char \" + c, str, p);\r\n\t\t\t\t\t\t\t} else\r\n\t\t\t\t\t\t\t#end\r\n\t\t\t\t\t\t\tbuf.addChar(c);\r\n\t\t\t\t\t\t} else if (!escapes.exists(s)) {\r\n\t\t\t\t\t\t\tif (strict)\r\n\t\t\t\t\t\t\t\tthrow new XmlParserException(\"Undefined entity: \" + s, str, p);\r\n\t\t\t\t\t\t\tbuf.add('&$s;');\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tbuf.add(escapes.get(s));\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tstart = p + 1;\r\n\t\t\t\t\t\tstate = escapeNext;\r\n\t\t\t\t\t} else if (!isValidChar(c) && c != \"#\".code) {\r\n\t\t\t\t\t\tif (strict)\r\n\t\t\t\t\t\t\tthrow new XmlParserException(\"Invalid character in entity: \" + String.fromCharCode(c), str, p);\r\n\t\t\t\t\t\tbuf.addChar(\"&\".code);\r\n\t\t\t\t\t\tbuf.addSub(str, start, p - start);\r\n\t\t\t\t\t\tp--;\r\n\t\t\t\t\t\tstart = p + 1;\r\n\t\t\t\t\t\tstate = escapeNext;\r\n\t\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tc = str.fastCodeAt(++p);\r\n\t\t}\r\n\r\n\t\tif (state == S.BEGIN) {\r\n\t\t\tstart = p;\r\n\t\t\tstate = S.PCDATA;\r\n\t\t}\r\n\r\n\t\tif (state == S.PCDATA) {\r\n\t\t\tif (parent.nodeType == Element) {\r\n\t\t\t\tthrow new XmlParserException(\"Unclosed node <\" + parent.nodeName + \">\", str, p);\r\n\t\t\t}\r\n\t\t\tif (p != start || nsubs == 0) {\r\n\t\t\t\tbuf.addSub(str, start, p - start);\r\n\t\t\t\taddChild(Xml.createPCData(buf.toString()));\r\n\t\t\t}\r\n\t\t\treturn p;\r\n\t\t}\r\n\r\n\t\tif (!strict && state == S.ESCAPE && escapeNext == S.PCDATA) {\r\n\t\t\tbuf.addChar(\"&\".code);\r\n\t\t\tbuf.addSub(str, start, p - start);\r\n\t\t\taddChild(Xml.createPCData(buf.toString()));\r\n\t\t\treturn p;\r\n\t\t}\r\n\r\n\t\tthrow new XmlParserException(\"Unexpected end\", str, p);\r\n\t}\r\n\r\n\tstatic inline function isValidChar(c) {\r\n\t\treturn (c >= 'a'.code && c <= 'z'.code) || (c >= 'A'.code && c <= 'Z'.code) || (c >= '0'.code && c <= '9'.code) || c == ':'.code || c == '.'.code\r\n\t\t\t|| c == '_'.code || c == '-'.code;\r\n\t}\r\n}\r\n","/*\r\n * Copyright (C)2005-2019 Haxe Foundation\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a\r\n * copy of this software and associated documentation files (the \"Software\"),\r\n * to deal in the Software without restriction, including without limitation\r\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\r\n * and/or sell copies of the Software, and to permit persons to whom the\r\n * Software is furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\r\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\r\n * DEALINGS IN THE SOFTWARE.\r\n */\r\n\r\npackage haxe.xml;\r\n\r\n/**\r\n\tThis class provides utility methods to convert Xml instances to\r\n\tString representation.\r\n**/\r\nclass Printer {\r\n\t/**\r\n\t\tConvert `Xml` to string representation.\r\n\r\n\t\tSet `pretty` to `true` to prettify the result.\r\n\t**/\r\n\tstatic public function print(xml:Xml, ?pretty = false) {\r\n\t\tvar printer = new Printer(pretty);\r\n\t\tprinter.writeNode(xml, \"\");\r\n\t\treturn printer.output.toString();\r\n\t}\r\n\r\n\tvar output:StringBuf;\r\n\tvar pretty:Bool;\r\n\r\n\tfunction new(pretty) {\r\n\t\toutput = new StringBuf();\r\n\t\tthis.pretty = pretty;\r\n\t}\r\n\r\n\tfunction writeNode(value:Xml, tabs:String) {\r\n\t\tswitch (value.nodeType) {\r\n\t\t\tcase CData:\r\n\t\t\t\twrite(tabs + \"<![CDATA[\");\r\n\t\t\t\twrite(value.nodeValue);\r\n\t\t\t\twrite(\"]]>\");\r\n\t\t\t\tnewline();\r\n\t\t\tcase Comment:\r\n\t\t\t\tvar commentContent:String = value.nodeValue;\r\n\t\t\t\tcommentContent = ~/[\\n\\r\\t]+/g.replace(commentContent, \"\");\r\n\t\t\t\tcommentContent = \"<!--\" + commentContent + \"-->\";\r\n\t\t\t\twrite(tabs);\r\n\t\t\t\twrite(StringTools.trim(commentContent));\r\n\t\t\t\tnewline();\r\n\t\t\tcase Document:\r\n\t\t\t\tfor (child in value) {\r\n\t\t\t\t\twriteNode(child, tabs);\r\n\t\t\t\t}\r\n\t\t\tcase Element:\r\n\t\t\t\twrite(tabs + \"<\");\r\n\t\t\t\twrite(value.nodeName);\r\n\t\t\t\tfor (attribute in value.attributes()) {\r\n\t\t\t\t\twrite(\" \" + attribute + \"=\\\"\");\r\n\t\t\t\t\twrite(StringTools.htmlEscape(value.get(attribute), true));\r\n\t\t\t\t\twrite(\"\\\"\");\r\n\t\t\t\t}\r\n\t\t\t\tif (hasChildren(value)) {\r\n\t\t\t\t\twrite(\">\");\r\n\t\t\t\t\tnewline();\r\n\t\t\t\t\tfor (child in value) {\r\n\t\t\t\t\t\twriteNode(child, pretty ? tabs + \"\\t\" : tabs);\r\n\t\t\t\t\t}\r\n\t\t\t\t\twrite(tabs + \"</\");\r\n\t\t\t\t\twrite(value.nodeName);\r\n\t\t\t\t\twrite(\">\");\r\n\t\t\t\t\tnewline();\r\n\t\t\t\t} else {\r\n\t\t\t\t\twrite(\"/>\");\r\n\t\t\t\t\tnewline();\r\n\t\t\t\t}\r\n\t\t\tcase PCData:\r\n\t\t\t\tvar nodeValue:String = value.nodeValue;\r\n\t\t\t\tif (nodeValue.length != 0) {\r\n\t\t\t\t\twrite(tabs + StringTools.htmlEscape(nodeValue));\r\n\t\t\t\t\tnewline();\r\n\t\t\t\t}\r\n\t\t\tcase ProcessingInstruction:\r\n\t\t\t\twrite(\"<?\" + value.nodeValue + \"?>\");\r\n\t\t\t\tnewline();\r\n\t\t\tcase DocType:\r\n\t\t\t\twrite(\"<!DOCTYPE \" + value.nodeValue + \">\");\r\n\t\t\t\tnewline();\r\n\t\t}\r\n\t}\r\n\r\n\tinline function write(input:String) {\r\n\t\toutput.add(input);\r\n\t}\r\n\r\n\tinline function newline() {\r\n\t\tif (pretty) {\r\n\t\t\toutput.add(\"\\n\");\r\n\t\t}\r\n\t}\r\n\r\n\tfunction hasChildren(value:Xml):Bool {\r\n\t\tfor (child in value) {\r\n\t\t\tswitch (child.nodeType) {\r\n\t\t\t\tcase Element, PCData:\r\n\t\t\t\t\treturn true;\r\n\t\t\t\tcase CData, Comment:\r\n\t\t\t\t\tif (StringTools.ltrim(child.nodeValue).length != 0) {\r\n\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t}\r\n\t\t\t\tcase _:\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n}\r\n","/*\r\n * Copyright (C)2005-2019 Haxe Foundation\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a\r\n * copy of this software and associated documentation files (the \"Software\"),\r\n * to deal in the Software without restriction, including without limitation\r\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\r\n * and/or sell copies of the Software, and to permit persons to whom the\r\n * Software is furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\r\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\r\n * DEALINGS IN THE SOFTWARE.\r\n */\r\n\r\npackage haxe.zip;\r\n\r\nenum Huffman {\r\n\tFound(i:Int);\r\n\tNeedBit(left:Huffman, right:Huffman);\r\n\tNeedBits(n:Int, table:Array<Huffman>);\r\n}\r\n\r\nclass HuffTools {\r\n\tpublic function new() {}\r\n\r\n\tfunction treeDepth(t) {\r\n\t\treturn switch (t) {\r\n\t\t\tcase Found(_): 0;\r\n\t\t\tcase NeedBits(_, _): throw \"assert\";\r\n\t\t\tcase NeedBit(a, b):\r\n\t\t\t\tvar da = treeDepth(a);\r\n\t\t\t\tvar db = treeDepth(b);\r\n\t\t\t\t1 + ((da < db) ? da : db);\r\n\t\t}\r\n\t}\r\n\r\n\tfunction treeCompress(t) {\r\n\t\tvar d = treeDepth(t);\r\n\t\tif (d == 0)\r\n\t\t\treturn t;\r\n\t\tif (d == 1)\r\n\t\t\treturn switch (t) {\r\n\t\t\t\tcase NeedBit(a, b): NeedBit(treeCompress(a), treeCompress(b));\r\n\t\t\t\tdefault: throw \"assert\";\r\n\t\t\t}\r\n\t\tvar size = 1 << d;\r\n\t\tvar table = new Array();\r\n\t\tfor (i in 0...size)\r\n\t\t\ttable.push(Found(-1));\r\n\t\ttreeWalk(table, 0, 0, d, t);\r\n\t\treturn NeedBits(d, table);\r\n\t}\r\n\r\n\tfunction treeWalk(table, p, cd, d, t) {\r\n\t\tswitch (t) {\r\n\t\t\tcase NeedBit(a, b):\r\n\t\t\t\tif (d > 0) {\r\n\t\t\t\t\ttreeWalk(table, p, cd + 1, d - 1, a);\r\n\t\t\t\t\ttreeWalk(table, p | (1 << cd), cd + 1, d - 1, b);\r\n\t\t\t\t} else\r\n\t\t\t\t\ttable[p] = treeCompress(t);\r\n\t\t\tdefault:\r\n\t\t\t\ttable[p] = treeCompress(t);\r\n\t\t}\r\n\t}\r\n\r\n\tfunction treeMake(bits:haxe.ds.IntMap<Int>, maxbits:Int, v:Int, len:Int) {\r\n\t\tif (len > maxbits)\r\n\t\t\tthrow \"Invalid huffman\";\r\n\t\tvar idx = (v << 5) | len;\r\n\t\tif (bits.exists(idx))\r\n\t\t\treturn Found(bits.get(idx));\r\n\t\tv <<= 1;\r\n\t\tlen += 1;\r\n\t\treturn NeedBit(treeMake(bits, maxbits, v, len), treeMake(bits, maxbits, v | 1, len));\r\n\t}\r\n\r\n\tpublic function make(lengths, pos, nlengths, maxbits) {\r\n\t\tif (nlengths == 1) {\r\n\t\t\treturn NeedBit(Found(0), Found(0));\r\n\t\t}\r\n\t\tvar counts = new Array();\r\n\t\tvar tmp = new Array();\r\n\t\tif (maxbits > 32)\r\n\t\t\tthrow \"Invalid huffman\";\r\n\t\tfor (i in 0...maxbits) {\r\n\t\t\tcounts.push(0);\r\n\t\t\ttmp.push(0);\r\n\t\t}\r\n\t\tfor (i in 0...nlengths) {\r\n\t\t\tvar p = lengths[i + pos];\r\n\t\t\tif (p >= maxbits)\r\n\t\t\t\tthrow \"Invalid huffman\";\r\n\t\t\tcounts[p]++;\r\n\t\t}\r\n\t\tvar code = 0;\r\n\t\tfor (i in 1...maxbits - 1) {\r\n\t\t\tcode = (code + counts[i]) << 1;\r\n\t\t\ttmp[i] = code;\r\n\t\t}\r\n\t\tvar bits = new haxe.ds.IntMap();\r\n\t\tfor (i in 0...nlengths) {\r\n\t\t\tvar l = lengths[i + pos];\r\n\t\t\tif (l != 0) {\r\n\t\t\t\tvar n = tmp[l - 1];\r\n\t\t\t\ttmp[l - 1] = n + 1;\r\n\t\t\t\tbits.set((n << 5) | l, i);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn treeCompress(NeedBit(treeMake(bits, maxbits, 0, 1), treeMake(bits, maxbits, 1, 1)));\r\n\t}\r\n}\r\n","/*\r\n * Copyright (C)2005-2019 Haxe Foundation\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a\r\n * copy of this software and associated documentation files (the \"Software\"),\r\n * to deal in the Software without restriction, including without limitation\r\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\r\n * and/or sell copies of the Software, and to permit persons to whom the\r\n * Software is furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\r\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\r\n * DEALINGS IN THE SOFTWARE.\r\n */\r\n\r\npackage haxe.zip;\r\n\r\nimport haxe.zip.Huffman;\r\nimport haxe.crypto.Adler32;\r\n\r\nprivate class Window {\r\n\tpublic static inline var SIZE = 1 << 15;\r\n\tpublic static inline var BUFSIZE = 1 << 16;\r\n\r\n\tpublic var buffer:haxe.io.Bytes;\r\n\tpublic var pos:Int;\r\n\r\n\tvar crc:Adler32;\r\n\r\n\tpublic function new(hasCrc) {\r\n\t\tbuffer = haxe.io.Bytes.alloc(BUFSIZE);\r\n\t\tpos = 0;\r\n\t\tif (hasCrc)\r\n\t\t\tcrc = new Adler32();\r\n\t}\r\n\r\n\tpublic function slide() {\r\n\t\tif (crc != null)\r\n\t\t\tcrc.update(buffer, 0, SIZE);\r\n\t\tvar b = haxe.io.Bytes.alloc(BUFSIZE);\r\n\t\tpos -= SIZE;\r\n\t\tb.blit(0, buffer, SIZE, pos);\r\n\t\tbuffer = b;\r\n\t}\r\n\r\n\tpublic function addBytes(b, p, len) {\r\n\t\tif (pos + len > BUFSIZE)\r\n\t\t\tslide();\r\n\t\tbuffer.blit(pos, b, p, len);\r\n\t\tpos += len;\r\n\t}\r\n\r\n\tpublic function addByte(c) {\r\n\t\tif (pos == BUFSIZE)\r\n\t\t\tslide();\r\n\t\tbuffer.set(pos, c);\r\n\t\tpos++;\r\n\t}\r\n\r\n\tpublic function getLastChar() {\r\n\t\treturn buffer.get(pos - 1);\r\n\t}\r\n\r\n\tpublic function available() {\r\n\t\treturn pos;\r\n\t}\r\n\r\n\tpublic function checksum() {\r\n\t\tif (crc != null)\r\n\t\t\tcrc.update(buffer, 0, pos);\r\n\t\treturn crc;\r\n\t}\r\n}\r\n\r\nprivate enum State {\r\n\tHead;\r\n\tBlock;\r\n\tCData;\r\n\tFlat;\r\n\tCrc;\r\n\tDist;\r\n\tDistOne;\r\n\tDone;\r\n}\r\n\r\n/**\r\n\tA pure Haxe implementation of the ZLIB Inflate algorithm which allows reading compressed data without any platform-specific support.\r\n**/\r\nclass InflateImpl {\r\n\tstatic var LEN_EXTRA_BITS_TBL = [\r\n\t\t0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 0, -1, -1\r\n\t];\r\n\tstatic var LEN_BASE_VAL_TBL = [\r\n\t\t3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 19, 23, 27, 31, 35, 43, 51, 59, 67, 83, 99, 115, 131, 163, 195, 227, 258\r\n\t];\r\n\tstatic var DIST_EXTRA_BITS_TBL = [\r\n\t\t0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 13, 13, -1, -1\r\n\t];\r\n\tstatic var DIST_BASE_VAL_TBL = [\r\n\t\t1, 2, 3, 4, 5, 7, 9, 13, 17, 25, 33, 49, 65, 97, 129, 193, 257, 385, 513, 769, 1025, 1537, 2049, 3073, 4097, 6145, 8193, 12289, 16385, 24577\r\n\t];\r\n\tstatic var CODE_LENGTHS_POS = [16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15];\r\n\r\n\tvar nbits:Int;\r\n\tvar bits:Int;\r\n\tvar state:State;\r\n\tvar isFinal:Bool;\r\n\tvar huffman:Huffman;\r\n\tvar huffdist:Null<Huffman>;\r\n\tvar htools:HuffTools;\r\n\tvar len:Int;\r\n\tvar dist:Int;\r\n\tvar needed:Int;\r\n\tvar output:haxe.io.Bytes;\r\n\tvar outpos:Int;\r\n\tvar input:haxe.io.Input;\r\n\tvar lengths:Array<Int>;\r\n\tvar window:Window;\r\n\r\n\tstatic var FIXED_HUFFMAN = null;\r\n\r\n\tpublic function new(i, ?header = true, ?crc = true) {\r\n\t\tisFinal = false;\r\n\t\thtools = new HuffTools();\r\n\t\thuffman = buildFixedHuffman();\r\n\t\thuffdist = null;\r\n\t\tlen = 0;\r\n\t\tdist = 0;\r\n\t\tstate = header ? Head : Block;\r\n\t\tinput = i;\r\n\t\tbits = 0;\r\n\t\tnbits = 0;\r\n\t\tneeded = 0;\r\n\t\toutput = null;\r\n\t\toutpos = 0;\r\n\t\tlengths = new Array();\r\n\t\tfor (i in 0...19)\r\n\t\t\tlengths.push(-1);\r\n\t\twindow = new Window(crc);\r\n\t}\r\n\r\n\tfunction buildFixedHuffman() {\r\n\t\tif (FIXED_HUFFMAN != null)\r\n\t\t\treturn FIXED_HUFFMAN;\r\n\t\tvar a = new Array();\r\n\t\tfor (n in 0...288)\r\n\t\t\ta.push(if (n <= 143) 8 else if (n <= 255) 9 else if (n <= 279) 7 else 8);\r\n\t\tFIXED_HUFFMAN = htools.make(a, 0, 288, 10);\r\n\t\treturn FIXED_HUFFMAN;\r\n\t}\r\n\r\n\tpublic function readBytes(b, pos, len) {\r\n\t\tneeded = len;\r\n\t\toutpos = pos;\r\n\t\toutput = b;\r\n\t\tif (len > 0)\r\n\t\t\twhile (inflateLoop()) {}\r\n\t\treturn len - needed;\r\n\t}\r\n\r\n\tfunction getBits(n) {\r\n\t\twhile (nbits < n) {\r\n\t\t\tbits |= input.readByte() << nbits;\r\n\t\t\tnbits += 8;\r\n\t\t}\r\n\t\tvar b = bits & ((1 << n) - 1);\r\n\t\tnbits -= n;\r\n\t\tbits >>= n;\r\n\t\treturn b;\r\n\t}\r\n\r\n\tfunction getBit() {\r\n\t\tif (nbits == 0) {\r\n\t\t\tnbits = 8;\r\n\t\t\tbits = input.readByte();\r\n\t\t}\r\n\t\tvar b = bits & 1 == 1;\r\n\t\tnbits--;\r\n\t\tbits >>= 1;\r\n\t\treturn b;\r\n\t}\r\n\r\n\tfunction getRevBits(n) {\r\n\t\treturn if (n == 0)\r\n\t\t\t0\r\n\t\telse if (getBit())\r\n\t\t\t(1 << (n - 1)) | getRevBits(n - 1)\r\n\t\telse\r\n\t\t\tgetRevBits(n - 1);\r\n\t}\r\n\r\n\tfunction resetBits() {\r\n\t\tbits = 0;\r\n\t\tnbits = 0;\r\n\t}\r\n\r\n\tfunction addBytes(b, p, len) {\r\n\t\twindow.addBytes(b, p, len);\r\n\t\toutput.blit(outpos, b, p, len);\r\n\t\tneeded -= len;\r\n\t\toutpos += len;\r\n\t}\r\n\r\n\tfunction addByte(b) {\r\n\t\twindow.addByte(b);\r\n\t\toutput.set(outpos, b);\r\n\t\tneeded--;\r\n\t\toutpos++;\r\n\t}\r\n\r\n\tfunction addDistOne(n) {\r\n\t\tvar c = window.getLastChar();\r\n\t\tfor (i in 0...n)\r\n\t\t\taddByte(c);\r\n\t}\r\n\r\n\tfunction addDist(d, len) {\r\n\t\taddBytes(window.buffer, window.pos - d, len);\r\n\t}\r\n\r\n\tfunction applyHuffman(h) {\r\n\t\treturn switch (h) {\r\n\t\t\tcase Found(n): n;\r\n\t\t\tcase NeedBit(a, b): applyHuffman(getBit() ? b : a);\r\n\t\t\tcase NeedBits(n, tbl): applyHuffman(tbl[getBits(n)]);\r\n\t\t}\r\n\t}\r\n\r\n\tfunction inflateLengths(a, max) {\r\n\t\tvar i = 0;\r\n\t\tvar prev = 0;\r\n\t\twhile (i < max) {\r\n\t\t\tvar n = applyHuffman(huffman);\r\n\t\t\tswitch (n) {\r\n\t\t\t\tcase 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15:\r\n\t\t\t\t\tprev = n;\r\n\t\t\t\t\ta[i] = n;\r\n\t\t\t\t\ti++;\r\n\t\t\t\tcase 16:\r\n\t\t\t\t\tvar end = i + 3 + getBits(2);\r\n\t\t\t\t\tif (end > max)\r\n\t\t\t\t\t\tthrow \"Invalid data\";\r\n\t\t\t\t\twhile (i < end) {\r\n\t\t\t\t\t\ta[i] = prev;\r\n\t\t\t\t\t\ti++;\r\n\t\t\t\t\t}\r\n\t\t\t\tcase 17:\r\n\t\t\t\t\ti += 3 + getBits(3);\r\n\t\t\t\t\tif (i > max)\r\n\t\t\t\t\t\tthrow \"Invalid data\";\r\n\t\t\t\tcase 18:\r\n\t\t\t\t\ti += 11 + getBits(7);\r\n\t\t\t\t\tif (i > max)\r\n\t\t\t\t\t\tthrow \"Invalid data\";\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tthrow \"Invalid data\";\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tfunction inflateLoop() {\r\n\t\tswitch (state) {\r\n\t\t\tcase Head:\r\n\t\t\t\tvar cmf = input.readByte();\r\n\t\t\t\tvar cm = cmf & 15;\r\n\t\t\t\tvar cinfo = cmf >> 4;\r\n\t\t\t\tif (cm != 8)\r\n\t\t\t\t\tthrow \"Invalid data\";\r\n\t\t\t\tvar flg = input.readByte();\r\n\t\t\t\t// var fcheck = flg & 31;\r\n\t\t\t\tvar fdict = flg & 32 != 0;\r\n\t\t\t\t// var flevel = flg >> 6;\r\n\t\t\t\tif (((cmf << 8) + flg) % 31 != 0)\r\n\t\t\t\t\tthrow \"Invalid data\";\r\n\t\t\t\tif (fdict)\r\n\t\t\t\t\tthrow \"Unsupported dictionary\";\r\n\t\t\t\tstate = Block;\r\n\t\t\t\treturn true;\r\n\t\t\tcase Crc:\r\n\t\t\t\tvar calc = window.checksum();\r\n\t\t\t\tif (calc == null) {\r\n\t\t\t\t\tstate = Done;\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t\tvar crc = Adler32.read(input);\r\n\t\t\t\tif (!calc.equals(crc))\r\n\t\t\t\t\tthrow \"Invalid CRC\";\r\n\t\t\t\tstate = Done;\r\n\t\t\t\treturn true;\r\n\t\t\tcase Done:\r\n\t\t\t\t// nothing\r\n\t\t\t\treturn false;\r\n\t\t\tcase Block:\r\n\t\t\t\tisFinal = getBit();\r\n\t\t\t\tswitch (getBits(2)) {\r\n\t\t\t\t\tcase 0: // no compression\r\n\t\t\t\t\t\tlen = input.readUInt16();\r\n\t\t\t\t\t\tvar nlen = input.readUInt16();\r\n\t\t\t\t\t\tif (nlen != 0xFFFF - len) throw \"Invalid data\";\r\n\t\t\t\t\t\tstate = Flat;\r\n\t\t\t\t\t\tvar r = inflateLoop();\r\n\t\t\t\t\t\tresetBits();\r\n\t\t\t\t\t\treturn r;\r\n\t\t\t\t\tcase 1: // fixed Huffman\r\n\t\t\t\t\t\thuffman = buildFixedHuffman();\r\n\t\t\t\t\t\thuffdist = null;\r\n\t\t\t\t\t\tstate = CData;\r\n\t\t\t\t\t\treturn true;\r\n\t\t\t\t\tcase 2: // dynamic Huffman\r\n\t\t\t\t\t\tvar hlit = getBits(5) + 257;\r\n\t\t\t\t\t\tvar hdist = getBits(5) + 1;\r\n\t\t\t\t\t\tvar hclen = getBits(4) + 4;\r\n\t\t\t\t\t\tfor (i in 0...hclen)\r\n\t\t\t\t\t\t\tlengths[CODE_LENGTHS_POS[i]] = getBits(3);\r\n\t\t\t\t\t\tfor (i in hclen...19)\r\n\t\t\t\t\t\t\tlengths[CODE_LENGTHS_POS[i]] = 0;\r\n\t\t\t\t\t\thuffman = htools.make(lengths, 0, 19, 8);\r\n\t\t\t\t\t\tvar lengths = new Array();\r\n\t\t\t\t\t\tfor (i in 0...hlit + hdist)\r\n\t\t\t\t\t\t\tlengths.push(0);\r\n\t\t\t\t\t\tinflateLengths(lengths, hlit + hdist);\r\n\t\t\t\t\t\thuffdist = htools.make(lengths, hlit, hdist, 16);\r\n\t\t\t\t\t\thuffman = htools.make(lengths, 0, hlit, 16);\r\n\t\t\t\t\t\tstate = CData;\r\n\t\t\t\t\t\treturn true;\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\tthrow \"Invalid data\";\r\n\t\t\t\t}\r\n\t\t\tcase Flat:\r\n\t\t\t\tvar rlen = (len < needed) ? len : needed;\r\n\t\t\t\tvar bytes = input.read(rlen);\r\n\t\t\t\tlen -= rlen;\r\n\t\t\t\taddBytes(bytes, 0, rlen);\r\n\t\t\t\tif (len == 0)\r\n\t\t\t\t\tstate = isFinal ? Crc : Block;\r\n\t\t\t\treturn needed > 0;\r\n\t\t\tcase DistOne:\r\n\t\t\t\tvar rlen = (len < needed) ? len : needed;\r\n\t\t\t\taddDistOne(rlen);\r\n\t\t\t\tlen -= rlen;\r\n\t\t\t\tif (len == 0)\r\n\t\t\t\t\tstate = CData;\r\n\t\t\t\treturn needed > 0;\r\n\t\t\tcase Dist:\r\n\t\t\t\twhile (len > 0 && needed > 0) {\r\n\t\t\t\t\tvar rdist = (len < dist) ? len : dist;\r\n\t\t\t\t\tvar rlen = (needed < rdist) ? needed : rdist;\r\n\t\t\t\t\taddDist(dist, rlen);\r\n\t\t\t\t\tlen -= rlen;\r\n\t\t\t\t}\r\n\t\t\t\tif (len == 0)\r\n\t\t\t\t\tstate = CData;\r\n\t\t\t\treturn needed > 0;\r\n\t\t\tcase CData:\r\n\t\t\t\tvar n = applyHuffman(huffman);\r\n\t\t\t\tif (n < 256) {\r\n\t\t\t\t\taddByte(n);\r\n\t\t\t\t\treturn needed > 0;\r\n\t\t\t\t} else if (n == 256) {\r\n\t\t\t\t\tstate = isFinal ? Crc : Block;\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tn -= 257;\r\n\t\t\t\t\tvar extra_bits = LEN_EXTRA_BITS_TBL[n];\r\n\t\t\t\t\tif (extra_bits == -1)\r\n\t\t\t\t\t\tthrow \"Invalid data\";\r\n\t\t\t\t\tlen = LEN_BASE_VAL_TBL[n] + getBits(extra_bits);\r\n\t\t\t\t\tvar dist_code = if (huffdist == null) getRevBits(5) else applyHuffman(huffdist);\r\n\t\t\t\t\textra_bits = DIST_EXTRA_BITS_TBL[dist_code];\r\n\t\t\t\t\tif (extra_bits == -1)\r\n\t\t\t\t\t\tthrow \"Invalid data\";\r\n\t\t\t\t\tdist = DIST_BASE_VAL_TBL[dist_code] + getBits(extra_bits);\r\n\t\t\t\t\tif (dist > window.available())\r\n\t\t\t\t\t\tthrow \"Invalid data\";\r\n\t\t\t\t\tstate = (dist == 1) ? DistOne : Dist;\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tpublic static function run(i:haxe.io.Input, ?bufsize = 65536) {\r\n\t\tvar buf = haxe.io.Bytes.alloc(bufsize);\r\n\t\tvar output = new haxe.io.BytesBuffer();\r\n\t\tvar inflate = new InflateImpl(i);\r\n\t\twhile (true) {\r\n\t\t\tvar len = inflate.readBytes(buf, 0, bufsize);\r\n\t\t\toutput.addBytes(buf, 0, len);\r\n\t\t\tif (len < bufsize)\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t\treturn output.getBytes();\r\n\t}\r\n}\r\n","/*\r\n * Copyright (C)2005-2019 Haxe Foundation\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a\r\n * copy of this software and associated documentation files (the \"Software\"),\r\n * to deal in the Software without restriction, including without limitation\r\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\r\n * and/or sell copies of the Software, and to permit persons to whom the\r\n * Software is furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\r\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\r\n * DEALINGS IN THE SOFTWARE.\r\n */\r\n\r\npackage haxe.zip;\r\n\r\nimport haxe.zip.Entry;\r\nimport haxe.ds.List;\r\n\r\n// see http://www.pkware.com/documents/casestudies/APPNOTE.TXT\r\nclass Reader {\r\n\tvar i:haxe.io.Input;\r\n\r\n\tpublic function new(i) {\r\n\t\tthis.i = i;\r\n\t}\r\n\r\n\tfunction readZipDate() {\r\n\t\tvar t = i.readUInt16();\r\n\t\tvar hour = (t >> 11) & 31;\r\n\t\tvar min = (t >> 5) & 63;\r\n\t\tvar sec = t & 31;\r\n\t\tvar d = i.readUInt16();\r\n\t\tvar year = d >> 9;\r\n\t\tvar month = (d >> 5) & 15;\r\n\t\tvar day = d & 31;\r\n\t\treturn new Date(year + 1980, month - 1, day, hour, min, sec << 1);\r\n\t}\r\n\r\n\tfunction readExtraFields(length) {\r\n\t\tvar fields = new List();\r\n\t\twhile (length > 0) {\r\n\t\t\tif (length < 4)\r\n\t\t\t\tthrow \"Invalid extra fields data\";\r\n\t\t\tvar tag = i.readUInt16();\r\n\t\t\tvar len = i.readUInt16();\r\n\t\t\tif (length < len)\r\n\t\t\t\tthrow \"Invalid extra fields data\";\r\n\t\t\tswitch (tag) {\r\n\t\t\t\tcase 0x7075:\r\n\t\t\t\t\tvar version = i.readByte();\r\n\t\t\t\t\tif (version != 1) {\r\n\t\t\t\t\t\tvar data = new haxe.io.BytesBuffer();\r\n\t\t\t\t\t\tdata.addByte(version);\r\n\t\t\t\t\t\tdata.add(i.read(len - 1));\r\n\t\t\t\t\t\tfields.add(FUnknown(tag, data.getBytes()));\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tvar crc = i.readInt32();\r\n\t\t\t\t\t\tvar name = i.read(len - 5).toString();\r\n\t\t\t\t\t\tfields.add(FInfoZipUnicodePath(name, crc));\r\n\t\t\t\t\t}\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tfields.add(FUnknown(tag, i.read(len)));\r\n\t\t\t}\r\n\t\t\tlength -= 4 + len;\r\n\t\t}\r\n\t\treturn fields;\r\n\t}\r\n\r\n\tpublic function readEntryHeader():Entry {\r\n\t\tvar i = this.i;\r\n\t\tvar h = i.readInt32();\r\n\t\tif (h == 0x02014B50 || h == 0x06054B50)\r\n\t\t\treturn null;\r\n\t\tif (h != 0x04034B50)\r\n\t\t\tthrow \"Invalid Zip Data\";\r\n\t\tvar version = i.readUInt16();\r\n\t\tvar flags = i.readUInt16();\r\n\t\tvar utf8 = flags & 0x800 != 0;\r\n\t\tif ((flags & 0xF7F1) != 0)\r\n\t\t\tthrow \"Unsupported flags \" + flags;\r\n\t\tvar compression = i.readUInt16();\r\n\t\tvar compressed = (compression != 0);\r\n\t\tif (compressed && compression != 8)\r\n\t\t\tthrow \"Unsupported compression \" + compression;\r\n\t\tvar mtime = readZipDate();\r\n\t\tvar crc32:Null<Int> = i.readInt32();\r\n\t\tvar csize = i.readInt32();\r\n\t\tvar usize = i.readInt32();\r\n\t\tvar fnamelen = i.readInt16();\r\n\t\tvar elen = i.readInt16();\r\n\t\tvar fname = i.readString(fnamelen);\r\n\t\tvar fields = readExtraFields(elen);\r\n\t\tif (utf8)\r\n\t\t\tfields.push(FUtf8);\r\n\t\tvar data = null;\r\n\t\t// we have a data descriptor that store the real crc/sizes\r\n\t\t// after the compressed data, let's wait for it\r\n\t\tif ((flags & 8) != 0)\r\n\t\t\tcrc32 = null;\r\n\t\treturn {\r\n\t\t\tfileName: fname,\r\n\t\t\tfileSize: usize,\r\n\t\t\tfileTime: mtime,\r\n\t\t\tcompressed: compressed,\r\n\t\t\tdataSize: csize,\r\n\t\t\tdata: data,\r\n\t\t\tcrc32: crc32,\r\n\t\t\textraFields: fields,\r\n\t\t};\r\n\t}\r\n\r\n\tpublic function read():List<Entry> {\r\n\t\tvar l = new List();\r\n\t\tvar buf = null;\r\n\t\tvar tmp = null;\r\n\t\twhile (true) {\r\n\t\t\tvar e = readEntryHeader();\r\n\t\t\tif (e == null)\r\n\t\t\t\tbreak;\r\n\t\t\t// do we have a data descriptor? (see readEntryHeader)\r\n\t\t\tif (e.crc32 == null) {\r\n\t\t\t\tif (e.compressed) {\r\n\t\t\t\t\t#if neko\r\n\t\t\t\t\t// enter progressive mode : we use a different input which has\r\n\t\t\t\t\t// a temporary buffer, this is necessary since we have to uncompress\r\n\t\t\t\t\t// progressively, and after that we might have pending read data\r\n\t\t\t\t\t// that needs to be processed\r\n\t\t\t\t\tvar bufSize = 65536;\r\n\t\t\t\t\tif (buf == null) {\r\n\t\t\t\t\t\tbuf = new haxe.io.BufferInput(i, haxe.io.Bytes.alloc(bufSize));\r\n\t\t\t\t\t\ttmp = haxe.io.Bytes.alloc(bufSize);\r\n\t\t\t\t\t\ti = buf;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tvar out = new haxe.io.BytesBuffer();\r\n\t\t\t\t\tvar z = new neko.zip.Uncompress(-15);\r\n\t\t\t\t\tz.setFlushMode(neko.zip.Flush.SYNC);\r\n\t\t\t\t\twhile (true) {\r\n\t\t\t\t\t\tif (buf.available == 0)\r\n\t\t\t\t\t\t\tbuf.refill();\r\n\t\t\t\t\t\tvar p = bufSize - buf.available;\r\n\t\t\t\t\t\tif (p != buf.pos) {\r\n\t\t\t\t\t\t\t// because of lack of \"srcLen\" in zip api, we need to always be stuck to the buffer end\r\n\t\t\t\t\t\t\tbuf.buf.blit(p, buf.buf, buf.pos, buf.available);\r\n\t\t\t\t\t\t\tbuf.pos = p;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tvar r = z.execute(buf.buf, buf.pos, tmp, 0);\r\n\t\t\t\t\t\tout.addBytes(tmp, 0, r.write);\r\n\t\t\t\t\t\tbuf.pos += r.read;\r\n\t\t\t\t\t\tbuf.available -= r.read;\r\n\t\t\t\t\t\tif (r.done)\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t\te.data = out.getBytes();\r\n\t\t\t\t\t#else\r\n\t\t\t\t\tvar bufSize = 65536;\r\n\t\t\t\t\tif (tmp == null)\r\n\t\t\t\t\t\ttmp = haxe.io.Bytes.alloc(bufSize);\r\n\t\t\t\t\tvar out = new haxe.io.BytesBuffer();\r\n\t\t\t\t\tvar z = new InflateImpl(i, false, false);\r\n\t\t\t\t\twhile (true) {\r\n\t\t\t\t\t\tvar n = z.readBytes(tmp, 0, bufSize);\r\n\t\t\t\t\t\tout.addBytes(tmp, 0, n);\r\n\t\t\t\t\t\tif (n < bufSize)\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t\te.data = out.getBytes();\r\n\t\t\t\t\t#end\r\n\t\t\t\t} else\r\n\t\t\t\t\te.data = i.read(e.dataSize);\r\n\t\t\t\te.crc32 = i.readInt32();\r\n\t\t\t\tif (e.crc32 == 0x08074b50)\r\n\t\t\t\t\te.crc32 = i.readInt32();\r\n\t\t\t\te.dataSize = i.readInt32();\r\n\t\t\t\te.fileSize = i.readInt32();\r\n\t\t\t\t// set data to uncompressed\r\n\t\t\t\te.dataSize = e.fileSize;\r\n\t\t\t\te.compressed = false;\r\n\t\t\t} else\r\n\t\t\t\te.data = i.read(e.dataSize);\r\n\t\t\tl.add(e);\r\n\t\t}\r\n\t\treturn l;\r\n\t}\r\n\r\n\tpublic static function readZip(i:haxe.io.Input) {\r\n\t\tvar r = new Reader(i);\r\n\t\treturn r.read();\r\n\t}\r\n\r\n\tpublic static function unzip(f:Entry) {\r\n\t\tif (!f.compressed)\r\n\t\t\treturn f.data;\r\n\t\tvar c = new haxe.zip.Uncompress(-15);\r\n\t\tvar s = haxe.io.Bytes.alloc(f.fileSize);\r\n\t\tvar r = c.execute(f.data, 0, s, 0);\r\n\t\tc.close();\r\n\t\tif (!r.done || r.read != f.data.length || r.write != f.fileSize)\r\n\t\t\tthrow \"Invalid compressed data for \" + f.fileName;\r\n\t\tf.compressed = false;\r\n\t\tf.dataSize = f.fileSize;\r\n\t\tf.data = s;\r\n\t\treturn f.data;\r\n\t}\r\n}\r\n","package hx.ws;\r\n\r\nimport haxe.io.Bytes;\r\n\r\nclass Buffer {\r\n    public var available(default, null):Int = 0;\r\n    public var length(default, null):Int = 0;\r\n    private var currentOffset:Int = 0;\r\n    private var currentData: Bytes = null;\r\n    private var chunks:Array<Bytes> = [];\r\n\r\n    public function new() {\r\n    }\r\n\r\n    public function writeByte(v:Int) {\r\n        var b = Bytes.alloc(1);\r\n        b.set(0, v);\r\n        writeBytes(b);\r\n    }\r\n\r\n    public function writeShort(v:Int) {\r\n        var b = Bytes.alloc(2);\r\n        b.set(0, (v >> 8) & 0xFF);\r\n        b.set(1, (v >> 0) & 0xFF);\r\n        writeBytes(b);\r\n    }\r\n\r\n    public function writeInt(v:Int) {\r\n        var b = Bytes.alloc(4);\r\n        b.set(0, (v >> 24) & 0xFF);\r\n        b.set(1, (v >> 16) & 0xFF);\r\n        b.set(2, (v >> 8) & 0xFF);\r\n        b.set(3, (v >> 0) & 0xFF);\r\n        writeBytes(b);\r\n    }\r\n\r\n    public function writeBytes(data:Bytes) {\r\n        chunks.push(data);\r\n        available += data.length;\r\n        length = available;\r\n    }\r\n\r\n    public function readAllAvailableBytes():Bytes {\r\n        return readBytes(available);\r\n    }\r\n\r\n    public function readLine():String {\r\n        var bytes = readUntil(\"\\n\");\r\n        if (bytes == null) {\r\n            return null;\r\n        }\r\n        return StringTools.trim(bytes.toString());\r\n    }\r\n\r\n    public function readLinesUntil(delimiter:String):Array<String> {\r\n        var bytes = readUntil(delimiter);\r\n        if (bytes == null) {\r\n            return null;\r\n        }\r\n        return StringTools.trim(bytes.toString()).split(\"\\n\");\r\n    }\r\n\r\n\r\n    public function readUntil(delimiter:String):Bytes {\r\n        var dl = delimiter.length;\r\n\r\n        for (i in 0 ... available - dl) {\r\n            var matched = true;\r\n            for (j in 0 ... dl) {\r\n                if (peekByte(currentOffset + i + j + 1) == delimiter.charCodeAt(j)) {\r\n                    continue;\r\n                }\r\n                matched = false;\r\n                break;\r\n            }\r\n\r\n            if (matched) {\r\n                var bytes = readBytes(i + dl + 1);\r\n                return bytes;\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    public function readBytes(count:Int):Bytes {\r\n        var count2 = Std.int(Math.min(count, available));\r\n        var out = Bytes.alloc(count2);\r\n        for (n in 0 ... count2) out.set(n, readByte());\r\n        return out;\r\n    }\r\n\r\n    public function readUnsignedShort():UInt {\r\n        var h = readByte();\r\n        var l = readByte();\r\n        return (h << 8) | (l << 0);\r\n    }\r\n\r\n    public function readUnsignedInt():UInt {\r\n        var v3 = readByte();\r\n        var v2 = readByte();\r\n        var v1 = readByte();\r\n        var v0 = readByte();\r\n        return (v3 << 24) | (v2 << 16) | (v1 << 8) | (v0 << 0);\r\n    }\r\n\r\n    public function readByte():Int {\r\n        if (available <= 0) throw 'No bytes available';\r\n        while (currentData == null || currentOffset >= currentData.length) {\r\n            currentOffset = 0;\r\n            currentData = chunks.shift();\r\n        }\r\n        available--;\r\n        length = available;\r\n        return currentData.get(currentOffset++);\r\n    }\r\n\r\n    public function peekByte(offset:Int):Int {\r\n        if (available <= 0) throw 'No bytes available';\r\n        var tempOffset = offset;\r\n        var tempData = chunks[0];\r\n        if (tempData == null) {\r\n            tempData = currentData;\r\n        }\r\n        var chunkIndex = 0;\r\n        while (tempOffset >= tempData.length) {\r\n            tempOffset -= tempData.length;\r\n            chunkIndex++;\r\n            tempData = chunks[chunkIndex];\r\n        }\r\n        return tempData.get(tempOffset);\r\n    }\r\n\r\n    public function peekUntil(byte:Int):Int {\r\n        var tempOffset = currentOffset;\r\n        var tempData = chunks[0];\r\n        if (tempData == null) {\r\n            tempData = currentData;\r\n        }\r\n        var chunkIndex = 0;\r\n        while (tempOffset >= tempData.length) {\r\n            tempOffset -= tempData.length;\r\n            chunkIndex++;\r\n            tempData = chunks[chunkIndex];\r\n        }\r\n        while (tempOffset < tempData.length) {\r\n            if (tempData.get(tempOffset) == byte) {\r\n                return tempOffset + 1;\r\n            }\r\n            tempOffset++;\r\n        }\r\n\r\n        return -1;\r\n    }\r\n\r\n    public function endsWith(e:String):Bool {\r\n        var i = available - e.length;\r\n        var n = currentOffset;\r\n        while (i < available) {\r\n            if (peekByte(i) != e.charCodeAt(n)) {\r\n                return false;\r\n            }\r\n            i++;\r\n            n++;\r\n        }\r\n\r\n        return true;\r\n    }\r\n}","package hx.ws;\r\nimport haxe.Serializer;\r\nimport no.logic.kha.uix.utils.ByteUtils;\r\n\r\n#if js\r\n\r\nimport haxe.Constraints.Function;\r\nimport haxe.io.Bytes;\r\n\r\n#if (haxe_ver < 4)\r\n    typedef JsBuffer = js.html.ArrayBuffer;\r\n#else\r\n    typedef JsBuffer = js.lib.ArrayBuffer;\r\n#end\r\n\r\nclass WebSocket { // lets use composition so we can intercept send / onmessage and convert to something haxey if its binary\r\n    private var _url:String;\r\n    private var _ws:js.html.WebSocket = null;\r\n\r\n    public function new(url:String, immediateOpen=true) {\r\n        _url = url;\r\n        if (immediateOpen) {\r\n            open();\r\n        }\r\n    }\r\n\r\n    public function open() {\r\n        if (_ws != null) {\r\n            throw \"Socket already connected\";\r\n        }\r\n        try\r\n        {\r\n            _ws = new js.html.WebSocket(_url);\r\n        }\r\n        catch(err:Dynamic)\r\n        {\r\n            if (onerror!=null)\r\n                onerror(err);\r\n        }\r\n    }\r\n\r\n    public var onopen(get, set):Function;\r\n    private function get_onopen():Function {\r\n        return _ws.onopen;\r\n    }\r\n    private function set_onopen(value:Function):Function {\r\n        _ws.onopen = value;\r\n        return value;\r\n    }\r\n\r\n    public var onclose(get, set):Function;\r\n    private function get_onclose():Function {\r\n        return _ws.onclose;\r\n    }\r\n    private function set_onclose(value:Function):Function {\r\n        _ws.onclose = value;\r\n        return value;\r\n    }\r\n\r\n    public var onerror(get, set):Function;\r\n    private function get_onerror():Function {\r\n        return _ws.onerror;\r\n    }\r\n    private function set_onerror(value:Function):Function {\r\n        _ws.onerror = value;\r\n        return value;\r\n    }\r\n\r\n    private var _onmessage:Function = null;\r\n    public var onmessage(get, set):Function;\r\n    private function get_onmessage():Function {\r\n        return _onmessage;\r\n    }\r\n    private function set_onmessage(value:Function):Function {\r\n        _onmessage = value;\r\n        _ws.onmessage = function(message) {\r\n            if (_onmessage != null) {\r\n                if (Std.is(message.data, JsBuffer)) {\r\n                    var buffer = new Buffer();\r\n                    buffer.writeBytes(Bytes.ofData(message.data));\r\n                    _onmessage({\r\n                        type: \"binary\",\r\n                        data: buffer\r\n                    });\r\n                } else {\r\n                    _onmessage({\r\n                        type: \"text\",\r\n                        data: message.data\r\n                    });\r\n                }\r\n            }\r\n        };\r\n        return value;\r\n    }\r\n\r\n    public var binaryType(get, set):BinaryType;\r\n    private function get_binaryType() {\r\n        return _ws.binaryType;\r\n    }\r\n    private function set_binaryType(value:BinaryType):BinaryType {\r\n        _ws.binaryType = value;\r\n        return value;\r\n    }\r\n\r\n    public function close() {\r\n        _ws.close();\r\n    }\r\n\r\n    public function send(data:Any) {\r\n        if (Std.is(data, Buffer)) {\r\n            var buffer = cast(data, Buffer);\r\n            _ws.send(buffer.readAllAvailableBytes().getData());\r\n        } else {\r\n            _ws.send(data);\r\n        }\r\n    }\r\n\t\r\n    //public function sendSerialized(data:Any)\r\n\t//{\r\n\t\t//_ws.send(s);\r\n        //if (Std.is(data, Buffer)) {\r\n            //var buffer = cast(data, Buffer);\r\n            //_ws.send(buffer.readAllAvailableBytes().getData());\r\n        //} else {\r\n            //_ws.send(data);\r\n        //}\r\n    //}\t\r\n\r\n    public function sendBytes(data:Bytes)\r\n\t{\r\n\t\t#if js\r\n\t\tvar b:JsBuffer = ByteUtils.bytesToJSArrayBuffer(data);\r\n\t\t_ws.send(b);\r\n\t\t#end\r\n    }\t\r\n\t\r\n}\r\n\r\n#elseif sys\r\n\r\n\r\n#if (haxe_ver >= 4)\r\nimport sys.thread.Thread;\r\n#elseif neko\r\nimport neko.vm.Thread;\r\n#elseif cpp\r\nimport cpp.vm.Thread;\r\n#end\r\n\r\nimport haxe.crypto.Base64;\r\nimport haxe.io.Bytes;\r\n\r\nclass WebSocket extends WebSocketCommon {\r\n    public var _host:String;\r\n    public var _port:Int;\r\n    public var _uri:String;\r\n\r\n    private var _processThread:Thread;\r\n    private var _encodedKey:String = \"wskey\";\r\n\r\n    public var binaryType:BinaryType;\r\n\r\n    public var additionalHeaders(get, null):Map<String, String>;\r\n\r\n    public function new(uri:String, immediateOpen=true) {\r\n        var uriRegExp = ~/^(\\w+?):\\/\\/([\\w\\.-]+)(:(\\d+))?(\\/.*)?$/;\r\n\r\n        if ( ! uriRegExp.match(uri)) throw 'Uri not matching websocket uri \"${uri}\"';\r\n\r\n        var proto = uriRegExp.matched(1);\r\n        if (proto == \"wss\") {\r\n            #if (java || cs)\r\n\r\n            throw \"Secure sockets not implemented\";\r\n\r\n            #else\r\n\r\n            _port = 443;\r\n            var s = new SecureSocketImpl();\r\n            super(s);\r\n\r\n            #end\r\n        } else if (proto == \"ws\") {\r\n            _port = 80;\r\n            super();\r\n        } else {\r\n            throw 'Unknown protocol $proto';\r\n        }\r\n\r\n        _host = uriRegExp.matched(2);\r\n        var parsedPort = Std.parseInt(uriRegExp.matched(4));\r\n        if (parsedPort > 0 ) {\r\n            _port = parsedPort;\r\n        }\r\n        _uri = uriRegExp.matched(5);\r\n        if (_uri == null || _uri.length == 0) {\r\n            _uri = \"/\";\r\n        }\r\n\r\n        if (immediateOpen) {\r\n            open();\r\n        }\r\n    }\r\n\r\n\r\n    public function open() {\r\n        if (state != State.Handshake) {\r\n            throw \"Socket already connected\";\r\n        }\r\n        _socket.setBlocking(true);\r\n        _socket.connect(new sys.net.Host(_host), _port);\r\n        _socket.setBlocking(false);\r\n        \r\n        #if !cs\r\n        \r\n        _processThread = Thread.create(processThread);\r\n        _processThread.sendMessage(this);\r\n        \r\n        #else\r\n        \r\n        haxe.MainLoop.addThread(function() {\r\n            Log.debug(\"Thread started\", this.id);\r\n            processLoop(this);\r\n            Log.debug(\"Thread ended\", this.id);\r\n        });\r\n        \r\n        #end\r\n\r\n        sendHandshake();\r\n    }\r\n\r\n    private function processThread() {\r\n        Log.debug(\"Thread started\", this.id);\r\n        var ws:WebSocket = Thread.readMessage(true);\r\n        processLoop(this);\r\n        Log.debug(\"Thread ended\", this.id);\r\n    }\r\n\r\n    private function processLoop(ws:WebSocket) {\r\n        while (ws.state != State.Closed) { // TODO: should think about mutex\r\n            ws.process();\r\n            Sys.sleep(.01);\r\n        }\r\n    }\r\n    \r\n    function get_additionalHeaders() {\r\n        if (additionalHeaders == null) {\r\n            additionalHeaders = new Map<String, String>();\r\n        }\r\n        return additionalHeaders;\r\n    }\r\n\r\n    public function sendHandshake() {\r\n        var httpRequest = new HttpRequest();\r\n        httpRequest.method = \"GET\";\r\n        httpRequest.uri = _uri;\r\n        httpRequest.httpVersion = \"HTTP/1.1\";\r\n\r\n        httpRequest.headers.set(HttpHeader.HOST, _host + \":\" + _port);\r\n        httpRequest.headers.set(HttpHeader.USER_AGENT, \"hxWebSockets\");\r\n        httpRequest.headers.set(HttpHeader.SEC_WEBSOSCKET_VERSION, \"13\");\r\n        httpRequest.headers.set(HttpHeader.UPGRADE, \"websocket\");\r\n        httpRequest.headers.set(HttpHeader.CONNECTION, \"Upgrade\");\r\n        httpRequest.headers.set(HttpHeader.PRAGMA, \"no-cache\");\r\n        httpRequest.headers.set(HttpHeader.CACHE_CONTROL, \"no-cache\");\r\n        httpRequest.headers.set(HttpHeader.ORIGIN, _socket.host().host.toString() + \":\" + _socket.host().port);\r\n\r\n        _encodedKey = generateWSKey();\r\n        httpRequest.headers.set(HttpHeader.SEC_WEBSOCKET_KEY, _encodedKey);\r\n\r\n        if (additionalHeaders != null) {\r\n            for ( k in additionalHeaders.keys()) {\r\n                httpRequest.headers.set(k, additionalHeaders[k]);\r\n            }\r\n        }\r\n\r\n        sendHttpRequest(httpRequest);\r\n    }\r\n\r\n    private override function handleData() {\r\n        switch (state) {\r\n            case State.Handshake:\r\n                var httpResponse = recvHttpResponse();\r\n                if (httpResponse == null) {\r\n                    return;\r\n                }\r\n\r\n                handshake(httpResponse);\r\n                handleData();\r\n            case _:\r\n                super.handleData();\r\n        }\r\n\r\n    }\r\n\r\n    private function handshake(httpResponse:HttpResponse) {\r\n        if (httpResponse.code != 101) {\r\n            if (onerror != null) {\r\n                onerror(httpResponse.headers.get(HttpHeader.X_WEBSOCKET_REJECT_REASON));\r\n            }\r\n            close();\r\n            return;\r\n        }\r\n\r\n        var secKey = httpResponse.headers.get(HttpHeader.SEC_WEBSOSCKET_ACCEPT);\r\n        if (secKey != makeWSKeyResponse(_encodedKey)) {\r\n            if (onerror != null) {\r\n                onerror(\"Error during WebSocket handshake: Incorrect 'Sec-WebSocket-Accept' header value\");\r\n            }\r\n            close();\r\n            return;\r\n        }\r\n\r\n        _onopenCalled = false;\r\n        state = State.Head;\r\n    }\r\n\r\n    private function generateWSKey():String {\r\n        var b = Bytes.alloc(16);\r\n        for (i in 0...16) {\r\n            b.set(i, Std.random(255));\r\n        }\r\n        return Base64.encode(b);\r\n    }\r\n}\r\n\r\n#end","// Haxe version only tested triangulate so far\n\n\n/*\n    PolyK library\n    url: http://polyk.ivank.net\n    Released under MIT licence.\n    \n    Copyright (c) 2012 - 2014 Ivan Kuckir\n    Permission is hereby granted, free of charge, to any person\n    obtaining a copy of this software and associated documentation\n    files (the \"Software\"), to deal in the Software without\n    restriction, including without limitation the rights to use,\n    copy, modify, merge, publish, distribute, sublicense, and/or sell\n    copies of the Software, and to permit persons to whom the\n    Software is furnished to do so, subject to the following\n    conditions:\n    The above copyright notice and this permission notice shall be\n    included in all copies or substantial portions of the Software.\n    THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n    EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n    OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n    NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n    HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n    WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n    FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n    OTHER DEALINGS IN THE SOFTWARE.\n    \n    19. 5. 2014 - Problem with slicing fixed.\n    27. 12. 2015 - Haxe port by user Justin L Mills ( justinfront / nanjizal )\n*/\n\npackage hxPolyK;\ntypedef Rectangle = {\n    var x:Float;\n    var y:Float; \n    var width:Float; \n    var height:Float;\n}\ntypedef PointK = {\n    var x: Float;\n    var y: Float;\n    var flag: Bool;\n}\n// Ray returned by RayCast\n// \"dist\" is the distance of the polygon point\n// \"edge\" is the number of the edge, on which intersection occurs\n// \"norm\" is the normal in that place\n// \"refl\" is reflected direction.\ntypedef Ray = {\n    var dist: Float;\n    var edge: Float;\n    var norm: { x: Float, y: Float };\n    var refl: { x: Float, y: Float } ;\n}\n// Edge returned by ClosestEdge\n// \"dist\" is the distance of the polygon point\n// \"edge\" is the number of the closest edge \n// \"point\" is the closest point on that edge\n// \"norm\" is the normal from \"point\" to [x,y].\ntypedef Edge = {\n    var dist: Float;\n    var edge: Float;\n    var point: { x: Float, y: Float };\n    var norm: { x: Float, y: Float };\n}\nabstract ArrayPairs<T>( Array<T> ) {\n    public function new( arr: Array<T> ):Void this = arr;\n    public var length( get, never ):Int;\n    inline function get_length() return Std.int( this.length/2 );\n    @:arrayAccess inline function access( key: Int ): { x: T, y: T } {\n        var i: Int = Std.int( key*2 );\n        return { x: this[ i ], y: this[ i + 1 ] };\n    }\n    public inline function reverse(): Array<T>{\n        var arr = [];\n        for( i in new ArrayPairs( this ) ){\n            arr.unshift( i.y );\n            arr.unshift( i.x );\n        }\n        this = arr;\n        return arr;\n    }\n}\nabstract ArrayTriple<T>( Array<T> ) {\n    public function new( arr: Array<T> ):Void this = arr;\n    public var length( get, never ):Int;\n    inline function get_length() return Std.int( this.length/3 );\n    @:arrayAccess inline function access( key: Int ): { a: T, b: T, c: T } {\n        var i: Int = Std.int( key*3 );\n        return { a: this[ i ], b: this[ i + 1 ], c: this[ i + 2] };\n    }\n    public inline function reverse(): Array<T>{\n        var arr = [];\n        for( i in new ArrayTriple( this ) ){\n            arr.unshift( i.c );\n            arr.unshift( i.b );\n            arr.unshift( i.a );\n        }\n        this = arr;\n        return arr;\n    }\n}\nclass PolyK{\n    public static inline var small: Float = 0.0000000001;// 1e-10;\n    public function new(){}\n    \n    // Checks, if polygon is simple. Polygon is simple, when its edges don't cross each other.\n    public static inline function isSimple( p: Array<Float> ): Bool {\n        var n = p.length>>1;\n        if( n < 4 ) return true;\n        var a1: PointK = { x: 0., y: 0., flag: false }; \n        var a2: PointK = { x: 0., y: 0., flag: false };\n        var b1: PointK = { x: 0., y: 0., flag: false };\n        var b2: PointK = { x: 0., y: 0., flag: false };\n        var c: PointK = { x: 0., y: 0., flag: false };\n        var ind: Int;\n        for( i in 0...n ){\n            ind = Std.int( 2*i );\n            a1.x = p[ ind ];\n            a1.y = p[ ind + 1 ];\n            if( i == n - 1 ){ \n                a2.x = p[ 0 ];\n                a2.y = p[ 1 ];\n            } else { \n                a2.x = p[ ind + 2 ];\n                a2.y = p[ ind + 3 ];\n            }\n            for( j in 0...n ){\n                if( Math.abs( i - j ) < 2 ) continue;\n                if( j == n - 1 && i == 0 ) continue;\n                if( i == n - 1 && j == 0 ) continue;\n                ind = 2*j;\n                b1.x = p[ ind ];\n                b1.y = p[ ind + 1 ];\n                if( j == n - 1 ){ \n                    b2.x = p[ 0 ];\n                    b2.y = p[ 1 ];\n                } else { \n                    b2.x = p[ ind + 2 ];\n                    b2.y = p[ ind + 3 ];\n                }\n                var c = getLineIntersection( a1, a2, b1, b2 );\n                if( c != null ) return false;\n            }\n        }\n        return true;\n    }\n    \n    // Checks, if polygon is convex. Polygon is convex, when each inner angle is <= 180°.\n    public static inline function isConvex( p: Array<Float> ): Bool {\n        if( p.length < 6 ) return true;\n        var l = p.length - 4;\n        var l2: Int = Std.int( l/2 );\n        var i: Int;\n        for( k in 0...l2 ){ \n            i = k*2;\n            if( !convex( p[ i ], p[ i + 1 ], p[ i + 2 ], p[ i + 3 ], p[ i + 4 ], p[ i + 5 ] ) ) return false;\n        }\n        if( !convex( p[ l ], p[ l + 1 ], p[ l + 2 ], p[ l + 3 ], p[ 0 ], p[ 1 ] ) ) return false;\n        if( !convex( p[ l + 2 ], p[ l + 3 ], p[ 0 ], p[ 1 ], p[ 2 ], p[ 3 ] ) ) return false;\n        return true;\n    }\n    \n    // Returns the area of polygon.\n    public static inline function getArea( p: Array<Float> ): Float {\n        if( p.length < 6 ) return 0;\n        var l = p.length - 2;\n        var sum = 0.;\n        var l2: Int = Std.int( l/2 );\n        var i: Int;\n        for( k in 0...l2 ){\n            i = k*2;\n            sum += ( p[ i + 2 ] - p[ i ] ) * ( p[ i + 1 ] + p[ i + 3 ] );\n        }\n        sum += ( p[ 0 ] - p[ l ] ) * ( p[ l + 1 ] + p[ 1 ] );\n        return - sum * 0.5;\n    }\n    \n    // Returns the Axis-aligned Bounding Box of polygon as Rectangle typedef\n    public static inline function getAABB ( p : Array<Float> ) : Rectangle {\n        var minx = Math.POSITIVE_INFINITY; \n        var miny = Math.POSITIVE_INFINITY;\n        var maxx = Math.NEGATIVE_INFINITY;\n        var maxy = Math.NEGATIVE_INFINITY;\n        for( i in new ArrayPairs( p ) ){\n            minx = Math.min( minx, i.x );\n            maxx = Math.max( maxx, i.x );\n            miny = Math.min( miny, i.y );\n            maxy = Math.max( maxy, i.y );\n        }\n        return { x: minx, y: miny, width: maxx - minx, height: maxy - miny };\n    }\n    \n    public static inline function reverse( p: Array<Float> ):Array<Float> {\n        var ap = new ArrayPairs( p );\n        return ap.reverse();\n    }\n    \n    //Computes the triangulation. Output array is array of triangles (triangle = 3 indices of polygon vertices). E.g.:\n    public static inline function triangulate( p: Array<Float> ): Array<Float> {\n        var n = p.length>>1;\n        if( n < 3 ) return [];\n        var tgs = new Array<Float>();\n        var avl = [];\n        for( i in 0...n ) avl.push( i );\n        var i = 0;\n        var al: Int = n;\n        var i0: Int;\n        var i1: Int;\n        var i2: Int;\n        var vi: Int;\n        var ax: Float;\n        var ay: Float;\n        var bx: Float;\n        var by: Float;\n        var cx: Float;\n        var cy: Float;\n        var earFound: Bool;\n        while( al > 3 ){\n            i0 = avl[ ( i + 0 )%al ];\n            i1 = avl[ ( i + 1 )%al ];\n            i2 = avl[ ( i + 2 )%al ];\n            ax = p[ 2*i0 ];\n            ay = p[ 2*i0 + 1 ];\n            bx = p[ 2*i1 ];\n            by = p[ 2*i1 + 1 ];\n            cx = p[ 2*i2 ];  \n            cy = p[ 2*i2 + 1 ];\n            earFound = false;\n            if( convex( ax, ay, bx, by, cx, cy ) ){\n                earFound = true;\n                for( j in 0...al ){\n                    var vi = avl[ j ];\n                    if( vi==i0 || vi==i1 || vi==i2 ) continue;\n                    if( pointInTriangle( p[ 2*vi ], p[ 2*vi + 1 ], ax, ay, bx, by, cx, cy ) ){ \n                        earFound = false; \n                        break;\n                    }\n                }\n            }\n            if( earFound ){\n                tgs.push( i0 );\n                tgs.push( i1 );\n                tgs.push( i2 );\n                avl.splice( ( i + 1 )%al, 1);\n                al--;\n                i = 0;\n            } else if( i++ > 3*al ) {\n                break;        // no convex angles :(\n            }\n        }\n        tgs.push( avl[ 0 ] );\n        tgs.push( avl[ 1 ] );\n        tgs.push( avl[ 2 ] );\n        return tgs;\n    }\n    \n    // Checks, if polygon contains [ax,ay].\n    // Works with simple polygons only.\n    // TODO: need to rearrange returns to allow inline?\n    public static function containsPoint( p: Array<Float>, px: Float, py: Float ): Bool {\n        var n = p.length>>1;\n        var ax: Float;\n        var ay = p[ 2*n - 3 ] - py; \n        var bx = p[2*n-2]-px;\n        var by = p[2*n-1]-py;\n        var twoi: Int;\n        var lup: Bool = by > ay;\n        var lx: Float;\n        for( i in 0...n ){\n            ax = bx;  \n            ay = by;\n            twoi = 2*i;\n            bx = p[ twoi ] - px;\n            by = p[ twoi + 1 ] - py;\n            if( ay == by ) continue;\n            lup = by > ay;\n        }\n        var depth = 0;\n        for( i in 0...n ) {\n            ax = bx;  \n            ay = by;\n            twoi = 2*i;\n            bx = p[ twoi ] - px;\n            by = p[ twoi + 1 ] - py;\n            if( ay < 0 && by < 0 ) continue;    // both \"up\" or both \"down\"\n            if( ay > 0 && by > 0 ) continue;    // both \"up\" or both \"down\"\n            if( ax < 0 && bx < 0 ) continue;     // both points on the left\n            if( ay == by && Math.min( ax, bx ) <= 0 ) return true;\n            if( ay == by ) continue;\n            lx = ax + ( bx - ax )*( -ay )/( by - ay );\n            if( lx == 0 ) return true;            // point on edge\n            if( lx > 0 ) depth++;\n            if( ay == 0 &&  lup && by > ay ) depth--;    // hit vertex, both up\n            if( ay == 0 && !lup && by < ay ) depth--; // hit vertex, both down\n            lup = by > ay;\n        }\n        return ( depth & 1) == 1;\n    }\n    \n    // Slices the polygon with line segment A-B, defined by [ax,ay] and [bx,by]. \n    // A, B must not lay inside a polygon. Returns an array of polygons.\n    // TODO: can not inline as return not at end, is in easy to adjust?\n    public static function slice( p: Array<Float>, ax: Float, ay: Float, bx: Float, by: Float ): Array<Array<Float>> {\n        if( containsPoint( p, ax, ay ) || containsPoint( p, bx, by ) ) return [ p.slice( 0 ) ];\n        var a = { x: ax, y: ay, flag: false };\n        var b = { x: ax, y: ay, flag: false };\n        var iscs = [];    // intersections\n        var ps = [];    // points\n        for( i in new ArrayPairs( p ) ) ps.push( { x: i.x, y: i.y, flag: false } );\n        var l = ps.length;\n        var isc: PointK;\n        var skip: Bool = false;\n        for( i in 0...l ){\n            if( skip ) {\n                skip = false;\n                continue;\n            }\n            isc = getLineIntersection( a, b, ps[i], ps[ ( i + 1 )%ps.length ] );\n            var fisc = iscs[ 0 ];\n            var lisc = iscs[ iscs.length - 1 ];\n            if( ( isc != null ) && (fisc == null || dist( isc, fisc ) > small ) && ( lisc == null || dist( isc, lisc ) > small ) )//&& (isc.x!=ps[i].x || isc.y!=ps[i].y) )\n            {\n                isc.flag = true;\n                iscs.push( isc );\n                ps.splice( i + 1, 0 );\n                ps.insert( i + 1, isc );\n                skip = true;\n            }\n        }\n        if( iscs.length < 2 ) return [ p.slice( 0 ) ];\n        var comp = function( u, v ): Int { \n            var val: Float = dist( a, u ) - dist( a, v ); \n            if( val > 0 ){\n                return 1;\n            }\n            if( val < 0 ){\n                return -1;\n            }\n            return 0;\n        }\n        iscs.sort( comp );\n        var pgs = [];\n        var dir = 0;\n        while( iscs.length > 0 ) {\n            var n = ps.length;\n            var i0 = iscs[ 0 ];\n            var i1 = iscs[ 1 ];\n            //if(i0.x==i1.x && i0.y==i1.y) { iscs.splice(0,2); continue;}\n            var ind0 = ps.indexOf( i0 );\n            var ind1 = ps.indexOf( i1 );\n            var solved = false;\n            if( firstWithFlag( ps, ind0 ) == ind1 ) {\n                solved = true;\n            } else {\n                i0 = iscs[ 1 ];\n                i1 = iscs[ 0 ];\n                ind0 = ps.indexOf( i0 );\n                ind1 = ps.indexOf( i1 );\n                if( firstWithFlag( ps, ind0 ) == ind1 ) solved = true;\n            }\n            if( solved ){\n                dir--;\n                var pgn = getPoints( ps, ind0, ind1 );\n                pgs.push( pgn );\n                ps = getPoints( ps, ind1, ind0 );\n                i0.flag = i1.flag = false;\n                iscs.splice( 0, 2 );\n                if( iscs.length == 0 ) pgs.push( ps );\n            } else {\n                 dir++;\n                 iscs.reverse(); \n            }\n            if( dir > 1 ) break;\n        }\n        var result = new Array<Array<Float>>();\n        var l = pgs.length;\n        var l2: Int;\n        for( i in 0...l ) {\n            var pg = pgs[ i ];\n            var npg = new Array<Float>();\n            l2 = pg.length;\n            for( j in 0...l2 ){ \n                npg.push( pg[ j ].x );\n                npg.push( pg[ j ].y );\n            }\n            result.push( npg );\n        }\n        return result;\n    }\n\n    // Finds the closest point of polygon, which lays on ray defined by [x,y] (origin) and [dx,dy] (direction).\n    // Returns a Ray typedef\n    // Works with simple polygons only.\n    public static inline function raycast( p: Array<Float>, x: Float, y: Float, dx: Float, dy: Float, isc: Ray ): Ray {\n        var l = p.length - 2;\n        var tp = new Array<PointK>();\n        for( i in 0...10) tp.push( {x: 0., y: 0., flag: false } );\n        var a1 = tp[ 0 ];\n        var a2 = tp[ 1 ];\n        var b1 = tp[ 2 ];\n        var b2 = tp[ 3 ]; \n        var c = tp[ 4 ];\n        a1.x = x; \n        a1.y = y;\n        a2.x = x + dx;\n        a2.y = y+dy;\n        if( isc == null ) isc = { dist: 0, edge: 0, norm:{ x: 0, y: 0 }, refl:{ x: 0, y: 0 } };\n        isc.dist = Math.POSITIVE_INFINITY;\n        var l2: Int = Std.int( l/2 );\n        var i: Int;\n        for( k in 0...l2 ){\n            i = k*2;\n            b1.x = p[ i ];\n            b1.y = p[ i + 1 ];\n            b2.x = p[ i + 2 ];\n            b2.y = p[ i + 3 ];\n            var nisc = rayLineIntersection( a1, a2, b1, b2, c );\n            if( nisc != null ) updateISC( dx, dy, a1, b1, b2, c, i/2, isc );\n        }\n        b1.x = b2.x;\n        b1.y = b2.y;\n        b2.x = p[ 0 ];\n        b2.y = p[ 1 ];\n        var nisc = rayLineIntersection( a1, a2, b1, b2, c );\n        if( nisc != null ) updateISC( dx, dy, a1, b1, b2, c, ( p.length/2 ) - 1, isc );\n        return ( isc.dist != Math.POSITIVE_INFINITY ) ? isc : null;\n    }\n    \n    // Finds the point on polygon edges, which is closest to [x,y]. Returns an Edge typedef\n    public static inline function closestEdge( p: Array<Float>, x: Float, y: Float, isc: Edge ): Edge {\n        var l = p.length - 2;\n        var tp = new Array<PointK>();\n        for( i in 0...10) tp.push( {x: 0., y: 0., flag: false } );\n        var a1 = tp[ 0 ];\n        var b1 = tp[ 2 ];\n        var b2 = tp[ 3 ];\n        var c = tp[ 4 ];\n        a1.x = x; \n        a1.y = y;\n        if( isc == null ) isc = { dist: 0, edge: 0, point: { x: 0, y: 0 }, norm:{ x: 0, y: 0 } };\n        isc.dist = Math.POSITIVE_INFINITY;\n        var l2: Int = Std.int( l/2 );\n        var i: Int;\n        for( k in 0...l2 ){\n            i = k*2;\n            b1.x = p[ i ];\n            b1.y = p[ i + 1 ];\n            b2.x = p[ i + 2 ];\n            b2.y = p[ i + 3 ];\n            pointLineDist( a1, b1, b2, i >> 1, isc );\n        }\n        b1.x = b2.x;\n        b1.y = b2.y;\n        b2.x = p[ 0 ];\n        b2.y = p[ 1 ];\n        pointLineDist( a1, b1, b2, l >> 1, isc );\n        var idst = 1/isc.dist;\n        isc.norm.x = ( x - isc.point.x )*idst;\n        isc.norm.y = ( y - isc.point.y )*idst;\n        return isc;\n    }\n    \n    private static inline function pointLineDist( p: PointK, a: PointK , b: PointK, edge: Float, isc: Edge ){\n        var x = p.x; \n        var y = p.y;\n        var x1 = a.x;\n        var y1 = a.y; \n        var x2 = b.x;\n        var y2 = b.y;\n        var A = x - x1;\n        var B = y - y1;\n        var C = x2 - x1;\n        var D = y2 - y1;\n        var dot = A * C + B * D;\n        var len_sq = C * C + D * D;\n        var param = dot / len_sq;\n        var xx;\n        var yy;\n        if( param < 0 || ( x1 == x2 && y1 == y2 ) ){\n            xx = x1;\n            yy = y1;\n        } else if ( param > 1 ) {\n            xx = x2;\n            yy = y2;\n        } else {\n            xx = x1 + param * C;\n            yy = y1 + param * D;\n        }\n        var dx = x - xx;\n        var dy = y - yy;\n        var dst = Math.sqrt( dx * dx + dy * dy );\n        if( dst < isc.dist ){\n            isc.dist = dst;\n            isc.edge = edge;\n            isc.point.x = xx;\n            isc.point.y = yy;\n        }\n    }\n    \n    private static inline function updateISC( dx: Float, dy: Float, a1: PointK, b1: PointK, b2: PointK, c: PointK, edge: Float, isc: Ray ){\n        var nrl = dist(a1, c);\n        if( nrl < isc.dist ){\n            var ibl = 1/dist( b1, b2 );\n            var nx = -( b2.y - b1.y )*ibl;\n            var ny =  ( b2.x - b1.x )*ibl;\n            var ddot = 2*( dx*nx + dy*ny );\n            isc.dist = nrl;\n            isc.norm.x = nx;  \n            isc.norm.y = ny; \n            isc.refl.x = -ddot*nx + dx;\n            isc.refl.y = -ddot*ny + dy;\n            isc.edge = edge;\n        }\n    }\n        \n    private static inline function getPoints( ps: Array<PointK>, ind0: Int, ind1: Int ): Array<PointK> {\n        var n = ps.length;\n        var nps = [];\n        if( ind1 < ind0 ) ind1 += n;\n        var l = ind1 + 1;\n        for( i in ind0...l ) nps.push( ps[ i%n ] );\n        return nps;\n    }\n    \n    // can not inline return not final\n    private static function firstWithFlag( ps: Array<PointK>, ind: Int ): Int {\n        var n = ps.length;\n        while( true ){\n            ind = ( ind + 1 )%n;\n            if( ps[ ind ].flag ) return ind;\n        }\n    }\n    \n    private static inline function pointInTriangle( px: Float, py: Float, ax: Float, ay: Float, bx: Float, by: Float, cx: Float, cy: Float ): Bool {\n        var v0x = cx - ax;\n        var v0y = cy - ay;\n        var v1x = bx - ax;\n        var v1y = by - ay;\n        var v2x = px - ax;\n        var v2y = py - ay;\n        var dot00 = v0x*v0x + v0y*v0y;\n        var dot01 = v0x*v1x + v0y*v1y;\n        var dot02 = v0x*v2x + v0y*v2y;\n        var dot11 = v1x*v1x + v1y*v1y;\n        var dot12 = v1x*v2x + v1y*v2y;\n        var invDenom = 1 / ( dot00 * dot11 - dot01 * dot01 );\n        var u = ( dot11 * dot02 - dot01 * dot12 ) * invDenom;\n        var v = ( dot00 * dot12 - dot01 * dot02 ) * invDenom;\n        // Check if point is in triangle\n        return ( u >= 0 ) && ( v >= 0 ) && ( u + v < 1 );\n    }\n    \n    private static inline function rayLineIntersection( a1: PointK, a2: PointK, b1: PointK, b2: PointK, c: PointK ): PointK {\n        var dax = a1.x - a2.x; \n        var dbx = b1.x - b2.x;\n        var day = a1.y - a2.y;\n        var dby = b1.y - b2.y;\n        var Den = dax*dby - day*dbx;\n        if( Den == 0 ) return null;    // parallel\n        var A = ( a1.x * a2.y - a1.y * a2.x );\n        var B = ( b1.x * b2.y - b1.y * b2.x );\n        var I = c;\n        var iDen = 1/Den;\n        I.x = ( A*dbx - dax*B ) * iDen;\n        I.y = ( A*dby - day*B ) * iDen;\n        if( !inRect( I, b1, b2 ) ) return null;\n        if( ( day > 0 && I.y > a1.y ) || ( day < 0 && I.y < a1.y ) ) return null; \n        if( ( dax > 0 && I.x > a1.x ) || ( dax < 0 && I.x < a1.x ) ) return null; \n        return I;\n    }\n    \n    private static inline function getLineIntersection( a1: PointK, a2: PointK, b1: PointK, b2: PointK ): PointK {\n        var dax = (a1.x-a2.x), dbx = (b1.x-b2.x);\n        var day = (a1.y-a2.y), dby = (b1.y-b2.y);\n        var Den = dax*dby - day*dbx;\n        if( Den == 0 ) return null;    // parallel\n        var A = ( a1.x * a2.y - a1.y * a2.x );\n        var B = (b1.x * b2.y - b1.y * b2.x);\n        var I = { x: ( A*dbx - dax*B ) / Den, y:( A*dby - day*B ) / Den, flag: false };\n        if( inRect( I, a1, a2 ) && inRect( I, b1, b2 ) ) return I;\n        return null;\n    }\n    \n    private static inline function inRect( a: PointK, b: PointK, c: PointK ): Bool {// a in rect (b,c)\n        var minx = Math.min( b.x, c.x );\n        var maxx = Math.max( b.x, c.x );\n        var miny = Math.min( b.y, c.y );\n        var maxy = Math.max( b.y, c.y );\n        if( minx == maxx ) return ( miny <= a.y && a.y <= maxy );\n        if( miny == maxy ) return ( minx <= a.x && a.x <= maxx);\n        //return (minx <= a.x && a.x <= maxx && miny <= a.y && a.y <= maxy)\n        return ( minx <= a.x + small && a.x - small <= maxx && miny <= a.y + small && a.y - small <= maxy );        \n    }\n    \n    private static inline function convex( ax: Float, ay: Float, bx: Float, by: Float, cx: Float, cy: Float ): Bool { \n        return ( ay - by )*( cx - bx ) + ( bx - ax )*( cy - by ) >= 0;\n    }\n    \n    // calculates distance between points\n    private static inline function dist( a: PointK, b: PointK ): Float {\n        var dx = b.x - a.x;\n        var dy = b.y - a.y;\n        return Math.sqrt( dx*dx + dy*dy );\n    }\n    \n}\n","/*\r\n * Copyright (C)2005-2019 Haxe Foundation\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a\r\n * copy of this software and associated documentation files (the \"Software\"),\r\n * to deal in the Software without restriction, including without limitation\r\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\r\n * and/or sell copies of the Software, and to permit persons to whom the\r\n * Software is furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\r\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\r\n * DEALINGS IN THE SOFTWARE.\r\n */\r\n\r\npackage js;\r\n\r\nimport js.Syntax; // import it here so it's always available in the compiler\r\n\r\nprivate class HaxeError extends js.lib.Error {\r\n\tvar val:Dynamic;\r\n\r\n\t@:pure\r\n\tpublic function new(val:Dynamic) {\r\n\t\tsuper();\r\n\t\tthis.val = val;\r\n\t\tif ((cast js.lib.Error).captureStackTrace)\r\n\t\t\t(cast js.lib.Error).captureStackTrace(this, HaxeError);\r\n\t}\r\n\r\n\tpublic static function wrap(val:Dynamic):js.lib.Error {\r\n\t\treturn if (js.Syntax.instanceof(val, js.lib.Error)) val else new HaxeError(val);\r\n\t}\r\n\r\n\tstatic function __init__() {\r\n\t\tjs.lib.Object.defineProperty((cast HaxeError).prototype, \"message\", {get: () -> (cast String)(js.Lib.nativeThis.val)});\r\n\t}\r\n}\r\n\r\n@:dox(hide)\r\nclass Boot {\r\n\tstatic inline function isClass(o:Dynamic):Bool {\r\n\t\treturn untyped __define_feature__(\"js.Boot.isClass\", o.__name__);\r\n\t}\r\n\r\n\tstatic inline function isInterface(o:Class<Dynamic>):Bool {\r\n\t\treturn untyped __define_feature__(\"js.Boot.isInterface\", o.__isInterface__);\r\n\t}\r\n\r\n\tstatic inline function isEnum(e:Dynamic):Bool {\r\n\t\treturn untyped __define_feature__(\"js.Boot.isEnum\", e.__ename__);\r\n\t}\r\n\r\n\t@:pure static function getClass(o:Null<Dynamic>):Null<Dynamic> {\r\n\t\tif (o == null) {\r\n\t\t\treturn null;\r\n\t\t} else if (Std.is(o, Array)) {\r\n\t\t\treturn Array;\r\n\t\t} else {\r\n\t\t\tvar cl = untyped __define_feature__(\"js.Boot.getClass\", o.__class__);\r\n\t\t\tif (cl != null)\r\n\t\t\t\treturn cl;\r\n\t\t\tvar name = __nativeClassName(o);\r\n\t\t\tif (name != null)\r\n\t\t\t\treturn __resolveNativeClass(name);\r\n\t\t\treturn null;\r\n\t\t}\r\n\t}\r\n\r\n\t@:ifFeature(\"has_enum\")\r\n\tprivate static function __string_rec(o, s:String) {\r\n\t\tuntyped {\r\n\t\t\tif (o == null)\r\n\t\t\t\treturn \"null\";\r\n\t\t\tif (s.length >= 5)\r\n\t\t\t\treturn \"<...>\"; // too much deep recursion\r\n\t\t\tvar t = js.Syntax.typeof(o);\r\n\t\t\tif (t == \"function\" && (isClass(o) || isEnum(o)))\r\n\t\t\t\tt = \"object\";\r\n\t\t\tswitch (t) {\r\n\t\t\t\tcase \"object\":\r\n\t\t\t\t\t#if !js_enums_as_arrays\r\n\t\t\t\t\t__feature__(\"has_enum\", if (o.__enum__) {\r\n\t\t\t\t\t\tvar e = $hxEnums[o.__enum__];\r\n\t\t\t\t\t\tvar n = e.__constructs__[o._hx_index];\r\n\t\t\t\t\t\tvar con = e[n];\r\n\t\t\t\t\t\tif (con.__params__) {\r\n\t\t\t\t\t\t\ts += \"\\t\";\r\n\t\t\t\t\t\t\treturn n + \"(\" + [for (p in (con.__params__ : Array<String>)) __string_rec(o[p], s)].join(\",\") + \")\";\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\treturn n;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t\t#end\r\n\t\t\t\t\tif (js.Syntax.instanceof(o, Array)) {\r\n\t\t\t\t\t\t#if js_enums_as_arrays\r\n\t\t\t\t\t\t__feature__(\"has_enum\", if (o.__enum__) {\r\n\t\t\t\t\t\t\tif (o.length == 2)\r\n\t\t\t\t\t\t\t\treturn o[0];\r\n\t\t\t\t\t\t\tvar str = o[0] + \"(\";\r\n\t\t\t\t\t\t\ts += \"\\t\";\r\n\t\t\t\t\t\t\tfor (i in 2...o.length) {\r\n\t\t\t\t\t\t\t\tif (i != 2)\r\n\t\t\t\t\t\t\t\t\tstr += \",\" + __string_rec(o[i], s);\r\n\t\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t\t\tstr += __string_rec(o[i], s);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\treturn str + \")\";\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\t#end\r\n\t\t\t\t\t\tvar str = \"[\";\r\n\t\t\t\t\t\ts += \"\\t\";\r\n\t\t\t\t\t\tfor (i in 0...o.length)\r\n\t\t\t\t\t\t\tstr += (if (i > 0) \",\" else \"\") + __string_rec(o[i], s);\r\n\t\t\t\t\t\tstr += \"]\";\r\n\t\t\t\t\t\treturn str;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tvar tostr;\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\ttostr = untyped o.toString;\r\n\t\t\t\t\t} catch (e:Dynamic) {\r\n\t\t\t\t\t\t// strange error on IE\r\n\t\t\t\t\t\treturn \"???\";\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (tostr != null && tostr != __js__(\"Object.toString\") && js.Syntax.typeof(tostr) == \"function\") {\r\n\t\t\t\t\t\tvar s2 = o.toString();\r\n\t\t\t\t\t\tif (s2 != \"[object Object]\")\r\n\t\t\t\t\t\t\treturn s2;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tvar str = \"{\\n\";\r\n\t\t\t\t\ts += \"\\t\";\r\n\t\t\t\t\tvar hasp = (o.hasOwnProperty != null);\r\n\t\t\t\t\tvar k:String = null;\r\n\t\t\t\t\t__js__(\"for( {0} in {1} ) {\", k, o);\r\n\t\t\t\t\tif (hasp && !o.hasOwnProperty(k))\r\n\t\t\t\t\t\t__js__(\"continue\");\r\n\t\t\t\t\tif (k == \"prototype\" || k == \"__class__\" || k == \"__super__\" || k == \"__interfaces__\" || k == \"__properties__\")\r\n\t\t\t\t\t\t__js__(\"continue\");\r\n\t\t\t\t\tif (str.length != 2)\r\n\t\t\t\t\t\tstr += \", \\n\";\r\n\t\t\t\t\tstr += s + k + \" : \" + __string_rec(o[k], s);\r\n\t\t\t\t\t__js__(\"}\");\r\n\t\t\t\t\ts = s.substring(1);\r\n\t\t\t\t\tstr += \"\\n\" + s + \"}\";\r\n\t\t\t\t\treturn str;\r\n\t\t\t\tcase \"function\":\r\n\t\t\t\t\treturn \"<function>\";\r\n\t\t\t\tcase \"string\":\r\n\t\t\t\t\treturn o;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\treturn String(o);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t@:pure private static function __interfLoop(cc:Dynamic, cl:Dynamic) {\r\n\t\tif (cc == null)\r\n\t\t\treturn false;\r\n\t\tif (cc == cl)\r\n\t\t\treturn true;\r\n\t\tif (js.lib.Object.prototype.hasOwnProperty.call(cc, \"__interfaces__\")) {\r\n\t\t\tvar intf:Dynamic = cc.__interfaces__;\r\n\t\t\tfor (i in 0...intf.length) {\r\n\t\t\t\tvar i:Dynamic = intf[i];\r\n\t\t\t\tif (i == cl || __interfLoop(i, cl))\r\n\t\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn __interfLoop(cc.__super__, cl);\r\n\t}\r\n\r\n\t@:ifFeature(\"typed_catch\") @:pure private static function __instanceof(o:Dynamic, cl:Dynamic) {\r\n\t\tif (cl == null)\r\n\t\t\treturn false;\r\n\t\tswitch (cl) {\r\n\t\t\tcase Int:\r\n\t\t\t\treturn js.Syntax.typeof(o) == \"number\" && js.Syntax.strictEq(o | 0, o);\r\n\t\t\tcase Float:\r\n\t\t\t\treturn js.Syntax.typeof(o) == \"number\";\r\n\t\t\tcase Bool:\r\n\t\t\t\treturn js.Syntax.typeof(o) == \"boolean\";\r\n\t\t\tcase String:\r\n\t\t\t\treturn js.Syntax.typeof(o) == \"string\";\r\n\t\t\tcase Array:\r\n\t\t\t\treturn js.Syntax.instanceof(o, Array) #if js_enums_as_arrays && o.__enum__ == null #end;\r\n\t\t\tcase Dynamic:\r\n\t\t\t\treturn o != null;\r\n\t\t\tdefault:\r\n\t\t\t\tif (o != null) {\r\n\t\t\t\t\t// Check if o is an instance of a Haxe class or a native JS object\r\n\t\t\t\t\tif (js.Syntax.typeof(cl) == \"function\") {\r\n\t\t\t\t\t\tif (__downcastCheck(o, cl))\r\n\t\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t} else if (js.Syntax.typeof(cl) == \"object\" && __isNativeObj(cl)) {\r\n\t\t\t\t\t\tif (js.Syntax.instanceof(o, cl))\r\n\t\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t\t// do not use isClass/isEnum here\r\n\t\t\t\tuntyped __feature__(\"Class.*\", if (cl == Class && o.__name__ != null) return true);\r\n\t\t\t\tuntyped __feature__(\"Enum.*\", if (cl == Enum && o.__ename__ != null) return true);\r\n\t\t\t\t#if js_enums_as_arrays\r\n\t\t\t\treturn o.__enum__ == cl;\r\n\t\t\t\t#else\r\n\t\t\t\treturn untyped __feature__(\r\n\t\t\t\t\t\"has_enum\",\r\n\t\t\t\t\tif (o.__enum__ != null) ($hxEnums[o.__enum__]) == cl else false,\r\n\t\t\t\t\tfalse\r\n\t\t\t\t);\r\n\t\t\t\t#end\r\n\t\t}\r\n\t}\r\n\r\n\tstatic function __downcastCheck(o:Dynamic, cl:Class<Dynamic>):Bool {\r\n\t\treturn js.Syntax.instanceof(o, cl) || (isInterface(cl) && inline __implements(o, cl));\r\n\t}\r\n\r\n\tstatic function __implements(o:Dynamic, iface:Class<Dynamic>):Bool {\r\n\t\treturn __interfLoop(getClass(o), iface);\r\n\t}\r\n\r\n\t@:ifFeature(\"typed_cast\") private static function __cast(o:Dynamic, t:Dynamic) {\r\n\t\tif (o == null || __instanceof(o, t))\r\n\t\t\treturn o;\r\n\t\telse\r\n\t\t\tthrow \"Cannot cast \" + Std.string(o) + \" to \" + Std.string(t);\r\n\t}\r\n\r\n\tstatic var __toStr:js.lib.Function;\r\n\r\n\tstatic function __init__() {\r\n\t\tBoot.__toStr = (cast {}).toString;\r\n\t}\r\n\r\n\t// get native JS [[Class]]\r\n\tstatic function __nativeClassName(o:Dynamic):String {\r\n\t\tvar name:String = __toStr.call(o).slice(8, -1);\r\n\t\t// exclude general Object and Function\r\n\t\t// also exclude Math and JSON, because instanceof cannot be called on them\r\n\t\tif (name == \"Object\" || name == \"Function\" || name == \"Math\" || name == \"JSON\")\r\n\t\t\treturn null;\r\n\t\treturn name;\r\n\t}\r\n\r\n\t// check for usable native JS object\r\n\tstatic function __isNativeObj(o:Dynamic):Bool {\r\n\t\treturn __nativeClassName(o) != null;\r\n\t}\r\n\r\n\t// resolve native JS class in the global scope:\r\n\tstatic function __resolveNativeClass(name:String) {\r\n\t\treturn js.Lib.global[cast name];\r\n\t}\r\n}\r\n","package kha;\r\n\r\nimport haxe.io.Bytes;\r\nimport haxe.Unserializer;\r\n\r\nusing StringTools;\r\n\r\n@:build(kha.internal.AssetsBuilder.build(\"image\"))\r\nprivate class ImageList {\r\n\tpublic function new() {\r\n\r\n\t}\r\n\r\n\tpublic function get(name: String): Image {\r\n\t\treturn Reflect.field(this, name);\r\n\t}\r\n}\r\n\r\n@:build(kha.internal.AssetsBuilder.build(\"sound\"))\r\nprivate class SoundList {\r\n\tpublic function new() {\r\n\r\n\t}\r\n\r\n\tpublic function get(name: String): Sound {\r\n\t\treturn Reflect.field(this, name);\r\n\t}\r\n}\r\n\r\n@:build(kha.internal.AssetsBuilder.build(\"blob\"))\r\nprivate class BlobList {\r\n\tpublic function new() {\r\n\r\n\t}\r\n\r\n\tpublic function get(name: String): Blob {\r\n\t\treturn Reflect.field(this, name);\r\n\t}\r\n}\r\n\r\n@:build(kha.internal.AssetsBuilder.build(\"font\"))\r\nprivate class FontList {\r\n\tpublic function new() {\r\n\r\n\t}\r\n\r\n\tpublic function get(name: String): Font {\r\n\t\treturn Reflect.field(this, name);\r\n\t}\r\n}\r\n\r\n@:build(kha.internal.AssetsBuilder.build(\"video\"))\r\nprivate class VideoList {\r\n\tpublic function new() {\r\n\r\n\t}\r\n\r\n\tpublic function get(name: String): Video {\r\n\t\treturn Reflect.field(this, name);\r\n\t}\r\n}\r\n\r\nclass Assets {\r\n\tpublic static var images: ImageList = new ImageList();\r\n\tpublic static var sounds: SoundList = new SoundList();\r\n\tpublic static var blobs: BlobList = new BlobList();\r\n\tpublic static var fonts: FontList = new FontList();\r\n\tpublic static var videos: VideoList = new VideoList();\r\n\r\n\t/**\r\n\t * Moves from 0 to 1. Use for loading screens.\r\n\t */\r\n\tpublic static var progress: Float;\r\n\r\n\t/**\r\n\tLoads all assets which were detected by khamake. When running khamake (doing so is Kha's standard build behavior)\r\n\tit creates a files.json in the build/{target}-resources directoy which contains information about all assets which were found.\r\n\r\n\tThe `callback` parameter is always called after loading, even when some or all assets had failures.\r\n\r\n\tAn optional callback parameter `failed` is called for each asset that failed to load.\r\n\r\n\tThe filter parameter can be used to load assets selectively. The Dynamic parameter describes the asset,\r\n\tit contains the very same objects which are listed in files.json.\r\n\r\n\tAdditionally by default all sounds are decompressed. The uncompressSoundsFilter can be used to avoid that.\r\n\tUncompressed sounds can still be played using Audio.stream which is recommended for music.\r\n\t*/\r\n\tpublic static function loadEverything(callback: Void->Void, filter: Dynamic->Bool = null, uncompressSoundsFilter: Dynamic->Bool = null, ?failed: AssetError->Void): Void {\r\n\t\tfinal lists: Array<Dynamic> = [ImageList, SoundList, BlobList, FontList, VideoList];\r\n\t\tfinal listInstances: Array<Dynamic> = [images, sounds, blobs, fonts, videos];\r\n\t\tvar fileCount = 0;\r\n\r\n\t\tfor (list in lists) {\r\n\t\t\tfor (file in Type.getInstanceFields(list)) {\r\n\t\t\t\tif (file.endsWith(\"Description\")) {\r\n\t\t\t\t\tfileCount++;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (fileCount == 0) {\r\n\t\t\tcallback();\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tvar filesLeft = fileCount;\r\n\r\n\t\tfunction loadFunc(desc: Dynamic, done: ()->Void, failure: (err: AssetError)->Void): Void {\r\n\t\t\tfinal name = desc.name;\r\n\t\t\tswitch (desc.type) {\r\n\t\t\t\tcase \"image\":\r\n\t\t\t\t\tAssets.loadImage(name, function (image: Image) done(), failure);\r\n\t\t\t\tcase \"sound\":\r\n\t\t\t\t\tAssets.loadSound(name, function (sound: Sound) {\r\n\t\t\t\t\t\tif (uncompressSoundsFilter == null || uncompressSoundsFilter(desc)) {\r\n\t\t\t\t\t\t\tsound.uncompress(done);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse done();\r\n\t\t\t\t\t}, failure);\r\n\t\t\t\tcase \"blob\":\r\n\t\t\t\t\tAssets.loadBlob(name, function (blob: Blob) done(), failure);\r\n\t\t\t\tcase \"font\":\r\n\t\t\t\t\tAssets.loadFont(name, function (font: Font) done(), failure);\r\n\t\t\t\tcase \"video\":\r\n\t\t\t\t\tAssets.loadVideo(name, function (video: Video) done(), failure);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction onLoaded(): Void {\r\n\t\t\tfilesLeft--;\r\n\t\t\tprogress = 1 - filesLeft / fileCount;\r\n\t\t\tif (filesLeft == 0) callback();\r\n\t\t}\r\n\r\n\t\tfunction onError(err: AssetError): Void {\r\n\t\t\treporter(failed)(err);\r\n\t\t\tonLoaded();\r\n\t\t}\r\n\r\n\t\tfor (i in 0...lists.length) {\r\n\t\t\tfinal list = lists[i];\r\n\t\t\tfinal listInstance = listInstances[i];\r\n\t\t\tfor (field in Type.getInstanceFields(list)) {\r\n\t\t\t\tif (!field.endsWith(\"Description\")) continue;\r\n\t\t\t\tfinal desc = Reflect.field(listInstance, field);\r\n\t\t\t\tif (filter == null || filter(desc)) {\r\n\t\t\t\t\tloadFunc(desc, onLoaded, onError);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tonLoaded();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Loads an image by name which was preprocessed by khamake.\r\n\t *\r\n\t * @param\tname The name as defined by the khafile.\r\n\t * @param\tdone A callback.\r\n\t */\r\n\tpublic static function loadImage(name: String, done: Image -> Void, ?failed: AssetError -> Void, ?pos: haxe.PosInfos): Void {\r\n\t\tvar description = Reflect.field(images, name + \"Description\");\r\n\t\tLoaderImpl.loadImageFromDescription(description, function (image: Image) {\r\n\t\t\tReflect.setField(images, name, image);\r\n\t\t\tdone(image);\r\n\t\t}, reporter(failed, pos));\r\n\t}\r\n\r\n\t/**\r\n\t * Loads an image from a path. Most targets support PNG and JPEG formats.\r\n\t *\r\n\t * @param\tpath The path to the image file.\r\n\t * @param   readable If true, a copy of the image will be kept in main memory for image read operations.\r\n\t * @param\tdone A callback.\r\n\t */\r\n\tpublic static function loadImageFromPath(path: String, readable: Bool, done: Image -> Void, ?failed: AssetError -> Void, ?pos: haxe.PosInfos): Void {\r\n\t\tvar description = { files: [ path ], readable: readable };\r\n\t\tLoaderImpl.loadImageFromDescription(description, done, reporter(failed, pos));\r\n\t}\r\n\r\n\tpublic static var imageFormats(get, null): Array<String>;\r\n\r\n\tprivate static function get_imageFormats(): Array<String> {\r\n\t\treturn LoaderImpl.getImageFormats();\r\n\t}\r\n\r\n\tpublic static function loadBlob(name: String, done: Blob -> Void, ?failed: AssetError -> Void, ?pos: haxe.PosInfos): Void {\r\n\t\tvar description = Reflect.field(blobs, name + \"Description\");\r\n\t\tLoaderImpl.loadBlobFromDescription(description, function (blob: Blob) {\r\n\t\t\tReflect.setField(blobs, name, blob);\r\n\t\t\tdone(blob);\r\n\t\t}, reporter(failed, pos));\r\n\t}\r\n\r\n\tpublic static function loadBlobFromPath(path: String, done: Blob -> Void, ?failed: AssetError -> Void, ?pos: haxe.PosInfos): Void {\r\n\t\tvar description = { files: [ path ] };\r\n\t\tLoaderImpl.loadBlobFromDescription(description, done, reporter(failed, pos));\r\n\t}\r\n\r\n\tpublic static function loadSound(name: String, done: Sound -> Void, ?failed: AssetError -> Void, ?pos: haxe.PosInfos): Void {\r\n\t\tvar description = Reflect.field(sounds, name + \"Description\");\r\n\t\treturn LoaderImpl.loadSoundFromDescription(description, function (sound: Sound) {\r\n\t\t\tReflect.setField(sounds, name, sound);\r\n\t\t\tdone(sound);\r\n\t\t}, reporter(failed, pos));\r\n\t}\r\n\r\n\tpublic static function loadSoundFromPath(path: String, done: Sound -> Void, ?failed: AssetError -> Void, ?pos: haxe.PosInfos): Void {\r\n\t\tvar description = { files: [ path ] };\r\n\t\treturn LoaderImpl.loadSoundFromDescription(description, done, reporter(failed, pos));\r\n\t}\r\n\r\n\tpublic static var soundFormats(get, null): Array<String>;\r\n\r\n\tprivate static function get_soundFormats(): Array<String> {\r\n\t\treturn LoaderImpl.getSoundFormats();\r\n\t}\r\n\r\n\tpublic static function loadFont(name: String, done: Font -> Void, ?failed: AssetError -> Void, ?pos: haxe.PosInfos): Void {\r\n\t\tvar description = Reflect.field(fonts, name + \"Description\");\r\n\t\treturn LoaderImpl.loadFontFromDescription(description, function (font: Font) {\r\n\t\t\tReflect.setField(fonts, name, font);\r\n\t\t\tdone(font);\r\n\t\t}, reporter(failed, pos));\r\n\t}\r\n\r\n\tpublic static function loadFontFromPath(path: String, done: Font -> Void, ?failed: AssetError -> Void, ?pos: haxe.PosInfos): Void {\r\n\t\tvar description = { files: [ path ] };\r\n\t\treturn LoaderImpl.loadFontFromDescription(description, done, reporter(failed, pos));\r\n\t}\r\n\r\n\tpublic static var fontFormats(get, null): Array<String>;\r\n\r\n\tprivate static function get_fontFormats(): Array<String> {\r\n\t\treturn [\"ttf\"];\r\n\t}\r\n\r\n\tpublic static function loadVideo(name: String, done: Video -> Void, ?failed: AssetError -> Void, ?pos: haxe.PosInfos): Void {\r\n\t\tvar description = Reflect.field(videos, name + \"Description\");\r\n\t\treturn LoaderImpl.loadVideoFromDescription(description, function (video: Video) {\r\n\t\t\tReflect.setField(videos, name, video);\r\n\t\t\tdone(video);\r\n\t\t}, reporter(failed, pos));\r\n\t}\r\n\r\n\tpublic static function loadVideoFromPath(path: String, done: Video -> Void, ?failed: AssetError -> Void, ?pos: haxe.PosInfos): Void {\r\n\t\tvar description = { files: [ path ] };\r\n\t\treturn LoaderImpl.loadVideoFromDescription(description, done, reporter(failed, pos));\r\n\t}\r\n\r\n\tpublic static var videoFormats(get, null): Array<String>;\r\n\r\n\tprivate static function get_videoFormats(): Array<String> {\r\n\t\treturn LoaderImpl.getVideoFormats();\r\n\t}\r\n\r\n\tpublic static function reporter(custom: AssetError -> Void, ?pos: haxe.PosInfos)\r\n\t\treturn custom != null ? custom : haxe.Log.trace.bind(_, pos);\r\n}\r\n","package kha.internal;\r\n\r\nimport haxe.Json;\r\nimport haxe.macro.Compiler;\r\nimport haxe.macro.Context;\r\nimport haxe.macro.Expr;\r\n\r\n#if macro\r\nimport sys.io.File;\r\n#end\r\n\r\nusing StringTools;\r\n\r\nclass AssetsBuilder {\r\n\tpublic static function findResources(): String {\r\n\t\t#if macro\r\n\t\tvar output = Compiler.getOutput();\r\n\t\tif (output == \"Nothing__\" || output == \"\") { // For Haxe background compilation\r\n\t\t\t#if kha_output\r\n\t\t\toutput = Compiler.getDefine(\"kha_output\");\r\n\t\t\tif (output.startsWith('\"')) {\r\n\t\t\t\toutput = output.substr(1, output.length - 2);\r\n\t\t\t}\r\n\t\t\t#end\r\n\t\t}\r\n\t\toutput = output.replace(\"\\\\\", \"/\");\r\n\t\toutput = output.substring(0, output.lastIndexOf(\"/\"));\r\n\t\tif (output.endsWith(\"/Assets\")) { // For Unity\r\n\t\t\toutput = output.substring(0, output.lastIndexOf(\"/\"));\r\n\t\t}\r\n\t\tif (output.lastIndexOf(\"/\") >= 0) {\r\n\t\t\tvar system = output.substring(output.lastIndexOf(\"/\") + 1);\r\n\t\t\tif (system.endsWith(\"-build\")) system = system.substr(0, system.length - \"-build\".length);\r\n\t\t\toutput = output.substring(0, output.lastIndexOf(\"/\"));\r\n\t\t\treturn output + \"/\" + system + \"-resources/\";\r\n\t\t}\r\n\t\telse {\r\n\t\t\tif (output.endsWith(\"-build\")) output = output.substr(0, output.length - \"-build\".length);\r\n\t\t\tif (output == \"\") output = \"empty\";\r\n\t\t\treturn output + \"-resources/\";\r\n\t\t}\r\n\t\t#else\r\n\t\treturn \"\";\r\n\t\t#end\r\n\t}\r\n\r\n\tmacro static public function build(type: String): Array<Field> {\r\n\t\tvar fields = Context.getBuildFields();\r\n\t\tvar content = Json.parse(File.getContent(findResources() + \"files.json\"));\r\n\t\tvar files: Iterable<Dynamic> = content.files;\r\n\r\n\t\tvar names = new Array<Expr>();\r\n\r\n\t\tfor (file in files) {\r\n\t\t\tfinal name = file.name;\r\n\t\t\tfinal filename = file.files[0];\r\n\t\t\tfinal pos = Context.currentPos();\r\n\r\n\t\t\tif (file.type == type) {\r\n\r\n\t\t\t\tnames.push(macro $v{name});\r\n\r\n\t\t\t\tswitch (type) {\r\n\t\t\t\t\tcase \"image\":\r\n\t\t\t\t\t\tfields.push({\r\n\t\t\t\t\t\t\tname: name,\r\n\t\t\t\t\t\t\tmeta: [{pos: pos, name: \":keep\"}],\r\n\t\t\t\t\t\t\taccess: [APublic],\r\n\t\t\t\t\t\t\tkind: FVar(macro: kha.Image, macro null),\r\n\t\t\t\t\t\t\tpos: pos\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\tcase \"sound\":\r\n\t\t\t\t\t\tfields.push({\r\n\t\t\t\t\t\t\tname: name,\r\n\t\t\t\t\t\t\tmeta: [{pos: pos, name: \":keep\"}],\r\n\t\t\t\t\t\t\taccess: [APublic],\r\n\t\t\t\t\t\t\tkind: FVar(macro: kha.Sound, macro null),\r\n\t\t\t\t\t\t\tpos: pos\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\tcase \"blob\":\r\n\t\t\t\t\t\tfields.push({\r\n\t\t\t\t\t\t\tname: name,\r\n\t\t\t\t\t\t\tmeta: [{pos: pos, name: \":keep\"}],\r\n\t\t\t\t\t\t\taccess: [APublic],\r\n\t\t\t\t\t\t\tkind: FVar(macro: kha.Blob, macro null),\r\n\t\t\t\t\t\t\tpos: pos\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\tcase \"font\":\r\n\t\t\t\t\t\tfields.push({\r\n\t\t\t\t\t\t\tname: name,\r\n\t\t\t\t\t\t\tmeta: [{pos: pos, name: \":keep\"}],\r\n\t\t\t\t\t\t\taccess: [APublic],\r\n\t\t\t\t\t\t\tkind: FVar(macro: kha.Font, macro null),\r\n\t\t\t\t\t\t\tpos: pos\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\tcase \"video\":\r\n\t\t\t\t\t\tfields.push({\r\n\t\t\t\t\t\t\tname: name,\r\n\t\t\t\t\t\t\tmeta: [{pos: pos, name: \":keep\"}],\r\n\t\t\t\t\t\t\taccess: [APublic],\r\n\t\t\t\t\t\t\tkind: FVar(macro: kha.Video, macro null),\r\n\t\t\t\t\t\t\tpos: pos\r\n\t\t\t\t\t\t});\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfields.push({\r\n\t\t\t\t\tname: name + \"Name\",\r\n\t\t\t\t\tmeta: [],\r\n\t\t\t\t\taccess: [APublic],\r\n\t\t\t\t\tkind: FVar(macro: String, macro $v { name }),\r\n\t\t\t\t\tpos: pos\r\n\t\t\t\t});\r\n\r\n\t\t\t\tfields.push({\r\n\t\t\t\t\tname: name + \"Description\",\r\n\t\t\t\t\tmeta: [{pos: pos, name: \":keep\"}],\r\n\t\t\t\t\taccess: [APublic],\r\n\t\t\t\t\tkind: FVar(macro: Dynamic, macro $v { file }),\r\n\t\t\t\t\tpos: pos\r\n\t\t\t\t});\r\n\r\n\t\t\t\tvar loadExpressions = macro { };\r\n\t\t\t\tswitch (type) {\r\n\t\t\t\t\tcase \"image\":\r\n\t\t\t\t\t\tloadExpressions = macro {\r\n\t\t\t\t\t\t\tAssets.loadImage($v{name}, function (image: Image) done(), failure);\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\tcase \"sound\":\r\n\t\t\t\t\t\tloadExpressions = macro {\r\n\t\t\t\t\t\t\tAssets.loadSound($v{name}, function (sound: Sound) done(), failure);\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\tcase \"blob\":\r\n\t\t\t\t\t\tloadExpressions = macro {\r\n\t\t\t\t\t\t\tAssets.loadBlob($v{name}, function (blob: Blob) done(), failure);\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\tcase \"font\":\r\n\t\t\t\t\t\tloadExpressions = macro {\r\n\t\t\t\t\t\t\tAssets.loadFont($v{name}, function (font: Font) done(), failure);\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\tcase \"video\":\r\n\t\t\t\t\t\tloadExpressions = macro {\r\n\t\t\t\t\t\t\tAssets.loadVideo($v{name}, function (video: Video) done(), failure);\r\n\t\t\t\t\t\t};\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfields.push({\r\n\t\t\t\t\tname: name + \"Load\",\r\n\t\t\t\t\tmeta: [],\r\n\t\t\t\t\taccess: [APublic],\r\n\t\t\t\t\tkind: FFun({\r\n\t\t\t\t\t\tret: null,\r\n\t\t\t\t\t\tparams: null,\r\n\t\t\t\t\t\texpr: loadExpressions,\r\n\t\t\t\t\t\targs: [{\r\n\t\t\t\t\t\t\tvalue: null,\r\n\t\t\t\t\t\t\ttype: Context.toComplexType(Context.getType(\"kha.internal.VoidCallback\")),\r\n\t\t\t\t\t\t\topt: null,\r\n\t\t\t\t\t\t\tname: \"done\"\r\n\t\t\t\t\t\t}, {\r\n\t\t\t\t\t\t\tvalue: null,\r\n\t\t\t\t\t\t\ttype: Context.toComplexType(Context.getType(\"kha.internal.AssetErrorCallback\")),\r\n\t\t\t\t\t\t\topt: true,\r\n\t\t\t\t\t\t\tname: \"failure\"\r\n\t\t\t\t\t\t}]\r\n\t\t\t\t\t}),\r\n\t\t\t\t\tpos: pos\r\n\t\t\t\t});\r\n\r\n\t\t\t\tfields.push({\r\n\t\t\t\t\tname: name + \"Unload\",\r\n\t\t\t\t\tmeta: [],\r\n\t\t\t\t\taccess: [APublic],\r\n\t\t\t\t\tkind: FFun({\r\n\t\t\t\t\t\tret: null,\r\n\t\t\t\t\t\tparams: null,\r\n\t\t\t\t\t\texpr: macro {\r\n\t\t\t\t\t\t\t$i{name}.unload();\r\n\t\t\t\t\t\t\t$i{name} = null;\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\targs: []\r\n\t\t\t\t\t}),\r\n\t\t\t\t\tpos: pos\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfields.push({\r\n\t\t\tname: \"names\",\r\n\t\t\tmeta: [],\r\n\t\t\taccess: [APublic],\r\n\t\t\tkind: FVar(macro: Array<String>, macro $a { names }),\r\n\t\t\tpos: Context.currentPos()\r\n\t\t});\r\n\r\n\t\treturn fields;\r\n\t}\r\n}\r\n","package kha;\r\n\r\nimport haxe.io.Bytes;\r\nimport js.html.ImageElement;\r\nimport js.html.CanvasElement;\r\nimport js.html.webgl.GL;\r\nimport kha.graphics4.TextureFormat;\r\nimport kha.graphics4.DepthStencilFormat;\r\nimport kha.graphics4.Usage;\r\n\r\nclass Image implements Canvas implements Resource {\r\n\tpublic static function create(width: Int, height: Int, format: TextureFormat = null, usage: Usage = null): Image {\r\n\t\tif (format == null) format = TextureFormat.RGBA32;\r\n\t\tif (usage == null) usage = Usage.StaticUsage;\r\n\t\tif (SystemImpl.gl == null) return new CanvasImage(width, height, format, false);\r\n\t\telse return new WebGLImage(width, height, format, false, DepthStencilFormat.NoDepthAndStencil, 1);\r\n\t}\r\n\r\n\tpublic static function create3D(width: Int, height: Int, depth: Int, format: TextureFormat = null, usage: Usage = null): Image {\r\n\t\treturn null;\r\n\t}\r\n\r\n\tpublic static function createRenderTarget(width: Int, height: Int, format: TextureFormat = null, depthStencil: DepthStencilFormat = DepthStencilFormat.NoDepthAndStencil, antiAliasingSamples: Int = 1, contextId: Int = 0): Image {\r\n\t\tif (format == null) format = TextureFormat.RGBA32;\r\n\t\tif (SystemImpl.gl == null) return new CanvasImage(width, height, format, true);\r\n\t\telse return new WebGLImage(width, height, format, true, depthStencil, antiAliasingSamples);\r\n\t}\r\n\r\n\tpublic static function fromCanvas(canvas: CanvasElement): Image {\r\n\t\tif (SystemImpl.gl == null) {\r\n\t\t\tvar img = new CanvasImage(canvas.width, canvas.height, TextureFormat.RGBA32, false);\r\n\t\t\timg.image = canvas;\r\n\t\t\timg.createTexture();\r\n\t\t\treturn img;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tvar img = new WebGLImage(canvas.width, canvas.height, TextureFormat.RGBA32, false, DepthStencilFormat.NoDepthAndStencil, 1);\r\n\t\t\timg.image = canvas;\r\n\t\t\timg.createTexture();\r\n\t\t\treturn img;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic static function fromImage(image: ImageElement, readable: Bool): Image {\r\n\t\tif (SystemImpl.gl == null) {\r\n\t\t\tvar img = new CanvasImage(image.width, image.height, TextureFormat.RGBA32, false);\r\n\t\t\timg.image = image;\r\n\t\t\timg.createTexture();\r\n\t\t\treturn img;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tvar img = new WebGLImage(image.width, image.height, TextureFormat.RGBA32, false, DepthStencilFormat.NoDepthAndStencil, 1);\r\n\t\t\timg.image = image;\r\n\t\t\timg.createTexture();\r\n\t\t\treturn img;\r\n\t\t}\r\n\t}\r\n\t\r\n\tpublic static function fromBytes(bytes: Bytes, width: Int, height: Int, format: TextureFormat = null, usage: Usage = null): Image {\r\n\t\tif (format == null) format = TextureFormat.RGBA32;\r\n\t\tif (usage == null) usage = Usage.StaticUsage;\r\n\t\tif (SystemImpl.gl != null) {\r\n\t\t\tvar img = new WebGLImage(width, height, format, false, DepthStencilFormat.NoDepthAndStencil, 1);\r\n\t\t\timg.image = img.bytesToArray(bytes);\r\n\t\t\timg.createTexture();\r\n\t\t\treturn img;\r\n\t\t}\r\n\t\tvar img = new CanvasImage(width, height, format, false);\r\n\t\tvar g2 : kha.js.CanvasGraphics = cast img.g2;\r\n\t\t@:privateAccess var canvas = g2.canvas;\r\n\t\tvar imageData = new js.html.ImageData(new js.lib.Uint8ClampedArray(bytes.getData()), width, height);\r\n\t\tcanvas.putImageData(imageData, 0, 0);\r\n\t\treturn img;\r\n\t}\r\n\r\n\tpublic static function fromBytes3D(bytes: Bytes, width: Int, height: Int, depth: Int, format: TextureFormat = null, usage: Usage = null): Image {\r\n\t\treturn null;\r\n\t}\r\n\r\n\tpublic static function fromEncodedBytes(bytes: Bytes, fileExtention: String, doneCallback: Image -> Void, errorCallback: String->Void, readable:Bool = false): Void {\r\n\t\tvar dataUrl = \"data:image;base64,\" + haxe.crypto.Base64.encode(bytes);\r\n\t\tvar imageElement = cast(js.Browser.document.createElement('img'), ImageElement);\r\n\t\timageElement.onload = function() doneCallback(fromImage(imageElement, readable));\r\n\t\timageElement.onerror = function() errorCallback(\"Image was not created\");\r\n\t\timageElement.src = dataUrl;\r\n\t}\r\n\r\n\tpublic static function fromVideo(video: kha.js.Video): Image {\r\n\t\tif (SystemImpl.gl == null) {\r\n\t\t\tvar img = new CanvasImage(video.element.videoWidth, video.element.videoHeight, TextureFormat.RGBA32, false);\r\n\t\t\timg.video = video.element;\r\n\t\t\timg.createTexture();\r\n\t\t\treturn img;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tvar img = new WebGLImage(video.element.videoWidth, video.element.videoHeight, TextureFormat.RGBA32, false, DepthStencilFormat.NoDepthAndStencil, 1);\r\n\t\t\timg.video = video.element;\r\n\t\t\timg.createTexture();\r\n\t\t\treturn img;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic static var maxSize(get, null): Int;\r\n\r\n\tpublic static function get_maxSize(): Int {\r\n\t\treturn SystemImpl.gl == null ? 1024 * 8 : SystemImpl.gl.getParameter(GL.MAX_TEXTURE_SIZE);\r\n\t}\r\n\r\n\tpublic static var nonPow2Supported(get, null): Bool;\r\n\r\n\tpublic static function get_nonPow2Supported(): Bool {\r\n\t\treturn SystemImpl.gl != null;\r\n\t}\r\n\t\r\n\tpublic static function renderTargetsInvertedY(): Bool {\r\n\t\treturn true;\r\n\t}\r\n\r\n\tpublic function isOpaque(x: Int, y: Int): Bool {\r\n\t\treturn false;\r\n\t}\r\n\t\r\n\tpublic function at(x: Int, y: Int): Color {\r\n\t\treturn Color.Black;\r\n\t}\r\n\t\r\n\tpublic function unload(): Void {\r\n\r\n\t}\r\n\r\n\tpublic function lock(level: Int = 0): Bytes {\r\n\t\treturn null;\r\n\t}\r\n\t\r\n\tpublic function unlock(): Void {\r\n\r\n\t}\r\n\r\n\tpublic function getPixels(): Bytes {\r\n\t\treturn null;\r\n\t}\r\n\t\r\n\tpublic function generateMipmaps(levels: Int): Void {\r\n\r\n\t}\r\n\r\n\tpublic function setMipmaps(mipmaps: Array<Image>): Void {\r\n\r\n\t}\r\n\r\n\tpublic function setDepthStencilFrom(image: Image): Void {\r\n\r\n\t}\r\n\r\n\tpublic function clear(x: Int, y: Int, z: Int, width: Int, height: Int, depth: Int, color: Color): Void {\r\n\r\n\t}\r\n\r\n\tpublic var width(get, null): Int;\r\n\tprivate function get_width(): Int {\r\n\t\treturn 0;\r\n\t}\r\n\r\n\tpublic var height(get, null): Int;\r\n\tprivate function get_height(): Int {\r\n\t\treturn 0;\r\n\t}\r\n\r\n\tpublic var depth(get, null): Int;\r\n\tprivate function get_depth(): Int {\r\n\t\treturn 1;\r\n\t}\r\n\t\r\n\tpublic var realWidth(get, null): Int;\r\n\tprivate function get_realWidth(): Int {\r\n\t\treturn 0;\r\n\t}\r\n\t\r\n\tpublic var realHeight(get, null): Int;\r\n\tprivate function get_realHeight(): Int {\r\n\t\treturn 0;\r\n\t}\r\n\t\r\n\tpublic var g1(get, null): kha.graphics1.Graphics;\r\n\tprivate function get_g1(): kha.graphics1.Graphics {\r\n\t\treturn null;\r\n\t}\r\n\t\r\n\tpublic var g2(get, null): kha.graphics2.Graphics;\r\n\tprivate function get_g2(): kha.graphics2.Graphics {\r\n\t\treturn null;\r\n\t}\r\n\t\r\n\tpublic var g4(get, null): kha.graphics4.Graphics;\r\n\tprivate function get_g4(): kha.graphics4.Graphics {\r\n\t\treturn null;\r\n\t}\r\n}\r\n","package kha;\r\n\r\nimport haxe.io.Bytes;\r\nimport js.Browser;\r\nimport js.lib.Uint8Array;\r\nimport js.html.VideoElement;\r\nimport js.html.webgl.GL;\r\nimport kha.graphics4.TextureFormat;\r\nimport kha.js.CanvasGraphics;\r\n\r\nclass CanvasImage extends Image {\r\n\tpublic var image: Dynamic;\r\n\tpublic var video: VideoElement;\r\n\t\r\n\tprivate static var context: Dynamic;\r\n\tprivate var data: Dynamic;\r\n\t\r\n\tprivate var myWidth: Int;\r\n\tprivate var myHeight: Int;\r\n\tprivate var format: TextureFormat;\r\n\tprivate var renderTarget: Bool;\r\n\tpublic var frameBuffer: Dynamic;\r\n\t\r\n\tprivate var graphics1: kha.graphics1.Graphics;\r\n\tprivate var g2canvas: CanvasGraphics = null;\r\n\t\r\n\tpublic static function init() {\r\n\t\tvar canvas: Dynamic = Browser.document.createElement(\"canvas\");\r\n\t\tif (canvas != null) {\r\n\t\t\tcontext = canvas.getContext(\"2d\");\r\n\t\t\tcanvas.width = 2048;\r\n\t\t\tcanvas.height = 2048;\r\n\t\t\tcontext.globalCompositeOperation = \"copy\";\r\n\t\t}\r\n\t}\r\n\t\r\n\tpublic function new(width: Int, height: Int, format: TextureFormat, renderTarget: Bool) {\r\n\t\tmyWidth = width;\r\n\t\tmyHeight = height;\r\n\t\tthis.format = format;\r\n\t\tthis.renderTarget = renderTarget;\r\n\t\timage = null;\r\n\t\tvideo = null;\r\n\t\tif (renderTarget) createTexture();\r\n\t}\r\n\t\r\n\toverride private function get_g1(): kha.graphics1.Graphics {\r\n\t\tif (graphics1 == null) {\r\n\t\t\tgraphics1 = new kha.graphics2.Graphics1(this);\r\n\t\t}\r\n\t\treturn graphics1;\r\n\t}\r\n\t\r\n\toverride private function get_g2(): kha.graphics2.Graphics {\r\n\t\tif (g2canvas == null) {\r\n\t\t\tvar canvas: Dynamic = Browser.document.createElement(\"canvas\");\r\n\t\t\timage = canvas;\r\n\t\t\tvar context = canvas.getContext(\"2d\");\r\n\t\t\tcanvas.width = width;\r\n\t\t\tcanvas.height = height;\r\n\t\t\tg2canvas = new CanvasGraphics(context);\r\n\t\t}\r\n\t\treturn g2canvas;\r\n\t}\r\n\t\r\n\toverride private function get_g4(): kha.graphics4.Graphics {\r\n\t\treturn null;\r\n\t}\r\n\t\r\n\toverride private function get_width(): Int {\r\n\t\treturn myWidth;\r\n\t}\r\n\r\n\toverride private function get_height(): Int {\r\n\t\treturn myHeight;\r\n\t}\r\n\r\n\toverride private function get_realWidth(): Int {\r\n\t\treturn myWidth;\r\n\t}\r\n\r\n\toverride private function get_realHeight(): Int {\r\n\t\treturn myHeight;\r\n\t}\r\n\t\r\n\toverride public function isOpaque(x: Int, y: Int): Bool {\r\n\t\tif (data == null) {\r\n\t\t\tif (context == null) return true;\r\n\t\t\telse createImageData();\r\n\t\t}\r\n\t\treturn (data.data[y * Std.int(image.width) * 4 + x * 4 + 3] != 0);\r\n\t}\r\n\t\r\n\toverride public function at(x: Int, y: Int): Color {\r\n\t\tif (data == null) {\r\n\t\t\tif (context == null) return Color.Black;\r\n\t\t\telse createImageData();\r\n\t\t}\r\n\r\n\t\tvar r = data.data[y * Std.int(image.width) * 4 + x * 4];\r\n\t\tvar g = data.data[y * Std.int(image.width) * 4 + x * 4 + 1];\r\n\t\tvar b = data.data[y * Std.int(image.width) * 4 + x * 4 + 2];\r\n\t\tvar a = data.data[y * Std.int(image.width) * 4 + x * 4 + 3];\r\n\r\n\t\treturn Color.fromValue((a << 24) | (r << 16) | (g << 8) | b);\r\n\t}\r\n\t\r\n\tfunction createImageData() {\r\n\t\tcontext.strokeStyle = \"rgba(0,0,0,0)\";\r\n\t\tcontext.fillStyle = \"rgba(0,0,0,0)\";\r\n\t\tcontext.fillRect(0, 0, image.width, image.height);\r\n\t\tcontext.drawImage(image, 0, 0, image.width, image.height, 0, 0, image.width, image.height);\r\n\t\tdata = context.getImageData(0, 0, image.width, image.height);\r\n\t}\r\n\t\t\r\n\tprivate var texture: Dynamic;\r\n\t\r\n\tprivate static function upperPowerOfTwo(v: Int): Int {\r\n\t\tv--;\r\n\t\tv |= v >>> 1;\r\n\t\tv |= v >>> 2;\r\n\t\tv |= v >>> 4;\r\n\t\tv |= v >>> 8;\r\n\t\tv |= v >>> 16;\r\n\t\tv++;\r\n\t\treturn v;\r\n\t}\r\n\t\r\n\tpublic function createTexture() {\r\n\t\tif (SystemImpl.gl == null) return;\r\n\t\ttexture = SystemImpl.gl.createTexture();\r\n\t\t//texture.image = image;\r\n\t\tSystemImpl.gl.bindTexture(GL.TEXTURE_2D, texture);\r\n\t\t//Sys.gl.pixelStorei(Sys.gl.UNPACK_FLIP_Y_WEBGL, true);\r\n\t\t\r\n\t\tSystemImpl.gl.texParameteri(GL.TEXTURE_2D, GL.TEXTURE_MAG_FILTER, GL.LINEAR);\r\n\t\tSystemImpl.gl.texParameteri(GL.TEXTURE_2D, GL.TEXTURE_MIN_FILTER, GL.LINEAR);\r\n\t\tSystemImpl.gl.texParameteri(GL.TEXTURE_2D, GL.TEXTURE_WRAP_S, GL.CLAMP_TO_EDGE);\r\n\t\tSystemImpl.gl.texParameteri(GL.TEXTURE_2D, GL.TEXTURE_WRAP_T, GL.CLAMP_TO_EDGE);\r\n\t\tif (renderTarget) {\r\n\t\t\tframeBuffer = SystemImpl.gl.createFramebuffer();\r\n\t\t\tSystemImpl.gl.bindFramebuffer(GL.FRAMEBUFFER, frameBuffer);\r\n\t\t\tSystemImpl.gl.texImage2D(GL.TEXTURE_2D, 0, GL.RGBA, realWidth, realHeight, 0, GL.RGBA, GL.UNSIGNED_BYTE, null);\r\n\t\t\tSystemImpl.gl.framebufferTexture2D(GL.FRAMEBUFFER, GL.COLOR_ATTACHMENT0, GL.TEXTURE_2D, texture, 0);\r\n\t\t\tSystemImpl.gl.bindFramebuffer(GL.FRAMEBUFFER, null);\r\n\t\t}\r\n\t\telse if (video != null) SystemImpl.gl.texImage2D(GL.TEXTURE_2D, 0, GL.RGBA, GL.RGBA, GL.UNSIGNED_BYTE, video);\r\n\t\telse SystemImpl.gl.texImage2D(GL.TEXTURE_2D, 0, GL.RGBA, GL.RGBA, GL.UNSIGNED_BYTE, image);\r\n\t\t//Sys.gl.generateMipmap(Sys.gl.TEXTURE_2D);\r\n\t\tSystemImpl.gl.bindTexture(GL.TEXTURE_2D, null);\r\n\t}\r\n\t\r\n\tpublic function set(stage: Int): Void {\r\n\t\tSystemImpl.gl.activeTexture(GL.TEXTURE0 + stage);\r\n\t\tSystemImpl.gl.bindTexture(GL.TEXTURE_2D, texture);\r\n\t\tif (video != null) SystemImpl.gl.texImage2D(GL.TEXTURE_2D, 0, GL.RGBA, GL.RGBA, GL.UNSIGNED_BYTE, video);\r\n\t}\r\n\t\r\n\tpublic var bytes: Bytes;\r\n\t\r\n\toverride public function lock(level: Int = 0): Bytes {\r\n\t\tbytes = Bytes.alloc(format == TextureFormat.RGBA32 ? 4 * width * height : width * height);\r\n\t\treturn bytes;\r\n\t}\r\n\t\r\n\toverride public function unlock(): Void {\r\n\t\tif (SystemImpl.gl != null) {\r\n\t\t\ttexture = SystemImpl.gl.createTexture();\r\n\t\t\t//texture.image = image;\r\n\t\t\tSystemImpl.gl.bindTexture(GL.TEXTURE_2D, texture);\r\n\t\t\t//Sys.gl.pixelStorei(Sys.gl.UNPACK_FLIP_Y_WEBGL, true);\r\n\t\t\t\r\n\t\t\tSystemImpl.gl.texParameteri(GL.TEXTURE_2D, GL.TEXTURE_MAG_FILTER, GL.LINEAR);\r\n\t\t\tSystemImpl.gl.texParameteri(GL.TEXTURE_2D, GL.TEXTURE_MIN_FILTER, GL.LINEAR);\r\n\t\t\tSystemImpl.gl.texParameteri(GL.TEXTURE_2D, GL.TEXTURE_WRAP_S, GL.CLAMP_TO_EDGE);\r\n\t\t\tSystemImpl.gl.texParameteri(GL.TEXTURE_2D, GL.TEXTURE_WRAP_T, GL.CLAMP_TO_EDGE);\r\n\t\t\tSystemImpl.gl.texImage2D(GL.TEXTURE_2D, 0, GL.LUMINANCE, width, height, 0, GL.LUMINANCE, GL.UNSIGNED_BYTE, new Uint8Array(bytes.getData()));\r\n\t\t\t\r\n\t\t\tif (SystemImpl.gl.getError() == 1282) {\r\n\t\t\t\tvar rgbaBytes = Bytes.alloc(width * height * 4);\r\n\t\t\t\tfor (y in 0...height) for (x in 0...width) {\r\n\t\t\t\t\tvar value = bytes.get(y * width + x);\r\n\t\t\t\t\trgbaBytes.set(y * width * 4 + x * 4 + 0, value);\r\n\t\t\t\t\trgbaBytes.set(y * width * 4 + x * 4 + 1, value);\r\n\t\t\t\t\trgbaBytes.set(y * width * 4 + x * 4 + 2, value);\r\n\t\t\t\t\trgbaBytes.set(y * width * 4 + x * 4 + 3, 255);\r\n\t\t\t\t}\r\n\t\t\t\tSystemImpl.gl.texImage2D(GL.TEXTURE_2D, 0, GL.RGBA, width, height, 0, GL.RGBA, GL.UNSIGNED_BYTE, new Uint8Array(rgbaBytes.getData()));\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t//Sys.gl.generateMipmap(Sys.gl.TEXTURE_2D);\r\n\t\t\tSystemImpl.gl.bindTexture(GL.TEXTURE_2D, null);\r\n\t\t\tbytes = null;\r\n\t\t}\r\n\t}\r\n\t\r\n\toverride public function getPixels(): Bytes {\r\n\t\t@:privateAccess var context: js.html.CanvasRenderingContext2D = g2canvas.canvas;\r\n\t\tvar imageData: js.html.ImageData = context.getImageData(0, 0, width, height);\r\n\t\tvar bytes = Bytes.alloc(imageData.data.length);\r\n\t\tfor(i in 0...imageData.data.length) {\r\n\t\t\tbytes.set(i, imageData.data[i]);\r\n\t\t}\r\n\t\treturn bytes;\r\n\t}\r\n\r\n\toverride public function unload(): Void {\r\n\t\timage = null;\r\n\t\tvideo = null;\r\n\t\tdata = null;\r\n\t}\r\n}\r\n","package kha;\r\n\r\n/**\r\n * A 32 bit ARGB color value which is represented as an Integer.\r\n */\r\nabstract Color(Int) from Int from UInt to Int to UInt {\r\n\tpublic static inline var Black: Color = 0xff000000;\r\n\tpublic static inline var White: Color = 0xffffffff;\r\n\tpublic static inline var Red: Color = 0xffff0000;\r\n\tpublic static inline var Blue: Color = 0xff0000ff;\r\n\tpublic static inline var Green: Color = 0xff00ff00;\r\n\tpublic static inline var Magenta: Color = 0xffff00ff;\r\n\tpublic static inline var Yellow: Color = 0xffffff00;\r\n\tpublic static inline var Cyan: Color = 0xff00ffff;\r\n\tpublic static inline var Purple: Color = 0xff800080;\r\n\tpublic static inline var Pink: Color = 0xffffc0cb;\r\n\tpublic static inline var Orange: Color = 0xffffa500;\r\n\r\n\tpublic static inline var Transparent: Color = 0x00000000;\r\n\r\n\tstatic inline var invMaxChannelValue: FastFloat = 1 / 255;\r\n\r\n\t/**\r\n\t * Creates a new Color object from a packed 32 bit ARGB value.\r\n\t */\r\n\tpublic static inline function fromValue(value: Int): Color {\r\n\t\treturn new Color(value);\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new Color object from components in the range 0 - 255.\r\n\t */\r\n\tpublic static function fromBytes(r: Int, g: Int, b: Int, a: Int = 255): Color {\r\n\t\treturn new Color((a << 24) | (r << 16) | (g << 8) | b);\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new Color object from components in the range 0 - 1.\r\n\t */\r\n\tpublic static function fromFloats(r: FastFloat, g: FastFloat, b: FastFloat, a: FastFloat = 1): Color {\r\n\t\treturn new Color((Std.int(a * 255) << 24) | (Std.int(r * 255) << 16) | (Std.int(g * 255) << 8) | Std.int(b * 255));\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new Color object from an HTML style #AARRGGBB string.\r\n\t */\r\n\tpublic static function fromString(value: String) {\r\n\t\tif ((value.length == 7 || value.length == 9) && StringTools.fastCodeAt(value, 0) == \"#\".code) {\r\n\t\t\tvar colorValue = Std.parseInt(\"0x\" + value.substr(1));\r\n\t\t\tif (value.length == 7) {\r\n\t\t\t\tcolorValue += 0xFF000000;\r\n\t\t\t}\r\n\t\t\treturn fromValue(colorValue);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthrow \"Invalid Color string: '\" + value + \"'\";\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Contains a byte representing the red color component.\r\n\t */\r\n\tpublic var Rb(get, set): Int;\r\n\t/**\r\n\t * Contains a byte representing the green color component.\r\n\t */\r\n\tpublic var Gb(get, set): Int;\r\n\t/**\r\n\t * Contains a byte representing the blue color component.\r\n\t */\r\n\tpublic var Bb(get, set): Int;\r\n\t/**\r\n\t * Contains a byte representing the alpha color component (more exactly the opacity component - a value of 0 is fully transparent).\r\n\t */\r\n\tpublic var Ab(get, set): Int;\r\n\t/**\r\n\t * Contains a float representing the red color component.\r\n\t */\r\n\tpublic var R(get, set): FastFloat;\r\n\t/**\r\n\t * Contains a float representing the green color component.\r\n\t */\r\n\tpublic var G(get, set): FastFloat;\r\n\t/**\r\n\t * Contains a float representing the blue color component.\r\n\t */\r\n\tpublic var B(get, set): FastFloat;\r\n\t/**\r\n\t * Contains a float representing the alpha color component (more exactly the opacity component - a value of 0 is fully transparent).\r\n\t */\r\n\tpublic var A(get, set): FastFloat;\r\n\r\n\tprivate function new(value: Int) {\r\n\t\tthis = value;\r\n\t}\r\n\r\n\t/**\r\n\t * Return this Color instance as Int.\r\n\t */\r\n\tpublic var value(get, set): Int;\r\n\r\n\tprivate inline function get_value(): Int {\r\n\t\treturn this;\r\n\t}\r\n\r\n\tprivate inline function set_value(value: Int): Int {\r\n\t\tthis = value;\r\n\t\treturn this;\r\n\t}\r\n\r\n\tprivate inline function get_Rb(): Int {\r\n\t\treturn (this & 0x00ff0000) >>> 16;\r\n\t}\r\n\r\n\tprivate inline function get_Gb(): Int {\r\n\t\treturn (this & 0x0000ff00) >>> 8;\r\n\t}\r\n\r\n\tprivate inline function get_Bb(): Int {\r\n\t\treturn this & 0x000000ff;\r\n\t}\r\n\r\n\tprivate inline function get_Ab(): Int {\r\n\t\treturn this >>> 24;\r\n\t}\r\n\r\n\tprivate inline function set_Rb(i: Int): Int {\r\n\t\tthis = (Ab << 24) | (i << 16) | (Gb << 8) | Bb;\r\n\t\treturn i;\r\n\t}\r\n\r\n\tprivate inline function set_Gb(i: Int): Int {\r\n\t\tthis = (Ab << 24) | (Rb << 16) | (i << 8) | Bb;\r\n\t\treturn i;\r\n\t}\r\n\r\n\tprivate inline function set_Bb(i: Int): Int {\r\n\t\tthis = (Ab << 24) | (Rb << 16) | (Gb << 8) | i;\r\n\t\treturn i;\r\n\t}\r\n\r\n\tprivate inline function set_Ab(i: Int): Int {\r\n\t\tthis = (i << 24) | (Rb << 16) | (Gb << 8) | Bb;\r\n\t\treturn i;\r\n\t}\r\n\r\n\tprivate inline function get_R(): FastFloat {\r\n\t\treturn get_Rb() * invMaxChannelValue;\r\n\t}\r\n\r\n\tprivate inline function get_G(): FastFloat {\r\n\t\treturn get_Gb() * invMaxChannelValue;\r\n\t}\r\n\r\n\tprivate inline function get_B(): FastFloat {\r\n\t\treturn get_Bb() * invMaxChannelValue;\r\n\t}\r\n\r\n\tprivate inline function get_A(): FastFloat {\r\n\t\treturn get_Ab() * invMaxChannelValue;\r\n\t}\r\n\r\n\tprivate inline function set_R(f: FastFloat): FastFloat {\r\n\t\tthis = (Std.int(A * 255) << 24) | (Std.int(f * 255) << 16) | (Std.int(G * 255) << 8) | Std.int(B * 255);\r\n\t\treturn f;\r\n\t}\r\n\r\n\tprivate inline function set_G(f: FastFloat): FastFloat {\r\n\t\tthis = (Std.int(A * 255) << 24) | (Std.int(R * 255) << 16) | (Std.int(f * 255) << 8) | Std.int(B * 255);\r\n\t\treturn f;\r\n\t}\r\n\r\n\tprivate inline function set_B(f: FastFloat): FastFloat {\r\n\t\tthis = (Std.int(A * 255) << 24) | (Std.int(R * 255) << 16) | (Std.int(G * 255) << 8) | Std.int(f * 255);\r\n\t\treturn f;\r\n\t}\r\n\r\n\tprivate inline function set_A(f: FastFloat): FastFloat {\r\n\t\tthis = (Std.int(f * 255) << 24) | (Std.int(R * 255) << 16) | (Std.int(G * 255) << 8) | Std.int(B * 255);\r\n\t\treturn f;\r\n\t}\r\n}\r\n","package kha;\n\nimport js.Browser;\n\nclass Display {\n\tstatic var instance: Display = new Display();\n\n\tfunction new() {\n\n\t}\n\n\tpublic static var primary(get, never): Display;\n\n\tstatic function get_primary(): Display {\n\t\treturn instance;\n\t}\n\n\tpublic static var all(get, never): Array<Display>;\n\n\tstatic function get_all(): Array<Display> {\n\t\treturn [primary];\n\t}\n\n\tpublic var available(get, never): Bool;\n\n\tfunction get_available(): Bool {\n\t\treturn true;\n\t}\n\n\tpublic var name(get, never): String;\n\n\tfunction get_name(): String {\n\t\treturn \"Display\";\n\t}\n\n\tpublic var x(get, never): Int;\n\n\tfunction get_x(): Int {\n\t\treturn js.Browser.window.screen.left;\n\t}\n\n\tpublic var y(get, never): Int;\n\n\tfunction get_y(): Int {\n\t\treturn js.Browser.window.screen.top;\n\t}\n\n\tpublic var width(get, never): Int;\n\n\tfunction get_width(): Int {\n\t\treturn js.Browser.window.screen.width;\n\t}\n\n\tpublic var height(get, never): Int;\n\n\tfunction get_height(): Int {\n\t\treturn js.Browser.window.screen.height;\n\t}\n\n\tpublic var frequency(get, never): Int;\n\n\tfunction get_frequency(): Int {\n\t\treturn 60;\n\t}\n\n\tpublic var pixelsPerInch(get, never): Int;\n\n\tfunction get_pixelsPerInch(): Int {\n\t\tvar dpiElement = Browser.document.createElement('div');\n\t\tdpiElement.style.position = \"absolute\";\n\t\tdpiElement.style.width = \"1in\";\n\t\tdpiElement.style.height = \"1in\";\n\t\tdpiElement.style.left = \"-100%\";\n\t\tdpiElement.style.top = \"-100%\";\n\t\tBrowser.document.body.appendChild(dpiElement);\n\t\tvar dpi:Int = dpiElement.offsetHeight;\n\t\tdpiElement.remove();\n\t\treturn dpi;\n\t}\n\n\tpublic var modes(get, never): Array<DisplayMode>;\n\n\tfunction get_modes(): Array<DisplayMode> {\n\t\treturn [];\n\t}\n}\n","package kha;\r\n\r\n/**\r\n * A Framebuffer object represents the framebuffer of a kha.Window, which\r\n * typically contains a color, depth and stencil buffer. It is used to\r\n * query Graphics interfaces for rendering images which are directly visible.\r\n */\r\nclass Framebuffer implements Canvas {\r\n\tvar window: Int;\r\n\tvar graphics1: kha.graphics1.Graphics;\r\n\tvar graphics2: kha.graphics2.Graphics;\r\n\tvar graphics4: kha.graphics4.Graphics;\r\n\t//**var graphics5: kha.graphics5.Graphics;\r\n\r\n\t@:noCompletion\r\n\t@:noDoc\r\n\tpublic function new(window: Int, g1: kha.graphics1.Graphics, g2: kha.graphics2.Graphics, g4: kha.graphics4.Graphics/*, ?g5: kha.graphics5.Graphics*/) {\r\n\t\tthis.window = window;\r\n\t\tthis.graphics1 = g1;\r\n\t\tthis.graphics2 = g2;\r\n\t\tthis.graphics4 = g4;\r\n\t\t//this.graphics5 = g5;\r\n\t}\r\n\r\n\t@:noCompletion\r\n\t@:noDoc\r\n\tpublic function init(g1: kha.graphics1.Graphics, g2: kha.graphics2.Graphics, g4: kha.graphics4.Graphics/*, ?g5: kha.graphics5.Graphics*/): Void {\r\n\t\tthis.graphics1 = g1;\r\n\t\tthis.graphics2 = g2;\r\n\t\tthis.graphics4 = g4;\r\n\t\t//this.graphics5 = g5;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a kha.graphics1.Graphics interface for the framebuffer.\r\n\t */\r\n\tpublic var g1(get, never): kha.graphics1.Graphics;\r\n\r\n\tprivate function get_g1(): kha.graphics1.Graphics {\r\n\t\treturn graphics1;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a kha.graphics2.Graphics interface for the framebuffer.\r\n\t */\r\n\tpublic var g2(get, never): kha.graphics2.Graphics;\r\n\r\n\tprivate function get_g2(): kha.graphics2.Graphics {\r\n\t\treturn graphics2;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a kha.graphics4.Graphics interface for the framebuffer.\r\n\t */\r\n\tpublic var g4(get, never): kha.graphics4.Graphics;\r\n\r\n\tprivate function get_g4(): kha.graphics4.Graphics {\r\n\t\treturn graphics4;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a kha.graphics5.Graphics interface for the framebuffer.\r\n\t */\r\n\t/*public var g5(get, never): kha.graphics5.Graphics;\r\n\r\n\tprivate function get_g5(): kha.graphics5.Graphics {\r\n\t\treturn graphics5;\r\n\t}*/\r\n\r\n\t/**\r\n\t * Returns the width of the framebuffer in pixels.\r\n\t */\r\n\tpublic var width(get, null): Int;\r\n\r\n\tfunction get_width(): Int {\r\n\t\treturn System.windowWidth(window);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the height of the framebuffer in pixels.\r\n\t */\r\n\tpublic var height(get, null): Int;\r\n\r\n\tfunction get_height(): Int {\r\n\t\treturn System.windowHeight(window);\r\n\t}\r\n}\r\n","package kha;\n\n@:structInit\nclass FramebufferOptions {\n\t@:optional public var frequency: Int = 60;\n\t@:optional public var verticalSync: Bool = true;\n\t@:optional public var colorBufferBits: Int = 32;\n\t@:optional public var depthBufferBits: Int = 16;\n\t@:optional public var stencilBufferBits: Int = 8;\n\t@:optional public var samplesPerPixel: Int = 1;\n\n\tpublic function new(?frequency: Int = 60, ?verticalSync: Bool = true, ?colorBufferBits: Int = 32, ?depthBufferBits: Int = 16, ?stencilBufferBits: Int = 8, ?samplesPerPixel: Int = 1) {\n\t\tthis.frequency = frequency;\n\t\tthis.verticalSync = verticalSync;\n\t\tthis.colorBufferBits = colorBufferBits;\n\t\tthis.depthBufferBits = depthBufferBits;\n\t\tthis.stencilBufferBits = stencilBufferBits;\n\t\tthis.samplesPerPixel = samplesPerPixel;\n\t}\n}\n","package kha;\r\n\r\nimport haxe.ds.Vector;\r\nimport haxe.io.Bytes;\r\nimport kha.graphics2.truetype.StbTruetype;\r\nimport kha.graphics4.TextureFormat;\r\nimport kha.graphics4.Usage;\r\n\r\nclass AlignedQuad {\r\n\tpublic function new() {\r\n\r\n\t}\r\n\r\n\t// top-left\r\n\tpublic var x0: Float;\r\n\tpublic var y0: Float;\r\n\tpublic var s0: Float;\r\n\tpublic var t0: Float;\r\n\r\n\t// bottom-right\r\n\tpublic var x1: Float;\r\n\tpublic var y1: Float;\r\n\tpublic var s1: Float;\r\n\tpublic var t1: Float;\r\n\r\n\tpublic var xadvance: Float;\r\n}\r\n\r\nclass KravurImage {\r\n\tprivate var mySize: Float;\r\n\r\n\tprivate var chars: Vector<Stbtt_bakedchar>;\r\n\tprivate var texture: Image;\r\n\tpublic var width: Int;\r\n\tpublic var height: Int;\r\n\tprivate var baseline: Float;\r\n\r\n\tpublic static var charBlocks: Array<Int>;\r\n\r\n\tpublic function new(size: Int, ascent: Int, descent: Int, lineGap: Int, width: Int, height: Int, chars: Vector<Stbtt_bakedchar>, pixels: Blob) {\r\n\t\tmySize = size;\r\n\t\tthis.width = width;\r\n\t\tthis.height = height;\r\n\t\tthis.chars = chars;\r\n\t\tbaseline = ascent;\r\n\t\tfor (char in chars) {\r\n\t\t\tchar.yoff += baseline;\r\n\t\t}\r\n\t\ttexture = Image.create(width, height, TextureFormat.L8);\r\n\t\tvar bytes = texture.lock();\r\n\t\tvar pos: Int = 0;\r\n\t\tfor (y in 0...height) for (x in 0...width) {\r\n\t\t\tbytes.set(pos, pixels.readU8(pos));\r\n\t\t\t++pos;\r\n\t\t}\r\n\t\ttexture.unlock();\r\n\t}\r\n\r\n\tpublic function getTexture(): Image {\r\n\t\treturn texture;\r\n\t}\r\n\r\n\tpublic function getBakedQuad(q: AlignedQuad, char_index: Int, xpos: Float, ypos: Float): AlignedQuad {\r\n\t\tif (char_index >= chars.length) return null;\r\n\t\tvar ipw: Float = 1.0 / width;\r\n\t\tvar iph: Float = 1.0 / height;\r\n\t\tvar b = chars[char_index];\r\n\t\tif (b == null) return null;\r\n\t\tvar round_x: Int = Math.round(xpos + b.xoff);\r\n\t\tvar round_y: Int = Math.round(ypos + b.yoff);\r\n\r\n\t\tq.x0 = round_x;\r\n\t\tq.y0 = round_y;\r\n\t\tq.x1 = round_x + b.x1 - b.x0;\r\n\t\tq.y1 = round_y + b.y1 - b.y0;\r\n\r\n\t\tq.s0 = b.x0 * ipw;\r\n\t\tq.t0 = b.y0 * iph;\r\n\t\tq.s1 = b.x1 * ipw;\r\n\t\tq.t1 = b.y1 * iph;\r\n\r\n\t\tq.xadvance = b.xadvance;\r\n\r\n\t\treturn q;\r\n\t}\r\n\r\n\tprivate function getCharWidth(charIndex: Int): Float {\r\n\t\tif (chars.length == 0) return 0;\r\n\t\tvar offset = charBlocks[0];\r\n\t\tif (charIndex < offset) return chars[0].xadvance;\r\n\r\n\t\tfor (i in 1...Std.int(charBlocks.length/2)) {\r\n\t\t\tvar prevEnd = charBlocks[i*2-1];\r\n\t\t\tvar start = charBlocks[i*2];\r\n\t\t\tif (charIndex > start-1) offset += start-1 - prevEnd;\r\n\t\t}\r\n\r\n\t\tif (charIndex - offset >= chars.length) return chars[0].xadvance;\r\n\t\treturn chars[charIndex - offset].xadvance;\r\n\t}\r\n\r\n\tpublic function getHeight(): Float {\r\n\t\treturn mySize;\r\n\t}\r\n\r\n\tpublic function stringWidth(str: String): Float {\r\n\t\tvar width: Float = 0;\r\n\t\tfor (c in 0...str.length) {\r\n\t\t\twidth += getCharWidth(str.charCodeAt(c));\r\n\t\t}\r\n\t\treturn width;\r\n\t}\r\n\r\n\tpublic function charactersWidth(characters: Array<Int>, start: Int, length: Int): Float {\r\n\t\tvar width: Float = 0;\r\n\t\tfor (i in start...start + length) {\r\n\t\t\twidth += getCharWidth(characters[i]);\r\n\t\t}\r\n\t\treturn width;\r\n\t}\r\n\r\n\tpublic function getBaselinePosition(): Float {\r\n\t\treturn baseline;\r\n\t}\r\n}\r\n\r\nclass Kravur implements Resource {\r\n\t// Do not put static data in Kravur because it is overwritten\r\n\t// when <canvas> is used - but it's still used by the overwriting class.\r\n\r\n\tprivate var oldGlyphs: Array<Int>;\r\n\tprivate var blob: Blob;\r\n\tprivate var images: Map<Int, KravurImage> = new Map();\r\n\r\n\tpublic function new(blob: Blob) {\r\n\t\tthis.blob = blob;\r\n\t}\r\n\r\n\tpublic static function fromBytes(bytes: Bytes): Kravur {\r\n\t\treturn new Kravur(Blob.fromBytes(bytes));\r\n\t}\r\n\r\n\tpublic function _get(fontSize: Int): KravurImage {\r\n\t\tvar glyphs = kha.graphics2.Graphics.fontGlyphs;\r\n\r\n\t\tif (glyphs != oldGlyphs) {\r\n\t\t\toldGlyphs = glyphs;\r\n\t\t\t// save first/last chars of sequences\r\n\t\t\tKravurImage.charBlocks = [glyphs[0]];\r\n\t\t\tvar nextChar = KravurImage.charBlocks[0] + 1;\r\n\t\t\tfor (i in 1...glyphs.length) {\r\n\t\t\t\tif (glyphs[i] != nextChar) {\r\n\t\t\t\t\tKravurImage.charBlocks.push(glyphs[i - 1]);\r\n\t\t\t\t\tKravurImage.charBlocks.push(glyphs[i]);\r\n\t\t\t\t\tnextChar = glyphs[i] + 1;\r\n\t\t\t\t} else nextChar++;\r\n\t\t\t}\r\n\t\t\tKravurImage.charBlocks.push(glyphs[glyphs.length - 1]);\r\n\t\t}\r\n\r\n\t\tvar imageIndex = fontSize * 10000 + glyphs.length;\r\n\t\tif (!images.exists(imageIndex)) {\r\n\t\t\tvar width: Int = 64;\r\n\t\t\tvar height: Int = 32;\r\n\t\t\tvar baked = new Vector<Stbtt_bakedchar>(glyphs.length);\r\n\t\t\tfor (i in 0...baked.length) {\r\n\t\t\t\tbaked[i] = new Stbtt_bakedchar();\r\n\t\t\t}\r\n\r\n\t\t\tvar pixels: Blob = null;\r\n\r\n\t\t\tvar status: Int = -1;\r\n\t\t\twhile (status <= 0) {\r\n\t\t\t\tif (height < width) height *= 2;\r\n\t\t\t\telse width *= 2;\r\n\t\t\t\tpixels = Blob.alloc(width * height);\r\n\t\t\t\tstatus = StbTruetype.stbtt_BakeFontBitmap(blob, 0, fontSize, pixels, width, height, glyphs, baked);\r\n\t\t\t}\r\n\r\n\t\t\t// TODO: Scale pixels down if they exceed the supported texture size\r\n\r\n\t\t\tvar info = new Stbtt_fontinfo();\r\n\t\t\tStbTruetype.stbtt_InitFont(info, blob, 0);\r\n\r\n\t\t\tvar metrics = StbTruetype.stbtt_GetFontVMetrics(info);\r\n\t\t\tvar scale = StbTruetype.stbtt_ScaleForPixelHeight(info, fontSize);\r\n\t\t\tvar ascent = Math.round(metrics.ascent * scale); // equals baseline\r\n\t\t\tvar descent = Math.round(metrics.descent * scale);\r\n\t\t\tvar lineGap = Math.round(metrics.lineGap * scale);\r\n\r\n\t\t\tvar image = new KravurImage(Std.int(fontSize), ascent, descent, lineGap, width, height, baked, pixels);\r\n\t\t\timages[imageIndex] = image;\r\n\t\t\treturn image;\r\n\t\t}\r\n\t\treturn images[imageIndex];\r\n\t}\r\n\r\n\tpublic function height(fontSize: Int): Float {\r\n\t\treturn _get(fontSize).getHeight();\r\n\t}\r\n\r\n\tpublic function width(fontSize: Int, str: String): Float {\r\n\t\treturn _get(fontSize).stringWidth(str);\r\n\t}\r\n\r\n\tpublic function widthOfCharacters(fontSize: Int, characters: Array<Int>, start: Int, length: Int): Float {\r\n\t\treturn _get(fontSize).charactersWidth(characters, start, length);\r\n\t}\r\n\r\n\tpublic function baseline(fontSize: Int): Float {\r\n\t\treturn _get(fontSize).getBaselinePosition();\r\n\t}\r\n\r\n\tpublic function unload(): Void {\r\n\t\tblob = null;\r\n\t\timages = null;\r\n\t}\r\n}\r\n","package kha;\r\n\r\nimport js.Browser;\r\nimport js.html.ImageElement;\r\nimport js.html.XMLHttpRequest;\r\nimport haxe.io.Bytes;\r\nimport kha.Blob;\r\nimport kha.js.WebAudioSound;\r\nimport kha.js.MobileWebAudioSound;\r\nimport kha.graphics4.TextureFormat;\r\nimport kha.graphics4.Usage;\r\n\r\nusing StringTools;\r\n\r\nclass LoaderImpl {\r\n\tpublic static function getImageFormats(): Array<String> {\r\n\t\treturn [\"png\", \"jpg\", \"hdr\"];\r\n\t}\r\n\r\n\tpublic static function loadImageFromDescription(desc: Dynamic, done: kha.Image -> Void, failed: AssetError -> Void) {\r\n\t\tvar readable = Reflect.hasField(desc, \"readable\") ? desc.readable : false;\r\n\t\tif (StringTools.endsWith(desc.files[0], \".hdr\")) {\r\n\t\t\tloadBlobFromDescription(desc, function(blob) {\r\n\t\t\t\tvar hdrImage = kha.internal.HdrFormat.parse(blob.toBytes());\r\n\t\t\t\tdone(Image.fromBytes(hdrImage.data.view.buffer, hdrImage.width, hdrImage.height, TextureFormat.RGBA128, readable ? Usage.DynamicUsage : Usage.StaticUsage));\r\n\t\t\t}, failed);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tvar img: ImageElement = cast Browser.document.createElement(\"img\");\r\n\t\t\timg.onerror = function( event: Dynamic ) failed({ url: desc.files[0], error: event });\r\n\t\t\timg.onload = function(event: Dynamic) done(Image.fromImage(img, readable));\r\n\t\t\timg.crossOrigin = \"\";\r\n\t\t\timg.src = desc.files[0];\r\n\t\t}\r\n\t}\r\n\r\n\tpublic static function getSoundFormats(): Array<String> {\r\n\t\tvar element = Browser.document.createAudioElement();\r\n\t\tvar formats = new Array<String>();\r\n\t\t#if !kha_debug_html5\r\n\t\tif (element.canPlayType(\"audio/mp4\") != \"\") formats.push(\"mp4\");\r\n\t\tif (element.canPlayType(\"audio/mp3\") != \"\") formats.push(\"mp3\");\r\n\t\tif (element.canPlayType(\"audio/wav\") != \"\") formats.push(\"wav\");\r\n\t\t#end\r\n\t\tif (SystemImpl._hasWebAudio || element.canPlayType(\"audio/ogg\") != \"\") formats.push(\"ogg\");\r\n\t\treturn formats;\r\n\t}\r\n\r\n\tpublic static function loadSoundFromDescription(desc: Dynamic, done: kha.Sound -> Void, failed: AssetError -> Void) {\r\n\t\tif (SystemImpl._hasWebAudio) {\r\n\t\t\t#if !kha_debug_html5\r\n\t\t\tvar element = Browser.document.createAudioElement();\r\n\t\t\tif (element.canPlayType(\"audio/mp4\") != \"\") {\r\n\t\t\t\tfor (i in 0...desc.files.length) {\r\n\t\t\t\t\tvar file: String = desc.files[i];\r\n\t\t\t\t\tif (file.endsWith(\".mp4\")) {\r\n\t\t\t\t\t\tnew WebAudioSound(file, done, failed);\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (element.canPlayType(\"audio/mp3\") != \"\") {\r\n\t\t\t\tfor (i in 0...desc.files.length) {\r\n\t\t\t\t\tvar file: String = desc.files[i];\r\n\t\t\t\t\tif (file.endsWith(\".mp3\")) {\r\n\t\t\t\t\t\tnew WebAudioSound(file, done, failed);\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (element.canPlayType(\"audio/wav\") != \"\") {\r\n\t\t\t\tfor (i in 0...desc.files.length) {\r\n\t\t\t\t\tvar file: String = desc.files[i];\r\n\t\t\t\t\tif (file.endsWith(\".wav\")) {\r\n\t\t\t\t\t\tnew WebAudioSound(file, done, failed);\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t#end\r\n\t\t\tfor (i in 0...desc.files.length) {\r\n\t\t\t\tvar file: String = desc.files[i];\r\n\t\t\t\tif (file.endsWith(\".ogg\")) {\r\n\t\t\t\t\tnew WebAudioSound(file, done, failed);\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if (SystemImpl.mobile) {\r\n\t\t\tvar element = Browser.document.createAudioElement();\r\n\t\t\tif (element.canPlayType(\"audio/mp4\") != \"\") {\r\n\t\t\t\tfor (i in 0...desc.files.length) {\r\n\t\t\t\t\tvar file: String = desc.files[i];\r\n\t\t\t\t\tif (file.endsWith(\".mp4\")) {\r\n\t\t\t\t\t\tnew MobileWebAudioSound(file, done, failed);\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (element.canPlayType(\"audio/mp3\") != \"\") {\r\n\t\t\t\tfor (i in 0...desc.files.length) {\r\n\t\t\t\t\tvar file: String = desc.files[i];\r\n\t\t\t\t\tif (file.endsWith(\".mp3\")) {\r\n\t\t\t\t\t\tnew MobileWebAudioSound(file, done, failed);\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (element.canPlayType(\"audio/wav\") != \"\") {\r\n\t\t\t\tfor (i in 0...desc.files.length) {\r\n\t\t\t\t\tvar file: String = desc.files[i];\r\n\t\t\t\t\tif (file.endsWith(\".wav\")) {\r\n\t\t\t\t\t\tnew MobileWebAudioSound(file, done, failed);\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tfor (i in 0...desc.files.length) {\r\n\t\t\t\tvar file: String = desc.files[i];\r\n\t\t\t\tif (file.endsWith(\".ogg\")) {\r\n\t\t\t\t\tnew MobileWebAudioSound(file, done, failed);\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tnew kha.js.Sound(desc.files, done, failed);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic static function getVideoFormats(): Array<String> {\r\n\t\t#if kha_debug_html5\r\n\t\treturn [\"webm\"];\r\n\t\t#else\r\n\t\treturn [\"mp4\", \"webm\"];\r\n\t\t#end\r\n\t}\r\n\r\n\tpublic static function loadVideoFromDescription(desc: Dynamic, done: kha.Video -> Void, failed: AssetError -> Void): Void {\r\n\t\tkha.js.Video.fromFile(desc.files, done);\r\n\t}\r\n\r\n\tpublic static function loadRemote( desc: Dynamic, done: Blob -> Void, failed: AssetError -> Void ) {\r\n\t\tvar request = untyped new XMLHttpRequest();\r\n\t\trequest.open(\"GET\", desc.files[0], true);\r\n\t\trequest.responseType = \"arraybuffer\";\r\n\r\n\t\trequest.onreadystatechange = function() {\r\n\t\t\tif (request.readyState != 4) return;\r\n\t\t\tif ((request.status >= 200 && request.status < 400) ||\r\n\t\t\t\t(request.status == 0 && request.statusText == '')) { // Blobs loaded using --allow-file-access-from-files\r\n\t\t\t\tvar bytes: Bytes = null;\r\n\t\t\t\tvar arrayBuffer = request.response;\r\n\t\t\t\tif (arrayBuffer != null) {\r\n\t\t\t\t\tvar byteArray: Dynamic = untyped __js__(\"new Uint8Array(arrayBuffer)\");\r\n\t\t\t\t\tbytes = Bytes.ofData(byteArray);\r\n\t\t\t\t}\r\n\t\t\t\telse if (request.responseBody != null) {\r\n\t\t\t\t\tvar data: Dynamic = untyped __js__(\"VBArray(request.responseBody).toArray()\");\r\n\t\t\t\t\tbytes = Bytes.alloc(data.length);\r\n\t\t\t\t\tfor (i in 0...data.length) bytes.set(i, data[i]);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tfailed({ url: desc.files[0] });\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tdone(new Blob(bytes));\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tfailed({ url: desc.files[0] });\r\n\t\t\t}\r\n\t\t}\r\n\t\trequest.send(null);\r\n\t}\r\n\r\n\tpublic static function loadBlobFromDescription(desc: Dynamic, done: Blob -> Void, failed: AssetError -> Void) {\r\n\t#if kha_debug_html5\r\n\t\tvar isUrl = desc.files[0].startsWith('http');\r\n\r\n\t\tif (isUrl) {\r\n\t\t\tloadRemote(desc, done, failed);\r\n\t\t}\r\n\t\telse {\r\n\t\t\ttry\r\n\t\t\t{\r\n\t\t\t\tvar fs = untyped __js__(\"require('electron').remote.require('fs')\");\r\n\t\t\t\tvar path = untyped __js__(\"require('electron').remote.require('path')\");\r\n\t\t\t\tvar app = untyped __js__(\"require('electron').remote.require('electron').app\");\r\n\t\t\t\tvar url = if (path.isAbsolute(desc.files[0])) desc.files[0] else path.join(app.getAppPath(), desc.files[0]);\r\n\t\t\t\tfs.readFile(url, function (err, data) {\r\n\t\t\t\t\tif (err != null) {\r\n\t\t\t\t\t\tfailed({ url: url, error: err });\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tvar byteArray: Dynamic = untyped __js__(\"new Uint8Array(data)\");\r\n\t\t\t\t\tvar bytes = Bytes.alloc(byteArray.byteLength);\r\n\t\t\t\t\tfor (i in 0...byteArray.byteLength) bytes.set(i, byteArray[i]);\r\n\t\t\t\t\tdone(new Blob(bytes));\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\tcatch(err:Dynamic)\r\n\t\t\t{\r\n\t\t\t\tloadRemote(desc, done, failed);\r\n\t\t\t}\r\n\t\t}\r\n#else\r\n\t\tloadRemote(desc, done, failed);\r\n#end\r\n\t}\r\n\r\n\tpublic static function loadFontFromDescription(desc: Dynamic, done: Font -> Void, failed: AssetError -> Void): Void {\r\n\t\tloadBlobFromDescription(desc, function (blob: Blob) {\r\n\t\t\tdone(new Font(blob));\r\n\t\t}, failed);\r\n\t}\r\n\r\n\t/*override public function loadURL(url: String): Void {\r\n\t\t// inDAgo hack\r\n\t\tif (url.substr(0, 1) == '#')\r\n\t\t\tBrowser.location.hash = url.substr(1, url.length - 1);\r\n\t\telse\r\n\t\t\tBrowser.window.open(url, \"Kha\");\r\n\t}\r\n\r\n\toverride public function setNormalCursor() {\r\n\t\tMouse.SystemCursor = \"default\";\r\n\t\tMouse.UpdateSystemCursor();\r\n\t}\r\n\r\n\toverride public function setHandCursor() {\r\n\t\tMouse.SystemCursor = \"pointer\";\r\n\t\tMouse.UpdateSystemCursor();\r\n\t}*/\r\n}\r\n","package kha;\r\n\r\nclass TimeTask {\r\n\tpublic var task: Void -> Bool;\r\n\t\r\n\tpublic var start: Float;\r\n\tpublic var period: Float;\r\n\tpublic var duration: Float;\r\n\tpublic var next: Float;\r\n\t\r\n\tpublic var id: Int;\r\n\tpublic var groupId: Int;\r\n\tpublic var active: Bool;\r\n\tpublic var paused: Bool;\r\n\t\r\n\tpublic function new() {\r\n\t\t\r\n\t}\r\n}\r\n\r\nclass FrameTask {\r\n\tpublic var task: Void -> Bool;\r\n\tpublic var priority: Int;\r\n\tpublic var id: Int;\r\n\tpublic var active: Bool;\r\n\tpublic var paused: Bool;\r\n\t\r\n\tpublic function new(task: Void -> Bool, priority: Int, id: Int) {\r\n\t\tthis.task = task;\r\n\t\tthis.priority = priority;\r\n\t\tthis.id = id;\r\n\t\tactive = true;\r\n\t\tpaused = false;\r\n\t}\r\n}\r\n\r\nclass Scheduler {\r\n\tprivate static var timeTasks: Array<TimeTask>;\r\n\tprivate static var pausedTimeTasks: Array<TimeTask>;\r\n\tprivate static var outdatedTimeTasks: Array<TimeTask>;\r\n\tprivate static var timeTasksScratchpad: Array<TimeTask>;\r\n\tprivate static inline var timeWarpSaveTime: Float = 10.0;\r\n\r\n\tprivate static var frameTasks: Array<FrameTask>;\t\r\n\tprivate static var toDeleteFrame : Array<FrameTask>;\r\n\t\r\n\tprivate static var current: Float;\r\n\tprivate static var lastTime: Float;\r\n\t\r\n\tprivate static var frame_tasks_sorted: Bool;\r\n\tprivate static var stopped: Bool;\r\n\tprivate static var vsync: Bool;\r\n\r\n\tprivate static var onedifhz: Float;\r\n\r\n\tprivate static var currentFrameTaskId: Int;\r\n\tprivate static var currentTimeTaskId: Int;\r\n\tprivate static var currentGroupId: Int;\r\n\r\n\tprivate static var DIF_COUNT = 3;\r\n\tprivate static var maxframetime = 0.5;\r\n\t\r\n\tprivate static var deltas: Array<Float>;\r\n\t\r\n\tprivate static var startTime: Float = 0;\r\n\t\r\n\tprivate static var activeTimeTask: TimeTask = null;\r\n\t\r\n\tpublic static function init(): Void {\r\n\t\tdeltas = new Array<Float>();\r\n\t\tfor (i in 0...DIF_COUNT) deltas[i] = 0;\r\n\t\t\r\n\t\tstopped = true;\r\n\t\tframe_tasks_sorted = true;\r\n\t\tcurrent = lastTime = realTime();\r\n\r\n\t\tcurrentFrameTaskId = 0;\r\n\t\tcurrentTimeTaskId  = 0;\r\n\t\tcurrentGroupId     = 0;\r\n\t\t\r\n\t\ttimeTasks = [];\r\n\t\tpausedTimeTasks = [];\r\n\t\toutdatedTimeTasks = [];\r\n\t\ttimeTasksScratchpad = [];\r\n\t\tframeTasks = [];\r\n\t\ttoDeleteFrame = [];\r\n\t}\r\n\t\r\n\tpublic static function start(restartTimers : Bool = false): Void {\r\n\t\tvsync = Window.get(0).vSynced;\r\n\t\tvar hz = Display.primary.frequency;\r\n\t\tif (hz >= 57 && hz <= 63) hz = 60;\r\n\t\tonedifhz = 1.0 / hz;\r\n\r\n\t\tstopped = false;\r\n\t\tresetTime();\r\n\t\tlastTime = realTime() - startTime;\r\n\t\tfor (i in 0...DIF_COUNT) deltas[i] = 0;\r\n\t\t\r\n\t\tif (restartTimers) {\r\n\t\t\tfor (timeTask in timeTasks) {\r\n\t\t\t\ttimeTask.paused = false;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tfor (frameTask in frameTasks) {\r\n\t\t\t\tframeTask.paused = false;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\tpublic static function stop(): Void {\r\n\t\tstopped = true;\r\n\t}\r\n\t\r\n\tpublic static function isStopped(): Bool {\r\n\t\treturn stopped;\r\n\t}\r\n\r\n\tprivate static function warpTimeTasksBack(time: Float, tasks: Array<TimeTask>): Void {\r\n\t\tfor (timeTask in tasks) {\r\n\t\t\tif (timeTask.start >= time) {\r\n\t\t\t\ttimeTask.next = timeTask.start;\r\n\t\t\t}\r\n\t\t\telse if (timeTask.period > 0) {\r\n\t\t\t\tvar sinceStart = time - timeTask.start;\r\n\t\t\t\tvar times = Math.ceil(sinceStart / timeTask.period);\r\n\t\t\t\ttimeTask.next = timeTask.start + times * timeTask.period;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tpublic static function warp(time: Float): Void {\r\n\t\tif (time < lastTime) {\r\n\t\t\tcurrent = time;\r\n\t\t\tlastTime = time;\r\n\t\t\t\r\n\t\t\twarpTimeTasksBack(time, outdatedTimeTasks);\r\n\t\t\twarpTimeTasksBack(time, timeTasks);\r\n\t\t\t\r\n\t\t\tfor (task in outdatedTimeTasks) {\r\n\t\t\t\tif (task.next >= time) {\r\n\t\t\t\t\ttimeTasksScratchpad.push(task);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tfor (task in timeTasksScratchpad) {\r\n\t\t\t\toutdatedTimeTasks.remove(task);\r\n\t\t\t}\r\n\t\t\tfor (task in timeTasksScratchpad) {\r\n\t\t\t\tinsertSorted(timeTasks, task);\r\n\t\t\t}\r\n\t\t\twhile (timeTasksScratchpad.length > 0) {\r\n\t\t\t\ttimeTasksScratchpad.remove(timeTasksScratchpad[0]);\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if (time > lastTime) {\r\n\t\t\t// TODO: Changing startTime line prevents clients from falling into a\r\n\t\t\t// warp-forward-then-wait-for-systemtime-to-catch-up-loop that causes\r\n\t\t\t// choppy movement (e.g. every 3rd frame forward 3 times).\r\n\t\t\t// But it causes backwards jumps in originally constant movements.\r\n\t\t\t// And on HTML5 packets are received while no frames are executed,\r\n\t\t\t// which causes the client to overtakes the server and then move\r\n\t\t\t// farther away with each packet while being unable to synch back\r\n\t\t\t// (backwards warping is not allowed to change startTime).\r\n\t\t\tstartTime -= (time - lastTime);\r\n\t\t\t\r\n\t\t\tcurrent = time;\r\n\t\t\tlastTime = time;\r\n\t\t\t\r\n\t\t\texecuteTimeTasks(time);\r\n\t\t}\r\n\t}\r\n\t\r\n\tpublic static function executeFrame(): Void {\r\n\t\tvar now: Float = realTime() - startTime;\r\n\t\tvar delta = now - lastTime;\r\n\t\t\r\n\t\tvar frameEnd: Float = current;\r\n\t\t\r\n\t\tif (delta >= 0) {\r\n\t\t\tif (kha.netsync.Session.the() == null) {\r\n\t\t\t\t//tdif = 1.0 / 60.0; //force fixed frame rate\r\n\t\t\t\t\r\n\t\t\t\tif (delta > maxframetime) {\r\n\t\t\t\t\tstartTime += delta - maxframetime;\r\n\t\t\t\t\tdelta = maxframetime;\r\n\t\t\t\t\tframeEnd += delta;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tif (vsync) {\r\n\t\t\t\t\t\t// this is optimized not to run at exact speed\r\n\t\t\t\t\t\t// but to run as fluid as possible\r\n\t\t\t\t\t\tvar realdif = onedifhz;\r\n\t\t\t\t\t\twhile (realdif < delta - onedifhz) {\r\n\t\t\t\t\t\t\trealdif += onedifhz;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tdelta = realdif;\r\n\t\t\t\t\t\tfor (i in 0...DIF_COUNT - 2) {\r\n\t\t\t\t\t\t\tdelta += deltas[i];\r\n\t\t\t\t\t\t\tdeltas[i] = deltas[i + 1];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tdelta += deltas[DIF_COUNT - 2];\r\n\t\t\t\t\t\tdelta /= DIF_COUNT;\r\n\t\t\t\t\t\tdeltas[DIF_COUNT - 2] = realdif;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tframeEnd += delta;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tfor (i in 0...DIF_COUNT - 1) {\r\n\t\t\t\t\t\t\tdeltas[i] = deltas[i + 1];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tdeltas[DIF_COUNT - 1] = delta;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tvar next: Float = 0;\r\n\t\t\t\t\t\tfor (i in 0...DIF_COUNT) {\r\n\t\t\t\t\t\t\tnext += deltas[i];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tnext /= DIF_COUNT;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t//delta = interpolated_delta; // average the frame end estimation\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t//lastTime = now;\r\n\t\t\t\t\t\tframeEnd += next;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tframeEnd += delta;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tlastTime = frameEnd;\r\n\t\t\tif (!stopped) { // Stop simulation time\r\n\t\t\t\tcurrent = frameEnd;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t// Extend endpoint by paused time (individually paused tasks)\r\n\t\t\tfor (pausedTask in pausedTimeTasks) {\r\n\t\t\t\tpausedTask.next += delta;\r\n\t\t\t}\r\n\r\n\t\t\tif (stopped) {\r\n\t\t\t\t// Extend endpoint by paused time (running tasks)\r\n\t\t\t\tfor (timeTask in timeTasks) {\r\n\t\t\t\t\ttimeTask.next += delta;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\texecuteTimeTasks(frameEnd);\r\n\r\n\t\t\t// Maintain outdated task list\r\n\t\t\tfor (task in outdatedTimeTasks) {\r\n\t\t\t\tif (task.next < frameEnd - timeWarpSaveTime) {\r\n\t\t\t\t\ttimeTasksScratchpad.push(task);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tfor (task in timeTasksScratchpad) {\r\n\t\t\t\toutdatedTimeTasks.remove(task);\r\n\t\t\t}\r\n\t\t\twhile (timeTasksScratchpad.length > 0) {\r\n\t\t\t\ttimeTasksScratchpad.remove(timeTasksScratchpad[0]);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tsortFrameTasks();\r\n\t\tfor (frameTask in frameTasks) {\r\n\t\t\tif (!stopped && !frameTask.paused && frameTask.active) {\r\n\t\t\t\tif (!frameTask.task()) frameTask.active = false;\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tfor (frameTask in frameTasks) {\r\n\t\t\tif (!frameTask.active) {\r\n\t\t\t\ttoDeleteFrame.push(frameTask);\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\twhile (toDeleteFrame.length > 0) {\r\n\t\t\tframeTasks.remove(toDeleteFrame.pop());\r\n\t\t}\r\n\t}\r\n\r\n\tprivate static function executeTimeTasks(until: Float) {\r\n\t\twhile (timeTasks.length > 0) {\r\n\t\t\tactiveTimeTask = timeTasks[0];\r\n\t\t\t\r\n\t\t\tif (activeTimeTask.next <= until) {\r\n\t\t\t\tactiveTimeTask.next += activeTimeTask.period;\r\n\t\t\t\ttimeTasks.remove(activeTimeTask);\r\n\t\t\t\t\r\n\t\t\t\tif (activeTimeTask.active && activeTimeTask.task()) {\r\n\t\t\t\t\tif (activeTimeTask.period > 0 && (activeTimeTask.duration == 0 || activeTimeTask.duration >= activeTimeTask.start + activeTimeTask.next)) {\r\n\t\t\t\t\t\tinsertSorted(timeTasks, activeTimeTask);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tarchiveTimeTask(activeTimeTask, until);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tactiveTimeTask.active = false;\r\n\t\t\t\t\tarchiveTimeTask(activeTimeTask, until);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\tactiveTimeTask = null;\r\n\t}\r\n\r\n\tprivate static function archiveTimeTask(timeTask: TimeTask, frameEnd: Float) {\r\n\t\t#if sys_server\r\n\t\tif (timeTask.next > frameEnd - timeWarpSaveTime) {\r\n\t\t\toutdatedTimeTasks.push(timeTask);\r\n\t\t}\r\n\t\t#end\r\n\t}\r\n\r\n\t/**\r\n\t * An approximation of the amount of time (in fractional seconds) that elapsed while the game was active.\r\n\t * This value is optimized for achieving smooth framerates.\r\n\t */\r\n\tpublic static function time(): Float {\r\n\t\treturn current;\r\n\t}\r\n\t\r\n\t/**\r\n\t * The amount of time (in fractional seconds) that elapsed since the game started.\r\n\t*/\r\n\tpublic static function realTime(): Float {\r\n\t\treturn System.time;\r\n\t}\r\n\t\r\n\tpublic static function resetTime(): Void {\r\n\t\tvar now = System.time;\r\n\t\tvar dif = now - startTime;\r\n\t\tstartTime = now;\r\n\t\tfor (timeTask in timeTasks) {\r\n\t\t\ttimeTask.start -= dif;\r\n\t\t\ttimeTask.next -= dif;\r\n\t\t}\r\n\t\tfor (i in 0...DIF_COUNT) deltas[i] = 0;\r\n\t\tcurrent = 0;\r\n\t\tlastTime = 0;\r\n\t}\r\n\t\r\n\tpublic static function addBreakableFrameTask(task: Void -> Bool, priority: Int): Int {\r\n\t\tframeTasks.push(new FrameTask(task, priority, ++currentFrameTaskId));\r\n\t\tframe_tasks_sorted = false;\r\n\t\treturn currentFrameTaskId;\r\n\t}\r\n\t\r\n\tpublic static function addFrameTask(task: Void -> Void, priority: Int): Int {\r\n\t\treturn addBreakableFrameTask(function () {\r\n\t\t\ttask();\r\n\t\t\treturn true;\r\n\t\t}, priority);\r\n\t}\r\n\t\r\n\tpublic static function pauseFrameTask(id: Int, paused: Bool): Void {\r\n\t\tfor (frameTask in frameTasks) {\r\n\t\t\tif (frameTask.id == id) {\r\n\t\t\t\tframeTask.paused = paused;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\tpublic static function removeFrameTask(id: Int): Void {\r\n\t\tfor (frameTask in frameTasks) {\r\n\t\t\tif (frameTask.id == id) {\r\n\t\t\t\tframeTask.active = false;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tpublic static function generateGroupId(): Int {\r\n\t\treturn ++currentGroupId;\r\n\t}\r\n\t\r\n\tpublic static function addBreakableTimeTaskToGroup(groupId: Int, task: Void -> Bool, start: Float, period: Float = 0, duration: Float = 0): Int {\r\n\t\tvar t = new TimeTask();\r\n\t\tt.active = true;\r\n\t\tt.task = task;\r\n\t\tt.id = ++currentTimeTaskId;\r\n\t\tt.groupId = groupId;\r\n\r\n\t\tt.start = current + start;\r\n\t\tt.period = 0;\r\n\t\tif (period != 0) t.period = period;\r\n\t\tt.duration = 0; //infinite\r\n\t\tif (duration != 0) t.duration = t.start + duration;\r\n\r\n\t\tt.next = t.start;\r\n\t\tinsertSorted(timeTasks, t);\r\n\t\treturn t.id;\r\n\t}\r\n\t\r\n\tpublic static function addTimeTaskToGroup(groupId: Int, task: Void -> Void, start: Float, period: Float = 0, duration: Float = 0): Int {\r\n\t\treturn addBreakableTimeTaskToGroup(groupId, function () {\r\n\t\t\ttask();\r\n\t\t\treturn true;\r\n\t\t}, start, period, duration);\r\n\t}\r\n\t\r\n\tpublic static function addBreakableTimeTask(task: Void -> Bool, start: Float, period: Float = 0, duration: Float = 0): Int {\r\n\t\treturn addBreakableTimeTaskToGroup(0, task, start, period, duration);\r\n\t}\r\n\t\r\n\tpublic static function addTimeTask(task: Void -> Void, start: Float, period: Float = 0, duration: Float = 0): Int {\r\n\t\treturn addTimeTaskToGroup(0, task, start, period, duration);\r\n\t}\r\n\r\n\tprivate static function getTimeTask(id: Int): TimeTask {\r\n\t\tif (activeTimeTask != null && activeTimeTask.id == id) return activeTimeTask;\r\n\t\tfor (timeTask in timeTasks) {\r\n\t\t\tif (timeTask.id == id) {\r\n\t\t\t\treturn timeTask;\r\n\t\t\t}\r\n\t\t}\r\n\t\tfor (timeTask in pausedTimeTasks) {\r\n\t\t\tif (timeTask.id == id) {\r\n\t\t\t\treturn timeTask;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\tpublic static function pauseTimeTask(id: Int, paused: Bool): Void {\r\n\t\tvar timeTask = getTimeTask(id);\r\n\t\tif (timeTask != null) {\r\n\t\t\tpauseRunningTimeTask(timeTask, paused);\r\n\t\t}\r\n\t\tif (activeTimeTask != null && activeTimeTask.id == id) {\r\n\t\t\tactiveTimeTask.paused = paused;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate static function pauseRunningTimeTask(timeTask: TimeTask, paused: Bool): Void {\r\n\t\ttimeTask.paused = paused;\r\n\t\tif (paused) {\r\n\t\t\ttimeTasks.remove(timeTask);\r\n\t\t\tpausedTimeTasks.push(timeTask);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tinsertSorted(timeTasks, timeTask);\r\n\t\t\tpausedTimeTasks.remove(timeTask);\r\n\t\t}\r\n\t}\r\n\t\r\n\tpublic static function pauseTimeTasks(groupId: Int, paused: Bool): Void {\r\n\t\tfor (timeTask in timeTasks) {\r\n\t\t\tif (timeTask.groupId == groupId) {\r\n\t\t\t\tpauseRunningTimeTask(timeTask, paused);\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (activeTimeTask != null && activeTimeTask.groupId == groupId) {\r\n\t\t\tactiveTimeTask.paused = paused;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic static function removeTimeTask(id: Int): Void {\r\n\t\tvar timeTask = getTimeTask(id);\r\n\t\tif (timeTask != null) {\r\n\t\t\ttimeTask.active = false;\r\n\t\t\ttimeTasks.remove(timeTask);\r\n\t\t}\r\n\t}\r\n\t\r\n\tpublic static function removeTimeTasks(groupId: Int): Void {\r\n\t\tfor (timeTask in timeTasks) {\r\n\t\t\tif (timeTask.groupId == groupId) {\r\n\t\t\t\ttimeTask.active = false;\r\n\t\t\t\ttimeTasksScratchpad.push(timeTask);\t\t\t\t\r\n\t\t\t}\r\n\t\t}\r\n\t\tfor (timeTask in timeTasksScratchpad) {\r\n\t\t\ttimeTasks.remove(timeTask);\r\n\t\t}\r\n\t\twhile (timeTasksScratchpad.length > 0) {\r\n\t\t\ttimeTasksScratchpad.remove(timeTasksScratchpad[0]);\r\n\t\t}\r\n\r\n\t\tif (activeTimeTask != null && activeTimeTask.groupId == groupId) {\r\n\t\t\tactiveTimeTask.active = false;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic static function numTasksInSchedule(): Int {\r\n\t\treturn timeTasks.length + frameTasks.length;\r\n\t}\r\n\t\r\n\tprivate static function insertSorted(list: Array<TimeTask>, task: TimeTask) {\r\n\t\tfor (i in 0...list.length) {\r\n\t\t\tif (list[i].next > task.next) {\r\n\t\t\t\tlist.insert(i, task);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t}\r\n\t\tlist.push(task);\r\n\t}\r\n\t\r\n\tprivate static function sortFrameTasks(): Void {\r\n\t\tif (frame_tasks_sorted) return;\r\n\t\tframeTasks.sort(function (a: FrameTask, b: FrameTask): Int {\r\n\t\t\treturn a.priority > b.priority ? 1 : ((a.priority < b.priority) ? -1 : 0);\r\n\t\t});\r\n\t\tframe_tasks_sorted = true;\r\n\t}\r\n}\r\n","package kha;\r\n\r\n@:keep\r\n@:build(kha.internal.ShadersBuilder.build())\r\nclass Shaders {\r\n\r\n}\r\n","package kha.internal;\n\nimport haxe.Json;\nimport haxe.macro.Context;\nimport haxe.macro.Expr.Field;\nimport haxe.Serializer;\nimport sys.io.File;\n\nusing StringTools;\n\nclass ShadersBuilder {\n\tmacro static public function build(): Array<Field> {\n\t\tvar fields = Context.getBuildFields();\n\n\t\tvar manifestPath = AssetsBuilder.findResources() + \"files.json\";\n\t\tvar content = Json.parse(File.getContent(manifestPath));\n\n\t\t// rebuild Shaders module whenever manifest file is changed\n\t\tContext.registerModuleDependency(Context.getLocalModule(), manifestPath);\n\n\t\tvar files: Iterable<Dynamic> = content.files;\n\n\t\tvar init = macro { };\n\n\t\tfor (file in files) {\n\t\t\tvar name: String = file.name;\n\t\t\tvar fixedName: String = name;\n\t\t\tvar dataName = fixedName + \"Data\";\n\t\t\tvar filenames: Array<String> = file.files;\n\n\t\t\tif (file.type == \"shader\") {\n\t\t\t\tvar serialized: Array<String> = [];\n\t\t\t\tfor (filename in filenames) {\n\t\t\t\t\tserialized.push(Serializer.run(File.getBytes(AssetsBuilder.findResources() + filename)));\n\t\t\t\t}\n\t\t\t\tfor (i in 0...filenames.length) {\n\t\t\t\t\tfields.push({\n\t\t\t\t\t\tname: dataName + i,\n\t\t\t\t\t\tdoc: null,\n\t\t\t\t\t\tmeta: [],\n\t\t\t\t\t\taccess: [APrivate, AStatic],\n\t\t\t\t\t\tkind: FVar(macro: String, macro $v { serialized[i] } ),\n\t\t\t\t\t\tpos: Context.currentPos()\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tif (name.endsWith(\"_comp\")) {\n\t\t\t\t\tfields.push({\n\t\t\t\t\t\tname: fixedName,\n\t\t\t\t\t\tdoc: null,\n\t\t\t\t\t\tmeta: [],\n\t\t\t\t\t\taccess: [APublic, AStatic],\n\t\t\t\t\t\tkind: FVar(macro: kha.compute.Shader, macro null),\n\t\t\t\t\t\tpos: Context.currentPos()\n\t\t\t\t\t});\n\n\t\t\t\t\tinit = macro {\n\t\t\t\t\t\t$init;\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tvar blobs = new Array<Blob>();\n\t\t\t\t\t\t\tfor (i in 0...$v{filenames.length}) {\n\t\t\t\t\t\t\t\tvar data = Reflect.field(Shaders, $v { dataName } + i);\n\t\t\t\t\t\t\t\tvar bytes: haxe.io.Bytes = haxe.Unserializer.run(data);\n\t\t\t\t\t\t\t\tblobs.push(kha.Blob.fromBytes(bytes));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t$i { fixedName } = new kha.compute.Shader(blobs, $v { filenames });\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\telse if (name.endsWith(\"_geom\")) {\n\t\t\t\t\tfields.push({\n\t\t\t\t\t\tname: fixedName,\n\t\t\t\t\t\tdoc: null,\n\t\t\t\t\t\tmeta: [],\n\t\t\t\t\t\taccess: [APublic, AStatic],\n\t\t\t\t\t\tkind: FVar(macro: kha.graphics4.GeometryShader, macro null),\n\t\t\t\t\t\tpos: Context.currentPos()\n\t\t\t\t\t});\n\n\t\t\t\t\tinit = macro {\n\t\t\t\t\t\t$init;\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tvar blobs = new Array<Blob>();\n\t\t\t\t\t\t\tfor (i in 0...$v{filenames.length}) {\n\t\t\t\t\t\t\t\tvar data = Reflect.field(Shaders, $v { dataName } + i);\n\t\t\t\t\t\t\t\tvar bytes: haxe.io.Bytes = haxe.Unserializer.run(data);\n\t\t\t\t\t\t\t\tblobs.push(kha.Blob.fromBytes(bytes));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t$i { fixedName } = new kha.graphics4.GeometryShader(blobs, $v { filenames });\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\telse if (name.endsWith(\"_tesc\")) {\n\t\t\t\t\tfields.push({\n\t\t\t\t\t\tname: fixedName,\n\t\t\t\t\t\tdoc: null,\n\t\t\t\t\t\tmeta: [],\n\t\t\t\t\t\taccess: [APublic, AStatic],\n\t\t\t\t\t\tkind: FVar(macro: kha.graphics4.TessellationControlShader, macro null),\n\t\t\t\t\t\tpos: Context.currentPos()\n\t\t\t\t\t});\n\n\t\t\t\t\tinit = macro {\n\t\t\t\t\t\t$init;\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tvar blobs = new Array<Blob>();\n\t\t\t\t\t\t\tfor (i in 0...$v{filenames.length}) {\n\t\t\t\t\t\t\t\tvar data = Reflect.field(Shaders, $v { dataName } + i);\n\t\t\t\t\t\t\t\tvar bytes: haxe.io.Bytes = haxe.Unserializer.run(data);\n\t\t\t\t\t\t\t\tblobs.push(kha.Blob.fromBytes(bytes));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t$i { fixedName } = new kha.graphics4.TessellationControlShader(blobs, $v { filenames });\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\telse if (name.endsWith(\"_tese\")) {\n\t\t\t\t\tfields.push({\n\t\t\t\t\t\tname: fixedName,\n\t\t\t\t\t\tdoc: null,\n\t\t\t\t\t\tmeta: [],\n\t\t\t\t\t\taccess: [APublic, AStatic],\n\t\t\t\t\t\tkind: FVar(macro: kha.graphics4.TessellationEvaluationShader, macro null),\n\t\t\t\t\t\tpos: Context.currentPos()\n\t\t\t\t\t});\n\n\t\t\t\t\tinit = macro {\n\t\t\t\t\t\t$init;\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tvar blobs = new Array<Blob>();\n\t\t\t\t\t\t\tfor (i in 0...$v{filenames.length}) {\n\t\t\t\t\t\t\t\tvar data = Reflect.field(Shaders, $v { dataName } + i);\n\t\t\t\t\t\t\t\tvar bytes: haxe.io.Bytes = haxe.Unserializer.run(data);\n\t\t\t\t\t\t\t\tblobs.push(kha.Blob.fromBytes(bytes));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t$i { fixedName } = new kha.graphics4.TessellationEvaluationShader(blobs, $v { filenames });\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\telse if (name.endsWith(\"_vert\")) {\n\t\t\t\t\tfields.push({\n\t\t\t\t\t\tname: fixedName,\n\t\t\t\t\t\tdoc: null,\n\t\t\t\t\t\tmeta: [],\n\t\t\t\t\t\taccess: [APublic, AStatic],\n\t\t\t\t\t\tkind: FVar(macro: kha.graphics4.VertexShader, macro null),\n\t\t\t\t\t\tpos: Context.currentPos()\n\t\t\t\t\t});\n\n\t\t\t\t\tinit = macro {\n\t\t\t\t\t\t$init;\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tvar blobs = new Array<Blob>();\n\t\t\t\t\t\t\tfor (i in 0...$v{filenames.length}) {\n\t\t\t\t\t\t\t\tvar data = Reflect.field(Shaders, $v { dataName } + i);\n\t\t\t\t\t\t\t\tvar bytes: haxe.io.Bytes = haxe.Unserializer.run(data);\n\t\t\t\t\t\t\t\tblobs.push(kha.Blob.fromBytes(bytes));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t$i { fixedName } = new kha.graphics4.VertexShader(blobs, $v { filenames });\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tfields.push({\n\t\t\t\t\t\tname: fixedName,\n\t\t\t\t\t\tdoc: null,\n\t\t\t\t\t\tmeta: [],\n\t\t\t\t\t\taccess: [APublic, AStatic],\n\t\t\t\t\t\tkind: FVar(macro: kha.graphics4.FragmentShader, macro null),\n\t\t\t\t\t\tpos: Context.currentPos()\n\t\t\t\t\t});\n\n\t\t\t\t\tinit = macro {\n\t\t\t\t\t\t$init;\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tvar blobs = new Array<Blob>();\n\t\t\t\t\t\t\tfor (i in 0...$v{filenames.length}) {\n\t\t\t\t\t\t\t\tvar data = Reflect.field(Shaders, $v { dataName } + i);\n\t\t\t\t\t\t\t\tvar bytes: haxe.io.Bytes = haxe.Unserializer.run(data);\n\t\t\t\t\t\t\t\tblobs.push(kha.Blob.fromBytes(bytes));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t$i { fixedName } = new kha.graphics4.FragmentShader(blobs, $v { filenames });\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfields.push({\n\t\t\tname: \"init\",\n\t\t\tdoc: null,\n\t\t\tmeta: [],\n\t\t\taccess: [APublic, AStatic],\n\t\t\tkind: FFun({\n\t\t\t\tret: null,\n\t\t\t\tparams: null,\n\t\t\t\texpr: init,\n\t\t\t\targs: []\n\t\t\t}),\n\t\t\tpos: Context.currentPos()\n\t\t});\n\n\t\treturn fields;\n\t}\n}\n","package kha;\r\n\r\nimport haxe.io.Bytes;\r\nimport haxe.io.BytesOutput;\r\nimport kha.audio2.ogg.vorbis.Reader;\r\n\r\n/**\r\n * Contains compressed or uncompressed audio data.\r\n */\r\n @:cppFileCode(\"\\n#include <Kore/pch.h>\\n#define STB_VORBIS_HEADER_ONLY\\n#include <kinc/audio1/stb_vorbis.c>\")\r\nclass Sound implements Resource {\r\n\tpublic var compressedData: Bytes;\r\n\tpublic var uncompressedData: kha.arrays.Float32Array;\r\n\tpublic var length: Float = 0; // in seconds\r\n\tpublic var channels: Int = 0;\r\n\tpublic var sampleRate: Int = 0;\r\n\t\r\n\tpublic function new() {\r\n\t\t\r\n\t}\r\n\r\n#if kha_kore\r\n\tpublic function uncompress(done: Void->Void): Void {\r\n\t\tif (uncompressedData != null) {\r\n\t\t\tdone();\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tvar samples: Int = 0;\r\n\t\tvar channels: Int = 0;\r\n\t\tvar samplesPerSecond: Int = 0;\r\n\r\n\t\tuntyped __cpp__(\"Kore::s16* data = nullptr\");\r\n\t\tuntyped __cpp__(\"samples = stb_vorbis_decode_memory((Kore::u8*)compressedData->b->GetBase(), compressedData->length, &channels, &samplesPerSecond, &data)\");\r\n\r\n\t\tif (channels == 1) {\r\n\t\t\tlength = samples / samplesPerSecond;\r\n\t\t\tuncompressedData = new kha.arrays.Float32Array(samples * 2);\r\n\t\t\tfor (i in 0...samples) {\r\n\t\t\t\tuntyped __cpp__(\"this->uncompressedData->self.set(i * 2 + 0, data[i] / 32767.0f)\");\r\n\t\t\t\tuntyped __cpp__(\"this->uncompressedData->self.set(i * 2 + 1, data[i] / 32767.0f)\");\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tlength = samples / samplesPerSecond;\r\n\t\t\tuncompressedData = new kha.arrays.Float32Array(samples * 2);\r\n\t\t\tfor (i in 0...samples * 2) {\r\n\t\t\t\tuntyped __cpp__(\"this->uncompressedData->self.set(i1, data[i1] / 32767.0f)\");\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.channels = channels;\r\n\t\tthis.sampleRate = samplesPerSecond;\r\n\r\n\t\tuntyped __cpp__(\"delete[] data\");\r\n\r\n\t\tcompressedData = null;\r\n\t\tdone();\r\n\t}\r\n#else\r\n\tpublic function uncompress(done: Void->Void): Void {\r\n\t\t#if (!kha_no_ogg)\r\n\t\tif (uncompressedData != null) {\r\n\t\t\tdone();\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t\r\n\t\tvar output = new BytesOutput();\r\n\t\tvar header = Reader.readAll(compressedData, output, true);\r\n\t\tvar soundBytes = output.getBytes();\r\n\t\tvar count = Std.int(soundBytes.length / 4);\r\n\t\tif (header.channel == 1) {\r\n\t\t\tlength = count / kha.audio2.Audio.samplesPerSecond;// header.sampleRate;\r\n\t\t\tuncompressedData = new kha.arrays.Float32Array(count * 2);\r\n\t\t\tfor (i in 0...count) {\r\n\t\t\t\tuncompressedData[i * 2 + 0] = soundBytes.getFloat(i * 4);\r\n\t\t\t\tuncompressedData[i * 2 + 1] = soundBytes.getFloat(i * 4);\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tlength = count / 2 / kha.audio2.Audio.samplesPerSecond; //header.sampleRate;\r\n\t\t\tuncompressedData = new kha.arrays.Float32Array(count);\r\n\t\t\tfor (i in 0...count) {\r\n\t\t\t\tuncompressedData[i] = soundBytes.getFloat(i * 4);\r\n\t\t\t}\r\n\t\t}\r\n\t\tchannels = header.channel;\r\n\t\tsampleRate = header.sampleRate;\r\n\t\tcompressedData = null;\r\n\t\tdone();\r\n\t\t#end\r\n\t}\r\n#end\r\n\r\n\tpublic function unload() {\r\n\t\tcompressedData = null;\r\n\t\tuncompressedData = null;\r\n\t}\r\n}\r\n","package kha;\r\n\r\nclass StringExtensions {\r\n\tpublic static function toCharArray(s: String): Array<Int> {\r\n\t\tvar results = new Array<Int>();\r\n\t\tfor (i in 0...s.length) {\r\n\t\t\tresults.push(s.charCodeAt(i));\r\n\t\t}\r\n\t\treturn results;\r\n\t}\r\n}\r\n","package kha;\n\nimport kha.WindowOptions;\n\n@:structInit\nclass SystemOptions {\n\t@:optional public var title: String = \"Kha\";\n\t@:optional public var width: Int = -1;\n\t@:optional public var height: Int = -1;\n\t@:optional public var window: WindowOptions = null;\n\t@:optional public var framebuffer: FramebufferOptions = null;\n\n\t/**\n\t * Used to provide parameters for System.start\n\t * @param title The application title is the default window title (unless the window parameter provides a title of its own)\n\t * and is used for various other purposes - for example for save data locations\n\t * @param width Just a shortcut which overwrites window.width if set\n\t * @param height Just a shortcut which overwrites window.height if set\n\t * @param window Optionally provide window options\n\t * @param framebuffer Optionally provide framebuffer options\n\t */\n\tpublic function new(title: String = \"Kha\", ?width: Int = -1, ?height: Int = -1, window: WindowOptions = null, framebuffer: FramebufferOptions = null) {\n\t\tthis.title = title;\n\t\tthis.window = window == null ? {} : window;\n\n\t\tif (width > 0) {\n\t\t\tthis.window.width = width;\n\t\t\tthis.width = width;\n\t\t}\n\t\telse {\n\t\t\tthis.width = this.window.width;\n\t\t}\n\n\t\tif (height > 0) {\n\t\t\tthis.window.height = height;\n\t\t\tthis.height = height;\n\t\t}\n\t\telse {\n\t\t\tthis.height = this.window.height;\n\t\t}\n\n\t\tif (this.window.title == null) {\n\t\t\tthis.window.title = title;\n\t\t}\n\n\t\tthis.framebuffer = framebuffer == null ? {} : framebuffer;\n\t}\n}\n\ntypedef OldSystemOptions = {\n\t?title: String,\n\t?width: Int,\n\t?height: Int,\n\t?samplesPerPixel: Int,\n\t?vSync: Bool,\n\t?windowMode: WindowMode,\n\t?resizable: Bool,\n\t?maximizable: Bool,\n\t?minimizable: Bool\n}\n\n@:allow(kha.SystemImpl)\nclass System {\n\tstatic var renderListeners: Array<Array<Framebuffer> -> Void> = [];\n\tstatic var foregroundListeners: Array<Void -> Void> = [];\n\tstatic var resumeListeners: Array<Void -> Void> = [];\n\tstatic var pauseListeners: Array<Void -> Void> = [];\n\tstatic var backgroundListeners: Array<Void -> Void> = [];\n\tstatic var shutdownListeners: Array<Void -> Void> = [];\n\tstatic var dropFilesListeners: Array<String -> Void> = [];\n\tstatic var cutListener: Void->String = null;\n\tstatic var copyListener: Void->String = null;\n\tstatic var pasteListener: String->Void = null;\n\tstatic var loginListener: Void->Void = null;\n\tstatic var logoutListener: Void->Void = null;\n\tstatic var theTitle: String;\n\n\t@:deprecated(\"Use System.start instead\")\n\tpublic static function init(options: OldSystemOptions, callback: Void -> Void): Void {\n\t\tvar features:WindowFeatures = None;\n\t\tif (options.resizable) features |= WindowFeatures.FeatureResizable;\n\t\tif (options.maximizable) features |= WindowFeatures.FeatureMaximizable;\n\t\tif (options.minimizable) features |= WindowFeatures.FeatureMinimizable;\n\n\t\tvar newOptions: SystemOptions = {\n\t\t\ttitle: options.title,\n\t\t\twidth: options.width,\n\t\t\theight: options.height,\n\t\t\twindow: {\n\t\t\t\tmode: options.windowMode,\n\t\t\t\twindowFeatures: features\n\t\t\t},\n\t\t\tframebuffer: {\n\t\t\t\tsamplesPerPixel: options.samplesPerPixel,\n\t\t\t\tverticalSync: options.vSync\n\t\t\t}\n\t\t};\n\t\tstart(newOptions, function (_) {\n\t\t\tcallback();\n\t\t});\n\t}\n\n\tpublic static function start(options: SystemOptions, callback: Window -> Void): Void {\n\t\ttheTitle = options.title;\n\t\tSystemImpl.init(options, callback);\n\t}\n\n\tpublic static var title(get, never): String;\n\n\tprivate static function get_title(): String {\n\t\treturn theTitle;\n\t}\n\n\t@:deprecated(\"Use System.notifyOnFrames instead\")\n\tpublic static function notifyOnRender(listener: Framebuffer -> Void, id: Int = 0): Void {\n\t\trenderListeners.push(function (framebuffers: Array<Framebuffer>) {\n\t\t\tif (id < framebuffers.length) {\n\t\t\t\tlistener(framebuffers[id]);\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * The provided listener is called when new framebuffers are ready for rendering into.\n\t * Each framebuffer corresponds to the kha.Window of the same index, single-window\n\t * applications always receive an array of only one framebuffer.\n\t * @param listener\n\t * The callback to add\n\t */\n\tpublic static function notifyOnFrames(listener: Array<Framebuffer> -> Void): Void {\n\t\trenderListeners.push(listener);\n\t}\n\n\t/**\n\t * Removes a previously set frames listener.\n\t * @param listener\n\t * The callback to remove\n\t */\n\tpublic static function removeFramesListener(listener: Array<Framebuffer> -> Void): Void {\n\t\trenderListeners.remove(listener);\n\t}\n\n\tpublic static function notifyOnApplicationState(foregroundListener: Void -> Void, resumeListener: Void -> Void,\tpauseListener: Void -> Void, backgroundListener: Void-> Void, shutdownListener: Void -> Void): Void {\n\t\tif (foregroundListener != null) foregroundListeners.push(foregroundListener);\n\t\tif (resumeListener != null) resumeListeners.push(resumeListener);\n\t\tif (pauseListener != null) pauseListeners.push(pauseListener);\n\t\tif (backgroundListener != null) backgroundListeners.push(backgroundListener);\n\t\tif (shutdownListener != null) shutdownListeners.push(shutdownListener);\n\t}\n\n\tpublic static function notifyOnDropFiles(dropFilesListener: String -> Void): Void {\n\t\tdropFilesListeners.push(dropFilesListener);\n\t}\n\n\tpublic static function removeDropListener(listener: String -> Void): Void {\n\t\tdropFilesListeners.remove(listener);\n\t}\n\n\tpublic static function notifyOnCutCopyPaste(cutListener: Void->String, copyListener: Void->String, pasteListener: String->Void): Void {\n\t\tSystem.cutListener = cutListener;\n\t\tSystem.copyListener = copyListener;\n\t\tSystem.pasteListener = pasteListener;\n\t}\n\n\tpublic static function notifyOnLoginLogout(loginListener: Void->Void, logoutListener: Void->Void) {\n\t\tSystem.loginListener = loginListener;\n\t\tSystem.logoutListener = logoutListener;\n\t}\n\n\tpublic static function login(): Void {\n\t\tSystemImpl.login();\n\t}\n\n\tpublic static function waitingForLogin(): Bool {\n\t\treturn SystemImpl.waitingForLogin();\n\t}\n\n\tpublic static function allowUserChange(): Void {\n\t\tSystemImpl.allowUserChange();\n\t}\n\n\tpublic static function disallowUserChange(): Void {\n\t\tSystemImpl.disallowUserChange();\n\t}\n\n\tstatic function render(framebuffers: Array<Framebuffer>): Void {\n\t\tfor (listener in renderListeners) {\n\t\t\tlistener(framebuffers);\n\t\t}\n\t}\n\n\tprivate static function foreground(): Void {\n\t\tfor (listener in foregroundListeners) {\n\t\t\tlistener();\n\t\t}\n\t}\n\n\tprivate static function resume(): Void {\n\t\tfor (listener in resumeListeners) {\n\t\t\tlistener();\n\t\t}\n\t}\n\n\tprivate static function pause(): Void {\n\t\tfor (listener in pauseListeners) {\n\t\t\tlistener();\n\t\t}\n\t}\n\n\tprivate static function background(): Void {\n\t\tfor (listener in backgroundListeners) {\n\t\t\tlistener();\n\t\t}\n\t}\n\n\tprivate static function shutdown(): Void {\n\t\tfor (listener in shutdownListeners) {\n\t\t\tlistener();\n\t\t}\n\t}\n\n\tprivate static function dropFiles(filePath: String): Void {\n\t\tfor (listener in dropFilesListeners) {\n\t\t\tlistener(filePath);\n\t\t}\n\t}\n\n\tpublic static var time(get, null): Float;\n\n\tprivate static function get_time(): Float {\n\t\treturn SystemImpl.getTime();\n\t}\n\n\tpublic static function windowWidth(window: Int = 0): Int {\n\t\treturn Window.get(window).width;\n\t}\n\n\tpublic static function windowHeight(window: Int = 0): Int {\n\t\treturn Window.all[window].height;\n\t}\n\n\tpublic static var screenRotation(get, null): ScreenRotation;\n\n\tstatic function get_screenRotation(): ScreenRotation {\n\t\treturn RotationNone;\n\t}\n\n\tpublic static var systemId(get, null): String;\n\n\tstatic function get_systemId(): String {\n\t\treturn SystemImpl.getSystemId();\n\t}\n\n\t/**\n\t * Pulses the vibration hardware on the device for time in milliseconds, if such hardware exists.\n\t */\n\tpublic static function vibrate(ms:Int): Void {\n\t\treturn SystemImpl.vibrate(ms);\n\t}\n\n\t/**\n\t * The IS0 639 system current language identifier.\n\t */\n\tpublic static var language(get, never): String;\n\n\tprivate static function get_language(): String {\n\t\treturn SystemImpl.getLanguage();\n\t}\n\n  /**\n\t * Schedules the application to stop as soon as possible. This is not possible on all targets.\n\t * @return Returns true if the application can be stopped\n\t */\n\tpublic static function stop(): Bool {\n\t\treturn SystemImpl.requestShutdown();\n\t}\n\n\tpublic static function loadUrl(url: String): Void {\n\t\tSystemImpl.loadUrl(url);\n\t}\n\n\t@:deprecated(\"This only returns a default value\")\n\tpublic static function canSwitchFullscreen(): Bool {\n\t\treturn true;\n\t}\n\n\t@:deprecated(\"Use the kha.Window API instead\")\n\tpublic static function isFullscreen(): Bool {\n\t\treturn Window.get(0).mode == WindowMode.Fullscreen || Window.get(0).mode == WindowMode.ExclusiveFullscreen;\n\t}\n\n\t@:deprecated(\"Use the kha.Window API instead\")\n\tpublic static function requestFullscreen(): Void {\n\t\tWindow.get(0).mode = WindowMode.Fullscreen;\n\t}\n\n\t@:deprecated(\"Use the kha.Window API instead\")\n\tpublic static function exitFullscreen(): Void {\n\t\tWindow.get(0).mode = WindowMode.Windowed;\n\t}\n\n\t@:deprecated(\"This does nothing\")\n\tpublic static function notifyOnFullscreenChange(func: Void -> Void, error: Void -> Void): Void {\n\n\t}\n\n\t@:deprecated(\"This does nothing\")\n\tpublic static function removeFullscreenListener(func: Void -> Void, error: Void -> Void): Void {\n\n\t}\n\n\t@:deprecated(\"This does nothing. On Windows you can use Window.resize instead after setting the mode to ExclusiveFullscreen\")\n\tpublic static function changeResolution(width: Int, height: Int): Void {\n\n\t}\n\n\t@:deprecated(\"Use System.stop instead\")\n\tpublic static function requestShutdown(): Void {\n\t\tstop();\n\t}\n\n\t@:deprecated(\"Use the kha.Window API instead\")\n\tpublic static var vsync(get, null): Bool;\n\n\tprivate static function get_vsync(): Bool {\n\t\treturn Window.get(0).vSynced;\n\t}\n\n\t@:deprecated(\"Use the kha.Display API instead\")\n\tpublic static var refreshRate(get, null): Int;\n\n\tprivate static function get_refreshRate(): Int {\n\t\treturn Display.primary.frequency;\n\t}\n\n\t@:deprecated(\"Use the kha.Display API instead\")\n\tpublic static function screenDpi(): Int {\n\t\treturn Display.primary.pixelsPerInch;\n\t}\n\n\tpublic static function safeZone(): Float {\n\t\treturn SystemImpl.safeZone();\n\t}\n\n\tpublic static function automaticSafeZone(): Bool {\n\t\treturn SystemImpl.automaticSafeZone();\n\t}\n\n\tpublic static function setSafeZone(value: Float): Void {\n\t\tSystemImpl.setSafeZone(value);\n\t}\n\n\tpublic static function unlockAchievement(id: Int): Void {\n\t\tSystemImpl.unlockAchievement(id);\n\t}\n}\n","package kha;\n\nimport js.html.webgl.GL;\nimport js.html.WheelEvent;\nimport js.Browser;\nimport js.html.CanvasElement;\nimport js.html.KeyboardEvent;\nimport js.html.MouseEvent;\nimport js.html.Touch;\nimport js.html.TouchEvent;\nimport js.html.ClipboardEvent;\nimport js.html.DeviceMotionEvent;\nimport js.html.DeviceOrientationEvent;\nimport kha.graphics4.TextureFormat;\nimport kha.input.Gamepad;\nimport kha.input.Keyboard;\nimport kha.input.KeyCode;\nimport kha.input.Mouse;\nimport kha.input.Sensor;\nimport kha.input.Surface;\nimport kha.js.AudioElementAudio;\nimport kha.js.CanvasGraphics;\nimport kha.js.MobileWebAudio;\nimport kha.js.vr.VrInterface;\nimport kha.System;\n\nclass GamepadStates {\n\tpublic var axes: Array<Float>;\n\tpublic var buttons: Array<Float>;\n\n\tpublic function new() {\n\t\taxes = new Array<Float>();\n\t\tbuttons = new Array<Float>();\n\t}\n}\n\nclass SystemImpl {\n\tpublic static var gl: GL;\n\tpublic static var gl2: Bool;\n\tpublic static var halfFloat: Dynamic;\n\tpublic static var anisotropicFilter: Dynamic;\n\tpublic static var depthTexture: Dynamic;\n\tpublic static var drawBuffers: Dynamic;\n\tpublic static var elementIndexUint: Dynamic;\n\t@:noCompletion public static var _hasWebAudio: Bool;\n\t//public static var graphics(default, null): Graphics;\n\tpublic static var khanvas: CanvasElement;\n\tprivate static var options: SystemOptions;\n\tpublic static var mobile: Bool = false;\n\tpublic static var ios: Bool = false;\n\tpublic static var mobileAudioPlaying: Bool = false;\n\tprivate static var chrome: Bool = false;\n\tprivate static var firefox: Bool = false;\n\tprivate static var ie: Bool = false;\n\tpublic static var insideInputEvent: Bool = false;\n\tstatic var window: Window;\n\n\tprivate static function errorHandler(message: String, source: String, lineno: Int, colno: Int, error: Dynamic) {\n\t\tBrowser.console.error(error.stack);\n\t\treturn true;\n\t}\n\n\tpublic static function init(options: SystemOptions, callback: Window -> Void): Void {\n\t\tSystemImpl.options = options;\n\t\t#if kha_debug_html5\n\t\tBrowser.window.onerror = cast SystemImpl.errorHandler;\n\t\t\n\t\ttry\n\t\t{\n\t\t\tvar electron = untyped __js__(\"require('electron')\");\n\t\t\tif (electron.webFrame.setZoomLevelLimits != null) { // TODO: Figure out why this check is sometimes required\n\t\t\t\telectron.webFrame.setZoomLevelLimits(1, 1);\n\t\t\t}\n\t\t\tvar wndOpts = {\n\t\t\t\ttype: 'showWindow', title: options.title,\n\t\t\t\tx: options.window.x, y: options.window.y,\n\t\t\t\twidth: options.width, height: options.height,\n\t\t\t}\n\t\t\telectron.ipcRenderer.send('asynchronous-message', wndOpts);\t\t// Wait a second so the debugger can attach\n\t\t}\n\t\tcatch(e:Dynamic)\n\t\t{\n\t\t\t// No electron available?\n\t\t}\n\t\t\n\t\tBrowser.window.setTimeout(function () {\n\t\t\tinitSecondStep(callback);\n\t\t}, 1000);\n\t\t#else\n\t\tmobile = isMobile();\n\t\tios = isIOS();\n\t\tchrome = isChrome();\n\t\tfirefox = isFirefox();\n\t\tie = isIE();\n\n\t\tif (mobile || chrome) {\n\t\t\tmobileAudioPlaying = false;\n\t\t}\n\t\telse {\n\t\t\tmobileAudioPlaying = true;\n\t\t}\n\n\t\tinitSecondStep(callback);\n\t\t#end\n\t}\n\n\tprivate static function initSecondStep(callback: Window -> Void): Void {\n\t\tinit2(options.window.width, options.window.height);\n\t\tcallback(window);\n\t}\n\n\tpublic static function initSensor(): Void {\n\t\tif (ios) { // In Safari for iOS the directions are reversed on axes x, y and z\n\t\t\tBrowser.window.ondevicemotion = function (event: DeviceMotionEvent) {\n\t\t\t\tSensor._changed(0, -event.accelerationIncludingGravity.x, -event.accelerationIncludingGravity.y, -event.accelerationIncludingGravity.z);\n\t\t\t};\n\t\t}\n\t\telse {\n\t\t\tBrowser.window.ondevicemotion = function (event: DeviceMotionEvent) {\n\t\t\t\tSensor._changed(0, event.accelerationIncludingGravity.x, event.accelerationIncludingGravity.y, event.accelerationIncludingGravity.z);\n\t\t\t};\n\t\t}\n\t\tBrowser.window.ondeviceorientation = function (event: DeviceOrientationEvent) {\n\t\t\tSensor._changed(1, event.beta, event.gamma, event.alpha);\n\t\t};\n\t}\n\n\tprivate static function isMobile(): Bool {\n\t\tvar agent = js.Browser.navigator.userAgent;\n\t\tif (agent.indexOf(\"Android\") >= 0\n\t\t\t|| agent.indexOf(\"webOS\") >= 0\n\t\t\t|| agent.indexOf(\"BlackBerry\") >= 0\n\t\t\t|| agent.indexOf(\"Windows Phone\") >= 0) {\n\t\t\t\treturn true;\n\t\t}\n\t\tif (isIOS()) return true;\n\t\treturn false;\n\t}\n\n\tprivate static function isIOS(): Bool {\n\t\tvar agent = js.Browser.navigator.userAgent;\n\t\tif (agent.indexOf(\"iPhone\") >= 0\n\t\t\t|| agent.indexOf(\"iPad\") >= 0\n\t\t\t|| agent.indexOf(\"iPod\") >= 0) {\n\t\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tprivate static function isChrome(): Bool {\n\t\tvar agent = js.Browser.navigator.userAgent;\n\t\tif (agent.indexOf(\"Chrome\") >= 0) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tprivate static function isFirefox(): Bool {\n\t\tvar agent = js.Browser.navigator.userAgent;\n\t\tif (agent.indexOf(\"Firefox\") >= 0) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tprivate static function isIE(): Bool {\n\t\tvar agent = js.Browser.navigator.userAgent;\n\t\tif (agent.indexOf(\"MSIE \") >= 0\n\t\t\t|| agent.indexOf(\"Trident/\") >= 0) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic static function setCanvas(canvas: CanvasElement): Void {\n\t\tkhanvas = canvas;\n\t}\n\n\tpublic static function getScreenRotation(): ScreenRotation {\n\t\treturn ScreenRotation.RotationNone;\n\t}\n\n\tpublic static function getTime(): Float {\n\t\tvar performance = (untyped __js__(\"window.performance ? window.performance : window.Date\"));\n\t\treturn performance.now() / 1000;\n\t}\n\n\tpublic static function getSystemId(): String {\n\t\treturn \"HTML5\";\n\t}\n\n\tpublic static function vibrate(ms:Int): Void {\n\t\tBrowser.navigator.vibrate(ms);\n\t}\n\n\tpublic static function getLanguage(): String {\n\t\tfinal lang = Browser.navigator.language;\n\t\treturn lang.substr(0, 2).toLowerCase();\n\t}\n\n\tpublic static function requestShutdown(): Bool {\n\t\tBrowser.window.close();\n\t\treturn true;\n\t}\n\n\tprivate static inline var maxGamepads: Int = 4;\n\tprivate static var frame: Framebuffer;\n\tprivate static var pressedKeys: Array<Bool>;\n\tprivate static var keyboard: Keyboard = null;\n\tprivate static var mouse: kha.input.Mouse;\n\tprivate static var surface: Surface;\n\tprivate static var gamepads: Array<Gamepad>;\n\tprivate static var gamepadStates: Array<GamepadStates>;\n\n\tprivate static var minimumScroll:Int = 999;\n\tprivate static var mouseX: Int;\n\tprivate static var mouseY: Int;\n\tprivate static var touchX: Int;\n\tprivate static var touchY: Int;\n\tprivate static var lastFirstTouchX: Int = 0;\n\tprivate static var lastFirstTouchY: Int = 0;\n\n\tpublic static function init2(defaultWidth: Int, defaultHeight: Int, ?backbufferFormat: TextureFormat) {\n\t\t#if !kha_no_keyboard\n\t\tkeyboard = new Keyboard();\n\t\t#end\n\t\tmouse = new kha.input.MouseImpl();\n\t\tsurface = new Surface();\n\t\tgamepads = new Array<Gamepad>();\n\t\tgamepadStates = new Array<GamepadStates>();\n\t\tfor (i in 0...maxGamepads) {\n\t\t\tgamepads[i] = new Gamepad(i);\n\t\t\tgamepadStates[i] = new GamepadStates();\n\t\t}\n\t\tjs.Browser.window.addEventListener(\"gamepadconnected\", function(e) {\n\t\t\tGamepad.sendConnectEvent(e.gamepad.index);\n\t\t});\n\t\tjs.Browser.window.addEventListener(\"gamepaddisconnected\", function(e) {\n\t\t\tGamepad.sendDisconnectEvent(e.gamepad.index);\n\t\t});\n\t\tif (ie) {\n\t\t\tpressedKeys = new Array<Bool>();\n\t\t\tfor (i in 0...256) pressedKeys.push(false);\n\t\t\tfor (i in 0...256) pressedKeys.push(null);\n\t\t}\n\n\t\tfunction onCopy(e: ClipboardEvent):Void {\n\t\t\tif (System.copyListener != null) {\n\t\t\t\tvar data = System.copyListener();\n\t\t\t\tif (data != null) e.clipboardData.setData(\"text/plain\", data);\n\t\t\t\te.preventDefault();\n\t\t\t}\n\t\t}\n\n\t\tfunction onCut(e: ClipboardEvent):Void {\n\t\t\tif (System.cutListener != null) {\n\t\t\t\tvar data = System.cutListener();\n\t\t\t\tif (data != null) e.clipboardData.setData(\"text/plain\", data);\n\t\t\t\te.preventDefault();\n\t\t\t}\n\t\t}\n\n\t\tfunction onPaste(e: ClipboardEvent):Void {\n\t\t\tif (System.pasteListener != null) {\n\t\t\t\tSystem.pasteListener(e.clipboardData.getData(\"text/plain\"));\n\t\t\t\te.preventDefault();\n\t\t\t}\n\t\t}\n\n\t\tvar document = Browser.document;\n\t\tdocument.addEventListener(\"copy\", onCopy);\n\t\tdocument.addEventListener(\"cut\", onCut);\n\t\tdocument.addEventListener(\"paste\", onPaste);\n\n\t\tCanvasImage.init();\n\t\tScheduler.init();\n\n\t\tloadFinished(defaultWidth, defaultHeight);\n\t}\n\n\tpublic static function getMouse(num: Int): Mouse {\n\t\tif (num != 0) return null;\n\t\treturn mouse;\n\t}\n\n\tpublic static function getKeyboard(num: Int): Keyboard {\n\t\tif (num != 0) return null;\n\t\treturn keyboard;\n\t}\n\n\tstatic function checkGamepad(pad: js.html.Gamepad) {\n\t\tfor (i in 0...pad.axes.length) {\n\t\t\tif (pad.axes[i] != null) {\n\t\t\t\tvar axis = pad.axes[i];\n\t\t\t\tif (gamepadStates[pad.index].axes[i] != axis) {\n\t\t\t\t\tgamepadStates[pad.index].axes[i] = axis;\n\t\t\t\t\tgamepads[pad.index].sendAxisEvent(i, axis);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tfor (i in 0...pad.buttons.length) {\n\t\t\tif (pad.buttons[i] != null) {\n\t\t\t\tif (gamepadStates[pad.index].buttons[i] != pad.buttons[i].value) {\n\t\t\t\t\tgamepadStates[pad.index].buttons[i] = pad.buttons[i].value;\n\t\t\t\t\tgamepads[pad.index].sendButtonEvent(i, pad.buttons[i].value);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (pad.axes.length <= 4 && pad.buttons.length > 7) {\n\t\t\t// Fix for the triggers not being axis in html5\n\t\t\tgamepadStates[pad.index].axes[4] = pad.buttons[6].value;\n\t\t\tgamepads[pad.index].sendAxisEvent(4, pad.buttons[6].value);\n\t\t\tgamepadStates[pad.index].axes[5] = pad.buttons[7].value;\n\t\t\tgamepads[pad.index].sendAxisEvent(5, pad.buttons[7].value);\n\t\t}\n\t}\n\n\tprivate static function getCanvasElement(): CanvasElement {\n\t\tif (khanvas != null) return khanvas;\n\t\t// Only consider custom canvas ID for release builds\n\t\t#if (kha_debug_html5 || !canvas_id)\n\t\treturn cast Browser.document.getElementById(\"khanvas\");\n\t\t#else\n\t\treturn cast Browser.document.getElementById(Macros.canvasId());\n\t\t#end\n\t}\n\n\tprivate static function loadFinished(defaultWidth: Int, defaultHeight: Int) {\n\t\tvar canvas: CanvasElement = getCanvasElement();\n\t\tcanvas.style.cursor = \"default\";\n\n\t\tvar gl: Bool = false;\n\n\t\t#if kha_webgl\n\t\ttry {\n\t\t\tSystemImpl.gl = canvas.getContext(\"webgl2\", { alpha: false, antialias: options.framebuffer.samplesPerPixel > 1, stencil: true}); // preserveDrawingBuffer: true } ); Warning: preserveDrawingBuffer can cause huge performance issues on mobile browsers\n\t\t\tSystemImpl.gl.pixelStorei(GL.UNPACK_PREMULTIPLY_ALPHA_WEBGL, 1);\n\n\t\t\thalfFloat = {HALF_FLOAT_OES: 0x140B}; // GL_HALF_FLOAT\n\t\t\tdepthTexture = {UNSIGNED_INT_24_8_WEBGL: 0x84FA}; // GL_UNSIGNED_INT_24_8\n\t\t\tdrawBuffers = {COLOR_ATTACHMENT0_WEBGL: GL.COLOR_ATTACHMENT0};\n\t\t\telementIndexUint = true;\n\t\t\tSystemImpl.gl.getExtension(\"EXT_color_buffer_float\");\n\t\t\tSystemImpl.gl.getExtension(\"OES_texture_float_linear\");\n\t\t\tSystemImpl.gl.getExtension(\"OES_texture_half_float_linear\");\n\t\t\tanisotropicFilter = SystemImpl.gl.getExtension(\"EXT_texture_filter_anisotropic\");\n\t\t\tif (anisotropicFilter == null) anisotropicFilter = SystemImpl.gl.getExtension(\"WEBKIT_EXT_texture_filter_anisotropic\");\n\n\t\t\tgl = true;\n\t\t\tgl2 = true;\n\t\t\tShaders.init();\n\t\t}\n\t\tcatch (e: Dynamic) {\n\t\t\ttrace(\"Could not initialize WebGL 2, falling back to WebGL.\");\n\t\t}\n\n\t\tif (!gl2) {\n\t\t\ttry {\n\t\t\t\tSystemImpl.gl = canvas.getContext(\"experimental-webgl\", { alpha: false, antialias: options.framebuffer.samplesPerPixel > 1, stencil: true}); // preserveDrawingBuffer: true } ); WARNING: preserveDrawingBuffer causes huge performance issues (on mobile browser)!\n\t\t\t\tSystemImpl.gl.pixelStorei(GL.UNPACK_PREMULTIPLY_ALPHA_WEBGL, 1);\n\t\t\t\tSystemImpl.gl.getExtension(\"OES_texture_float\");\n\t\t\t\tSystemImpl.gl.getExtension(\"OES_texture_float_linear\");\n\t\t\t\thalfFloat = SystemImpl.gl.getExtension(\"OES_texture_half_float\");\n\t\t\t\tSystemImpl.gl.getExtension(\"OES_texture_half_float_linear\");\n\t\t\t\tdepthTexture = SystemImpl.gl.getExtension(\"WEBGL_depth_texture\");\n\t\t\t\tSystemImpl.gl.getExtension(\"EXT_shader_texture_lod\");\n\t\t\t\tSystemImpl.gl.getExtension(\"OES_standard_derivatives\");\n\t\t\t\tanisotropicFilter = SystemImpl.gl.getExtension(\"EXT_texture_filter_anisotropic\");\n\t\t\t\tif (anisotropicFilter == null) anisotropicFilter = SystemImpl.gl.getExtension(\"WEBKIT_EXT_texture_filter_anisotropic\");\n\t\t\t\tdrawBuffers = SystemImpl.gl.getExtension('WEBGL_draw_buffers');\n\t\t\t\telementIndexUint = SystemImpl.gl.getExtension(\"OES_element_index_uint\");\n\t\t\t\tgl = true;\n\t\t\t\tShaders.init();\n\t\t\t}\n\t\t\tcatch (e: Dynamic) {\n\t\t\t\ttrace(\"Could not initialize WebGL, falling back to <canvas>.\");\n\t\t\t}\n\t\t}\n\t\t#end\n\n\t\tsetCanvas(canvas);\n\t\twindow = new Window(defaultWidth, defaultHeight, canvas);\n\n\t\t//var widthTransform: Float = canvas.width / Loader.the.width;\n\t\t//var heightTransform: Float = canvas.height / Loader.the.height;\n\t\t//var transform: Float = Math.min(widthTransform, heightTransform);\n\t\tif (gl) {\n\t\t\tvar g4 = new kha.js.graphics4.Graphics();\n\t\t\tframe = new Framebuffer(0, null, null, g4);\n\t\t\tframe.init(new kha.graphics2.Graphics1(frame), new kha.js.graphics4.Graphics2(frame), g4); // new kha.graphics1.Graphics4(frame));\n\t\t}\n\t\telse {\n\t\t\tuntyped __js__ (\"kha_js_Font.Kravur = kha_Kravur; kha_Kravur = kha_js_Font\");\n\t\t\tvar g2 = new CanvasGraphics(canvas.getContext(\"2d\"));\n\t\t\tframe = new Framebuffer(0, null, g2, null);\n\t\t\tframe.init(new kha.graphics2.Graphics1(frame), g2, null);\n\t\t}\n\t\t//canvas.getContext(\"2d\").scale(transform, transform);\n\n\t\tif (!mobile && kha.audio2.Audio._init()) {\n\t\t\tSystemImpl._hasWebAudio = true;\n\t\t\tkha.audio2.Audio1._init();\n\t\t}\n\t\telse if (mobile) {\n\t\t\tSystemImpl._hasWebAudio = false;\n\t\t\tMobileWebAudio._init();\n\t\t\tuntyped __js__ (\"kha_audio2_Audio1 = kha_js_MobileWebAudio\");\n\t\t}\n\t\telse {\n\t\t\tSystemImpl._hasWebAudio = false;\n\t\t\tuntyped __js__ (\"kha_audio2_Audio1 = kha_js_AudioElementAudio\");\n\t\t}\n\n\t\tkha.vr.VrInterface.instance = new VrInterface();\n\n\t\tScheduler.start();\n\n\t\tvar window: Dynamic = Browser.window;\n\t\tvar requestAnimationFrame = window.requestAnimationFrame;\n\t\tif (requestAnimationFrame == null) requestAnimationFrame = window.mozRequestAnimationFrame;\n\t\tif (requestAnimationFrame == null) requestAnimationFrame = window.webkitRequestAnimationFrame;\n\t\tif (requestAnimationFrame == null) requestAnimationFrame = window.msRequestAnimationFrame;\n\n\t\tfunction animate(timestamp) {\n\t\t\tvar window: Dynamic = Browser.window;\n\t\t\tif (requestAnimationFrame == null) window.setTimeout(animate, 1000.0 / 60.0);\n\t\t\telse requestAnimationFrame(animate);\n\n\t\t\tvar sysGamepads = getGamepads();\n\t\t\tif (sysGamepads != null) {\n\t\t\t\tfor (i in 0...sysGamepads.length) {\n\t\t\t\t\tvar pad = sysGamepads[i];\n\t\t\t\t\tif (pad != null) {\n\t\t\t\t\t\tcheckGamepad(pad);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tScheduler.executeFrame();\n\n\t\t\tif (canvas.getContext != null) {\n\n\t\t\t\t// Lookup the size the browser is displaying the canvas.\n\t\t\t\t//TODO deal with window.devicePixelRatio ?\n\t\t\t\tvar displayWidth  = canvas.clientWidth;\n\t\t\t\tvar displayHeight = canvas.clientHeight;\n\n\t\t\t\t// Check if the canvas is not the same size.\n\t\t\t\tif (canvas.width  != displayWidth ||\n\t\t\t\t\tcanvas.height != displayHeight) {\n\n\t\t\t\t\t// Make the canvas the same size\n\t\t\t\t\tcanvas.width  = displayWidth;\n\t\t\t\t\tcanvas.height = displayHeight;\n\t\t\t\t}\n\n\t\t\t\tSystem.render([frame]);\n\t\t\t\tif (SystemImpl.gl != null) {\n\t\t\t\t\t// Clear alpha for IE11\n\t\t\t\t\tSystemImpl.gl.clearColor(1, 1, 1, 1);\n\t\t\t\t\tSystemImpl.gl.colorMask(false, false, false, true);\n\t\t\t\t\tSystemImpl.gl.clear(GL.COLOR_BUFFER_BIT);\n\t\t\t\t\tSystemImpl.gl.colorMask(true, true, true, true);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (requestAnimationFrame == null) window.setTimeout(animate, 1000.0 / 60.0);\n\t\telse requestAnimationFrame(animate);\n\n\t\t// Autofocus\n\t\tcanvas.focus();\n\n\t\t#if kha_disable_context_menu\n\t\tcanvas.oncontextmenu = function (event: Dynamic) {\n\t\t\tevent.stopPropagation();\n\t\t\tevent.preventDefault();\n\t\t}\n\t\t#end\n\n\t\tcanvas.onmousedown = mouseDown;\n\t\tcanvas.onmousemove = mouseMove;\n\t\tif(keyboard != null) {\n\t\t\tcanvas.onkeydown = keyDown;\n\t\t\tcanvas.onkeyup = keyUp;\n\t\t\tcanvas.onkeypress = keyPress;\n\t\t}\n\t\tcanvas.onblur = onBlur;\n\t\tcanvas.onfocus = onFocus;\n\t\tuntyped (canvas.onmousewheel = canvas.onwheel = mouseWheel);\n\t\tcanvas.onmouseleave = mouseLeave;\n\n\t\tcanvas.addEventListener(\"wheel mousewheel\", mouseWheel, false);\n\t\tcanvas.addEventListener(\"touchstart\", touchDown, false);\n\t\tcanvas.addEventListener(\"touchend\", touchUp, false);\n\t\tcanvas.addEventListener(\"touchmove\", touchMove, false);\n\t\tcanvas.addEventListener(\"touchcancel\", touchCancel, false);\n\n#if kha_debug_html5\n\t\tBrowser.document.addEventListener('dragover', function( event ) {\n\t\t\tevent.preventDefault();\n\t\t});\n\n\t\tBrowser.document.addEventListener('drop', function( event: js.html.DragEvent ) {\n\t\t\tevent.preventDefault();\n\n\t\t\tif (event.dataTransfer != null && event.dataTransfer.files != null) {\n\t\t\t\tfor (file in event.dataTransfer.files) {\n\t\t\t\t\t// https://developer.mozilla.org/en-US/docs/Web/API/File\n\t\t\t\t\t//  - use mozFullPath or webkitRelativePath?\n\t\t\t\t\tSystem.dropFiles(untyped __js__('file.path'));\n\t\t\t\t}\n\t\t\t}\n\t\t});\n#end\n\n\t\tBrowser.window.addEventListener(\"unload\", function () {\n\t\t\tSystem.shutdown();\n\t\t});\n\t}\n\n\tpublic static function lockMouse(): Void {\n\t\tuntyped if (SystemImpl.khanvas.requestPointerLock) {\n\t\t\tSystemImpl.khanvas.requestPointerLock();\n\t\t}\n\t\telse if (SystemImpl.khanvas.mozRequestPointerLock) {\n\t\t\tSystemImpl.khanvas.mozRequestPointerLock();\n\t\t}\n\t\telse if (SystemImpl.khanvas.webkitRequestPointerLock) {\n\t\t\tSystemImpl.khanvas.webkitRequestPointerLock();\n\t\t}\n\t}\n\n\tpublic static function unlockMouse(): Void {\n\t\tuntyped if (document.exitPointerLock) {\n\t\t\tdocument.exitPointerLock();\n\t\t}\n\t\telse if (document.mozExitPointerLock) {\n\t\t\tdocument.mozExitPointerLock();\n\t\t}\n\t\telse if (document.webkitExitPointerLock) {\n\t\t\tdocument.webkitExitPointerLock();\n\t\t}\n\t}\n\n\tpublic static function canLockMouse(): Bool {\n\t\treturn untyped __js__(\"'pointerLockElement' in document ||\n\t\t'mozPointerLockElement' in document ||\n\t\t'webkitPointerLockElement' in document\");\n\t}\n\n\tpublic static function isMouseLocked(): Bool {\n\t\treturn untyped __js__(\"document.pointerLockElement === kha_SystemImpl.khanvas ||\n\t\t\tdocument.mozPointerLockElement === kha_SystemImpl.khanvas ||\n\t\t\tdocument.webkitPointerLockElement === kha_SystemImpl.khanvas\");\n\t}\n\n\tpublic static function notifyOfMouseLockChange(func: Void -> Void, error: Void -> Void): Void{\n\t\tjs.Browser.document.addEventListener('pointerlockchange', func, false);\n\t\tjs.Browser.document.addEventListener('mozpointerlockchange', func, false);\n\t\tjs.Browser.document.addEventListener('webkitpointerlockchange', func, false);\n\n\t\tjs.Browser.document.addEventListener('pointerlockerror', error, false);\n\t\tjs.Browser.document.addEventListener('mozpointerlockerror', error, false);\n\t\tjs.Browser.document.addEventListener('webkitpointerlockerror', error, false);\n\t}\n\n\tpublic static function removeFromMouseLockChange(func : Void -> Void, error  : Void -> Void) : Void{\n\t\tjs.Browser.document.removeEventListener('pointerlockchange', func, false);\n\t\tjs.Browser.document.removeEventListener('mozpointerlockchange', func, false);\n\t\tjs.Browser.document.removeEventListener('webkitpointerlockchange', func, false);\n\n\t\tjs.Browser.document.removeEventListener('pointerlockerror', error, false);\n\t\tjs.Browser.document.removeEventListener('mozpointerlockerror', error, false);\n\t\tjs.Browser.document.removeEventListener('webkitpointerlockerror', error, false);\n\t}\n\n\tprivate static function setMouseXY(event: MouseEvent): Void {\n\t\tvar rect = SystemImpl.khanvas.getBoundingClientRect();\n\t\tvar borderWidth = SystemImpl.khanvas.clientLeft;\n\t\tvar borderHeight = SystemImpl.khanvas.clientTop;\n\t\tmouseX = Std.int((event.clientX - rect.left - borderWidth) * SystemImpl.khanvas.width / (rect.width - 2 * borderWidth));\n\t\tmouseY = Std.int((event.clientY - rect.top - borderHeight) * SystemImpl.khanvas.height / (rect.height - 2 * borderHeight));\n\t}\n\n\tprivate static var iosSoundEnabled: Bool = false;\n\n\tprivate static function unlockiOSSound(): Void {\n\t\tif (!ios || iosSoundEnabled) return;\n\n\t\tvar buffer = MobileWebAudio._context.createBuffer(1, 1, 22050);\n\t\tvar source = MobileWebAudio._context.createBufferSource();\n\t\tsource.buffer = buffer;\n\t\tsource.connect(MobileWebAudio._context.destination);\n\t\t//untyped(if (source.noteOn) source.noteOn(0));\n\t\tsource.start();\n\t\tsource.stop();\n\n\t\tiosSoundEnabled = true;\n\t}\n\n\tstatic var soundEnabled = false;\n\n\tstatic function unlockSound(): Void {\n\t\tif (!soundEnabled) {\n\t\t\tvar context = kha.audio2.Audio._context;\n\n\t\t\tif (context == null) {\n\t\t\t\tcontext = untyped __js__('kha_audio2_Audio1._context');\n\t\t\t}\n\n\t\t\tif (context != null) {\n\t\t\t\tcontext.resume().then(function(c) {\n\t\t\t\t\tsoundEnabled = true;\n\t\t\t\t}).catchError(function(err) {\n\t\t\t\t\ttrace(err);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tkha.audio2.Audio.wakeChannels();\n\t\t}\n\t\tunlockiOSSound();\n\t}\n\n\tprivate static function mouseLeave():Void {\n\t\tmouse.sendLeaveEvent(0);\n\t}\n\n\tprivate static function mouseWheel(event: WheelEvent): Void {\n\t\tunlockSound();\n\t\tinsideInputEvent = true;\n\n\t\tswitch (Mouse.wheelEventBlockBehavior) {\n\t\t\tcase Full:\n\t\t\t\tevent.preventDefault();\n\t\t\tcase Custom(func):\n\t\t\t\tif (func(event)) event.preventDefault();\n\t\t\tcase None:\n\t\t}\n\n\t\t//Deltamode == 0, deltaY is in pixels.\n\t\tif (event.deltaMode == 0) {\n\t\t\tif (event.deltaY < 0) {\n\t\t\t\tmouse.sendWheelEvent(0, -1);\n\t\t\t}\n\t\t\telse if (event.deltaY > 0) {\n\t\t\t\tmouse.sendWheelEvent(0, 1);\n\t\t\t}\n\t\t\tinsideInputEvent = false;\n\t\t\treturn;\n\t\t}\n\n\t\t//Lines\n\t\tif (event.deltaMode == 1) {\n\t\t\tminimumScroll = Std.int(Math.min(minimumScroll, Math.abs(event.deltaY)));\n\t\t\tmouse.sendWheelEvent(0, Std.int(event.deltaY / minimumScroll));\n\t\t\tinsideInputEvent = false;\n\t\t\treturn;\n\t\t}\n\t\tinsideInputEvent = false;\n\t\treturn;\n\t}\n\n\tprivate static function mouseDown(event: MouseEvent): Void {\n\t\tinsideInputEvent = true;\n\t\tunlockSound();\n\n\t\tsetMouseXY(event);\n\t\tif (event.which == 1) { //left button\n\t\t\tmouse.sendDownEvent(0, 0, mouseX, mouseY);\n\n\t\t\tif (khanvas.setCapture != null)  {\n\t\t\t\tkhanvas.setCapture();\n\t\t\t}\n\t\t\telse {\n\t\t\t\tkhanvas.ownerDocument.addEventListener('mousemove', documentMouseMove, true);\n\t\t\t}\n\t\t\tkhanvas.ownerDocument.addEventListener('mouseup', mouseLeftUp);\n\t\t}\n\t\telse if(event.which == 2) { //middle button\n\t\t\tmouse.sendDownEvent(0, 2, mouseX, mouseY);\n\t\t\tkhanvas.ownerDocument.addEventListener('mouseup', mouseMiddleUp);\n\t\t}\n\t\telse if(event.which == 3) { //right button\n\t\t\tmouse.sendDownEvent(0, 1, mouseX, mouseY);\n\t\t\tkhanvas.ownerDocument.addEventListener('mouseup', mouseRightUp);\n\t\t}\n\t\tinsideInputEvent = false;\n\t}\n\n\tprivate static function mouseLeftUp(event: MouseEvent): Void {\n\t\tunlockSound();\n\n\t\tif (event.which != 1) return;\n\n\t\tinsideInputEvent = true;\n\t\tkhanvas.ownerDocument.removeEventListener('mouseup', mouseLeftUp);\n\t\tif (khanvas.releaseCapture != null) {\n\t\t\tkhanvas.ownerDocument.releaseCapture();\n\t\t}\n\t\telse {\n\t\t\tkhanvas.ownerDocument.removeEventListener(\"mousemove\", documentMouseMove, true);\n\t\t}\n\n\t\tmouse.sendUpEvent(0, 0, mouseX, mouseY);\n\n\t\tinsideInputEvent = false;\n\t}\n\n\tprivate static function mouseMiddleUp(event: MouseEvent): Void {\n\t\tunlockSound();\n\n\t\tif (event.which != 2) return;\n\n\t\tinsideInputEvent = true;\n\t\tkhanvas.ownerDocument.removeEventListener('mouseup', mouseMiddleUp);\n\t\tmouse.sendUpEvent(0, 2, mouseX, mouseY);\n\t\tinsideInputEvent = false;\n\t}\n\n\tprivate static function mouseRightUp(event: MouseEvent): Void {\n\t\tunlockSound();\n\n\t\tif (event.which != 3) return;\n\n\t\tinsideInputEvent = true;\n\t\tkhanvas.ownerDocument.removeEventListener('mouseup', mouseRightUp);\n\t\tmouse.sendUpEvent(0, 1, mouseX, mouseY);\n\t\tinsideInputEvent = false;\n\t}\n\n\tprivate static function documentMouseMove(event: MouseEvent): Void {\n\t\tevent.stopPropagation();\n\t\tmouseMove(event);\n\t}\n\n\tprivate static function mouseMove(event: MouseEvent): Void {\n\t\tinsideInputEvent = true;\n\n\t\tvar lastMouseX = mouseX;\n\t\tvar lastMouseY = mouseY;\n\t\tsetMouseXY(event);\n\n\t\tvar movementX = event.movementX;\n\t\tvar movementY = event.movementY;\n\n\t\tif (event.movementX == null) {\n\t\t\tmovementX = (untyped event.mozMovementX != null) ? untyped event.mozMovementX : ((untyped event.webkitMovementX != null) ? untyped event.webkitMovementX : (mouseX  - lastMouseX));\n\t\t\tmovementY = (untyped event.mozMovementY != null) ? untyped event.mozMovementY : ((untyped event.webkitMovementY != null) ? untyped event.webkitMovementY : (mouseY  - lastMouseY));\n\t\t}\n\n\t\t// this ensures same behaviour across browser until they fix it\n\t\tif (firefox) {\n\t\t\tmovementX = Std.int(movementX * Browser.window.devicePixelRatio);\n\t\t\tmovementY = Std.int(movementY * Browser.window.devicePixelRatio);\n\t\t}\n\n\t\tmouse.sendMoveEvent(0, mouseX, mouseY, movementX, movementY);\n\t\tinsideInputEvent = false;\n\t}\n\n\tprivate static function setTouchXY(touch: Touch): Void {\n\t\tvar rect = SystemImpl.khanvas.getBoundingClientRect();\n\t\tvar borderWidth = SystemImpl.khanvas.clientLeft;\n\t\tvar borderHeight = SystemImpl.khanvas.clientTop;\n\t\ttouchX = Std.int((touch.clientX - rect.left - borderWidth) * SystemImpl.khanvas.width / (rect.width - 2 * borderWidth));\n\t\ttouchY = Std.int((touch.clientY - rect.top - borderHeight) * SystemImpl.khanvas.height / (rect.height - 2 * borderHeight));\n\t}\n\n\tprivate static var iosTouchs: Array<Int> = [];\n\n\tprivate static function touchDown(event: TouchEvent): Void {\n\t\tinsideInputEvent = true;\n\t\tunlockSound();\n\n\t\tevent.stopPropagation();\n\n\t\tswitch (Surface.touchDownEventBlockBehavior) {\n\t\t\tcase Full:\n\t\t\t\tevent.preventDefault();\n\t\t\tcase Custom(func):\n\t\t\t\tif (func(event)) event.preventDefault();\n\t\t\tcase None:\n\t\t}\n\n\t\tvar index = 0;\n\t\tfor (touch in event.changedTouches)\t{\n\t\t\tvar id = touch.identifier;\n\t\t\tif (ios) {\n\t\t\t\tid = iosTouchs.indexOf(-1);\n\t\t\t\tif (id == -1) id = iosTouchs.length;\n\t\t\t\tiosTouchs[id] = touch.identifier;\n\t\t\t}\n\n\t\t\tsetTouchXY(touch);\n\t\t\tmouse.sendDownEvent(0, 0, touchX, touchY);\n\t\t\tsurface.sendTouchStartEvent(id, touchX, touchY);\n\t\t\tif (index == 0) {\n\t\t\t\tlastFirstTouchX = touchX;\n\t\t\t\tlastFirstTouchY = touchY;\n\t\t\t}\n\t\t\tindex++;\n\t\t}\n\t\tinsideInputEvent = false;\n\t}\n\n\tprivate static function touchUp(event: TouchEvent): Void {\n\t\tinsideInputEvent = true;\n\t\tunlockSound();\n\n\t\tfor (touch in event.changedTouches)\t{\n\t\t\tvar id = touch.identifier;\n\t\t\tif (ios) {\n\t\t\t\tid = iosTouchs.indexOf(id);\n\t\t\t\tiosTouchs[id] = -1;\n\t\t\t}\n\n\t\t\tsetTouchXY(touch);\n\t\t\tmouse.sendUpEvent(0, 0, touchX, touchY);\n\t\t\tsurface.sendTouchEndEvent(id, touchX, touchY);\n\t\t}\n\t\tinsideInputEvent = false;\n\t}\n\n\tprivate static function touchMove(event: TouchEvent): Void {\n\t\tinsideInputEvent = true;\n\t\tunlockSound();\n\n\t\tvar index = 0;\n\t\tfor (touch in event.changedTouches) {\n\t\t\tsetTouchXY(touch);\n\t\t\tif (index == 0) {\n\t\t\t\tvar movementX = touchX - lastFirstTouchX;\n\t\t\t\tvar movementY = touchY - lastFirstTouchY;\n\t\t\t\tlastFirstTouchX = touchX;\n\t\t\t\tlastFirstTouchY = touchY;\n\n\t\t\t\tmouse.sendMoveEvent(0, touchX, touchY, movementX, movementY);\n\t\t\t}\n\t\t\tvar id = touch.identifier;\n\t\t\tif (ios) id = iosTouchs.indexOf(id);\n\n\t\t\tsurface.sendMoveEvent(id, touchX, touchY);\n\t\t\tindex++;\n\t\t}\n\t\tinsideInputEvent = false;\n\t}\n\n\tprivate static function touchCancel(event: TouchEvent): Void {\n\t\tinsideInputEvent = true;\n\t\tunlockSound();\n\n\t\tfor (touch in event.changedTouches)\t{\n\t\t\tvar id = touch.identifier;\n\t\t\tif (ios) id = iosTouchs.indexOf(id);\n\n\t\t\tsetTouchXY(touch);\n\t\t\tmouse.sendUpEvent(0, 0, touchX, touchY);\n\t\t\tsurface.sendTouchEndEvent(id, touchX, touchY);\n\t\t}\n\t\tiosTouchs = [];\n\t\tinsideInputEvent = false;\n\t}\n\n\tprivate static function onBlur() {\n\t\t// System.pause();\n\t\tSystem.background();\n\t}\n\n\tprivate static function onFocus() {\n\t\t// System.resume();\n\t\tSystem.foreground();\n\t}\n\n\tprivate static function keycodeToChar(key: String, keycode: Int, shift: Bool): String {\n\t\tif (key != null) {\n\t\t\tif (key.length == 1) return key;\n\t\t\tswitch (key) {\n\t\t\t\tcase \"Add\":\n\t\t\t\t\treturn \"+\";\n\t\t\t\tcase \"Subtract\":\n\t\t\t\t\treturn \"-\";\n\t\t\t\tcase \"Multiply\":\n\t\t\t\t\treturn \"*\";\n\t\t\t\tcase \"Divide\":\n\t\t\t\t\treturn \"/\";\n\t\t\t}\n\t\t}\n\t\tswitch (keycode) {\n\t\t\tcase 187:\n\t\t\t\tif (shift) return \"*\";\n\t\t\t\telse return \"+\";\n\t\t\tcase 188:\n\t\t\t\tif (shift) return \";\";\n\t\t\t\telse return \",\";\n\t\t\tcase 189:\n\t\t\t\tif (shift) return \"_\";\n\t\t\t\telse return \"-\";\n\t\t\tcase 190:\n\t\t\t\tif (shift) return \":\";\n\t\t\t\telse return \".\";\n\t\t\tcase 191:\n\t\t\t\tif (shift) return \"'\";\n\t\t\t\telse return \"#\";\n\t\t\tcase 226:\n\t\t\t\tif (shift) return \">\";\n\t\t\t\telse return \"<\";\n\t\t\tcase 106:\n\t\t\t\treturn \"*\";\n\t\t\tcase 107:\n\t\t\t\treturn \"+\";\n\t\t\tcase 109:\n\t\t\t\treturn \"-\";\n\t\t\tcase 111:\n\t\t\t\treturn \"/\";\n\t\t\tcase 49:\n\t\t\t\tif (shift) return \"!\";\n\t\t\t\telse return \"1\";\n\t\t\tcase 50:\n\t\t\t\tif (shift) return \"\\\"\";\n\t\t\t\telse return \"2\";\n\t\t\tcase 51:\n\t\t\t\tif (shift) return \"§\";\n\t\t\t\telse return \"3\";\n\t\t\tcase 52:\n\t\t\t\tif (shift) return \"$\";\n\t\t\t\telse return \"4\";\n\t\t\tcase 53:\n\t\t\t\tif (shift) return \"%\";\n\t\t\t\telse return \"5\";\n\t\t\tcase 54:\n\t\t\t\tif (shift) return \"&\";\n\t\t\t\telse return \"6\";\n\t\t\tcase 55:\n\t\t\t\tif (shift) return \"/\";\n\t\t\t\telse return \"7\";\n\t\t\tcase 56:\n\t\t\t\tif (shift) return \"(\";\n\t\t\t\telse return \"8\";\n\t\t\tcase 57:\n\t\t\t\tif (shift) return \")\";\n\t\t\t\telse return \"9\";\n\t\t\tcase 48:\n\t\t\t\tif (shift) return \"=\";\n\t\t\t\telse return \"0\";\n\t\t\tcase 219:\n\t\t\t\tif (shift) return \"?\";\n\t\t\t\telse return \"ß\";\n\t\t\tcase 212:\n\t\t\t\tif (shift) return \"`\";\n\t\t\t\telse return \"´\";\n\t\t}\n\t\tif (keycode >= 96 && keycode <= 105) { // num block\n\t\t\treturn String.fromCharCode('0'.code - 96 + keycode);\n\t\t}\n\t\tif (keycode >= 'A'.code && keycode <= 'Z'.code) {\n\t\t\tif (shift) return String.fromCharCode(keycode);\n\t\t\telse return String.fromCharCode(keycode - 'A'.code + 'a'.code);\n\t\t}\n\t\treturn String.fromCharCode(keycode);\n\t}\n\n\tprivate static function keyDown(event: KeyboardEvent): Void {\n\t\tinsideInputEvent = true;\n\t\tunlockSound();\n\n\t\tswitch (Keyboard.keyBehavior) {\n\t\t\tcase Default:\n\t\t\t\tdefaultKeyBlock(event);\n\t\t\tcase Full:\n\t\t\t\tevent.preventDefault();\n\t\t\tcase Custom(func):\n\t\t\t\tif (func(cast event.keyCode)) event.preventDefault();\n\t\t\tcase None:\n\t\t}\n\t\tevent.stopPropagation();\n\n\t\t// prevent key repeat\n\t\tif (ie) {\n\t\t\tif (pressedKeys[event.keyCode]) {\n\t\t\t\tevent.preventDefault();\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tpressedKeys[event.keyCode] = true;\n\n\t\t} else if (event.repeat) {\n\t\t\tevent.preventDefault();\n\t\t\treturn;\n\t\t}\n\t\tvar keyCode = fixedKeyCode(event);\n\t\tkeyboard.sendDownEvent(keyCode);\n\t\tinsideInputEvent = false;\n\t}\n\n\tstatic function fixedKeyCode(event: KeyboardEvent): KeyCode {\n\t\treturn switch (event.keyCode) {\n\t\t\tcase 91, 93: Meta; // left/right in Chrome\n\t\t\tcase 186: Semicolon;\n\t\t\tcase 187: Equals;\n\t\t\tcase 189: HyphenMinus;\n\t\t\tdefault:\n\t\t\t\tcast event.keyCode;\n\t\t}\n\t}\n\n\tstatic function defaultKeyBlock(e: KeyboardEvent):Void {\n\t\t// block if ctrl key pressed\n\t\tif (e.ctrlKey || e.metaKey) {\n\t\t\t// except for cut-copy-paste\n\t\t\tif (e.keyCode == 67 || e.keyCode == 88 || e.keyCode == 86) return;\n\t\t\te.preventDefault();\n\t\t\treturn;\n\t\t}\n\t\t// allow F-keys\n\t\tif (e.keyCode >= 112 && e.keyCode <= 123) return;\n\t\t// allow char keys\n\t\tif (e.key == null || e.key.length == 1) return;\n\t\te.preventDefault();\n\t}\n\n\tprivate static function keyUp(event: KeyboardEvent): Void {\n\t\tinsideInputEvent = true;\n\t\tunlockSound();\n\n\t\tevent.preventDefault();\n\t\tevent.stopPropagation();\n\n\t\tif (ie) pressedKeys[event.keyCode] = false;\n\n\t\tvar keyCode = fixedKeyCode(event);\n\t\tkeyboard.sendUpEvent(keyCode);\n\n\t\tinsideInputEvent = false;\n\t}\n\n\tprivate static function keyPress(event: KeyboardEvent): Void {\n\t\tinsideInputEvent = true;\n\t\tunlockSound();\n\n\t\tif (event.which == 0) return; //for Firefox and Safari\n\t\tevent.preventDefault();\n\t\tevent.stopPropagation();\n\t\tkeyboard.sendPressEvent(String.fromCharCode(event.which));\n\n\t\tinsideInputEvent = false;\n\t}\n\n\tpublic static function canSwitchFullscreen(): Bool {\n\t\treturn untyped __js__(\"'fullscreenElement ' in document ||\n\t\t'mozFullScreenElement' in document ||\n\t\t'webkitFullscreenElement' in document ||\n\t\t'msFullscreenElement' in document\n\t\t\");\n\t}\n\n\tpublic static function notifyOfFullscreenChange(func: Void -> Void, error: Void -> Void): Void {\n\t\tjs.Browser.document.addEventListener('fullscreenchange', func, false);\n\t\tjs.Browser.document.addEventListener('mozfullscreenchange', func, false);\n\t\tjs.Browser.document.addEventListener('webkitfullscreenchange', func, false);\n\t\tjs.Browser.document.addEventListener('MSFullscreenChange', func, false);\n\n\t\tjs.Browser.document.addEventListener('fullscreenerror', error, false);\n\t\tjs.Browser.document.addEventListener('mozfullscreenerror', error, false);\n\t\tjs.Browser.document.addEventListener('webkitfullscreenerror', error, false);\n\t\tjs.Browser.document.addEventListener('MSFullscreenError', error, false);\n\t}\n\n\tpublic static function removeFromFullscreenChange(func: Void -> Void, error: Void -> Void): Void {\n\t\tjs.Browser.document.removeEventListener('fullscreenchange', func, false);\n\t\tjs.Browser.document.removeEventListener('mozfullscreenchange', func, false);\n\t\tjs.Browser.document.removeEventListener('webkitfullscreenchange', func, false);\n\t\tjs.Browser.document.removeEventListener('MSFullscreenChange', func, false);\n\n\t\tjs.Browser.document.removeEventListener('fullscreenerror', error, false);\n\t\tjs.Browser.document.removeEventListener('mozfullscreenerror', error, false);\n\t\tjs.Browser.document.removeEventListener('webkitfullscreenerror', error, false);\n\t\tjs.Browser.document.removeEventListener('MSFullscreenError', error, false);\n\t}\n\n\tpublic static function setKeepScreenOn(on: Bool): Void {\n\n\t}\n\n\tpublic static function loadUrl(url: String): Void {\n\t\tjs.Browser.window.open(url, \"_blank\");\n\t}\n\n\tpublic static function getGamepadId(index: Int): String {\n\t\tvar sysGamepads = getGamepads();\n\t\tif (sysGamepads != null &&  untyped sysGamepads[index]) {\n\t\t\t\treturn sysGamepads[index].id;\n\t\t}\n\n\t\treturn \"unkown\";\n\t}\n\n\tpublic static function getGamepadVendor(index: Int): String {\n\t\treturn \"unknown\";\n\t}\n\n\tprivate static function getGamepads(): Array<js.html.Gamepad> {\n\t\tif (chrome && kha.vr.VrInterface.instance.IsVrEnabled()) return null; // Chrome crashes if navigator.getGamepads() is called when using VR\n\n\t\tif (untyped navigator.getGamepads) {\n\t\t\treturn js.Browser.navigator.getGamepads();\n\t\t}\n\t\telse {\n\t\t\treturn null;\n\t\t}\n\t}\n\n\tpublic static function getPen(num: Int): kha.input.Pen {\n\t\treturn null;\n\t}\n\n\tpublic static function safeZone(): Float {\n\t\treturn 1.0;\n\t}\n\n\tpublic static function login(): Void {\n\n\t}\n\n\tpublic static function automaticSafeZone(): Bool {\n\t\treturn true;\n\t}\n\n\tpublic static function setSafeZone(value: Float): Void {\n\n\t}\n\n\tpublic static function unlockAchievement(id: Int): Void {\n\n\t}\n\n\tpublic static function waitingForLogin(): Bool {\n\t\treturn false;\n\t}\n\n\tpublic static function disallowUserChange(): Void {\n\n\t}\n\n\tpublic static function allowUserChange(): Void {\n\n\t}\n}\n","package kha;\r\n\r\n/**\r\n * This represents a Video file.\r\n */\r\nclass Video implements Resource {\r\n\t/**\r\n\t * The width of the video file in pixels.\r\n\t */\r\n\tpublic function width(): Int {\r\n\t\treturn 100;\r\n\t}\r\n\t\r\n\t/**\r\n\t * The height of the video file in pixels.\r\n\t */\r\n\tpublic function height(): Int {\r\n\t\treturn 100;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Create a new media object instance.\r\n\t */\r\n\tpublic function new() : Void {\r\n\r\n\t}\r\n\t\r\n\t/**\r\n\t * Play / resume the media element.\r\n\t * \r\n\t * @param loop\t\tIf playing it looped, default = false.\r\n\t */\r\n\tpublic function play(loop: Bool = false) : Void {\r\n\r\n\t}\r\n\t\r\n\t/**\r\n\t * Pause the media element.\r\n\t */\r\n\tpublic function pause() : Void {\r\n\r\n\t}\r\n\t\r\n\t/**\r\n\t * Pause the stop element.\r\n\t */\r\n\tpublic function stop() : Void {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Return the media length, in milliseconds.\r\n\t */\r\n\tpublic function getLength() : Int { // Milliseconds\r\n\t\treturn 0;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Return the media position, in milliseconds.\r\n\t * Deprecated.\r\n\t */\r\n\tpublic function getCurrentPos() : Int { // Milliseconds\r\n\t\treturn 0;\r\n\t}\r\n\r\n\tpublic var position(get, set): Int;\r\n\r\n\tprivate function get_position(): Int {\r\n\t\treturn 0;\r\n\t}\r\n\r\n\tprivate function set_position(value: Int): Int {\r\n\t\treturn 0;\r\n\t}\r\n\r\n\t/**\t\r\n\t * Return the media volume, between 0 and 1.\r\n\t */\r\n\tpublic function getVolume() : Float { // [0, 1]\r\n\t\treturn 1;\r\n\t}\r\n\r\n\t/**\r\n\t * Set the media volume, between 0 and 1.\r\n\t *\r\n\t * @param volume\tThe new volume, between 0 and 1.\r\n\t */\r\n\tpublic function setVolume(volume : Float) : Void { // [0, 1]\r\n\r\n\t}\r\n\t\r\n\t/**\r\n\t * If the media has finished or not.\r\n\t */\r\n\tpublic function isFinished() : Bool {\r\n\t\treturn getCurrentPos() >= getLength();\r\n\t}\r\n\r\n\t/**\r\n\t * Unload the resource from memory.\r\n\t */\r\n\tpublic function unload(): Void {\r\n\t\t\r\n\t}\r\n}\r\n","package kha;\r\n\r\nimport haxe.io.Bytes;\r\nimport js.Browser;\r\nimport js.lib.Uint8Array;\r\nimport js.lib.Uint16Array;\r\nimport js.lib.Float32Array;\r\nimport js.html.VideoElement;\r\nimport js.html.webgl.GL;\r\nimport js.html.webgl.Framebuffer;\r\nimport js.html.webgl.Renderbuffer;\r\nimport js.html.webgl.Texture;\r\nimport kha.graphics4.TextureFormat;\r\nimport kha.graphics4.DepthStencilFormat;\r\nimport kha.js.graphics4.Graphics;\r\n\r\nclass WebGLImage extends Image {\r\n\tpublic var image: Dynamic;\r\n\tpublic var video: VideoElement;\r\n\r\n\tprivate static var context: js.html.CanvasRenderingContext2D;\r\n\tprivate var data: js.html.ImageData;\r\n\r\n\tprivate var myWidth: Int;\r\n\tprivate var myHeight: Int;\r\n\tprivate var format: TextureFormat;\r\n\tprivate var renderTarget: Bool;\r\n\tprivate var samples: Int;\r\n\tpublic var frameBuffer: Framebuffer = null;\r\n\tpublic var renderBuffer: Renderbuffer = null;\r\n\tpublic var texture: Texture = null;\r\n\tpublic var depthTexture: Texture = null;\r\n\tpublic var MSAAFrameBuffer:Framebuffer=null;\r\n\tvar MSAAColorBuffer:Renderbuffer;\r\n\tvar MSAADepthBuffer:Renderbuffer;\r\n\r\n\r\n\tprivate var graphics1: kha.graphics1.Graphics;\r\n\tprivate var graphics2: kha.graphics2.Graphics;\r\n\tprivate var graphics4: kha.graphics4.Graphics;\r\n\r\n\tprivate var depthStencilFormat: DepthStencilFormat;\r\n\r\n\t// WebGL2 constants\r\n\tprivate static inline var GL_RGBA16F = 0x881A;\r\n\tprivate static inline var GL_RGBA32F = 0x8814;\r\n\tprivate static inline var GL_R16F = 0x822D;\r\n\tprivate static inline var GL_R32F = 0x822E;\r\n\tprivate static inline var GL_RED = 0x1903;\r\n\tprivate static inline var GL_DEPTH_COMPONENT24 = 0x81A6;\r\n\tprivate static inline var GL_DEPTH24_STENCIL8 = 0x88F0;\r\n\tprivate static inline var GL_DEPTH32F_STENCIL8 = 0x8CAD;\r\n\r\n\tstatic var canvas: js.html.CanvasElement;\r\n\r\n\tpublic static function init() {\r\n\t\tif (context == null) {\r\n\t\t\t// create only once\r\n\t\t\tcanvas = Browser.document.createCanvasElement();\r\n\t\t\tif (canvas != null) {\r\n\t\t\t\tcontext = canvas.getContext(\"2d\");\r\n\t\t\t\tcanvas.width = 4096;\r\n\t\t\t\tcanvas.height = 4096;\r\n\t\t\t\tcontext.globalCompositeOperation = \"copy\";\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tpublic function new(width: Int, height: Int, format: TextureFormat, renderTarget: Bool, depthStencilFormat: DepthStencilFormat, samples: Int) {\r\n\t\tmyWidth = width;\r\n\t\tmyHeight = height;\r\n\t\tthis.format = format;\r\n\t\tthis.renderTarget = renderTarget;\r\n\t\tthis.samples = samples;\r\n\t\timage = null;\r\n\t\tvideo = null;\r\n\t\tthis.depthStencilFormat = depthStencilFormat;\r\n\t\tinit();\r\n\t\tif (renderTarget) createTexture();\r\n\t}\r\n\r\n\toverride private function get_g1(): kha.graphics1.Graphics {\r\n\t\tif (graphics1 == null) {\r\n\t\t\tgraphics1 = new kha.graphics2.Graphics1(this);\r\n\t\t}\r\n\t\treturn graphics1;\r\n\t}\r\n\r\n\toverride private function get_g2(): kha.graphics2.Graphics {\r\n\t\tif (graphics2 == null) {\r\n\t\t\tgraphics2 = new kha.js.graphics4.Graphics2(this);\r\n\t\t}\r\n\t\treturn graphics2;\r\n\t}\r\n\r\n\toverride private function get_g4(): kha.graphics4.Graphics {\r\n\t\tif (graphics4 == null) {\r\n\t\t\tgraphics4 = new Graphics(this);\r\n\t\t}\r\n\t\treturn graphics4;\r\n\t}\r\n\r\n\toverride private function get_width(): Int {\r\n\t\treturn myWidth;\r\n\t}\r\n\r\n\toverride private function get_height(): Int {\r\n\t\treturn myHeight;\r\n\t}\r\n\r\n\toverride private function get_realWidth(): Int {\r\n\t\treturn myWidth;\r\n\t}\r\n\r\n\toverride private function get_realHeight(): Int {\r\n\t\treturn myHeight;\r\n\t}\r\n\r\n\toverride public function isOpaque(x: Int, y: Int): Bool {\r\n\t\tif (data == null) {\r\n\t\t\tif (context == null) return true;\r\n\t\t\telse createImageData();\r\n\t\t}\r\n\t\treturn (data.data[y * Std.int(image.width) * 4 + x * 4 + 3] != 0);\r\n\t}\r\n\r\n\toverride public function at(x: Int, y: Int): Color {\r\n\t\tif (data == null) {\r\n\t\t\tif (context == null) return Color.Black;\r\n\t\t\telse createImageData();\r\n\t\t}\r\n\r\n\t\tvar r = data.data[y * width * 4 + x * 4];\r\n\t\tvar g = data.data[y * width * 4 + x * 4 + 1];\r\n\t\tvar b = data.data[y * width * 4 + x * 4 + 2];\r\n\t\tvar a = data.data[y * width * 4 + x * 4 + 3];\r\n\r\n\t\treturn Color.fromValue((a << 24) | (r << 16) | (g << 8) | b);\r\n\t}\r\n\r\n\tfunction createImageData() {\r\n\t\tif (Std.is(image, Uint8Array)) {\r\n\t\t\tdata = new js.html.ImageData(new js.lib.Uint8ClampedArray(image.buffer), this.width, this.height);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tif (this.width > canvas.width || this.height > canvas.height) {\r\n\t\t\t\tvar cw = canvas.width;\r\n\t\t\t\tvar ch = canvas.height;\r\n\t\t\t\twhile (this.width > cw || this.height > ch) {\r\n\t\t\t\t\tcw *= 2;\r\n\t\t\t\t\tch *= 2;\r\n\t\t\t\t}\r\n\t\t\t\tcanvas.width = cw;\r\n\t\t\t\tcanvas.height = ch;\r\n\t\t\t}\r\n\t\t\tcontext.strokeStyle = \"rgba(0,0,0,0)\";\r\n\t\t\tcontext.fillStyle = \"rgba(0,0,0,0)\";\r\n\t\t\tcontext.fillRect(0, 0, image.width, image.height);\r\n\t\t\tcontext.drawImage(image, 0, 0, image.width, image.height, 0, 0, image.width, image.height);\r\n\t\t\tdata = context.getImageData(0, 0, image.width, image.height);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate static function upperPowerOfTwo(v: Int): Int {\r\n\t\tv--;\r\n\t\tv |= v >>> 1;\r\n\t\tv |= v >>> 2;\r\n\t\tv |= v >>> 4;\r\n\t\tv |= v >>> 8;\r\n\t\tv |= v >>> 16;\r\n\t\tv++;\r\n\t\treturn v;\r\n\t}\r\n\r\n\tpublic function createTexture(): Void {\r\n\t\tif (SystemImpl.gl == null) return;\r\n\t\ttexture = SystemImpl.gl.createTexture();\r\n\t\t//texture.image = image;\r\n\t\tSystemImpl.gl.bindTexture(GL.TEXTURE_2D, texture);\r\n\t\t//Sys.gl.pixelStorei(Sys.gl.UNPACK_FLIP_Y_WEBGL, true);\r\n\r\n\t\tSystemImpl.gl.texParameteri(GL.TEXTURE_2D, GL.TEXTURE_MAG_FILTER, GL.LINEAR);\r\n\t\tSystemImpl.gl.texParameteri(GL.TEXTURE_2D, GL.TEXTURE_MIN_FILTER, GL.LINEAR);\r\n\t\tSystemImpl.gl.texParameteri(GL.TEXTURE_2D, GL.TEXTURE_WRAP_S, GL.CLAMP_TO_EDGE);\r\n\t\tSystemImpl.gl.texParameteri(GL.TEXTURE_2D, GL.TEXTURE_WRAP_T, GL.CLAMP_TO_EDGE);\r\n\t\tif (renderTarget) {\r\n\t\t\tframeBuffer = SystemImpl.gl.createFramebuffer();\r\n\t\t\tSystemImpl.gl.bindFramebuffer(GL.FRAMEBUFFER, frameBuffer);\r\n\t\t\tswitch (format) {\r\n\t\t\tcase DEPTH16:\r\n\t\t\t\tSystemImpl.gl.texImage2D(GL.TEXTURE_2D, 0, SystemImpl.gl2 ? GL.DEPTH_COMPONENT16 : GL.DEPTH_COMPONENT, realWidth, realHeight, 0, GL.DEPTH_COMPONENT, GL.UNSIGNED_SHORT, null);\r\n\t\t\tcase RGBA128:\r\n\t\t\t\tSystemImpl.gl.texImage2D(GL.TEXTURE_2D, 0, SystemImpl.gl2 ? GL_RGBA32F : GL.RGBA, realWidth, realHeight, 0, GL.RGBA, GL.FLOAT, null);\r\n\t\t\tcase RGBA64:\r\n\t\t\t\tSystemImpl.gl.texImage2D(GL.TEXTURE_2D, 0, SystemImpl.gl2 ? GL_RGBA16F : GL.RGBA, realWidth, realHeight, 0, GL.RGBA, SystemImpl.halfFloat.HALF_FLOAT_OES, null);\r\n\t\t\tcase RGBA32:\r\n\t\t\t\tSystemImpl.gl.texImage2D(GL.TEXTURE_2D, 0, GL.RGBA, realWidth, realHeight, 0, GL.RGBA, GL.UNSIGNED_BYTE, null);\r\n\t\t\tcase A32:\r\n\t\t\t\tSystemImpl.gl.texImage2D(GL.TEXTURE_2D, 0, SystemImpl.gl2 ? GL_R32F : GL.ALPHA, realWidth, realHeight, 0, SystemImpl.gl2 ? GL_RED : GL.ALPHA, GL.FLOAT, null);\r\n\t\t\tcase A16:\r\n\t\t\t\tSystemImpl.gl.texImage2D(GL.TEXTURE_2D, 0, SystemImpl.gl2 ? GL_R16F : GL.ALPHA, realWidth, realHeight, 0, SystemImpl.gl2 ? GL_RED : GL.ALPHA, SystemImpl.halfFloat.HALF_FLOAT_OES, null);\r\n\t\t\tdefault:\r\n\t\t\t\tSystemImpl.gl.texImage2D(GL.TEXTURE_2D, 0, GL.RGBA, realWidth, realHeight, 0, GL.RGBA, GL.UNSIGNED_BYTE, null);\r\n\t\t\t}\r\n\r\n\t\t\tif (format == DEPTH16) {\r\n\t\t\t\tSystemImpl.gl.texParameteri(GL.TEXTURE_2D, GL.TEXTURE_MAG_FILTER, GL.NEAREST);\r\n\t\t\t\tSystemImpl.gl.texParameteri(GL.TEXTURE_2D, GL.TEXTURE_MIN_FILTER, GL.NEAREST);\r\n\t\t\t\tSystemImpl.gl.framebufferTexture2D(GL.FRAMEBUFFER, GL.DEPTH_ATTACHMENT, GL.TEXTURE_2D, texture, 0);\r\n\t\t\t\t// Some WebGL implementations throw incomplete framebuffer error, create color attachment\r\n\t\t\t\tif (!SystemImpl.gl2) {\r\n\t\t\t\t\tvar colortex = SystemImpl.gl.createTexture();\r\n\t\t\t\t\tSystemImpl.gl.bindTexture(GL.TEXTURE_2D, colortex);\r\n\t\t\t\t\tSystemImpl.gl.texImage2D(GL.TEXTURE_2D, 0, GL.RGBA, realWidth, realHeight, 0, GL.RGBA, GL.UNSIGNED_BYTE, null);\r\n\t\t\t\t\tSystemImpl.gl.framebufferTexture2D(GL.FRAMEBUFFER, GL.COLOR_ATTACHMENT0, GL.TEXTURE_2D, colortex, 0);\r\n\t\t\t\t\tSystemImpl.gl.bindTexture(GL.TEXTURE_2D, texture);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tif (samples>1&&SystemImpl.gl2) {\r\n\t\t\t\t\tMSAAFrameBuffer = SystemImpl.gl.createFramebuffer();\r\n\t\t\t\t\tMSAAColorBuffer = SystemImpl.gl.createRenderbuffer();\r\n\t\t\t\t\tSystemImpl.gl.bindRenderbuffer(GL.RENDERBUFFER, MSAAColorBuffer);\r\n\t\t\t\t\tvar MSAAFormat=switch (format) {\r\n\t\t\t\t\tcase RGBA128:\r\n\t\t\t\t\t\tuntyped SystemImpl.gl.RGBA32F;\r\n\t\t\t\t\tcase RGBA64:\r\n\t\t\t\t\t\tuntyped SystemImpl.gl.RGBA16F;\r\n\t\t\t\t\tcase RGBA32:\r\n\t\t\t\t\t\tuntyped SystemImpl.gl.RGBA8;\r\n\t\t\t\t\tcase A32:\r\n\t\t\t\t\t\tGL_R32F;\r\n\t\t\t\t\tcase A16:\r\n\t\t\t\t\t\tGL_R16F;\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\tuntyped SystemImpl.gl.RGBA8;\r\n\t\t\t\t\t};\r\n\t\t\t\t\tuntyped SystemImpl.gl.renderbufferStorageMultisample(GL.RENDERBUFFER,samples, MSAAFormat, realWidth, realHeight);\r\n\t\t\t\t\tSystemImpl.gl.bindFramebuffer(GL.FRAMEBUFFER, frameBuffer);\r\n\t\t\t\t\tSystemImpl.gl.framebufferRenderbuffer(GL.FRAMEBUFFER, GL.COLOR_ATTACHMENT0, GL.RENDERBUFFER, MSAAColorBuffer);\r\n\t\t\t\t\tSystemImpl.gl.bindFramebuffer(GL.FRAMEBUFFER, MSAAFrameBuffer);\r\n\t\t\t\t}\r\n\t\t\t\tSystemImpl.gl.framebufferTexture2D(GL.FRAMEBUFFER,GL.COLOR_ATTACHMENT0, GL.TEXTURE_2D, texture, 0);\r\n\t\t\t\tSystemImpl.gl.bindFramebuffer(GL.FRAMEBUFFER, null);\r\n\t\t\t}\r\n\r\n\t\t\tinitDepthStencilBuffer(depthStencilFormat);\r\n\t\t\tvar e=SystemImpl.gl.checkFramebufferStatus(GL.FRAMEBUFFER);\r\n\t\t\tif (e != GL.FRAMEBUFFER_COMPLETE) {\r\n\t\t\t\ttrace(\"checkframebufferStatus error \"+e);\r\n\t\t\t}\r\n\r\n\t\t\tSystemImpl.gl.bindRenderbuffer(GL.RENDERBUFFER, null);\r\n\t\t\tSystemImpl.gl.bindFramebuffer(GL.FRAMEBUFFER, null);\r\n\t\t}\r\n\t\telse if (video != null) {\r\n\t\t\tSystemImpl.gl.texImage2D(GL.TEXTURE_2D, 0, GL.RGBA, GL.RGBA, GL.UNSIGNED_BYTE, video);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tswitch (format) {\r\n\t\t\tcase RGBA128:\r\n\t\t\t\tSystemImpl.gl.texImage2D(GL.TEXTURE_2D, 0, SystemImpl.gl2 ? GL_RGBA32F : GL.RGBA, myWidth, myHeight, 0, GL.RGBA, GL.FLOAT, image);\r\n\t\t\tcase RGBA64:\r\n\t\t\t\tSystemImpl.gl.texImage2D(GL.TEXTURE_2D, 0, SystemImpl.gl2 ? GL_RGBA16F : GL.RGBA, myWidth, myHeight, 0, GL.RGBA, SystemImpl.halfFloat.HALF_FLOAT_OES, image);\r\n\t\t\tcase RGBA32:\r\n\t\t\t\tif (Std.is(image, Uint8Array)) {\r\n\t\t\t\t\tSystemImpl.gl.texImage2D(GL.TEXTURE_2D, 0, GL.RGBA, myWidth, myHeight, 0, GL.RGBA, GL.UNSIGNED_BYTE, image);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tSystemImpl.gl.texImage2D(GL.TEXTURE_2D, 0, GL.RGBA, GL.RGBA, GL.UNSIGNED_BYTE, image);\r\n\t\t\t\t}\r\n\t\t\tcase A32:\r\n\t\t\t\tSystemImpl.gl.texImage2D(GL.TEXTURE_2D, 0, SystemImpl.gl2 ? GL_R32F : GL.ALPHA, myWidth, myHeight, 0, SystemImpl.gl2 ? GL_RED : GL.ALPHA, GL.FLOAT, image);\r\n\t\t\tcase A16:\r\n\t\t\t\tSystemImpl.gl.texImage2D(GL.TEXTURE_2D, 0, SystemImpl.gl2 ? GL_R16F : GL.ALPHA, myWidth, myHeight, 0, SystemImpl.gl2 ? GL_RED : GL.ALPHA, SystemImpl.halfFloat.HALF_FLOAT_OES, image);\r\n\t\t\tcase L8:\r\n\t\t\t\tSystemImpl.gl.texImage2D(GL.TEXTURE_2D, 0, GL.LUMINANCE, myWidth, myHeight, 0, GL.LUMINANCE, GL.UNSIGNED_BYTE, image);\r\n\t\t\tdefault:\r\n\t\t\t\tSystemImpl.gl.texImage2D(GL.TEXTURE_2D, 0, GL.RGBA, GL.RGBA, GL.UNSIGNED_BYTE, image);\r\n\t\t\t}\r\n\t\t}\r\n\t\tSystemImpl.gl.bindTexture(GL.TEXTURE_2D, null);\r\n\t}\r\n\r\n\tprivate function initDepthStencilBuffer(depthStencilFormat: DepthStencilFormat) {\r\n\t\tswitch (depthStencilFormat) {\r\n\t\tcase NoDepthAndStencil:\r\n\t\tcase DepthOnly, Depth16: {\r\n\t\t\tif (SystemImpl.depthTexture == null) {\r\n\t\t\t\trenderBuffer = SystemImpl.gl.createRenderbuffer();\r\n\t\t\t\tSystemImpl.gl.bindRenderbuffer(GL.RENDERBUFFER, renderBuffer);\r\n\t\t\t\tSystemImpl.gl.renderbufferStorage(GL.RENDERBUFFER, GL.DEPTH_COMPONENT16, realWidth, realHeight);\r\n\t\t\t\tSystemImpl.gl.framebufferRenderbuffer(GL.FRAMEBUFFER, GL.DEPTH_ATTACHMENT, GL.RENDERBUFFER, renderBuffer);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tdepthTexture = SystemImpl.gl.createTexture();\r\n\t\t\t\tSystemImpl.gl.bindTexture(GL.TEXTURE_2D, depthTexture);\r\n\t\t\t\tif (depthStencilFormat == DepthOnly) SystemImpl.gl.texImage2D(GL.TEXTURE_2D, 0, SystemImpl.gl2 ? GL_DEPTH_COMPONENT24 : GL.DEPTH_COMPONENT, realWidth, realHeight, 0, GL.DEPTH_COMPONENT, GL.UNSIGNED_INT, null);\r\n\t\t\t\telse SystemImpl.gl.texImage2D(GL.TEXTURE_2D, 0, SystemImpl.gl2 ? GL.DEPTH_COMPONENT16 : GL.DEPTH_COMPONENT, realWidth, realHeight, 0, GL.DEPTH_COMPONENT, GL.UNSIGNED_SHORT, null);\r\n\t\t\t\tSystemImpl.gl.texParameteri(GL.TEXTURE_2D, GL.TEXTURE_MAG_FILTER, GL.NEAREST);\r\n\t\t\t\tSystemImpl.gl.texParameteri(GL.TEXTURE_2D, GL.TEXTURE_MIN_FILTER, GL.NEAREST);\r\n\t\t\t\tSystemImpl.gl.texParameteri(GL.TEXTURE_2D, GL.TEXTURE_WRAP_S, GL.CLAMP_TO_EDGE);\r\n\t\t\t\tSystemImpl.gl.texParameteri(GL.TEXTURE_2D, GL.TEXTURE_WRAP_T, GL.CLAMP_TO_EDGE);\r\n\t\t\t\tSystemImpl.gl.bindFramebuffer(GL.FRAMEBUFFER, frameBuffer);\r\n\r\n\t\t\t\tif (samples>1&&SystemImpl.gl2) {\r\n\t\t\t\t\tMSAADepthBuffer = SystemImpl.gl.createRenderbuffer();\r\n\t\t\t\t\tSystemImpl.gl.bindRenderbuffer(GL.RENDERBUFFER, MSAADepthBuffer);\r\n\t\t\t\t\tif (depthStencilFormat == DepthOnly) untyped SystemImpl.gl.renderbufferStorageMultisample(GL.RENDERBUFFER,samples,GL_DEPTH_COMPONENT24, realWidth, realHeight);\r\n\t\t\t\t\telse untyped SystemImpl.gl.renderbufferStorageMultisample(GL.RENDERBUFFER,samples,GL.DEPTH_COMPONENT16, realWidth, realHeight);\r\n\t\t\t\t\tSystemImpl.gl.bindFramebuffer(GL.FRAMEBUFFER, frameBuffer);\r\n\t\t\t\t\tSystemImpl.gl.framebufferRenderbuffer(GL.FRAMEBUFFER, GL.DEPTH_ATTACHMENT, GL.RENDERBUFFER, MSAADepthBuffer);\r\n\t\t\t\t\tSystemImpl.gl.bindFramebuffer(GL.FRAMEBUFFER, MSAAFrameBuffer);\r\n\r\n\t\t\t\t}\r\n\t\t\t\tSystemImpl.gl.framebufferTexture2D(GL.FRAMEBUFFER, GL.DEPTH_ATTACHMENT, GL.TEXTURE_2D, depthTexture, 0);\r\n\t\t\t\tSystemImpl.gl.bindFramebuffer(GL.FRAMEBUFFER, null);\r\n\r\n\t\t\t}\r\n\t\t}\r\n\t\tcase DepthAutoStencilAuto, Depth24Stencil8, Depth32Stencil8:\r\n\t\t\tif (SystemImpl.depthTexture == null) {\r\n\t\t\t\trenderBuffer = SystemImpl.gl.createRenderbuffer();\r\n\t\t\t\tSystemImpl.gl.bindRenderbuffer(GL.RENDERBUFFER, renderBuffer);\r\n\t\t\t\tSystemImpl.gl.renderbufferStorage(GL.RENDERBUFFER, GL.DEPTH_STENCIL, realWidth, realHeight);\r\n\t\t\t\tSystemImpl.gl.framebufferRenderbuffer(GL.FRAMEBUFFER, GL.DEPTH_STENCIL_ATTACHMENT, GL.RENDERBUFFER, renderBuffer);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tdepthTexture = SystemImpl.gl.createTexture();\r\n\t\t\t\tSystemImpl.gl.bindTexture(GL.TEXTURE_2D, depthTexture);\r\n\t\t\t\tSystemImpl.gl.texImage2D(GL.TEXTURE_2D, 0, SystemImpl.gl2 ? GL_DEPTH24_STENCIL8 : GL.DEPTH_STENCIL, realWidth, realHeight, 0, GL.DEPTH_STENCIL, SystemImpl.depthTexture.UNSIGNED_INT_24_8_WEBGL, null);\r\n\t\t\t\tSystemImpl.gl.texParameteri(GL.TEXTURE_2D, GL.TEXTURE_MAG_FILTER, GL.NEAREST);\r\n\t\t\t\tSystemImpl.gl.texParameteri(GL.TEXTURE_2D, GL.TEXTURE_MIN_FILTER, GL.NEAREST);\r\n\t\t\t\tSystemImpl.gl.texParameteri(GL.TEXTURE_2D, GL.TEXTURE_WRAP_S, GL.CLAMP_TO_EDGE);\r\n\t\t\t\tSystemImpl.gl.texParameteri(GL.TEXTURE_2D, GL.TEXTURE_WRAP_T, GL.CLAMP_TO_EDGE);\r\n\t\t\t\tSystemImpl.gl.bindFramebuffer(GL.FRAMEBUFFER, frameBuffer);\r\n\t\t\t\tif (samples>1&&SystemImpl.gl2) {\r\n\t\t\t\t\tMSAADepthBuffer = SystemImpl.gl.createRenderbuffer();\r\n\t\t\t\t\tSystemImpl.gl.bindRenderbuffer(GL.RENDERBUFFER, MSAADepthBuffer);\r\n\t\t\t\t\tuntyped SystemImpl.gl.renderbufferStorageMultisample(GL.RENDERBUFFER,samples, GL_DEPTH24_STENCIL8, realWidth, realHeight);\r\n\t\t\t\t\tSystemImpl.gl.bindFramebuffer(GL.FRAMEBUFFER, frameBuffer);\r\n\t\t\t\t\tSystemImpl.gl.framebufferRenderbuffer(GL.FRAMEBUFFER, GL.DEPTH_STENCIL_ATTACHMENT, GL.RENDERBUFFER, MSAADepthBuffer);\r\n\t\t\t\t\tSystemImpl.gl.bindFramebuffer(GL.FRAMEBUFFER, MSAAFrameBuffer);\r\n\r\n\t\t\t\t}\r\n\t\t\t\tSystemImpl.gl.framebufferTexture2D(GL.FRAMEBUFFER, GL.DEPTH_STENCIL_ATTACHMENT, GL.TEXTURE_2D, depthTexture, 0);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tpublic function set(stage: Int): Void {\r\n\t\tSystemImpl.gl.activeTexture(GL.TEXTURE0 + stage);\r\n\t\tSystemImpl.gl.bindTexture(GL.TEXTURE_2D, texture);\r\n\t\tif (video != null) SystemImpl.gl.texImage2D(GL.TEXTURE_2D, 0, GL.RGBA, GL.RGBA, GL.UNSIGNED_BYTE, video);\r\n\t}\r\n\r\n\tpublic function setDepth(stage: Int): Void {\r\n\t\tSystemImpl.gl.activeTexture(GL.TEXTURE0 + stage);\r\n\t\tSystemImpl.gl.bindTexture(GL.TEXTURE_2D, depthTexture);\r\n\t}\r\n\r\n\toverride public function setDepthStencilFrom(image: Image): Void {\r\n\t\tdepthTexture = cast(image, WebGLImage).depthTexture;\r\n\t\tSystemImpl.gl.bindFramebuffer(GL.FRAMEBUFFER, frameBuffer);\r\n\t\tSystemImpl.gl.framebufferTexture2D(GL.FRAMEBUFFER, GL.DEPTH_ATTACHMENT, GL.TEXTURE_2D, depthTexture, 0);\r\n\t}\r\n\r\n\tprivate static function formatByteSize(format: TextureFormat): Int {\r\n\t\treturn switch(format) {\r\n\t\t\tcase RGBA32: 4;\r\n\t\t\tcase L8: 1;\r\n\t\t\tcase RGBA128: 16;\r\n\t\t\tcase DEPTH16: 2;\r\n\t\t\tcase RGBA64: 8;\r\n\t\t\tcase A32: 4;\r\n\t\t\tcase A16: 2;\r\n\t\t\tdefault: 4;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic function bytesToArray(bytes: Bytes): js.lib.ArrayBufferView {\r\n\t\treturn switch(format) {\r\n\t\t\tcase RGBA32, L8:\r\n\t\t\t\tnew Uint8Array(bytes.getData());\r\n\t\t\tcase RGBA128, RGBA64, A32, A16:\r\n\t\t\t\tnew Float32Array(bytes.getData());\r\n\t\t\tdefault:\r\n\t\t\t\tnew Uint8Array(bytes.getData());\r\n\t\t}\r\n\t}\r\n\r\n\tpublic var bytes: Bytes;\r\n\r\n\toverride public function lock(level: Int = 0): Bytes {\r\n\t\tbytes = Bytes.alloc(formatByteSize(format) * width * height);\r\n\t\treturn bytes;\r\n\t}\r\n\r\n\toverride public function unlock(): Void {\r\n\t\tif (SystemImpl.gl != null) {\r\n\t\t\ttexture = SystemImpl.gl.createTexture();\r\n\t\t\t//texture.image = image;\r\n\t\t\tSystemImpl.gl.bindTexture(GL.TEXTURE_2D, texture);\r\n\t\t\t//Sys.gl.pixelStorei(Sys.gl.UNPACK_FLIP_Y_WEBGL, true);\r\n\r\n\t\t\tSystemImpl.gl.texParameteri(GL.TEXTURE_2D, GL.TEXTURE_MAG_FILTER, GL.LINEAR);\r\n\t\t\tSystemImpl.gl.texParameteri(GL.TEXTURE_2D, GL.TEXTURE_MIN_FILTER, GL.LINEAR);\r\n\t\t\tSystemImpl.gl.texParameteri(GL.TEXTURE_2D, GL.TEXTURE_WRAP_S, GL.CLAMP_TO_EDGE);\r\n\t\t\tSystemImpl.gl.texParameteri(GL.TEXTURE_2D, GL.TEXTURE_WRAP_T, GL.CLAMP_TO_EDGE);\r\n\r\n\t\t\tswitch (format) {\r\n\t\t\tcase L8:\r\n\t\t\t\tSystemImpl.gl.texImage2D(GL.TEXTURE_2D, 0, GL.LUMINANCE, width, height, 0, GL.LUMINANCE, GL.UNSIGNED_BYTE, bytesToArray(bytes));\r\n\r\n\t\t\t\tif (SystemImpl.gl.getError() == 1282) { // no LUMINANCE support in IE11\r\n\t\t\t\t\tvar rgbaBytes = Bytes.alloc(width * height * 4);\r\n\t\t\t\t\tfor (y in 0...height) for (x in 0...width) {\r\n\t\t\t\t\t\tvar value = bytes.get(y * width + x);\r\n\t\t\t\t\t\trgbaBytes.set(y * width * 4 + x * 4 + 0, value);\r\n\t\t\t\t\t\trgbaBytes.set(y * width * 4 + x * 4 + 1, value);\r\n\t\t\t\t\t\trgbaBytes.set(y * width * 4 + x * 4 + 2, value);\r\n\t\t\t\t\t\trgbaBytes.set(y * width * 4 + x * 4 + 3, 255);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tSystemImpl.gl.texImage2D(GL.TEXTURE_2D, 0, GL.RGBA, width, height, 0, GL.RGBA, GL.UNSIGNED_BYTE, bytesToArray(rgbaBytes));\r\n\t\t\t\t}\r\n\t\t\tcase RGBA128:\r\n\t\t\t\tSystemImpl.gl.texImage2D(GL.TEXTURE_2D, 0, SystemImpl.gl2 ? GL_RGBA32F : GL.RGBA, width, height, 0, GL.RGBA, GL.FLOAT, bytesToArray(bytes));\r\n\t\t\tcase RGBA64:\r\n\t\t\t\tSystemImpl.gl.texImage2D(GL.TEXTURE_2D, 0, SystemImpl.gl2 ? GL_RGBA16F : GL.RGBA, width, height, 0, GL.RGBA, SystemImpl.halfFloat.HALF_FLOAT_OES, bytesToArray(bytes));\r\n\t\t\tcase A32:\r\n\t\t\t\tSystemImpl.gl.texImage2D(GL.TEXTURE_2D, 0, SystemImpl.gl2 ? GL_R32F : GL.ALPHA, width, height, 0, SystemImpl.gl2 ? GL_RED : GL.ALPHA, GL.FLOAT, bytesToArray(bytes));\r\n\t\t\tcase A16:\r\n\t\t\t\tSystemImpl.gl.texImage2D(GL.TEXTURE_2D, 0, SystemImpl.gl2 ? GL_R16F : GL.ALPHA, width, height, 0, SystemImpl.gl2 ? GL_RED : GL.ALPHA, SystemImpl.halfFloat.HALF_FLOAT_OES, bytesToArray(bytes));\r\n\t\t\tcase RGBA32:\r\n\t\t\t\tSystemImpl.gl.texImage2D(GL.TEXTURE_2D, 0, GL.RGBA, width, height, 0, GL.RGBA, GL.UNSIGNED_BYTE, bytesToArray(bytes));\r\n\t\t\tdefault:\r\n\t\t\t\tSystemImpl.gl.texImage2D(GL.TEXTURE_2D, 0, GL.RGBA, width, height, 0, GL.RGBA, GL.UNSIGNED_BYTE, bytesToArray(bytes));\r\n\t\t\t}\r\n\r\n\t\t\tSystemImpl.gl.bindTexture(GL.TEXTURE_2D, null);\r\n\t\t\tbytes = null;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate var pixels: js.lib.ArrayBufferView = null;\r\n\r\n\toverride public function getPixels(): Bytes {\r\n\t\tif (frameBuffer == null) return null;\r\n\t\tif (pixels == null) {\r\n\t\t\tswitch (format) {\r\n\t\t\tcase RGBA128, A32:\r\n\t\t\t\tpixels = new Float32Array(Std.int(formatByteSize(format) / 4) * width * height);\r\n\t\t\tcase RGBA64, A16:\r\n\t\t\t\tpixels = new Uint16Array(Std.int(formatByteSize(format) / 2) * width * height);\r\n\t\t\tcase RGBA32, L8:\r\n\t\t\t\tpixels = new Uint8Array(formatByteSize(format) * width * height);\r\n\t\t\tdefault:\r\n\t\t\t\tpixels = new Uint8Array(formatByteSize(format) * width * height);\r\n\t\t\t}\r\n\t\t}\r\n\t\tSystemImpl.gl.bindFramebuffer(GL.FRAMEBUFFER, frameBuffer);\r\n\t\tswitch (format) {\r\n\t\tcase RGBA128:\r\n\t\t\tSystemImpl.gl.readPixels(0, 0, myWidth, myHeight, GL.RGBA, GL.FLOAT, pixels);\r\n\t\tcase RGBA64:\r\n\t\t\tSystemImpl.gl.readPixels(0, 0, myWidth, myHeight, GL.RGBA, SystemImpl.halfFloat.HALF_FLOAT_OES, pixels);\r\n\t\tcase RGBA32:\r\n\t\t\tSystemImpl.gl.readPixels(0, 0, myWidth, myHeight, GL.RGBA, GL.UNSIGNED_BYTE, pixels);\r\n\t\tcase A32:\r\n\t\t\tSystemImpl.gl.readPixels(0, 0, myWidth, myHeight, SystemImpl.gl2 ? GL_RED : GL.ALPHA, GL.FLOAT, pixels);\r\n\t\tcase A16:\r\n\t\t\tSystemImpl.gl.readPixels(0, 0, myWidth, myHeight, SystemImpl.gl2 ? GL_RED : GL.ALPHA, SystemImpl.halfFloat.HALF_FLOAT_OES, pixels);\r\n\t\tcase L8:\r\n\t\t\tSystemImpl.gl.readPixels(0, 0, myWidth, myHeight, SystemImpl.gl2 ? GL_RED : GL.ALPHA, GL.UNSIGNED_BYTE, pixels);\r\n\t\tdefault:\r\n\t\t\tSystemImpl.gl.readPixels(0, 0, myWidth, myHeight, GL.RGBA, GL.UNSIGNED_BYTE, pixels);\r\n\t\t}\r\n\t\treturn Bytes.ofData(pixels.buffer);\r\n\t}\r\n\r\n\toverride public function unload(): Void {\r\n\t\tif (texture != null) SystemImpl.gl.deleteTexture(texture);\r\n\t\tif (depthTexture != null) SystemImpl.gl.deleteTexture(depthTexture);\r\n\t\tif (frameBuffer != null) SystemImpl.gl.deleteFramebuffer(frameBuffer);\r\n\t\tif (renderBuffer != null) SystemImpl.gl.deleteRenderbuffer(renderBuffer);\r\n\t\tif (MSAAFrameBuffer != null) SystemImpl.gl.deleteFramebuffer(MSAAFrameBuffer);\r\n\t\tif(MSAAColorBuffer != null)SystemImpl.gl.deleteRenderbuffer(MSAAColorBuffer);\r\n\t\tif(MSAADepthBuffer != null)SystemImpl.gl.deleteRenderbuffer(MSAADepthBuffer);\r\n\t}\r\n\r\n\toverride public function generateMipmaps(levels: Int): Void {\r\n\t\t// WebGL requires to generate all mipmaps down to 1x1 size, ignoring levels for now\r\n\t\tSystemImpl.gl.bindTexture(GL.TEXTURE_2D, texture);\r\n\t\tSystemImpl.gl.generateMipmap(GL.TEXTURE_2D);\r\n\t}\r\n\r\n\toverride public function setMipmaps(mipmaps: Array<Image>): Void {\r\n\t\t// Similar to generateMipmaps, specify all the levels down to 1x1 size\r\n\t\tSystemImpl.gl.bindTexture(GL.TEXTURE_2D, texture);\r\n\t\tif (format == TextureFormat.RGBA128) {\r\n\t\t\tfor (i in 0...mipmaps.length) {\r\n\t\t\t\tSystemImpl.gl.texImage2D(GL.TEXTURE_2D, i + 1, SystemImpl.gl2 ? GL_RGBA32F : GL.RGBA, mipmaps[i].width, mipmaps[i].height, 0, GL.RGBA, GL.FLOAT, cast(mipmaps[i], WebGLImage).image);\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if (format == TextureFormat.RGBA64) {\r\n\t\t\tfor (i in 0...mipmaps.length) {\r\n\t\t\t\tSystemImpl.gl.texImage2D(GL.TEXTURE_2D, i + 1, SystemImpl.gl2 ? GL_RGBA16F : GL.RGBA, mipmaps[i].width, mipmaps[i].height, 0, GL.RGBA, SystemImpl.halfFloat.HALF_FLOAT_OES, cast(mipmaps[i], WebGLImage).image);\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tfor (i in 0...mipmaps.length) {\r\n\t\t\t\tSystemImpl.gl.texImage2D(GL.TEXTURE_2D, i + 1, GL.RGBA, GL.RGBA, GL.UNSIGNED_BYTE, cast(mipmaps[i], WebGLImage).image);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n","package kha;\n\nclass Window {\n\tstatic var windows: Array<Window> = [];\n\tvar canvas: js.html.CanvasElement;\n\tvar defaultWidth: Int;\n\tvar defaultHeight: Int;\n\n\t@:noCompletion\n\t@:noDoc\n\tpublic function new(defaultWidth: Int, defaultHeight: Int, canvas: js.html.CanvasElement) {\n\t\tthis.canvas = canvas;\n\t\tthis.defaultWidth = defaultWidth;\n\t\tthis.defaultHeight = defaultHeight;\n\t\twindows.push(this);\n\t}\n\n\tpublic static function create(win: WindowOptions = null, frame: FramebufferOptions = null): Window {\n\t\treturn null;\n\t}\n\n\tpublic static function destroy(window: Window): Void {}\n\n\tpublic static function get(index: Int): Window {\n\t\treturn windows[index];\n\t}\n\n\tpublic static var all(get, never): Array<Window>;\n\t\n\tstatic function get_all(): Array<Window> {\n\t\treturn windows;\n\t}\n\n\tpublic function resize(width: Int, height: Int): Void {}\n\n\tpublic function move(x: Int, y: Int): Void {}\n\n\tpublic function changeWindowFeatures(features: Int): Void {}\n\n\tpublic function changeFramebuffer(frame: FramebufferOptions): Void {}\n\n\tpublic var x(get, set): Int;\n\n\tfunction get_x(): Int {\n\t\treturn 0;\n\t}\n\n\tfunction set_x(value: Int): Int {\n\t\treturn 0;\n\t}\n\n\tpublic var y(get, set): Int;\n\n\tfunction get_y(): Int {\n\t\treturn 0;\n\t}\n\n\tfunction set_y(value: Int): Int {\n\t\treturn 0;\n\t}\n\n\tpublic var width(get, set): Int;\n\n\tfunction get_width(): Int {\n\t\treturn canvas.clientWidth == 0 ? defaultWidth : canvas.clientWidth;\n\t}\n\n\tfunction set_width(value: Int): Int {\n\t\treturn 800;\n\t}\n\n\tpublic var height(get, set): Int;\n\n\tfunction get_height(): Int {\n\t\treturn canvas.clientHeight == 0 ? defaultHeight : canvas.clientHeight;\n\t}\n\n\tfunction set_height(value: Int): Int {\n\t\treturn 600;\n\t}\n\n\tpublic var mode(get, set): WindowMode;\n\n\tfunction get_mode(): WindowMode {\n\t\treturn isFullscreen()? Fullscreen:Windowed;\n\t}\n\n\tfunction set_mode(mode: WindowMode): WindowMode {\n\t\tif (mode == Fullscreen || mode == ExclusiveFullscreen) {\n\t\t\tif (!isFullscreen()) {\n\t\t\t\trequestFullscreen();\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tif (isFullscreen()) {\n\t\t\t\texitFullscreen();\n\t\t\t}\n\t\t}\n\t\treturn mode;\n\t}\n\n\tfunction isFullscreen(): Bool {\n\t\treturn untyped __js__(\"document.fullscreenElement === this.canvas ||\n\t\t\tdocument.mozFullScreenElement === this.canvas ||\n\t\t\tdocument.webkitFullscreenElement === this.canvas ||\n\t\t\tdocument.msFullscreenElement === this.canvas \");\n\t}\n\n\tfunction requestFullscreen(): Void {\n\t\tuntyped if (canvas.requestFullscreen) {\n\t\t\tvar c: Dynamic = canvas;\n\t\t\tc.requestFullscreen({navigationUI: \"hide\"});\n\t\t}\n\t\telse if (canvas.msRequestFullscreen) {\n\t\t\tcanvas.msRequestFullscreen();\n\t\t}\n\t\telse if (canvas.mozRequestFullScreen) {\n\t\t\tcanvas.mozRequestFullScreen();\n\t\t}\n\t\telse if (canvas.webkitRequestFullscreen){\n\t\t\tcanvas.webkitRequestFullscreen();\n\t\t}\n\t}\n\n\tfunction exitFullscreen(): Void {\n\t\tuntyped if (document.exitFullscreen) {\n\t\t\tdocument.exitFullscreen();\n\t\t}\n\t\telse if (document.msExitFullscreen) {\n\t\t\tdocument.msExitFullscreen();\n\t\t}\n\t\telse if (document.mozCancelFullScreen) {\n\t\t\tdocument.mozCancelFullScreen();\n\t\t}\n\t\telse if (document.webkitExitFullscreen) {\n\t\t\tdocument.webkitExitFullscreen();\n\t\t}\n\t}\n\n\tpublic var visible(get, set): Bool;\n\n\tfunction get_visible(): Bool {\n\t\treturn true;\n\t}\n\n\tfunction set_visible(value: Bool): Bool {\n\t\treturn true;\n\t}\n\n\tpublic var title(get, set): String;\n\n\tfunction get_title(): String {\n\t\treturn \"Kha\";\n\t}\n\n\tfunction set_title(value: String): String {\n\t\treturn \"Kha\";\n\t}\n\n\tpublic function notifyOnResize(callback: Int->Int->Void): Void {}\n\n\tpublic var vSynced(get, never): Bool;\n\n\tfunction get_vSynced(): Bool {\n\t\treturn true;\n\t}\n}\n","package kha;\n@:enum abstract WindowFeatures(Int) to Int {\n    var None = 0;\n    var FeatureResizable = 1;\n    var FeatureMinimizable = 2;\n    var FeatureMaximizable = 4;\n    var FeatureBorderless = 8;\n    var FeatureOnTop = 16;\t\n\t\n    function new (value:Int) {\n        this = value;\n    }\n    \n    @:op(A | B) static function or( a:WindowFeatures, b:WindowFeatures) : WindowFeatures;\n}\n\n@:structInit\nclass WindowOptions {\n\t@:optional public var title: String = null;\n\t@:optional public var x: Int = -1;\n\t@:optional public var y: Int = -1;\n\t@:optional public var width: Int = 800;\n\t@:optional public var height: Int = 600;\n\t@:optional public var display: Int = -1;\n\t@:optional public var visible: Bool = true;\n\t@:optional public var windowFeatures:WindowFeatures = FeatureResizable | FeatureMaximizable | FeatureMinimizable;\n\t@:optional public var mode: WindowMode = Windowed;\n\n\tpublic function new(title: String = null, ?x: Int = -1, ?y: Int = -1, ?width: Int = 800, ?height: Int = 600, ?display: Int = -1,\n\t?visible: Bool = true, ?windowFeatures:WindowFeatures, ?mode: WindowMode = WindowMode.Windowed) {\n\t\tthis.title = title;\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.width = width;\n\t\tthis.height = height;\n\t\tthis.display = display;\n\t\tthis.visible = visible;\n\t\tthis.windowFeatures = (windowFeatures == null) ? WindowFeatures.FeatureResizable | WindowFeatures.FeatureMaximizable | WindowFeatures.FeatureMinimizable : windowFeatures;\n\t\tthis.mode = mode;\n\t}\n}\n","package kha.internal;\n\nclass IntBox {\n\tpublic var value: Int;\n\n\tpublic function new(value: Int) {\n\t\tthis.value = value;\n\t}\n}\n","package kha.audio2;\r\n\r\nimport js.Browser;\r\nimport js.html.URL;\r\nimport js.html.audio.AudioContext;\r\nimport js.html.audio.AudioProcessingEvent;\r\nimport js.html.audio.ScriptProcessorNode;\r\nimport kha.internal.IntBox;\r\nimport kha.js.AEAudioChannel;\r\nimport kha.Sound;\r\n\r\nclass Audio {\r\n\tpublic static var disableGcInteractions = false;\r\n\tstatic var intBox: IntBox = new IntBox(0);\r\n\tprivate static var buffer: Buffer;\r\n\t@:noCompletion public static var _context: AudioContext;\r\n\tprivate static var processingNode: ScriptProcessorNode;\r\n\t\r\n\tprivate static function initContext(): Void {\r\n\t\ttry {\r\n\t\t\t_context = new AudioContext();\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tcatch (e: Dynamic) {\r\n\t\t\t\r\n\t\t}\r\n\t\ttry {\r\n\t\t\tuntyped __js__('this._context = new webkitAudioContext();');\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tcatch (e: Dynamic) {\r\n\t\t\t\r\n\t\t}\r\n\t}\r\n\t\r\n\t@:noCompletion\r\n\tpublic static function _init(): Bool {\r\n\t\tinitContext();\r\n\t\tif (_context == null) return false;\r\n\t\t\r\n\t\tAudio.samplesPerSecond = Math.round(_context.sampleRate);\r\n\t\tvar bufferSize = 1024 * 2;\r\n\t\tbuffer = new Buffer(bufferSize * 4, 2, Std.int(_context.sampleRate));\r\n\t\t\r\n\t\tprocessingNode = _context.createScriptProcessor(bufferSize, 0, 2);\r\n\t\tprocessingNode.onaudioprocess = function (e: AudioProcessingEvent) {\r\n\t\t\tvar output1 = e.outputBuffer.getChannelData(0);\r\n\t\t\tvar output2 = e.outputBuffer.getChannelData(1);\r\n\t\t\tif (audioCallback != null) {\r\n\t\t\t\tintBox.value = e.outputBuffer.length * 2;\r\n\t\t\t\taudioCallback(intBox, buffer);\r\n\t\t\t\tfor (i in 0...e.outputBuffer.length) {\r\n\t\t\t\t\toutput1[i] = buffer.data.get(buffer.readLocation);\r\n\t\t\t\t\tbuffer.readLocation += 1;\r\n\t\t\t\t\toutput2[i] = buffer.data.get(buffer.readLocation);\r\n\t\t\t\t\tbuffer.readLocation += 1;\r\n\t\t\t\t\tif (buffer.readLocation >= buffer.size) {\r\n\t\t\t\t\t\tbuffer.readLocation = 0;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tfor (i in 0...e.outputBuffer.length) {\r\n\t\t\t\t\toutput1[i] = 0;\r\n\t\t\t\t\toutput2[i] = 0;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tprocessingNode.connect(_context.destination);\r\n\t\treturn true;\r\n\t}\r\n\r\n\tpublic static var samplesPerSecond: Int;\r\n\r\n\tpublic static var audioCallback: kha.internal.IntBox->Buffer->Void;\r\n\r\n\tstatic var virtualChannels: Array<VirtualStreamChannel> = [];\r\n\r\n\tpublic static function wakeChannels() {\r\n\t\tSystemImpl.mobileAudioPlaying = true;\r\n\t\tfor (channel in virtualChannels) {\r\n\t\t\tchannel.wake();\r\n\t\t}\r\n\t}\r\n\t\r\n\tpublic static function stream(sound: Sound, loop: Bool = false): kha.audio1.AudioChannel {\r\n\t\t//var source = _context.createMediaStreamSource(cast sound.compressedData.getData());\r\n\t\t//source.connect(_context.destination);\r\n\t\tvar element = Browser.document.createAudioElement();\r\n\t\t#if kha_debug_html5\r\n\t\tvar blob = new js.html.Blob([sound.compressedData.getData()], {type: \"audio/ogg\"});\r\n\t\t#else\r\n\t\tvar blob = new js.html.Blob([sound.compressedData.getData()], {type: \"audio/mp4\"});\r\n\t\t#end\r\n\t\telement.src = URL.createObjectURL(blob);\r\n\t\telement.loop = loop;\r\n\t\tvar channel = new AEAudioChannel(element, loop);\r\n\r\n\t\tif (SystemImpl.mobileAudioPlaying) {\r\n\t\t\tchannel.play();\r\n\t\t\treturn channel;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tvar virtualChannel = new VirtualStreamChannel(channel, loop);\r\n\t\t\tvirtualChannels.push(virtualChannel);\r\n\t\t\treturn virtualChannel;\r\n\t\t}\r\n\t}\r\n}\r\n","package kha.audio2;\r\n\r\n#if cpp\r\nimport sys.thread.Mutex;\r\n#end\r\nimport haxe.ds.Vector;\r\n\r\nclass Audio1 {\r\n\tprivate static inline var channelCount: Int = 32;\r\n\tprivate static var soundChannels: Vector<AudioChannel>;\r\n\tprivate static var streamChannels: Vector<StreamChannel>;\r\n\r\n\tprivate static var internalSoundChannels: Vector<AudioChannel>;\r\n\tprivate static var internalStreamChannels: Vector<StreamChannel>;\r\n\tprivate static var sampleCache1: kha.arrays.Float32Array;\r\n\tprivate static var sampleCache2: kha.arrays.Float32Array;\r\n\tprivate static var lastAllocationCount: Int = 0;\r\n\r\n#if cpp\r\n\tstatic var mutex: Mutex;\r\n#end\r\n\r\n\t@:noCompletion\r\n\tpublic static function _init(): Void {\r\n#if cpp\r\n\t\tmutex = new Mutex();\r\n#end\r\n\t\tsoundChannels = new Vector<AudioChannel>(channelCount);\r\n\t\tstreamChannels = new Vector<StreamChannel>(channelCount);\r\n\t\tinternalSoundChannels = new Vector<AudioChannel>(channelCount);\r\n\t\tinternalStreamChannels = new Vector<StreamChannel>(channelCount);\r\n\t\tsampleCache1 = new kha.arrays.Float32Array(512);\r\n\t\tsampleCache2 = new kha.arrays.Float32Array(512);\r\n\t\tlastAllocationCount = 0;\r\n\t\tAudio.audioCallback = mix;\r\n\t}\r\n\t\r\n\tprivate static inline function max(a: Float, b: Float): Float {\r\n\t\treturn a > b ? a : b;\r\n\t}\r\n\r\n\tprivate static inline function min(a: Float, b: Float): Float {\r\n\t\treturn a < b ? a : b;\r\n\t}\r\n\r\n\tpublic static function mix(samplesBox: kha.internal.IntBox, buffer: Buffer): Void {\r\n\t\tvar samples = samplesBox.value;\r\n\t\tif (sampleCache1.length < samples) {\r\n\t\t\tif (Audio.disableGcInteractions) {\r\n\t\t\t\ttrace(\"Unexpected allocation request in audio thread.\");\r\n\t\t\t\tfor (i in 0...samples) {\r\n\t\t\t\t\tbuffer.data.set(buffer.writeLocation, 0);\r\n\t\t\t\t\tbuffer.writeLocation += 1;\r\n\t\t\t\t\tif (buffer.writeLocation >= buffer.size) {\r\n\t\t\t\t\t\tbuffer.writeLocation = 0;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tlastAllocationCount = 0;\r\n\t\t\t\tAudio.disableGcInteractions = false;\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tsampleCache1 = new kha.arrays.Float32Array(samples * 2);\r\n\t\t\tsampleCache2 = new kha.arrays.Float32Array(samples * 2);\r\n\t\t\tlastAllocationCount = 0;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tif (lastAllocationCount > 100) {\r\n\t\t\t\tAudio.disableGcInteractions = true;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tlastAllocationCount += 1;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfor (i in 0...samples) {\r\n\t\t\tsampleCache2[i] = 0;\r\n\t\t}\r\n\r\n#if cpp\r\n\t\tmutex.acquire();\r\n#end\r\n\t\tfor (i in 0...channelCount) {\r\n\t\t\tinternalSoundChannels[i] = soundChannels[i];\r\n\t\t}\r\n\t\tfor (i in 0...channelCount) {\r\n\t\t\tinternalStreamChannels[i] = streamChannels[i];\r\n\t\t}\r\n#if cpp\r\n\t\tmutex.release();\r\n#end\r\n\r\n\t\tfor (channel in internalSoundChannels) {\r\n\t\t\tif (channel == null || channel.finished) continue;\r\n\t\t\tchannel.nextSamples(sampleCache1, samples, buffer.samplesPerSecond);\r\n\t\t\tfor (i in 0...samples) {\r\n\t\t\t\tsampleCache2[i] += sampleCache1[i] * channel.volume;\r\n\t\t\t}\r\n\t\t}\r\n\t\tfor (channel in internalStreamChannels) {\r\n\t\t\tif (channel == null || channel.finished) continue;\r\n\t\t\tchannel.nextSamples(sampleCache1, samples, buffer.samplesPerSecond);\r\n\t\t\tfor (i in 0...samples) {\r\n\t\t\t\tsampleCache2[i] += sampleCache1[i] * channel.volume;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfor (i in 0...samples) {\r\n\t\t\tbuffer.data.set(buffer.writeLocation, max(min(sampleCache2[i], 1.0), -1.0));\r\n\t\t\tbuffer.writeLocation += 1;\r\n\t\t\tif (buffer.writeLocation >= buffer.size) {\r\n\t\t\t\tbuffer.writeLocation = 0;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tpublic static function play(sound: Sound, loop: Bool = false): kha.audio1.AudioChannel {\r\n\t\tvar channel: kha.audio2.AudioChannel = null;\r\n\t\tif (Audio.samplesPerSecond != sound.sampleRate) {\r\n\t\t\tchannel = new ResamplingAudioChannel(loop, sound.sampleRate);\r\n\t\t}\r\n\t\telse {\r\n\t\t\t#if sys_ios\r\n\t\t\tchannel = new ResamplingAudioChannel(loop, sound.sampleRate);\r\n\t\t\t#else\r\n\t\t\tchannel = new AudioChannel(loop);\r\n\t\t\t#end\r\n\t\t}\r\n\t\tchannel.data = sound.uncompressedData;\r\n\t\tvar foundChannel = false;\r\n\r\n#if cpp\r\n\t\tmutex.acquire();\r\n#end\r\n\t\tfor (i in 0...channelCount) {\r\n\t\t\tif (soundChannels[i] == null || soundChannels[i].finished) {\r\n\t\t\t\tsoundChannels[i] = channel;\r\n\t\t\t\tfoundChannel = true;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n#if cpp\r\n\t\tmutex.release();\r\n#end\r\n\r\n\t\treturn foundChannel ? channel : null;\r\n\t}\r\n\r\n\tpublic static function _playAgain(channel: kha.audio2.AudioChannel): Void {\r\n#if cpp\r\n\t\tmutex.acquire();\r\n#end\r\n\t\tfor (i in 0...channelCount) {\r\n\t\t\tif (soundChannels[i] == channel) {\r\n\t\t\t\tsoundChannels[i] = null;\r\n\t\t\t}\r\n\t\t}\r\n\t\tfor (i in 0...channelCount) {\r\n\t\t\tif (soundChannels[i] == null || soundChannels[i].finished || soundChannels[i] == channel) {\r\n\t\t\t\tsoundChannels[i] = channel;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n#if cpp\r\n\t\tmutex.release();\r\n#end\r\n\t}\r\n\r\n\tpublic static function stream(sound: Sound, loop: Bool = false): kha.audio1.AudioChannel {\r\n\t\t{\r\n\t\t\t// try to use hardware accelerated audio decoding\r\n\t\t\tvar hardwareChannel = Audio.stream(sound, loop);\r\n\t\t\tif (hardwareChannel != null) return hardwareChannel;\r\n\t\t}\r\n\r\n\t\tvar channel: StreamChannel = new StreamChannel(sound.compressedData, loop);\r\n\t\tvar foundChannel = false;\r\n\r\n#if cpp\r\n\t\tmutex.acquire();\r\n#end\r\n\t\tfor (i in 0...channelCount) {\r\n\t\t\tif (streamChannels[i] == null || streamChannels[i].finished) {\r\n\t\t\t\tstreamChannels[i] = channel;\r\n\t\t\t\tfoundChannel = true;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n#if cpp\r\n\t\tmutex.release();\r\n#end\r\n\r\n\t\treturn foundChannel ? channel : null;\r\n\t}\r\n}\r\n","package kha.audio2;\r\n\r\nimport kha.arrays.Float32Array;\r\n\r\nclass AudioChannel implements kha.audio1.AudioChannel {\r\n\tpublic var data: Float32Array = null;\r\n\tvar myVolume: Float = 1;\r\n\tvar myPosition: Int = 0;\r\n\tvar paused: Bool = false;\r\n\tvar stopped: Bool = false;\r\n\tvar looping: Bool = false;\r\n\r\n\tpublic function new(looping: Bool) {\r\n\t\tthis.looping = looping;\r\n\t}\r\n\t\r\n\tpublic function nextSamples(requestedSamples: Float32Array, requestedLength: Int, sampleRate: Int): Void {\r\n\t\tif (paused || stopped) {\r\n\t\t\tfor (i in 0...requestedLength) {\r\n\t\t\t\trequestedSamples[i] = 0;\r\n\t\t\t}\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t\r\n\t\tvar requestedSamplesIndex = 0;\r\n\t\twhile (requestedSamplesIndex < requestedLength) {\r\n\t\t\tfor (i in 0...min(data.length - myPosition, requestedLength - requestedSamplesIndex)) {\r\n\t\t\t\trequestedSamples[requestedSamplesIndex++] = data[myPosition++];\r\n\t\t\t}\r\n\r\n\t\t\tif (myPosition >= data.length) {\r\n\t\t\t\tmyPosition = 0;\r\n\t\t\t\tif (!looping) {\r\n\t\t\t\t\tstopped = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\twhile (requestedSamplesIndex < requestedLength) {\r\n\t\t\trequestedSamples[requestedSamplesIndex++] = 0;\r\n\t\t}\r\n\t}\r\n\t\r\n\tpublic function play(): Void {\r\n\t\tpaused = false;\r\n\t\tstopped = false;\r\n\t\tkha.audio1.Audio._playAgain(this);\r\n\t}\r\n\r\n\tpublic function pause(): Void {\r\n\t\tpaused = true;\r\n\t}\r\n\r\n\tpublic function stop(): Void {\r\n\t\tmyPosition = 0;\r\n\t\tstopped = true;\r\n\t}\r\n\r\n\tpublic var length(get, null): Float; // Seconds\r\n\t\r\n\tfunction get_length(): Float {\r\n\t\treturn data.length / kha.audio2.Audio.samplesPerSecond / 2; // 44.1 khz in stereo\r\n\t}\r\n\r\n\tpublic var position(get, set): Float; // Seconds\r\n\t\r\n\tfunction get_position(): Float {\r\n\t\treturn myPosition / kha.audio2.Audio.samplesPerSecond / 2;\r\n\t}\r\n\r\n\tfunction set_position(value: Float): Float {\r\n\t\tmyPosition = Math.round(value * kha.audio2.Audio.samplesPerSecond * 2);\r\n\t\tmyPosition = max(min(myPosition, data.length), 0);\r\n\t\treturn value;\r\n\t}\r\n\t\r\n\tpublic var volume(get, set): Float;\r\n\t\r\n\tfunction get_volume(): Float {\r\n\t\treturn myVolume;\r\n\t}\r\n\r\n\tfunction set_volume(value: Float): Float {\r\n\t\treturn myVolume = value;\r\n\t}\r\n\r\n\tpublic var finished(get, null): Bool;\r\n\r\n\tfunction get_finished(): Bool {\r\n\t\treturn stopped;\r\n\t}\r\n\r\n\tstatic inline function max(a: Int, b: Int) {\r\n\t\treturn a > b ? a : b;\r\n\t}\r\n\r\n\tstatic inline function min(a: Int, b: Int) {\r\n\t\treturn a < b ? a : b;\r\n\t}\r\n}\r\n","package kha.audio2;\r\n\r\nclass Buffer {\r\n\tpublic var channels: Int;\r\n\tpublic var samplesPerSecond: Int;\r\n\t\r\n\tpublic var data: kha.arrays.Float32Array;\r\n\tpublic var size: Int;\r\n\tpublic var readLocation: Int;\r\n\tpublic var writeLocation: Int;\r\n\t\r\n\tpublic function new(size: Int, channels: Int, samplesPerSecond: Int) {\r\n\t\tthis.size = size;\r\n\t\tthis.data = new kha.arrays.Float32Array(size);\r\n\t\tthis.channels = channels;\r\n\t\tthis.samplesPerSecond = samplesPerSecond;\r\n\t\treadLocation = 0;\r\n\t\twriteLocation = 0;\r\n\t}\r\n}\r\n","package kha.audio2;\r\n\r\nimport haxe.io.Bytes;\r\nimport haxe.io.BytesOutput;\r\nimport kha.audio2.ogg.vorbis.Reader;\r\n\r\n#if (!cpp && !hl)\r\nclass StreamChannel implements kha.audio1.AudioChannel {\r\n\t#if (!kha_no_ogg)\r\n\tprivate var reader: Reader;\r\n\t#end\r\n\tprivate var atend: Bool = false;\r\n\tprivate var loop: Bool;\r\n\tprivate var myVolume: Float;\r\n\tprivate var paused: Bool = false;\r\n\t\r\n\tpublic function new(data: Bytes, loop: Bool) {\r\n\t\tmyVolume = 1;\r\n\t\tthis.loop = loop;\r\n\t\t#if (!kha_no_ogg)\r\n\t\treader = Reader.openFromBytes(data);\r\n\t\t#end\r\n\t}\r\n\r\n\tpublic function nextSamples(samples: kha.arrays.Float32Array, length: Int, sampleRate: Int): Void {\r\n\t\tif (paused) {\r\n\t\t\tfor (i in 0...length) {\r\n\t\t\t\tsamples[i] = 0;\r\n\t\t\t}\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t\r\n\t\t#if (!kha_no_ogg)\r\n\t\tvar count = reader.read(samples, Std.int(length / 2), 2, sampleRate, true) * 2;\r\n\t\tif (count < length) {\r\n\t\t\tif (loop) {\r\n\t\t\t\treader.currentMillisecond = 0;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tatend = true;\r\n\t\t\t}\r\n\t\t\tfor (i in count...length) {\r\n\t\t\t\tsamples[i] = 0;\r\n\t\t\t}\r\n\t\t}\r\n\t\t#end\r\n\t}\r\n\t\r\n\tpublic function play(): Void {\r\n\t\tpaused = false;\r\n\t}\r\n\r\n\tpublic function pause(): Void {\r\n\t\tpaused = true;\r\n\t}\r\n\r\n\tpublic function stop(): Void {\r\n\t\tatend = true;\r\n\t}\r\n\r\n\tpublic var length(get, null): Float; // Seconds\r\n\t\r\n\tprivate function get_length(): Float {\r\n\t\t#if (kha_no_ogg) return 0.0; #else return reader.totalMillisecond / 1000.0; #end\r\n\t}\r\n\r\n\tpublic var position(get, set): Float; // Seconds\r\n\t\r\n\tprivate function get_position(): Float {\r\n\t\t#if (kha_no_ogg) return 0.0; #else return reader.currentMillisecond / 1000.0; #end\r\n\t}\r\n\r\n\tfunction set_position(value: Float): Float {\r\n\t\treturn value;\r\n\t}\r\n\t\r\n\tpublic var volume(get, set): Float;\r\n\t\r\n\tprivate function get_volume(): Float {\r\n\t\treturn myVolume;\r\n\t}\r\n\r\n\tprivate function set_volume(value: Float): Float {\r\n\t\treturn myVolume = value;\r\n\t}\r\n\r\n\tpublic var finished(get, null): Bool;\r\n\r\n\tprivate function get_finished(): Bool {\r\n\t\treturn atend;\r\n\t}\r\n}\r\n#end\r\n","package kha.audio2;\n\nimport kha.js.AEAudioChannel;\nimport kha.audio1.AudioChannel;\n\nenum abstract PlayMode(Int) {\n\tvar Stopped;\n\tvar Paused;\n\tvar Playing;\n}\n\nclass VirtualStreamChannel implements kha.audio1.AudioChannel {\n\tvar aeChannel: AEAudioChannel;\n\tvar mode = PlayMode.Playing;\n\tvar lastTickTime: Float;\n\tvar lastPosition: Float;\n\tvar looping: Bool;\n\n\tpublic function new(aeChannel: AEAudioChannel, looping: Bool) {\n\t\tthis.aeChannel = aeChannel;\n\t\tthis.looping = looping;\n\t\tlastTickTime = Scheduler.realTime();\n\t\tlastPosition = 0;\n\t}\n\n\tpublic function wake(): Void {\n\t\tupdatePosition();\n\t\taeChannel.position = lastPosition;\n\t\taeChannel.play();\n\t}\n\n\tfunction updatePosition(): Void {\n\t\tvar now = Scheduler.realTime();\n\t\tswitch (mode) {\n\t\t\tcase Stopped:\n\t\t\t\tlastPosition = 0;\n\t\t\tcase Paused:\n\t\t\t\t// nothing\n\t\t\tcase Playing:\n\t\t\t\tlastPosition += now - lastTickTime;\n\t\t\t\twhile (lastPosition > length) {\n\t\t\t\t\tlastPosition -= length;\n\t\t\t\t}\n\t\t}\n\t\tlastTickTime = now;\n\t}\n\n\tpublic function play(): Void {\n\t\tif (SystemImpl.mobileAudioPlaying) {\n\t\t\taeChannel.play();\n\t\t}\n\t\telse {\n\t\t\tupdatePosition();\n\t\t\tmode = Playing;\n\t\t}\n\t}\n\n\tpublic function pause(): Void {\n\t\tif (SystemImpl.mobileAudioPlaying) {\n\t\t\taeChannel.pause();\n\t\t}\n\t\telse {\n\t\t\tupdatePosition();\n\t\t\tmode = Paused;\n\t\t}\n\t}\n\n\tpublic function stop(): Void {\n\t\tif (SystemImpl.mobileAudioPlaying) {\n\t\t\taeChannel.stop();\n\t\t}\n\t\telse {\n\t\t\tupdatePosition();\n\t\t\tmode = Stopped;\n\t\t}\n\t}\n\n\tpublic var length(get, null): Float; // Seconds\n\n\tfunction get_length(): Float {\n\t\treturn aeChannel.length;\n\t}\n\n\tpublic var position(get, set): Float; // Seconds\n\n\tfunction get_position(): Float {\n\t\tif (SystemImpl.mobileAudioPlaying) {\n\t\t\treturn aeChannel.position;\n\t\t}\n\t\telse {\n\t\t\tupdatePosition();\n\t\t\treturn lastPosition;\n\t\t}\n\t}\n\n\tfunction set_position(value: Float): Float {\n\t\tif (SystemImpl.mobileAudioPlaying) {\n\t\t\treturn aeChannel.position = value;\n\t\t}\n\t\telse {\n\t\t\tupdatePosition();\n\t\t\treturn lastPosition = value;\n\t\t}\n\t}\n\n\tpublic var volume(get, set): Float;\n\n\tfunction get_volume(): Float {\n\t\treturn aeChannel.volume;\n\t}\n\n\tfunction set_volume(value: Float): Float {\n\t\treturn aeChannel.volume = value;\n\t}\n\n\tpublic var finished(get, null): Bool;\n\n\tfunction get_finished(): Bool {\n\t\tif (SystemImpl.mobileAudioPlaying) {\n\t\t\treturn aeChannel.finished;\n\t\t}\n\t\telse {\n\t\t\treturn mode == Stopped || (!looping && position >= length);\n\t\t}\n\t}\n}\n","package kha.audio2.ogg.tools;\nimport haxe.ds.Vector;\n\n/**\n * ...\n * @author shohei909\n */\nclass Crc32\n{\n    static inline var POLY:UInt = 0x04c11db7;\n    static var table:Vector<UInt>;\n\n    public static function init() {\n        if (table != null) {\n            return;\n        }\n        \n        table = new Vector(256);\n        for (i in 0...256) {\n            var s:UInt = ((i:UInt) << (24:UInt));\n            for (j in 0...8) {\n                s = (s << 1) ^ (s >= ((1:UInt) << 31) ? POLY : 0);\n            }\n            table[i] = s;\n        }\n    }\n\n    public static inline function update(crc:UInt, byte:UInt):UInt\n    {\n        return (crc << 8) ^ table[byte ^ (crc >>> 24)];\n    }\n}\n","package kha.audio2.ogg.vorbis;\n\nimport haxe.io.BytesOutput;\nimport haxe.io.Output;\nimport haxe.io.StringInput;\nimport kha.audio2.ogg.tools.Mdct;\nimport kha.audio2.ogg.vorbis.data.Floor;\nimport kha.audio2.ogg.vorbis.data.Mapping;\nimport kha.audio2.ogg.vorbis.data.Mode;\nimport kha.audio2.ogg.vorbis.data.Header;\nimport kha.audio2.ogg.vorbis.VorbisDecodeState;\nimport haxe.ds.Vector;\nimport haxe.io.Bytes;\nimport haxe.io.BytesInput;\nimport haxe.io.Eof;\nimport haxe.io.Input;\nimport haxe.PosInfos;\n\n#if sys\nimport sys.FileSystem;\nimport sys.io.File;\nimport sys.io.FileInput;\n#end\n\n/**\n * public domain ogg reader.\n * @author shohei909\n */\nclass Reader {\n    public var decoder(default, null):VorbisDecoder;\n\n    public var header(get, never):Header;\n    function get_header():Header {\n        return decoder.header;\n    }\n\n    public var totalSample(get, never):Int;\n    function get_totalSample():Int {\n        return decoder.totalSample;\n    }\n\n    public var totalMillisecond(get, never):Float;\n\n    function get_totalMillisecond():Float {\n        return sampleToMillisecond(decoder.totalSample);\n    }\n\n    public var currentSample(get, set):Int;\n    function get_currentSample():Int {\n        return decoder.currentSample;\n    }\n\n    function set_currentSample(value:Int):Int {\n        decoder.seek(seekFunc, inputLength, value);\n        return decoder.currentSample;\n    }\n\n    public var currentMillisecond(get, set):Float;\n\n    function get_currentMillisecond():Float\n    {\n        return sampleToMillisecond(currentSample);\n    }\n\n    function set_currentMillisecond(value:Float):Float {\n        currentSample = millisecondToSample(value);\n        return currentMillisecond;\n    }\n\n    public var loopStart:Null<Int>;\n    public var loopLength:Null<Int>;\n\n    var seekFunc:Int->Void;\n    var inputLength:Int;\n\n    function new (input:Input, seekFunc:Int->Void, inputLength:Int) {\n        this.seekFunc = seekFunc;\n        this.inputLength = inputLength;\n        decoder = VorbisDecoder.start(input);\n        decoder.setupSampleNumber(seekFunc, inputLength);\n        loopStart = header.comment.loopStart;\n        loopLength = header.comment.loopLength;\n    }\n\n    public static function openFromBytes(bytes:Bytes) {\n        var input = new BytesInput(bytes);\n        return new Reader(input, seekBytes.bind(input), bytes.length);\n    }\n\n    static function seekBytes(bytes:BytesInput, pos:Int) {\n        bytes.position = pos;\n    }\n\n    #if sys\n    public static function openFromFile(fileName:String):Reader {\n        var file = File.read(fileName, true);\n        var stat = FileSystem.stat(fileName);\n        return new Reader(file, file.seek.bind(_, SeekBegin), stat.size);\n    }\n    #end\n\n    public static function readAll(bytes:Bytes, output:Output, useFloat:Bool = false):Header {\n\t\tvar input = new BytesInput(bytes);\n        var decoder = VorbisDecoder.start(input);\n\t\tdecoder.setupSampleNumber(seekBytes.bind(input), bytes.length);\n        var header = decoder.header;\n        var count = 0;\n\t\tvar bufferSize = 4096;\n\t\tvar buffer = new kha.arrays.Float32Array(bufferSize * header.channel);\n        while (true) {\n            var n = decoder.read(buffer, bufferSize, header.channel, header.sampleRate, useFloat);\n\t\t\tfor (i in 0...n * header.channel) {\n\t\t\t\toutput.writeFloat(buffer[i]);\n\t\t\t}\n            if (n == 0) { break; }\n            count += n;\n        }\n        return decoder.header;\n    }\n\n    public function read(output:kha.arrays.Float32Array, ?samples:Int, ?channels:Int, ?sampleRate:Int, useFloat:Bool = false) {\n        decoder.ensurePosition(seekFunc);\n\n        if (samples == null) {\n            samples = decoder.totalSample;\n        }\n        if (channels == null) {\n            channels = header.channel;\n        }\n        if (sampleRate == null) {\n            sampleRate = header.sampleRate;\n        }\n        return decoder.read(output, samples, channels, sampleRate, useFloat);\n    }\n\n    public function clone():Reader {\n        var reader = Type.createEmptyInstance(Reader);\n        reader.seekFunc = seekFunc;\n        reader.inputLength = inputLength;\n        reader.decoder = decoder.clone(seekFunc);\n        reader.loopStart = loopStart;\n        reader.loopLength = loopLength;\n        return reader;\n    }\n\n\n    public inline function sampleToMillisecond(samples:Int) {\n        return samples / header.sampleRate * 1000;\n    }\n\n    public inline function millisecondToSample(millseconds:Float) {\n        return Math.floor(millseconds / 1000 * header.sampleRate);\n    }\n}\n\nprivate typedef InitData = {\n    input:Input,\n    seekFunc:Int->Void,\n    inputLength:Int,\n}\n","package kha.audio2.ogg.vorbis;\n\nimport haxe.ds.Vector;\nimport haxe.Int64;\nimport haxe.io.Bytes;\nimport haxe.io.Eof;\nimport haxe.io.Input;\nimport haxe.io.Output;\nimport kha.audio2.ogg.tools.Crc32;\nimport kha.audio2.ogg.tools.MathTools;\nimport kha.audio2.ogg.vorbis.data.Codebook;\nimport kha.audio2.ogg.vorbis.data.Floor.Floor1;\nimport kha.audio2.ogg.vorbis.data.Header;\nimport kha.audio2.ogg.vorbis.data.Mode;\nimport kha.audio2.ogg.vorbis.data.Page;\nimport kha.audio2.ogg.vorbis.data.ProbedPage;\nimport kha.audio2.ogg.vorbis.data.ReaderError;\nimport kha.audio2.ogg.vorbis.data.Page;\nimport kha.audio2.ogg.vorbis.data.Residue;\nimport kha.audio2.ogg.vorbis.data.Setting;\nimport kha.audio2.ogg.vorbis.VorbisDecoder.DecodeInitialResult;\n\n/**\n * ...\n * @author shohei909\n */\nclass VorbisDecodeState\n{\n    public static inline var INVALID_BITS = -1;\n\n    public var page(default, null):Page;\n    public var eof(default, null):Bool;\n    public var pFirst(default, null):ProbedPage;\n    public var pLast(default, null):ProbedPage;\n    public var validBits(default, null):Int = 0;\n    public var inputPosition(default, null):Int;\n    public var input(default, null):Input;\n    public var discardSamplesDeferred:Int;\n    public var segments(default, null):Vector<Int>;\n    public var bytesInSeg:Int = 0; // uint8\n\n    // decode buffer\n    public var channelBuffers:Vector<Vector<Float>>; //var *[STB_VORBIS_MAX_CHANNELS];\n    public var channelBufferStart:Int;\n    public var channelBufferEnd:Int;\n    public var currentSample(default, null):Int;\n\n    public var previousWindow:Vector<Vector<Float>>; //var *[STB_VORBIS_MAX_CHANNELS];\n    public var previousLength:Int;\n    public var finalY:Vector<Array<Int>>; // [STB_VORBIS_MAX_CHANNELS];\n\n\n    var firstDecode:Bool = false;\n    var nextSeg:Int = 0;\n\n    var acc:UInt;\n    var lastSeg:Bool;  // flag that we're on the last decodeState\n    var lastSegWhich:Int; // what was the decodeState number of the l1ast seg?\n\n    var endSegWithKnownLoc:Int;\n    var knownLocForPacket:Int;\n\n    var error:ReaderError;\n\n    var currentLoc:Int; //uint32  sample location of next frame to decode\n    var currentLocValid:Int;\n\n    var firstAudioPageOffset:UInt;\n\n    public function new(input:Input)\n    {\n        this.input = input;\n        inputPosition = 0;\n        page = new Page();\n        Crc32.init();\n    }\n\n    public function setup(loc0:Int, loc1:Int) {\n        var segmentCount = readByte();\n        this.segments = read(segmentCount);\n\n        // assume we Don't_ know any the sample position of any segments\n        this.endSegWithKnownLoc = -2;\n        if (loc0 != 0xFFFFFFFF || loc1 != 0xFFFFFFFF) {\n            var i:Int = segmentCount - 1;\n            while (i >= 0) {\n                if (segments.get(i) < 255) {\n                    break;\n                }\n                if (i >= 0) {\n                    this.endSegWithKnownLoc = i;\n                    this.knownLocForPacket = loc0;\n                }\n                i--;\n            }\n        }\n\n        if (firstDecode) {\n            var i:Int = 0;\n            var len:Int = 0;\n            var p = new ProbedPage();\n\n            for (i in 0...segmentCount) {\n                len += segments.get(i);\n            }\n            len += 27 + segmentCount;\n\n            p.pageStart = firstAudioPageOffset;\n            p.pageEnd = p.pageStart + len;\n            p.firstDecodedSample = 0;\n            p.lastDecodedSample = loc0;\n            pFirst = p;\n        }\n\n        nextSeg = 0;\n    }\n\n    public function clone(seekFunc:Int->Void)\n    {\n        var state = Type.createEmptyInstance(VorbisDecodeState);\n\n        seekFunc(inputPosition);\n        state.input = input;\n\n        // primitive\n        state.eof = eof;\n        state.validBits = validBits;\n        state.discardSamplesDeferred = discardSamplesDeferred;\n        state.firstDecode = firstDecode;\n        state.nextSeg = nextSeg;\n        state.bytesInSeg = bytesInSeg;\n        state.acc = state.acc;\n        state.lastSeg = lastSeg;\n        state.lastSegWhich = lastSegWhich;\n        state.currentLoc = currentLoc;\n        state.currentLocValid = currentLocValid;\n        state.inputPosition = inputPosition;\n        state.firstAudioPageOffset = firstAudioPageOffset;\n\n        // sharrow copy\n        state.error = error;\n        state.segments = segments;\n        state.pFirst = pFirst;\n        state.pLast = pLast;\n\n        // deep copy\n        state.page = page.clone();\n\n        return state;\n    }\n\n\n    // nextSegment\n    public function next():Int {\n        if (lastSeg) {\n            return 0;\n        }\n\n        if (nextSeg == -1) {\n            lastSegWhich = segments.length - 1; // in case startPage fails\n\n            try {\n                page.start(this);\n            } catch(e:ReaderError) {\n                lastSeg = true;\n                error = e;\n                return 0;\n            }\n\n            if ((page.flag & PageFlag.CONTINUED_PACKET) == 0) {\n                throw new ReaderError(ReaderErrorType.CONTINUED_PACKET_FLAG_INVALID);\n            }\n        }\n\n        var len = segments.get(nextSeg++);\n        if (len < 255) {\n            lastSeg = true;\n            lastSegWhich = nextSeg - 1;\n        }\n        if (nextSeg >= segments.length) {\n            nextSeg = -1;\n        }\n\n        VorbisTools.assert(bytesInSeg == 0);\n        bytesInSeg = len;\n        return len;\n    }\n\n    public function startPacket() {\n        while (nextSeg == -1) {\n            page.start(this);\n            if ((page.flag & PageFlag.CONTINUED_PACKET) != 0) {\n                throw new ReaderError(ReaderErrorType.MISSING_CAPTURE_PATTERN);\n            }\n        }\n\n        lastSeg = false;\n        validBits = 0;\n        bytesInSeg = 0;\n    }\n\n    public function maybeStartPacket():Bool\n    {\n        if (nextSeg == -1) {\n            var eof = false;\n            var x = try {\n                readByte();\n            } catch (e:Eof) {\n                eof = true;\n                0;\n            }\n\n            if (eof) {\n                return false; // EOF at page boundary is not an error!\n            }\n\n            if (x != 0x4f || readByte() != 0x67 || readByte() != 0x67 || readByte() != 0x53) {\n                throw new ReaderError(ReaderErrorType.MISSING_CAPTURE_PATTERN);\n            }\n\n            page.startWithoutCapturePattern(this);\n        }\n\n        startPacket();\n        return true;\n    }\n\n\n\n    // public inline function readBits(n:Int):Int\n    public function readBits(n:Int):Int // Kha: reduce output size\n    {\n        if (validBits < 0) {\n            return 0;\n        } else if (validBits < n) {\n            if (n > 24) {\n                // the accumulator technique below would not work correctly in this case\n                return readBits(24) + ((readBits(n - 24) << 24));\n            } else {\n                if (validBits == 0) {\n                    acc = 0;\n                }\n\n                do {\n                    if (bytesInSeg == 0 && (lastSeg || next() == 0)) {\n                        validBits = INVALID_BITS;\n                        break;\n                    } else {\n                        bytesInSeg--;\n                        acc += (readByte() << validBits);\n                        validBits += 8;\n                    }\n                } while (validBits < n);\n\n                if (validBits < 0) {\n                    return 0;\n                } else {\n                    var z = acc & ((1 << n) - 1);\n                    acc >>>= n;\n                    validBits -= n;\n                    return z;\n                }\n            }\n        } else {\n            var z = acc & ((1 << n) - 1);\n            acc >>>= n;\n            validBits -= n;\n            return z;\n        }\n    }\n    inline function readPacketRaw():Int {\n        return if (bytesInSeg == 0 && (lastSeg || next() == 0)) {  // CLANG!\n            VorbisTools.EOP;\n        } else {\n            //VorbisTools.assert(bytesInSeg > 0);\n            bytesInSeg--;\n            readByte();\n        }\n    }\n\n    public inline function readPacket():Int\n    {\n        var x = readPacketRaw();\n        validBits = 0;\n        return x;\n    }\n\n    public inline function flushPacket():Void {\n        while (bytesInSeg != 0 || (!lastSeg && next() != 0)) {\n            bytesInSeg--;\n            readByte();\n        }\n    }\n\n    public inline function vorbisValidate() {\n        var header = Bytes.alloc(6);\n        for (i in 0...6) {\n            header.set(i, readPacket());\n        }\n        if (header.toString() != \"vorbis\") {\n            throw new ReaderError(ReaderErrorType.INVALID_SETUP, \"vorbis header\");\n        }\n    }\n\n    public function firstPageValidate()\n    {\n        if (segments.length != 1) {\n            throw new ReaderError(INVALID_FIRST_PAGE, \"segmentCount\");\n        }\n        if (segments.get(0) != 30) {\n            throw new ReaderError(INVALID_FIRST_PAGE, \"decodeState head\");\n        }\n    }\n\n    public function startFirstDecode()\n    {\n        firstAudioPageOffset = inputPosition;\n        firstDecode = true;\n    }\n\n    public inline function capturePattern()\n    {\n        if (readByte() != 0x4f || readByte() != 0x67 || readByte() != 0x67 || readByte() != 0x53) {\n            throw new ReaderError(ReaderErrorType.MISSING_CAPTURE_PATTERN);\n        }\n    }\n\n    inline function skip(len:Int)\n    {\n        read(len);\n    }\n\n    function prepHuffman()\n    {\n        if (validBits <= 24) {\n            if (validBits == 0) {\n                acc = 0;\n            }\n            do {\n                if (bytesInSeg == 0 && (lastSeg || next() == 0)) {  // CLANG!\n                    return;\n                } else {\n                    bytesInSeg--;\n                    acc += readByte() << validBits;\n                    validBits += 8;\n                }\n            } while (validBits <= 24);\n        }\n    }\n\n    public inline function decode(c:Codebook):Int {\n        var val = decodeRaw(c);\n        if (c.sparse) {\n            val = c.sortedValues[val];\n        }\n        return val;\n    }\n\n    public inline function decodeRaw(c:Codebook)\n    {\n        if (validBits < Setting.FAST_HUFFMAN_LENGTH){\n            prepHuffman();\n        }\n\n        // fast huffman table lookup\n        var i = c.fastHuffman[acc & Setting.FAST_HUFFMAN_TABLE_MASK];\n\n        return if (i >= 0) {\n            var l = c.codewordLengths[i];\n            acc >>>= l;\n            validBits -= l;\n            if (validBits < 0) {\n                validBits = 0;\n                -1;\n            } else {\n                i;\n            }\n        } else {\n            decodeScalarRaw(c);\n        }\n    }\n\n    public inline function isLastByte()\n    {\n        return bytesInSeg == 0 && lastSeg;\n    }\n\n    public function finishDecodePacket(previousLength:Int, n:Int, r:DecodeInitialResult)\n    {\n        var left = r.left.start;\n        var currentLocValid = false;\n        var n2 = n >> 1;\n\n        if (firstDecode) {\n            // assume we start so first non-discarded sample is sample 0\n            // this isn't to spec, but spec would require us to read ahead\n            // and decode the size of all current frames--could be done,\n            // but presumably it's not a commonly used feature\n            currentLoc = -n2; // start of first frame is positioned for discard\n            // we might have to discard samples \"from\" the next frame too,\n            // if we're lapping a large block then a small at the start?\n            discardSamplesDeferred = n - r.right.end;\n            currentLocValid = true;\n            firstDecode = false;\n        } else if (discardSamplesDeferred != 0) {\n            r.left.start += discardSamplesDeferred;\n            left = r.left.start;\n            discardSamplesDeferred = 0;\n        } else if (previousLength == 0 && currentLocValid) {\n            // we're recovering from a seek... that means we're going to discard\n            // the samples from this packet even though we know our position from\n            // the last page header, so we need to update the position based on\n            // the discarded samples here\n            // but wait, the code below is going to add this in itself even\n            // on a discard, so we don't need to do it here...\n        }\n\n        // check if we have ogg information about the sample # for this packet\n        if (lastSegWhich == endSegWithKnownLoc) {\n            // if we have a valid current loc, and this is final:\n            if (currentLocValid && (page.flag & PageFlag.LAST_PAGE) != 0) {\n                var currentEnd = knownLocForPacket - (n - r.right.end);\n                // then let's infer the size of the (probably) short final frame\n                if (currentEnd < currentLoc + r.right.end) {\n                    var len = if (currentEnd < currentLoc) {\n                        // negative truncation, that's impossible!\n                        0;\n                    } else {\n                        currentEnd - currentLoc;\n                    }\n                    len += r.left.start;\n                    currentLoc += len;\n\n                    return {\n                        len : len,\n                        left : left,\n                        right : r.right.start,\n                    }\n                }\n            }\n            // otherwise, just set our sample loc\n            // guess that the ogg granule pos refers to the Middle_ of the\n            // last frame?\n            // set currentLoc to the position of leftStart\n            currentLoc = knownLocForPacket - (n2-r.left.start);\n            currentLocValid = true;\n        }\n\n        if (currentLocValid) {\n            currentLoc += (r.right.start - r.left.start);\n        }\n\n        // if (alloc.allocBuffer)\n        //assert(alloc.allocBufferLengthInBytes == tempOffset);\n\n        return {\n            len : r.right.end,\n            left : left,\n            right : r.right.start,\n        }\n    }\n\n    public inline function readInt32():Int\n    {\n        inputPosition += 4;\n        return input.readInt32();\n    }\n\n    public inline function readByte():Int\n    {\n        inputPosition += 1;\n        return input.readByte();\n    }\n\n    public inline function read(n:Int):Vector<Int> {\n        inputPosition += n;\n        var vec = new Vector(n);\n        for (i in 0...n) {\n            vec[i] = input.readByte();\n        }\n        return vec;\n    }\n\n    public inline function readBytes(n:Int):Bytes {\n        inputPosition += n;\n        return input.read(n);\n    }\n\n    public inline function readString(n:Int):String\n    {\n        inputPosition += n;\n        return input.readString(n);\n    }\n\n    public function getSampleNumber(seekFunc:Int->Void, inputLength:UInt):Int {\n\n        // first, store the current decode position so we can restore it\n        var restoreOffset = inputPosition;\n\n        // now we want to seek back 64K from the end (the last page must\n        // be at most a little less than 64K, but let's allow a little slop)\n        var previousSafe = if (inputLength >= 65536 && inputLength - 65536 >= firstAudioPageOffset) {\n            inputLength - 65536;\n        } else {\n            firstAudioPageOffset;\n        }\n\n        setInputOffset(seekFunc, previousSafe);\n\n        // previousSafe is now our candidate 'earliest known place that seeking\n        // to will lead to the final page'\n        var end = 0;\n        var last = false;\n        switch (findPage(seekFunc, inputLength)) {\n            case Found(e, l):\n                end = e;\n                last = l;\n            case NotFound:\n                throw new ReaderError(ReaderErrorType.CANT_FIND_LAST_PAGE);\n        }\n\n        // check if there are more pages\n        var lastPageLoc = inputPosition;\n\n        // stop when the lastPage flag is set, not when we reach eof;\n        // this allows us to stop short of a 'fileSection' end without\n        // explicitly checking the length of the section\n        while (!last) {\n            setInputOffset(seekFunc, end);\n            switch (findPage(seekFunc, inputLength)) {\n                case Found(e, l):\n                    end = e;\n                    last = l;\n                case NotFound:\n                    // the last page we found didn't have the 'last page' flag\n                    // set. whoops!\n                    break;\n            }\n\n            previousSafe = lastPageLoc + 1;\n            lastPageLoc = inputPosition;\n        }\n\n        setInputOffset(seekFunc, lastPageLoc);\n\n        // parse the header\n        var vorbisHeader = read(6);\n\n        // extract the absolute granule position\n        var lo = readInt32();\n        var hi = readInt32();\n        if (lo == 0xffffffff && hi == 0xffffffff || hi > 0) {\n            throw new ReaderError(ReaderErrorType.CANT_FIND_LAST_PAGE);\n        }\n\n        pLast = new ProbedPage();\n        pLast.pageStart = lastPageLoc;\n        pLast.pageEnd    = end;\n        pLast.lastDecodedSample = lo;\n        pLast.firstDecodedSample = null;\n        pLast.afterPreviousPageStart = previousSafe;\n\n        setInputOffset(seekFunc, restoreOffset);\n        return lo;\n    }\n\n    public inline function forcePageResync()\n    {\n        nextSeg = -1;\n    }\n\n    public inline function setInputOffset(seekFunc:Int->Void, n:Int)\n    {\n        seekFunc(inputPosition = n);\n    }\n\n    public function findPage(seekFunc:Int->Void, inputLength:Int):FindPageResult {\n        try {\n            while (true) {\n                var n = readByte();\n                if (n == 0x4f) { // page header\n                    var retryLoc = inputPosition;\n                    // check if we're off the end of a fileSection stream\n                    if (retryLoc - 25 > inputLength) {\n                        return FindPageResult.NotFound;\n                    }\n\n                    if (readByte() != 0x67 || readByte() != 0x67 || readByte() != 0x53) {\n                        continue;\n                    }\n\n                    var header = new Vector<UInt>(27);\n                    header[0] = 0x4f;\n                    header[1] = 0x67;\n                    header[2] = 0x67;\n                    header[3] = 0x53;\n                    for (i in 4...27) {\n                        header[i] = readByte();\n                    }\n\n                    if (header[4] != 0) {\n                        setInputOffset(seekFunc, retryLoc);\n                        continue;\n                    }\n\n                    var goal:UInt = header[22] + (header[23] << 8) + (header[24]<<16) + (header[25]<<24);\n                    for (i in 22...26) {\n                        header[i] = 0;\n                    }\n\n                    var crc:UInt = 0;\n                    for (i in 0...27){\n                        crc = Crc32.update(crc, header[i]);\n                    }\n\n                    var len = 0;\n                    try {\n                        for (i in 0...header[26]) {\n                            var s = readByte();\n                            crc = Crc32.update(crc, s);\n                            len += s;\n                        }\n                        for (i in 0...len) {\n                            crc = Crc32.update(crc, readByte());\n                        }\n                    } catch (e:Eof) {\n                        return FindPageResult.NotFound;\n                    }\n\n                    // finished parsing probable page\n                    if (crc == goal) {\n                        // we could now check that it's either got the last\n                        // page flag set, OR it's followed by the capture\n                        // pattern, but I guess TECHNICALLY you could have\n                        // a file with garbage between each ogg page and recover\n                        // from it automatically? So even though that paranoia\n                        // might decrease the chance of an invalid decode by\n                        // another 2^32, not worth it since it would hose those\n                        // invalid-but-useful files?\n                        var end = inputPosition;\n                        setInputOffset(seekFunc, retryLoc - 1);\n                        return FindPageResult.Found(end, (header[5] & 0x04 != 0));\n                    }\n                }\n            }\n        } catch (e:Eof) {\n            return FindPageResult.NotFound;\n        }\n    }\n\n    public function analyzePage(seekFunc:Int->Void, h:Header)\n    {\n        var z:ProbedPage = new ProbedPage();\n        var packetType = new Vector<Bool>(255);\n\n        // record where the page starts\n        z.pageStart = inputPosition;\n\n        // parse the header\n        var pageHeader = read(27);\n        VorbisTools.assert(pageHeader.get(0) == 0x4f && pageHeader.get(1) == 0x67 && pageHeader.get(2) == 0x67 && pageHeader.get(3) == 0x53);\n        var lacing = read(pageHeader.get(26));\n\n        // determine the length of the payload\n        var len = 0;\n        for (i in 0...pageHeader.get(26)){\n            len += lacing.get(i);\n        }\n\n        // this implies where the page ends\n        z.pageEnd = z.pageStart + 27 + pageHeader.get(26) + len;\n\n        // read the last-decoded sample out of the data\n        z.lastDecodedSample = pageHeader.get(6) + (pageHeader.get(7) << 8) + (pageHeader.get(8) << 16) + (pageHeader.get(9) << 16);\n\n        if ((pageHeader.get(5) & 4) != 0) {\n            // if this is the last page, it's not possible to work\n            // backwards to figure out the first sample! whoops! fuck.\n            z.firstDecodedSample = null;\n            setInputOffset(seekFunc, z.pageStart);\n            return z;\n        }\n\n        // scan through the frames to determine the sample-count of each one...\n        // our goal is the sample # of the first fully-decoded sample on the\n        // page, which is the first decoded sample of the 2nd packet\n\n        var numPacket = 0;\n        var packetStart = ((pageHeader.get(5) & 1) == 0);\n\n        var modeCount = h.modes.length;\n\n        for (i in 0...pageHeader.get(26)) {\n            if (packetStart) {\n                if (lacing.get(i) == 0) {\n\n                    setInputOffset(seekFunc, z.pageStart);\n                    return null; // trying to read from zero-length packet\n                }\n                var n = readByte();\n\n                // if bottom bit is non-zero, we've got corruption\n                if (n & 1 != 0) {\n                    setInputOffset(seekFunc, z.pageStart);\n                    return null;\n                }\n                n >>= 1;\n                var b = MathTools.ilog(modeCount - 1);\n                n &= (1 << b) - 1;\n                if (n >= modeCount) {\n                    setInputOffset(seekFunc, z.pageStart);\n                    return null;\n                }\n                packetType[numPacket++] = h.modes[n].blockflag;\n                skip(lacing.get(i)-1);\n            } else {\n                skip(lacing.get(i));\n            }\n            packetStart = (lacing.get(i) < 255);\n        }\n\n        // now that we know the sizes of all the pages, we can start determining\n        // how much sample data there is.\n        var samples = 0;\n\n        // for the last packet, we step by its whole length, because the definition\n        // is that we encoded the end sample loc of the 'last packet completed',\n        // where 'completed' refers to packets being split, and we are left to guess\n        // what 'end sample loc' means. we assume it means ignoring the fact that\n        // the last half of the data is useless without windowing against the next\n        // packet... (so it's not REALLY complete in that sense)\n        if (numPacket > 1) {\n            samples += packetType[numPacket-1] ? h.blocksize1 : h.blocksize0;\n        }\n\n        var i = numPacket - 2;\n        while (i >= 1) {\n            i--;\n            // now, for this packet, how many samples do we have that\n            // do not overlap the following packet?\n            if (packetType[i]) {\n                if (packetType[i + 1]) {\n                    samples += h.blocksize1 >> 1;\n                } else {\n                    samples += ((h.blocksize1 - h.blocksize0) >> 2) + (h.blocksize0 >> 1);\n                }\n            } else {\n                samples += h.blocksize0 >> 1;\n            }\n            i--;\n        }\n        // now, at this point, we've rewound to the very beginning of the\n        // Second_ packet. if we entirely discard the first packet after\n        // a seek, this will be exactly the right sample number. HOWEVER!\n        // we can't as easily compute this number for the LAST page. The\n        // only way to get the sample offset of the LAST page is to use\n        // the end loc from the previous page. But what that returns us\n        // is _exactly_ the place where we get our first non-overlapped\n        // sample. (I think. Stupid spec for being ambiguous.) So for\n        // consistency it's better to do that here, too. However, that\n        // will then require us to NOT discard all of the first frame we\n        // decode, in some cases, which means an even weirder frame size\n        // and extra code. what a fucking pain.\n\n        // we're going to discard the first packet if we\n        // start the seek here, so we don't care about it. (we could actually\n        // do better; if the first packet is long, and the previous packet\n        // is short, there's actually data in the first half of the first\n        // packet that doesn't need discarding... but not worth paying the\n        // effort of tracking that of that here and in the seeking logic)\n        // except crap, if we infer it from the Previous_ packet's end\n        // location, we DO need to use that definition... and we HAVE to\n        // infer the start loc of the LAST packet from the previous packet's\n        // end location. fuck you, ogg vorbis.\n\n        z.firstDecodedSample = z.lastDecodedSample - samples;\n\n        // restore file state to where we were\n        setInputOffset(seekFunc, z.pageStart);\n        return z;\n    }\n\n\n    function decodeScalarRaw(c:Codebook):Int\n    {\n        prepHuffman();\n\n        VorbisTools.assert(c.sortedCodewords != null || c.codewords != null);\n        // cases to use binary search: sortedCodewords && !codewords\n\n        var codewordLengths = c.codewordLengths;\n        var codewords = c.codewords;\n        var sortedCodewords = c.sortedCodewords;\n\n        if (c.entries > 8 ? (sortedCodewords != null) : codewords != null) {\n            // binary search\n            var code = VorbisTools.bitReverse(acc);\n            var x = 0;\n            var n = c.sortedEntries;\n\n            while (n > 1) {\n                // invariant: sc[x] <= code < sc[x+n]\n                var m = x + (n >> 1);\n                if (sortedCodewords[m] <= code) {\n                    x = m;\n                    n -= (n>>1);\n                } else {\n                    n >>= 1;\n                }\n            }\n\n            // x is now the sorted index\n            if (!c.sparse) {\n                x = c.sortedValues[x];\n            }\n\n            // x is now sorted index if sparse, or symbol otherwise\n            var len = codewordLengths[x];\n            if (validBits >= len) {\n                acc >>>= len;\n                validBits -= len;\n                return x;\n            }\n\n            validBits = 0;\n            return -1;\n        }\n\n        // if small, linear search\n        VorbisTools.assert(!c.sparse);\n        for (i in 0...c.entries) {\n            var cl = codewordLengths[i];\n            if (cl == Codebook.NO_CODE) {\n                continue;\n            }\n            if (codewords[i] == (acc & ((1 << cl)-1))) {\n                if (validBits >= cl) {\n                    acc >>>= cl;\n                    validBits -= cl;\n                    return i;\n                }\n                validBits = 0;\n                return -1;\n            }\n        }\n\n        error = new ReaderError(INVALID_STREAM);\n        validBits = 0;\n        return -1;\n    }\n}\n\n\nprivate enum FindPageResult {\n    Found(end:Int, last:Bool);\n    NotFound;\n}\n","package kha.audio2.ogg.vorbis;\nimport haxe.ds.Vector;\nimport haxe.io.Bytes;\nimport haxe.io.Input;\nimport haxe.PosInfos;\nimport kha.audio2.ogg.vorbis.data.IntPoint;\nimport kha.audio2.ogg.vorbis.data.ReaderError;\nimport kha.audio2.ogg.tools.MathTools;\n\n/**\n * ...\n * @author shohei909\n */\nclass VorbisTools\n{\n    static public inline var EOP = -1;\n    static public var integerDivideTable:Vector<Vector<Int>>;\n    static inline var M__PI = 3.14159265358979323846264;\n\n    static inline var DIVTAB_NUMER = 32;\n    static inline var DIVTAB_DENOM = 64;\n\n    static public var INVERSE_DB_TABLE = [\n        1.0649863e-07, 1.1341951e-07, 1.2079015e-07, 1.2863978e-07,\n        1.3699951e-07, 1.4590251e-07, 1.5538408e-07, 1.6548181e-07,\n        1.7623575e-07, 1.8768855e-07, 1.9988561e-07, 2.1287530e-07,\n        2.2670913e-07, 2.4144197e-07, 2.5713223e-07, 2.7384213e-07,\n        2.9163793e-07, 3.1059021e-07, 3.3077411e-07, 3.5226968e-07,\n        3.7516214e-07, 3.9954229e-07, 4.2550680e-07, 4.5315863e-07,\n        4.8260743e-07, 5.1396998e-07, 5.4737065e-07, 5.8294187e-07,\n        6.2082472e-07, 6.6116941e-07, 7.0413592e-07, 7.4989464e-07,\n        7.9862701e-07, 8.5052630e-07, 9.0579828e-07, 9.6466216e-07,\n        1.0273513e-06, 1.0941144e-06, 1.1652161e-06, 1.2409384e-06,\n        1.3215816e-06, 1.4074654e-06, 1.4989305e-06, 1.5963394e-06,\n        1.7000785e-06, 1.8105592e-06, 1.9282195e-06, 2.0535261e-06,\n        2.1869758e-06, 2.3290978e-06, 2.4804557e-06, 2.6416497e-06,\n        2.8133190e-06, 2.9961443e-06, 3.1908506e-06, 3.3982101e-06,\n        3.6190449e-06, 3.8542308e-06, 4.1047004e-06, 4.3714470e-06,\n        4.6555282e-06, 4.9580707e-06, 5.2802740e-06, 5.6234160e-06,\n        5.9888572e-06, 6.3780469e-06, 6.7925283e-06, 7.2339451e-06,\n        7.7040476e-06, 8.2047000e-06, 8.7378876e-06, 9.3057248e-06,\n        9.9104632e-06, 1.0554501e-05, 1.1240392e-05, 1.1970856e-05,\n        1.2748789e-05, 1.3577278e-05, 1.4459606e-05, 1.5399272e-05,\n        1.6400004e-05, 1.7465768e-05, 1.8600792e-05, 1.9809576e-05,\n        2.1096914e-05, 2.2467911e-05, 2.3928002e-05, 2.5482978e-05,\n        2.7139006e-05, 2.8902651e-05, 3.0780908e-05, 3.2781225e-05,\n        3.4911534e-05, 3.7180282e-05, 3.9596466e-05, 4.2169667e-05,\n        4.4910090e-05, 4.7828601e-05, 5.0936773e-05, 5.4246931e-05,\n        5.7772202e-05, 6.1526565e-05, 6.5524908e-05, 6.9783085e-05,\n        7.4317983e-05, 7.9147585e-05, 8.4291040e-05, 8.9768747e-05,\n        9.5602426e-05, 0.00010181521, 0.00010843174, 0.00011547824,\n        0.00012298267, 0.00013097477, 0.00013948625, 0.00014855085,\n        0.00015820453, 0.00016848555, 0.00017943469, 0.00019109536,\n        0.00020351382, 0.00021673929, 0.00023082423, 0.00024582449,\n        0.00026179955, 0.00027881276, 0.00029693158, 0.00031622787,\n        0.00033677814, 0.00035866388, 0.00038197188, 0.00040679456,\n        0.00043323036, 0.00046138411, 0.00049136745, 0.00052329927,\n        0.00055730621, 0.00059352311, 0.00063209358, 0.00067317058,\n        0.00071691700, 0.00076350630, 0.00081312324, 0.00086596457,\n        0.00092223983, 0.00098217216, 0.0010459992,  0.0011139742,\n        0.0011863665,  0.0012634633,  0.0013455702,  0.0014330129,\n        0.0015261382,  0.0016253153,  0.0017309374,  0.0018434235,\n        0.0019632195,  0.0020908006,  0.0022266726,  0.0023713743,\n        0.0025254795,  0.0026895994,  0.0028643847,  0.0030505286,\n        0.0032487691,  0.0034598925,  0.0036847358,  0.0039241906,\n        0.0041792066,  0.0044507950,  0.0047400328,  0.0050480668,\n        0.0053761186,  0.0057254891,  0.0060975636,  0.0064938176,\n        0.0069158225,  0.0073652516,  0.0078438871,  0.0083536271,\n        0.0088964928,  0.009474637,   0.010090352,   0.010746080,\n        0.011444421,   0.012188144,   0.012980198,   0.013823725,\n        0.014722068,   0.015678791,   0.016697687,   0.017782797,\n        0.018938423,   0.020169149,   0.021479854,   0.022875735,\n        0.024362330,   0.025945531,   0.027631618,   0.029427276,\n        0.031339626,   0.033376252,   0.035545228,   0.037855157,\n        0.040315199,   0.042935108,   0.045725273,   0.048696758,\n        0.051861348,   0.055231591,   0.058820850,   0.062643361,\n        0.066714279,   0.071049749,   0.075666962,   0.080584227,\n        0.085821044,   0.091398179,   0.097337747,   0.10366330,\n        0.11039993,    0.11757434,    0.12521498,    0.13335215,\n        0.14201813,    0.15124727,    0.16107617,    0.17154380,\n        0.18269168,    0.19456402,    0.20720788,    0.22067342,\n        0.23501402,    0.25028656,    0.26655159,    0.28387361,\n        0.30232132,    0.32196786,    0.34289114,    0.36517414,\n        0.38890521,    0.41417847,    0.44109412,    0.46975890,\n        0.50028648,    0.53279791,    0.56742212,    0.60429640,\n        0.64356699,    0.68538959,    0.72993007,    0.77736504,\n        0.82788260,    0.88168307,    0.9389798,     1.0\n    ];\n\n    public static inline function assert(b:Bool, ?p:PosInfos) {\n#if debug\n        if (!b) {\n            throw new ReaderError(ReaderErrorType.OTHER, \"\", p);\n        }\n#end\n    }\n\n    public static inline function neighbors(x:Vector<Int>, n:Int)\n    {\n        var low = -1;\n        var high = 65536;\n        var plow  = 0;\n        var phigh = 0;\n\n        for (i in 0...n) {\n            if (x[i] > low  && x[i] < x[n]) { plow  = i; low = x[i]; }\n            if (x[i] < high && x[i] > x[n]) { phigh = i; high = x[i]; }\n        }\n        return {\n            low : plow,\n            high : phigh,\n        }\n    }\n\n    public static inline function floatUnpack(x:UInt):Float\n    {\n        // from the specification\n        var mantissa:Float = x & 0x1fffff;\n        var sign:Int = x & 0x80000000;\n        var exp:Int = (x & 0x7fe00000) >>> 21;\n        var res:Float = (sign != 0) ? -mantissa : mantissa;\n        return res * Math.pow(2, exp - 788);\n    }\n\n    public static inline function bitReverse(n:UInt):UInt\n    {\n        n = ((n & 0xAAAAAAAA) >>>  1) | ((n & 0x55555555) << 1);\n        n = ((n & 0xCCCCCCCC) >>>  2) | ((n & 0x33333333) << 2);\n        n = ((n & 0xF0F0F0F0) >>>  4) | ((n & 0x0F0F0F0F) << 4);\n        n = ((n & 0xFF00FF00) >>>  8) | ((n & 0x00FF00FF) << 8);\n        return (n >>> 16) | (n << 16);\n    }\n\n    public static inline function pointCompare(a:IntPoint, b:IntPoint) {\n        return if (a.x < b.x) -1 else if (a.x > b.x) 1 else 0;\n    }\n\n    public static function uintAsc(a:UInt, b:UInt) {\n        return if (a < b) {\n            -1;\n        } else if (a == b){\n            0;\n        } else {\n            1;\n        }\n    }\n\n    public static function lookup1Values(entries:Int, dim:Int)\n    {\n        var r = Std.int(Math.exp(Math.log(entries) / dim));\n        if (Std.int(Math.pow(r + 1, dim)) <= entries) {\n            r++;\n        }\n\n        assert(Math.pow(r+1, dim) > entries);\n        assert(Std.int(Math.pow(r, dim)) <= entries); // (int),floor() as above\n        return r;\n    }\n\n    public static function computeWindow(n:Int, window:Vector<Float>)\n    {\n        var n2 = n >> 1;\n        for (i in 0...n2) {\n            window[i] = Math.sin(0.5 * M__PI * square(Math.sin((i - 0 + 0.5) / n2 * 0.5 * M__PI)));\n        }\n    }\n\n    public static function square(f:Float) {\n        return f * f;\n    }\n\n    public static function computeBitReverse(n:Int, rev:Vector<Int>)\n    {\n        var ld = MathTools.ilog(n) - 1;\n        var n8 = n >> 3;\n\n        for (i in 0...n8) {\n          rev[i] = (bitReverse(i) >>> (32 - ld + 3)) << 2;\n        }\n    }\n\n    public static function computeTwiddleFactors(n:Int, af:Vector<Float>, bf:Vector<Float>, cf:Vector<Float>)\n    {\n        var n4 = n >> 2;\n        var n8 = n >> 3;\n\n        var k2 = 0;\n        for (k in 0...n4) {\n            af[k2] = Math.cos(4*k*M__PI/n);\n            af[k2 + 1] = -Math.sin(4*k*M__PI/n);\n            bf[k2] = Math.cos((k2+1)*M__PI/n/2) * 0.5;\n            bf[k2 + 1] = Math.sin((k2 + 1) * M__PI / n / 2) * 0.5;\n            k2 += 2;\n        }\n\n        var k2 = 0;\n        for (k in 0...n8) {\n            cf[k2  ] = Math.cos(2*(k2+1) * M__PI/n);\n            cf[k2+1] = -Math.sin(2*(k2+1) * M__PI/n);\n            k2 += 2;\n        }\n    }\n\n\n    public static function drawLine(output:Vector<Float>, x0:Int, y0:Int, x1:Int, y1:Int, n:Int)\n    {\n        if (integerDivideTable == null) {\n            integerDivideTable = new Vector(DIVTAB_NUMER);\n            for (i in 0...DIVTAB_NUMER) {\n                integerDivideTable[i] = new Vector(DIVTAB_DENOM);\n                for (j in 1...DIVTAB_DENOM) {\n                    integerDivideTable[i][j] = Std.int(i / j);\n                }\n            }\n        }\n\n        var dy = y1 - y0;\n        var adx = x1 - x0;\n        var ady = dy < 0 ? -dy : dy;\n        var base:Int;\n        var x = x0;\n        var y = y0;\n        var err = 0;\n        var sy = if (adx < DIVTAB_DENOM && ady < DIVTAB_NUMER) {\n            if (dy < 0) {\n                base = -integerDivideTable[ady][adx];\n                base - 1;\n            } else {\n                base = integerDivideTable[ady][adx];\n                base + 1;\n            }\n        } else {\n            base = Std.int(dy / adx);\n            if (dy < 0) {\n                base - 1;\n            } else {\n                base + 1;\n            }\n        }\n        ady -= (base < 0 ? -base : base) * adx;\n        if (x1 > n) {\n            x1 = n;\n        }\n\n        output[x] *= INVERSE_DB_TABLE[y];\n\n        for (i in (x + 1)...x1) {\n            err += ady;\n            if (err >= adx) {\n                err -= adx;\n                y += sy;\n            } else {\n                y += base;\n            }\n            output[i] *= INVERSE_DB_TABLE[y];\n        }\n    }\n\n    public macro static inline function stbProf(i:Int)\n    {\n    return macro null;// macro trace($v { i }, channelBuffers[0][0], channelBuffers[0][1]);\n    }\n\n    public static inline function predictPoint(x:Int, x0:Int,  x1:Int,  y0:Int, y1:Int):Int\n    {\n        var dy = y1 - y0;\n        var adx = x1 - x0;\n        // @OPTIMIZE: force int division to round in the right direction... is this necessary on x86?\n        var err = Math.abs(dy) * (x - x0);\n        var off = Std.int(err / adx);\n        return dy < 0 ? (y0 - off) : (y0 + off);\n    }\n\n    public static inline function emptyFloatVector(len:Int) {\n        var vec = new Vector<Float>(len);\n        #if neko\n        for (i in 0...len) {\n            vec[i] = 0;\n        }\n        #end\n        return vec;\n    }\n\n    static public function copyVector(source:Vector<Float>):Vector<Float> {\n        var dest:Vector<Float> = new Vector<Float>(source.length);\n        for (i in 0...source.length) {\n            dest[i] = source[i];\n        }\n        return dest;\n    }\n}\n","package kha.audio2.ogg.vorbis;\nimport haxe.ds.Vector;\nimport haxe.io.Bytes;\nimport haxe.io.BytesOutput;\nimport haxe.io.Input;\nimport haxe.io.Output;\nimport kha.audio2.ogg.tools.MathTools;\nimport kha.audio2.ogg.tools.Mdct;\nimport kha.audio2.ogg.vorbis.data.Codebook;\nimport kha.audio2.ogg.vorbis.data.Floor.Floor1;\nimport kha.audio2.ogg.vorbis.data.Header;\nimport kha.audio2.ogg.vorbis.data.Mode;\nimport kha.audio2.ogg.vorbis.data.ProbedPage;\nimport kha.audio2.ogg.vorbis.data.ReaderError;\nimport kha.audio2.ogg.vorbis.VorbisDecodeState;\n\n/**\n * ...\n * @author shohei909\n */\nclass VorbisDecoder\n{\n    var previousWindow:Vector<Vector<Float>>; //var *[STB_VORBIS_MAX_CHANNELS];\n    var previousLength:Int;\n    var finalY:Vector<Array<Int>>; // [STB_VORBIS_MAX_CHANNELS];\n\n    // twiddle factors\n    var a:Vector<Vector<Float>>; // var *  [2]\n    var b:Vector<Vector<Float>>; // var *  [2]\n    var c:Vector<Vector<Float>>; // var *  [2]\n    var window:Vector<Vector<Float>>; //var * [2];\n    var bitReverseData:Vector<Vector<Int>>; //uint16 * [2]\n\n    // decode buffer\n    var channelBuffers:Vector<Vector<Float>>; //var *[STB_VORBIS_MAX_CHANNELS];\n    var channelBufferStart:Int;\n    var channelBufferEnd:Int;\n\n    public var header(default, null):Header;\n    public var currentSample(default, null):Int;\n    public var totalSample(default, null):Null<Int>;\n    var decodeState:VorbisDecodeState;\n\n    function new(header:Header, decodeState:VorbisDecodeState) {\n        this.header = header;\n        this.decodeState = decodeState;\n        totalSample = null;\n        currentSample = 0;\n\n        //Channel\n        previousLength = 0;\n\n        channelBuffers = new Vector(header.channel);\n        previousWindow = new Vector(header.channel);\n        finalY = new Vector(header.channel);\n\n        for (i in 0...header.channel) {\n            channelBuffers[i] = VorbisTools.emptyFloatVector(header.blocksize1);\n            previousWindow[i] = VorbisTools.emptyFloatVector(Std.int(header.blocksize1 / 2));\n            finalY[i] = new Array();\n        }\n\n        a = new Vector(2);\n        b = new Vector(2);\n        c = new Vector(2);\n        window = new Vector(2);\n        bitReverseData = new Vector(2);\n        initBlocksize(0, header.blocksize0);\n        initBlocksize(1, header.blocksize1);\n    }\n\n    public static function start(input:Input) {\n        var decodeState = new VorbisDecodeState(input);\n        var header = Header.read(decodeState);\n        var decoder = new VorbisDecoder(header, decodeState);\n        decodeState.startFirstDecode();\n        decoder.pumpFirstFrame();\n\n        return decoder;\n    }\n\n    public function read(output:kha.arrays.Float32Array, samples:Int, channels:Int, sampleRate:Int, useFloat:Bool) {\n        if (sampleRate % header.sampleRate != 0) {\n            throw 'Unsupported sampleRate : can\\'t convert ${header.sampleRate} to $sampleRate';\n        }\n        if (channels % header.channel != 0) {\n            throw 'Unsupported channels : can\\'t convert ${header.channel} to $channels';\n        }\n\n        var sampleRepeat = Std.int(sampleRate / header.sampleRate);\n        var channelRepeat = Std.int(channels / header.channel);\n\n        var n = 0;\n        var len = Math.floor(samples / sampleRepeat);\n        if (totalSample != null && len > totalSample - currentSample) {\n            len = totalSample - currentSample;\n        }\n\n\t\tvar index = 0;\n        while (n < len) {\n            var k = channelBufferEnd - channelBufferStart;\n            if (k >= len - n) k = len - n;\n            for (j in channelBufferStart...(channelBufferStart + k)) {\n                for (sr in 0...sampleRepeat) {\n                    for (i in 0...header.channel) {\n                        for (cr in 0...channelRepeat) {\n                            var value = channelBuffers[i][j];\n                            if (value > 1) {\n                                value = 1;\n                            } else if (value < -1) {\n                                value = -1;\n                            }\n\n                            if (useFloat) {\n                                //output.writeFloat(value);\n\t\t\t\t\t\t\t\toutput[index] = value;\n\t\t\t\t\t\t\t\t++index;\n                            } else {\n                                //output.writeInt16(Math.floor(value * 0x7FFF));\n                            }\n                        }\n                    }\n                }\n            }\n            n += k;\n            channelBufferStart += k;\n            if (n == len || getFrameFloat() == 0) {\n                break;\n            }\n        }\n\n        for (j in n...len) {\n            for (sr in 0...sampleRepeat) {\n                for (i in 0...header.channel) {\n                    for (cr in 0...channelRepeat) {\n                        if (useFloat) {\n                            //output.writeFloat(0);\n\t\t\t\t\t\t\toutput[index] = 0;\n\t\t\t\t\t\t\t++index;\n                        } else {\n                            //output.writeInt16(0);\n                        }\n                    }\n                }\n            }\n        }\n\n        currentSample += len;\n        return len * sampleRepeat;\n    }\n\n    public function skipSamples(len:Int) {\n        var n = 0;\n        if (totalSample != null && len > totalSample - currentSample) {\n            len = totalSample - currentSample;\n        }\n        while (n < len) {\n            var k = channelBufferEnd - channelBufferStart;\n            if (k >= len - n) k = len - n;\n            n += k;\n            channelBufferStart += k;\n            if (n == len || getFrameFloat() == 0) {\n                break;\n            }\n        }\n\n        currentSample += len;\n        return len;\n    }\n\n    public function setupSampleNumber(seekFunc:Int->Void, inputLength:Int) {\n        if (totalSample == null) {\n            totalSample = decodeState.getSampleNumber(seekFunc, inputLength);\n        }\n    }\n\n\n    public function seek(seekFunc:Int->Void, inputLength:UInt, sampleNumber:Int) {\n        if (currentSample == sampleNumber) {\n            return;\n        }\n\n        // do we know the location of the last page?\n        if (totalSample == null) {\n            setupSampleNumber(seekFunc, inputLength);\n            if (totalSample == 0) {\n                throw new ReaderError(ReaderErrorType.CANT_FIND_LAST_PAGE);\n            }\n        }\n\n        if (sampleNumber < 0) {\n            sampleNumber = 0;\n        }\n\n        var p0 = decodeState.pFirst;\n        var p1 = decodeState.pLast;\n\n        if (sampleNumber >= p1.lastDecodedSample) {\n            sampleNumber = p1.lastDecodedSample - 1;\n        }\n\n        if (sampleNumber < p0.lastDecodedSample) {\n            seekFrameFromPage(seekFunc, p0.pageStart, 0, sampleNumber);\n        } else {\n            var attempts = 0;\n\n            while (p0.pageEnd < p1.pageStart) {\n\n\n                // copy these into local variables so we can tweak them\n                // if any are unknown\n                var startOffset:UInt = p0.pageEnd;\n                var endOffset:UInt = p1.afterPreviousPageStart; // an address known to seek to page p1\n                var startSample = p0.lastDecodedSample;\n                var endSample = p1.lastDecodedSample;\n\n                // currently there is no such tweaking logic needed/possible?\n                if (startSample == null || endSample == null) {\n                    throw new ReaderError(SEEK_FAILED);\n                }\n\n                // now we want to lerp between these for the target samples...\n\n                // step 1: we need to bias towards the page start...\n                if (startOffset + 4000 < endOffset) {\n                    endOffset -= 4000;\n                }\n\n                // now compute an interpolated search loc\n                var probe:UInt = startOffset + Math.floor((endOffset - startOffset) / (endSample - startSample) * (sampleNumber - startSample));\n\n                // next we need to bias towards binary search...\n                // code is a little wonky to allow for full 32-bit unsigned values\n                if (attempts >= 4) {\n                    var probe2:UInt = startOffset + ((endOffset - startOffset) >> 1);\n                    probe = if (attempts >= 8) {\n                        probe2;\n                    } else if (probe < probe2) {\n                        probe + ((probe2 - probe) >>> 1);\n                    } else {\n                        probe2 + ((probe - probe2) >>> 1);\n                    }\n                }\n                ++attempts;\n                decodeState.setInputOffset(seekFunc, probe);\n\n                switch (decodeState.findPage(seekFunc, inputLength)) {\n                    case NotFound:\n                        throw new ReaderError(SEEK_FAILED);\n                    case Found(_):\n                }\n\n                var q:ProbedPage = decodeState.analyzePage(seekFunc, header);\n                if (q == null) {\n                    throw new ReaderError(SEEK_FAILED);\n                }\n                q.afterPreviousPageStart = probe;\n\n                // it's possible we've just found the last page again\n                if (q.pageStart == p1.pageStart) {\n                    p1 = q;\n                    continue;\n                }\n\n                if (sampleNumber < q.lastDecodedSample) {\n                    p1 = q;\n                } else {\n                    p0 = q;\n                }\n            }\n\n            if (p0.lastDecodedSample <= sampleNumber && sampleNumber < p1.lastDecodedSample) {\n                seekFrameFromPage(seekFunc, p1.pageStart, p0.lastDecodedSample, sampleNumber);\n            } else {\n                throw new ReaderError(SEEK_FAILED);\n            }\n        }\n    }\n\n    public function seekFrameFromPage(seekFunc:Int->Void, pageStart:Int, firstSample:Int, targetSample:Int) {\n        var frame = 0;\n        var frameStart:Int = firstSample;\n\n        // firstSample is the sample # of the first sample that doesn't\n        // overlap the previous page... note that this requires us to\n        // Partially_ discard the first packet! bleh.\n        decodeState.setInputOffset(seekFunc, pageStart);\n        decodeState.forcePageResync();\n\n        // frame start is where the previous packet's last decoded sample\n        // was, which corresponds to leftEnd... EXCEPT if the previous\n        // packet was long and this packet is short? Probably a bug here.\n\n        // now, we can start decoding frames... we'll only FAKE decode them,\n        // until we find the frame that contains our sample; then we'll rewind,\n        // and try again\n        var leftEnd = 0;\n        var leftStart = 0;\n\n        var prevState = null;\n        var lastState = null;\n\n        while (true) {\n            prevState = lastState;\n            lastState = decodeState.clone(seekFunc);\n\n            var initialResult = decodeInitial();\n            if (initialResult == null) {\n                lastState = prevState;\n                break;\n            }\n\n            leftStart = initialResult.left.start;\n            leftEnd = initialResult.left.end;\n\n            var start = if (frame == 0) {\n                leftEnd;\n            } else{\n                leftStart;\n            }\n\n            // the window starts at leftStart; the last valid sample we generate\n            // before the next frame's window start is rightStart-1\n            if (targetSample < frameStart + initialResult.right.start - start) {\n                break;\n            }\n\n            decodeState.flushPacket();\n            frameStart += initialResult.right.start - start;\n            ++frame;\n        }\n\n        decodeState = lastState;\n        seekFunc(decodeState.inputPosition);\n\n        previousLength = 0;\n        pumpFirstFrame();\n\n        currentSample = frameStart;\n        skipSamples(targetSample - frameStart);\n    }\n\n    public function clone(seekFunc:Int->Void) {\n        var decoder = Type.createEmptyInstance(VorbisDecoder);\n\n        decoder.currentSample = currentSample;\n        decoder.totalSample = totalSample;\n        decoder.previousLength = previousLength;\n        decoder.channelBufferStart = channelBufferStart;\n        decoder.channelBufferEnd = channelBufferEnd;\n\n        // sharrow copy\n        decoder.a = a;\n        decoder.b = b;\n        decoder.c = c;\n        decoder.window = window;\n        decoder.bitReverseData = bitReverseData;\n        decoder.header = header;\n\n        // deep copy\n        decoder.decodeState = decodeState.clone(seekFunc);\n        decoder.channelBuffers = new Vector(header.channel);\n        decoder.previousWindow = new Vector(header.channel);\n        decoder.finalY = new Vector(header.channel);\n\n        for (i in 0...header.channel) {\n            decoder.channelBuffers[i] = VorbisTools.copyVector(channelBuffers[i]);\n            decoder.previousWindow[i] = VorbisTools.copyVector(previousWindow[i]);\n            decoder.finalY[i] = Lambda.array(finalY[i]);\n        }\n\n        return decoder;\n    }\n\n    public function ensurePosition(seekFunc:Int->Void) {\n        seekFunc(decodeState.inputPosition);\n    }\n\n    function getFrameFloat() {\n        var result = decodePacket();\n        if (result == null) {\n            channelBufferStart = channelBufferEnd = 0;\n            return 0;\n        }\n\n        var len = finishFrame(result);\n\n        channelBufferStart = result.left;\n        channelBufferEnd = result.left + len;\n\n        return len;\n    }\n\n    function pumpFirstFrame() {\n        finishFrame(decodePacket());\n    }\n\n    function finishFrame(r:DecodePacketResult):Int {\n        var len = r.len;\n        var right = r.right;\n        var left = r.left;\n\n        // we use right&left (the start of the right- and left-window sin()-regions)\n        // to determine how much to return, rather than inferring from the rules\n        // (same result, clearer code); 'left' indicates where our sin() window\n        // starts, therefore where the previous window's right edge starts, and\n        // therefore where to start mixing from the previous buffer. 'right'\n        // indicates where our sin() ending-window starts, therefore that's where\n        // we start saving, and where our returned-data ends.\n\n        // mixin from previous window\n        if (previousLength != 0) {\n            var n = previousLength;\n            var w = getWindow(n);\n            for (i in 0...header.channel) {\n                var cb = channelBuffers[i];\n                var pw = previousWindow[i];\n                for (j in 0...n) {\n                    cb[left+j] = cb[left+j] * w[j] + pw[j] * w[n-1-j];\n                }\n            }\n        }\n\n        var prev = previousLength;\n\n        // last half of this data becomes previous window\n        previousLength = len - right;\n\n        // @OPTIMIZE: could avoid this copy by double-buffering the\n        // output (flipping previousWindow with channelBuffers), but\n        // then previousWindow would have to be 2x as large, and\n        // channelBuffers couldn't be temp mem (although they're NOT\n        // currently temp mem, they could be (unless we want to level\n        // performance by spreading out the computation))\n        for (i in 0...header.channel) {\n            var pw = previousWindow[i];\n            var cb = channelBuffers[i];\n            for (j in 0...(len - right)) {\n                pw[j] = cb[right + j];\n            }\n        }\n\n        if (prev == 0) {\n            // there was no previous packet, so this data isn't valid...\n            // this isn't entirely true, only the would-have-overlapped data\n            // isn't valid, but this seems to be what the spec requires\n            return 0;\n        }\n\n        // truncate a short frame\n        if (len < right) {\n            right = len;\n        }\n\n        return right - left;\n    }\n\n    function getWindow(len:Int)\n    {\n        len <<= 1;\n        return if (len == header.blocksize0) {\n            window[0];\n        } else if (len == header.blocksize1) {\n            window[1];\n        } else {\n            VorbisTools.assert(false);\n            null;\n        }\n    }\n\n    function initBlocksize(bs:Int, n:Int)\n    {\n        var n2 = n >> 1, n4 = n >> 2, n8 = n >> 3;\n        a[bs] = new Vector(n2);\n        b[bs] = new Vector(n2);\n        c[bs] = new Vector(n4);\n        window[bs] = new Vector(n2);\n        bitReverseData[bs] = new Vector(n8);\n\n        VorbisTools.computeTwiddleFactors(n, a[bs], b[bs], c[bs]);\n        VorbisTools.computeWindow(n, window[bs]);\n        VorbisTools.computeBitReverse(n, bitReverseData[bs]);\n    }\n\n    function inverseMdct(buffer:Vector<Float>, n:Int, blocktype:Bool) {\n        var bt = blocktype ? 1 : 0;\n        Mdct.inverseTransform(buffer, n, a[bt], b[bt], c[bt], bitReverseData[bt]);\n    }\n\n    function decodePacket():DecodePacketResult\n    {\n        var result = decodeInitial();\n        if (result == null) {\n            return null;\n        }\n        var rest = decodePacketRest(result);\n        return rest;\n    }\n\n    function decodeInitial():DecodeInitialResult\n    {\n        channelBufferStart = channelBufferEnd = 0;\n\n        do {\n            if (!decodeState.maybeStartPacket()) {\n                return null;\n            }\n\n            // check packet type\n            if (decodeState.readBits(1) != 0) {\n                while (VorbisTools.EOP != decodeState.readPacket()) {};\n                continue;\n            }\n            break;\n        } while (true);\n\n        var i = decodeState.readBits(MathTools.ilog(header.modes.length - 1));\n        if (i == VorbisTools.EOP || i >= header.modes.length) {\n            throw new ReaderError(ReaderErrorType.SEEK_FAILED);\n        }\n\n        var m = header.modes[i];\n        var n, prev, next;\n\n        if (m.blockflag) {\n            n = header.blocksize1;\n            prev = decodeState.readBits(1);\n            next = decodeState.readBits(1);\n        } else {\n            prev = next = 0;\n            n = header.blocksize0;\n        }\n\n        // WINDOWING\n        var windowCenter = n >> 1;\n\n        return {\n            mode : i,\n            left : if (m.blockflag && prev == 0) {\n                start : (n - header.blocksize0) >> 2,\n                end : (n + header.blocksize0) >> 2,\n            } else {\n                start : 0,\n                end : windowCenter,\n            },\n            right : if (m.blockflag && next == 0) {\n                start : (n * 3 - header.blocksize0) >> 2,\n                end : (n * 3 + header.blocksize0) >> 2,\n            } else {\n                start : windowCenter,\n                end : n,\n            },\n        }\n    }\n\n\n    function decodePacketRest(r:DecodeInitialResult):DecodePacketResult\n    {\n        var len = 0;\n        var m = header.modes[r.mode];\n\n        var zeroChannel = new Vector<Bool>(256);\n        var reallyZeroChannel = new Vector<Bool>(256);\n\n        // WINDOWING\n\n        var n = m.blockflag ? header.blocksize1 : header.blocksize0;\n        var map = header.mapping[m.mapping];\n\n        // FLOORS\n        var n2 = n >> 1;\n        VorbisTools.stbProf(1);\n        var rangeList = [256, 128, 86, 64];\n        var codebooks = header.codebooks;\n\n        for (i in 0...header.channel) {\n            var s = map.chan[i].mux;\n            zeroChannel[i] = false;\n            var floor = header.floorConfig[map.submapFloor[s]];\n            if (floor.type == 0) {\n                throw new ReaderError(INVALID_STREAM);\n            } else {\n                var g:Floor1 = floor.floor1;\n                if (decodeState.readBits(1) != 0) {\n                    var fy = new Array<Int>();\n                    var step2Flag = new Vector<Bool>(256);\n                    var range = rangeList[g.floor1Multiplier-1];\n                    var offset = 2;\n                    fy = finalY[i];\n                    fy[0] = decodeState.readBits(MathTools.ilog(range)-1);\n                    fy[1] = decodeState.readBits(MathTools.ilog(range)-1);\n                    for (j in 0...g.partitions) {\n                        var pclass = g.partitionClassList[j];\n                        var cdim = g.classDimensions[pclass];\n                        var cbits = g.classSubclasses[pclass];\n                        var csub = (1 << cbits) - 1;\n                        var cval = 0;\n                        if (cbits != 0) {\n                            var c = codebooks[g.classMasterbooks[pclass]];\n                            cval = decodeState.decode(c);\n                        }\n\n                        var books = g.subclassBooks[pclass];\n                        for (k in 0...cdim) {\n                            var book = books[cval & csub];\n                            cval >>= cbits;\n                            fy[offset++] = if (book >= 0) {\n                                decodeState.decode(codebooks[book]);\n                            } else {\n                                0;\n                            }\n                        }\n                    }\n\n                    if (decodeState.validBits == VorbisDecodeState.INVALID_BITS) {\n                        zeroChannel[i] = true;\n                        continue;\n                    }\n\n                    step2Flag[0] = step2Flag[1] = true;\n                    var naighbors = g.neighbors;\n                    var xlist = g.xlist;\n                    for (j in 2...g.values) {\n                        var low = naighbors[j][0];\n                        var high = naighbors[j][1];\n                        var lowroom = VorbisTools.predictPoint(xlist[j], xlist[low], xlist[high], fy[low], fy[high]);\n                        var val = fy[j];\n                        var highroom = range - lowroom;\n                        var room = if (highroom < lowroom){\n                            highroom * 2;\n                        }else{\n                            lowroom * 2;\n                        }\n                        if (val != 0) {\n                            step2Flag[low] = step2Flag[high] = true;\n                            step2Flag[j] = true;\n                            if (val >= room){\n                                if (highroom > lowroom){\n                                    fy[j] = val - lowroom + lowroom;\n                                }else{\n                                    fy[j] = lowroom - val + highroom - 1;\n                                }\n                            } else {\n                                if (val & 1 != 0){\n                                    fy[j] = lowroom - ((val+1)>>1);\n                                } else{\n                                    fy[j] = lowroom + (val>>1);\n                                }\n                            }\n                        } else {\n                            step2Flag[j] = false;\n                            fy[j] = lowroom;\n                        }\n                    }\n\n                    // defer final floor computation until _after_ residue\n                    for (j in 0...g.values) {\n                        if (!step2Flag[j]){\n                            fy[j] = -1;\n                        }\n                    }\n\n                } else {\n                    zeroChannel[i] = true;\n                }\n                // So we just defer everything else to later\n                // at this point we've decoded the floor into buffer\n            }\n        }\n        VorbisTools.stbProf(0);\n        // at this point we've decoded all floors\n\n        //if (alloc.allocBuffer) {\n        //    assert(alloc.allocBufferLengthInBytes == tempOffset);\n        //}\n\n        // re-enable coupled channels if necessary\n        for (i in 0...header.channel) {\n            reallyZeroChannel[i] = zeroChannel[i];\n        }\n        for (i in 0...map.couplingSteps) {\n            if (!zeroChannel[map.chan[i].magnitude] || !zeroChannel[map.chan[i].angle]) {\n                zeroChannel[map.chan[i].magnitude] = zeroChannel[map.chan[i].angle] = false;\n            }\n        }\n        // RESIDUE DECODE\n        for (i in 0...map.submaps) {\n            var residueBuffers = new Vector<Vector<Float>>(header.channel);\n            var doNotDecode = new Vector<Bool>(256);\n            var ch = 0;\n            for (j in 0...header.channel) {\n\n                if (map.chan[j].mux == i) {\n                    if (zeroChannel[j]) {\n                        doNotDecode[ch] = true;\n                        residueBuffers[ch] = null;\n                    } else {\n                        doNotDecode[ch] = false;\n                        residueBuffers[ch] = channelBuffers[j];\n                    }\n                    ++ch;\n                }\n            }\n\n            var r = map.submapResidue[i];\n            var residue = header.residueConfig[r];\n            residue.decode(decodeState,header, residueBuffers, ch, n2, doNotDecode, channelBuffers);\n        }\n\n        // INVERSE COUPLING\n        VorbisTools.stbProf(14);\n\n        var i = map.couplingSteps;\n        var n2 = n >> 1;\n        while (--i >= 0) {\n            var m = channelBuffers[map.chan[i].magnitude];\n            var a = channelBuffers[map.chan[i].angle];\n            for (j in 0...n2) {\n                var a2, m2;\n                if (m[j] > 0) {\n                    if (a[j] > 0) {\n                        m2 = m[j];\n                        a2 = m[j] - a[j];\n                    } else {\n                        a2 = m[j];\n                        m2 = m[j] + a[j];\n                    }\n                } else {\n                    if (a[j] > 0) {\n                        m2 = m[j];\n                        a2 = m[j] + a[j];\n                    } else {\n                        a2 = m[j];\n                        m2 = m[j] - a[j];\n                    }\n                }\n                m[j] = m2;\n                a[j] = a2;\n            }\n        }\n\n        // finish decoding the floors\n        VorbisTools.stbProf(15);\n        for (i in 0...header.channel) {\n            if (reallyZeroChannel[i]) {\n                for(j in 0...n2) {\n                    channelBuffers[i][j] = 0;\n                }\n            } else {\n                map.doFloor(header.floorConfig, i, n, channelBuffers[i], finalY[i], null);\n            }\n        }\n\n        // INVERSE MDCT\n        VorbisTools.stbProf(16);\n        for (i in 0...header.channel) {\n            inverseMdct(channelBuffers[i], n, m.blockflag);\n        }\n        VorbisTools.stbProf(0);\n\n        // this shouldn't be necessary, unless we exited on an error\n        // and want to flush to get to the next packet\n        decodeState.flushPacket();\n\n        return decodeState.finishDecodePacket(previousLength, n, r);\n    }\n}\n\ntypedef DecodePacketResult = {\n    var len : Int;\n    var left : Int;\n    var right : Int;\n}\n\ntypedef DecodeInitialResult = {\n    var mode : Int;\n    var left : Range;\n    var right : Range;\n}\n\nprivate typedef Range = {\n    var start : Int;\n    var end : Int;\n}\n","package kha.audio2.ogg.tools;\nimport haxe.ds.Vector;\n\n/**\n * modified discrete cosine transform\n * @author shohei909\n */\nclass Mdct {\n    static public inline function inverseTransform(buffer:Vector<Float>, n:Int, a:Vector<Float>, b:Vector<Float>, c:Vector<Float>, bitReverse:Vector<Int>)\n    {\n        var n2 = n >> 1;\n        var n4 = n >> 2;\n        var n8 = n >> 3;\n        // @OPTIMIZE: reduce register pressure by using fewer variables?\n        //int save_point = temp_alloc_save(f);\n\n        var buf2 = new Vector(n2);\n        // twiddle factors\n\n        // IMDCT algorithm from \"The use of multirate filter banks for coding of high quality digital audio\"\n        // See notes about bugs in that paper in less-optimal implementation 'inverseMdct_old' after this function.\n\n        // kernel from paper\n\n\n        // merged:\n        //    copy and reflect spectral data\n        //    step 0\n\n        // note that it turns out that the items added together during\n        // this step are, in fact, being added to themselves (as reflected\n        // by step 0). inexplicable inefficiency! this became obvious\n        // once I combined the passes.\n\n        // so there's a missing 'times 2' here (for adding X to itself).\n        // this propogates through linearly to the end, where the numbers\n        // are 1/2 too small, and need to be compensated for.\n\n        {\n            var dOffset = n2 - 2;\n            var aaOffset = 0;\n            var eOffset = 0;\n            var eStopOffset = n2;\n            while (eOffset != eStopOffset) {\n                buf2[dOffset + 1] = (buffer[eOffset + 0] * a[aaOffset + 0] - buffer[eOffset + 2] * a[aaOffset + 1]);\n                buf2[dOffset + 0] = (buffer[eOffset + 0] * a[aaOffset + 1] + buffer[eOffset + 2] * a[aaOffset + 0]);\n                dOffset -= 2;\n                aaOffset += 2;\n                eOffset += 4;\n            }\n\n            eOffset = n2 - 3;\n            while (dOffset >= 0) {\n                buf2[dOffset + 1] = (-buffer[eOffset + 2] * a[aaOffset + 0] - -buffer[eOffset + 0]*a[aaOffset + 1]);\n                buf2[dOffset + 0] = (-buffer[eOffset + 2] * a[aaOffset + 1] + -buffer[eOffset + 0]*a[aaOffset + 0]);\n                dOffset -= 2;\n                aaOffset += 2;\n                eOffset -= 4;\n            }\n        }\n\n        // now we use symbolic names for these, so that we can\n        // possibly swap their meaning as we change which operations\n        // are in place\n\n        var u = buffer;\n        var v = buf2;\n\n        // step 2     (paper output is w, now u)\n        // this could be in place, but the data ends up in the wrong\n        // place... _somebody_'s got to swap it, so this is nominated\n        {\n            var aaOffset = n2 - 8;\n            var eOffset0 = n4;\n            var eOffset1 = 0;\n\n            var dOffset0 = n4;\n            var dOffset1 = 0;\n\n            while (aaOffset >= 0) {\n\n                var v41_21:Float = v[eOffset0 + 1] - v[eOffset1 + 1];\n                var v40_20:Float = v[eOffset0 + 0] - v[eOffset1 + 0];\n                u[dOffset0 + 1]  = v[eOffset0 + 1] + v[eOffset1 + 1];\n                u[dOffset0 + 0]  = v[eOffset0 + 0] + v[eOffset1 + 0];\n                u[dOffset1 + 1]  = v41_21*a[aaOffset + 4] - v40_20*a[aaOffset + 5];\n                u[dOffset1 + 0]  = v40_20*a[aaOffset + 4] + v41_21*a[aaOffset + 5];\n\n                v41_21 = v[eOffset0 + 3] - v[eOffset1 + 3];\n                v40_20 = v[eOffset0 + 2] - v[eOffset1 + 2];\n                u[dOffset0 + 3]  = v[eOffset0 + 3] + v[eOffset1 + 3];\n                u[dOffset0 + 2]  = v[eOffset0 + 2] + v[eOffset1 + 2];\n                u[dOffset1 + 3]  = v41_21*a[aaOffset + 0] - v40_20*a[aaOffset + 1];\n                u[dOffset1 + 2]  = v40_20*a[aaOffset + 0] + v41_21*a[aaOffset + 1];\n\n                aaOffset -= 8;\n\n                dOffset0 += 4;\n                dOffset1 += 4;\n                eOffset0 += 4;\n                eOffset1 += 4;\n            }\n\n        }\n\n        // step 3\n        var ld = MathTools.ilog(n) - 1; // ilog is off-by-one from normal definitions\n\n        // optimized step 3:\n\n        // the original step3 loop can be nested r inside s or s inside r;\n        // it's written originally as s inside r, but this is dumb when r\n        // iterates many times, and s few. So I have two copies of it and\n        // switch between them halfway.\n\n        // this is iteration 0 of step 3\n        step3Iter0Loop(n >> 4, u, n2-1-n4*0, -(n >> 3), a);\n        step3Iter0Loop(n >> 4, u, n2-1-n4*1, -(n >> 3), a);\n\n        // this is iteration 1 of step 3\n        step3InnerRLoop(n >> 5, u, n2-1 - n8*0, -(n >> 4), a, 16);\n        step3InnerRLoop(n >> 5, u, n2-1 - n8*1, -(n >> 4), a, 16);\n        step3InnerRLoop(n >> 5, u, n2-1 - n8*2, -(n >> 4), a, 16);\n        step3InnerRLoop(n >> 5, u, n2-1 - n8*3, -(n >> 4), a, 16);\n\n        for (l in 2...((ld - 3) >> 1)) {\n            var k0 = n >> (l + 2);\n            var k0_2 = k0 >> 1;\n            var lim = 1 << (l+1);\n            for (i in 0...lim) {\n                step3InnerRLoop(n >> (l + 4), u, n2 - 1 - k0 * i, -k0_2, a, 1 << (l + 3));\n            }\n        }\n\n        for (l in ((ld - 3) >> 1)...(ld-6)) {\n            var k0 = n >> (l + 2);\n            var k1 = 1 << (l + 3);\n            var k0_2 = k0 >> 1;\n            var rlim = n >> (l+6);\n            var lim = 1 << (l+1);\n            var aOffset = 0;\n            var i_off = n2 - 1;\n            var r = rlim + 1;\n            while (--r > 0) {\n                step3InnerSLoop(lim, u, i_off, -k0_2, a, aOffset, k1, k0);\n                aOffset += k1 * 4;\n                i_off -= 8;\n            }\n        }\n\n\n        // iterations with count:\n        //    ld-6,-5,-4 all interleaved together\n        //         the big win comes from getting rid of needless flops\n        //            due to the constants on pass 5 & 4 being all 1 and 0;\n        //         combining them to be simultaneous to improve cache made little difference\n        step3InnerSLoopLd654(n >> 5, u, n2-1, a, n);\n\n\n        // output is u\n\n        // step 4, 5, and 6\n        // cannot be in-place because of step 5\n        {\n            // weirdly, I'd have thought reading sequentially and writing\n            // erratically would have been better than vice-versa, but in\n            // fact that's not what my testing showed. (That is, with\n            // j = bitreverse(i), do you read i and write j, or read j and write i.)\n            var brOffset = 0;\n            var dOffset0 = n4-4; // v\n            var dOffset1 = n2-4; // v\n\n            while (dOffset0 >= 0) {\n                var k4 = bitReverse[brOffset + 0];\n                v[dOffset1 +3] = u[k4+0];\n                v[dOffset1 +2] = u[k4+1];\n                v[dOffset0 +3] = u[k4+2];\n                v[dOffset0 +2] = u[k4+3];\n\n                k4 = bitReverse[brOffset + 1];\n                v[dOffset1 +1] = u[k4+0];\n                v[dOffset1 +0] = u[k4+1];\n                v[dOffset0 +1] = u[k4+2];\n                v[dOffset0 +0] = u[k4+3];\n\n                dOffset0 -= 4;\n                dOffset1 -= 4;\n                brOffset += 2;\n            }\n        }\n\n        // (paper output is u, now v)\n\n        // data must be in buf2\n        //assert(v == buf2);\n\n        // step 7    (paper output is v, now v)\n        // this is now in place\n        {\n            var cOffset = 0;\n            var dOffset = 0; // v\n            var eOffset = n2 - 4; // v\n\n            while (dOffset < eOffset) {\n                var a02 = v[dOffset + 0] - v[eOffset + 2];\n                var a11 = v[dOffset + 1] + v[eOffset + 3];\n\n                var b0 = c[cOffset + 1]*a02 + c[cOffset + 0]*a11;\n                var b1 = c[cOffset + 1]*a11 - c[cOffset + 0]*a02;\n\n                var b2 = v[dOffset + 0] + v[eOffset + 2];\n                var b3 = v[dOffset + 1] - v[eOffset + 3];\n\n                v[dOffset + 0] = b2 + b0;\n                v[dOffset + 1] = b3 + b1;\n                v[eOffset + 2] = b2 - b0;\n                v[eOffset + 3] = b1 - b3;\n\n                a02 = v[dOffset + 2] - v[eOffset + 0];\n                a11 = v[dOffset + 3] + v[eOffset + 1];\n\n                b0 = c[cOffset + 3]*a02 + c[cOffset + 2]*a11;\n                b1 = c[cOffset + 3]*a11 - c[cOffset + 2]*a02;\n\n                b2 = v[dOffset + 2] + v[eOffset + 0];\n                b3 = v[dOffset + 3] - v[eOffset + 1];\n\n                v[dOffset + 2] = b2 + b0;\n                v[dOffset + 3] = b3 + b1;\n                v[eOffset + 0] = b2 - b0;\n                v[eOffset + 1] = b1 - b3;\n\n                cOffset += 4;\n                dOffset += 4;\n                eOffset -= 4;\n            }\n        }\n\n        // data must be in buf2\n\n        // step 8+decode    (paper output is X, now buffer)\n        // this generates pairs of data a la 8 and pushes them directly through\n        // the decode kernel (pushing rather than pulling) to avoid having\n        // to make another pass later\n\n        // this cannot POSSIBLY be in place, so we refer to the buffers directly\n\n        {\n            var bOffset = n2 - 8; //b\n            var eOffset = n2 - 8; //buf2\n            var dOffset0 = 0; //buffer\n            var dOffset1 = n2-4; //buffer\n            var dOffset2 = n2; //buffer\n            var dOffset3 = n - 4; //buffer\n\n            while (eOffset >= 0) {\n                var p3 =  buf2[eOffset + 6]*b[bOffset + 7] - buf2[eOffset + 7]*b[bOffset + 6];\n                var p2 = -buf2[eOffset + 6]*b[bOffset + 6] - buf2[eOffset + 7]*b[bOffset + 7];\n\n                buffer[dOffset0 + 0] =    p3;\n                buffer[dOffset1 + 3] = - p3;\n                buffer[dOffset2 + 0] =    p2;\n                buffer[dOffset3 + 3] =    p2;\n\n                var p1 =  buf2[eOffset + 4]*b[bOffset + 5] - buf2[eOffset + 5]*b[bOffset + 4];\n                var p0 = -buf2[eOffset + 4]*b[bOffset + 4] - buf2[eOffset + 5]*b[bOffset + 5];\n\n                buffer[dOffset0 + 1] =    p1;\n                buffer[dOffset1 + 2] = - p1;\n                buffer[dOffset2 + 1] =    p0;\n                buffer[dOffset3 + 2] =    p0;\n\n                p3 =  buf2[eOffset + 2]*b[bOffset + 3] - buf2[eOffset + 3]*b[bOffset + 2];\n                p2 = -buf2[eOffset + 2]*b[bOffset + 2] - buf2[eOffset + 3]*b[bOffset + 3];\n\n                buffer[dOffset0 + 2] =    p3;\n                buffer[dOffset1 + 1] = - p3;\n                buffer[dOffset2 + 2] =    p2;\n                buffer[dOffset3 + 1] =    p2;\n\n                p1 =  buf2[eOffset + 0]*b[bOffset + 1] - buf2[eOffset + 1]*b[bOffset + 0];\n                p0 = -buf2[eOffset + 0]*b[bOffset + 0] - buf2[eOffset + 1]*b[bOffset + 1];\n\n                buffer[dOffset0 + 3] =    p1;\n                buffer[dOffset1 + 0] = - p1;\n                buffer[dOffset2 + 3] =    p0;\n                buffer[dOffset3 + 0] =    p0;\n\n                bOffset -= 8;\n                eOffset -= 8;\n                dOffset0 += 4;\n                dOffset2 += 4;\n                dOffset1 -= 4;\n                dOffset3 -= 4;\n            }\n        }\n    }\n\n\n    // the following were split out into separate functions while optimizing;\n    // they could be pushed back up but eh. __forceinline showed no change;\n    // they're probably already being inlined.\n    static inline function step3Iter0Loop(n:Int, e:Vector<Float>, i_off:Int, k_off:Int, a:Vector<Float>)\n    {\n        var eeOffset0 = i_off; // e\n        var eeOffset2 = i_off + k_off; // e\n        var aOffset = 0;\n        var i = (n >> 2) + 1;\n\n        while (--i > 0) {\n            var k00_20  = e[eeOffset0 +  0] - e[eeOffset2 +  0];\n            var k01_21  = e[eeOffset0 + -1] - e[eeOffset2 + -1];\n\n            e[eeOffset0 +  0] += e[eeOffset2 +  0];//e[eeOffset0 +  0] = e[eeOffset0 +  0] + e[eeOffset2 +  0];\n            e[eeOffset0 + -1] += e[eeOffset2 + -1];//e[eeOffset0 + -1] = e[eeOffset0 + -1] + e[eeOffset2 + -1];\n            e[eeOffset2 +  0] = k00_20 * a[aOffset + 0] - k01_21 * a[aOffset + 1];\n            e[eeOffset2 + -1] = k01_21 * a[aOffset + 0] + k00_20 * a[aOffset + 1];\n            aOffset +=  8;\n\n            k00_20  = e[eeOffset0 + -2] - e[eeOffset2 + -2];\n            k01_21  = e[eeOffset0 + -3] - e[eeOffset2 + -3];\n            e[eeOffset0 + -2] += e[eeOffset2 + -2];//e[eeOffset0 + -2] = e[eeOffset0 + -2] + e[eeOffset2 + -2];\n            e[eeOffset0 + -3] += e[eeOffset2 + -3];//e[eeOffset0 + -3] = e[eeOffset0 + -3] + e[eeOffset2 + -3];\n            e[eeOffset2 + -2] = k00_20 * a[aOffset + 0] - k01_21 * a[aOffset + 1];\n            e[eeOffset2 + -3] = k01_21 * a[aOffset + 0] + k00_20 * a[aOffset + 1];\n            aOffset +=  8;\n\n            k00_20  = e[eeOffset0 + -4] - e[eeOffset2 + -4];\n            k01_21  = e[eeOffset0 + -5] - e[eeOffset2 + -5];\n            e[eeOffset0 + -4] += e[eeOffset2 + -4];//e[eeOffset0 + -4] = e[eeOffset0 + -4] + e[eeOffset2 + -4];\n            e[eeOffset0 + -5] += e[eeOffset2 + -5];//e[eeOffset0 + -5] = e[eeOffset0 + -5] + e[eeOffset2 + -5];\n            e[eeOffset2 + -4] = k00_20 * a[aOffset + 0] - k01_21 * a[aOffset + 1];\n            e[eeOffset2 + -5] = k01_21 * a[aOffset + 0] + k00_20 * a[aOffset + 1];\n            aOffset +=  8;\n\n            k00_20  = e[eeOffset0 + -6] - e[eeOffset2 + -6];\n            k01_21  = e[eeOffset0 + -7] - e[eeOffset2 + -7];\n            e[eeOffset0 + -6] += e[eeOffset2 + -6];//e[eeOffset0 + -6] = e[eeOffset0 + -6] + e[eeOffset2 + -6];\n            e[eeOffset0 + -7] += e[eeOffset2 + -7];//e[eeOffset0 + -7] = e[eeOffset0 + -7] + e[eeOffset2 + -7];\n            e[eeOffset2 + -6] = k00_20 * a[aOffset + 0] - k01_21 * a[aOffset + 1];\n            e[eeOffset2 + -7] = k01_21 * a[aOffset + 0] + k00_20 * a[aOffset + 1];\n            aOffset += 8;\n            eeOffset0 -= 8;\n            eeOffset2 -= 8;\n        }\n    }\n\n\n    static inline function step3InnerRLoop(lim:Int, e:Vector<Float>, d0:Int, k_off:Int, a:Vector<Float>, k1:Int) {\n        var aOffset = 0;\n        var eOffset0 = d0; //e\n        var eOffset2 = d0 + k_off; //e\n        var i = (lim >> 2) + 1;\n\n        while (--i > 0) {\n            var k00_20 = e[eOffset0 + -0] - e[eOffset2 + -0];\n            var k01_21 = e[eOffset0 + -1] - e[eOffset2 + -1];\n            e[eOffset0 + -0] += e[eOffset2 + -0];//e[eOffset0 + -0] = e[eOffset0 + -0] + e[eOffset2 + -0];\n            e[eOffset0 + -1] += e[eOffset2 + -1];//e[eOffset0 + -1] = e[eOffset0 + -1] + e[eOffset2 + -1];\n            e[eOffset2 + -0] = (k00_20)*a[aOffset + 0] - (k01_21) * a[aOffset + 1];\n            e[eOffset2 + -1] = (k01_21)*a[aOffset + 0] + (k00_20) * a[aOffset + 1];\n\n            aOffset +=  k1;\n\n            k00_20 = e[eOffset0 + -2] - e[eOffset2 + -2];\n            k01_21 = e[eOffset0 + -3] - e[eOffset2 + -3];\n            e[eOffset0 + -2] += e[eOffset2 + -2];//e[eOffset0 + -2] = e[eOffset0 + -2] + e[eOffset2 + -2];\n            e[eOffset0 + -3] += e[eOffset2 + -3];//e[eOffset0 + -3] = e[eOffset0 + -3] + e[eOffset2 + -3];\n            e[eOffset2 + -2] = (k00_20)*a[aOffset + 0] - (k01_21) * a[aOffset + 1];\n            e[eOffset2 + -3] = (k01_21)*a[aOffset + 0] + (k00_20) * a[aOffset + 1];\n\n            aOffset +=  k1;\n\n            k00_20 = e[eOffset0 + -4] - e[eOffset2 + -4];\n            k01_21 = e[eOffset0 + -5] - e[eOffset2 + -5];\n            e[eOffset0 + -4] += e[eOffset2 + -4];//e[eOffset0 + -4] = e[eOffset0 + -4] + e[eOffset2 + -4];\n            e[eOffset0 + -5] += e[eOffset2 + -5];//e[eOffset0 + -5] = e[eOffset0 + -5] + e[eOffset2 + -5];\n            e[eOffset2 + -4] = (k00_20)*a[aOffset + 0] - (k01_21) * a[aOffset + 1];\n            e[eOffset2 + -5] = (k01_21)*a[aOffset + 0] + (k00_20) * a[aOffset + 1];\n\n            aOffset +=  k1;\n\n            k00_20 = e[eOffset0 + -6] - e[eOffset2 + -6];\n            k01_21 = e[eOffset0 + -7] - e[eOffset2 + -7];\n            e[eOffset0 + -6] += e[eOffset2 + -6];//e[eOffset0 + -6] = e[eOffset0 + -6] + e[eOffset2 + -6];\n            e[eOffset0 + -7] += e[eOffset2 + -7];//e[eOffset0 + -7] = e[eOffset0 + -7] + e[eOffset2 + -7];\n            e[eOffset2 + -6] = (k00_20)*a[aOffset + 0] - (k01_21) * a[aOffset + 1];\n            e[eOffset2 + -7] = (k01_21)*a[aOffset + 0] + (k00_20) * a[aOffset + 1];\n\n            eOffset0 -= 8;\n            eOffset2 -= 8;\n\n            aOffset +=  k1;\n        }\n    }\n\n    static inline function step3InnerSLoop(n:Int, e:Vector<Float>, i_off:Int, k_off:Int, a:Vector<Float>, aOffset0:Int, aOffset1:Int, k0:Int)\n    {\n        var A0 = a[aOffset0];\n        var A1 = a[aOffset0 + 1];\n        var A2 = a[aOffset0 + aOffset1];\n        var A3 = a[aOffset0 + aOffset1 + 1];\n        var A4 = a[aOffset0 + aOffset1 * 2+0];\n        var A5 = a[aOffset0 + aOffset1 * 2+1];\n        var A6 = a[aOffset0 + aOffset1 * 3+0];\n        var A7 = a[aOffset0 + aOffset1 * 3+1];\n\n        var eeOffset0 = i_off; // e\n        var eeOffset2 = i_off + k_off; // e\n        var i = n + 1;\n        while (--i > 0) {\n            var k00      = e[eeOffset0 +  0] - e[eeOffset2 +  0];\n            var k11      = e[eeOffset0 + -1] - e[eeOffset2 + -1];\n            e[eeOffset0 +  0] =  e[eeOffset0 +  0] + e[eeOffset2 +  0];\n            e[eeOffset0 + -1] =  e[eeOffset0 + -1] + e[eeOffset2 + -1];\n            e[eeOffset2 +  0] = (k00) * A0 - (k11) * A1;\n            e[eeOffset2 + -1] = (k11) * A0 + (k00) * A1;\n\n            k00      = e[eeOffset0 + -2] - e[eeOffset2 + -2];\n            k11      = e[eeOffset0 + -3] - e[eeOffset2 + -3];\n            e[eeOffset0 + -2] =  e[eeOffset0 + -2] + e[eeOffset2 + -2];\n            e[eeOffset0 + -3] =  e[eeOffset0 + -3] + e[eeOffset2 + -3];\n            e[eeOffset2 + -2] = (k00) * A2 - (k11) * A3;\n            e[eeOffset2 + -3] = (k11) * A2 + (k00) * A3;\n\n            k00      = e[eeOffset0 + -4] - e[eeOffset2 + -4];\n            k11      = e[eeOffset0 + -5] - e[eeOffset2 + -5];\n            e[eeOffset0 + -4] =  e[eeOffset0 + -4] + e[eeOffset2 + -4];\n            e[eeOffset0 + -5] =  e[eeOffset0 + -5] + e[eeOffset2 + -5];\n            e[eeOffset2 + -4] = (k00) * A4 - (k11) * A5;\n            e[eeOffset2 + -5] = (k11) * A4 + (k00) * A5;\n\n            k00      = e[eeOffset0 + -6] - e[eeOffset2 + -6];\n            k11      = e[eeOffset0 + -7] - e[eeOffset2 + -7];\n            e[eeOffset0 + -6] =  e[eeOffset0 + -6] + e[eeOffset2 + -6];\n            e[eeOffset0 + -7] =  e[eeOffset0 + -7] + e[eeOffset2 + -7];\n            e[eeOffset2 + -6] = (k00) * A6 - (k11) * A7;\n            e[eeOffset2 + -7] = (k11) * A6 + (k00) * A7;\n\n            eeOffset0 -= k0;\n            eeOffset2 -= k0;\n        }\n    }\n\n    static inline function iter54(e:Vector<Float>, zOffset:Int)\n    {\n        var t0 = e[zOffset +  0];\n        var t1 = e[zOffset + -4];\n        var k00  = t0 - t1;\n        var y0    = t0 + t1;\n\n        t0 = e[zOffset + -2];\n        t1 = e[zOffset + -6];\n        var y2    = t0 + t1;\n        var k22  = t0 - t1;\n\n        e[zOffset + -0] = y0 + y2;        // z0 + z4 + z2 + z6\n        e[zOffset + -2] = y0 - y2;        // z0 + z4 - z2 - z6\n\n        // done with y0,y2\n\n        var k33  = e[zOffset + -3] - e[zOffset + -7];\n\n        e[zOffset + -4] = k00 + k33;     // z0 - z4 + z3 - z7\n        e[zOffset + -6] = k00 - k33;     // z0 - z4 - z3 + z7\n\n        // done with k33\n\n        t0 = e[zOffset + -1];\n        t1 = e[zOffset + -5];\n        var k11  = t0 - t1;\n        var y1    = t0 + t1;\n        var y3    = e[zOffset + -3] + e[zOffset + -7];\n\n        e[zOffset + -1] = y1 + y3;        // z1 + z5 + z3 + z7\n        e[zOffset + -3] = y1 - y3;        // z1 + z5 - z3 - z7\n        e[zOffset + -5] = k11 - k22;     // z1 - z5 + z2 - z6\n        e[zOffset + -7] = k11 + k22;     // z1 - z5 - z2 + z6\n    }\n\n    static inline function step3InnerSLoopLd654(n:Int, e:Vector<Float>, i_off:Int, a:Vector<Float>, baseN:Int)\n    {\n        var A2 = a[baseN >> 3];\n        var zOffset = i_off; // e\n        var baseOffset = i_off - 16 * n; //e\n\n        while (zOffset > baseOffset) {\n            var t0 = e[zOffset];\n            var t1 = e[zOffset + -8];\n            e[zOffset + -8]    = t0 - t1;\n            e[zOffset + -0] = t0 + t1;\n\n            t0 = e[zOffset + -1];\n            t1 = e[zOffset + -9];\n            e[zOffset + -9]    = t0 - t1;\n            e[zOffset + -1] = t0 + t1;\n\n\n            t0 = e[zOffset +  -2];\n            t1 = e[zOffset + -10];\n            var k00    = t0 - t1;\n            e[zOffset +  -2] = t0 + t1;\n\n            t0 = e[zOffset +  -3];\n            t1 = e[zOffset + -11];\n            var k11    = t0 - t1;\n            e[zOffset +  -3] = t0 + t1;\n\n            e[zOffset + -10] = (k00+k11) * A2;\n            e[zOffset + -11] = (k11-k00) * A2;\n\n\n            t0 = e[zOffset +  -4];\n            t1 = e[zOffset + -12];\n            k00     = t1 - t0; // reverse to avoid a unary negation\n            e[zOffset +  -4] = t0 + t1;\n\n            t0 = e[zOffset +  -5];\n            t1 = e[zOffset + -13];\n            k11     = t0 - t1;\n            e[zOffset +  -5] = t0 + t1;\n\n            e[zOffset + -12] = k11;\n            e[zOffset + -13] = k00;\n\n\n            t0 = e[zOffset +  -6];\n            t1 = e[zOffset + -14];\n            k00     = t1 - t0;  // reverse to avoid a unary negation\n            e[zOffset +  -6] = t0 + t1;\n\n            t0 = e[zOffset +  -7];\n            t1 = e[zOffset + -15];\n            k11     = t0 - t1;\n            e[zOffset +  -7] = t0 + t1;\n\n            e[zOffset + -14] = (k00+k11) * A2;\n            e[zOffset + -15] = (k00-k11) * A2;\n\n            iter54(e, zOffset);\n            iter54(e, zOffset - 8);\n            zOffset -= 16;\n        }\n    }\n}\n","package kha.audio2.ogg.vorbis.data;\nimport haxe.ds.Vector;\nimport haxe.io.Bytes;\nimport haxe.io.Input;\nimport kha.audio2.ogg.tools.MathTools;\nimport kha.audio2.ogg.vorbis.data.ReaderError.ReaderErrorType;\nimport kha.audio2.ogg.vorbis.VorbisDecodeState;\n\n/**\n * ...\n * @author shohei909\n */\nclass Codebook\n{\n    static public inline var NO_CODE = 255;\n\n    public var dimensions:Int;\n    public var entries:Int;\n    public var codewordLengths:Vector<Int>; //uint8*\n    public var minimumValue:Float;\n    public var deltaValue:Float;\n    public var valueBits:Int; //uint8\n    public var lookupType:Int; //uint8\n    public var sequenceP:Bool; //uint8\n    public var sparse:Bool; //uint8\n    public var lookupValues:UInt; //uint32\n    public var multiplicands:Vector<Float>; // codetype *\n    public var codewords:Vector<UInt>; //uint32*\n    public var fastHuffman:Vector<Int>; //[FAST_HUFFMAN_TABLE_SIZE];\n    public var sortedCodewords:Array<UInt>; //uint32*\n    public var sortedValues:Vector<Int>;\n    public var sortedEntries:Int;\n\n    public function new () {\n    }\n\n    static public function read(decodeState:VorbisDecodeState):Codebook {\n        var c = new Codebook();\n        if (decodeState.readBits(8) != 0x42 || decodeState.readBits(8) != 0x43 || decodeState.readBits(8) != 0x56) {\n            throw new ReaderError(ReaderErrorType.INVALID_SETUP);\n        }\n\n        var x = decodeState.readBits(8);\n        c.dimensions = (decodeState.readBits(8) << 8) + x;\n\n        var x = decodeState.readBits(8);\n        var y = decodeState.readBits(8);\n        c.entries = (decodeState.readBits(8) << 16) + (y << 8) + x;\n        var ordered = decodeState.readBits(1);\n        c.sparse = (ordered != 0) ? false : (decodeState.readBits(1) != 0);\n\n        var lengths = new Vector(c.entries);\n        if (!c.sparse) {\n            c.codewordLengths = lengths;\n        }\n\n        var total = 0;\n\n        if (ordered != 0) {\n            var currentEntry = 0;\n            var currentLength = decodeState.readBits(5) + 1;\n\n            while (currentEntry < c.entries) {\n                var limit = c.entries - currentEntry;\n                var n = decodeState.readBits(MathTools.ilog(limit));\n                if (currentEntry + n > c.entries) {\n                    throw new ReaderError(ReaderErrorType.INVALID_SETUP, \"codebook entrys\");\n                }\n                for (i in 0...n) {\n                    lengths.set(currentEntry + i, currentLength);\n                }\n                currentEntry += n;\n                currentLength++;\n            }\n        } else {\n            for (j in 0...c.entries) {\n                var present = (c.sparse) ? decodeState.readBits(1) : 1;\n                if (present != 0) {\n                    lengths.set(j, decodeState.readBits(5) + 1);\n                    total++;\n                } else {\n                    lengths.set(j, NO_CODE);\n                }\n            }\n        }\n\n        if (c.sparse && total >= (c.entries >> 2)) {\n            c.codewordLengths = lengths;\n            c.sparse = false;\n        }\n\n        c.sortedEntries = if (c.sparse) {\n            total;\n        } else {\n            var sortedCount = 0;\n            for (j in 0...c.entries) {\n                var l = lengths.get(j);\n                if (l > Setting.FAST_HUFFMAN_LENGTH && l != NO_CODE) {\n                    ++sortedCount;\n                }\n            }\n            sortedCount;\n        }\n\n        var values:Vector<UInt> = null;\n\n        if (!c.sparse) {\n            c.codewords = new Vector<UInt>(c.entries);\n        } else {\n            if (c.sortedEntries != 0) {\n                c.codewordLengths = new Vector(c.sortedEntries);\n                c.codewords = new Vector<UInt>(c.entries);\n                values = new Vector<UInt>(c.entries);\n            }\n\n            var size:Int = c.entries + (32 + 32) * c.sortedEntries;\n        }\n\n        if (!c.computeCodewords(lengths, c.entries, values)) {\n            throw new ReaderError(ReaderErrorType.INVALID_SETUP, \"compute codewords\");\n        }\n\n        if (c.sortedEntries != 0) {\n            // allocate an extra slot for sentinels\n            c.sortedCodewords = [];\n\n            // allocate an extra slot at the front so that sortedValues[-1] is defined\n            // so that we can catch that case without an extra if\n            c.sortedValues = new Vector<Int>(c.sortedEntries);\n            c.computeSortedHuffman(lengths, values);\n        }\n\n        if (c.sparse) {\n            values = null;\n            c.codewords = null;\n            lengths = null;\n        }\n\n        c.computeAcceleratedHuffman();\n\n        c.lookupType = decodeState.readBits(4);\n        if (c.lookupType > 2) {\n            throw new ReaderError(ReaderErrorType.INVALID_SETUP, \"codebook lookup type\");\n        }\n\n        if (c.lookupType > 0) {\n            c.minimumValue = VorbisTools.floatUnpack(decodeState.readBits(32));\n            c.deltaValue = VorbisTools.floatUnpack(decodeState.readBits(32));\n            c.valueBits = decodeState.readBits(4) + 1;\n            c.sequenceP = (decodeState.readBits(1) != 0);\n\n            if (c.lookupType == 1) {\n                c.lookupValues = VorbisTools.lookup1Values(c.entries, c.dimensions);\n            } else {\n                c.lookupValues = c.entries * c.dimensions;\n            }\n            var mults = new Vector<Int>(c.lookupValues);\n            for (j in 0...c.lookupValues) {\n                var q = decodeState.readBits(c.valueBits);\n                if (q == VorbisTools.EOP) {\n                    throw new ReaderError(ReaderErrorType.INVALID_SETUP, \"fail lookup\");\n                }\n                mults[j] = q;\n            }\n\n            {\n                c.multiplicands = new Vector(c.lookupValues);\n\n                //STB_VORBIS_CODEBOOK_FLOATS = true\n                for (j in 0...c.lookupValues) {\n                    c.multiplicands[j] = mults[j] * c.deltaValue + c.minimumValue;\n                }\n            }\n\n            //STB_VORBIS_CODEBOOK_FLOATS = true\n            if (c.lookupType == 2 && c.sequenceP) {\n                for (j in 1...c.lookupValues) {\n                    c.multiplicands[j] = c.multiplicands[j - 1];\n                }\n                c.sequenceP = false;\n            }\n        }\n\n        return c;\n    }\n\n    inline function addEntry(huffCode:UInt, symbol:Int, count:Int, len:Int, values:Vector<UInt>)\n    {\n        if (!sparse) {\n            codewords[symbol] = huffCode;\n        } else {\n            codewords[count] = huffCode;\n            codewordLengths.set(count, len);\n            values[count] = symbol;\n        }\n    }\n\n    inline function includeInSort(len:Int)\n    {\n        return if (sparse) {\n            VorbisTools.assert(len != NO_CODE);\n            true;\n        } else if (len == NO_CODE) {\n            false;\n        } else if (len > Setting.FAST_HUFFMAN_LENGTH) {\n            true;\n        } else {\n            false;\n        }\n    }\n\n\n    function computeCodewords(len:Vector<Int>, n:Int, values:Vector<UInt>)\n    {\n        var available = new Vector<UInt>(32);\n        for (x in 0...32) available[x] = 0;\n\n        // find the first entry\n        var k = 0;\n        while (k < n) {\n            if (len.get(k) < NO_CODE) {\n                break;\n            }\n            k++;\n        }\n\n        if (k == n) {\n            VorbisTools.assert(sortedEntries == 0);\n            return true;\n        }\n\n        var m = 0;\n\n        // add to the list\n        addEntry(0, k, m++, len.get(k), values);\n\n        // add all available leaves\n        var i = 0;\n\n        while (++i <= len.get(k)) {\n            available[i] = (1:UInt) << ((32 - i):UInt);\n        }\n\n        // note that the above code treats the first case specially,\n        // but it's really the same as the following code, so they\n        // could probably be combined (except the initial code is 0,\n        // and I use 0 in available[] to mean 'empty')\n        i = k;\n        while (++i < n) {\n            var z = len.get(i);\n            if (z == NO_CODE) continue;\n\n            // find lowest available leaf (should always be earliest,\n            // which is what the specification calls for)\n            // note that this property, and the fact we can never have\n            // more than one free leaf at a given level, isn't totally\n            // trivial to prove, but it seems true and the assert never\n            // fires, so!\n            while (z > 0 && available[z] == 0) --z;\n            if (z == 0) {\n                return false;\n            }\n\n            var res:UInt = available[z];\n            available[z] = 0;\n            addEntry(VorbisTools.bitReverse(res), i, m++, len.get(i), values);\n\n            // propogate availability up the tree\n            if (z != len.get(i)) {\n                var y = len.get(i);\n                while (y > z) {\n                    VorbisTools.assert(available[y] == 0);\n                    available[y] = res + (1 << (32 - y));\n                    y--;\n                }\n            }\n        }\n\n        return true;\n    }\n\n\n    function computeSortedHuffman(lengths:Vector<Int>, values:Vector<UInt>)\n    {\n        // build a list of all the entries\n        // OPTIMIZATION: don't include the short ones, since they'll be caught by FAST_HUFFMAN.\n        // this is kind of a frivolous optimization--I don't see any performance improvement,\n        // but it's like 4 extra lines of code, so.\n        if (!sparse) {\n            var k = 0;\n            for (i in 0...entries) {\n                if (includeInSort(lengths.get(i))) {\n                    sortedCodewords[k++] = VorbisTools.bitReverse(codewords[i]);\n                }\n            }\n            VorbisTools.assert(k == sortedEntries);\n        } else {\n            for (i in 0...sortedEntries) {\n                sortedCodewords[i] = VorbisTools.bitReverse(codewords[i]);\n            }\n        }\n\n        sortedCodewords[sortedEntries] = 0xffffffff;\n        sortedCodewords.sort(VorbisTools.uintAsc);\n\n        var len = sparse ? sortedEntries : entries;\n        // now we need to indicate how they correspond; we could either\n        //    #1: sort a different data structure that says who they correspond to\n        //    #2: for each sorted entry, search the original list to find who corresponds\n        //    #3: for each original entry, find the sorted entry\n        // #1 requires extra storage, #2 is slow, #3 can use binary search!\n        for (i in 0...len) {\n            var huffLen = sparse ? lengths.get(values[i]) : lengths.get(i);\n            if (includeInSort(huffLen)) {\n                var code = VorbisTools.bitReverse(codewords[i]);\n                var x = 0;\n                var n = sortedEntries;\n                while (n > 1) {\n                    // invariant: sc[x] <= code < sc[x+n]\n                    var m = x + (n >> 1);\n                    if (sortedCodewords[m] <= code) {\n                        x = m;\n                        n -= (n>>1);\n                    } else {\n                        n >>= 1;\n                    }\n                }\n\n                //VorbisTools.assert(sortedCodewords[x] == code);\n                if (sparse) {\n                    sortedValues[x] = values[i];\n                    codewordLengths.set(x, huffLen);\n                } else {\n                    sortedValues[x] = i;\n                }\n            }\n        }\n    }\n\n    function computeAcceleratedHuffman()\n    {\n        fastHuffman = new Vector(Setting.FAST_HUFFMAN_TABLE_SIZE);\n        fastHuffman[0] = -1;\n        for (i in 0...(Setting.FAST_HUFFMAN_TABLE_SIZE)) {\n            fastHuffman[i] =  -1;\n        }\n\n        var len = (sparse) ? sortedEntries : entries;\n\n        //STB_VORBIS_FAST_HUFFMAN_SHORT\n        //if (len > 32767) len = 32767; // largest possible value we can encode!\n\n        for (i in 0...len) {\n            if (codewordLengths[i] <= Setting.FAST_HUFFMAN_LENGTH) {\n                var z:Int = (sparse) ? VorbisTools.bitReverse(sortedCodewords[i]) : codewords[i];\n                // set table entries for all bit combinations in the higher bits\n                while (z < Setting.FAST_HUFFMAN_TABLE_SIZE) {\n                    fastHuffman[z] = i;\n                    z += 1 << codewordLengths[i];\n                }\n            }\n        }\n\n    }\n\n    function codebookDecode(decodeState:VorbisDecodeState, output:Vector<Float>, offset:Int, len:Int)\n    {\n        var z = decodeStart(decodeState);\n        var lookupValues = this.lookupValues;\n        var sequenceP = this.sequenceP;\n        var multiplicands = this.multiplicands;\n        var minimumValue = this.minimumValue;\n\n        if (z < 0) {\n            return false;\n        }\n        if (len > dimensions) {\n            len = dimensions;\n        }\n\n        // STB_VORBIS_DIVIDES_IN_CODEBOOK = true\n        if (lookupType == 1) {\n            var div = 1;\n            var last = 0.0;\n            for (i in 0...len) {\n                var off = Std.int(z / div) % lookupValues;\n                var val = multiplicands[off] + last;\n                output[offset + i] += val;\n                if (sequenceP) {\n                    last = val + minimumValue;\n                }\n                div *= lookupValues;\n            }\n            return true;\n        }\n\n        z *= dimensions;\n        if (sequenceP) {\n            var last = 0.0;\n            for (i in 0...len) {\n                var val = multiplicands[z + i] + last;\n                output[offset + i] += val;\n                last = val + minimumValue;\n            }\n        } else {\n            var last = 0.0;\n            for (i in 0...len) {\n                output[offset + i] += multiplicands[z + i] + last;\n            }\n        }\n        return true;\n    }\n\n    function codebookDecodeStep(decodeState:VorbisDecodeState, output:Vector<Float>, offset:Int, len:Int, step:Int)\n    {\n        var z = decodeStart(decodeState);\n        var last = 0.0;\n        if (z < 0) {\n            return false;\n        }\n        if (len > dimensions) {\n            len = dimensions;\n        }\n\n        var lookupValues = this.lookupValues;\n        var sequenceP = this.sequenceP;\n        var multiplicands = this.multiplicands;\n\n        // STB_VORBIS_DIVIDES_IN_CODEBOOK = true\n\n        if (lookupType == 1) {\n            var div = 1;\n            for (i in 0...len) {\n                var off = Std.int(z / div) % lookupValues;\n                var val = multiplicands[off] + last;\n                output[offset + i * step] += val;\n                if (sequenceP) {\n                    last = val;\n                }\n                div *= lookupValues;\n            }\n            return true;\n        }\n\n        z *= dimensions;\n        for (i in 0...len) {\n            var val = multiplicands[z + i] + last;\n            output[offset + i * step] += val;\n            if (sequenceP) {\n                last = val;\n            }\n        }\n\n        return true;\n    }\n\n    inline function decodeStart(decodeState:VorbisDecodeState)\n    {\n        return decodeState.decode(this);\n\n        //var z = -1;\n        //// type 0 is only legal in a scalar context\n        //if (lookupType == 0) {\n        //    throw new ReaderError(INVALID_STREAM);\n        //} else {\n        //    z = decodeState.decode(this);\n        //    //if (sparse) VorbisTools.assert(z < sortedEntries);\n        //    if (z < 0) {  // check for VorbisTools.EOP\n        //        if (decodeState.isLastByte()) {\n        //            return z;\n        //        } else {\n        //            throw new ReaderError(INVALID_STREAM);\n        //        }\n        //    } else {\n        //        return z;\n        //    }\n        //}\n    }\n\n    static var delay = 0;\n\n    public function decodeDeinterleaveRepeat(decodeState:VorbisDecodeState, residueBuffers:Vector<Vector<Float>>, ch:Int, cInter:Int, pInter:Int, len:Int, totalDecode:Int)\n    {\n        var effective = dimensions;\n\n        // type 0 is only legal in a scalar context\n        if (lookupType == 0) {\n            throw new ReaderError(INVALID_STREAM);\n        }\n\n        var multiplicands = this.multiplicands;\n        var sequenceP = this.sequenceP;\n        var lookupValues = this.lookupValues;\n\n        while (totalDecode > 0) {\n            var last = 0.0;\n            var z = decodeState.decode(this);\n\n            if (z < 0) {\n                if (decodeState.isLastByte()) {\n                    return null;\n                }\n                throw new ReaderError(INVALID_STREAM);\n            }\n\n            // if this will take us off the end of the buffers, stop short!\n            // we check by computing the length of the virtual interleaved\n            // buffer (len*ch), our current offset within it (pInter*ch)+(cInter),\n            // and the length we'll be using (effective)\n            if (cInter + pInter * ch + effective > len * ch) {\n                effective = len * ch - (pInter * ch - cInter);\n            }\n\n            if (lookupType == 1) {\n                var div = 1;\n                if (sequenceP) {\n                    for (i in 0...effective) {\n                        var off = Std.int(z / div) % lookupValues;\n                        var val = multiplicands[off] + last;\n                        residueBuffers[cInter][pInter] += val;\n                        if (++cInter == ch) {\n                            cInter = 0;\n                            ++pInter;\n                        }\n                        last = val;\n                        div *= lookupValues;\n                    }\n                } else {\n                    for (i in 0...effective) {\n                        var off = Std.int(z / div) % lookupValues;\n                        var val = multiplicands[off] + last;\n                        residueBuffers[cInter][pInter] += val;\n                        if (++cInter == ch) {\n                            cInter = 0;\n                            ++pInter;\n                        }\n                        div *= lookupValues;\n                    }\n                }\n            } else {\n                z *= dimensions;\n                if (sequenceP) {\n                    for (i in 0...effective) {\n                        var val = multiplicands[z + i] + last;\n                        residueBuffers[cInter][pInter] += val;\n                        if (++cInter == ch) {\n                            cInter = 0;\n                            ++pInter;\n                        }\n                        last = val;\n                    }\n                } else {\n                    for (i in 0...effective) {\n                        var val = multiplicands[z + i] + last;\n                        residueBuffers[cInter][pInter] += val;\n                        if (++cInter == ch) {\n                            cInter = 0;\n                            ++pInter;\n                        }\n                    }\n                }\n            }\n\n            totalDecode -= effective;\n        }\n\n        return {\n            cInter : cInter,\n            pInter : pInter\n        }\n    }\n\n    public function residueDecode(decodeState:VorbisDecodeState, target:Vector<Float>, offset:Int, n:Int, rtype:Int)\n    {\n        if (rtype == 0) {\n            var step = Std.int(n / dimensions);\n            for (k in 0...step) {\n                if (!codebookDecodeStep(decodeState, target, offset + k, n-offset-k, step)) {\n                    return false;\n                }\n            }\n        } else {\n            var k = 0;\n            while(k < n) {\n                if (!codebookDecode(decodeState, target, offset, n-k)) {\n                    return false;\n                }\n                k += dimensions;\n                offset += dimensions;\n            }\n        }\n        return true;\n    }\n}\n","package kha.audio2.ogg.vorbis.data;\n\n/**\n * ...\n * @author shohei909\n */\nclass Comment {\n    public var data(default, null):Map<String, Array<String>>;\n\n    public var title(get, never):String;\n    function get_title() {\n        return getString(\"title\");\n    }\n\n    public var loopStart(get, never):Null<Int>;\n    function get_loopStart() {\n        return Std.parseInt(getString(\"loopstart\"));\n    }\n\n    public var loopLength(get, never):Null<Int>;\n    function get_loopLength() {\n        return Std.parseInt(getString(\"looplength\"));\n    }\n\n    public var version(get, never):String;\n    function get_version() {\n        return getString(\"version\");\n    }\n\n    public var album(get, never):String;\n    function get_album() {\n        return getString(\"album\");\n    }\n\n    public var organization(get, never):String;\n    function get_organization() {\n        return getString(\"organization\");\n    }\n\n    public var tracknumber(get, never):String;\n    function get_tracknumber() {\n        return getString(\"tracknumber\");\n    }\n\n    public var performer(get, never):String;\n    function get_performer() {\n        return getString(\"performer\");\n    }\n\n    public var copyright(get, never):String;\n    function get_copyright() {\n        return getString(\"copyright\");\n    }\n\n    public var license(get, never):String;\n    function get_license() {\n        return getString(\"license\");\n    }\n\n    public var artist(get, never):String;\n    function get_artist() {\n        return getString(\"artist\");\n    }\n\n    public var description(get, never):String;\n    function get_description() {\n        return getString(\"description\");\n    }\n\n    public var genre(get, never):String;\n    function get_genre() {\n        return getString(\"genre\");\n    }\n\n    public var date(get, never):String;\n    function get_date() {\n        return getString(\"date\");\n    }\n\n    public var location(get, never):String;\n    function get_location() {\n        return getString(\"location\");\n    }\n\n    public var contact(get, never):String;\n    function get_contact() {\n        return getString(\"contact\");\n    }\n\n    public var isrc(get, never):String;\n    function get_isrc() {\n        return getString(\"isrc\");\n    }\n\n    public var artists(get, never):Array<String>;\n    function get_artists() {\n        return getArray(\"artist\");\n    }\n\n    public function new() {\n        data = new Map();\n    }\n\n    public function add(key:String, value:String) {\n        key = key.toLowerCase();\n        if (data.exists(key)) {\n            data[key].push(value);\n        } else {\n            data[key] = [value];\n        }\n    }\n\n    public function getString(key:String) {\n        key = key.toLowerCase();\n        return if (data.exists(key)) {\n            data[key][0];\n        } else {\n            null;\n        }\n    }\n\n    public function getArray(key:String) {\n        key = key.toLowerCase();\n        return if (data.exists(key)) {\n            data[key];\n        } else {\n            null;\n        }\n    }\n}\n","package kha.audio2.ogg.vorbis.data;\nimport haxe.ds.Vector;\nimport haxe.io.Input;\nimport kha.audio2.ogg.vorbis.data.ReaderError;\nimport kha.audio2.ogg.vorbis.VorbisDecodeState;\n\n/**\n * ...\n * @author shohei909\n */\nclass Floor\n{\n    public var floor0:Floor0;\n    public var floor1:Floor1;\n    public var type:Int;\n\n    function new()\n    {\n\n    }\n\n    public static function read(decodeState:VorbisDecodeState, codebooks:Vector<Codebook>):Floor\n    {\n        var floor = new Floor();\n\n        floor.type = decodeState.readBits(16);\n        if (floor.type > 1) {\n            throw new ReaderError(INVALID_SETUP);\n        }\n        if (floor.type == 0) {\n            var g = floor.floor0 = new Floor0();\n            g.order = decodeState.readBits(8);\n            g.rate = decodeState.readBits(16);\n            g.barkMapSize = decodeState.readBits(16);\n            g.amplitudeBits = decodeState.readBits(6);\n            g.amplitudeOffset = decodeState.readBits(8);\n            g.numberOfBooks = decodeState.readBits(4) + 1;\n            for (j in 0...g.numberOfBooks) {\n                g.bookList[j] = decodeState.readBits(8);\n            }\n            throw new ReaderError(FEATURE_NOT_SUPPORTED);\n        } else {\n            var p = new Array<IntPoint>();\n            var g = floor.floor1 = new Floor1();\n            var maxClass = -1;\n            g.partitions = decodeState.readBits(5);\n            g.partitionClassList = new Vector(g.partitions);\n            for (j in 0...g.partitions) {\n                g.partitionClassList[j] = decodeState.readBits(4);\n                if (g.partitionClassList[j] > maxClass) {\n                    maxClass = g.partitionClassList[j];\n                }\n            }\n            g.classDimensions = new Vector(maxClass + 1);\n            g.classMasterbooks = new Vector(maxClass + 1);\n            g.classSubclasses = new Vector(maxClass + 1);\n            g.subclassBooks = new Vector(maxClass + 1);\n            for (j in 0...(maxClass + 1)) {\n                g.classDimensions[j] = decodeState.readBits(3) + 1;\n                g.classSubclasses[j] = decodeState.readBits(2);\n                if (g.classSubclasses[j] != 0) {\n                    g.classMasterbooks[j] = decodeState.readBits(8);\n                    if (g.classMasterbooks[j] >= codebooks.length) {\n                        throw new ReaderError(INVALID_SETUP);\n                    }\n                }\n\n                var kl = (1 << g.classSubclasses[j]);\n                g.subclassBooks[j] = new Vector(kl);\n                for (k in 0...kl) {\n                    g.subclassBooks[j][k] = decodeState.readBits(8)-1;\n                    if (g.subclassBooks[j][k] >= codebooks.length) {\n                        throw new ReaderError(INVALID_SETUP);\n                    }\n                }\n            }\n\n            g.floor1Multiplier = decodeState.readBits(2) + 1;\n            g.rangebits = decodeState.readBits(4);\n            g.xlist = new Vector(31*8+2);\n            g.xlist[0] = 0;\n            g.xlist[1] = 1 << g.rangebits;\n            g.values = 2;\n            for (j in 0...g.partitions) {\n                var c = g.partitionClassList[j];\n                for (k in 0...g.classDimensions[c]) {\n                    g.xlist[g.values] = decodeState.readBits(g.rangebits);\n                    g.values++;\n                }\n            }\n\n            // precompute the sorting\n            for (j in 0...g.values) {\n                p.push(new IntPoint());\n                p[j].x = g.xlist[j];\n                p[j].y = j;\n            }\n\n            p.sort(VorbisTools.pointCompare);\n\n            g.sortedOrder = new Vector(g.values);\n            for (j in 0...g.values) {\n                g.sortedOrder[j] = p[j].y;\n            }\n\n            g.neighbors = new Vector(g.values);\n            // precompute the neighbors\n            for (j in 2...g.values) {\n                var ne = VorbisTools.neighbors(g.xlist, j);\n                g.neighbors[j] = new Vector(g.values);\n                g.neighbors[j][0] = ne.low;\n                g.neighbors[j][1] = ne.high;\n            }\n        }\n\n        return floor;\n    }\n}\n\nclass Floor0\n{\n    public var order:Int; //uint8\n    public var rate:Int; //uint16\n    public var barkMapSize:Int; //uint16\n    public var amplitudeBits:Int; //uint8\n    public var amplitudeOffset:Int; //uint8\n    public var numberOfBooks:Int; //uint8\n    public var bookList:Vector<UInt>; //uint8 [16] varies\n\n    public function new() {\n    }\n}\n\nclass Floor1\n{\n    public var partitions:Int; // uint8\n    public var partitionClassList:Vector<Int>; // uint8 varies\n    public var classDimensions:Vector<Int>; // uint8 [16] varies\n    public var classSubclasses:Vector<Int>; // uint8 [16] varies\n    public var classMasterbooks:Vector<Int>; // uint8 [16] varies\n    public var subclassBooks:Vector<Vector<Int>>; //int 16 [16][8] varies\n    public var xlist:Vector<Int>; //uint16 [31*8+2]  varies\n    public var sortedOrder:Vector<Int>; //uint8 [31 * 8 + 2];\n    public var neighbors:Vector<Vector<Int>>; //uint8[31 * 8 + 2][2];\n    public var floor1Multiplier:Int;\n    public var rangebits:Int;\n    public var values:Int;\n\n    public function new() {\n    }\n}\n","package kha.audio2.ogg.vorbis.data;\nimport haxe.ds.Vector;\nimport haxe.io.BytesInput;\nimport haxe.io.BytesOutput;\nimport haxe.io.Input;\nimport haxe.io.Output;\nimport kha.audio2.ogg.vorbis.data.Comment;\nimport kha.audio2.ogg.vorbis.data.Page.PageFlag;\nimport kha.audio2.ogg.vorbis.data.ReaderError.ReaderErrorType;\nimport kha.audio2.ogg.vorbis.VorbisDecodeState;\n\n/**\n * ...\n * @author shohei909\n */\nclass Header {\n\n    static public inline var PACKET_ID = 1;\n    static public inline var PACKET_COMMENT = 3;\n    static public inline var PACKET_SETUP = 5;\n\n    public var maximumBitRate(default, null):UInt;\n    public var nominalBitRate(default, null):UInt;\n    public var minimumBitRate(default, null):UInt;\n    public var sampleRate(default, null):UInt;\n    public var channel(default, null):Int;\n    public var blocksize0(default, null):Int;\n    public var blocksize1(default, null):Int;\n    public var codebooks(default, null):Vector<Codebook>;\n    public var floorConfig(default, null):Vector<Floor>;\n    public var residueConfig(default, null):Vector<Residue>;\n    public var mapping(default, null):Vector<Mapping>;\n    public var modes(default, null):Vector<Mode>; // [64] varies\n    public var comment(default, null):Comment;\n    public var vendor(default, null):String;\n\n    function new() {\n\n    }\n\n    static public function read(decodeState:VorbisDecodeState):Header {\n        var page = decodeState.page;\n        page.start(decodeState);\n\n        if ((page.flag & PageFlag.FIRST_PAGE) == 0) {\n            throw new ReaderError(INVALID_FIRST_PAGE, \"not firstPage\");\n        }\n        if ((page.flag & PageFlag.LAST_PAGE) != 0) {\n            throw new ReaderError(INVALID_FIRST_PAGE, \"lastPage\");\n        }\n        if ((page.flag & PageFlag.CONTINUED_PACKET) != 0) {\n            throw new ReaderError(INVALID_FIRST_PAGE, \"continuedPacket\");\n        }\n\n        decodeState.firstPageValidate();\n        if (decodeState.readByte() != PACKET_ID) {\n            throw new ReaderError(INVALID_FIRST_PAGE, \"decodeState head\");\n        }\n\n        // vorbis header\n        decodeState.vorbisValidate();\n\n        // vorbisVersion\n        var version = decodeState.readInt32();\n        if (version != 0) {\n            throw new ReaderError(INVALID_FIRST_PAGE, \"vorbis version : \" + version);\n        }\n\n        var header = new Header();\n\n        header.channel = decodeState.readByte();\n        if (header.channel == 0) {\n            throw new ReaderError(INVALID_FIRST_PAGE, \"no channel\");\n        } else if (header.channel > Setting.MAX_CHANNELS) {\n            throw new ReaderError(TOO_MANY_CHANNELS, \"too many channels\");\n        }\n\n        header.sampleRate = decodeState.readInt32();\n        if (header.sampleRate == 0) {\n            throw new ReaderError(INVALID_FIRST_PAGE, \"no sampling rate\");\n        }\n\n        header.maximumBitRate = decodeState.readInt32();\n        header.nominalBitRate = decodeState.readInt32();\n        header.minimumBitRate = decodeState.readInt32();\n\n        var x = decodeState.readByte();\n        var log0 = x & 15;\n        var log1 = x >> 4;\n        header.blocksize0 = 1 << log0;\n        header.blocksize1 = 1 << log1;\n        if (log0 < 6 || log0 > 13) {\n            throw new ReaderError(INVALID_SETUP);\n        }\n        if (log1 < 6 || log1 > 13) {\n            throw new ReaderError(INVALID_SETUP);\n        }\n        if (log0 > log1) {\n            throw new ReaderError(INVALID_SETUP);\n        }\n\n        // framingFlag\n        var x = decodeState.readByte();\n        if (x & 1 == 0) {\n            throw new ReaderError(INVALID_FIRST_PAGE);\n        }\n\n        // comment fields\n        decodeState.page.start(decodeState);\n        decodeState.startPacket();\n\n        var len = 0;\n        var output = new BytesOutput();\n        while((len = decodeState.next()) != 0) {\n            output.write(decodeState.readBytes(len));\n            decodeState.bytesInSeg = 0;\n        }\n\n        {\n            var packetInput = new BytesInput(output.getBytes());\n            packetInput.readByte();\n            packetInput.read(6);\n\n            var vendorLength:UInt = packetInput.readInt32();\n            header.vendor = packetInput.readString(vendorLength);\n            header.comment = new Comment();\n\n            var commentCount = packetInput.readInt32();\n\n            for (i in 0...commentCount) {\n                var n = packetInput.readInt32();\n                var str = packetInput.readString(n);\n                var splitter = str.indexOf(\"=\");\n                if (splitter != -1) {\n                    header.comment.add(str.substring(0, splitter), str.substring(splitter + 1));\n                }\n            }\n\n            var x = packetInput.readByte();\n            if (x & 1 == 0) {\n                throw new ReaderError(ReaderErrorType.INVALID_SETUP);\n            }\n        }\n\n        // third packet!\n        decodeState.startPacket();\n\n        if (decodeState.readPacket() != PACKET_SETUP) {\n            throw new ReaderError(ReaderErrorType.INVALID_SETUP, \"setup packet\");\n        }\n\n        decodeState.vorbisValidate();\n\n        // codebooks\n        var codebookCount = decodeState.readBits(8) + 1;\n        header.codebooks = new Vector(codebookCount);\n        for (i in 0...codebookCount) {\n            header.codebooks[i] = Codebook.read(decodeState);\n        }\n\n        // time domain transfers (notused)\n        x = decodeState.readBits(6) + 1;\n        for (i in 0...x) {\n            if (decodeState.readBits(16) != 0) {\n                throw new ReaderError(INVALID_SETUP);\n            }\n        }\n\n        // Floors\n        var floorCount = decodeState.readBits(6) + 1;\n        header.floorConfig = new Vector(floorCount);\n        for (i in 0...floorCount) {\n            header.floorConfig[i] = Floor.read(decodeState, header.codebooks);\n        }\n\n        // Residue\n        var residueCount = decodeState.readBits(6) + 1;\n        header.residueConfig = new Vector(residueCount);\n        for (i in 0...residueCount) {\n            header.residueConfig[i] = Residue.read(decodeState, header.codebooks);\n        }\n\n        //Mapping\n        var mappingCount = decodeState.readBits(6) + 1;\n        header.mapping = new Vector(mappingCount);\n        for (i in 0...mappingCount) {\n            var map = Mapping.read(decodeState, header.channel);\n            header.mapping[i] = map;\n            for (j in 0...map.submaps) {\n                if (map.submapFloor[j] >= header.floorConfig.length) {\n                    throw new ReaderError(INVALID_SETUP);\n                }\n                if (map.submapResidue[j] >= header.residueConfig.length) {\n                    throw new ReaderError(INVALID_SETUP);\n                }\n            }\n        }\n\n        var modeCount = decodeState.readBits(6) + 1;\n        header.modes = new Vector(modeCount);\n        for (i in 0...modeCount) {\n            var mode = Mode.read(decodeState);\n            header.modes[i] = mode;\n            if (mode.mapping >= header.mapping.length) {\n                throw new ReaderError(INVALID_SETUP);\n            }\n        }\n\n        decodeState.flushPacket();\n\n        return header;\n    }\n}\n","package kha.audio2.ogg.vorbis.data;\n\n/**\n * ...\n * @author shohei909\n */\nclass IntPoint\n{\n    public var x:Int;\n    public var y:Int;\n\n    public function new() {\n\n    }\n}\n","package kha.audio2.ogg.vorbis.data;\nimport haxe.ds.Vector;\nimport haxe.io.Input;\nimport kha.audio2.ogg.tools.MathTools;\nimport kha.audio2.ogg.vorbis.VorbisDecodeState;\n\nclass Mapping\n{\n    public var couplingSteps:Int; // uint16 \n    public var chan:Vector<MappingChannel>;\n    public var submaps:Int;            // uint8 \n    public var submapFloor:Vector<Int>;   // uint8 varies\n    public var submapResidue:Vector<Int>; // uint8 varies\n    public function new() {\n    }\n    \n    public static function read(decodeState:VorbisDecodeState, channels:Int):Mapping\n    {\n        var m = new Mapping();\n        var mappingType = decodeState.readBits(16);\n        if (mappingType != 0) {\n            throw new ReaderError(INVALID_SETUP, \"mapping type \" + mappingType);\n        }\n        \n        m.chan = new Vector(channels);\n        for (j in 0...channels) {\n            m.chan[j] = new MappingChannel();\n        }\n        \n        if (decodeState.readBits(1) != 0) {\n            m.submaps = decodeState.readBits(4)+1;\n        } else {\n            m.submaps = 1;\n        }\n        \n        //if (m.submaps > maxSubmaps) {\n        //    maxSubmaps = m.submaps;\n        //}\n        \n        if (decodeState.readBits(1) != 0) {\n            m.couplingSteps = decodeState.readBits(8)+1;\n            for (k in 0...m.couplingSteps) {\n                m.chan[k].magnitude = decodeState.readBits(MathTools.ilog(channels-1));\n                m.chan[k].angle = decodeState.readBits(MathTools.ilog(channels-1));\n                if (m.chan[k].magnitude >= channels) {\n                    throw new ReaderError(INVALID_SETUP);\n                }\n                if (m.chan[k].angle >= channels) {\n                    throw new ReaderError(INVALID_SETUP);\n                }\n                if (m.chan[k].magnitude == m.chan[k].angle) {\n                    throw new ReaderError(INVALID_SETUP);\n                }\n            }\n        } else {\n            m.couplingSteps = 0;\n        }\n\n        // reserved field\n        if (decodeState.readBits(2) != 0) {\n            throw new ReaderError(INVALID_SETUP);\n        }\n        if (m.submaps > 1) {\n            for (j in 0...channels) {\n                m.chan[j].mux = decodeState.readBits(4);\n                if (m.chan[j].mux >= m.submaps) {\n                    throw new ReaderError(INVALID_SETUP);\n                }\n            }\n        } else {\n            for (j in 0...channels) {\n                m.chan[j].mux = 0;\n            }\n        }\n        \n        m.submapFloor = new Vector(m.submaps);\n        m.submapResidue = new Vector(m.submaps);\n        \n        for (j in 0...m.submaps) {\n            decodeState.readBits(8); // discard\n            m.submapFloor[j] = decodeState.readBits(8);\n            m.submapResidue[j] = decodeState.readBits(8);\n        }\n        \n        return m;\n    }\n    \n    public function doFloor(floors:Vector<Floor>, i:Int, n:Int, target:Vector<Float>, finalY:Array<Int>, step2Flag:Vector<Bool>) \n    {\n        var n2 = n >> 1;\n        var s = chan[i].mux, floor;\n        var floor = floors[submapFloor[s]];\n        if (floor.type == 0) {\n            throw new ReaderError(INVALID_STREAM);\n        } else {\n            var g = floor.floor1;\n            var lx = 0, ly = finalY[0] * g.floor1Multiplier;\n            for (q in 1...g.values) {\n                var j = g.sortedOrder[q];\n                if (finalY[j] >= 0)\n                {\n                    var hy = finalY[j] * g.floor1Multiplier;\n                    var hx = g.xlist[j];\n                    VorbisTools.drawLine(target, lx, ly, hx, hy, n2);\n                    lx = hx;\n                    ly = hy;\n                }\n            }\n            if (lx < n2) {\n                // optimization of: drawLine(target, lx,ly, n,ly, n2);\n                for (j in lx...n2) {\n                    target[j] *= VorbisTools.INVERSE_DB_TABLE[ly];\n                }\n            }\n        }\n    }\n}\n\nclass MappingChannel\n{\n    public var magnitude:Int; // uint8 \n    public var angle:Int;     // uint8 \n    public var mux:Int;       // uint8 \n    \n    public function new() {\n    }\n}\n","package kha.audio2.ogg.vorbis.data;\nimport haxe.io.Input;\nimport kha.audio2.ogg.vorbis.VorbisDecodeState;\n\nclass Mode\n{\n    public var blockflag:Bool; // uint8 \n    public var mapping:Int;   // uint8 \n    public var windowtype:Int;    // uint16 \n    public var transformtype:Int; // uint16 \n    \n    public function new() {\n    }\n    \n    public static function read(decodeState:VorbisDecodeState) {\n        var m = new Mode();\n        m.blockflag = (decodeState.readBits(1) != 0);\n        m.windowtype = decodeState.readBits(16);\n        m.transformtype = decodeState.readBits(16);\n        m.mapping = decodeState.readBits(8);\n        if (m.windowtype != 0) {\n            throw new ReaderError(INVALID_SETUP);\n        }\n        if (m.transformtype != 0) {\n            throw new ReaderError(INVALID_SETUP);\n        }\n        return m;\n    }\n}","package kha.audio2.ogg.vorbis.data;\nimport haxe.io.Bytes;\nimport haxe.io.Input;\nimport kha.audio2.ogg.vorbis.data.ReaderError.ReaderErrorType;\nimport kha.audio2.ogg.vorbis.VorbisDecodeState;\n\n/**\n * ...\n * @author shohei909\n */\nclass Page {\n    public var flag(default, null):Int;\n\n    public function new () {\n\n    }\n\n    public function clone() {\n        var page = new Page();\n        page.flag = flag;\n        return page;\n    }\n\n    // startPage\n    public function start(decodeState:VorbisDecodeState) {\n        decodeState.capturePattern();\n        startWithoutCapturePattern(decodeState);\n    }\n\n    // startPageNoCapturePattern\n    public function startWithoutCapturePattern(decodeState:VorbisDecodeState) {\n        var version = decodeState.readByte();\n        if (version != 0) {\n            throw new ReaderError(ReaderErrorType.INVALID_STREAM_STRUCTURE_VERSION, \"\" + version);\n        }\n\n        this.flag = decodeState.readByte();\n        var loc0 = decodeState.readInt32();\n        var loc1 = decodeState.readInt32();\n\n        // input serial number -- vorbis doesn't interleave, so discard\n        decodeState.readInt32();\n        //if (this.serial != get32(f)) throw new ReaderError(ReaderErrorType.incorrectStreamSerialNumber);\n\n        // page sequence number\n        decodeState.readInt32();\n\n        // CRC32\n        decodeState.readInt32();\n\n        // pageSegments\n        decodeState.setup(loc0, loc1);\n    }\n}\n\nclass PageFlag {\n    static public inline var CONTINUED_PACKET = 1;\n    static public inline var FIRST_PAGE = 2;\n    static public inline var LAST_PAGE = 4;\n}\n","package kha.audio2.ogg.vorbis.data;\n\n/**\n * ...\n * @author shohei909\n */\n\nclass ProbedPage\n{\n    public var pageStart:Int;\n    public var pageEnd:Int;\n    public var afterPreviousPageStart:Int;\n    public var firstDecodedSample:Null<Int>;\n    public var lastDecodedSample:Null<Int>;\n\n    public function new() {\n    }\n}\n","package kha.audio2.ogg.vorbis.data;\nimport haxe.PosInfos;\n\n/**\n * ...\n * @author shohei909\n */\nclass ReaderError\n{\n    public var type(default, null):ReaderErrorType;\n    public var message(default, null):String;\n    public var posInfos(default, null):PosInfos;\n\n    public function new(type:ReaderErrorType, ?message:String = \"\", ?posInfos:PosInfos) {\n        this.type = type;\n        this.message = message;\n        this.posInfos = posInfos;\n    }\n}\n\nenum ReaderErrorType\n{\n   NEED_MORE_DATA;             // not a real error\n\n   INVALID_API_MIXING;           // can't mix API modes\n   OUTOFMEM;                     // not enough memory\n   FEATURE_NOT_SUPPORTED;        // uses floor 0\n   TOO_MANY_CHANNELS;            // STB_VORBIS_MAX_CHANNELS is too small\n   FILE_OPEN_FAILURE;            // fopen() failed\n   SEEK_WITHOUT_LENGTH;          // can't seek in unknown-length file\n\n   UNEXPECTED_EOF;            // file is truncated?\n   SEEK_INVALID;                 // seek past EOF\n\n   // decoding errors (corrupt/invalid input) -- you probably\n   // don't care about the exact details of these\n\n   // vorbis errors:\n   INVALID_SETUP;\n   INVALID_STREAM;\n\n   // ogg errors:\n   MISSING_CAPTURE_PATTERN;\n   INVALID_STREAM_STRUCTURE_VERSION;\n   CONTINUED_PACKET_FLAG_INVALID;\n   INCORRECT_STREAM_SERIAL_NUMBER;\n   INVALID_FIRST_PAGE;\n   BAD_PACKET_TYPE;\n   CANT_FIND_LAST_PAGE;\n   SEEK_FAILED;\n\n   OTHER;\n}\n","package kha.audio2.ogg.vorbis.data;\nimport haxe.ds.Vector;\nimport haxe.io.Input;\nimport kha.audio2.ogg.vorbis.VorbisDecodeState;\n\n/**\n * ...\n * @author shohei909\n */\nclass Residue\n{\n    public var begin(default, null):UInt; // uint32\n    public var end(default, null):UInt; // uint32\n    public var partSize(default, null):UInt; // uint32\n    public var classifications(default, null):Int; // uint8\n    public var classbook(default, null):Int; // uint8\n    public var classdata(default, null):Vector<Vector<Int>>; //uint8 **\n    public var residueBooks(default, null):Vector<Vector<Int>>; //int16 (*)[8]\n    public var type(default, null):Int;\n\n    public function new() {\n    }\n\n    public static function read(decodeState:VorbisDecodeState, codebooks:Vector<Codebook>):Residue\n    {\n        var r = new Residue();\n        r.type = decodeState.readBits(16);\n        if (r.type > 2) {\n            throw new ReaderError(INVALID_SETUP);\n        }\n\n        var residueCascade = new Vector<Int>(64);\n        r.begin = decodeState.readBits(24);\n        r.end = decodeState.readBits(24);\n        r.partSize = decodeState.readBits(24)+1;\n        var classifications = r.classifications = decodeState.readBits(6)+1;\n        r.classbook = decodeState.readBits(8);\n\n        for (j in 0...r.classifications) {\n            var highBits = 0;\n            var lowBits = decodeState.readBits(3);\n            if (decodeState.readBits(1) != 0){\n                highBits = decodeState.readBits(5);\n            }\n            residueCascade[j] = highBits * 8 + lowBits;\n        }\n\n        r.residueBooks = new Vector(r.classifications);\n        for (j in 0...r.classifications) {\n            r.residueBooks[j] = new Vector(8);\n            for (k in 0...8) {\n                if (residueCascade[j] & (1 << k) != 0) {\n                    r.residueBooks[j][k] = decodeState.readBits(8);\n                    if (r.residueBooks[j][k] >= codebooks.length) {\n                        throw new ReaderError(INVALID_SETUP);\n                    }\n                } else {\n                    r.residueBooks[j][k] = -1;\n                }\n            }\n        }\n\n        // precompute the classifications[] array to avoid inner-loop mod/divide\n        // call it 'classdata' since we already have classifications\n        var el = codebooks[r.classbook].entries;\n        var classwords = codebooks[r.classbook].dimensions;\n        r.classdata = new Vector(el);\n\n        for (j in 0...el) {\n            var temp = j;\n            var k = classwords;\n            var cd = r.classdata[j] = new Vector(classwords);\n            while (--k >= 0) {\n                cd[k] = temp % classifications;\n                temp = Std.int(temp / classifications);\n            }\n        }\n\n        return r;\n    }\n\n\n    public function decode(decodeState:VorbisDecodeState, header:Header, residueBuffers:Vector<Vector<Float>>, ch:Int, n:Int,  doNotDecode:Vector<Bool>, channelBuffers:Vector<Vector<Float>>)\n    {\n        // STB_VORBIS_DIVIDES_IN_RESIDUE = true\n        var codebooks = header.codebooks;\n        var classwords = codebooks[classbook].dimensions;\n        var nRead = end - begin;\n        var partSize = this.partSize;\n        var partRead = Std.int(nRead / partSize);\n        var classifications = new Vector<Int>(header.channel * partRead + 1); // + 1 is a hack for a possible crash in line 268 with some ogg files\n\n        VorbisTools.stbProf(2);\n        for (i in 0...ch) {\n            if (!doNotDecode[i]) {\n                var buffer = residueBuffers[i];\n                for (j in 0...buffer.length) {\n                    buffer[j] = 0;\n                }\n            }\n        }\n\n        if (type == 2 && ch != 1) {\n            for (j in 0...ch) {\n                if (!doNotDecode[j]) {\n                    break;\n                } else if (j == ch - 1) {\n                    return;\n                }\n            }\n\n            VorbisTools.stbProf(3);\n            for (pass in 0...8) {\n                var pcount = 0, classSet = 0;\n                if (ch == 2) {\n                    VorbisTools.stbProf(13);\n                    while (pcount < partRead) {\n                        var z = begin + pcount * partSize;\n                        var cInter = (z & 1);\n                        var pInter = z >> 1;\n                        if (pass == 0) {\n                            var c:Codebook = codebooks[classbook];\n                            var q = decodeState.decode(c);\n                            if (q == VorbisTools.EOP) {\n                                return;\n                            }\n                            var i = classwords;\n                            while (--i >= 0) {\n                                classifications[i + pcount] = q % this.classifications;\n                                q = Std.int(q / this.classifications);\n                            }\n                        }\n                        VorbisTools.stbProf(5);\n                        for (i in 0...classwords) {\n                            if (pcount >= partRead) {\n                                break;\n                            }\n                            var z = begin + pcount*partSize;\n                            var c = classifications[pcount];\n                            var b = residueBooks[c][pass];\n                            if (b >= 0) {\n                                var book = codebooks[b];\n                                VorbisTools.stbProf(20);  // accounts for X time\n                                var result = book.decodeDeinterleaveRepeat(decodeState, residueBuffers, ch, cInter, pInter, n, partSize);\n                                if (result == null) {\n                                    return;\n                                } else {\n                                    cInter = result.cInter;\n                                    pInter = result.pInter;\n                                }\n                                VorbisTools.stbProf(7);\n                            } else {\n                                z += partSize;\n                                cInter = z & 1;\n                                pInter = z >> 1;\n                            }\n                            ++pcount;\n                        }\n                        VorbisTools.stbProf(8);\n                    }\n                } else if (ch == 1) {\n                    while (pcount < partRead) {\n                        var z = begin + pcount*partSize;\n                        var cInter = 0;\n                        var pInter = z;\n                        if (pass == 0) {\n                            var c:Codebook = codebooks[classbook];\n                            var q = decodeState.decode(c);\n                            if (q == VorbisTools.EOP) return;\n\n                            var i = classwords;\n                            while (--i >= 0) {\n                                classifications[i + pcount] = q % this.classifications;\n                                q = Std.int(q / this.classifications);\n                            }\n                        }\n\n                        for (i in 0...classwords) {\n                            if (pcount >= partRead) {\n                                break;\n                            }\n                            var z = begin + pcount * partSize;\n                            var b = residueBooks[classifications[pcount]][pass];\n                            if (b >= 0) {\n                                var book:Codebook = codebooks[b];\n                                VorbisTools.stbProf(22);\n                                var result = book.decodeDeinterleaveRepeat(decodeState, residueBuffers, ch, cInter, pInter, n, partSize);\n                                if (result == null) {\n                                    return;\n                                } else {\n                                    cInter = result.cInter;\n                                    pInter = result.pInter;\n                                }\n                                VorbisTools.stbProf(3);\n                            } else {\n                                z += partSize;\n                                cInter = 0;\n                                pInter = z;\n                            }\n                            ++pcount;\n                        }\n                    }\n                } else {\n                    while (pcount < partRead) {\n                        var z = begin + pcount * partSize;\n                        var cInter = z % ch;\n                        var pInter = Std.int(z / ch);\n\n                        if (pass == 0) {\n                            var c:Codebook = codebooks[classbook];\n                            var q = decodeState.decode(c);\n                            if (q == VorbisTools.EOP) {\n                                return;\n                            }\n\n                            var i = classwords;\n                            while (--i >= 0) {\n                                classifications[i+pcount] = q % this.classifications;\n                                q = Std.int(q / this.classifications);\n                            }\n                        }\n\n                        for (i in 0...classwords) {\n                            if (pcount >= partRead) {\n                                break;\n                            }\n                            var z = begin + pcount * partSize;\n                            var b = residueBooks[classifications[pcount]][pass];\n                            if (b >= 0) {\n                                var book = codebooks[b];\n                                VorbisTools.stbProf(22);\n                                var result = book.decodeDeinterleaveRepeat(decodeState, residueBuffers, ch, cInter, pInter, n, partSize);\n                                if (result == null) {\n                                    return;\n                                } else {\n                                    cInter = result.cInter;\n                                    pInter = result.pInter;\n                                }\n                                VorbisTools.stbProf(3);\n                            } else {\n                                z += partSize;\n                                cInter = z % ch;\n                                pInter = Std.int(z / ch);\n                            }\n                            ++pcount;\n                        }\n                    }\n                }\n            }\n            return;\n        }\n        VorbisTools.stbProf(9);\n\n        for (pass in 0...8) {\n            var pcount = 0;\n            var classSet = 0;\n            while (pcount < partRead) {\n                if (pass == 0) {\n                    for (j in 0...ch) {\n                        if (!doNotDecode[j]) {\n                            var c:Codebook = codebooks[classbook];\n                            var temp = decodeState.decode(c);\n                            if (temp == VorbisTools.EOP) {\n                                return;\n                            }\n                            var i = classwords;\n                            while (--i >= 0) {\n                                classifications[j * partRead + i + pcount] = temp % this.classifications;\n                                temp = Std.int(temp / this.classifications);\n                            }\n                        }\n                    }\n                }\n                for (i in 0...classwords) {\n                    if (pcount >= partRead) {\n                        break;\n                    }\n                    for (j in 0...ch) {\n                        if (!doNotDecode[j]) {\n                            var c = classifications[j  * partRead + pcount];\n                            var b = residueBooks[c][pass];\n                            if (b >= 0) {\n                                var target = residueBuffers[j];\n                                var offset = begin + pcount * partSize;\n                                var n = partSize;\n                                var book = codebooks[b];\n                                if (!book.residueDecode(decodeState, target, offset, n, type)) {\n                                    return;\n                                }\n                            }\n                        }\n                    }\n                    ++pcount;\n                }\n            }\n        }\n    }\n}\n","package kha.graphics2;\r\n\r\nimport kha.Color;\r\nimport kha.FastFloat;\r\nimport kha.Font;\r\nimport kha.graphics4.PipelineState;\r\nimport kha.Image;\r\nimport kha.math.FastMatrix3;\r\n\r\nclass Graphics {\r\n\tpublic function begin(clear: Bool = true, clearColor: Color = null): Void {\r\n\r\n\t}\r\n\r\n\tpublic function end(): Void {\r\n\r\n\t}\r\n\r\n\tpublic function flush(): Void {\r\n\r\n\t}\r\n\r\n\t//scale-filtering\r\n\t//draw/fillPolygon\r\n\r\n\tpublic function clear(color: Color = null): Void {\r\n\r\n\t}\r\n\r\n\tpublic function drawImage(img: Image, x: FastFloat, y: FastFloat): Void {\r\n\t\tdrawSubImage(img, x, y, 0, 0, img.width, img.height);\r\n\t}\r\n\r\n\tpublic function drawSubImage(img: Image, x: FastFloat, y: FastFloat, sx: FastFloat, sy: FastFloat, sw: FastFloat, sh: FastFloat): Void {\r\n\t\tdrawScaledSubImage(img, sx, sy, sw, sh, x, y, sw, sh);\r\n\t}\r\n\r\n\tpublic function drawScaledImage(img: Image, dx: FastFloat, dy: FastFloat, dw: FastFloat, dh: FastFloat): Void {\r\n\t\tdrawScaledSubImage(img, 0, 0, img.width, img.height, dx, dy, dw, dh);\r\n\t}\r\n\r\n\tpublic function drawScaledSubImage(image: Image, sx: FastFloat, sy: FastFloat, sw: FastFloat, sh: FastFloat, dx: FastFloat, dy: FastFloat, dw: FastFloat, dh: FastFloat): Void {\r\n\r\n\t}\r\n\r\n\tpublic function drawRect(x: Float, y: Float, width: Float, height: Float, strength: Float = 1.0): Void {\r\n\r\n\t}\r\n\r\n\tpublic function fillRect(x: Float, y: Float, width: Float, height: Float): Void {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Draw a single line of text with the current `color`, `font` and `fontSize` properties.\r\n\t *\r\n\t * When drawing into rendertargets, you might have to use a different shader than the default one\r\n\t *  - use the default shader when drawing into a transparent section of your rendertarget\r\n\t *  - use a shader with `alphaBlendSource = BlendOne` when drawing into a non-transparent section of your rendertarget\r\n\t */\r\n\tpublic function drawString(text: String, x: Float, y: Float): Void {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Draw a single line of characters with the current `color`, `font` and `fontSize` properties.\r\n\t *\r\n\t * When drawing into rendertargets, you might have to use a different shader than the default one\r\n\t *  - use the default shader when drawing into a transparent section of your rendertarget\r\n\t *  - use a shader with `alphaBlendSource = BlendOne` when drawing into a non-transparent section of your rendertarget\r\n\t */\r\n\tpublic function drawCharacters(text: Array<Int>, start: Int, length: Int, x: Float, y: Float): Void {\r\n\r\n\t}\r\n\r\n\tpublic function drawLine(x1: Float, y1: Float, x2: Float, y2: Float, strength: Float = 1.0): Void {\r\n\r\n\t}\r\n\r\n\tpublic function drawVideo(video: Video, x: Float, y: Float, width: Float, height: Float): Void {\r\n\r\n\t}\r\n\r\n\tpublic function fillTriangle(x1: Float, y1: Float, x2: Float, y2: Float, x3: Float, y3: Float): Void {\r\n\r\n\t}\r\n\r\n\tpublic var imageScaleQuality(get, set): ImageScaleQuality;\r\n\r\n\tpublic var mipmapScaleQuality(get, set): ImageScaleQuality;\r\n\r\n\tprivate function get_imageScaleQuality(): ImageScaleQuality {\r\n\t\treturn ImageScaleQuality.Low;\r\n\t}\r\n\r\n\tprivate function set_imageScaleQuality(value: ImageScaleQuality): ImageScaleQuality {\r\n\t\treturn ImageScaleQuality.High;\r\n\t}\r\n\r\n\tprivate function get_mipmapScaleQuality(): ImageScaleQuality {\r\n\t\treturn ImageScaleQuality.Low;\r\n\t}\r\n\r\n\tprivate function set_mipmapScaleQuality(value: ImageScaleQuality): ImageScaleQuality {\r\n\t\treturn ImageScaleQuality.High;\r\n\t}\r\n\r\n\t/**\r\n\tThe color value is used for geometric primitives, images, and text. Remember to set it back to white to draw images unaltered.\r\n\t*/\r\n\tpublic var color(get, set): Color;\r\n\r\n\tprivate function get_color(): Color {\r\n\t\treturn Color.Black;\r\n\t}\r\n\r\n\tprivate function set_color(color: Color): Color {\r\n\t\treturn Color.Black;\r\n\t}\r\n\r\n\tpublic var font(get, set): Font;\r\n\r\n\tprivate function get_font(): Font {\r\n\t\treturn null;\r\n\t}\r\n\r\n\tprivate function set_font(font: Font): Font {\r\n\t\treturn null;\r\n\t}\r\n\r\n\tpublic var fontSize(get, set): Int;\r\n\r\n\tprivate function get_fontSize(): Int {\r\n\t\treturn myFontSize;\r\n\t}\r\n\r\n\tprivate function set_fontSize(value: Int): Int {\r\n\t\treturn myFontSize = value;\r\n\t}\r\n\r\n\tpublic static var fontGlyphs: Array<Int> = [for (i in 32...256) i];\r\n\r\n\t// works on the top of the transformation stack\r\n\tpublic var transformation(get, set): FastMatrix3;\r\n\r\n\tprivate inline function get_transformation(): FastMatrix3 {\r\n\t\treturn transformations[transformationIndex];\r\n\t}\r\n\r\n\tprivate inline function set_transformation(transformation: FastMatrix3): FastMatrix3 {\r\n\t\tsetTransformation(transformation);\r\n\t\ttransformations[transformationIndex].setFrom(transformation);\r\n\t\treturn transformation;\r\n\t}\r\n\r\n\tpublic inline function pushTransformation(trans: FastMatrix3): Void {\r\n\t\ttransformationIndex++;\r\n\t\tif (transformationIndex == transformations.length) {\r\n\t\t\ttransformations.push(FastMatrix3.identity());\r\n\t\t}\r\n\t\ttransformations[transformationIndex].setFrom(trans);\r\n\t\tsetTransformation(get_transformation());\r\n\t}\r\n\r\n\tpublic function popTransformation(): FastMatrix3 {\r\n\t\ttransformationIndex--;\r\n\t\tsetTransformation(get_transformation());\r\n\t\treturn transformations[transformationIndex + 1];\r\n\t}\r\n\r\n\tpublic function scale(x :FastFloat, y :FastFloat): Void {\r\n\t\ttransformation.setFrom(kha.math.FastMatrix3.scale(x, y).multmat(transformation));\r\n\t}\r\n\r\n\tprivate inline function translation(tx: FastFloat, ty: FastFloat): FastMatrix3 {\r\n\t\treturn FastMatrix3.translation(tx, ty).multmat(transformation);\r\n\t}\r\n\r\n\tpublic function translate(tx: FastFloat, ty: FastFloat): Void {\r\n\t\ttransformation.setFrom(translation(tx, ty));\r\n\t}\r\n\r\n\tpublic function pushTranslation(tx: FastFloat, ty: FastFloat): Void {\r\n\t\tpushTransformation(translation(tx, ty));\r\n\t}\r\n\r\n\tprivate inline function rotation(angle: FastFloat, centerx: FastFloat, centery: FastFloat): FastMatrix3 {\r\n\t\treturn FastMatrix3.translation(centerx, centery).multmat(FastMatrix3.rotation(angle)).multmat(FastMatrix3.translation(-centerx, -centery)).multmat(transformation);\r\n\t}\r\n\r\n\tpublic function rotate(angle: FastFloat, centerx: FastFloat, centery: FastFloat): Void {\r\n\t\ttransformation.setFrom(rotation(angle, centerx, centery));\r\n\t}\r\n\r\n\tpublic function pushRotation(angle: FastFloat, centerx: FastFloat, centery: FastFloat): Void {\r\n\t\tpushTransformation(rotation(angle, centerx, centery));\r\n\t}\r\n\r\n\tpublic var opacity(get, set): Float; // works on the top of the opacity stack\r\n\r\n\tpublic function pushOpacity(opacity: Float): Void {\r\n\t\tsetOpacity(opacity);\r\n\t\topacities.push(opacity);\r\n\t}\r\n\r\n\tpublic function popOpacity(): Float {\r\n\t\tvar ret = opacities.pop();\r\n\t\tsetOpacity(get_opacity());\r\n\t\treturn ret;\r\n\t}\r\n\r\n\tpublic function get_opacity(): Float {\r\n\t\treturn opacities[opacities.length - 1];\r\n\t}\r\n\r\n\tpublic function set_opacity(opacity: Float): Float {\r\n\t\tsetOpacity(opacity);\r\n\t\treturn opacities[opacities.length - 1] = opacity;\r\n\t}\r\n\r\n\tpublic function scissor(x: Int, y: Int, width: Int, height: Int): Void {\r\n\r\n\t}\r\n\r\n\tpublic function disableScissor(): Void {\r\n\r\n\t}\r\n\r\n\t#if sys_g4\r\n\tprivate var pipe: PipelineState;\r\n\r\n\tpublic var pipeline(get, set): PipelineState;\r\n\r\n\tprivate function get_pipeline(): PipelineState {\r\n\t\treturn pipe;\r\n\t}\r\n\r\n\tprivate function set_pipeline(pipeline: PipelineState): PipelineState {\r\n\t\tsetPipeline(pipeline);\r\n\t\treturn pipe = pipeline;\r\n\t}\r\n\t#end\r\n\r\n\tprivate var transformations: Array<FastMatrix3>;\r\n\tprivate var transformationIndex: Int;\r\n\tprivate var opacities: Array<Float>;\r\n\tprivate var myFontSize: Int;\r\n\r\n\tpublic function new() {\r\n\t\ttransformations = [FastMatrix3.identity()];\r\n\t\ttransformationIndex = 0;\r\n\t\topacities = [1];\r\n\t\tmyFontSize = 12;\r\n\t\t#if sys_g4\r\n\t\tpipe = null;\r\n\t\t#end\r\n\t}\r\n\r\n\tprivate function setTransformation(transformation: FastMatrix3): Void {\r\n\r\n\t}\r\n\r\n\tprivate function setOpacity(opacity: Float): Void {\r\n\r\n\t}\r\n\r\n\tprivate function setPipeline(pipeline: PipelineState): Void {\r\n\r\n\t}\r\n}\r\n","package kha.graphics2;\r\n\r\nimport haxe.io.Bytes;\r\nimport kha.Canvas;\r\nimport kha.Color;\r\nimport kha.graphics4.TextureFormat;\r\nimport kha.graphics4.Usage;\r\nimport kha.Image;\r\n\r\nclass Graphics1 implements kha.graphics1.Graphics {\r\n\tprivate var canvas: Canvas;\r\n\tprivate var texture: Image;\r\n\tprivate var pixels: Bytes;\r\n\r\n\tpublic function new(canvas: Canvas) {\r\n\t\tthis.canvas = canvas;\r\n\t}\r\n\r\n\tpublic function begin(): Void {\r\n\t\tif (texture == null || (texture.realWidth != canvas.width || texture.realHeight != canvas.height)) {\r\n\t\t\ttexture = Image.create(canvas.width, canvas.height, TextureFormat.RGBA32, Usage.ReadableUsage);\r\n\t\t}\r\n\t\tpixels = texture.lock();\r\n\t}\r\n\r\n\tpublic function end(): Void {\r\n\t\ttexture.unlock();\r\n\t\tcanvas.g2.begin(false);\r\n\t\tcanvas.g2.drawImage(texture, 0, 0);\r\n\t\tcanvas.g2.end();\r\n\t}\r\n\r\n\tpublic function setPixel(x: Int, y: Int, color: Color): Void {\r\n\t\t#if (kha_html5 || kha_krom)\r\n\t\tpixels.setInt32(y * texture.realWidth * 4 + x * 4, Color.fromBytes(color.Bb, color.Gb, color.Rb, color.Ab));\r\n\t\t#else\r\n\t\tpixels.setInt32(y * texture.realWidth * 4 + x * 4, color);\r\n\t\t#end\r\n\t}\r\n}\r\n","package kha.graphics2;\n\nimport kha.math.Vector2;\nimport kha.math.FastVector2;\nimport kha.graphics2.Graphics;\nimport kha.graphics2.VerTextAlignment;\nimport kha.graphics2.HorTextAlignment;\n\n/**\n * Static extension functions for Graphics2.\n * Usage: \"using kha.graphics2.GraphicsExtension;\"\n */\nclass GraphicsExtension {\n\t/**\n\t * Draws a arc.\n\t * @param\tccw (optional) Specifies whether the drawing should be counterclockwise.\n\t * @param\tsegments (optional) The amount of lines that should be used to draw the arc.\n\t */\n\tpublic static function drawArc(g2: Graphics, cx: Float, cy: Float, radius: Float, sAngle: Float, eAngle: Float, strength: Float = 1, ccw: Bool = false, segments: Int = 0): Void {\n\t\t#if kha_html5\n\t\tif (kha.SystemImpl.gl == null) {\n\t\t\tvar g: kha.js.CanvasGraphics = cast g2;\n\t\t\tradius -= strength/2; // reduce radius to fit the line thickness within image width/height\n\t\t\tg.drawArc(cx, cy, radius, sAngle, eAngle, strength, ccw);\n\t\t\treturn;\n\t\t}\n\t\t#end\n\n\t\tsAngle = sAngle % (Math.PI * 2);\n\t\teAngle = eAngle % (Math.PI * 2);\n\n\t\tif (ccw) {\n\t\t\tif (eAngle > sAngle) eAngle -= Math.PI * 2;\n\t\t} else if (eAngle < sAngle) eAngle += Math.PI * 2;\n\n\t\tradius += strength / 2;\n\t\tif (segments <= 0)\n\t\t\tsegments = Math.floor(10 * Math.sqrt(radius));\n\n\t\tvar theta = (eAngle - sAngle) / segments;\n\t\tvar c = Math.cos(theta);\n\t\tvar s = Math.sin(theta);\n\n\t\tvar x = Math.cos(sAngle) * radius;\n\t\tvar y = Math.sin(sAngle) * radius;\n\n\t\tfor (n in 0...segments) {\n\t\t\tvar px = x + cx;\n\t\t\tvar py = y + cy;\n\n\t\t\tvar t = x;\n\t\t\tx = c * x - s * y;\n\t\t\ty = c * y + s * t;\n\n\t\t\tdrawInnerLine(g2, x + cx, y + cy, px, py, strength);\n\t\t}\n\t}\n\n\t/**\n\t * Draws a filled arc.\n\t * @param\tccw (optional) Specifies whether the drawing should be counterclockwise.\n\t * @param\tsegments (optional) The amount of lines that should be used to draw the arc.\n\t */\n\tpublic static function fillArc(g2: Graphics, cx: Float, cy: Float, radius: Float, sAngle: Float, eAngle: Float, ccw: Bool = false, segments: Int = 0): Void {\n\t\t#if kha_html5\n\t\t\tif (kha.SystemImpl.gl == null) {\n\t\t\t\tvar g: kha.js.CanvasGraphics = cast g2;\n\t\t\t\tg.fillArc(cx, cy, radius, sAngle, eAngle, ccw);\n\t\t\t\treturn;\n\t\t\t}\n\t\t#end\n\n\t\tsAngle = sAngle % (Math.PI * 2);\n\t\teAngle = eAngle % (Math.PI * 2);\n\n\t\tif (ccw) {\n\t\t\tif (eAngle > sAngle) eAngle -= Math.PI * 2;\n\t\t} else if (eAngle < sAngle) eAngle += Math.PI * 2;\n\n\t\tif (segments <= 0)\n\t\t\tsegments = Math.floor(10 * Math.sqrt(radius));\n\n\t\tvar theta = (eAngle - sAngle) / segments;\n\t\tvar c = Math.cos(theta);\n\t\tvar s = Math.sin(theta);\n\n\t\tvar x = Math.cos(sAngle) * radius;\n\t\tvar y = Math.sin(sAngle) * radius;\n\t\tvar sx = x + cx;\n\t\tvar sy = y + cy;\n\n\t\tfor (n in 0...segments) {\n\t\t\tvar px = x + cx;\n\t\t\tvar py = y + cy;\n\n\t\t\tvar t = x;\n\t\t\tx = c * x - s * y;\n\t\t\ty = c * y + s * t;\n\n\t\t\tg2.fillTriangle(px, py, x + cx, y + cy, sx, sy);\n\t\t}\n\t}\n\n\t/**\n\t * Draws a circle.\n\t * @param\tsegments (optional) The amount of lines that should be used to draw the circle.\n\t */\n\tpublic static function drawCircle(g2: Graphics, cx: Float, cy: Float, radius: Float, strength: Float = 1, segments: Int = 0): Void {\n\t\t\t#if kha_html5\n\t\t\t\tif (kha.SystemImpl.gl == null) {\n\t\t\t\t\tvar g: kha.js.CanvasGraphics = cast g2;\n\t\t\t\t\tradius -= strength / 2; // reduce radius to fit the line thickness within image width/height\n\t\t\t\t\tg.drawCircle(cx, cy, radius, strength);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t#end\n\t\t\tradius += strength / 2;\n\n\t\t\tif (segments <= 0)\n\t\t\t\tsegments = Math.floor(10 * Math.sqrt(radius));\n\n\t\t\tvar theta = 2 * Math.PI / segments;\n\t\t\tvar c = Math.cos(theta);\n\t\t\tvar s = Math.sin(theta);\n\n\t\t\tvar x = radius;\n\t\t\tvar y = 0.0;\n\n\t\t\tfor (n in 0...segments) {\n\t\t\t\tvar px = x + cx;\n\t\t\t\tvar py = y + cy;\n\n\t\t\t\tvar t = x;\n\t\t\t\tx = c * x - s * y;\n\t\t\t\ty = c * y + s * t;\n\t\t\t\tdrawInnerLine(g2, x + cx, y + cy, px, py, strength);\n\t\t\t}\n\t\t}\n\n\tstatic function drawInnerLine(g2: Graphics, x1: Float, y1: Float, x2: Float, y2: Float, strength: Float): Void {\n\t\tvar side = y2 > y1 ? 1 : 0;\n\t\tif (y2 == y1) side = x2 - x1 > 0 ? 1 : 0;\n\n\t\tvar vec = new FastVector2();\n\t\tif (y2 == y1) vec.setFrom(new FastVector2(0, -1));\n\t\telse vec.setFrom(new FastVector2(1, -(x2 - x1) / (y2 - y1)));\n\t\tvec.length = strength;\n\t\tvar p1 = new FastVector2(x1 + side * vec.x, y1 + side * vec.y);\n\t\tvar p2 = new FastVector2(x2 + side * vec.x, y2 + side * vec.y);\n\t\tvar p3 = p1.sub(vec);\n\t\tvar p4 = p2.sub(vec);\n\t\tg2.fillTriangle(p1.x, p1.y, p2.x, p2.y, p3.x, p3.y);\n\t\tg2.fillTriangle(p3.x, p3.y, p2.x, p2.y, p4.x, p4.y);\n\t}\n\n\t/**\n\t * Draws a filled circle.\n\t * @param\tsegments (optional) The amount of lines that should be used to draw the circle.\n\t */\n\tpublic static function fillCircle(g2: Graphics, cx: Float, cy: Float, radius: Float, segments: Int = 0): Void {\n\t\t#if kha_html5\n\t\t\tif (kha.SystemImpl.gl == null) {\n\t\t\t\tvar g: kha.js.CanvasGraphics = cast g2;\n\t\t\t\tg.fillCircle(cx, cy, radius);\n\t\t\t\treturn;\n\t\t\t}\n\t\t#end\n\n\t\tif (segments <= 0) {\n\t\t\tsegments = Math.floor(10 * Math.sqrt(radius));\n\t\t}\n\n\t\tvar theta = 2 * Math.PI / segments;\n\t\tvar c = Math.cos(theta);\n\t\tvar s = Math.sin(theta);\n\n\t\tvar x = radius;\n\t\tvar y = 0.0;\n\n\t\tfor (n in 0...segments) {\n\t\t\tvar px = x + cx;\n\t\t\tvar py = y + cy;\n\n\t\t\tvar t = x;\n\t\t\tx = c * x - s * y;\n\t\t\ty = c * y + s * t;\n\n\t\t\tg2.fillTriangle(px, py, x + cx, y + cy, cx, cy);\n\t\t}\n\t}\n\n\t/**\n\t * Draws a convex polygon.\n\t */\n\tpublic static function drawPolygon(g2: Graphics, x: Float, y: Float, vertices: Array<Vector2>, strength: Float = 1) {\n\t\tvar iterator = vertices.iterator();\n\t\tvar v0 = iterator.next();\n\t\tvar v1 = v0;\n\n\t\twhile (iterator.hasNext()) {\n\t\t\tvar v2 = iterator.next();\n\t\t\tg2.drawLine(v1.x + x, v1.y + y, v2.x + x, v2.y + y, strength);\n\t\t\tv1 = v2;\n\t\t}\n\t\tg2.drawLine(v1.x + x, v1.y + y, v0.x + x, v0.y + y, strength);\n\t}\n\n\t/**\n\t * Draws a filled convex polygon.\n\t */\n\tpublic static function fillPolygon(g2: Graphics, x: Float, y: Float, vertices: Array<Vector2>) {\n\n\t\tvar iterator = vertices.iterator();\n\n\t\tif (!iterator.hasNext()) return;\n\t\tvar v0 = iterator.next();\n\n\t\tif (!iterator.hasNext()) return;\n\t\tvar v1 = iterator.next();\n\n\t\twhile (iterator.hasNext()) {\n\t\t\tvar v2 = iterator.next();\n\t\t\tg2.fillTriangle(v0.x + x, v0.y + y, v1.x + x, v1.y + y, v2.x + x, v2.y + y);\n\t\t\tv1 = v2;\n\t\t}\n\t}\n\n\t/**\n\t * Draws a cubic bezier using 4 pairs of points. If the x and y arrays have a length bigger then 4, the additional\n\t * points will be ignored. With a length smaller of 4 a error will occur, there is no check for this.\n\t * You can construct the curves visually in Inkscape with a path using default nodes.\n\t * Provide x and y in the following order: startPoint, controlPoint1, controlPoint2, endPoint\n\t * Reference: http://devmag.org.za/2011/04/05/bzier-curves-a-tutorial/\n\t */\n\tpublic static function drawCubicBezier(g2:Graphics, x:Array<Float>, y:Array<Float>, segments:Int = 20, strength:Float = 1.0):Void {\n\t\tvar t:Float;\n\n\t\tvar q0 = calculateCubicBezierPoint(0, x, y);\n\t\tvar q1:Array<Float>;\n\n\t\tfor (i in 1...(segments + 1)) {\n\t\t\tt = i / segments;\n\t\t\tq1 = calculateCubicBezierPoint(t, x, y);\n\t\t\tg2.drawLine(q0[0], q0[1], q1[0], q1[1], strength);\n\t\t\tq0 = q1;\n\t\t}\n\t}\n\n\t/**\n\t * Draws multiple cubic beziers joined by the end point. The minimum size is 4 pairs of points (a single curve).\n\t */\n\tpublic static function drawCubicBezierPath(g2:Graphics, x:Array<Float>, y:Array<Float>, segments:Int = 20, strength:Float = 1.0):Void {\n\t\tvar i = 0;\n\t\tvar t:Float;\n\t\tvar q0:Array<Float> = null;\n\t\tvar q1:Array<Float> = null;\n\n\t\twhile (i < x.length - 3) {\n\t\t\tif (i == 0)\n\t\t\t\tq0 = calculateCubicBezierPoint(0, [x[i], x[i + 1], x[i + 2], x[i + 3]], [y[i], y[i + 1], y[i + 2], y[i + 3]]);\n\n\t\t\tfor (j in 1...(segments + 1)) {\n\t\t\t\tt = j / segments;\n\t\t\t\tq1 = calculateCubicBezierPoint(t, [x[i], x[i + 1], x[i + 2], x[i + 3]], [y[i], y[i + 1], y[i + 2], y[i + 3]]);\n\t\t\t\tg2.drawLine(q0[0], q0[1], q1[0], q1[1], strength);\n\t\t\t\tq0 = q1;\n\t\t\t}\n\n\t\t\ti += 3;\n\t\t}\n\t}\n\n\tstatic function calculateCubicBezierPoint(t:Float, x:Array<Float>, y:Array<Float>):Array<Float> {\n\t\tvar u:Float = 1 - t;\n\t\tvar tt:Float = t * t;\n\t\tvar uu:Float = u * u;\n\t\tvar uuu:Float = uu * u;\n\t\tvar ttt:Float = tt * t;\n\n\t\t// first term\n\t\tvar p:Array<Float> = [uuu * x[0], uuu * y[0]];\n\n\t\t// second term\n\t\tp[0] += 3 * uu * t * x[1];\n\t\tp[1] += 3 * uu * t * y[1];\n\n\t\t// third term\n\t\tp[0] += 3 * u * tt * x[2];\n\t\tp[1] += 3 * u * tt * y[2];\n\n\t\t// fourth term\n\t\tp[0] += ttt * x[3];\n\t\tp[1] += ttt * y[3];\n\n\t\treturn p;\n\t}\n\n\tstatic public function drawAlignedString(g2: Graphics, text: String, x: Float, y: Float, horAlign: HorTextAlignment, verAlign: VerTextAlignment): Void {\n\t\tvar xoffset = 0.0;\n\t\tif (horAlign == TextCenter || horAlign == TextRight) {\n\t\t\tvar width = g2.font.width(g2.fontSize, text);\n\t\t\tif (horAlign == TextCenter) {\n\t\t\t\txoffset = -width * 0.5;\n\t\t\t}\n\t\t\telse {\n\t\t\t\txoffset = -width;\n\t\t\t}\n\t\t}\n\t\tvar yoffset = 0.0;\n\t\tif (verAlign == TextMiddle || verAlign == TextBottom) {\n\t\t\tvar height = g2.font.height(g2.fontSize);\n\t\t\tif(verAlign == TextMiddle) {\n\t\t\t\tyoffset = -height * 0.5;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tyoffset = -height;\n\t\t\t}\n\t\t}\n\t\tg2.drawString(text, x + xoffset, y + yoffset);\n\t}\n\n\tstatic public function drawAlignedCharacters(g2: Graphics, text: Array<Int>, start: Int, length: Int, x: Float, y: Float, horAlign: HorTextAlignment, verAlign: VerTextAlignment): Void {\n\t\tvar xoffset = 0.0;\n\t\tif (horAlign == TextCenter || horAlign == TextRight) {\n\t\t\tvar width = g2.font.widthOfCharacters(g2.fontSize, text, start, length);\n\t\t\tif (horAlign == TextCenter) {\n\t\t\t\txoffset = -width * 0.5;\n\t\t\t}\n\t\t\telse {\n\t\t\t\txoffset = -width;\n\t\t\t}\n\t\t}\n\t\tvar yoffset = 0.0;\n\t\tif (verAlign == TextMiddle || verAlign == TextBottom) {\n\t\t\tvar height = g2.font.height(g2.fontSize);\n\t\t\tif (verAlign == TextMiddle) {\n\t\t\t\tyoffset = -height * 0.5;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tyoffset = -height;\n\t\t\t}\n\t\t}\n\t\tg2.drawCharacters(text, start, length, x + xoffset, y + yoffset);\n\t}\n}\n","package kha.graphics2.truetype;\r\n\r\nimport haxe.ds.Vector;\r\nimport kha.Blob;\r\n\r\ntypedef Stbtt_uint8  = Int;\r\ntypedef Stbtt_int8   = Int;\r\ntypedef Stbtt_uint16 = Int;\r\ntypedef Stbtt_int16  = Int;\r\ntypedef Stbtt_uint32 = Int;\r\ntypedef Stbtt_int32  = Int;\r\n   \r\n//typedef char stbtt__check_size32[sizeof(stbtt_int32)==4 ? 1 : -1];\r\n//typedef char stbtt__check_size16[sizeof(stbtt_int16)==2 ? 1 : -1];\r\n\r\nclass VectorOfIntPointer {\r\n\tpublic function new() { }\r\n\tpublic var value: Vector<Int>;\r\n}\r\n\r\nclass Stbtt_temp_rect {\r\n\tpublic function new() { }\r\n\tpublic var x0: Int;\r\n\tpublic var y0: Int;\r\n\tpublic var x1: Int;\r\n\tpublic var y1: Int;\r\n}\r\n\r\nclass Stbtt_temp_glyph_h_metrics {\r\n\tpublic function new() { }\r\n\tpublic var advanceWidth: Int;\r\n\tpublic var leftSideBearing: Int;\r\n}\r\n\r\nclass Stbtt_temp_font_v_metrics {\r\n\tpublic function new() { }\r\n\tpublic var ascent: Int;\r\n\tpublic var descent: Int;\r\n\tpublic var lineGap: Int;\r\n}\r\n\r\nclass Stbtt_temp_region {\r\n\tpublic function new() { }\r\n\tpublic var width: Int;\r\n\tpublic var height: Int;\r\n\tpublic var xoff: Int;\r\n\tpublic var yoff: Int;\r\n}\r\n\r\nclass Stbtt_bakedchar {\r\n\tpublic function new() { }\r\n\t// coordinates of bbox in bitmap\r\n\tpublic var x0: Int;\r\n\tpublic var y0: Int;\r\n\tpublic var x1: Int;\r\n\tpublic var y1: Int;\r\n\t\r\n\tpublic var xoff: Float;\r\n\tpublic var yoff: Float;\r\n\tpublic var xadvance: Float;\r\n}\r\n\r\nclass Stbtt_aligned_quad {\r\n\t// top-left\r\n\tpublic var x0: Float;\r\n\tpublic var y0: Float;\r\n\tpublic var s0: Float;\r\n\tpublic var t0: Float;\r\n\t\r\n\t// bottom-right\r\n\tpublic var x1: Float;\r\n\tpublic var y1: Float;\r\n\tpublic var s1: Float;\r\n\tpublic var t1: Float;\r\n}\r\n\r\nclass Stbtt_packedchar {\r\n\t// coordinates of bbox in bitmap\r\n\tpublic var x0: Int;\r\n\tpublic var y0: Int;\r\n\tpublic var x1: Int;\r\n\tpublic var y1: Int;\r\n\t\r\n\tpublic var xoff: Float;\r\n\tpublic var yoff: Float;\r\n\tpublic var xadvance: Float;\r\n\t\r\n\tpublic var xoff2: Float;\r\n\tpublic var yoff2: Float;\r\n}\r\n\r\nclass Stbtt_pack_range {\r\n\tpublic var font_size: Float;\r\n\tpublic var first_unicode_codepoint_in_range: Int;    // if non-zero, then the chars are continuous, and this is the first codepoint\r\n\tpublic var array_of_unicode_codepoints: Vector<Int>; // if non-zero, then this is an array of unicode codepoints\r\n\tpublic var num_chars: Int;\r\n\tpublic var chardata_for_range: Stbtt_packedchar;     // output\r\n\t\r\n\t// don't set these, they're used internally\r\n\tpublic var h_oversample: Int;\r\n\tpublic var v_oversample: Int;\r\n}\r\n\r\nclass Stbtt_pack_context {\r\n\t//**void *user_allocator_context;\r\n\t//**void *pack_info;\r\n\tpublic var width: Int;\r\n\tpublic var height: Int;\r\n\tpublic var stride_in_bytes: Int;\r\n\tpublic var padding: Int;\r\n\tpublic var h_oversample: Int;\r\n\tpublic var v_oversample: Int;\r\n\tpublic var pixels: Blob;\r\n\t//**void  *nodes;\r\n}\r\n\r\nclass Stbtt_fontinfo {\r\n\tpublic function new() { }\r\n\tpublic var data: Blob;                        // pointer to .ttf file\r\n\tpublic var fontstart: Int;                     // offset of start of font\r\n\r\n\tpublic var numGlyphs: Int;                     // number of glyphs, needed for range checking\r\n\r\n\t// table locations as offset from start of .ttf\r\n\tpublic var loca: Int;\r\n\tpublic var head: Int;\r\n\tpublic var glyf: Int;\r\n\tpublic var hhea: Int;\r\n\tpublic var hmtx: Int;\r\n\tpublic var kern: Int;\r\n\t\r\n\tpublic var index_map: Int;                     // a cmap mapping for our chosen character encoding\r\n\tpublic var indexToLocFormat: Int;              // format needed to map from glyph index to glyph\r\n}\r\n\r\nclass Stbtt_vertex {\r\n\tpublic function new() { }\r\n\tpublic var x: Stbtt_int16;\r\n\tpublic var y: Stbtt_int16;\r\n\tpublic var cx: Stbtt_int16;\r\n\tpublic var cy: Stbtt_int16;\r\n\tpublic var type: Int;\r\n\tpublic var padding: Int;\r\n}\r\n\r\nclass Stbtt__bitmap {\r\n\tpublic function new() { }\r\n\tpublic var w: Int;\r\n\tpublic var h: Int;\r\n\tpublic var stride: Int;\r\n\tpublic var pixels: Blob;\r\n\tpublic var pixels_offset: Int;\r\n}\r\n\r\nclass Stbtt__edge {\r\n\tpublic function new() { }\r\n\tpublic var x0: Float;\r\n\tpublic var y0: Float;\r\n\tpublic var x1: Float;\r\n\tpublic var y1: Float;\r\n\tpublic var invert: Bool;\r\n}\r\n\r\nclass Stbtt__active_edge {\r\n\tpublic function new() { }\r\n\tpublic var next: Stbtt__active_edge;\r\n\tpublic var fx: Float;\r\n\tpublic var fdx: Float;\r\n\tpublic var fdy: Float;\r\n\tpublic var direction: Float;\r\n\tpublic var sy: Float;\r\n\tpublic var ey: Float;\r\n}\r\n\r\nclass Stbtt__point {\r\n\tpublic function new() { }\r\n\tpublic var x: Float;\r\n\tpublic var y: Float;\r\n}\r\n\r\nclass StbTruetype {\r\n\tprivate static inline function STBTT_assert(value: Bool): Void { if (!value) throw \"Error\"; }\r\n\tprivate static inline function STBTT_POINT_SIZE(x: Float): Float { return -x; }\r\n\t\r\n\tpublic static inline var STBTT_vmove  = 1;\r\n\tpublic static inline var STBTT_vline  = 2;\r\n\tpublic static inline var STBTT_vcurve = 3;\r\n\r\n\tpublic static inline var STBTT_MACSTYLE_DONTCARE   = 0;\r\n\tpublic static inline var STBTT_MACSTYLE_BOLD       = 1;\r\n\tpublic static inline var STBTT_MACSTYLE_ITALIC     = 2;\r\n\tpublic static inline var STBTT_MACSTYLE_UNDERSCORE = 4;\r\n\tpublic static inline var STBTT_MACSTYLE_NONE       = 8; // <= not same as 0, this makes us check the bitfield is 0\r\n\r\n\t// platformID\r\n\tpublic static inline var STBTT_PLATFORM_ID_UNICODE   = 0;\r\n\tpublic static inline var STBTT_PLATFORM_ID_MAC       = 1;\r\n\tpublic static inline var STBTT_PLATFORM_ID_ISO       = 2;\r\n\tpublic static inline var STBTT_PLATFORM_ID_MICROSOFT = 3;\r\n   \r\n\t// encodingID for STBTT_PLATFORM_ID_UNICODE\r\n\tpublic static inline var STBTT_UNICODE_EID_UNICODE_1_0      = 0;\r\n\tpublic static inline var STBTT_UNICODE_EID_UNICODE_1_1      = 1;\r\n\tpublic static inline var STBTT_UNICODE_EID_ISO_10646        = 2;\r\n\tpublic static inline var STBTT_UNICODE_EID_UNICODE_2_0_BMP  = 3;\r\n\tpublic static inline var STBTT_UNICODE_EID_UNICODE_2_0_FULL = 4;\r\n\r\n\t// encodingID for STBTT_PLATFORM_ID_MICROSOFT\r\n\tpublic static inline var STBTT_MS_EID_SYMBOL        = 0;\r\n\tpublic static inline var STBTT_MS_EID_UNICODE_BMP   = 1;\r\n\tpublic static inline var STBTT_MS_EID_SHIFTJIS      = 2;\r\n\tpublic static inline var STBTT_MS_EID_UNICODE_FULL  = 10;\r\n   \r\n\t// encodingID for STBTT_PLATFORM_ID_MAC; same as Script Manager codes\r\n\tpublic static inline var STBTT_MAC_EID_ROMAN        = 0;\r\n\tpublic static inline var STBTT_MAC_EID_ARABIC       = 4;\r\n\tpublic static inline var STBTT_MAC_EID_JAPANESE     = 1;\r\n\tpublic static inline var STBTT_MAC_EID_HEBREW       = 5;\r\n\tpublic static inline var STBTT_MAC_EID_CHINESE_TRAD = 2;\r\n\tpublic static inline var STBTT_MAC_EID_GREEK        = 6;\r\n\tpublic static inline var STBTT_MAC_EID_KOREAN       = 3;\r\n\tpublic static inline var STBTT_MAC_EID_RUSSIAN      = 7;\r\n\t\r\n\t// languageID for STBTT_PLATFORM_ID_MICROSOFT; same as LCID...\r\n\t// problematic because there are e.g. 16 english LCIDs and 16 arabic LCIDs\r\n\tpublic static inline var STBTT_MS_LANG_ENGLISH     = 0x0409;\r\n\tpublic static inline var STBTT_MS_LANG_ITALIAN     = 0x0410;\r\n\tpublic static inline var STBTT_MS_LANG_CHINESE     = 0x0804;\r\n\tpublic static inline var STBTT_MS_LANG_JAPANESE    = 0x0411;\r\n\tpublic static inline var STBTT_MS_LANG_DUTCH       = 0x0413;\r\n\tpublic static inline var STBTT_MS_LANG_KOREAN      = 0x0412;\r\n\tpublic static inline var STBTT_MS_LANG_FRENCH      = 0x040c;\r\n\tpublic static inline var STBTT_MS_LANG_RUSSIAN     = 0x0419;\r\n\tpublic static inline var STBTT_MS_LANG_GERMAN      = 0x0407;\r\n\tpublic static inline var STBTT_MS_LANG_SPANISH     = 0x0409;\r\n\tpublic static inline var STBTT_MS_LANG_HEBREW      = 0x040d;\r\n\tpublic static inline var STBTT_MS_LANG_SWEDISH     = 0x041D;\r\n\t\r\n\t// languageID for STBTT_PLATFORM_ID_MAC\r\n\tpublic static inline var STBTT_MAC_LANG_ENGLISH            =  0;\r\n\tpublic static inline var STBTT_MAC_LANG_JAPANESE           = 11;\r\n\tpublic static inline var STBTT_MAC_LANG_ARABIC             = 12;\r\n\tpublic static inline var STBTT_MAC_LANG_KOREAN             = 23;\r\n\tpublic static inline var STBTT_MAC_LANG_DUTCH              =  4;\r\n\tpublic static inline var STBTT_MAC_LANG_RUSSIAN            = 32;\r\n\tpublic static inline var STBTT_MAC_LANG_FRENCH             =  1;\r\n\tpublic static inline var STBTT_MAC_LANG_SPANISH            =  6;\r\n\tpublic static inline var STBTT_MAC_LANG_GERMAN             =  2;\r\n\tpublic static inline var STBTT_MAC_LANG_SWEDISH            =  5;\r\n\tpublic static inline var STBTT_MAC_LANG_HEBREW             = 10;\r\n\tpublic static inline var STBTT_MAC_LANG_CHINESE_SIMPLIFIED = 33;\r\n\tpublic static inline var STBTT_MAC_LANG_ITALIAN            =  3;\r\n\tpublic static inline var STBTT_MAC_LANG_CHINESE_TRAD       = 19;\r\n\t\r\n\tpublic static inline var STBTT_MAX_OVERSAMPLE: Int = 8;\r\n\t//**typedef int stbtt__test_oversample_pow2[(STBTT_MAX_OVERSAMPLE & (STBTT_MAX_OVERSAMPLE-1)) == 0 ? 1 : -1];\r\n\tpublic static inline var STBTT_RASTERIZER_VERSION: Int = 2;\r\n\t\r\n\tprivate static inline function ttBYTE(p: Blob, pos: Int = 0): Stbtt_uint8 {\r\n\t\treturn p.readU8(pos);\r\n\t}\r\n\t\r\n\tprivate static inline function ttCHAR(p: Blob, pos: Int = 0): Stbtt_int8 {\r\n\t\tvar n = p.readU8(pos);\r\n\t\tif (n >= 128)\r\n\t\t\treturn n - 256;\r\n\t\treturn n;\r\n\t}\r\n\t\r\n\tprivate static inline function ttUSHORT(p: Blob, pos: Int = 0): Stbtt_uint16 {\r\n\t\tvar ch1 = p.readU8(pos + 0);\r\n\t\tvar ch2 = p.readU8(pos + 1);\r\n\t\treturn ch2 | (ch1 << 8);\r\n\t}\r\n\t\r\n\tprivate static inline function ttSHORT(p: Blob, pos: Int = 0): Stbtt_int16 {\r\n\t\tvar ch1 = p.readU8(pos + 0);\r\n\t\tvar ch2 = p.readU8(pos + 1);\r\n\t\tvar n = ch2 | (ch1 << 8);\r\n\t\tif (n & 0x8000 != 0)\r\n\t\t\treturn n - 0x10000;\r\n\t\treturn n;\r\n\t}\r\n\t\r\n\tprivate static inline function ttULONG(p: Blob, pos: Int = 0): Stbtt_uint32 { return ttLONG(p, pos); }\r\n\t\r\n\tprivate static inline function ttLONG(p: Blob, pos: Int = 0): Stbtt_int32 {\r\n\t\tvar ch1 = p.readU8(pos + 0);\r\n\t\tvar ch2 = p.readU8(pos + 1);\r\n\t\tvar ch3 = p.readU8(pos + 2);\r\n\t\tvar ch4 = p.readU8(pos + 3);\r\n\t\treturn ch4 | (ch3 << 8) | (ch2 << 16) | (ch1 << 24);\r\n\t}\r\n\r\n\tprivate static inline function to_stbtt_uint16(value: Int) {\r\n\t\treturn value & 0xffff;\r\n\t}\r\n\t\r\n\tprivate static inline function ttFixed(p: Blob, pos: Int = 0): Stbtt_int32 { return ttLONG(p, pos); }\r\n\t\r\n\tprivate static inline function stbtt_tag4(p: Blob, pos: Int, c0: Int, c1: Int, c2: Int, c3: Int): Bool { return p.readU8(pos + 0) == c0 && p.readU8(pos + 1) == c1 && p.readU8(pos + 2) == c2 && p.readU8(pos + 3) == c3; }\r\n\tprivate static inline function stbtt_tag(p: Blob, pos: Int, str: String): Bool { return stbtt_tag4(p, pos, str.charCodeAt(0), str.charCodeAt(1), str.charCodeAt(2), str.charCodeAt(3)); }\r\n\r\n   private static function stbtt__isfont(font: Blob): Bool {\r\n\t\t// check the version number\r\n\t\tif (stbtt_tag4(font, 0, '1'.charCodeAt(0),0,0,0)) return true; // TrueType 1\r\n\t\tif (stbtt_tag(font, 0, \"typ1\"))   return true; // TrueType with type 1 font -- we don't support this!\r\n\t\tif (stbtt_tag(font, 0, \"OTTO\"))   return true; // OpenType with CFF\r\n\t\tif (stbtt_tag4(font, 0, 0,1,0,0)) return true; // OpenType 1.0\r\n\t\treturn false;\r\n\t}\r\n\r\n\t// @OPTIMIZE: binary search\r\n\tprivate static function stbtt__find_table(data: Blob, fontstart: Stbtt_uint32, tag: String): Stbtt_uint32 {\r\n\t\tvar num_tables: Stbtt_int32 = ttUSHORT(data, fontstart+4);\r\n\t\tvar tabledir: Stbtt_uint32 = fontstart + 12;\r\n\t\tfor (i in 0...num_tables) {\r\n\t\t\tvar loc: Stbtt_uint32 = tabledir + 16*i;\r\n\t\t\tif (stbtt_tag(data, loc+0, tag))\r\n\t\t\t\treturn ttULONG(data, loc+8);\r\n\t\t}\r\n\t\treturn 0;\r\n\t}\r\n\r\n\tpublic static function stbtt_GetFontOffsetForIndex(font_collection: Blob, index: Int): Int {\r\n\t\t// if it's just a font, there's only one valid index\r\n\t\tif (stbtt__isfont(font_collection))\r\n\t\t\treturn index == 0 ? 0 : -1;\r\n\r\n\t\t// check if it's a TTC\r\n\t\tif (stbtt_tag(font_collection, 0, \"ttcf\")) {\r\n\t\t\t// version 1?\r\n\t\t\tif (ttULONG(font_collection, 4) == 0x00010000 || ttULONG(font_collection, 4) == 0x00020000) {\r\n\t\t\t\tvar n: Stbtt_int32 = ttLONG(font_collection, 8);\r\n\t\t\t\tif (index >= n)\r\n\t\t\t\t\treturn -1;\r\n\t\t\t\treturn ttULONG(font_collection, 12+index*4);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn -1;\r\n\t}\r\n\r\n\tpublic static function stbtt_InitFont(info: Stbtt_fontinfo, data: Blob, fontstart: Int): Bool {\r\n\t\tvar cmap, t: Stbtt_uint32;\r\n\t\tvar numTables: Stbtt_int32 ;\r\n\r\n\t\tinfo.data = data;\r\n\t\tinfo.fontstart = fontstart;\r\n\r\n\t\tcmap = stbtt__find_table(data, fontstart, \"cmap\");       // required\r\n\t\tinfo.loca = stbtt__find_table(data, fontstart, \"loca\"); // required\r\n\t\tinfo.head = stbtt__find_table(data, fontstart, \"head\"); // required\r\n\t\tinfo.glyf = stbtt__find_table(data, fontstart, \"glyf\"); // required\r\n\t\tinfo.hhea = stbtt__find_table(data, fontstart, \"hhea\"); // required\r\n\t\tinfo.hmtx = stbtt__find_table(data, fontstart, \"hmtx\"); // required\r\n\t\tinfo.kern = stbtt__find_table(data, fontstart, \"kern\"); // not required\r\n\t\tif (cmap == 0 || info.loca == 0 || info.head == 0 || info.glyf == 0 || info.hhea == 0 || info.hmtx == 0)\r\n\t\t\treturn false;\r\n\r\n\t\tt = stbtt__find_table(data, fontstart, \"maxp\");\r\n\t\tif (t != 0)\r\n\t\t\tinfo.numGlyphs = ttUSHORT(data, t+4);\r\n\t\telse\r\n\t\t\tinfo.numGlyphs = 0xffff;\r\n\r\n\t\t// find a cmap encoding table we understand *now* to avoid searching\r\n\t\t// later. (todo: could make this installable)\r\n\t\t// the same regardless of glyph.\r\n\t\tnumTables = ttUSHORT(data, cmap + 2);\r\n\t\tinfo.index_map = 0;\r\n\t\t\r\n\t\tfor (i in 0...numTables) {\r\n\t\t\tvar encoding_record: Stbtt_uint32 = cmap + 4 + 8 * i;\r\n\t\t\t// find an encoding we understand:\r\n\t\t\tswitch(ttUSHORT(data, encoding_record)) {\r\n\t\t\t\tcase STBTT_PLATFORM_ID_MICROSOFT:\r\n\t\t\t\t\tswitch (ttUSHORT(data, encoding_record+2)) {\r\n\t\t\t\t\t\tcase STBTT_MS_EID_UNICODE_BMP, STBTT_MS_EID_UNICODE_FULL:\r\n\t\t\t\t\t\t\t// MS/Unicode\r\n\t\t\t\t\t\t\tinfo.index_map = cmap + ttULONG(data, encoding_record+4);\r\n\t\t\t\t\t}\r\n\t\t\t\tcase STBTT_PLATFORM_ID_UNICODE:\r\n\t\t\t\t\t// Mac/iOS has these\r\n\t\t\t\t\t// all the encodingIDs are unicode, so we don't bother to check it\r\n\t\t\t\t\tinfo.index_map = cmap + ttULONG(data, encoding_record+4);\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (info.index_map == 0)\r\n\t\t\treturn false;\r\n\r\n\t\tinfo.indexToLocFormat = ttUSHORT(data, info.head + 50);\r\n\t\treturn true;\r\n\t}\r\n\r\n\tpublic static function stbtt_FindGlyphIndex(info: Stbtt_fontinfo, unicode_codepoint: Int): Int {\r\n\t\tvar data: Blob = info.data;\r\n\t\tvar index_map: Stbtt_uint32 = info.index_map;\r\n\r\n\t\tvar format: Stbtt_uint16 = ttUSHORT(data, index_map + 0);\r\n\t\tif (format == 0) { // apple byte encoding\r\n\t\t\tvar bytes: Stbtt_int32 = ttUSHORT(data, index_map + 2);\r\n\t\t\tif (unicode_codepoint < bytes-6)\r\n\t\t\t\treturn ttBYTE(data, index_map + 6 + unicode_codepoint);\r\n\t\t\treturn 0;\r\n\t\t} else if (format == 6) {\r\n\t\t\tvar first: Stbtt_uint32 = ttUSHORT(data, index_map + 6);\r\n\t\t\tvar count: Stbtt_uint32 = ttUSHORT(data, index_map + 8);\r\n\t\t\tif (unicode_codepoint >= first && unicode_codepoint < first+count)\r\n\t\t\t\treturn ttUSHORT(data, index_map + 10 + (unicode_codepoint - first)*2);\r\n\t\t\treturn 0;\r\n\t\t} else if (format == 2) {\r\n\t\t\tSTBTT_assert(false); // @TODO: high-byte mapping for japanese/chinese/korean\r\n\t\t\treturn 0;\r\n\t\t} else if (format == 4) { // standard mapping for windows fonts: binary search collection of ranges\r\n\t\t\tvar segcount: Stbtt_uint16 = ttUSHORT(data, index_map+6) >> 1;\r\n\t\t\tvar searchRange: Stbtt_uint16 = ttUSHORT(data, index_map + 8) >> 1;\r\n\t\t\tvar entrySelector: Stbtt_uint16 = ttUSHORT(data, index_map+10);\r\n\t\t\tvar rangeShift: Stbtt_uint16 = ttUSHORT(data, index_map+12) >> 1;\r\n\r\n\t\t\t// do a binary search of the segments\r\n\t\t\tvar endCount: Stbtt_uint32 = index_map + 14;\r\n\t\t\tvar search: Stbtt_uint32 = endCount;\r\n\r\n\t\t\tif (unicode_codepoint > 0xffff)\r\n\t\t\t\treturn 0;\r\n\r\n\t\t\t// they lie from endCount .. endCount + segCount\r\n\t\t\t// but searchRange is the nearest power of two, so...\r\n\t\t\tif (unicode_codepoint >= ttUSHORT(data, search + rangeShift*2))\r\n\t\t\t\tsearch += rangeShift*2;\r\n\r\n\t\t\t// now decrement to bias correctly to find smallest\r\n\t\t\tsearch -= 2;\r\n\t\t\twhile (entrySelector != 0) {\r\n\t\t\t\tvar end: Stbtt_uint16;\r\n\t\t\t\tsearchRange >>= 1;\r\n\t\t\t\tend = ttUSHORT(data, search + searchRange*2);\r\n\t\t\t\tif (unicode_codepoint > end)\r\n\t\t\t\t\tsearch += searchRange*2;\r\n\t\t\t\t--entrySelector;\r\n\t\t\t}\r\n\t\t\tsearch += 2;\r\n\r\n\t\t\t{\r\n\t\t\t\tvar offset, start: Stbtt_uint16;\r\n\t\t\t\tvar item: Stbtt_uint16 = to_stbtt_uint16((search - endCount) >> 1);\r\n\r\n\t\t\t\tSTBTT_assert(unicode_codepoint <= ttUSHORT(data, endCount + 2*item));\r\n\t\t\t\tstart = ttUSHORT(data, index_map + 14 + segcount*2 + 2 + 2*item);\r\n\t\t\t\tif (unicode_codepoint < start)\r\n\t\t\t\t\treturn 0;\r\n\r\n\t\t\t\toffset = ttUSHORT(data, index_map + 14 + segcount*6 + 2 + 2*item);\r\n\t\t\t\tif (offset == 0) {\r\n\t\t\t\t\treturn to_stbtt_uint16(unicode_codepoint + ttSHORT(data, index_map + 14 + segcount*4 + 2 + 2*item));\r\n\t\t\t\t}\r\n\t\t\t\treturn ttUSHORT(data, offset + (unicode_codepoint-start)*2 + index_map + 14 + segcount*6 + 2 + 2*item);\r\n\t\t\t}\r\n\t\t} else if (format == 12 || format == 13) {\r\n\t\t\tvar ngroups: Stbtt_uint32 = ttULONG(data, index_map+12);\r\n\t\t\tvar low,high: Stbtt_int32;\r\n\t\t\tlow = 0; high = ngroups;\r\n\t\t\t// Binary search the right group.\r\n\t\t\twhile (low < high) {\r\n\t\t\t\tvar mid: Stbtt_int32 = low + ((high-low) >> 1); // rounds down, so low <= mid < high\r\n\t\t\t\tvar start_char: Stbtt_uint32 = ttULONG(data, index_map+16+mid*12);\r\n\t\t\t\tvar end_char: Stbtt_uint32 = ttULONG(data, index_map+16+mid*12+4);\r\n\t\t\t\tif (unicode_codepoint < start_char)\r\n\t\t\t\t\thigh = mid;\r\n\t\t\t\telse if (unicode_codepoint > end_char)\r\n\t\t\t\t\tlow = mid+1;\r\n\t\t\t\telse {\r\n\t\t\t\t\tvar start_glyph: Stbtt_uint32 = ttULONG(data, index_map+16+mid*12+8);\r\n\t\t\t\t\tif (format == 12)\r\n\t\t\t\t\t\treturn start_glyph + unicode_codepoint-start_char;\r\n\t\t\t\t\telse // format == 13\r\n\t\t\t\t\t\treturn start_glyph;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn 0; // not found\r\n\t\t}\r\n\t\t// @TODO\r\n\t\tSTBTT_assert(false);\r\n\t\treturn 0;\r\n\t}\r\n\r\n\tpublic static function stbtt_GetCodepointShape(info: Stbtt_fontinfo, unicode_codepoint: Int): Vector<Stbtt_vertex> {\r\n\t\treturn stbtt_GetGlyphShape(info, stbtt_FindGlyphIndex(info, unicode_codepoint));\r\n\t}\r\n\r\n\tprivate static function stbtt_setvertex(v: Stbtt_vertex, type: Stbtt_uint8, x: Stbtt_int32, y: Stbtt_int32, cx: Stbtt_int32, cy: Stbtt_int32): Void {\r\n\t\tv.type = type;\r\n\t\tv.x = x;\r\n\t\tv.y = y;\r\n\t\tv.cx = cx;\r\n\t\tv.cy = cy;\r\n\t}\r\n\r\n\tprivate static function stbtt__GetGlyfOffset(info: Stbtt_fontinfo, glyph_index: Int): Int {\r\n\t\tvar g1,g2: Int;\r\n\r\n\t\tif (glyph_index >= info.numGlyphs) return -1; // glyph index out of range\r\n\t\tif (info.indexToLocFormat >= 2)    return -1; // unknown index->glyph map format\r\n\r\n\t\tif (info.indexToLocFormat == 0) {\r\n\t\t\tg1 = info.glyf + ttUSHORT(info.data, info.loca + glyph_index * 2) * 2;\r\n\t\t\tg2 = info.glyf + ttUSHORT(info.data, info.loca + glyph_index * 2 + 2) * 2;\r\n\t\t} else {\r\n\t\t\tg1 = info.glyf + ttULONG (info.data, info.loca + glyph_index * 4);\r\n\t\t\tg2 = info.glyf + ttULONG (info.data, info.loca + glyph_index * 4 + 4);\r\n\t\t}\r\n\r\n\t\treturn g1==g2 ? -1 : g1; // if length is 0, return -1\r\n\t}\r\n\r\n\tpublic static function stbtt_GetGlyphBox(info: Stbtt_fontinfo, glyph_index: Int, rect: Stbtt_temp_rect): Bool {\r\n\t\tvar g: Int = stbtt__GetGlyfOffset(info, glyph_index);\r\n\t\tif (g < 0) return false;\r\n\r\n\t\trect.x0 = ttSHORT(info.data, g + 2);\r\n\t\trect.y0 = ttSHORT(info.data, g + 4);\r\n\t\trect.x1 = ttSHORT(info.data, g + 6);\r\n\t\trect.y1 = ttSHORT(info.data, g + 8);\r\n\t\treturn true;\r\n\t}\r\n\r\n\tpublic static function stbtt_GetCodepointBox(info: Stbtt_fontinfo, codepoint: Int, rect: Stbtt_temp_rect): Bool {\r\n\t\treturn stbtt_GetGlyphBox(info, stbtt_FindGlyphIndex(info,codepoint), rect);\r\n\t}\r\n\r\n\tpublic static function stbtt_IsGlyphEmpty(info: Stbtt_fontinfo, glyph_index: Int): Bool {\r\n\t\tvar numberOfContours: Stbtt_int16;\r\n\t\tvar g: Int = stbtt__GetGlyfOffset(info, glyph_index);\r\n\t\tif (g < 0) return true;\r\n\t\tnumberOfContours = ttSHORT(info.data, g);\r\n\t\treturn numberOfContours == 0;\r\n\t}\r\n\r\n\tprivate static function stbtt__close_shape(vertices: Vector<Stbtt_vertex>, num_vertices: Int, was_off: Bool, start_off: Bool,\r\n    sx: Stbtt_int32, sy: Stbtt_int32, scx: Stbtt_int32, scy: Stbtt_int32, cx: Stbtt_int32, cy: Stbtt_int32): Int {\r\n\t\tif (start_off) {\r\n\t\t\tif (was_off)\r\n\t\t\t\tstbtt_setvertex(vertices[num_vertices++], STBTT_vcurve, (cx+scx)>>1, (cy+scy)>>1, cx,cy);\r\n\t\t\tstbtt_setvertex(vertices[num_vertices++], STBTT_vcurve, sx,sy,scx,scy);\r\n\t\t} else {\r\n\t\t\tif (was_off)\r\n\t\t\t\tstbtt_setvertex(vertices[num_vertices++], STBTT_vcurve,sx,sy,cx,cy);\r\n\t\t\telse\r\n\t\t\t\tstbtt_setvertex(vertices[num_vertices++], STBTT_vline,sx,sy,0,0);\r\n\t\t}\r\n\t\treturn num_vertices;\r\n\t}\r\n\t\r\n\tprivate static function copyVertices(from: Vector<Stbtt_vertex>, to: Vector<Stbtt_vertex>, offset: Int, count: Int): Void {\r\n\t\tfor (i in 0...count) {\r\n\t\t\tto[offset + i] = from[i];\r\n\t\t}\r\n\t}\r\n\t\r\n\tpublic static function stbtt_GetGlyphShape(info: Stbtt_fontinfo, glyph_index: Int): Vector<Stbtt_vertex> {\r\n\t\tvar numberOfContours: Stbtt_int16;\r\n\t\tvar data: Blob = info.data;\r\n\t\tvar vertices: Vector<Stbtt_vertex> = null;\r\n\t\tvar num_vertices: Int = 0;\r\n\t\tvar g: Int = stbtt__GetGlyfOffset(info, glyph_index);\r\n\r\n\t\tif (g < 0) return null;\r\n\r\n\t\tnumberOfContours = ttSHORT(data, g);\r\n\r\n\t\tif (numberOfContours > 0) {\r\n\t\t\tvar flags=0,flagcount: Stbtt_uint8;\r\n\t\t\tvar ins, j = 0, m, n, next_move = 0, off: Stbtt_int32 = 0;\r\n\t\t\tvar was_off: Bool = false;\r\n\t\t\tvar start_off: Bool = false;\r\n\t\t\tvar x,y,cx,cy,sx,sy, scx,scy: Stbtt_int32;\r\n\t\t\tvar endPtsOfContoursOffset: Int = g + 10;\r\n\t\t\tins = ttUSHORT(data, endPtsOfContoursOffset + numberOfContours * 2);\r\n\t\t\tvar pointsIndex: Int = endPtsOfContoursOffset + numberOfContours * 2 + 2 + ins;\r\n\r\n\t\t\tn = 1+ttUSHORT(data, endPtsOfContoursOffset + numberOfContours*2-2);\r\n\r\n\t\t\tm = n + 2*numberOfContours;  // a loose bound on how many vertices we might need\r\n\t\t\tvertices = new Vector<Stbtt_vertex>(m);\r\n\t\t\tif (vertices == null)\r\n\t\t\t\treturn null;\r\n\t\t\telse {\r\n\t\t\t\tfor (i in 0...vertices.length) {\r\n\t\t\t\t\tvertices[i] = new Stbtt_vertex();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tnext_move = 0;\r\n\t\t\tflagcount=0;\r\n\r\n\t\t\t// in first pass, we load uninterpreted data into the allocated array\r\n\t\t\t// above, shifted to the end of the array so we won't overwrite it when\r\n\t\t\t// we create our final data starting from the front\r\n\r\n\t\t\toff = m - n; // starting offset for uninterpreted data, regardless of how m ends up being calculated\r\n\r\n\t\t\t// first load flags\r\n\r\n\t\t\tfor (i in 0...n) {\r\n\t\t\t\tif (flagcount == 0) {\r\n\t\t\t\t\tflags = data.readU8(pointsIndex++);\r\n\t\t\t\t\tif (flags & 8 != 0)\r\n\t\t\t\t\t\tflagcount = data.readU8(pointsIndex++);\r\n\t\t\t\t} else\r\n\t\t\t\t\t--flagcount;\r\n\t\t\t\tvertices[off+i].type = flags;\r\n\t\t\t}\r\n\r\n\t\t\t// now load x coordinates\r\n\t\t\tx = 0;\r\n\t\t\tfor (i in 0...n) {\r\n\t\t\t\tflags = vertices[off+i].type;\r\n\t\t\t\tif (flags & 2 != 0) {\r\n\t\t\t\t\tvar dx: Stbtt_int16 = data.readU8(pointsIndex++);\r\n\t\t\t\t\tx += (flags & 16 != 0) ? dx : -dx; // ???\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (flags & 16 == 0) {\r\n\t\t\t\t\t\tvar value: Stbtt_int16;\r\n\t\t\t\t\t\tvar ch1 = data.readU8(pointsIndex + 0);\r\n\t\t\t\t\t\tvar ch2 = data.readU8(pointsIndex + 1);\r\n\t\t\t\t\t\tvar n = ch2 | (ch1 << 8);\r\n\t\t\t\t\t\tif (n & 0x8000 != 0)\r\n\t\t\t\t\t\t\tvalue = n - 0x10000;\r\n\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\tvalue = n;\r\n\t\t\t\t\t\tx = x + value;\r\n\t\t\t\t\t\tpointsIndex += 2;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tvertices[off+i].x = x;\r\n\t\t\t}\r\n\r\n\t\t\t// now load y coordinates\r\n\t\t\ty = 0;\r\n\t\t\tfor (i in 0...n) {\r\n\t\t\t\tflags = vertices[off+i].type;\r\n\t\t\t\tif (flags & 4 != 0) {\r\n\t\t\t\t\tvar dy: Stbtt_int16 = data.readU8(pointsIndex++);\r\n\t\t\t\t\ty += (flags & 32 != 0) ? dy : -dy; // ???\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (flags & 32 == 0) {\r\n\t\t\t\t\t\tvar value: Stbtt_int16;\r\n\t\t\t\t\t\tvar ch1 = data.readU8(pointsIndex + 0);\r\n\t\t\t\t\t\tvar ch2 = data.readU8(pointsIndex + 1);\r\n\t\t\t\t\t\tvar n = ch2 | (ch1 << 8);\r\n\t\t\t\t\t\tif (n & 0x8000 != 0)\r\n\t\t\t\t\t\t\tvalue = n - 0x10000;\r\n\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\tvalue = n;\r\n\t\t\t\t\t\ty = y + value;\r\n\t\t\t\t\t\tpointsIndex += 2;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tvertices[off+i].y = y;\r\n\t\t\t}\r\n\r\n\t\t\t// now convert them to our format\r\n\t\t\tnum_vertices=0;\r\n\t\t\tsx = sy = cx = cy = scx = scy = 0;\r\n\t\t\tvar i: Int = 0;\r\n\t\t\twhile (i < n) {\r\n\t\t\t\tflags = vertices[off+i].type;\r\n\t\t\t\tx     = vertices[off+i].x;\r\n\t\t\t\ty     = vertices[off+i].y;\r\n\r\n\t\t\t\tif (next_move == i) {\r\n\t\t\t\t\tif (i != 0)\r\n\t\t\t\t\t\tnum_vertices = stbtt__close_shape(vertices, num_vertices, was_off, start_off, sx,sy,scx,scy,cx,cy);\r\n\r\n\t\t\t\t\t// now start the new one               \r\n\t\t\t\t\tstart_off = (flags & 1 == 0);\r\n\t\t\t\t\tif (start_off) {\r\n\t\t\t\t\t\t// if we start off with an off-curve point, then when we need to find a point on the curve\r\n\t\t\t\t\t\t// where we can start, and we need to save some state for when we wraparound.\r\n\t\t\t\t\t\tscx = x;\r\n\t\t\t\t\t\tscy = y;\r\n\t\t\t\t\t\tif (vertices[off+i+1].type & 1 == 0) {\r\n\t\t\t\t\t\t\t// next point is also a curve point, so interpolate an on-point curve\r\n\t\t\t\t\t\t\tsx = (x + vertices[off+i+1].x) >> 1;\r\n\t\t\t\t\t\t\tsy = (y + vertices[off+i+1].y) >> 1;\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t// otherwise just use the next point as our start point\r\n\t\t\t\t\t\t\tsx = vertices[off+i+1].x;\r\n\t\t\t\t\t\t\tsy = vertices[off+i+1].y;\r\n\t\t\t\t\t\t\t++i; // we're using point i+1 as the starting point, so skip it\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tsx = x;\r\n\t\t\t\t\t\tsy = y;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tstbtt_setvertex(vertices[num_vertices++], STBTT_vmove,sx,sy,0,0);\r\n\t\t\t\t\twas_off = false;\r\n\t\t\t\t\tnext_move = 1 + ttUSHORT(data, endPtsOfContoursOffset + j*2);\r\n\t\t\t\t\t++j;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (flags & 1 == 0) { // if it's a curve\r\n\t\t\t\t\t\tif (was_off) // two off-curve control points in a row means interpolate an on-curve midpoint\r\n\t\t\t\t\t\t\tstbtt_setvertex(vertices[num_vertices++], STBTT_vcurve, (cx+x)>>1, (cy+y)>>1, cx, cy);\r\n\t\t\t\t\t\tcx = x;\r\n\t\t\t\t\t\tcy = y;\r\n\t\t\t\t\t\twas_off = true;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tif (was_off)\r\n\t\t\t\t\t\t\tstbtt_setvertex(vertices[num_vertices++], STBTT_vcurve, x,y, cx, cy);\r\n\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\tstbtt_setvertex(vertices[num_vertices++], STBTT_vline, x,y,0,0);\r\n\t\t\t\t\t\twas_off = false;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t++i;\r\n\t\t\t}\r\n\t\t\tnum_vertices = stbtt__close_shape(vertices, num_vertices, was_off, start_off, sx,sy,scx,scy,cx,cy);\r\n\t\t} else if (numberOfContours == -1) {\r\n\t\t\t// Compound shapes.\r\n\t\t\tvar more: Int = 1;\r\n\t\t\tvar compIndex: Int = g + 10;\r\n\t\t\tnum_vertices = 0;\r\n\t\t\tvertices = null;\r\n\t\t\twhile (more != 0) {\r\n\t\t\t\tvar flags, gidx: Stbtt_uint16;\r\n\t\t\t\tvar comp_num_verts = 0, i: Int;\r\n\t\t\t\tvar comp_verts: Vector<Stbtt_vertex> = null;\r\n\t\t\t\tvar tmp: Vector<Stbtt_vertex> = null;\r\n\t\t\t\tvar mtx0: Float = 1;\r\n\t\t\t\tvar mtx1: Float = 0;\r\n\t\t\t\tvar mtx2: Float = 0;\r\n\t\t\t\tvar mtx3: Float = 1;\r\n\t\t\t\tvar mtx4: Float = 0;\r\n\t\t\t\tvar mtx5: Float = 0;\r\n\t\t\t\tvar m, n: Float;\r\n\r\n\t\t\t\tflags = ttSHORT(data, compIndex); compIndex+=2;\r\n\t\t\t\tgidx = ttSHORT(data, compIndex); compIndex+=2;\r\n\r\n\t\t\t\tif (flags & 2 != 0) { // XY values\r\n\t\t\t\t\tif (flags & 1 != 0) { // shorts\r\n\t\t\t\t\t\tmtx4 = ttSHORT(data, compIndex); compIndex+=2;\r\n\t\t\t\t\t\tmtx5 = ttSHORT(data, compIndex); compIndex+=2;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tmtx4 = ttCHAR(data, compIndex); compIndex+=1;\r\n\t\t\t\t\t\tmtx5 = ttCHAR(data, compIndex); compIndex+=1;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\t// @TODO handle matching point\r\n\t\t\t\t\tSTBTT_assert(false);\r\n\t\t\t\t}\r\n\t\t\t\tif (flags & (1<<3) != 0) { // WE_HAVE_A_SCALE\r\n\t\t\t\t\tmtx0 = mtx3 = ttSHORT(data, compIndex)/16384.0; compIndex+=2;\r\n\t\t\t\t\tmtx1 = mtx2 = 0;\r\n\t\t\t\t} else if (flags & (1<<6) != 0) { // WE_HAVE_AN_X_AND_YSCALE\r\n\t\t\t\t\tmtx0 = ttSHORT(data, compIndex)/16384.0; compIndex+=2;\r\n\t\t\t\t\tmtx1 = mtx2 = 0;\r\n\t\t\t\t\tmtx3 = ttSHORT(data, compIndex)/16384.0; compIndex+=2;\r\n\t\t\t\t} else if (flags & (1<<7) != 0) { // WE_HAVE_A_TWO_BY_TWO\r\n\t\t\t\t\tmtx0 = ttSHORT(data, compIndex)/16384.0; compIndex+=2;\r\n\t\t\t\t\tmtx1 = ttSHORT(data, compIndex)/16384.0; compIndex+=2;\r\n\t\t\t\t\tmtx2 = ttSHORT(data, compIndex)/16384.0; compIndex+=2;\r\n\t\t\t\t\tmtx3 = ttSHORT(data, compIndex)/16384.0; compIndex+=2;\r\n\t\t\t\t}\r\n\t\t \r\n\t\t\t\t// Find transformation scales.\r\n\t\t\t\tm = Math.sqrt(mtx0*mtx0 + mtx1*mtx1);\r\n\t\t\t\tn = Math.sqrt(mtx2*mtx2 + mtx3*mtx3);\r\n\r\n\t\t\t\t// Get indexed glyph.\r\n\t\t\t\tcomp_verts = stbtt_GetGlyphShape(info, gidx);\r\n\t\t\t\tcomp_num_verts = comp_verts == null ? 0 : comp_verts.length;\r\n\t\t\t\tif (comp_num_verts > 0) {\r\n\t\t\t\t\t// Transform vertices.\r\n\t\t\t\t\tfor (i in 0...comp_num_verts) {\r\n\t\t\t\t\t\tvar v: Stbtt_vertex = comp_verts[i];\r\n\t\t\t\t\t\tvar x,y: Stbtt_int16;\r\n\t\t\t\t\t\tx=v.x; y=v.y;\r\n\t\t\t\t\t\tv.x = Std.int(m * (mtx0*x + mtx2*y + mtx4));\r\n\t\t\t\t\t\tv.y = Std.int(n * (mtx1*x + mtx3*y + mtx5));\r\n\t\t\t\t\t\tx=v.cx; y=v.cy;\r\n\t\t\t\t\t\tv.cx = Std.int(m * (mtx0*x + mtx2*y + mtx4));\r\n\t\t\t\t\t\tv.cy = Std.int(n * (mtx1*x + mtx3*y + mtx5));\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// Append vertices.\r\n\t\t\t\t\ttmp = new Vector<Stbtt_vertex>(num_vertices+comp_num_verts);\r\n\t\t\t\t\tif (tmp == null) {\r\n\t\t\t\t\t\treturn null;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (num_vertices > 0) copyVertices(vertices, tmp, 0, num_vertices);\r\n\t\t\t\t\tcopyVertices(comp_verts, tmp, num_vertices, comp_num_verts);\r\n\t\t\t\t\tvertices = tmp;\r\n\t\t\t\t\tnum_vertices += comp_num_verts;\r\n\t\t\t\t}\r\n\t\t\t\t// More components ?\r\n\t\t\t\tmore = flags & (1<<5);\r\n\t\t\t}\r\n\t\t} else if (numberOfContours < 0) {\r\n\t\t\t// @TODO other compound variations?\r\n\t\t\tSTBTT_assert(false);\r\n\t\t} else {\r\n\t\t\t// numberOfCounters == 0, do nothing\r\n\t\t}\r\n\r\n\t\tif (vertices == null) return null;\r\n\t\tSTBTT_assert(vertices.length >= num_vertices);\r\n\t\tif (num_vertices < vertices.length) {\r\n\t\t\tvar tmp = new Vector<Stbtt_vertex>(num_vertices);\r\n\t\t\tcopyVertices(vertices, tmp, 0, num_vertices);\r\n\t\t\treturn tmp;\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn vertices;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic static function stbtt_GetGlyphHMetrics(info: Stbtt_fontinfo, glyph_index: Int): Stbtt_temp_glyph_h_metrics {\r\n\t\tvar numOfLongHorMetrics: Stbtt_uint16 = ttUSHORT(info.data, info.hhea + 34);\r\n\t\tvar metrics = new Stbtt_temp_glyph_h_metrics();\r\n\t\tif (glyph_index < numOfLongHorMetrics) {\r\n\t\t\tmetrics.advanceWidth    = ttSHORT(info.data, info.hmtx + 4*glyph_index);\r\n\t\t\tmetrics.leftSideBearing = ttSHORT(info.data, info.hmtx + 4*glyph_index + 2);\r\n\t\t} else {\r\n\t\t\tmetrics.advanceWidth    = ttSHORT(info.data, info.hmtx + 4*(numOfLongHorMetrics-1));\r\n\t\t\tmetrics.leftSideBearing = ttSHORT(info.data, info.hmtx + 4*numOfLongHorMetrics + 2*(glyph_index - numOfLongHorMetrics));\r\n\t\t}\r\n\t\treturn metrics;\r\n\t}\r\n\r\n\tpublic static function stbtt_GetGlyphKernAdvance(info: Stbtt_fontinfo, glyph1: Int, glyph2: Int): Int {\r\n\t\tvar kern: Int = info.kern;\r\n\t\tvar data: Blob = info.data;\r\n\t\tvar needle, straw: Stbtt_uint32;\r\n\t\tvar l, r, m: Int;\r\n\r\n\t\t// we only look at the first table. it must be 'horizontal' and format 0.\r\n\t\tif (info.kern == 0)\r\n\t\t\treturn 0;\r\n\t\tif (ttUSHORT(data, kern + 2) < 1) // number of tables, need at least 1\r\n\t\t\treturn 0;\r\n\t\tif (ttUSHORT(data, kern + 8) != 1) // horizontal flag must be set in format\r\n\t\t\treturn 0;\r\n\r\n\t\tl = 0;\r\n\t\tr = ttUSHORT(data, kern + 10) - 1;\r\n\t\tneedle = glyph1 << 16 | glyph2;\r\n\t\twhile (l <= r) {\r\n\t\t\tm = (l + r) >> 1;\r\n\t\t\tstraw = ttULONG(data, kern + 18+(m*6)); // note: unaligned read\r\n\t\t\tif (needle < straw)\r\n\t\t\t\tr = m - 1;\r\n\t\t\telse if (needle > straw)\r\n\t\t\t\tl = m + 1;\r\n\t\t\telse\r\n\t\t\t\treturn ttSHORT(data, kern + 22+(m*6));\r\n\t\t}\r\n\t\treturn 0;\r\n\t}\r\n\r\n\tpublic static function stbtt_GetCodepointKernAdvance(info: Stbtt_fontinfo, ch1: Int, ch2: Int): Int {\r\n\t\tif (info.kern == 0) // if no kerning table, don't waste time looking up both codepoint->glyphs\r\n\t\t\treturn 0;\r\n\t\treturn stbtt_GetGlyphKernAdvance(info, stbtt_FindGlyphIndex(info,ch1), stbtt_FindGlyphIndex(info,ch2));\r\n\t}\r\n\r\n\tpublic static function stbtt_GetCodepointHMetrics(info: Stbtt_fontinfo, codepoint: Int): Stbtt_temp_glyph_h_metrics {\r\n\t\treturn stbtt_GetGlyphHMetrics(info, stbtt_FindGlyphIndex(info,codepoint));\r\n\t}\r\n\r\n\tpublic static function stbtt_GetFontVMetrics(info: Stbtt_fontinfo): Stbtt_temp_font_v_metrics {\r\n\t\tvar metrics = new Stbtt_temp_font_v_metrics();\r\n\t\tmetrics.ascent  = ttSHORT(info.data, info.hhea + 4);\r\n\t\tmetrics.descent = ttSHORT(info.data, info.hhea + 6);\r\n\t\tmetrics.lineGap = ttSHORT(info.data, info.hhea + 8);\r\n\t\treturn metrics;\r\n\t}\r\n\r\n\tpublic static function stbtt_GetFontBoundingBox(info: Stbtt_fontinfo): Stbtt_temp_rect {\r\n\t\tvar rect = new Stbtt_temp_rect();\r\n\t\trect.x0 = ttSHORT(info.data, info.head + 36);\r\n\t\trect.y0 = ttSHORT(info.data, info.head + 38);\r\n\t\trect.x1 = ttSHORT(info.data, info.head + 40);\r\n\t\trect.y1 = ttSHORT(info.data, info.head + 42);\r\n\t\treturn rect;\r\n\t}\r\n\r\n\tpublic static function stbtt_ScaleForPixelHeight(info: Stbtt_fontinfo, height: Float): Float {\r\n\t\tvar fheight: Int = ttSHORT(info.data, info.hhea + 4) - ttSHORT(info.data, info.hhea + 6);\r\n\t\treturn height / fheight;\r\n\t}\r\n\r\n\tpublic static function stbtt_ScaleForMappingEmToPixels(info: Stbtt_fontinfo, pixels: Float): Float {\r\n\t\tvar unitsPerEm: Int = ttUSHORT(info.data, info.head + 18);\r\n\t\treturn pixels / unitsPerEm;\r\n\t}\r\n\r\n//////////////////////////////////////////////////////////////////////////////\r\n//\r\n// antialiasing software rasterizer\r\n//\r\n\r\n\tpublic static function stbtt_GetGlyphBitmapBoxSubpixel(font: Stbtt_fontinfo, glyph: Int, scale_x: Float, scale_y: Float, shift_x: Float, shift_y: Float): Stbtt_temp_rect {\r\n\t\tvar rect = new Stbtt_temp_rect();\r\n\t\tif (!stbtt_GetGlyphBox(font, glyph, rect)) {\r\n\t\t\t// e.g. space character\r\n\t\t\trect.x0 = 0;\r\n\t\t\trect.y0 = 0;\r\n\t\t\trect.x1 = 0;\r\n\t\t\trect.y1 = 0;\r\n\t\t} else {\r\n\t\t\t// move to integral bboxes (treating pixels as little squares, what pixels get touched)?\r\n\t\t\tvar x0 = rect.x0;\r\n\t\t\tvar x1 = rect.x1;\r\n\t\t\tvar y0 = rect.y0;\r\n\t\t\tvar y1 = rect.y1;\r\n\t\t\trect.x0 = Math.floor( x0 * scale_x + shift_x);\r\n\t\t\trect.y0 = Math.floor(-y1 * scale_y + shift_y);\r\n\t\t\trect.x1 = Math.ceil( x1 * scale_x + shift_x);\r\n\t\t\trect.y1 = Math.ceil(-y0 * scale_y + shift_y);\r\n\t\t}\r\n\t\treturn rect;\r\n\t}\r\n\r\n\tpublic static function stbtt_GetGlyphBitmapBox(font: Stbtt_fontinfo, glyph: Int, scale_x: Float, scale_y: Float): Stbtt_temp_rect {\r\n\t\treturn stbtt_GetGlyphBitmapBoxSubpixel(font, glyph, scale_x, scale_y,0.0,0.0);\r\n\t}\r\n\r\n\tpublic static function stbtt_GetCodepointBitmapBoxSubpixel(font: Stbtt_fontinfo, codepoint: Int, scale_x: Float, scale_y: Float, shift_x: Float, shift_y: Float): Stbtt_temp_rect {\r\n\t\treturn stbtt_GetGlyphBitmapBoxSubpixel(font, stbtt_FindGlyphIndex(font,codepoint), scale_x, scale_y,shift_x,shift_y);\r\n\t}\r\n\r\n\tpublic static function stbtt_GetCodepointBitmapBox(font: Stbtt_fontinfo, codepoint: Int, scale_x: Float, scale_y: Float): Stbtt_temp_rect {\r\n\t\treturn stbtt_GetCodepointBitmapBoxSubpixel(font, codepoint, scale_x, scale_y,0.0,0.0);\r\n\t}\r\n\r\n\t//////////////////////////////////////////////////////////////////////////////\r\n\t//\r\n\t//  Rasterizer\r\n\r\n\tprivate static function stbtt__new_active(e: Vector<Stbtt__edge>, eIndex: Int, off_x: Int, start_point: Float): Stbtt__active_edge {\r\n\t\tvar z: Stbtt__active_edge = new Stbtt__active_edge();\r\n\t\tvar dxdy: Float = (e[eIndex].x1 - e[eIndex].x0) / (e[eIndex].y1 - e[eIndex].y0);\r\n\t\t//STBTT_assert(e->y0 <= start_point);\r\n\t\tif (z == null) return z;\r\n\t\tz.fdx = dxdy;\r\n\t\tz.fdy = dxdy != 0.0 ? (1.0/dxdy) : 0.0;\r\n\t\tz.fx = e[eIndex].x0 + dxdy * (start_point - e[eIndex].y0);\r\n\t\tz.fx -= off_x;\r\n\t\tz.direction = e[eIndex].invert ? 1.0 : -1.0;\r\n\t\tz.sy = e[eIndex].y0;\r\n\t\tz.ey = e[eIndex].y1;\r\n\t\tz.next = null;\r\n\t\treturn z;\r\n\t}\r\n\r\n\t// the edge passed in here does not cross the vertical line at x or the vertical line at x+1\r\n\t// (i.e. it has already been clipped to those)\r\n\tprivate static function stbtt__handle_clipped_edge(scanline: Vector<Float>, scanlineIndex: Int, x: Int, e: Stbtt__active_edge, x0: Float, y0: Float, x1: Float, y1: Float): Void {\r\n\t\tif (y0 == y1) return;\r\n\t\tSTBTT_assert(y0 < y1);\r\n\t\tSTBTT_assert(e.sy <= e.ey);\r\n\t\tif (y0 > e.ey) return;\r\n\t\tif (y1 < e.sy) return;\r\n\t\tif (y0 < e.sy) {\r\n\t\t\tx0 += (x1-x0) * (e.sy - y0) / (y1-y0);\r\n\t\t\ty0 = e.sy;\r\n\t\t}\r\n\t\tif (y1 > e.ey) {\r\n\t\t\tx1 += (x1-x0) * (e.ey - y1) / (y1-y0);\r\n\t\t\ty1 = e.ey;\r\n\t\t}\r\n\r\n\t\tif (x0 == x)\r\n\t\t\tSTBTT_assert(x1 <= x+1);\r\n\t\telse if (x0 == x+1)\r\n\t\t\tSTBTT_assert(x1 >= x);\r\n\t\telse if (x0 <= x)\r\n\t\t\tSTBTT_assert(x1 <= x);\r\n\t\telse if (x0 >= x+1)\r\n\t\t\tSTBTT_assert(x1 >= x+1);\r\n\t\telse\r\n\t\t\tSTBTT_assert(x1 >= x && x1 <= x+1);\r\n\r\n\t\tif (x0 <= x && x1 <= x)\r\n\t\t\tscanline[scanlineIndex + x] += e.direction * (y1-y0);\r\n\t\telse if (x0 >= x + 1 && x1 >= x + 1) {\r\n\t\t\t\r\n\t\t} else {\r\n\t\t\tSTBTT_assert(x0 >= x && x0 <= x+1 && x1 >= x && x1 <= x+1);\r\n\t\t\tscanline[scanlineIndex + x] += e.direction * (y1-y0) * (1-((x0-x)+(x1-x))/2); // coverage = 1 - average x position\r\n\t\t}\r\n\t}\r\n\r\n\tprivate static function stbtt__fill_active_edges_new(scanline: Vector<Float>, scanline_fill: Vector<Float>, scanline_fillIndex: Int, len: Int, e: Stbtt__active_edge, y_top: Float): Void {\r\n\t\tvar y_bottom: Float = y_top+1;\r\n\r\n\t\twhile (e != null) {\r\n\t\t\t// brute force every pixel\r\n\r\n\t\t\t// compute intersection points with top & bottom\r\n\t\t\tSTBTT_assert(e.ey >= y_top);\r\n\r\n\t\t\tif (e.fdx == 0) {\r\n\t\t\t\tvar x0: Float = e.fx;\r\n\t\t\t\tif (x0 < len) {\r\n\t\t\t\t\tif (x0 >= 0) {\r\n\t\t\t\t\t\tstbtt__handle_clipped_edge(scanline, 0, Std.int(x0),e, x0,y_top, x0,y_bottom);\r\n\t\t\t\t\t\tstbtt__handle_clipped_edge(scanline_fill, scanline_fillIndex - 1, Std.int(x0+1),e, x0,y_top, x0,y_bottom);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tstbtt__handle_clipped_edge(scanline_fill, scanline_fillIndex - 1, 0,e, x0,y_top, x0,y_bottom);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tvar x0: Float = e.fx;\r\n\t\t\t\tvar dx: Float = e.fdx;\r\n\t\t\t\tvar xb: Float = x0 + dx;\r\n\t\t\t\tvar x_top, x_bottom: Float;\r\n\t\t\t\tvar sy0,sy1: Float;\r\n\t\t\t\tvar dy: Float = e.fdy;\r\n\t\t\t\tSTBTT_assert(e.sy <= y_bottom && e.ey >= y_top);\r\n\r\n\t\t\t\t// compute endpoints of line segment clipped to this scanline (if the\r\n\t\t\t\t// line segment starts on this scanline. x0 is the intersection of the\r\n\t\t\t\t// line with y_top, but that may be off the line segment.\r\n\t\t\t\tif (e.sy > y_top) {\r\n\t\t\t\t\tx_top = x0 + dx * (e.sy - y_top);\r\n\t\t\t\t\tsy0 = e.sy;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tx_top = x0;\r\n\t\t\t\t\tsy0 = y_top;\r\n\t\t\t\t}\r\n\t\t\t\tif (e.ey < y_bottom) {\r\n\t\t\t\t\tx_bottom = x0 + dx * (e.ey - y_top);\r\n\t\t\t\t\tsy1 = e.ey;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tx_bottom = xb;\r\n\t\t\t\t\tsy1 = y_bottom;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (x_top >= 0 && x_bottom >= 0 && x_top < len && x_bottom < len) {\r\n\t\t\t\t\t// from here on, we don't have to range check x values\r\n\r\n\t\t\t\t\tif (Std.int(x_top) == Std.int(x_bottom)) {\r\n\t\t\t\t\t\tvar height: Float;\r\n\t\t\t\t\t\t// simple case, only spans one pixel\r\n\t\t\t\t\t\tvar x: Int = Std.int(x_top);\r\n\t\t\t\t\t\theight = sy1 - sy0;\r\n\t\t\t\t\t\tSTBTT_assert(x >= 0 && x < len);\r\n\t\t\t\t\t\tscanline[x] += e.direction * (1-((x_top - x) + (x_bottom-x))/2)  * height;\r\n\t\t\t\t\t\tscanline_fill[scanline_fillIndex + x] += e.direction * height; // everything right of this pixel is filled\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tvar x,x1,x2: Int;\r\n\t\t\t\t\t\tvar y_crossing, step, sign, area: Float;\r\n\t\t\t\t\t\t// covers 2+ pixels\r\n\t\t\t\t\t\tif (x_top > x_bottom) {\r\n\t\t\t\t\t\t\t// flip scanline vertically; signed area is the same\r\n\t\t\t\t\t\t\tvar t: Float;\r\n\t\t\t\t\t\t\tsy0 = y_bottom - (sy0 - y_top);\r\n\t\t\t\t\t\t\tsy1 = y_bottom - (sy1 - y_top);\r\n\t\t\t\t\t\t\tt = sy0; sy0 = sy1; sy1 = t;\r\n\t\t\t\t\t\t\tt = x_bottom; x_bottom = x_top; x_top = t;\r\n\t\t\t\t\t\t\tdx = -dx;\r\n\t\t\t\t\t\t\tdy = -dy;\r\n\t\t\t\t\t\t\tt = x0; x0 = xb; xb = t;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tx1 = Std.int(x_top);\r\n\t\t\t\t\t\tx2 = Std.int(x_bottom);\r\n\t\t\t\t\t\t// compute intersection with y axis at x1+1\r\n\t\t\t\t\t\ty_crossing = (x1+1 - x0) * dy + y_top;\r\n\r\n\t\t\t\t\t\tsign = e.direction;\r\n\t\t\t\t\t\t// area of the rectangle covered from y0..y_crossing\r\n\t\t\t\t\t\tarea = sign * (y_crossing-sy0);\r\n\t\t\t\t\t\t// area of the triangle (x_top,y0), (x+1,y0), (x+1,y_crossing)\r\n\t\t\t\t\t\tscanline[x1] += area * (1-((x_top - x1)+(x1+1-x1))/2);\r\n\r\n\t\t\t\t\t\tstep = sign * dy;\r\n\t\t\t\t\t\tfor (x in x1 + 1...x2) {\r\n\t\t\t\t\t\t\tscanline[x] += area + step/2;\r\n\t\t\t\t\t\t\tarea += step;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\ty_crossing += dy * (x2 - (x1+1));\r\n\r\n\t\t\t\t\t\tSTBTT_assert(Math.abs(area) <= 1.01);\r\n\r\n\t\t\t\t\t\tscanline[x2] += area + sign * (1-((x2-x2)+(x_bottom-x2))/2) * (sy1-y_crossing);\r\n\r\n\t\t\t\t\t\tscanline_fill[scanline_fillIndex + x2] += sign * (sy1-sy0);\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// if edge goes outside of box we're drawing, we require\r\n\t\t\t\t\t// clipping logic. since this does not match the intended use\r\n\t\t\t\t\t// of this library, we use a different, very slow brute\r\n\t\t\t\t\t// force implementation\r\n\t\t\t\t\tfor (x in 0...len) {\r\n\t\t\t\t\t\t// cases:\r\n\t\t\t\t\t\t//\r\n\t\t\t\t\t\t// there can be up to two intersections with the pixel. any intersection\r\n\t\t\t\t\t\t// with left or right edges can be handled by splitting into two (or three)\r\n\t\t\t\t\t\t// regions. intersections with top & bottom do not necessitate case-wise logic.\r\n\t\t\t\t\t\t//\r\n\t\t\t\t\t\t// the old way of doing this found the intersections with the left & right edges,\r\n\t\t\t\t\t\t// then used some simple logic to produce up to three segments in sorted order\r\n\t\t\t\t\t\t// from top-to-bottom. however, this had a problem: if an x edge was epsilon\r\n\t\t\t\t\t\t// across the x border, then the corresponding y position might not be distinct\r\n\t\t\t\t\t\t// from the other y segment, and it might ignored as an empty segment. to avoid\r\n\t\t\t\t\t\t// that, we need to explicitly produce segments based on x positions.\r\n\r\n\t\t\t\t\t\t// rename variables to clear pairs\r\n\t\t\t\t\t\tvar y0: Float = y_top;\r\n\t\t\t\t\t\tvar x1: Float = x;\r\n\t\t\t\t\t\tvar x2: Float = x+1;\r\n\t\t\t\t\t\tvar x3: Float = xb;\r\n\t\t\t\t\t\tvar y3: Float = y_bottom;\r\n\t\t\t\t\t\tvar y1,y2: Float;\r\n\r\n\t\t\t\t\t\t// x = e->x + e->dx * (y-y_top)\r\n\t\t\t\t\t\t// (y-y_top) = (x - e->x) / e->dx\r\n\t\t\t\t\t\t// y = (x - e->x) / e->dx + y_top\r\n\t\t\t\t\t\ty1 = (x - x0) / dx + y_top;\r\n\t\t\t\t\t\ty2 = (x+1 - x0) / dx + y_top;\r\n\r\n\t\t\t\t\t\tif (x0 < x1 && x3 > x2) {         // three segments descending down-right\r\n\t\t\t\t\t\t\tstbtt__handle_clipped_edge(scanline,0,x,e, x0,y0, x1,y1);\r\n\t\t\t\t\t\t\tstbtt__handle_clipped_edge(scanline,0,x,e, x1,y1, x2,y2);\r\n\t\t\t\t\t\t\tstbtt__handle_clipped_edge(scanline,0,x,e, x2,y2, x3,y3);\r\n\t\t\t\t\t\t} else if (x3 < x1 && x0 > x2) {  // three segments descending down-left\r\n\t\t\t\t\t\t\tstbtt__handle_clipped_edge(scanline,0,x,e, x0,y0, x2,y2);\r\n\t\t\t\t\t\t\tstbtt__handle_clipped_edge(scanline,0,x,e, x2,y2, x1,y1);\r\n\t\t\t\t\t\t\tstbtt__handle_clipped_edge(scanline,0,x,e, x1,y1, x3,y3);\r\n\t\t\t\t\t\t} else if (x0 < x1 && x3 > x1) {  // two segments across x, down-right\r\n\t\t\t\t\t\t\tstbtt__handle_clipped_edge(scanline,0,x,e, x0,y0, x1,y1);\r\n\t\t\t\t\t\t\tstbtt__handle_clipped_edge(scanline,0,x,e, x1,y1, x3,y3);\r\n\t\t\t\t\t\t} else if (x3 < x1 && x0 > x1) {  // two segments across x, down-left\r\n\t\t\t\t\t\t\tstbtt__handle_clipped_edge(scanline,0,x,e, x0,y0, x1,y1);\r\n\t\t\t\t\t\t\tstbtt__handle_clipped_edge(scanline,0,x,e, x1,y1, x3,y3);\r\n\t\t\t\t\t\t} else if (x0 < x2 && x3 > x2) {  // two segments across x+1, down-right\r\n\t\t\t\t\t\t\tstbtt__handle_clipped_edge(scanline,0,x,e, x0,y0, x2,y2);\r\n\t\t\t\t\t\t\tstbtt__handle_clipped_edge(scanline,0,x,e, x2,y2, x3,y3);\r\n\t\t\t\t\t\t} else if (x3 < x2 && x0 > x2) {  // two segments across x+1, down-left\r\n\t\t\t\t\t\t\tstbtt__handle_clipped_edge(scanline,0,x,e, x0,y0, x2,y2);\r\n\t\t\t\t\t\t\tstbtt__handle_clipped_edge(scanline,0,x,e, x2,y2, x3,y3);\r\n\t\t\t\t\t\t} else {  // one segment\r\n\t\t\t\t\t\t\tstbtt__handle_clipped_edge(scanline,0,x,e, x0,y0, x3,y3);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\te = e.next;\r\n\t\t}\r\n\t}\r\n\r\n\t// directly AA rasterize edges w/o supersampling\r\n\tprivate static function stbtt__rasterize_sorted_edges(result: Stbtt__bitmap, e: Vector<Stbtt__edge>, n: Int, vsubsample: Int, off_x: Int, off_y: Int): Void {\r\n\t\tvar active: Stbtt__active_edge = null;\r\n\t\tvar y: Int, j: Int = 0, i: Int;\r\n\t\tvar scanline: Vector<Float>, scanline2: Vector<Float>;\r\n\t\tvar scanline2Index: Int = 0;\r\n\t\tvar eIndex: Int = 0;\r\n\r\n\t\tif (result.w > 64)\r\n\t\t\tscanline = new Vector<Float>(result.w * 2 + 1);\r\n\t\telse\r\n\t\t\tscanline = new Vector<Float>(129);\r\n\r\n\t\tscanline2 = scanline;\r\n\t\tscanline2Index = result.w;\r\n\r\n\t\ty = off_y;\r\n\t\te[eIndex + n].y0 = (off_y + result.h) + 1;\r\n\r\n\t\twhile (j < result.h) {\r\n\t\t\t// find center of pixel for this scanline\r\n\t\t\tvar scan_y_top: Float = y + 0.0;\r\n\t\t\tvar scan_y_bottom: Float = y + 1.0;\r\n\t\t\tvar step = { value: active, parent: null };\r\n\r\n\t\t\tfor (i in 0...result.w) scanline[i] = 0;\r\n\t\t\tfor (i in 0...result.w + 1) scanline2[scanline2Index + i] = 0;\r\n\r\n\t\t\t// update all active edges;\r\n\t\t\t// remove all active edges that terminate before the top of this scanline\r\n\t\t\twhile (step.value != null) {\r\n\t\t\t\tvar z: Stbtt__active_edge = step.value;\r\n\t\t\t\tif (z.ey <= scan_y_top) {\r\n\t\t\t\t\t// delete from list\r\n\t\t\t\t\tif (step.parent == null) {\r\n\t\t\t\t\t\tactive = z.next;\r\n\t\t\t\t\t\tstep.value = z.next;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tstep.parent.next = z.next;\r\n\t\t\t\t\t\tstep.value = z.next;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tSTBTT_assert(z.direction != 0);\r\n\t\t\t\t\tz.direction = 0;\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// advance through list\r\n\t\t\t\t\tstep.parent = step.value;\r\n\t\t\t\t\tstep.value = step.value.next;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// insert all edges that start before the bottom of this scanline\r\n\t\t\twhile (e[eIndex].y0 <= scan_y_bottom) {\r\n\t\t\t\tif (e[eIndex].y0 != e[eIndex].y1) {\r\n\t\t\t\t\tvar z: Stbtt__active_edge = stbtt__new_active(e, eIndex, off_x, scan_y_top);\r\n\t\t\t\t\tSTBTT_assert(z.ey >= scan_y_top);\r\n\t\t\t\t\t// insert at front\r\n\t\t\t\t\tz.next = active;\r\n\t\t\t\t\tactive = z;\r\n\t\t\t\t}\r\n\t\t\t\t++eIndex;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t// now process all active edges\r\n\t\t\tif (active != null)\r\n\t\t\t\tstbtt__fill_active_edges_new(scanline, scanline2, scanline2Index + 1, result.w, active, scan_y_top);\r\n\r\n\t\t\t{\r\n\t\t\t\tvar sum: Float = 0;\r\n\t\t\t\tfor (i in 0...result.w) {\r\n\t\t\t\t\tvar k: Float;\r\n\t\t\t\t\tvar m: Int;\r\n\t\t\t\t\tsum += scanline2[scanline2Index + i];\r\n\t\t\t\t\tk = scanline[i] + sum;\r\n\t\t\t\t\tk = Math.abs(k) * 255.0 + 0.5;\r\n\t\t\t\t\tm = Std.int(k);\r\n\t\t\t\t\tif (m > 255) m = 255;\r\n\t\t\t\t\tresult.pixels.writeU8(result.pixels_offset + j * result.stride + i, m);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// advance all the edges\r\n\t\t\tstep.parent = null;\r\n\t\t\tstep.value = active;\r\n\t\t\twhile (step.value != null) {\r\n\t\t\t\tvar z: Stbtt__active_edge = step.value;\r\n\t\t\t\tz.fx += z.fdx; // advance to position for current scanline\r\n\t\t\t\t// advance through list\r\n\t\t\t\tstep.parent = step.value;\r\n\t\t\t\tstep.value = step.value.next;\r\n\t\t\t}\r\n\r\n\t\t\t++y;\r\n\t\t\t++j;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate static function STBTT__COMPARE(a: Stbtt__edge, b: Stbtt__edge): Bool { return a.y0 < b.y0; }\r\n\r\n\tprivate static function stbtt__sort_edges_ins_sort(p: Vector<Stbtt__edge>, n: Int): Void {\r\n\t\tvar i: Int, j: Int;\r\n\t\tfor (i in 1...n) {\r\n\t\t\tvar t: Stbtt__edge = p[i];\r\n\t\t\tvar a: Stbtt__edge = t;\r\n\t\t\tj = i;\r\n\t\t\twhile (j > 0) {\r\n\t\t\t\tvar b: Stbtt__edge = p[j-1];\r\n\t\t\t\tvar c: Bool = STBTT__COMPARE(a,b);\r\n\t\t\t\tif (!c) break;\r\n\t\t\t\tp[j] = p[j-1];\r\n\t\t\t\t--j;\r\n\t\t\t}\r\n\t\t\tif (i != j)\r\n\t\t\t\tp[j] = t;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate static function stbtt__sort_edges_quicksort(p: Vector<Stbtt__edge>, pIndex: Int, n: Int): Void {\r\n\t\t// threshhold for transitioning to insertion sort\r\n\t\twhile (n > 12) {\r\n\t\t\tvar t: Stbtt__edge;\r\n\t\t\tvar c01: Bool, c12: Bool, c: Bool;\r\n\t\t\tvar m: Int, i: Int, j: Int;\r\n\r\n\t\t\t// compute median of three\r\n\t\t\tm = n >> 1;\r\n\t\t\tc01 = STBTT__COMPARE(p[pIndex + 0],p[pIndex + m]);\r\n\t\t\tc12 = STBTT__COMPARE(p[pIndex + m],p[pIndex + n-1]);\r\n\t\t\t// if 0 >= mid >= end, or 0 < mid < end, then use mid\r\n\t\t\tif (c01 != c12) {\r\n\t\t\t\t// otherwise, we'll need to swap something else to middle\r\n\t\t\t\tvar z: Int;\r\n\t\t\t\tc = STBTT__COMPARE(p[pIndex + 0],p[pIndex + n-1]);\r\n\t\t\t\t// 0>mid && mid<n:  0>n => n; 0<n => 0\r\n\t\t\t\t// 0<mid && mid>n:  0>n => 0; 0<n => n\r\n\t\t\t\tz = (c == c12) ? 0 : n-1;\r\n\t\t\t\tt = p[pIndex + z];\r\n\t\t\t\tp[pIndex + z] = p[pIndex + m];\r\n\t\t\t\tp[pIndex + m] = t;\r\n\t\t\t}\r\n\t\t\t// now p[m] is the median-of-three\r\n\t\t\t// swap it to the beginning so it won't move around\r\n\t\t\tt = p[pIndex + 0];\r\n\t\t\tp[pIndex + 0] = p[pIndex + m];\r\n\t\t\tp[pIndex + m] = t;\r\n\r\n\t\t\t// partition loop\r\n\t\t\ti=1;\r\n\t\t\tj=n-1;\r\n\t\t\twhile (true) {\r\n\t\t\t\t// handling of equality is crucial here\r\n\t\t\t\t// for sentinels & efficiency with duplicates\r\n\t\t\t\twhile (true) {\r\n\t\t\t\t\tif (!STBTT__COMPARE(p[pIndex + i], p[pIndex + 0])) break;\r\n\t\t\t\t\t++i;\r\n\t\t\t\t}\r\n\t\t\t\twhile (true) {\r\n\t\t\t\t\tif (!STBTT__COMPARE(p[pIndex + 0], p[pIndex + j])) break;\r\n\t\t\t\t\t--j;\r\n\t\t\t\t}\r\n\t\t\t\t// make sure we haven't crossed\r\n\t\t\t\tif (i >= j) break;\r\n\t\t\t\tt = p[pIndex + i];\r\n\t\t\t\tp[pIndex + i] = p[pIndex + j];\r\n\t\t\t\tp[pIndex + j] = t;\r\n\r\n\t\t\t\t++i;\r\n\t\t\t\t--j;\r\n\t\t\t}\r\n\t\t\t// recurse on smaller side, iterate on larger\r\n\t\t\tif (j < (n-i)) {\r\n\t\t\t\tstbtt__sort_edges_quicksort(p, pIndex, j);\r\n\t\t\t\tpIndex += i;\r\n\t\t\t\tn = n-i;\r\n\t\t\t} else {\r\n\t\t\t\tstbtt__sort_edges_quicksort(p, pIndex + i, n-i);\r\n\t\t\t\tn = j;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprivate static function stbtt__sort_edges(p: Vector<Stbtt__edge>, n: Int): Void {\r\n\t\tstbtt__sort_edges_quicksort(p, 0, n);\r\n\t\tstbtt__sort_edges_ins_sort(p, n);\r\n\t}\r\n\r\n\tprivate static function stbtt__rasterize(result: Stbtt__bitmap, pts: Vector<Stbtt__point>, wcount: Vector<Int>, windings: Int, scale_x: Float, scale_y: Float, shift_x: Float, shift_y: Float, off_x: Int, off_y: Int, invert: Bool): Void {\r\n\t\tvar y_scale_inv: Float = invert ? -scale_y : scale_y;\r\n\t\tvar e: Vector<Stbtt__edge>;\r\n\t\tvar n: Int, i: Int, j: Int, k: Int, m: Int;\r\n\t\tvar vsubsample: Int = 1;\r\n\t\tvar ptsIndex: Int = 0;\r\n\r\n\t\t// vsubsample should divide 255 evenly; otherwise we won't reach full opacity\r\n\r\n\t\t// now we have to blow out the windings into explicit edge lists\r\n\t\tn = 0;\r\n\t\tfor (i in 0...windings)\r\n\t\t\tn += wcount[i];\r\n\r\n\t\te = new Vector<Stbtt__edge>(n + 1); // add an extra one as a sentinel\r\n\t\tif (e == null) return;\r\n\t\telse {\r\n\t\t\tfor (i in 0...e.length) {\r\n\t\t\t\te[i] = new Stbtt__edge();\r\n\t\t\t}\r\n\t\t}\r\n\t\tn = 0;\r\n\r\n\t\tm = 0;\r\n\t\tfor (i in 0...windings) {\r\n\t\t\tvar p: Vector<Stbtt__point> = pts;\r\n\t\t\tvar pIndex: Int = ptsIndex + m;\r\n\t\t\tm += wcount[i];\r\n\t\t\tj = wcount[i] - 1;\r\n\t\t\tfor (k in 0...wcount[i]) {\r\n\t\t\t\tvar a: Int=k,b: Int=j;\r\n\t\t\t\t// skip the edge if horizontal\r\n\t\t\t\tif (p[pIndex + j].y == p[pIndex + k].y) {\r\n\t\t\t\t\tj = k;\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\t// add edge from j to k to the list\r\n\t\t\t\te[n].invert = false;\r\n\t\t\t\tif (invert ? p[pIndex + j].y > p[pIndex + k].y : p[pIndex + j].y < p[pIndex + k].y) {\r\n\t\t\t\t\te[n].invert = true;\r\n\t\t\t\t\ta = j; b = k;\r\n\t\t\t\t}\r\n\t\t\t\te[n].x0 = p[pIndex + a].x * scale_x + shift_x;\r\n\t\t\t\te[n].y0 = (p[pIndex + a].y * y_scale_inv + shift_y) * vsubsample;\r\n\t\t\t\te[n].x1 = p[pIndex + b].x * scale_x + shift_x;\r\n\t\t\t\te[n].y1 = (p[pIndex + b].y * y_scale_inv + shift_y) * vsubsample;\r\n\t\t\t\t++n;\r\n\t\t\t\tj = k;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// now sort the edges by their highest point (should snap to integer, and then by x)\r\n\t\t//STBTT_sort(e, n, sizeof(e[0]), stbtt__edge_compare);\r\n\t\tstbtt__sort_edges(e, n);\r\n\r\n\t\t// now, traverse the scanlines and find the intersections on each scanline, use xor winding rule\r\n\t\tstbtt__rasterize_sorted_edges(result, e, n, vsubsample, off_x, off_y);\r\n\t}\r\n\r\n\tprivate static function stbtt__add_point(points: Vector<Stbtt__point>, n: Int, x: Float, y: Float): Void {\r\n\t\tif (points == null) return; // during first pass, it's unallocated\r\n\t\tpoints[n].x = x;\r\n\t\tpoints[n].y = y;\r\n\t}\r\n\r\n\t// tesselate until threshhold p is happy... @TODO warped to compensate for non-linear stretching\r\n\tprivate static function stbtt__tesselate_curve(points: Vector<Stbtt__point>, num_points: { value: Int }, x0: Float, y0: Float, x1: Float, y1: Float, x2: Float, y2: Float, objspace_flatness_squared: Float, n: Int): Int {\r\n\t\t// midpoint\r\n\t\tvar mx: Float = (x0 + 2*x1 + x2)/4;\r\n\t\tvar my: Float = (y0 + 2*y1 + y2)/4;\r\n\t\t// versus directly drawn line\r\n\t\tvar dx: Float = (x0+x2)/2 - mx;\r\n\t\tvar dy: Float = (y0+y2)/2 - my;\r\n\t\tif (n > 16) // 65536 segments on one curve better be enough!\r\n\t\t\treturn 1;\r\n\t\tif (dx*dx+dy*dy > objspace_flatness_squared) { // half-pixel error allowed... need to be smaller if AA\r\n\t\t\tstbtt__tesselate_curve(points, num_points, x0,y0, (x0+x1)/2.0,(y0+y1)/2.0, mx,my, objspace_flatness_squared,n+1);\r\n\t\t\tstbtt__tesselate_curve(points, num_points, mx,my, (x1+x2)/2.0,(y1+y2)/2.0, x2,y2, objspace_flatness_squared,n+1);\r\n\t\t} else {\r\n\t\t\tstbtt__add_point(points, num_points.value,x2,y2);\r\n\t\t\tnum_points.value = num_points.value+1;\r\n\t\t}\r\n\t\treturn 1;\r\n\t}\r\n\r\n\t// returns number of contours\r\n\tprivate static function stbtt_FlattenCurves(vertices: Vector<Stbtt_vertex>, num_verts: Int, objspace_flatness: Float, contour_lengths: VectorOfIntPointer, num_contours: { value: Int }): Vector<Stbtt__point> {\r\n\t\tvar points: Vector<Stbtt__point>=null;\r\n\t\tvar num_points: Int = 0;\r\n\r\n\t\tvar objspace_flatness_squared: Float = objspace_flatness * objspace_flatness;\r\n\t\tvar i: Int, n: Int = 0, start: Int = 0, pass: Int;\r\n\r\n\t\t// count how many \"moves\" there are to get the contour count\r\n\t\tfor (i in 0...num_verts)\r\n\t\t\tif (vertices[i].type == STBTT_vmove)\r\n\t\t\t\t++n;\r\n\r\n\t\tnum_contours.value = n;\r\n\t\tif (n == 0) return null;\r\n\r\n\t\tcontour_lengths.value = new Vector<Int>(n);\r\n\r\n\t\tif (contour_lengths.value == null) {\r\n\t\t\tnum_contours.value = 0;\r\n\t\t\treturn null;\r\n\t\t}\r\n\r\n\t\t// make two passes through the points so we don't need to realloc\r\n\t\tfor (pass in 0...2) {\r\n\t\t\tvar x: Float = 0, y: Float = 0;\r\n\t\t\tif (pass == 1) {\r\n\t\t\t\tpoints = new Vector<Stbtt__point>(num_points);\r\n\t\t\t\tif (points == null) {\r\n\t\t\t\t\tcontour_lengths.value = null;\r\n\t\t\t\t\tnum_contours.value = 0;\r\n\t\t\t\t\treturn null;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tfor (i in 0...points.length) {\r\n\t\t\t\t\t\tpoints[i] = new Stbtt__point();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tnum_points = 0;\r\n\t\t\tn = -1;\r\n\t\t\tfor (i in 0...num_verts) {\r\n\t\t\t\tswitch (vertices[i].type) {\r\n\t\t\t\t\tcase STBTT_vmove:\r\n\t\t\t\t\t\t// start the next contour\r\n\t\t\t\t\t\tif (n >= 0)\r\n\t\t\t\t\t\t\tcontour_lengths.value[n] = num_points - start;\r\n\t\t\t\t\t\t++n;\r\n\t\t\t\t\t\tstart = num_points;\r\n\r\n\t\t\t\t\t\tx = vertices[i].x; y = vertices[i].y;\r\n\t\t\t\t\t\tstbtt__add_point(points, num_points++, x,y);\r\n\t\t\t\t\tcase STBTT_vline:\r\n\t\t\t\t\t\tx = vertices[i].x; y = vertices[i].y;\r\n\t\t\t\t\t\tstbtt__add_point(points, num_points++, x, y);\r\n\t\t\t\t\tcase STBTT_vcurve:\r\n\t\t\t\t\t\tvar num_points_reference = { value: num_points };\r\n\t\t\t\t\t\tstbtt__tesselate_curve(points, num_points_reference, x, y,\r\n\t\t\t\t\t\t\tvertices[i].cx, vertices[i].cy,\r\n\t\t\t\t\t\t\tvertices[i].x,  vertices[i].y,\r\n\t\t\t\t\t\t\tobjspace_flatness_squared, 0);\r\n\t\t\t\t\t\tnum_points = num_points_reference.value;\r\n\t\t\t\t\t\tx = vertices[i].x; y = vertices[i].y;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tcontour_lengths.value[n] = num_points - start;\r\n\t\t}\r\n\r\n\t\treturn points;\r\n\t}\r\n\r\n\tpublic static function stbtt_Rasterize(result: Stbtt__bitmap, flatness_in_pixels: Float, vertices: Vector<Stbtt_vertex>, num_verts: Int, scale_x: Float, scale_y: Float, shift_x: Float, shift_y: Float, x_off: Int, y_off: Int, invert: Bool): Void {\r\n\t\tvar scale: Float = scale_x > scale_y ? scale_y : scale_x;\r\n\t\tvar winding_count: Int = 0;\r\n\t\tvar winding_lengths: Vector<Int> = null;\r\n\t\tvar winding_count_reference = { value: winding_count };\r\n\t\tvar winding_lengths_reference = new VectorOfIntPointer();\r\n\t\tvar windings: Vector<Stbtt__point> = stbtt_FlattenCurves(vertices, num_verts, flatness_in_pixels / scale, winding_lengths_reference, winding_count_reference);\r\n\t\twinding_count = winding_count_reference.value;\r\n\t\twinding_lengths = winding_lengths_reference.value;\r\n\t\tif (windings != null) {\r\n\t\t\tstbtt__rasterize(result, windings, winding_lengths, winding_count, scale_x, scale_y, shift_x, shift_y, x_off, y_off, invert);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic static function stbtt_GetGlyphBitmapSubpixel(info: Stbtt_fontinfo, scale_x: Float, scale_y: Float, shift_x: Float, shift_y: Float, glyph: Int, region: Stbtt_temp_region): Blob {\r\n\t\tvar ix0: Int,iy0: Int,ix1: Int,iy1: Int;\r\n\t\tvar gbm: Stbtt__bitmap = new Stbtt__bitmap();\r\n\t\tvar vertices: Vector<Stbtt_vertex> = stbtt_GetGlyphShape(info, glyph);\r\n\t\tvar num_verts: Int = vertices.length;\r\n\r\n\t\tif (scale_x == 0) scale_x = scale_y;\r\n\t\tif (scale_y == 0) {\r\n\t\t\tif (scale_x == 0) return null;\r\n\t\t\tscale_y = scale_x;\r\n\t\t}\r\n\r\n\t\tvar rect = stbtt_GetGlyphBitmapBoxSubpixel(info, glyph, scale_x, scale_y, shift_x, shift_y);\r\n\t\tix0 = rect.x0;\r\n\t\tiy0 = rect.y0;\r\n\t\tix1 = rect.x1;\r\n\t\tiy1 = rect.y1;\r\n\t\t\r\n\t\t// now we get the size\r\n\t\tgbm.w = (ix1 - ix0);\r\n\t\tgbm.h = (iy1 - iy0);\r\n\t\tgbm.pixels = null; // in case we error\r\n\r\n\t\tregion.width  = gbm.w;\r\n\t\tregion.height = gbm.h;\r\n\t\tregion.xoff   = ix0;\r\n\t\tregion.yoff   = iy0;\r\n   \r\n\t\tif (gbm.w != 0 && gbm.h != 0) {\r\n\t\t\tgbm.pixels = Blob.alloc(gbm.w * gbm.h);\r\n\t\t\tif (gbm.pixels != null) {\r\n\t\t\t\tgbm.stride = gbm.w;\r\n\r\n\t\t\t\tstbtt_Rasterize(gbm, 0.35, vertices, num_verts, scale_x, scale_y, shift_x, shift_y, ix0, iy0, true);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn gbm.pixels;\r\n\t}\r\n\r\n\tpublic static function stbtt_GetGlyphBitmap(info: Stbtt_fontinfo, scale_x: Float, scale_y: Float, glyph: Int, region: Stbtt_temp_region): Blob {\r\n\t\treturn stbtt_GetGlyphBitmapSubpixel(info, scale_x, scale_y, 0.0, 0.0, glyph, region);\r\n\t}\r\n\r\n\tpublic static function stbtt_MakeGlyphBitmapSubpixel(info: Stbtt_fontinfo, output: Blob, output_offset: Int, out_w: Int, out_h: Int, out_stride: Int, scale_x: Float, scale_y: Float, shift_x: Float, shift_y: Float, glyph: Int): Void {\r\n\t\tvar ix0: Int = 0, iy0: Int = 0;\r\n\t\tvar vertices: Vector<Stbtt_vertex> = stbtt_GetGlyphShape(info, glyph);\r\n\t\tvar num_verts: Int = vertices == null ? 0 : vertices.length;\r\n\t\tvar gbm: Stbtt__bitmap = new Stbtt__bitmap();\r\n\r\n\t\tvar rect = stbtt_GetGlyphBitmapBoxSubpixel(info, glyph, scale_x, scale_y, shift_x, shift_y);\r\n\t\tix0 = rect.x0;\r\n\t\tiy0 = rect.y0;\r\n\t\tgbm.pixels = output;\r\n\t\tgbm.pixels_offset = output_offset;\r\n\t\tgbm.w = out_w;\r\n\t\tgbm.h = out_h;\r\n\t\tgbm.stride = out_stride;\r\n\r\n\t\tif (gbm.w != 0 && gbm.h != 0)\r\n\t\t\tstbtt_Rasterize(gbm, 0.35, vertices, num_verts, scale_x, scale_y, shift_x, shift_y, ix0,iy0, true);\r\n\t}\r\n\r\n\tpublic static function stbtt_MakeGlyphBitmap(info: Stbtt_fontinfo, output: Blob, output_offset: Int, out_w: Int, out_h: Int, out_stride: Int, scale_x: Float, scale_y: Float, glyph: Int): Void {\r\n\t\tstbtt_MakeGlyphBitmapSubpixel(info, output, output_offset, out_w, out_h, out_stride, scale_x, scale_y, 0.0, 0.0, glyph);\r\n\t}\r\n\r\n\tpublic static function stbtt_GetCodepointBitmapSubpixel(info: Stbtt_fontinfo, scale_x: Float, scale_y: Float, shift_x: Float, shift_y: Float, codepoint: Int, region: Stbtt_temp_region): Blob {\r\n\t\treturn stbtt_GetGlyphBitmapSubpixel(info, scale_x, scale_y,shift_x,shift_y, stbtt_FindGlyphIndex(info,codepoint), region);\r\n\t}   \r\n\r\n\tpublic static function stbtt_MakeCodepointBitmapSubpixel(info: Stbtt_fontinfo, output: Blob, output_offset: Int, out_w: Int, out_h: Int, out_stride: Int, scale_x: Float, scale_y: Float, shift_x: Float, shift_y: Float, codepoint: Int): Void {\r\n\t\tstbtt_MakeGlyphBitmapSubpixel(info, output, output_offset, out_w, out_h, out_stride, scale_x, scale_y, shift_x, shift_y, stbtt_FindGlyphIndex(info,codepoint));\r\n\t}\r\n\r\n\tpublic static function stbtt_GetCodepointBitmap(info: Stbtt_fontinfo, scale_x: Float, scale_y: Float, codepoint: Int, region: Stbtt_temp_region): Blob {\r\n\t\treturn stbtt_GetCodepointBitmapSubpixel(info, scale_x, scale_y, 0.0, 0.0, codepoint, region);\r\n\t}   \r\n\r\n\tpublic static function stbtt_MakeCodepointBitmap(info: Stbtt_fontinfo, output: Blob, output_offset: Int, out_w: Int, out_h: Int, out_stride: Int, scale_x: Float, scale_y: Float, codepoint: Int): Void {\r\n\t\tstbtt_MakeCodepointBitmapSubpixel(info, output, output_offset, out_w, out_h, out_stride, scale_x, scale_y, 0.0, 0.0, codepoint);\r\n\t}\r\n\r\n//////////////////////////////////////////////////////////////////////////////\r\n//\r\n// bitmap baking\r\n//\r\n// This is SUPER-CRAPPY packing to keep source code small\r\n\r\n\tpublic static function stbtt_BakeFontBitmap(data: Blob, offset: Int, // font location (use offset=0 for plain .ttf)\r\n                                pixel_height: Float,                      // height of font in pixels\r\n                                pixels: Blob, pw: Int, ph: Int,          // bitmap to be filled in\r\n                                chars: Array<Int>,          // characters to bake\r\n                                chardata: Vector<Stbtt_bakedchar>): Int {\r\n\t\tvar scale: Float;\r\n\t\tvar x: Int,y: Int,bottom_y: Int;\r\n\t\tvar f: Stbtt_fontinfo = new Stbtt_fontinfo();\r\n\t\tif (!stbtt_InitFont(f, data, offset))\r\n\t\t\treturn -1;\r\n\t\tx=y=1;\r\n\t\tbottom_y = 1;\r\n\r\n\t\tscale = stbtt_ScaleForPixelHeight(f, pixel_height);\r\n\r\n\t\tvar i = 0;\r\n\t\tfor (index in chars) {\r\n\t\t\tvar advance: Int, lsb: Int, x0: Int,y0: Int,x1: Int,y1: Int,gw: Int,gh: Int;\r\n\t\t\tvar g: Int = stbtt_FindGlyphIndex(f, index);\r\n\t\t\tvar metrics = stbtt_GetGlyphHMetrics(f, g);\r\n\t\t\tadvance = metrics.advanceWidth;\r\n\t\t\tlsb = metrics.leftSideBearing;\r\n\t\t\tvar rect = stbtt_GetGlyphBitmapBox(f, g, scale, scale);\r\n\t\t\tx0 = rect.x0;\r\n\t\t\ty0 = rect.y0;\r\n\t\t\tx1 = rect.x1;\r\n\t\t\ty1 = rect.y1;\r\n\t\t\tgw = x1-x0;\r\n\t\t\tgh = y1-y0;\r\n\t\t\tif (x + gw + 1 >= pw) {\r\n\t\t\t\ty = bottom_y; x = 1; // advance to next row\r\n\t\t\t}\r\n\t\t\tif (y + gh + 1 >= ph) // check if it fits vertically AFTER potentially moving to next row\r\n\t\t\t\treturn -i;\r\n\t\t\tSTBTT_assert(x+gw < pw);\r\n\t\t\tSTBTT_assert(y+gh < ph);\r\n\t\t\tchardata[i].x0 = x;\r\n\t\t\tchardata[i].y0 = y;\r\n\t\t\tchardata[i].x1 = x + gw;\r\n\t\t\tchardata[i].y1 = y + gh;\r\n\t\t\tchardata[i].xadvance = scale * advance;\r\n\t\t\tchardata[i].xoff     = x0;\r\n\t\t\tchardata[i].yoff     = y0;\r\n\t\t\tx = x + gw + 1;\r\n\t\t\tif (y+gh+1 > bottom_y)\r\n\t\t\t\tbottom_y = y+gh+1;\r\n\t\t\t++i;\r\n\t\t}\r\n\t\tfor (i in 0...pw * ph)\r\n\t\t\tpixels.writeU8(i, 0); // background of 0 around pixels\r\n\t\ti = 0;\r\n\t\tvar ch:Stbtt_bakedchar;\r\n\t\tfor (index in chars) {//bake bitmap if fits\r\n\t\t\tvar g: Int = stbtt_FindGlyphIndex(f, index);\r\n\t\t\tch = chardata[i];\r\n\t\t\tstbtt_MakeGlyphBitmap(f, pixels, ch.x0 + ch.y0 * pw, ch.x1 - ch.x0, ch.y1 - ch.y0, pw, scale, scale, g);\r\n\t\t\t++i;\r\n\t\t}\r\n\t\treturn bottom_y;\r\n\t}\r\n\r\n\tpublic static function stbtt_GetBakedQuad(chardata: Vector<Stbtt_bakedchar>, pw: Int, ph: Int, char_index: Int, xpos: { value: Float }, ypos: { value: Float }, q: Stbtt_aligned_quad, opengl_fillrule: Bool): Void {\r\n\t\tvar d3d_bias: Float = opengl_fillrule ? 0 : -0.5;\r\n\t\tvar ipw: Float = 1.0 / pw, iph = 1.0 / ph;\r\n\t\tvar b: Stbtt_bakedchar = chardata[char_index];\r\n\t\tvar round_x: Int = Math.floor((xpos.value + b.xoff) + 0.5);\r\n\t\tvar round_y: Int = Math.floor((ypos.value + b.yoff) + 0.5);\r\n\r\n\t\tq.x0 = round_x + d3d_bias;\r\n\t\tq.y0 = round_y + d3d_bias;\r\n\t\tq.x1 = round_x + b.x1 - b.x0 + d3d_bias;\r\n\t\tq.y1 = round_y + b.y1 - b.y0 + d3d_bias;\r\n\r\n\t\tq.s0 = b.x0 * ipw;\r\n\t\tq.t0 = b.y0 * iph;\r\n\t\tq.s1 = b.x1 * ipw;\r\n\t\tq.t1 = b.y1 * iph;\r\n\r\n\t\txpos.value += b.xadvance;\r\n\t}\r\n/*\r\n//////////////////////////////////////////////////////////////////////////////\r\n//\r\n// rectangle packing replacement routines if you don't have stb_rect_pack.h\r\n//\r\n\r\n#ifndef STB_RECT_PACK_VERSION\r\n#ifdef _MSC_VER\r\n#define STBTT__NOTUSED(v)  (void)(v)\r\n#else\r\n#define STBTT__NOTUSED(v)  (void)sizeof(v)\r\n#endif\r\n\r\ntypedef int stbrp_coord;\r\n\r\n////////////////////////////////////////////////////////////////////////////////////\r\n//                                                                                //\r\n//                                                                                //\r\n// COMPILER WARNING ?!?!?                                                         //\r\n//                                                                                //\r\n//                                                                                //\r\n// if you get a compile warning due to these symbols being defined more than      //\r\n// once, move #include \"stb_rect_pack.h\" before #include \"stb_truetype.h\"         //\r\n//                                                                                //\r\n////////////////////////////////////////////////////////////////////////////////////\r\n\r\ntypedef struct\r\n{\r\n   int width,height;\r\n   int x,y,bottom_y;\r\n} stbrp_context;\r\n\r\ntypedef struct\r\n{\r\n   unsigned char x;\r\n} stbrp_node;\r\n\r\nstruct stbrp_rect\r\n{\r\n   stbrp_coord x,y;\r\n   int id,w,h,was_packed;\r\n};\r\n\r\nstatic void stbrp_init_target(stbrp_context *con, int pw, int ph, stbrp_node *nodes, int num_nodes)\r\n{\r\n   con->width  = pw;\r\n   con->height = ph;\r\n   con->x = 0;\r\n   con->y = 0;\r\n   con->bottom_y = 0;\r\n   STBTT__NOTUSED(nodes);\r\n   STBTT__NOTUSED(num_nodes);   \r\n}\r\n\r\nstatic void stbrp_pack_rects(stbrp_context *con, stbrp_rect *rects, int num_rects)\r\n{\r\n   int i;\r\n   for (i=0; i < num_rects; ++i) {\r\n      if (con->x + rects[i].w > con->width) {\r\n         con->x = 0;\r\n         con->y = con->bottom_y;\r\n      }\r\n      if (con->y + rects[i].h > con->height)\r\n         break;\r\n      rects[i].x = con->x;\r\n      rects[i].y = con->y;\r\n      rects[i].was_packed = 1;\r\n      con->x += rects[i].w;\r\n      if (con->y + rects[i].h > con->bottom_y)\r\n         con->bottom_y = con->y + rects[i].h;\r\n   }\r\n   for (   ; i < num_rects; ++i)\r\n      rects[i].was_packed = 0;\r\n}\r\n#endif\r\n\r\n//////////////////////////////////////////////////////////////////////////////\r\n//\r\n// bitmap baking\r\n//\r\n// This is SUPER-AWESOME (tm Ryan Gordon) packing using stb_rect_pack.h. If\r\n// stb_rect_pack.h isn't available, it uses the BakeFontBitmap strategy.\r\n\r\nSTBTT_DEF int stbtt_PackBegin(stbtt_pack_context *spc, unsigned char *pixels, int pw, int ph, int stride_in_bytes, int padding, void *alloc_context)\r\n{\r\n   stbrp_context *context = (stbrp_context *) STBTT_malloc(sizeof(*context)            ,alloc_context);\r\n   int            num_nodes = pw - padding;\r\n   stbrp_node    *nodes   = (stbrp_node    *) STBTT_malloc(sizeof(*nodes  ) * num_nodes,alloc_context);\r\n\r\n   if (context == NULL || nodes == NULL) {\r\n      if (context != NULL) STBTT_free(context, alloc_context);\r\n      if (nodes   != NULL) STBTT_free(nodes  , alloc_context);\r\n      return 0;\r\n   }\r\n\r\n   spc->user_allocator_context = alloc_context;\r\n   spc->width = pw;\r\n   spc->height = ph;\r\n   spc->pixels = pixels;\r\n   spc->pack_info = context;\r\n   spc->nodes = nodes;\r\n   spc->padding = padding;\r\n   spc->stride_in_bytes = stride_in_bytes != 0 ? stride_in_bytes : pw;\r\n   spc->h_oversample = 1;\r\n   spc->v_oversample = 1;\r\n\r\n   stbrp_init_target(context, pw-padding, ph-padding, nodes, num_nodes);\r\n\r\n   if (pixels)\r\n      STBTT_memset(pixels, 0, pw*ph); // background of 0 around pixels\r\n\r\n   return 1;\r\n}\r\n\r\nSTBTT_DEF void stbtt_PackEnd  (stbtt_pack_context *spc)\r\n{\r\n   STBTT_free(spc->nodes    , spc->user_allocator_context);\r\n   STBTT_free(spc->pack_info, spc->user_allocator_context);\r\n}\r\n\r\nSTBTT_DEF void stbtt_PackSetOversampling(stbtt_pack_context *spc, unsigned int h_oversample, unsigned int v_oversample)\r\n{\r\n   STBTT_assert(h_oversample <= STBTT_MAX_OVERSAMPLE);\r\n   STBTT_assert(v_oversample <= STBTT_MAX_OVERSAMPLE);\r\n   if (h_oversample <= STBTT_MAX_OVERSAMPLE)\r\n      spc->h_oversample = h_oversample;\r\n   if (v_oversample <= STBTT_MAX_OVERSAMPLE)\r\n      spc->v_oversample = v_oversample;\r\n}\r\n\r\n#define STBTT__OVER_MASK  (STBTT_MAX_OVERSAMPLE-1)\r\n\r\nstatic void stbtt__h_prefilter(unsigned char *pixels, int w, int h, int stride_in_bytes, unsigned int kernel_width)\r\n{\r\n   unsigned char buffer[STBTT_MAX_OVERSAMPLE];\r\n   int safe_w = w - kernel_width;\r\n   int j;\r\n   for (j=0; j < h; ++j) {\r\n      int i;\r\n      unsigned int total;\r\n      STBTT_memset(buffer, 0, kernel_width);\r\n\r\n      total = 0;\r\n\r\n      // make kernel_width a constant in common cases so compiler can optimize out the divide\r\n      switch (kernel_width) {\r\n         case 2:\r\n            for (i=0; i <= safe_w; ++i) {\r\n               total += pixels[i] - buffer[i & STBTT__OVER_MASK];\r\n               buffer[(i+kernel_width) & STBTT__OVER_MASK] = pixels[i];\r\n               pixels[i] = (unsigned char) (total / 2);\r\n            }\r\n            break;\r\n         case 3:\r\n            for (i=0; i <= safe_w; ++i) {\r\n               total += pixels[i] - buffer[i & STBTT__OVER_MASK];\r\n               buffer[(i+kernel_width) & STBTT__OVER_MASK] = pixels[i];\r\n               pixels[i] = (unsigned char) (total / 3);\r\n            }\r\n            break;\r\n         case 4:\r\n            for (i=0; i <= safe_w; ++i) {\r\n               total += pixels[i] - buffer[i & STBTT__OVER_MASK];\r\n               buffer[(i+kernel_width) & STBTT__OVER_MASK] = pixels[i];\r\n               pixels[i] = (unsigned char) (total / 4);\r\n            }\r\n            break;\r\n         case 5:\r\n            for (i=0; i <= safe_w; ++i) {\r\n               total += pixels[i] - buffer[i & STBTT__OVER_MASK];\r\n               buffer[(i+kernel_width) & STBTT__OVER_MASK] = pixels[i];\r\n               pixels[i] = (unsigned char) (total / 5);\r\n            }\r\n            break;\r\n         default:\r\n            for (i=0; i <= safe_w; ++i) {\r\n               total += pixels[i] - buffer[i & STBTT__OVER_MASK];\r\n               buffer[(i+kernel_width) & STBTT__OVER_MASK] = pixels[i];\r\n               pixels[i] = (unsigned char) (total / kernel_width);\r\n            }\r\n            break;\r\n      }\r\n\r\n      for (; i < w; ++i) {\r\n         STBTT_assert(pixels[i] == 0);\r\n         total -= buffer[i & STBTT__OVER_MASK];\r\n         pixels[i] = (unsigned char) (total / kernel_width);\r\n      }\r\n\r\n      pixels += stride_in_bytes;\r\n   }\r\n}\r\n\r\nstatic void stbtt__v_prefilter(unsigned char *pixels, int w, int h, int stride_in_bytes, unsigned int kernel_width)\r\n{\r\n   unsigned char buffer[STBTT_MAX_OVERSAMPLE];\r\n   int safe_h = h - kernel_width;\r\n   int j;\r\n   for (j=0; j < w; ++j) {\r\n      int i;\r\n      unsigned int total;\r\n      STBTT_memset(buffer, 0, kernel_width);\r\n\r\n      total = 0;\r\n\r\n      // make kernel_width a constant in common cases so compiler can optimize out the divide\r\n      switch (kernel_width) {\r\n         case 2:\r\n            for (i=0; i <= safe_h; ++i) {\r\n               total += pixels[i*stride_in_bytes] - buffer[i & STBTT__OVER_MASK];\r\n               buffer[(i+kernel_width) & STBTT__OVER_MASK] = pixels[i*stride_in_bytes];\r\n               pixels[i*stride_in_bytes] = (unsigned char) (total / 2);\r\n            }\r\n            break;\r\n         case 3:\r\n            for (i=0; i <= safe_h; ++i) {\r\n               total += pixels[i*stride_in_bytes] - buffer[i & STBTT__OVER_MASK];\r\n               buffer[(i+kernel_width) & STBTT__OVER_MASK] = pixels[i*stride_in_bytes];\r\n               pixels[i*stride_in_bytes] = (unsigned char) (total / 3);\r\n            }\r\n            break;\r\n         case 4:\r\n            for (i=0; i <= safe_h; ++i) {\r\n               total += pixels[i*stride_in_bytes] - buffer[i & STBTT__OVER_MASK];\r\n               buffer[(i+kernel_width) & STBTT__OVER_MASK] = pixels[i*stride_in_bytes];\r\n               pixels[i*stride_in_bytes] = (unsigned char) (total / 4);\r\n            }\r\n            break;\r\n         case 5:\r\n            for (i=0; i <= safe_h; ++i) {\r\n               total += pixels[i*stride_in_bytes] - buffer[i & STBTT__OVER_MASK];\r\n               buffer[(i+kernel_width) & STBTT__OVER_MASK] = pixels[i*stride_in_bytes];\r\n               pixels[i*stride_in_bytes] = (unsigned char) (total / 5);\r\n            }\r\n            break;\r\n         default:\r\n            for (i=0; i <= safe_h; ++i) {\r\n               total += pixels[i*stride_in_bytes] - buffer[i & STBTT__OVER_MASK];\r\n               buffer[(i+kernel_width) & STBTT__OVER_MASK] = pixels[i*stride_in_bytes];\r\n               pixels[i*stride_in_bytes] = (unsigned char) (total / kernel_width);\r\n            }\r\n            break;\r\n      }\r\n\r\n      for (; i < h; ++i) {\r\n         STBTT_assert(pixels[i*stride_in_bytes] == 0);\r\n         total -= buffer[i & STBTT__OVER_MASK];\r\n         pixels[i*stride_in_bytes] = (unsigned char) (total / kernel_width);\r\n      }\r\n\r\n      pixels += 1;\r\n   }\r\n}\r\n\r\nstatic float stbtt__oversample_shift(int oversample)\r\n{\r\n   if (!oversample)\r\n      return 0.0f;\r\n\r\n   // The prefilter is a box filter of width \"oversample\",\r\n   // which shifts phase by (oversample - 1)/2 pixels in\r\n   // oversampled space. We want to shift in the opposite\r\n   // direction to counter this.\r\n   return (float)-(oversample - 1) / (2.0f * (float)oversample);\r\n}\r\n\r\n// rects array must be big enough to accommodate all characters in the given ranges\r\nSTBTT_DEF int stbtt_PackFontRangesGatherRects(stbtt_pack_context *spc, stbtt_fontinfo *info, stbtt_pack_range *ranges, int num_ranges, stbrp_rect *rects)\r\n{\r\n   int i,j,k;\r\n\r\n   k=0;\r\n   for (i=0; i < num_ranges; ++i) {\r\n      float fh = ranges[i].font_size;\r\n      float scale = fh > 0 ? stbtt_ScaleForPixelHeight(info, fh) : stbtt_ScaleForMappingEmToPixels(info, -fh);\r\n      ranges[i].h_oversample = (unsigned char) spc->h_oversample;\r\n      ranges[i].v_oversample = (unsigned char) spc->v_oversample;\r\n      for (j=0; j < ranges[i].num_chars; ++j) {\r\n         int x0,y0,x1,y1;\r\n         int codepoint = ranges[i].array_of_unicode_codepoints == NULL ? ranges[i].first_unicode_codepoint_in_range + j : ranges[i].array_of_unicode_codepoints[j];\r\n         int glyph = stbtt_FindGlyphIndex(info, codepoint);\r\n         stbtt_GetGlyphBitmapBoxSubpixel(info,glyph,\r\n                                         scale * spc->h_oversample,\r\n                                         scale * spc->v_oversample,\r\n                                         0,0,\r\n                                         &x0,&y0,&x1,&y1);\r\n         rects[k].w = (stbrp_coord) (x1-x0 + spc->padding + spc->h_oversample-1);\r\n         rects[k].h = (stbrp_coord) (y1-y0 + spc->padding + spc->v_oversample-1);\r\n         ++k;\r\n      }\r\n   }\r\n\r\n   return k;\r\n}\r\n\r\n// rects array must be big enough to accommodate all characters in the given ranges\r\nSTBTT_DEF int stbtt_PackFontRangesRenderIntoRects(stbtt_pack_context *spc, stbtt_fontinfo *info, stbtt_pack_range *ranges, int num_ranges, stbrp_rect *rects)\r\n{\r\n   int i,j,k, return_value = 1;\r\n\r\n   // save current values\r\n   int old_h_over = spc->h_oversample;\r\n   int old_v_over = spc->v_oversample;\r\n\r\n   k = 0;\r\n   for (i=0; i < num_ranges; ++i) {\r\n      float fh = ranges[i].font_size;\r\n      float scale = fh > 0 ? stbtt_ScaleForPixelHeight(info, fh) : stbtt_ScaleForMappingEmToPixels(info, -fh);\r\n      float recip_h,recip_v,sub_x,sub_y;\r\n      spc->h_oversample = ranges[i].h_oversample;\r\n      spc->v_oversample = ranges[i].v_oversample;\r\n      recip_h = 1.0f / spc->h_oversample;\r\n      recip_v = 1.0f / spc->v_oversample;\r\n      sub_x = stbtt__oversample_shift(spc->h_oversample);\r\n      sub_y = stbtt__oversample_shift(spc->v_oversample);\r\n      for (j=0; j < ranges[i].num_chars; ++j) {\r\n         stbrp_rect *r = &rects[k];\r\n         if (r->was_packed) {\r\n            stbtt_packedchar *bc = &ranges[i].chardata_for_range[j];\r\n            int advance, lsb, x0,y0,x1,y1;\r\n            int codepoint = ranges[i].array_of_unicode_codepoints == NULL ? ranges[i].first_unicode_codepoint_in_range + j : ranges[i].array_of_unicode_codepoints[j];\r\n            int glyph = stbtt_FindGlyphIndex(info, codepoint);\r\n            stbrp_coord pad = (stbrp_coord) spc->padding;\r\n\r\n            // pad on left and top\r\n            r->x += pad;\r\n            r->y += pad;\r\n            r->w -= pad;\r\n            r->h -= pad;\r\n            stbtt_GetGlyphHMetrics(info, glyph, &advance, &lsb);\r\n            stbtt_GetGlyphBitmapBox(info, glyph,\r\n                                    scale * spc->h_oversample,\r\n                                    scale * spc->v_oversample,\r\n                                    &x0,&y0,&x1,&y1);\r\n            stbtt_MakeGlyphBitmapSubpixel(info,\r\n                                          spc->pixels + r->x + r->y*spc->stride_in_bytes,\r\n                                          r->w - spc->h_oversample+1,\r\n                                          r->h - spc->v_oversample+1,\r\n                                          spc->stride_in_bytes,\r\n                                          scale * spc->h_oversample,\r\n                                          scale * spc->v_oversample,\r\n                                          0,0,\r\n                                          glyph);\r\n\r\n            if (spc->h_oversample > 1)\r\n               stbtt__h_prefilter(spc->pixels + r->x + r->y*spc->stride_in_bytes,\r\n                                  r->w, r->h, spc->stride_in_bytes,\r\n                                  spc->h_oversample);\r\n\r\n            if (spc->v_oversample > 1)\r\n               stbtt__v_prefilter(spc->pixels + r->x + r->y*spc->stride_in_bytes,\r\n                                  r->w, r->h, spc->stride_in_bytes,\r\n                                  spc->v_oversample);\r\n\r\n            bc->x0       = (stbtt_int16)  r->x;\r\n            bc->y0       = (stbtt_int16)  r->y;\r\n            bc->x1       = (stbtt_int16) (r->x + r->w);\r\n            bc->y1       = (stbtt_int16) (r->y + r->h);\r\n            bc->xadvance =                scale * advance;\r\n            bc->xoff     =       (float)  x0 * recip_h + sub_x;\r\n            bc->yoff     =       (float)  y0 * recip_v + sub_y;\r\n            bc->xoff2    =                (x0 + r->w) * recip_h + sub_x;\r\n            bc->yoff2    =                (y0 + r->h) * recip_v + sub_y;\r\n         } else {\r\n            return_value = 0; // if any fail, report failure\r\n         }\r\n\r\n         ++k;\r\n      }\r\n   }\r\n\r\n   // restore original values\r\n   spc->h_oversample = old_h_over;\r\n   spc->v_oversample = old_v_over;\r\n\r\n   return return_value;\r\n}\r\n\r\nSTBTT_DEF void stbtt_PackFontRangesPackRects(stbtt_pack_context *spc, stbrp_rect *rects, int num_rects)\r\n{\r\n   stbrp_pack_rects((stbrp_context *) spc->pack_info, rects, num_rects);\r\n}\r\n\r\nSTBTT_DEF int stbtt_PackFontRanges(stbtt_pack_context *spc, unsigned char *fontdata, int font_index, stbtt_pack_range *ranges, int num_ranges)\r\n{\r\n   stbtt_fontinfo info;\r\n   int i,j,n, return_value = 1;\r\n   //stbrp_context *context = (stbrp_context *) spc->pack_info;\r\n   stbrp_rect    *rects;\r\n\r\n   // flag all characters as NOT packed\r\n   for (i=0; i < num_ranges; ++i)\r\n      for (j=0; j < ranges[i].num_chars; ++j)\r\n         ranges[i].chardata_for_range[j].x0 =\r\n         ranges[i].chardata_for_range[j].y0 =\r\n         ranges[i].chardata_for_range[j].x1 =\r\n         ranges[i].chardata_for_range[j].y1 = 0;\r\n\r\n   n = 0;\r\n   for (i=0; i < num_ranges; ++i)\r\n      n += ranges[i].num_chars;\r\n         \r\n   rects = (stbrp_rect *) STBTT_malloc(sizeof(*rects) * n, spc->user_allocator_context);\r\n   if (rects == NULL)\r\n      return 0;\r\n\r\n   stbtt_InitFont(&info, fontdata, stbtt_GetFontOffsetForIndex(fontdata,font_index));\r\n\r\n   n = stbtt_PackFontRangesGatherRects(spc, &info, ranges, num_ranges, rects);\r\n\r\n   stbtt_PackFontRangesPackRects(spc, rects, n);\r\n  \r\n   return_value = stbtt_PackFontRangesRenderIntoRects(spc, &info, ranges, num_ranges, rects);\r\n\r\n   STBTT_free(rects, spc->user_allocator_context);\r\n   return return_value;\r\n}\r\n\r\nSTBTT_DEF int stbtt_PackFontRange(stbtt_pack_context *spc, unsigned char *fontdata, int font_index, float font_size,\r\n            int first_unicode_codepoint_in_range, int num_chars_in_range, stbtt_packedchar *chardata_for_range)\r\n{\r\n   stbtt_pack_range range;\r\n   range.first_unicode_codepoint_in_range = first_unicode_codepoint_in_range;\r\n   range.array_of_unicode_codepoints = NULL;\r\n   range.num_chars                   = num_chars_in_range;\r\n   range.chardata_for_range          = chardata_for_range;\r\n   range.font_size                   = font_size;\r\n   return stbtt_PackFontRanges(spc, fontdata, font_index, &range, 1);\r\n}\r\n\r\nSTBTT_DEF void stbtt_GetPackedQuad(stbtt_packedchar *chardata, int pw, int ph, int char_index, float *xpos, float *ypos, stbtt_aligned_quad *q, int align_to_integer)\r\n{\r\n   float ipw = 1.0f / pw, iph = 1.0f / ph;\r\n   stbtt_packedchar *b = chardata + char_index;\r\n\r\n   if (align_to_integer) {\r\n      float x = (float) STBTT_ifloor((*xpos + b->xoff) + 0.5f);\r\n      float y = (float) STBTT_ifloor((*ypos + b->yoff) + 0.5f);\r\n      q->x0 = x;\r\n      q->y0 = y;\r\n      q->x1 = x + b->xoff2 - b->xoff;\r\n      q->y1 = y + b->yoff2 - b->yoff;\r\n   } else {\r\n      q->x0 = *xpos + b->xoff;\r\n      q->y0 = *ypos + b->yoff;\r\n      q->x1 = *xpos + b->xoff2;\r\n      q->y1 = *ypos + b->yoff2;\r\n   }\r\n\r\n   q->s0 = b->x0 * ipw;\r\n   q->t0 = b->y0 * iph;\r\n   q->s1 = b->x1 * ipw;\r\n   q->t1 = b->y1 * iph;\r\n\r\n   *xpos += b->xadvance;\r\n}\r\n\r\n\r\n//////////////////////////////////////////////////////////////////////////////\r\n//\r\n// font name matching -- recommended not to use this\r\n//\r\n\r\n// check if a utf8 string contains a prefix which is the utf16 string; if so return length of matching utf8 string\r\nstatic stbtt_int32 stbtt__CompareUTF8toUTF16_bigendian_prefix(const stbtt_uint8 *s1, stbtt_int32 len1, const stbtt_uint8 *s2, stbtt_int32 len2) \r\n{\r\n   stbtt_int32 i=0;\r\n\r\n   // convert utf16 to utf8 and compare the results while converting\r\n   while (len2) {\r\n      stbtt_uint16 ch = s2[0]*256 + s2[1];\r\n      if (ch < 0x80) {\r\n         if (i >= len1) return -1;\r\n         if (s1[i++] != ch) return -1;\r\n      } else if (ch < 0x800) {\r\n         if (i+1 >= len1) return -1;\r\n         if (s1[i++] != 0xc0 + (ch >> 6)) return -1;\r\n         if (s1[i++] != 0x80 + (ch & 0x3f)) return -1;\r\n      } else if (ch >= 0xd800 && ch < 0xdc00) {\r\n         stbtt_uint32 c;\r\n         stbtt_uint16 ch2 = s2[2]*256 + s2[3];\r\n         if (i+3 >= len1) return -1;\r\n         c = ((ch - 0xd800) << 10) + (ch2 - 0xdc00) + 0x10000;\r\n         if (s1[i++] != 0xf0 + (c >> 18)) return -1;\r\n         if (s1[i++] != 0x80 + ((c >> 12) & 0x3f)) return -1;\r\n         if (s1[i++] != 0x80 + ((c >>  6) & 0x3f)) return -1;\r\n         if (s1[i++] != 0x80 + ((c      ) & 0x3f)) return -1;\r\n         s2 += 2; // plus another 2 below\r\n         len2 -= 2;\r\n      } else if (ch >= 0xdc00 && ch < 0xe000) {\r\n         return -1;\r\n      } else {\r\n         if (i+2 >= len1) return -1;\r\n         if (s1[i++] != 0xe0 + (ch >> 12)) return -1;\r\n         if (s1[i++] != 0x80 + ((ch >> 6) & 0x3f)) return -1;\r\n         if (s1[i++] != 0x80 + ((ch     ) & 0x3f)) return -1;\r\n      }\r\n      s2 += 2;\r\n      len2 -= 2;\r\n   }\r\n   return i;\r\n}\r\n\r\nSTBTT_DEF int stbtt_CompareUTF8toUTF16_bigendian(const char *s1, int len1, const char *s2, int len2) \r\n{\r\n   return len1 == stbtt__CompareUTF8toUTF16_bigendian_prefix((const stbtt_uint8*) s1, len1, (const stbtt_uint8*) s2, len2);\r\n}\r\n\r\n// returns results in whatever encoding you request... but note that 2-byte encodings\r\n// will be BIG-ENDIAN... use stbtt_CompareUTF8toUTF16_bigendian() to compare\r\nSTBTT_DEF const char *stbtt_GetFontNameString(const stbtt_fontinfo *font, int *length, int platformID, int encodingID, int languageID, int nameID)\r\n{\r\n   stbtt_int32 i,count,stringOffset;\r\n   stbtt_uint8 *fc = font->data;\r\n   stbtt_uint32 offset = font->fontstart;\r\n   stbtt_uint32 nm = stbtt__find_table(fc, offset, \"name\");\r\n   if (!nm) return NULL;\r\n\r\n   count = ttUSHORT(fc+nm+2);\r\n   stringOffset = nm + ttUSHORT(fc+nm+4);\r\n   for (i=0; i < count; ++i) {\r\n      stbtt_uint32 loc = nm + 6 + 12 * i;\r\n      if (platformID == ttUSHORT(fc+loc+0) && encodingID == ttUSHORT(fc+loc+2)\r\n          && languageID == ttUSHORT(fc+loc+4) && nameID == ttUSHORT(fc+loc+6)) {\r\n         *length = ttUSHORT(fc+loc+8);\r\n         return (const char *) (fc+stringOffset+ttUSHORT(fc+loc+10));\r\n      }\r\n   }\r\n   return NULL;\r\n}\r\n\r\nstatic int stbtt__matchpair(stbtt_uint8 *fc, stbtt_uint32 nm, stbtt_uint8 *name, stbtt_int32 nlen, stbtt_int32 target_id, stbtt_int32 next_id)\r\n{\r\n   stbtt_int32 i;\r\n   stbtt_int32 count = ttUSHORT(fc+nm+2);\r\n   stbtt_int32 stringOffset = nm + ttUSHORT(fc+nm+4);\r\n\r\n   for (i=0; i < count; ++i) {\r\n      stbtt_uint32 loc = nm + 6 + 12 * i;\r\n      stbtt_int32 id = ttUSHORT(fc+loc+6);\r\n      if (id == target_id) {\r\n         // find the encoding\r\n         stbtt_int32 platform = ttUSHORT(fc+loc+0), encoding = ttUSHORT(fc+loc+2), language = ttUSHORT(fc+loc+4);\r\n\r\n         // is this a Unicode encoding?\r\n         if (platform == 0 || (platform == 3 && encoding == 1) || (platform == 3 && encoding == 10)) {\r\n            stbtt_int32 slen = ttUSHORT(fc+loc+8);\r\n            stbtt_int32 off = ttUSHORT(fc+loc+10);\r\n\r\n            // check if there's a prefix match\r\n            stbtt_int32 matchlen = stbtt__CompareUTF8toUTF16_bigendian_prefix(name, nlen, fc+stringOffset+off,slen);\r\n            if (matchlen >= 0) {\r\n               // check for target_id+1 immediately following, with same encoding & language\r\n               if (i+1 < count && ttUSHORT(fc+loc+12+6) == next_id && ttUSHORT(fc+loc+12) == platform && ttUSHORT(fc+loc+12+2) == encoding && ttUSHORT(fc+loc+12+4) == language) {\r\n                  slen = ttUSHORT(fc+loc+12+8);\r\n                  off = ttUSHORT(fc+loc+12+10);\r\n                  if (slen == 0) {\r\n                     if (matchlen == nlen)\r\n                        return 1;\r\n                  } else if (matchlen < nlen && name[matchlen] == ' ') {\r\n                     ++matchlen;\r\n                     if (stbtt_CompareUTF8toUTF16_bigendian((char*) (name+matchlen), nlen-matchlen, (char*)(fc+stringOffset+off),slen))\r\n                        return 1;\r\n                  }\r\n               } else {\r\n                  // if nothing immediately following\r\n                  if (matchlen == nlen)\r\n                     return 1;\r\n               }\r\n            }\r\n         }\r\n\r\n         // @TODO handle other encodings\r\n      }\r\n   }\r\n   return 0;\r\n}\r\n\r\nstatic int stbtt__matches(stbtt_uint8 *fc, stbtt_uint32 offset, stbtt_uint8 *name, stbtt_int32 flags)\r\n{\r\n   stbtt_int32 nlen = (stbtt_int32) STBTT_strlen((char *) name);\r\n   stbtt_uint32 nm,hd;\r\n   if (!stbtt__isfont(fc+offset)) return 0;\r\n\r\n   // check italics/bold/underline flags in macStyle...\r\n   if (flags) {\r\n      hd = stbtt__find_table(fc, offset, \"head\");\r\n      if ((ttUSHORT(fc+hd+44) & 7) != (flags & 7)) return 0;\r\n   }\r\n\r\n   nm = stbtt__find_table(fc, offset, \"name\");\r\n   if (!nm) return 0;\r\n\r\n   if (flags) {\r\n      // if we checked the macStyle flags, then just check the family and ignore the subfamily\r\n      if (stbtt__matchpair(fc, nm, name, nlen, 16, -1))  return 1;\r\n      if (stbtt__matchpair(fc, nm, name, nlen,  1, -1))  return 1;\r\n      if (stbtt__matchpair(fc, nm, name, nlen,  3, -1))  return 1;\r\n   } else {\r\n      if (stbtt__matchpair(fc, nm, name, nlen, 16, 17))  return 1;\r\n      if (stbtt__matchpair(fc, nm, name, nlen,  1,  2))  return 1;\r\n      if (stbtt__matchpair(fc, nm, name, nlen,  3, -1))  return 1;\r\n   }\r\n\r\n   return 0;\r\n}\r\n\r\nSTBTT_DEF int stbtt_FindMatchingFont(const unsigned char *font_collection, const char *name_utf8, stbtt_int32 flags)\r\n{\r\n   stbtt_int32 i;\r\n   for (i=0;;++i) {\r\n      stbtt_int32 off = stbtt_GetFontOffsetForIndex(font_collection, i);\r\n      if (off < 0) return off;\r\n      if (stbtt__matches((stbtt_uint8 *) font_collection, off, (stbtt_uint8*) name_utf8, flags))\r\n         return off;\r\n   }\r\n}\r\n*/\r\n}\r\n","package kha.graphics4;\n\nimport js.html.webgl.GL;\nimport haxe.io.Bytes;\nimport kha.js.graphics4.Graphics;\n\nclass CubeMap implements Canvas implements Resource {\n\tprivate var myWidth: Int;\n\tprivate var myHeight: Int;\n\tprivate var format: TextureFormat;\n\tprivate var renderTarget: Bool;\n\tprivate var depthStencilFormat: DepthStencilFormat;\n\tprivate var graphics4: kha.graphics4.Graphics;\n\n\tpublic var frameBuffer: Dynamic = null;\n\tpublic var texture: Dynamic = null;\n\tpublic var depthTexture: Dynamic = null;\n\tpublic var isDepthAttachment: Bool = false;\n\n\t// WebGL2 constants\n\tprivate static inline var GL_RGBA16F = 0x881A;\n\tprivate static inline var GL_RGBA32F = 0x8814;\n\tprivate static inline var GL_R16F = 0x822D;\n\tprivate static inline var GL_R32F = 0x822E;\n\tprivate static inline var GL_DEPTH_COMPONENT24 = 0x81A6;\n\tprivate static inline var GL_DEPTH24_STENCIL8 = 0x88F0;\n\tprivate static inline var GL_DEPTH32F_STENCIL8 = 0x8CAD;\n\n\tprivate function new(size: Int, format: TextureFormat, renderTarget: Bool, depthStencilFormat: DepthStencilFormat) {\n\t\tmyWidth = size;\n\t\tmyHeight = size;\n\t\tthis.format = format;\n\t\tthis.renderTarget = renderTarget;\n\t\tthis.depthStencilFormat = depthStencilFormat;\n\t\tif (renderTarget) createTexture();\n\t}\n\n\tpublic static function createRenderTarget(size: Int, format: TextureFormat = null, depthStencil: DepthStencilFormat = null, contextId: Int = 0): CubeMap {\n\t\tif (format == null) format = TextureFormat.RGBA32;\n\t\tif (depthStencil == null) depthStencil = NoDepthAndStencil;\n\t\treturn new CubeMap(size, format, true, depthStencil);\n\t}\n\n\tprivate function createTexture() {\n\t\tif (SystemImpl.gl == null) return;\n\n\t\ttexture = SystemImpl.gl.createTexture();\n\t\tSystemImpl.gl.bindTexture(GL.TEXTURE_CUBE_MAP, texture);\n\n\t\tSystemImpl.gl.texParameteri(GL.TEXTURE_CUBE_MAP, GL.TEXTURE_MAG_FILTER, GL.LINEAR);\n\t\tSystemImpl.gl.texParameteri(GL.TEXTURE_CUBE_MAP, GL.TEXTURE_MIN_FILTER, GL.LINEAR);\n\t\tSystemImpl.gl.texParameteri(GL.TEXTURE_CUBE_MAP, GL.TEXTURE_WRAP_S, GL.CLAMP_TO_EDGE);\n\t\tSystemImpl.gl.texParameteri(GL.TEXTURE_CUBE_MAP, GL.TEXTURE_WRAP_T, GL.CLAMP_TO_EDGE);\n\n\t\tif (renderTarget) {\n\n\t\t\tframeBuffer = SystemImpl.gl.createFramebuffer();\n\t\t\tSystemImpl.gl.bindFramebuffer(GL.FRAMEBUFFER, frameBuffer);\n\n\t\t\tswitch (format) {\n\t\t\tcase DEPTH16:\n\t\t\t\tfor (i in 0...6) SystemImpl.gl.texImage2D(GL.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, SystemImpl.gl2 ? GL.DEPTH_COMPONENT16 : GL.DEPTH_COMPONENT, myWidth, myHeight, 0, GL.DEPTH_COMPONENT, GL.UNSIGNED_SHORT, null);\n\t\t\tcase RGBA128:\n\t\t\t\tfor (i in 0...6) SystemImpl.gl.texImage2D(GL.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, SystemImpl.gl2 ? GL_RGBA32F : GL.RGBA, myWidth, myHeight, 0, GL.RGBA, GL.FLOAT, null);\n\t\t\tcase RGBA64:\n\t\t\t\tfor (i in 0...6) SystemImpl.gl.texImage2D(GL.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, SystemImpl.gl2 ? GL_RGBA16F : GL.RGBA, myWidth, myHeight, 0, GL.RGBA, SystemImpl.halfFloat.HALF_FLOAT_OES, null);\n\t\t\tcase RGBA32:\n\t\t\t\tfor (i in 0...6) SystemImpl.gl.texImage2D(GL.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, GL.RGBA, myWidth, myHeight, 0, GL.RGBA, GL.UNSIGNED_BYTE, null);\n\t\t\tcase A32:\n\t\t\t\tfor (i in 0...6) SystemImpl.gl.texImage2D(GL.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, SystemImpl.gl2 ? GL_R32F : GL.ALPHA, myWidth, myHeight, 0, GL.ALPHA, GL.FLOAT, null);\n\t\t\tcase A16:\n\t\t\t\tfor (i in 0...6) SystemImpl.gl.texImage2D(GL.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, SystemImpl.gl2 ? GL_R16F : GL.ALPHA, myWidth, myHeight, 0, GL.ALPHA, SystemImpl.halfFloat.HALF_FLOAT_OES, null);\n\t\t\tdefault:\n\t\t\t\tfor (i in 0...6) SystemImpl.gl.texImage2D(GL.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, GL.RGBA, myWidth, myHeight, 0, GL.RGBA, GL.UNSIGNED_BYTE, null);\n\t\t\t}\n\n\t\t\tif (format == DEPTH16) {\n\t\t\t\tSystemImpl.gl.texParameteri(GL.TEXTURE_CUBE_MAP, GL.TEXTURE_MAG_FILTER, GL.NEAREST);\n\t\t\t\tSystemImpl.gl.texParameteri(GL.TEXTURE_CUBE_MAP, GL.TEXTURE_MIN_FILTER, GL.NEAREST);\n\t\t\t\tisDepthAttachment = true;\n\t\t\t\t// Some WebGL implementations throw incomplete framebuffer error, create color attachment\n\t\t\t\tif (!SystemImpl.gl2) {\n\t\t\t\t\tvar colortex = SystemImpl.gl.createTexture();\n\t\t\t\t\tSystemImpl.gl.bindTexture(GL.TEXTURE_CUBE_MAP, colortex);\n\t\t\t\t\tfor (i in 0...6) {\n\t\t\t\t\t\tSystemImpl.gl.texImage2D(GL.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, GL.RGBA, myWidth, myHeight, 0, GL.RGBA, GL.UNSIGNED_BYTE, null);\n\t\t\t\t\t\tSystemImpl.gl.framebufferTexture2D(GL.FRAMEBUFFER, GL.COLOR_ATTACHMENT0, GL.TEXTURE_CUBE_MAP_POSITIVE_X + i, colortex, 0);\n\t\t\t\t\t}\n\t\t\t\t\tSystemImpl.gl.bindTexture(GL.TEXTURE_CUBE_MAP, texture);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tinitDepthStencilBuffer(depthStencilFormat);\n\t\t\tSystemImpl.gl.bindFramebuffer(GL.FRAMEBUFFER, null);\n\t\t}\n\n\t\tSystemImpl.gl.bindTexture(GL.TEXTURE_CUBE_MAP, null);\n\t}\n\n\tprivate function initDepthStencilBuffer(depthStencilFormat: DepthStencilFormat) {\n\t\tswitch (depthStencilFormat) {\n\t\tcase NoDepthAndStencil:\n\t\tcase DepthOnly, Depth16: {\n\t\t\tdepthTexture = SystemImpl.gl.createTexture();\n\t\t\tSystemImpl.gl.bindTexture(GL.TEXTURE_CUBE_MAP, depthTexture);\n\t\t\tif (depthStencilFormat == DepthOnly) SystemImpl.gl.texImage2D(GL.TEXTURE_CUBE_MAP, 0, SystemImpl.gl2 ? GL_DEPTH_COMPONENT24 : GL.DEPTH_COMPONENT, myWidth, myHeight, 0, GL.DEPTH_COMPONENT, GL.UNSIGNED_INT, null);\n\t\t\telse SystemImpl.gl.texImage2D(GL.TEXTURE_CUBE_MAP, 0, SystemImpl.gl2 ? GL.DEPTH_COMPONENT16 : GL.DEPTH_COMPONENT, myWidth, myHeight, 0, GL.DEPTH_COMPONENT, GL.UNSIGNED_SHORT, null);\n\t\t\tSystemImpl.gl.texParameteri(GL.TEXTURE_CUBE_MAP, GL.TEXTURE_MAG_FILTER, GL.NEAREST);\n\t\t\tSystemImpl.gl.texParameteri(GL.TEXTURE_CUBE_MAP, GL.TEXTURE_MIN_FILTER, GL.NEAREST);\n\t\t\tSystemImpl.gl.texParameteri(GL.TEXTURE_CUBE_MAP, GL.TEXTURE_WRAP_S, GL.CLAMP_TO_EDGE);\n\t\t\tSystemImpl.gl.texParameteri(GL.TEXTURE_CUBE_MAP, GL.TEXTURE_WRAP_T, GL.CLAMP_TO_EDGE);\n\t\t\tSystemImpl.gl.bindFramebuffer(GL.FRAMEBUFFER, frameBuffer);\n\t\t\tSystemImpl.gl.framebufferTexture2D(GL.FRAMEBUFFER, GL.DEPTH_ATTACHMENT, GL.TEXTURE_CUBE_MAP, depthTexture, 0);\n\t\t}\n\t\tcase DepthAutoStencilAuto, Depth24Stencil8, Depth32Stencil8:\n\t\t\tdepthTexture = SystemImpl.gl.createTexture();\n\t\t\tSystemImpl.gl.bindTexture(GL.TEXTURE_CUBE_MAP, depthTexture);\n\t\t\tSystemImpl.gl.texImage2D(GL.TEXTURE_CUBE_MAP, 0, SystemImpl.gl2 ? GL_DEPTH24_STENCIL8 : GL.DEPTH_STENCIL, myWidth, myHeight, 0, GL.DEPTH_STENCIL, SystemImpl.depthTexture.UNSIGNED_INT_24_8_WEBGL, null);\n\t\t\tSystemImpl.gl.texParameteri(GL.TEXTURE_CUBE_MAP, GL.TEXTURE_MAG_FILTER, GL.NEAREST);\n\t\t\tSystemImpl.gl.texParameteri(GL.TEXTURE_CUBE_MAP, GL.TEXTURE_MIN_FILTER, GL.NEAREST);\n\t\t\tSystemImpl.gl.texParameteri(GL.TEXTURE_CUBE_MAP, GL.TEXTURE_WRAP_S, GL.CLAMP_TO_EDGE);\n\t\t\tSystemImpl.gl.texParameteri(GL.TEXTURE_CUBE_MAP, GL.TEXTURE_WRAP_T, GL.CLAMP_TO_EDGE);\n\t\t\tSystemImpl.gl.bindFramebuffer(GL.FRAMEBUFFER, frameBuffer);\n\t\t\tSystemImpl.gl.framebufferTexture2D(GL.FRAMEBUFFER, GL.DEPTH_STENCIL_ATTACHMENT, GL.TEXTURE_CUBE_MAP, depthTexture, 0);\n\t\t}\n\t}\n\n\tpublic function set(stage: Int): Void {\n\t\tSystemImpl.gl.activeTexture(GL.TEXTURE0 + stage);\n\t\tSystemImpl.gl.bindTexture(GL.TEXTURE_CUBE_MAP, texture);\n\t}\n\n\tpublic function setDepth(stage: Int): Void {\n\t\tSystemImpl.gl.activeTexture(GL.TEXTURE0 + stage);\n\t\tSystemImpl.gl.bindTexture(GL.TEXTURE_CUBE_MAP, depthTexture);\n\t}\n\n\tpublic function unload(): Void {\n\t\t\n\t}\n\t\n\tpublic function lock(level: Int = 0): Bytes {\n\t\treturn null;\n\t}\n\t\n\tpublic function unlock(): Void {\n\n\t}\n\n\tpublic var width(get, null): Int;\n\tprivate function get_width(): Int {\n\t\treturn myWidth;\n\t}\n\t\n\tpublic var height(get, null): Int;\n\tprivate function get_height(): Int {\n\t\treturn myHeight;\n\t}\n\n\tpublic var g1(get, null): kha.graphics1.Graphics;\n\tprivate function get_g1(): kha.graphics1.Graphics {\n\t\treturn null;\n\t}\n\n\tpublic var g2(get, null): kha.graphics2.Graphics;\n\tprivate function get_g2(): kha.graphics2.Graphics {\n\t\treturn null;\n\t}\n\t\n\tpublic var g4(get, null): kha.graphics4.Graphics;\n\tprivate function get_g4(): kha.graphics4.Graphics {\n\t\tif (graphics4 == null) {\n\t\t\tgraphics4 = new Graphics(this);\n\t\t}\n\t\treturn graphics4;\n\t}\n}\n","package kha.graphics4;\r\n\r\nimport js.html.webgl.GL;\r\n\r\nclass FragmentShader {\r\n\tpublic var sources: Array<String>;\r\n\tpublic var type: Dynamic;\r\n\tpublic var shader: Dynamic;\r\n\tpublic var files: Array<String>;\r\n\t\r\n\tpublic function new(sources: Array<Blob>, files: Array<String>) {\r\n\t\tthis.sources = [];\r\n\t\tfor (source in sources) {\r\n\t\t\tthis.sources.push(source.toString());\r\n\t\t}\r\n\t\tthis.type = GL.FRAGMENT_SHADER;\r\n\t\tthis.shader = null;\r\n\t\tthis.files = files;\r\n\t}\r\n\r\n\tpublic static function fromSource(source: String): FragmentShader {\r\n\t\tvar shader = new FragmentShader([], [\"runtime-string\"]);\r\n\t\tshader.sources.push(source);\r\n\t\treturn shader;\r\n\t}\r\n\t\r\n\tpublic function delete(): Void {\r\n\t\tSystemImpl.gl.deleteShader(shader);\r\n\t\tshader = null;\r\n\t\tsources = null;\r\n\t}\r\n}\r\n","package kha.graphics4;\r\n\r\nimport kha.arrays.Float32Array;\r\nimport kha.Canvas;\r\nimport kha.Color;\r\nimport kha.FastFloat;\r\nimport kha.Font;\r\nimport kha.graphics2.ImageScaleQuality;\r\nimport kha.Image;\r\nimport kha.graphics4.BlendingOperation;\r\nimport kha.graphics4.ConstantLocation;\r\nimport kha.graphics4.CullMode;\r\nimport kha.graphics4.IndexBuffer;\r\nimport kha.graphics4.MipMapFilter;\r\nimport kha.graphics4.TextureAddressing;\r\nimport kha.graphics4.TextureFilter;\r\nimport kha.graphics4.TextureFormat;\r\nimport kha.graphics4.TextureUnit;\r\nimport kha.graphics4.Usage;\r\nimport kha.graphics4.VertexBuffer;\r\nimport kha.graphics4.VertexData;\r\nimport kha.graphics4.VertexStructure;\r\nimport kha.math.FastMatrix3;\r\nimport kha.math.FastMatrix4;\r\nimport kha.math.FastVector2;\r\nimport kha.math.Matrix3;\r\nimport kha.math.Matrix4;\r\nimport kha.math.Vector2;\r\nimport kha.Shaders;\r\nimport kha.simd.Float32x4;\r\n\r\nclass PipelineCache {\r\n\tpublic var pipeline: PipelineState;\r\n\tpublic var projectionLocation: ConstantLocation;\r\n\tpublic var textureLocation: TextureUnit;\r\n\r\n\tpublic function new(pipeline: PipelineState) {\r\n\t\tthis.pipeline = pipeline;\r\n\t\ttry { projectionLocation = pipeline.getConstantLocation(\"projectionMatrix\"); } catch (x: Dynamic) { trace(x); }\r\n\t\ttry { textureLocation = pipeline.getTextureUnit(\"tex\"); } catch (x: Dynamic) { trace(x); }\r\n\t}\r\n}\r\n\r\nclass ImageShaderPainter {\r\n\tvar projectionMatrix: FastMatrix4;\r\n\tstatic var standardImagePipeline: PipelineCache = null;\r\n\tstatic var structure: VertexStructure = null;\r\n\tstatic inline var bufferSize: Int = 1500;\r\n\tstatic inline var vertexSize: Int = 9;\r\n\tstatic var bufferIndex: Int;\r\n\tstatic var rectVertexBuffer: VertexBuffer;\r\n\tstatic var rectVertices: Float32Array;\r\n\tstatic var indexBuffer: IndexBuffer;\r\n\tstatic var lastTexture: Image;\r\n\tvar bilinear: Bool = false;\r\n\tvar bilinearMipmaps: Bool = false;\r\n\tvar g: Graphics;\r\n\tvar myPipeline: PipelineCache = null;\r\n\tpublic var pipeline(get, set): PipelineCache;\r\n\r\n\tpublic function new(g4: Graphics) {\r\n\t\tthis.g = g4;\r\n\t\tbufferIndex = 0;\r\n\t\tinitShaders();\r\n\t\tmyPipeline = standardImagePipeline;\r\n\t\tinitBuffers();\r\n\t}\r\n\r\n\tprivate function get_pipeline(): PipelineCache {\r\n\t\treturn myPipeline;\r\n\t}\r\n\r\n\tprivate function set_pipeline(pipe: PipelineCache): PipelineCache {\r\n\t\tmyPipeline = pipe != null ? pipe : standardImagePipeline;\r\n\t\treturn myPipeline;\r\n\t}\r\n\r\n\tpublic function setProjection(projectionMatrix: FastMatrix4): Void {\r\n\t\tthis.projectionMatrix = projectionMatrix;\r\n\t}\r\n\r\n\tprivate static function initShaders(): Void {\r\n\t\tif (structure == null) {\r\n\t\t\tstructure = Graphics2.createImageVertexStructure();\r\n\t\t}\r\n\t\tif (standardImagePipeline == null) {\r\n\t\t\tvar pipeline = Graphics2.createImagePipeline(structure);\r\n\t\t\tpipeline.compile();\r\n\t\t\tstandardImagePipeline = new PipelineCache(pipeline);\r\n\t\t}\r\n\t}\r\n\r\n\tfunction initBuffers(): Void {\r\n\t\tif (rectVertexBuffer == null) {\r\n\t\t\trectVertexBuffer = new VertexBuffer(bufferSize * 4, structure, Usage.DynamicUsage);\r\n\t\t\trectVertices = rectVertexBuffer.lock();\r\n\r\n\t\t\tindexBuffer = new IndexBuffer(bufferSize * 3 * 2, Usage.StaticUsage);\r\n\t\t\tvar indices = indexBuffer.lock();\r\n\t\t\tfor (i in 0...bufferSize) {\r\n\t\t\t\tindices[i * 3 * 2 + 0] = i * 4 + 0;\r\n\t\t\t\tindices[i * 3 * 2 + 1] = i * 4 + 1;\r\n\t\t\t\tindices[i * 3 * 2 + 2] = i * 4 + 2;\r\n\t\t\t\tindices[i * 3 * 2 + 3] = i * 4 + 0;\r\n\t\t\t\tindices[i * 3 * 2 + 4] = i * 4 + 2;\r\n\t\t\t\tindices[i * 3 * 2 + 5] = i * 4 + 3;\r\n\t\t\t}\r\n\t\t\tindexBuffer.unlock();\r\n\t\t}\r\n\t}\r\n\r\n\tprivate inline function setRectVertices(\r\n\t\tbottomleftx: FastFloat, bottomlefty: FastFloat,\r\n\t\ttopleftx: FastFloat, toplefty: FastFloat,\r\n\t\ttoprightx: FastFloat, toprighty: FastFloat,\r\n\t\tbottomrightx: FastFloat, bottomrighty: FastFloat): Void {\r\n\t\tvar baseIndex: Int = bufferIndex * vertexSize * 4;\r\n\t\trectVertices.set(baseIndex +  0, bottomleftx);\r\n\t\trectVertices.set(baseIndex +  1, bottomlefty);\r\n\t\trectVertices.set(baseIndex +  2, -5.0);\r\n\r\n\t\trectVertices.set(baseIndex +  9, topleftx);\r\n\t\trectVertices.set(baseIndex + 10, toplefty);\r\n\t\trectVertices.set(baseIndex + 11, -5.0);\r\n\r\n\t\trectVertices.set(baseIndex + 18, toprightx);\r\n\t\trectVertices.set(baseIndex + 19, toprighty);\r\n\t\trectVertices.set(baseIndex + 20, -5.0);\r\n\r\n\t\trectVertices.set(baseIndex + 27, bottomrightx);\r\n\t\trectVertices.set(baseIndex + 28, bottomrighty);\r\n\t\trectVertices.set(baseIndex + 29, -5.0);\r\n\t}\r\n\r\n\tprivate inline function setRectTexCoords(left: FastFloat, top: FastFloat, right: FastFloat, bottom: FastFloat): Void {\r\n\t\tvar baseIndex: Int = bufferIndex * vertexSize * 4;\r\n\t\trectVertices.set(baseIndex +  3, left);\r\n\t\trectVertices.set(baseIndex +  4, bottom);\r\n\r\n\t\trectVertices.set(baseIndex + 12, left);\r\n\t\trectVertices.set(baseIndex + 13, top);\r\n\r\n\t\trectVertices.set(baseIndex + 21, right);\r\n\t\trectVertices.set(baseIndex + 22, top);\r\n\r\n\t\trectVertices.set(baseIndex + 30, right);\r\n\t\trectVertices.set(baseIndex + 31, bottom);\r\n\t}\r\n\r\n\tprivate inline function setRectColor(r: FastFloat, g: FastFloat, b: FastFloat, a: FastFloat): Void {\r\n\t\tvar baseIndex: Int = bufferIndex * vertexSize * 4;\r\n\t\trectVertices.set(baseIndex +  5, r);\r\n\t\trectVertices.set(baseIndex +  6, g);\r\n\t\trectVertices.set(baseIndex +  7, b);\r\n\t\trectVertices.set(baseIndex +  8, a);\r\n\r\n\t\trectVertices.set(baseIndex + 14, r);\r\n\t\trectVertices.set(baseIndex + 15, g);\r\n\t\trectVertices.set(baseIndex + 16, b);\r\n\t\trectVertices.set(baseIndex + 17, a);\r\n\r\n\t\trectVertices.set(baseIndex + 23, r);\r\n\t\trectVertices.set(baseIndex + 24, g);\r\n\t\trectVertices.set(baseIndex + 25, b);\r\n\t\trectVertices.set(baseIndex + 26, a);\r\n\r\n\t\trectVertices.set(baseIndex + 32, r);\r\n\t\trectVertices.set(baseIndex + 33, g);\r\n\t\trectVertices.set(baseIndex + 34, b);\r\n\t\trectVertices.set(baseIndex + 35, a);\r\n\t}\r\n\r\n\tprivate function drawBuffer(): Void {\r\n\t\trectVertexBuffer.unlock(bufferIndex * 4);\r\n\t\tg.setPipeline(myPipeline.pipeline);\r\n\t\tg.setVertexBuffer(rectVertexBuffer);\r\n\t\tg.setIndexBuffer(indexBuffer);\r\n\t\tg.setTexture(myPipeline.textureLocation, lastTexture);\r\n\t\tg.setTextureParameters(myPipeline.textureLocation, TextureAddressing.Clamp, TextureAddressing.Clamp, bilinear ? TextureFilter.LinearFilter : TextureFilter.PointFilter, bilinear ? TextureFilter.LinearFilter : TextureFilter.PointFilter, bilinearMipmaps ? MipMapFilter.LinearMipFilter : MipMapFilter.NoMipFilter);\r\n\t\tg.setMatrix(myPipeline.projectionLocation, projectionMatrix);\r\n\r\n\t\tg.drawIndexedVertices(0, bufferIndex * 2 * 3);\r\n\r\n\t\tg.setTexture(myPipeline.textureLocation, null);\r\n\t\tbufferIndex = 0;\r\n\t\trectVertices = rectVertexBuffer.lock();\r\n\t}\r\n\r\n\tpublic function setBilinearFilter(bilinear: Bool): Void {\r\n\t\tend();\r\n\t\tthis.bilinear = bilinear;\r\n\t}\r\n\r\n\tpublic function setBilinearMipmapFilter(bilinear: Bool): Void {\r\n\t\tend();\r\n\t\tthis.bilinearMipmaps = bilinear;\r\n\t}\r\n\r\n\tpublic inline function drawImage(img: kha.Image,\r\n\t\tbottomleftx: FastFloat, bottomlefty: FastFloat,\r\n\t\ttopleftx: FastFloat, toplefty: FastFloat,\r\n\t\ttoprightx: FastFloat, toprighty: FastFloat,\r\n\t\tbottomrightx: FastFloat, bottomrighty: FastFloat,\r\n\t\topacity: FastFloat, color: Color): Void {\r\n\t\tvar tex = img;\r\n\t\tif (bufferIndex + 1 >= bufferSize || (lastTexture != null && tex != lastTexture)) drawBuffer();\r\n\r\n\t\tsetRectColor(color.R, color.G, color.B, color.A * opacity);\r\n\t\tsetRectTexCoords(0, 0, tex.width / tex.realWidth, tex.height / tex.realHeight);\r\n\t\tsetRectVertices(bottomleftx, bottomlefty, topleftx, toplefty, toprightx, toprighty, bottomrightx, bottomrighty);\r\n\r\n\t\t++bufferIndex;\r\n\t\tlastTexture = tex;\r\n\t}\r\n\r\n\tpublic inline function drawImage2(img: kha.Image, sx: FastFloat, sy: FastFloat, sw: FastFloat, sh: FastFloat,\r\n\t\tbottomleftx: FastFloat, bottomlefty: FastFloat,\r\n\t\ttopleftx: FastFloat, toplefty: FastFloat,\r\n\t\ttoprightx: FastFloat, toprighty: FastFloat,\r\n\t\tbottomrightx: FastFloat, bottomrighty: FastFloat,\r\n\t\topacity: FastFloat, color: Color): Void {\r\n\t\tvar tex = img;\r\n\t\tif (bufferIndex + 1 >= bufferSize || (lastTexture != null && tex != lastTexture)) drawBuffer();\r\n\r\n\t\tsetRectTexCoords(sx / tex.realWidth, sy / tex.realHeight, (sx + sw) / tex.realWidth, (sy + sh) / tex.realHeight);\r\n\t\tsetRectColor(color.R, color.G, color.B, color.A * opacity);\r\n\t\tsetRectVertices(bottomleftx, bottomlefty, topleftx, toplefty, toprightx, toprighty, bottomrightx, bottomrighty);\r\n\r\n\t\t++bufferIndex;\r\n\t\tlastTexture = tex;\r\n\t}\r\n\r\n\tpublic inline function drawImageScale(img: kha.Image, sx: FastFloat, sy: FastFloat, sw: FastFloat, sh: FastFloat, left: FastFloat, top: FastFloat, right: FastFloat, bottom: FastFloat, opacity: FastFloat, color: Color): Void {\r\n\t\tvar tex = img;\r\n\t\tif (bufferIndex + 1 >= bufferSize || (lastTexture != null && tex != lastTexture)) drawBuffer();\r\n\r\n\t\tsetRectTexCoords(sx / tex.realWidth, sy / tex.realHeight, (sx + sw) / tex.realWidth, (sy + sh) / tex.realHeight);\r\n\t\tsetRectColor(color.R, color.G, color.B, opacity);\r\n\t\tsetRectVertices(left, bottom, left, top, right, top, right, bottom);\r\n\r\n\t\t++bufferIndex;\r\n\t\tlastTexture = tex;\r\n\t}\r\n\r\n\tpublic function end(): Void {\r\n\t\tif (bufferIndex > 0) drawBuffer();\r\n\t\tlastTexture = null;\r\n\t}\r\n}\r\n\r\nclass ColoredShaderPainter {\r\n\tvar projectionMatrix: FastMatrix4;\r\n\tstatic var standardColorPipeline: PipelineCache = null;\r\n\tstatic var structure: VertexStructure = null;\r\n\r\n\tstatic inline var bufferSize: Int = 1000;\r\n\tstatic var bufferIndex: Int;\r\n\tstatic var rectVertexBuffer: VertexBuffer;\r\n\tstatic var rectVertices: Float32Array;\r\n\tstatic var indexBuffer: IndexBuffer;\r\n\r\n\tstatic inline var triangleBufferSize: Int = 1000;\r\n\tstatic var triangleBufferIndex: Int;\r\n\tstatic var triangleVertexBuffer: VertexBuffer;\r\n\tstatic var triangleVertices: Float32Array;\r\n\tstatic var triangleIndexBuffer: IndexBuffer;\r\n\r\n\tvar g: Graphics;\r\n\tvar myPipeline: PipelineCache = null;\r\n\tpublic var pipeline(get, set): PipelineCache;\r\n\r\n\tpublic function new(g4: Graphics) {\r\n\t\tthis.g = g4;\r\n\t\tbufferIndex = 0;\r\n\t\ttriangleBufferIndex = 0;\r\n\t\tinitShaders();\r\n\t\tmyPipeline = standardColorPipeline;\r\n\t\tinitBuffers();\r\n\t}\r\n\r\n\tprivate function get_pipeline(): PipelineCache {\r\n\t\treturn myPipeline;\r\n\t}\r\n\r\n\tprivate function set_pipeline(pipe: PipelineCache): PipelineCache {\r\n\t\tmyPipeline = pipe != null ? pipe : standardColorPipeline;\r\n\t\treturn myPipeline;\r\n\t}\r\n\r\n\tpublic function setProjection(projectionMatrix: FastMatrix4): Void {\r\n\t\tthis.projectionMatrix = projectionMatrix;\r\n\t}\r\n\r\n\tprivate static function initShaders(): Void {\r\n\t\tif (structure == null) {\r\n\t\t\tstructure = Graphics2.createColoredVertexStructure();\r\n\t\t}\r\n\t\tif (standardColorPipeline == null) {\r\n\t\t\tvar pipeline = Graphics2.createColoredPipeline(structure);\r\n\t\t\tpipeline.compile();\r\n\t\t\tstandardColorPipeline = new PipelineCache(pipeline);\r\n\t\t}\r\n\t}\r\n\r\n\tfunction initBuffers(): Void {\r\n\t\tif (rectVertexBuffer == null) {\r\n\t\t\trectVertexBuffer = new VertexBuffer(bufferSize * 4, structure, Usage.DynamicUsage);\r\n\t\t\trectVertices = rectVertexBuffer.lock();\r\n\r\n\t\t\tindexBuffer = new IndexBuffer(bufferSize * 3 * 2, Usage.StaticUsage);\r\n\t\t\tvar indices = indexBuffer.lock();\r\n\t\t\tfor (i in 0...bufferSize) {\r\n\t\t\t\tindices[i * 3 * 2 + 0] = i * 4 + 0;\r\n\t\t\t\tindices[i * 3 * 2 + 1] = i * 4 + 1;\r\n\t\t\t\tindices[i * 3 * 2 + 2] = i * 4 + 2;\r\n\t\t\t\tindices[i * 3 * 2 + 3] = i * 4 + 0;\r\n\t\t\t\tindices[i * 3 * 2 + 4] = i * 4 + 2;\r\n\t\t\t\tindices[i * 3 * 2 + 5] = i * 4 + 3;\r\n\t\t\t}\r\n\t\t\tindexBuffer.unlock();\r\n\r\n\t\t\ttriangleVertexBuffer = new VertexBuffer(triangleBufferSize * 3, structure, Usage.DynamicUsage);\r\n\t\t\ttriangleVertices = triangleVertexBuffer.lock();\r\n\r\n\t\t\ttriangleIndexBuffer = new IndexBuffer(triangleBufferSize * 3, Usage.StaticUsage);\r\n\t\t\tvar triIndices = triangleIndexBuffer.lock();\r\n\t\t\tfor (i in 0...bufferSize) {\r\n\t\t\t\ttriIndices[i * 3 + 0] = i * 3 + 0;\r\n\t\t\t\ttriIndices[i * 3 + 1] = i * 3 + 1;\r\n\t\t\t\ttriIndices[i * 3 + 2] = i * 3 + 2;\r\n\t\t\t}\r\n\t\t\ttriangleIndexBuffer.unlock();\r\n\t\t}\r\n\t}\r\n\r\n\tpublic function setRectVertices(\r\n\t\tbottomleftx: Float, bottomlefty: Float,\r\n\t\ttopleftx: Float, toplefty: Float,\r\n\t\ttoprightx: Float, toprighty: Float,\r\n\t\tbottomrightx: Float, bottomrighty: Float): Void {\r\n\t\tvar baseIndex: Int = bufferIndex * 7 * 4;\r\n\t\trectVertices.set(baseIndex +  0, bottomleftx);\r\n\t\trectVertices.set(baseIndex +  1, bottomlefty);\r\n\t\trectVertices.set(baseIndex +  2, -5.0);\r\n\r\n\t\trectVertices.set(baseIndex +  7, topleftx);\r\n\t\trectVertices.set(baseIndex +  8, toplefty);\r\n\t\trectVertices.set(baseIndex +  9, -5.0);\r\n\r\n\t\trectVertices.set(baseIndex + 14, toprightx);\r\n\t\trectVertices.set(baseIndex + 15, toprighty);\r\n\t\trectVertices.set(baseIndex + 16, -5.0);\r\n\r\n\t\trectVertices.set(baseIndex + 21, bottomrightx);\r\n\t\trectVertices.set(baseIndex + 22, bottomrighty);\r\n\t\trectVertices.set(baseIndex + 23, -5.0);\r\n\t}\r\n\r\n\tpublic function setRectColors(opacity: FastFloat, color: Color): Void {\r\n\t\tvar baseIndex: Int = bufferIndex * 7 * 4;\r\n\r\n\t\tvar a: FastFloat = opacity * color.A;\r\n\t\tvar r: FastFloat = a * color.R;\r\n\t\tvar g: FastFloat = a * color.G;\r\n\t\tvar b: FastFloat = a * color.B;\r\n\r\n\t\trectVertices.set(baseIndex +  3, r);\r\n\t\trectVertices.set(baseIndex +  4, g);\r\n\t\trectVertices.set(baseIndex +  5, b);\r\n\t\trectVertices.set(baseIndex +  6, a);\r\n\r\n\t\trectVertices.set(baseIndex + 10, r);\r\n\t\trectVertices.set(baseIndex + 11, g);\r\n\t\trectVertices.set(baseIndex + 12, b);\r\n\t\trectVertices.set(baseIndex + 13, a);\r\n\r\n\t\trectVertices.set(baseIndex + 17, r);\r\n\t\trectVertices.set(baseIndex + 18, g);\r\n\t\trectVertices.set(baseIndex + 19, b);\r\n\t\trectVertices.set(baseIndex + 20, a);\r\n\r\n\t\trectVertices.set(baseIndex + 24, r);\r\n\t\trectVertices.set(baseIndex + 25, g);\r\n\t\trectVertices.set(baseIndex + 26, b);\r\n\t\trectVertices.set(baseIndex + 27, a);\r\n\t}\r\n\r\n\tprivate function setTriVertices(x1: Float, y1: Float, x2: Float, y2: Float, x3: Float, y3: Float): Void {\r\n\t\tvar baseIndex: Int = triangleBufferIndex * 7 * 3;\r\n\t\ttriangleVertices.set(baseIndex +  0, x1);\r\n\t\ttriangleVertices.set(baseIndex +  1, y1);\r\n\t\ttriangleVertices.set(baseIndex +  2, -5.0);\r\n\r\n\t\ttriangleVertices.set(baseIndex +  7, x2);\r\n\t\ttriangleVertices.set(baseIndex +  8, y2);\r\n\t\ttriangleVertices.set(baseIndex +  9, -5.0);\r\n\r\n\t\ttriangleVertices.set(baseIndex + 14, x3);\r\n\t\ttriangleVertices.set(baseIndex + 15, y3);\r\n\t\ttriangleVertices.set(baseIndex + 16, -5.0);\r\n\t}\r\n\r\n\tprivate function setTriColors(opacity: FastFloat, color: Color): Void {\r\n\t\tvar baseIndex: Int = triangleBufferIndex * 7 * 3;\r\n\r\n\t\tvar a: FastFloat = opacity * color.A;\r\n\t\tvar r: FastFloat = a * color.R;\r\n\t\tvar g: FastFloat = a * color.G;\r\n\t\tvar b: FastFloat = a * color.B;\r\n\r\n\t\ttriangleVertices.set(baseIndex +  3, r);\r\n\t\ttriangleVertices.set(baseIndex +  4, g);\r\n\t\ttriangleVertices.set(baseIndex +  5, b);\r\n\t\ttriangleVertices.set(baseIndex +  6, a);\r\n\r\n\t\ttriangleVertices.set(baseIndex + 10, r);\r\n\t\ttriangleVertices.set(baseIndex + 11, g);\r\n\t\ttriangleVertices.set(baseIndex + 12, b);\r\n\t\ttriangleVertices.set(baseIndex + 13, a);\r\n\r\n\t\ttriangleVertices.set(baseIndex + 17, r);\r\n\t\ttriangleVertices.set(baseIndex + 18, g);\r\n\t\ttriangleVertices.set(baseIndex + 19, b);\r\n\t\ttriangleVertices.set(baseIndex + 20, a);\r\n\t}\r\n\r\n\tprivate function drawBuffer(trisDone: Bool): Void {\r\n\t\tif (!trisDone) endTris(true);\r\n\r\n\t\trectVertexBuffer.unlock(bufferIndex * 4);\r\n\t\tg.setPipeline(myPipeline.pipeline);\r\n\t\tg.setVertexBuffer(rectVertexBuffer);\r\n\t\tg.setIndexBuffer(indexBuffer);\r\n\t\tg.setMatrix(myPipeline.projectionLocation, projectionMatrix);\r\n\r\n\t\tg.drawIndexedVertices(0, bufferIndex * 2 * 3);\r\n\r\n\t\tbufferIndex = 0;\r\n\t\trectVertices = rectVertexBuffer.lock();\r\n\t}\r\n\r\n\tprivate function drawTriBuffer(rectsDone: Bool): Void {\r\n\t\tif (!rectsDone) endRects(true);\r\n\r\n\t\ttriangleVertexBuffer.unlock(triangleBufferIndex * 3);\r\n\t\tg.setPipeline(myPipeline.pipeline);\r\n\t\tg.setVertexBuffer(triangleVertexBuffer);\r\n\t\tg.setIndexBuffer(triangleIndexBuffer);\r\n\t\tg.setMatrix(myPipeline.projectionLocation, projectionMatrix);\r\n\r\n\t\tg.drawIndexedVertices(0, triangleBufferIndex * 3);\r\n\r\n\t\ttriangleBufferIndex = 0;\r\n\t\ttriangleVertices = triangleVertexBuffer.lock();\r\n\t}\r\n\r\n\tpublic function fillRect(opacity: FastFloat, color: Color,\r\n\t\tbottomleftx: Float, bottomlefty: Float,\r\n\t\ttopleftx: Float, toplefty: Float,\r\n\t\ttoprightx: Float, toprighty: Float,\r\n\t\tbottomrightx: Float, bottomrighty: Float): Void {\r\n\t\tif (triangleBufferIndex > 0) drawTriBuffer(true); // Flush other buffer for right render order\r\n\r\n\t\tif (bufferIndex + 1 >= bufferSize) drawBuffer(false);\r\n\r\n\t\tsetRectColors(opacity, color);\r\n\t\tsetRectVertices(bottomleftx, bottomlefty, topleftx, toplefty, toprightx, toprighty, bottomrightx, bottomrighty);\r\n\t\t++bufferIndex;\r\n\t}\r\n\r\n\tpublic function fillTriangle(opacity: FastFloat, color: Color, x1: Float, y1: Float, x2: Float, y2: Float, x3: Float, y3: Float) {\r\n\t\tif (bufferIndex > 0) drawBuffer(true); // Flush other buffer for right render order\r\n\r\n\t\tif (triangleBufferIndex + 1 >= triangleBufferSize) drawTriBuffer(false);\r\n\r\n\t\tsetTriColors(opacity, color);\r\n\t\tsetTriVertices(x1, y1, x2, y2, x3, y3);\r\n\t\t++triangleBufferIndex;\r\n\t}\r\n\r\n\tpublic inline function endTris(rectsDone: Bool): Void {\r\n\t\tif (triangleBufferIndex > 0) drawTriBuffer(rectsDone);\r\n\t}\r\n\r\n\tpublic inline function endRects(trisDone: Bool): Void {\r\n\t\tif (bufferIndex > 0) drawBuffer(trisDone);\r\n\t}\r\n\r\n\tpublic inline function end(): Void {\r\n\t\tendTris(false);\r\n\t\tendRects(false);\r\n\t}\r\n}\r\n\r\nclass TextShaderPainter {\r\n\tvar projectionMatrix: FastMatrix4;\r\n\tstatic var standardTextPipeline: PipelineCache = null;\r\n\tstatic var structure: VertexStructure = null;\r\n\tstatic inline var bufferSize: Int = 1000;\r\n\tstatic var bufferIndex: Int;\r\n\tstatic var rectVertexBuffer: VertexBuffer;\r\n\tstatic var rectVertices: Float32Array;\r\n\tstatic var indexBuffer: IndexBuffer;\r\n\tvar font: Kravur;\r\n\tstatic var lastTexture: Image;\r\n\tvar g: Graphics;\r\n\tvar myPipeline: PipelineCache = null;\r\n\tpublic var pipeline(get, set): PipelineCache;\r\n\tpublic var fontSize: Int;\r\n\tvar bilinear: Bool = false;\r\n\r\n\tpublic function new(g4: Graphics) {\r\n\t\tthis.g = g4;\r\n\t\tbufferIndex = 0;\r\n\t\tinitShaders();\r\n\t\tmyPipeline = standardTextPipeline;\r\n\t\tinitBuffers();\r\n\t}\r\n\r\n\tprivate function get_pipeline(): PipelineCache {\r\n\t\treturn myPipeline;\r\n\t}\r\n\r\n\tprivate function set_pipeline(pipe: PipelineCache): PipelineCache {\r\n\t\tmyPipeline = pipe != null ? pipe : standardTextPipeline;\r\n\t\treturn myPipeline;\r\n\t}\r\n\r\n\tpublic function setProjection(projectionMatrix: FastMatrix4): Void {\r\n\t\tthis.projectionMatrix = projectionMatrix;\r\n\t}\r\n\r\n\tprivate static function initShaders(): Void {\r\n\t\tif (structure == null) {\r\n\t\t\tstructure = Graphics2.createTextVertexStructure();\r\n\t\t}\r\n\t\tif (standardTextPipeline == null) {\r\n\t\t\tvar pipeline = Graphics2.createTextPipeline(structure);\r\n\t\t\tpipeline.compile();\r\n\t\t\tstandardTextPipeline = new PipelineCache(pipeline);\r\n\t\t}\r\n\t}\r\n\r\n\tfunction initBuffers(): Void {\r\n\t\tif (rectVertexBuffer == null) {\r\n\t\t\trectVertexBuffer = new VertexBuffer(bufferSize * 4, structure, Usage.DynamicUsage);\r\n\t\t\trectVertices = rectVertexBuffer.lock();\r\n\r\n\t\t\tindexBuffer = new IndexBuffer(bufferSize * 3 * 2, Usage.StaticUsage);\r\n\t\t\tvar indices = indexBuffer.lock();\r\n\t\t\tfor (i in 0...bufferSize) {\r\n\t\t\t\tindices[i * 3 * 2 + 0] = i * 4 + 0;\r\n\t\t\t\tindices[i * 3 * 2 + 1] = i * 4 + 1;\r\n\t\t\t\tindices[i * 3 * 2 + 2] = i * 4 + 2;\r\n\t\t\t\tindices[i * 3 * 2 + 3] = i * 4 + 0;\r\n\t\t\t\tindices[i * 3 * 2 + 4] = i * 4 + 2;\r\n\t\t\t\tindices[i * 3 * 2 + 5] = i * 4 + 3;\r\n\t\t\t}\r\n\t\t\tindexBuffer.unlock();\r\n\t\t}\r\n\t}\r\n\r\n\tprivate function setRectVertices(\r\n\t\tbottomleftx: Float, bottomlefty: Float,\r\n\t\ttopleftx: Float, toplefty: Float,\r\n\t\ttoprightx: Float, toprighty: Float,\r\n\t\tbottomrightx: Float, bottomrighty: Float): Void {\r\n\t\tvar baseIndex: Int = bufferIndex * 9 * 4;\r\n\t\trectVertices.set(baseIndex +  0, bottomleftx);\r\n\t\trectVertices.set(baseIndex +  1, bottomlefty);\r\n\t\trectVertices.set(baseIndex +  2, -5.0);\r\n\r\n\t\trectVertices.set(baseIndex +  9, topleftx);\r\n\t\trectVertices.set(baseIndex + 10, toplefty);\r\n\t\trectVertices.set(baseIndex + 11, -5.0);\r\n\r\n\t\trectVertices.set(baseIndex + 18, toprightx);\r\n\t\trectVertices.set(baseIndex + 19, toprighty);\r\n\t\trectVertices.set(baseIndex + 20, -5.0);\r\n\r\n\t\trectVertices.set(baseIndex + 27, bottomrightx);\r\n\t\trectVertices.set(baseIndex + 28, bottomrighty);\r\n\t\trectVertices.set(baseIndex + 29, -5.0);\r\n\t}\r\n\r\n\tprivate function setRectTexCoords(left: Float, top: Float, right: Float, bottom: Float): Void {\r\n\t\tvar baseIndex: Int = bufferIndex * 9 * 4;\r\n\t\trectVertices.set(baseIndex +  3, left);\r\n\t\trectVertices.set(baseIndex +  4, bottom);\r\n\r\n\t\trectVertices.set(baseIndex + 12, left);\r\n\t\trectVertices.set(baseIndex + 13, top);\r\n\r\n\t\trectVertices.set(baseIndex + 21, right);\r\n\t\trectVertices.set(baseIndex + 22, top);\r\n\r\n\t\trectVertices.set(baseIndex + 30, right);\r\n\t\trectVertices.set(baseIndex + 31, bottom);\r\n\t}\r\n\r\n\tprivate function setRectColors(opacity: FastFloat, color: Color): Void {\r\n\t\tvar baseIndex: Int = bufferIndex * 9 * 4;\r\n\t\tvar a: FastFloat = opacity * color.A;\r\n\t\trectVertices.set(baseIndex +  5, color.R);\r\n\t\trectVertices.set(baseIndex +  6, color.G);\r\n\t\trectVertices.set(baseIndex +  7, color.B);\r\n\t\trectVertices.set(baseIndex +  8, a);\r\n\r\n\t\trectVertices.set(baseIndex + 14, color.R);\r\n\t\trectVertices.set(baseIndex + 15, color.G);\r\n\t\trectVertices.set(baseIndex + 16, color.B);\r\n\t\trectVertices.set(baseIndex + 17, a);\r\n\r\n\t\trectVertices.set(baseIndex + 23, color.R);\r\n\t\trectVertices.set(baseIndex + 24, color.G);\r\n\t\trectVertices.set(baseIndex + 25, color.B);\r\n\t\trectVertices.set(baseIndex + 26, a);\r\n\r\n\t\trectVertices.set(baseIndex + 32, color.R);\r\n\t\trectVertices.set(baseIndex + 33, color.G);\r\n\t\trectVertices.set(baseIndex + 34, color.B);\r\n\t\trectVertices.set(baseIndex + 35, a);\r\n\t}\r\n\r\n\tprivate function drawBuffer(): Void {\r\n\t\trectVertexBuffer.unlock(bufferIndex * 4);\r\n\t\tg.setPipeline(myPipeline.pipeline);\r\n\t\tg.setVertexBuffer(rectVertexBuffer);\r\n\t\tg.setIndexBuffer(indexBuffer);\r\n\t\tg.setMatrix(myPipeline.projectionLocation, projectionMatrix);\r\n\t\tg.setTexture(myPipeline.textureLocation, lastTexture);\r\n\t\tg.setTextureParameters(myPipeline.textureLocation, TextureAddressing.Clamp, TextureAddressing.Clamp, bilinear ? TextureFilter.LinearFilter : TextureFilter.PointFilter, bilinear ? TextureFilter.LinearFilter : TextureFilter.PointFilter, MipMapFilter.NoMipFilter);\r\n\r\n\t\tg.drawIndexedVertices(0, bufferIndex * 2 * 3);\r\n\r\n\t\tg.setTexture(myPipeline.textureLocation, null);\r\n\t\tbufferIndex = 0;\r\n\t\trectVertices = rectVertexBuffer.lock();\r\n\t}\r\n\r\n\tpublic function setBilinearFilter(bilinear: Bool): Void {\r\n\t\tend();\r\n\t\tthis.bilinear = bilinear;\r\n\t}\r\n\r\n\tpublic function setFont(font: Font): Void {\r\n\t\tthis.font = cast(font, Kravur);\r\n\t}\r\n\r\n\tprivate static function findIndex(charCode: Int): Int {\r\n\t\tvar glyphs = kha.graphics2.Graphics.fontGlyphs;\r\n\t\tvar blocks = Kravur.KravurImage.charBlocks;\r\n\t\tvar offset = 0;\r\n\t\tfor (i in 0...Std.int(blocks.length / 2)) {\r\n\t\t\tvar start = blocks[i * 2];\r\n\t\t\tvar end = blocks[i * 2 + 1];\r\n\t\t\tif (charCode >= start && charCode <= end) return offset + charCode - start;\r\n\t\t\toffset += end - start + 1;\r\n\t\t}\r\n\t\treturn 0;\r\n\t}\r\n\r\n\tvar bakedQuadCache = new kha.Kravur.AlignedQuad();\r\n\r\n\tpublic function drawString(text: String, opacity: FastFloat, color: Color, x: Float, y: Float, transformation: FastMatrix3): Void {\r\n\t\tvar font = this.font._get(fontSize);\r\n\t\tvar tex = font.getTexture();\r\n\t\tif (lastTexture != null && tex != lastTexture) drawBuffer();\r\n\t\tlastTexture = tex;\r\n\r\n\t\tvar xpos = x;\r\n\t\tvar ypos = y;\r\n\t\tfor (i in 0...text.length) {\r\n\t\t\tvar charCode = StringTools.fastCodeAt(text, i);\r\n\t\t\tvar q = font.getBakedQuad(bakedQuadCache, findIndex(charCode), xpos, ypos);\r\n\t\t\tif (q != null) {\r\n\t\t\t\tif (bufferIndex + 1 >= bufferSize) drawBuffer();\r\n\t\t\t\tsetRectColors(opacity, color);\r\n\t\t\t\tsetRectTexCoords(q.s0 * tex.width / tex.realWidth, q.t0 * tex.height / tex.realHeight, q.s1 * tex.width / tex.realWidth, q.t1 * tex.height / tex.realHeight);\r\n\t\t\t\tvar p0 = transformation.multvec(new FastVector2(q.x0, q.y1)); //bottom-left\r\n\t\t\t\tvar p1 = transformation.multvec(new FastVector2(q.x0, q.y0)); //top-left\r\n\t\t\t\tvar p2 = transformation.multvec(new FastVector2(q.x1, q.y0)); //top-right\r\n\t\t\t\tvar p3 = transformation.multvec(new FastVector2(q.x1, q.y1)); //bottom-right\r\n\t\t\t\tsetRectVertices(p0.x, p0.y, p1.x, p1.y, p2.x, p2.y, p3.x, p3.y);\r\n\t\t\t\txpos += q.xadvance;\r\n\t\t\t\t++bufferIndex;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tpublic function drawCharacters(text: Array<Int>, start: Int, length: Int, opacity: FastFloat, color: Color, x: Float, y: Float, transformation: FastMatrix3): Void {\r\n\t\tvar font = this.font._get(fontSize);\r\n\t\tvar tex = font.getTexture();\r\n\t\tif (lastTexture != null && tex != lastTexture) drawBuffer();\r\n\t\tlastTexture = tex;\r\n\r\n\t\tvar xpos = x;\r\n\t\tvar ypos = y;\r\n\t\tfor (i in start...start + length) {\r\n\t\t\tvar q = font.getBakedQuad(bakedQuadCache, findIndex(text[i]), xpos, ypos);\r\n\t\t\tif (q != null) {\r\n\t\t\t\tif (bufferIndex + 1 >= bufferSize) drawBuffer();\r\n\t\t\t\tsetRectColors(opacity, color);\r\n\t\t\t\tsetRectTexCoords(q.s0 * tex.width / tex.realWidth, q.t0 * tex.height / tex.realHeight, q.s1 * tex.width / tex.realWidth, q.t1 * tex.height / tex.realHeight);\r\n\t\t\t\tvar p0 = transformation.multvec(new FastVector2(q.x0, q.y1)); //bottom-left\r\n\t\t\t\tvar p1 = transformation.multvec(new FastVector2(q.x0, q.y0)); //top-left\r\n\t\t\t\tvar p2 = transformation.multvec(new FastVector2(q.x1, q.y0)); //top-right\r\n\t\t\t\tvar p3 = transformation.multvec(new FastVector2(q.x1, q.y1)); //bottom-right\r\n\t\t\t\tsetRectVertices(p0.x, p0.y, p1.x, p1.y, p2.x, p2.y, p3.x, p3.y);\r\n\t\t\t\txpos += q.xadvance;\r\n\t\t\t\t++bufferIndex;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tpublic function end(): Void {\r\n\t\tif (bufferIndex > 0) drawBuffer();\r\n\t\tlastTexture = null;\r\n\t}\r\n}\r\n\r\nclass Graphics2 extends kha.graphics2.Graphics {\r\n\tprivate var myColor: Color;\r\n\tprivate var myFont: Font;\r\n\tprivate var projectionMatrix: FastMatrix4;\r\n\tpublic var imagePainter: ImageShaderPainter;\r\n\tprivate var coloredPainter: ColoredShaderPainter;\r\n\tprivate var textPainter: TextShaderPainter;\r\n\tprivate static var videoPipeline: PipelineState;\r\n\tprivate var canvas: Canvas;\r\n\tprivate var g: Graphics;\r\n\tstatic var current: Graphics2 = null;\r\n\r\n\tpublic function new(canvas: Canvas) {\r\n\t\tsuper();\r\n\t\tcolor = Color.White;\r\n\t\tthis.canvas = canvas;\r\n\t\tg = canvas.g4;\r\n\t\timagePainter = new ImageShaderPainter(g);\r\n\t\tcoloredPainter = new ColoredShaderPainter(g);\r\n\t\ttextPainter = new TextShaderPainter(g);\r\n\t\ttextPainter.fontSize = fontSize;\r\n\t\tprojectionMatrix = FastMatrix4.identity();\r\n\t\tsetProjection();\r\n\r\n\t\tif (videoPipeline == null) {\r\n\t\t\tvideoPipeline = createImagePipeline(createImageVertexStructure());\r\n\t\t\tvideoPipeline.fragmentShader = Shaders.painter_video_frag;\r\n\t\t\tvideoPipeline.vertexShader = Shaders.painter_video_vert;\r\n\t\t\tvideoPipeline.compile();\r\n\t\t}\r\n\t}\r\n\r\n\tprivate static function upperPowerOfTwo(v: Int): Int {\r\n\t\tv--;\r\n\t\tv |= v >>> 1;\r\n\t\tv |= v >>> 2;\r\n\t\tv |= v >>> 4;\r\n\t\tv |= v >>> 8;\r\n\t\tv |= v >>> 16;\r\n\t\tv++;\r\n\t\treturn v;\r\n\t}\r\n\r\n\tprivate function setProjection(): Void {\r\n\t\tvar width = canvas.width;\r\n\t\tvar height = canvas.height;\r\n\t\tif (Std.is(canvas, Framebuffer)) {\r\n\t\t\tprojectionMatrix.setFrom(FastMatrix4.orthogonalProjection(0, width, height, 0, 0.1, 1000));\r\n\t\t}\r\n\t\telse {\r\n\t\t\tif (!Image.nonPow2Supported) {\r\n\t\t\t\twidth = upperPowerOfTwo(width);\r\n\t\t\t\theight = upperPowerOfTwo(height);\r\n\t\t\t}\r\n\t\t\tif (Image.renderTargetsInvertedY()) {\r\n\t\t\t\tprojectionMatrix.setFrom(FastMatrix4.orthogonalProjection(0, width, 0, height, 0.1, 1000));\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tprojectionMatrix.setFrom(FastMatrix4.orthogonalProjection(0, width, height, 0, 0.1, 1000));\r\n\t\t\t}\r\n\t\t}\r\n\t\timagePainter.setProjection(projectionMatrix);\r\n\t\tcoloredPainter.setProjection(projectionMatrix);\r\n\t\ttextPainter.setProjection(projectionMatrix);\r\n\t}\r\n\r\n\t#if cpp\r\n\tpublic override function drawImage(img: kha.Image, x: FastFloat, y: FastFloat): Void {\r\n\t\tcoloredPainter.end();\r\n\t\ttextPainter.end();\r\n\t\tvar xw: FastFloat = x + img.width;\r\n\t\tvar yh: FastFloat = y + img.height;\r\n\r\n\t\tvar xx = Float32x4.loadFast(x, x, xw, xw);\r\n\t\tvar yy = Float32x4.loadFast(yh, y, y, yh);\r\n\r\n\t\tvar _00 = Float32x4.loadAllFast(transformation._00);\r\n\t\tvar _01 = Float32x4.loadAllFast(transformation._01);\r\n\t\tvar _02 = Float32x4.loadAllFast(transformation._02);\r\n\t\tvar _10 = Float32x4.loadAllFast(transformation._10);\r\n\t\tvar _11 = Float32x4.loadAllFast(transformation._11);\r\n\t\tvar _12 = Float32x4.loadAllFast(transformation._12);\r\n\t\tvar _20 = Float32x4.loadAllFast(transformation._20);\r\n\t\tvar _21 = Float32x4.loadAllFast(transformation._21);\r\n\t\tvar _22 = Float32x4.loadAllFast(transformation._22);\r\n\r\n\t\t// matrix multiply\r\n\t\tvar w = Float32x4.add(Float32x4.add(Float32x4.mul(_02, xx), Float32x4.mul(_12, yy)), _22);\r\n\t\tvar px = Float32x4.div(Float32x4.add(Float32x4.add(Float32x4.mul(_00, xx), Float32x4.mul(_10, yy)), _20), w);\r\n\t\tvar py = Float32x4.div(Float32x4.add(Float32x4.add(Float32x4.mul(_01, xx), Float32x4.mul(_11, yy)), _21), w);\r\n\r\n\t\timagePainter.drawImage(img, Float32x4.get(px, 0), Float32x4.get(py, 0), Float32x4.get(px, 1), Float32x4.get(py, 1),\r\n\t\t\tFloat32x4.get(px, 2), Float32x4.get(py, 2), Float32x4.get(px, 3), Float32x4.get(py, 3), opacity, this.color);\r\n\t}\r\n\t#else\r\n\tpublic override function drawImage(img: kha.Image, x: FastFloat, y: FastFloat): Void {\r\n\t\tcoloredPainter.end();\r\n\t\ttextPainter.end();\r\n\t\tvar xw: FastFloat = x + img.width;\r\n\t\tvar yh: FastFloat = y + img.height;\r\n\t\tvar p1 = transformation.multvec(new FastVector2(x, yh));\r\n\t\tvar p2 = transformation.multvec(new FastVector2(x, y));\r\n\t\tvar p3 = transformation.multvec(new FastVector2(xw, y));\r\n\t\tvar p4 = transformation.multvec(new FastVector2(xw, yh));\r\n\t\timagePainter.drawImage(img, p1.x, p1.y, p2.x, p2.y, p3.x, p3.y, p4.x, p4.y, opacity, this.color);\r\n\t}\r\n\t#end\r\n\r\n\tpublic override function drawScaledSubImage(img: kha.Image, sx: FastFloat, sy: FastFloat, sw: FastFloat, sh: FastFloat, dx: FastFloat, dy: FastFloat, dw: FastFloat, dh: FastFloat): Void {\r\n\t\tcoloredPainter.end();\r\n\t\ttextPainter.end();\r\n\t\tvar p1 = transformation.multvec(new FastVector2(dx, dy + dh));\r\n\t\tvar p2 = transformation.multvec(new FastVector2(dx, dy));\r\n\t\tvar p3 = transformation.multvec(new FastVector2(dx + dw, dy));\r\n\t\tvar p4 = transformation.multvec(new FastVector2(dx + dw, dy + dh));\r\n\t\timagePainter.drawImage2(img, sx, sy, sw, sh, p1.x, p1.y, p2.x, p2.y, p3.x, p3.y, p4.x, p4.y, opacity, this.color);\r\n\t}\r\n\r\n\toverride public function get_color(): Color {\r\n\t\treturn myColor;\r\n\t}\r\n\r\n\toverride public function set_color(color: Color): Color {\r\n\t\treturn myColor = color;\r\n\t}\r\n\r\n\tpublic override function drawRect(x: Float, y: Float, width: Float, height: Float, strength: Float = 1.0): Void {\r\n\t\timagePainter.end();\r\n\t\ttextPainter.end();\r\n\r\n\t\tvar p1 = transformation.multvec(new FastVector2(x - strength / 2, y + strength / 2)); //bottom-left\r\n\t\tvar p2 = transformation.multvec(new FastVector2(x - strength / 2, y - strength / 2)); //top-left\r\n\t\tvar p3 = transformation.multvec(new FastVector2(x + width + strength / 2, y - strength / 2)); //top-right\r\n\t\tvar p4 = transformation.multvec(new FastVector2(x + width + strength / 2, y + strength / 2)); //bottom-right\r\n\t\tcoloredPainter.fillRect(opacity, color, p1.x, p1.y, p2.x, p2.y, p3.x, p3.y, p4.x, p4.y); // top\r\n\r\n\t\tp1.setFrom(transformation.multvec(new FastVector2(x - strength / 2, y + height - strength / 2)));\r\n\t\tp2.setFrom(transformation.multvec(new FastVector2(x - strength / 2, y + strength / 2)));\r\n\t\tp3.setFrom(transformation.multvec(new FastVector2(x + strength / 2, y + strength / 2)));\r\n\t\tp4.setFrom(transformation.multvec(new FastVector2(x + strength / 2, y + height - strength / 2)));\r\n\t\tcoloredPainter.fillRect(opacity, color, p1.x, p1.y, p2.x, p2.y, p3.x, p3.y, p4.x, p4.y); // left\r\n\r\n\t\tp1.setFrom(transformation.multvec(new FastVector2(x - strength / 2, y + height + strength / 2)));\r\n\t\tp2.setFrom(transformation.multvec(new FastVector2(x - strength / 2, y + height - strength / 2)));\r\n\t\tp3.setFrom(transformation.multvec(new FastVector2(x + width + strength / 2, y + height - strength / 2)));\r\n\t\tp4.setFrom(transformation.multvec(new FastVector2(x + width + strength / 2, y + height + strength / 2)));\r\n\t\tcoloredPainter.fillRect(opacity, color, p1.x, p1.y, p2.x, p2.y, p3.x, p3.y, p4.x, p4.y); // bottom\r\n\r\n\t\tp1.setFrom(transformation.multvec(new FastVector2(x + width - strength / 2, y + height - strength / 2)));\r\n\t\tp2.setFrom(transformation.multvec(new FastVector2(x + width - strength / 2, y + strength / 2)));\r\n\t\tp3.setFrom(transformation.multvec(new FastVector2(x + width + strength / 2, y + strength / 2)));\r\n\t\tp4.setFrom(transformation.multvec(new FastVector2(x + width + strength / 2, y + height - strength / 2)));\r\n\t\tcoloredPainter.fillRect(opacity, color, p1.x, p1.y, p2.x, p2.y, p3.x, p3.y, p4.x, p4.y); // right\r\n\t}\r\n\r\n\tpublic override function fillRect(x: Float, y: Float, width: Float, height: Float): Void {\r\n\t\timagePainter.end();\r\n\t\ttextPainter.end();\r\n\r\n\t\tvar p1 = transformation.multvec(new FastVector2(x, y + height));\r\n\t\tvar p2 = transformation.multvec(new FastVector2(x, y));\r\n\t\tvar p3 = transformation.multvec(new FastVector2(x + width, y));\r\n\t\tvar p4 = transformation.multvec(new FastVector2(x + width, y + height));\r\n\t\tcoloredPainter.fillRect(opacity, color, p1.x, p1.y, p2.x, p2.y, p3.x, p3.y, p4.x, p4.y);\r\n\t}\r\n\r\n\tpublic override function drawString(text: String, x: Float, y: Float): Void {\r\n\t\timagePainter.end();\r\n\t\tcoloredPainter.end();\r\n\r\n\t\ttextPainter.drawString(text, opacity, color, x, y, transformation);\r\n\t}\r\n\r\n\tpublic override function drawCharacters(text: Array<Int>, start: Int, length: Int, x: Float, y: Float): Void {\r\n\t\timagePainter.end();\r\n\t\tcoloredPainter.end();\r\n\r\n\t\ttextPainter.drawCharacters(text, start, length, opacity, color, x, y, transformation);\r\n\t}\r\n\r\n\toverride public function get_font(): Font {\r\n\t\treturn myFont;\r\n\t}\r\n\r\n\toverride public function set_font(font: Font): Font {\r\n\t\ttextPainter.setFont(font);\r\n\t\treturn myFont = font;\r\n\t}\r\n\r\n\toverride public function set_fontSize(value: Int): Int {\r\n\t\treturn super.fontSize = textPainter.fontSize = value;\r\n\t}\r\n\r\n\tpublic override function drawLine(x1: Float, y1: Float, x2: Float, y2: Float, strength: Float = 1.0): Void {\r\n\t\timagePainter.end();\r\n\t\ttextPainter.end();\r\n\r\n\t\tvar vec = new FastVector2();\r\n\t\tif (y2 == y1) vec.setFrom(new FastVector2(0, -1));\r\n\t\telse vec.setFrom(new FastVector2(1, -(x2 - x1) / (y2 - y1)));\r\n\t\tvec.length = strength;\r\n\t\tvar p1 = new FastVector2(x1 + 0.5 * vec.x, y1 + 0.5 * vec.y);\r\n\t\tvar p2 = new FastVector2(x2 + 0.5 * vec.x, y2 + 0.5 * vec.y);\r\n\t\tvar p3 = p1.sub(vec);\r\n\t\tvar p4 = p2.sub(vec);\r\n\r\n\t\tp1.setFrom(transformation.multvec(p1));\r\n\t\tp2.setFrom(transformation.multvec(p2));\r\n\t\tp3.setFrom(transformation.multvec(p3));\r\n\t\tp4.setFrom(transformation.multvec(p4));\r\n\r\n\t\tcoloredPainter.fillTriangle(opacity, color, p1.x, p1.y, p2.x, p2.y, p3.x, p3.y);\r\n\t\tcoloredPainter.fillTriangle(opacity, color, p3.x, p3.y, p2.x, p2.y, p4.x, p4.y);\r\n\t}\r\n\r\n\tpublic override function fillTriangle(x1: Float, y1: Float, x2: Float, y2: Float, x3: Float, y3: Float) {\r\n\t\timagePainter.end();\r\n\t\ttextPainter.end();\r\n\r\n\t\tvar p1 = transformation.multvec(new FastVector2(x1, y1));\r\n\t\tvar p2 = transformation.multvec(new FastVector2(x2, y2));\r\n\t\tvar p3 = transformation.multvec(new FastVector2(x3, y3));\r\n\t\tcoloredPainter.fillTriangle(opacity, color, p1.x, p1.y, p2.x, p2.y, p3.x, p3.y);\r\n\t}\r\n\r\n\tprivate var myImageScaleQuality: ImageScaleQuality = ImageScaleQuality.Low;\r\n\r\n\toverride private function get_imageScaleQuality(): ImageScaleQuality {\r\n\t\treturn myImageScaleQuality;\r\n\t}\r\n\r\n\toverride private function set_imageScaleQuality(value: ImageScaleQuality): ImageScaleQuality {\r\n\t\tif (value == myImageScaleQuality) {\r\n\t\t\treturn value;\r\n\t\t}\r\n\t\timagePainter.setBilinearFilter(value == ImageScaleQuality.High);\r\n\t\ttextPainter.setBilinearFilter(value == ImageScaleQuality.High);\r\n\t\treturn myImageScaleQuality = value;\r\n\t}\r\n\r\n\tprivate var myMipmapScaleQuality: ImageScaleQuality = ImageScaleQuality.Low;\r\n\r\n\toverride private function get_mipmapScaleQuality(): ImageScaleQuality {\r\n\t\treturn myMipmapScaleQuality;\r\n\t}\r\n\r\n\toverride private function set_mipmapScaleQuality(value: ImageScaleQuality): ImageScaleQuality {\r\n\t\timagePainter.setBilinearMipmapFilter(value == ImageScaleQuality.High);\r\n\t\t//textPainter.setBilinearMipmapFilter(value == ImageScaleQuality.High); // TODO (DK) implement for fonts as well?\r\n\t\treturn myMipmapScaleQuality = value;\r\n\t}\r\n\r\n\tvar pipelineCache = new Map<PipelineState, PipelineCache>();\r\n\tvar lastPipeline: PipelineState = null;\r\n\r\n\toverride private function setPipeline(pipeline: PipelineState): Void {\r\n\t\tif (pipeline == lastPipeline) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tlastPipeline = pipeline;\r\n\t\tflush();\r\n\t\tif (pipeline == null) {\r\n\t\t\timagePainter.pipeline = null;\r\n\t\t\tcoloredPainter.pipeline = null;\r\n\t\t\ttextPainter.pipeline = null;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tvar cache = pipelineCache[pipeline];\r\n\t\t\tif (cache == null) {\r\n\t\t\t\tcache = new PipelineCache(pipeline);\r\n\t\t\t\tpipelineCache[pipeline] = cache;\r\n\t\t\t}\r\n\t\t\timagePainter.pipeline = cache;\r\n\t\t\tcoloredPainter.pipeline = cache;\r\n\t\t\ttextPainter.pipeline = cache;\r\n\t\t}\r\n\t}\r\n\r\n\tvar scissorEnabled = false;\r\n\tvar scissorX: Int = -1;\r\n\tvar scissorY: Int = -1;\r\n\tvar scissorW: Int = -1;\r\n\tvar scissorH: Int = -1;\r\n\r\n\toverride public function scissor(x: Int, y: Int, width: Int, height: Int): Void {\r\n\t\t//if (!scissorEnabled || x != scissorX || y != scissorY || width != scissorW || height != scissorH) {\r\n\t\t\tscissorEnabled = true;\r\n\t\t\tscissorX = x;\r\n\t\t\tscissorY = y;\r\n\t\t\tscissorW = width;\r\n\t\t\tscissorH = height;\r\n\t\t\tflush();\r\n\t\t\tg.scissor(x, y, width, height);\r\n\t\t//}\r\n\t}\r\n\r\n\toverride public function disableScissor(): Void {\r\n\t\t//if (scissorEnabled) {\r\n\t\t\tscissorEnabled = false;\r\n\t\t\tflush();\r\n\t\t\tg.disableScissor();\r\n\t\t//}\r\n\t}\r\n\r\n\toverride public function begin(clear: Bool = true, clearColor: Color = null): Void {\r\n\t\tif (current == null) {\r\n\t\t\tcurrent = this;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthrow \"End before you begin\";\r\n\t\t}\r\n\r\n\t\tg.begin();\r\n\t\tif (clear) this.clear(clearColor);\r\n\t\tsetProjection();\r\n\t}\r\n\r\n\toverride public function clear(color: Color = null): Void {\r\n\t\tflush();\r\n\t\tg.clear(color == null ? Color.Black : color);\r\n\t}\r\n\r\n\tpublic override function flush(): Void {\r\n\t\timagePainter.end();\r\n\t\ttextPainter.end();\r\n\t\tcoloredPainter.end();\r\n\t}\r\n\r\n\tpublic override function end(): Void {\r\n\t\tflush();\r\n\t\tg.end();\r\n\r\n\t\tif (current == this) {\r\n\t\t\tcurrent = null;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthrow \"Begin before you end\";\r\n\t\t}\r\n\t}\r\n\r\n\tprivate function drawVideoInternal(video: kha.Video, x: Float, y: Float, width: Float, height: Float): Void {\r\n\r\n\t}\r\n\r\n\toverride public function drawVideo(video: kha.Video, x: Float, y: Float, width: Float, height: Float): Void {\r\n\t\tsetPipeline(videoPipeline);\r\n\t\tdrawVideoInternal(video, x, y, width, height);\r\n\t\tsetPipeline(null);\r\n\t}\r\n\r\n\tpublic static function createImageVertexStructure(): VertexStructure {\r\n\t\tvar structure = new VertexStructure();\r\n\t\tstructure.add(\"vertexPosition\", VertexData.Float3);\r\n\t\tstructure.add(\"texPosition\", VertexData.Float2);\r\n\t\tstructure.add(\"vertexColor\", VertexData.Float4);\r\n\t\treturn structure;\r\n\t}\r\n\r\n\tpublic static function createImagePipeline(structure: VertexStructure): PipelineState {\r\n\t\tvar shaderPipeline = new PipelineState();\r\n\t\tshaderPipeline.fragmentShader = Shaders.painter_image_frag;\r\n\t\tshaderPipeline.vertexShader = Shaders.painter_image_vert;\r\n\t\tshaderPipeline.inputLayout = [structure];\r\n\t\tshaderPipeline.blendSource = BlendingFactor.BlendOne;\r\n\t\tshaderPipeline.blendDestination = BlendingFactor.InverseSourceAlpha;\r\n\t\tshaderPipeline.alphaBlendSource = BlendingFactor.BlendOne;\r\n\t\tshaderPipeline.alphaBlendDestination = BlendingFactor.InverseSourceAlpha;\r\n\t\treturn shaderPipeline;\r\n\t}\r\n\r\n\tpublic static function createColoredVertexStructure(): VertexStructure {\r\n\t\tvar structure = new VertexStructure();\r\n\t\tstructure.add(\"vertexPosition\", VertexData.Float3);\r\n\t\tstructure.add(\"vertexColor\", VertexData.Float4);\r\n\t\treturn structure;\r\n\t}\r\n\r\n\tpublic static function createColoredPipeline(structure: VertexStructure): PipelineState {\r\n\t\tvar shaderPipeline = new PipelineState();\r\n\t\tshaderPipeline.fragmentShader = Shaders.painter_colored_frag;\r\n\t\tshaderPipeline.vertexShader = Shaders.painter_colored_vert;\r\n\t\tshaderPipeline.inputLayout = [structure];\r\n\t\tshaderPipeline.blendSource = BlendingFactor.BlendOne;\r\n\t\tshaderPipeline.blendDestination = BlendingFactor.InverseSourceAlpha;\r\n\t\tshaderPipeline.alphaBlendSource = BlendingFactor.BlendOne;\r\n\t\tshaderPipeline.alphaBlendDestination = BlendingFactor.InverseSourceAlpha;\r\n\t\treturn shaderPipeline;\r\n\t}\r\n\r\n\tpublic static function createTextVertexStructure(): VertexStructure {\r\n\t\tvar structure = new VertexStructure();\r\n\t\tstructure.add(\"vertexPosition\", VertexData.Float3);\r\n\t\tstructure.add(\"texPosition\", VertexData.Float2);\r\n\t\tstructure.add(\"vertexColor\", VertexData.Float4);\r\n\t\treturn structure;\r\n\t}\r\n\r\n\tpublic static function createTextPipeline(structure: VertexStructure): PipelineState {\r\n\t\tvar shaderPipeline = new PipelineState();\r\n\t\tshaderPipeline.fragmentShader = Shaders.painter_text_frag;\r\n\t\tshaderPipeline.vertexShader = Shaders.painter_text_vert;\r\n\t\tshaderPipeline.inputLayout = [structure];\r\n\t\tshaderPipeline.blendSource = BlendingFactor.SourceAlpha;\r\n\t\tshaderPipeline.blendDestination = BlendingFactor.InverseSourceAlpha;\r\n\t\tshaderPipeline.alphaBlendSource = BlendingFactor.SourceAlpha;\r\n\t\tshaderPipeline.alphaBlendDestination = BlendingFactor.InverseSourceAlpha;\r\n\t\treturn shaderPipeline;\r\n\t}\r\n}\r\n","package kha.math;\r\n\r\n@:structInit\r\nclass FastVector2 {\r\n\tpublic inline function new(x: FastFloat = 0, y: FastFloat = 0): Void {\r\n\t\tthis.x = x;\r\n\t\tthis.y = y;\r\n\t}\r\n\r\n\tpublic static function fromVector2(v: Vector2): FastVector2 {\r\n\t\treturn new FastVector2(v.x, v.y);\r\n\t}\r\n\r\n\tpublic var x: FastFloat;\r\n\tpublic var y: FastFloat;\r\n\tpublic var length(get, set): FastFloat;\r\n\r\n\t@:extern public inline function setFrom(v: FastVector2): Void {\r\n\t\tthis.x = v.x;\r\n\t\tthis.y = v.y;\r\n\t}\r\n\r\n\tprivate inline function get_length(): FastFloat {\r\n\t\treturn Math.sqrt(x * x + y * y);\r\n\t}\r\n\r\n\tprivate inline function set_length(length: FastFloat): FastFloat {\r\n\t\tvar currentLength = get_length();\r\n\t\tif (currentLength == 0) return 0;\r\n\t\tvar mul = length / currentLength;\r\n\t\tx *= mul;\r\n\t\ty *= mul;\r\n\t\treturn length;\r\n\t}\r\n\r\n\t@:extern public inline function add(vec: FastVector2): FastVector2 {\r\n\t\treturn new FastVector2(x + vec.x, y + vec.y);\r\n\t}\r\n\r\n\t@:extern public inline function sub(vec: FastVector2): FastVector2 {\r\n\t\treturn new FastVector2(x - vec.x, y - vec.y);\r\n\t}\r\n\r\n\t@:extern public inline function mult(value: FastFloat): FastVector2 {\r\n\t\treturn new FastVector2(x * value, y * value);\r\n\t}\r\n\r\n\t@:extern public inline function div(value: FastFloat): FastVector2 {\r\n\t\treturn mult(1 / value);\r\n\t}\r\n\r\n\t@:extern public inline function dot(v: FastVector2): FastFloat {\r\n\t\treturn x * v.x + y * v.y;\r\n\t}\r\n\r\n\t@:deprecated(\"normalize() will be deprecated soon, use the immutable normalized() instead\")\r\n\t@:extern public inline function normalize(): Void {\r\n\t\t#if haxe4 inline #end set_length(1);\r\n\t}\r\n\r\n\t@:extern public inline function normalized(): FastVector2 {\r\n\t\tvar v = new FastVector2(x, y);\r\n\t\t#if haxe4 inline #end v.set_length(1);\r\n\t\treturn v;\r\n\t}\r\n\r\n\t@:extern public inline function angle(v: FastVector2): FastFloat {\r\n\t\treturn Math.atan2(y,x) - Math.atan2(v.y,v.x);\r\n\t}\r\n\r\n\tpublic function toString() {\r\n\t\treturn 'FastVector2($x, $y)';\r\n\t}\r\n}\r\n","package kha.graphics4;\n\nimport js.html.webgl.GL;\nimport kha.arrays.Uint32Array;\nimport kha.graphics4.Usage;\n\nclass IndexBuffer {\n\tprivate var buffer: Dynamic;\n\tpublic var _data: Uint32Array;\n\tprivate var mySize: Int;\n\tprivate var usage: Usage;\n\tprivate var lockStart: Int = 0;\n\tprivate var lockEnd: Int = 0;\n\t\n\tpublic function new(indexCount: Int, usage: Usage, canRead: Bool = false) {\n\t\tthis.usage = usage;\n\t\tmySize = indexCount;\n\t\tbuffer = SystemImpl.gl.createBuffer();\n\t\t_data = new Uint32Array(indexCount);\n\t}\n\t\n\tpublic function delete(): Void {\n\t\t_data = null;\n\t\tSystemImpl.gl.deleteBuffer(buffer);\n\t}\n\t\n\tpublic function lock(?start: Int, ?count: Int): Uint32Array {\n\t\tlockStart = start != null ? start : 0; \n\t\tlockEnd = count != null ? start + count : mySize; \n\t\treturn _data.subarray(lockStart, lockEnd);\n\t}\n\t\n\tpublic function unlock(?count: Int): Void {\n\t\tif(count != null) lockEnd = lockStart + count;\n\t\tSystemImpl.gl.bindBuffer(GL.ELEMENT_ARRAY_BUFFER, buffer);\n\t\tvar data = _data.subarray(lockStart, lockEnd);\n\t\tvar glData: Dynamic = SystemImpl.elementIndexUint == null ? new js.lib.Uint16Array(untyped data.data()) : data.data();\n\t\tSystemImpl.gl.bufferData(GL.ELEMENT_ARRAY_BUFFER, glData, usage == Usage.DynamicUsage ? GL.DYNAMIC_DRAW : GL.STATIC_DRAW);\n\t}\n\t\n\tpublic function set(): Void {\n\t\tSystemImpl.gl.bindBuffer(GL.ELEMENT_ARRAY_BUFFER, buffer);\n\t}\n\t\n\tpublic function count(): Int {\n\t\treturn mySize;\n\t}\n}\n","package kha.graphics4;\r\n\r\nclass PipelineStateBase {\r\n\tpublic function new() {\r\n\t\tinputLayout = null;\r\n\t\tvertexShader = null;\r\n\t\tfragmentShader = null;\r\n\t\tgeometryShader = null;\r\n\t\ttessellationControlShader = null;\r\n\t\ttessellationEvaluationShader = null;\r\n\r\n\t\tcullMode = CullMode.None;\r\n\r\n\t\tdepthWrite = false;\r\n\t\tdepthMode = CompareMode.Always;\r\n\r\n\t\tstencilMode = CompareMode.Always;\r\n\t\tstencilBothPass = StencilAction.Keep;\r\n\t\tstencilDepthFail = StencilAction.Keep;\r\n\t\tstencilFail = StencilAction.Keep;\r\n\t\tstencilReferenceValue = Static(0);\r\n\t\tstencilReadMask = 0xff;\r\n\t\tstencilWriteMask = 0xff;\r\n\r\n\t\tblendSource = BlendingFactor.BlendOne;\r\n\t\tblendDestination = BlendingFactor.BlendZero;\r\n\t\tblendOperation = BlendingOperation.Add;\r\n\t\talphaBlendSource = BlendingFactor.BlendOne;\r\n\t\talphaBlendDestination = BlendingFactor.BlendZero;\r\n\t\talphaBlendOperation = BlendingOperation.Add;\r\n\t\t\r\n\t\tcolorWriteMasksRed = [];\r\n\t\tcolorWriteMasksGreen = [];\r\n\t\tcolorWriteMasksBlue = [];\r\n\t\tcolorWriteMasksAlpha = [];\r\n\t\tfor (i in 0...8) colorWriteMasksRed.push(true);\r\n\t\tfor (i in 0...8) colorWriteMasksGreen.push(true);\r\n\t\tfor (i in 0...8) colorWriteMasksBlue.push(true);\r\n\t\tfor (i in 0...8) colorWriteMasksAlpha.push(true);\r\n\r\n\t\tconservativeRasterization = false;\r\n\t}\r\n\r\n\tpublic var inputLayout: Array<VertexStructure>;\r\n\tpublic var vertexShader: VertexShader;\r\n\tpublic var fragmentShader: FragmentShader;\r\n\tpublic var geometryShader: GeometryShader;\r\n\tpublic var tessellationControlShader: TessellationControlShader;\r\n\tpublic var tessellationEvaluationShader: TessellationEvaluationShader;\r\n\r\n\tpublic var cullMode: CullMode;\r\n\r\n\tpublic var depthWrite: Bool;\r\n\tpublic var depthMode: CompareMode;\r\n\r\n\tpublic var stencilMode: CompareMode;\r\n\tpublic var stencilBothPass: StencilAction;\r\n\tpublic var stencilDepthFail: StencilAction;\r\n\tpublic var stencilFail: StencilAction;\r\n\tpublic var stencilReferenceValue: StencilValue;\r\n\tpublic var stencilReadMask: Int;\r\n\tpublic var stencilWriteMask: Int;\r\n\r\n\t// One, Zero deactivates blending\r\n\tpublic var blendSource: BlendingFactor;\r\n\tpublic var blendDestination: BlendingFactor;\r\n\tpublic var blendOperation: BlendingOperation;\r\n\tpublic var alphaBlendSource: BlendingFactor;\r\n\tpublic var alphaBlendDestination: BlendingFactor;\r\n\tpublic var alphaBlendOperation: BlendingOperation;\r\n\t\r\n\tpublic var colorWriteMask(never, set): Bool;\r\n\tpublic var colorWriteMaskRed(get, set): Bool;\r\n\tpublic var colorWriteMaskGreen(get, set): Bool;\r\n\tpublic var colorWriteMaskBlue(get, set): Bool;\r\n\tpublic var colorWriteMaskAlpha(get, set): Bool;\r\n\r\n\tpublic var colorWriteMasksRed: Array<Bool>;\r\n\tpublic var colorWriteMasksGreen: Array<Bool>;\r\n\tpublic var colorWriteMasksBlue: Array<Bool>;\r\n\tpublic var colorWriteMasksAlpha: Array<Bool>;\r\n\r\n\tinline function set_colorWriteMask(value: Bool): Bool {\r\n\t\treturn colorWriteMaskRed = colorWriteMaskBlue = colorWriteMaskGreen = colorWriteMaskAlpha = value;\r\n\t}\r\n\r\n\tinline function get_colorWriteMaskRed(): Bool {\r\n\t\treturn colorWriteMasksRed[0];\r\n\t}\r\n\r\n\tinline function set_colorWriteMaskRed(value: Bool): Bool {\r\n\t\treturn colorWriteMasksRed[0] = value;\r\n\t}\r\n\r\n\tinline function get_colorWriteMaskGreen(): Bool {\r\n\t\treturn colorWriteMasksGreen[0];\r\n\t}\r\n\r\n\tinline function set_colorWriteMaskGreen(value: Bool): Bool {\r\n\t\treturn colorWriteMasksGreen[0] = value;\r\n\t}\r\n\r\n\tinline function get_colorWriteMaskBlue(): Bool {\r\n\t\treturn colorWriteMasksBlue[0];\r\n\t}\r\n\r\n\tinline function set_colorWriteMaskBlue(value: Bool): Bool {\r\n\t\treturn colorWriteMasksBlue[0] = value;\r\n\t}\r\n\r\n\tinline function get_colorWriteMaskAlpha(): Bool {\r\n\t\treturn colorWriteMasksAlpha[0];\r\n\t}\r\n\r\n\tinline function set_colorWriteMaskAlpha(value: Bool): Bool {\r\n\t\treturn colorWriteMasksAlpha[0] = value;\r\n\t}\r\n\r\n\tpublic var conservativeRasterization: Bool;\r\n}\r\n","package kha.graphics4;\n\nimport js.html.webgl.GL;\nimport kha.graphics4.VertexData;\n\nclass PipelineState extends PipelineStateBase {\n\tprivate var program: Dynamic = null;\n\tprivate var textures: Array<String>;\n\tprivate var textureValues: Array<Dynamic>;\n\t\n\tpublic function new() {\n\t\tsuper();\n\t\ttextures = new Array<String>();\n\t\ttextureValues = new Array<Dynamic>();\n\t}\n\t\n\tpublic function delete(): Void {\n\t\tif (program != null) {\n\t\t\tSystemImpl.gl.deleteProgram(program);\n\t\t}\n\t}\n\t\t\n\tpublic function compile(): Void {\n\t\tif (program != null) {\n\t\t\tSystemImpl.gl.deleteProgram(program);\n\t\t}\n\t\tprogram = SystemImpl.gl.createProgram();\n\t\tcompileShader(vertexShader);\n\t\tcompileShader(fragmentShader);\n\t\tSystemImpl.gl.attachShader(program, vertexShader.shader);\n\t\tSystemImpl.gl.attachShader(program, fragmentShader.shader);\n\t\t\n\t\tvar index = 0;\n\t\tfor (structure in inputLayout) {\n\t\t\tfor (element in structure.elements) {\n\t\t\t\tSystemImpl.gl.bindAttribLocation(program, index, element.name);\n\t\t\t\tif (element.data == VertexData.Float4x4) {\n\t\t\t\t\tindex += 4;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t++index;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\tSystemImpl.gl.linkProgram(program);\n\t\tif (!SystemImpl.gl.getProgramParameter(program, GL.LINK_STATUS)) {\n\t\t\tthrow \"Could not link the shader program:\\n\" + SystemImpl.gl.getProgramInfoLog(program);\n\t\t}\n\t}\n\t\n\tpublic function set(): Void {\n\t\tSystemImpl.gl.useProgram(program);\n\t\tfor (index in 0...textureValues.length) SystemImpl.gl.uniform1i(textureValues[index], index);\n\t\tSystemImpl.gl.colorMask(colorWriteMaskRed, colorWriteMaskGreen, colorWriteMaskBlue, colorWriteMaskAlpha);\n\t}\n\t\n\tprivate function compileShader(shader: Dynamic): Void {\n\t\tif (shader.shader != null) return;\n\t\tvar s = SystemImpl.gl.createShader(shader.type);\n\t\tvar highp = SystemImpl.gl.getShaderPrecisionFormat(GL.FRAGMENT_SHADER, GL.HIGH_FLOAT);\n\t\tvar highpSupported = highp.precision != 0;\n\t\tvar files: Array<String> = shader.files;\n\t\tfor (i in 0...files.length) {\n\t\t\tif (SystemImpl.gl2) {\n\t\t\t\tif (files[i].indexOf(\"-webgl2\") >= 0 || files[i].indexOf(\"runtime-string\") >= 0) {\n\t\t\t\t\tSystemImpl.gl.shaderSource(s, shader.sources[i]);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (!highpSupported && (files[i].indexOf(\"-relaxed\") >= 0 || files[i].indexOf(\"runtime-string\") >= 0)) {\n\t\t\t\t\tSystemImpl.gl.shaderSource(s, shader.sources[i]);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tif (highpSupported && (files[i].indexOf(\"-relaxed\") < 0 || files[i].indexOf(\"runtime-string\") >= 0)) {\n\t\t\t\t\tSystemImpl.gl.shaderSource(s, shader.sources[i]);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tSystemImpl.gl.compileShader(s);\n\t\tif (!SystemImpl.gl.getShaderParameter(s, GL.COMPILE_STATUS)) {\n\t\t\tthrow \"Could not compile shader:\\n\" + SystemImpl.gl.getShaderInfoLog(s);\n\t\t}\n\t\tshader.shader = s;\n\t}\n\t\n\tpublic function getConstantLocation(name: String): kha.graphics4.ConstantLocation {\n\t\tvar location = SystemImpl.gl.getUniformLocation(program, name);\n\t\tif (location == null) {\n\t\t\ttrace(\"Warning: Uniform \" + name + \" not found.\");\n\t\t}\n\t\tvar type = GL.FLOAT;\n\t\tvar count: Int = SystemImpl.gl.getProgramParameter(program, GL.ACTIVE_UNIFORMS);\n\t\tfor (i in 0...count) {\n\t\t\tvar info = SystemImpl.gl.getActiveUniform(program, i);\n\t\t\tif (info.name == name || info.name == name + \"[0]\") {\n\t\t\t\ttype = info.type;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn new kha.js.graphics4.ConstantLocation(location, type);\n\t}\n\t\n\tpublic function getTextureUnit(name: String): kha.graphics4.TextureUnit {\n\t\tvar index = findTexture(name);\n\t\tif (index < 0) {\n\t\t\tvar location = SystemImpl.gl.getUniformLocation(program, name);\n\t\t\tif (location == null) {\n\t\t\t\ttrace(\"Warning: Sampler \" + name + \" not found.\");\n\t\t\t}\n\t\t\tindex = textures.length;\n\t\t\ttextureValues.push(location);\n\t\t\ttextures.push(name);\n\t\t}\n\t\treturn new kha.js.graphics4.TextureUnit(index);\n\t}\n\t\n\tprivate function findTexture(name: String): Int {\n\t\tfor (index in 0...textures.length) {\n\t\t\tif (textures[index] == name) return index;\n\t\t}\n\t\treturn -1;\n\t}\n}\n","package kha.graphics4;\n\nimport js.html.webgl.GL;\nimport kha.arrays.Float32Array;\nimport kha.arrays.Int16Array;\nimport kha.graphics4.Usage;\nimport kha.graphics4.VertexStructure;\n\nclass VertexBuffer {\n\tprivate var buffer: Dynamic;\n\tpublic var _data: Float32Array;\n\tprivate var mySize: Int;\n\tprivate var myStride: Int;\n\tprivate var sizes: Array<Int>;\n\tprivate var offsets: Array<Int>;\n\tprivate var types: Array<Int>;\n\tprivate var usage: Usage;\n\tprivate var instanceDataStepRate: Int;\n\tprivate var lockStart: Int = 0;\n\tprivate var lockEnd: Int = 0;\n\t\n\tpublic function new(vertexCount: Int, structure: VertexStructure, usage: Usage, instanceDataStepRate: Int = 0, canRead: Bool = false) {\n\t\tthis.usage = usage;\n\t\tthis.instanceDataStepRate = instanceDataStepRate;\n\t\tmySize = vertexCount;\n\t\tmyStride = 0;\n\t\tfor (element in structure.elements) {\n\t\t\tswitch (element.data) {\n\t\t\tcase Float1:\n\t\t\t\tmyStride += 4 * 1;\n\t\t\tcase Float2:\n\t\t\t\tmyStride += 4 * 2;\n\t\t\tcase Float3:\n\t\t\t\tmyStride += 4 * 3;\n\t\t\tcase Float4:\n\t\t\t\tmyStride += 4 * 4;\n\t\t\tcase Float4x4:\n\t\t\t\tmyStride += 4 * 4 * 4;\n\t\t\tcase Short2Norm:\n\t\t\t\tmyStride += 2 * 2;\n\t\t\tcase Short4Norm:\n\t\t\t\tmyStride += 2 * 4;\n\t\t\t}\n\t\t}\n\t\n\t\tbuffer = SystemImpl.gl.createBuffer();\n\t\t_data = new Float32Array(Std.int(vertexCount * myStride / 4));\n\t\t\n\t\tsizes = new Array<Int>();\n\t\toffsets = new Array<Int>();\n\t\ttypes = new Array<Int>();\n\t\tsizes[structure.elements.length - 1] = 0;\n\t\toffsets[structure.elements.length - 1] = 0;\n\t\ttypes[structure.elements.length - 1] = 0;\n\t\t\n\t\tvar offset = 0;\n\t\tvar index = 0;\n\t\tfor (element in structure.elements) {\n\t\t\tvar size;\n\t\t\tvar type;\n\t\t\tswitch (element.data) {\n\t\t\tcase Float1:\n\t\t\t\tsize = 1;\n\t\t\t\ttype = GL.FLOAT;\n\t\t\tcase Float2:\n\t\t\t\tsize = 2;\n\t\t\t\ttype = GL.FLOAT;\n\t\t\tcase Float3:\n\t\t\t\tsize = 3;\n\t\t\t\ttype = GL.FLOAT;\n\t\t\tcase Float4:\n\t\t\t\tsize = 4;\n\t\t\t\ttype = GL.FLOAT;\n\t\t\tcase Float4x4:\n\t\t\t\tsize = 4 * 4;\n\t\t\t\ttype = GL.FLOAT;\n\t\t\tcase Short2Norm:\n\t\t\t\tsize = 2;\n\t\t\t\ttype = GL.SHORT;\n\t\t\tcase Short4Norm:\n\t\t\t\tsize = 4;\n\t\t\t\ttype = GL.SHORT;\n\t\t\t}\n\t\t\tsizes[index] = size;\n\t\t\toffsets[index] = offset;\n\t\t\ttypes[index] = type;\n\t\t\tswitch (element.data) {\n\t\t\tcase Float1:\n\t\t\t\toffset += 4 * 1;\n\t\t\tcase Float2:\n\t\t\t\toffset += 4 * 2;\n\t\t\tcase Float3:\n\t\t\t\toffset += 4 * 3;\n\t\t\tcase Float4:\n\t\t\t\toffset += 4 * 4;\n\t\t\tcase Float4x4:\n\t\t\t\toffset += 4 * 4 * 4;\n\t\t\tcase Short2Norm:\n\t\t\t\toffset += 2 * 2;\n\t\t\tcase Short4Norm:\n\t\t\t\toffset += 2 * 4;\n\t\t\t}\n\t\t\t++index;\n\t\t}\n\t}\n\n\tpublic function delete(): Void {\n\t\t_data = null;\n\t\tSystemImpl.gl.deleteBuffer(buffer);\n\t}\n\t\n\tpublic function lock(?start: Int, ?count: Int): Float32Array {\n\t\tlockStart = start != null ? start : 0; \n\t\tlockEnd = count != null ? start + count : mySize; \n\t\treturn _data.subarray(lockStart * stride(), lockEnd * stride());\n\t}\n\n\tpublic function lockInt16(?start: Int, ?count: Int): Int16Array {\n\t\treturn new Int16Array(untyped lock(start, count).buffer);\n\t}\n\t\n\tpublic function unlock(?count: Int): Void {\n\t\tif(count != null) lockEnd = lockStart + count;\n\t\tSystemImpl.gl.bindBuffer(GL.ARRAY_BUFFER, buffer);\n\t\tSystemImpl.gl.bufferData(GL.ARRAY_BUFFER, _data.subarray(lockStart * stride(), lockEnd * stride()).data(), usage == Usage.DynamicUsage ? GL.DYNAMIC_DRAW : GL.STATIC_DRAW);\n\t}\n\t\n\tpublic function stride(): Int {\n\t\treturn myStride;\n\t}\n\t\n\tpublic function count(): Int {\n\t\treturn mySize;\n\t}\n\t\n\tpublic function set(offset: Int): Int {\n\t\tvar ext: Dynamic = SystemImpl.gl2 ? true : SystemImpl.gl.getExtension(\"ANGLE_instanced_arrays\");\n\t\tSystemImpl.gl.bindBuffer(GL.ARRAY_BUFFER, buffer);\n\t\tvar attributesOffset = 0;\n\t\tfor (i in 0...sizes.length) {\n\t\t\tif (sizes[i] > 4) {\n\t\t\t\tvar size = sizes[i];\n\t\t\t\tvar addonOffset = 0;\n\t\t\t\twhile (size > 0) {\n\t\t\t\t\tSystemImpl.gl.enableVertexAttribArray(offset + attributesOffset);\n\t\t\t\t\tSystemImpl.gl.vertexAttribPointer(offset + attributesOffset, 4, GL.FLOAT, false, myStride, offsets[i] + addonOffset);\n\t\t\t\t\tif (ext) {\n\t\t\t\t\t\tif (SystemImpl.gl2) {\n\t\t\t\t\t\t\tuntyped SystemImpl.gl.vertexAttribDivisor(offset + attributesOffset, instanceDataStepRate);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\text.vertexAttribDivisorANGLE(offset + attributesOffset, instanceDataStepRate);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tsize -= 4;\n\t\t\t\t\taddonOffset += 4 * 4;\n\t\t\t\t\t++attributesOffset;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tvar normalized = types[i] == GL.FLOAT ? false : true;\n\t\t\t\tSystemImpl.gl.enableVertexAttribArray(offset + attributesOffset);\n\t\t\t\tSystemImpl.gl.vertexAttribPointer(offset + attributesOffset, sizes[i], types[i], normalized, myStride, offsets[i]);\n\t\t\t\tif (ext) {\n\t\t\t\t\tif (SystemImpl.gl2) {\n\t\t\t\t\t\tuntyped SystemImpl.gl.vertexAttribDivisor(offset + attributesOffset, instanceDataStepRate);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\text.vertexAttribDivisorANGLE(offset + attributesOffset, instanceDataStepRate);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t++attributesOffset;\n\t\t\t}\n\t\t}\n\t\treturn attributesOffset;\n\t}\n}\n","package kha.graphics4;\r\n\r\nclass VertexElement {\r\n\tpublic var name: String;\r\n\tpublic var data: VertexData;\r\n\t\r\n\tpublic function new(name: String, data: VertexData) {\r\n\t\tthis.name = name;\r\n\t\tthis.data = data;\r\n\t}\r\n}\r\n","package kha.graphics4;\r\n\r\nimport js.html.webgl.GL;\r\n\r\nclass VertexShader {\r\n\tpublic var sources: Array<String>;\r\n\tpublic var type: Dynamic;\r\n\tpublic var shader: Dynamic;\r\n\tpublic var files: Array<String>;\r\n\t\r\n\tpublic function new(sources: Array<Blob>, files: Array<String>) {\r\n\t\tthis.sources = [];\r\n\t\tfor (source in sources) {\r\n\t\t\tthis.sources.push(source.toString());\r\n\t\t}\r\n\t\tthis.type = GL.VERTEX_SHADER;\r\n\t\tthis.shader = null;\r\n\t\tthis.files = files;\r\n\t}\r\n\r\n\tpublic static function fromSource(source: String): VertexShader {\r\n\t\tvar shader = new VertexShader([], [\"runtime-string\"]);\r\n\t\tshader.sources.push(source);\r\n\t\treturn shader;\r\n\t}\r\n\t\r\n\tpublic function delete(): Void {\r\n\t\tSystemImpl.gl.deleteShader(shader);\r\n\t\tshader = null;\r\n\t\tsources = null;\r\n\t}\r\n}\r\n","package kha.graphics4;\r\n\r\nclass VertexStructure {\r\n\tpublic var elements: Array<VertexElement>;\r\n\tpublic var instanced: Bool;\r\n\t\r\n\tpublic function new() {\r\n\t\telements = new Array<VertexElement>();\r\n\t\tinstanced = false;\r\n\t}\r\n\t\r\n\tpublic function add(name: String, data: VertexData) {\r\n\t\telements.push(new VertexElement(name, data));\r\n\t}\r\n\t\r\n\t@:keep\r\n\tpublic function size(): Int {\r\n\t\treturn elements.length;\r\n\t}\r\n\t\r\n\tpublic function byteSize(): Int {\r\n\t\tvar byteSize = 0;\r\n\t\t\r\n\t\tfor (i in 0...elements.length) {\r\n\t\t\tbyteSize += dataByteSize(elements[i].data);\r\n\t\t}\r\n\t\t\r\n\t\treturn byteSize;\r\n\t}\r\n\t\r\n\tprivate function dataByteSize(data: VertexData) : Int {\r\n\t\tswitch (data) {\r\n\t\t\tcase Float1:\r\n\t\t\t\treturn 4 * 1;\r\n\t\t\tcase Float2:\r\n\t\t\t\treturn 4 * 2;\r\n\t\t\tcase Float3:\r\n\t\t\t\treturn 4 * 3;\r\n\t\t\tcase Float4:\r\n\t\t\t\treturn 4 * 4;\r\n\t\t\tcase Float4x4:\r\n\t\t\t\treturn 4 * 4 * 4;\r\n\t\t\tcase Short2Norm:\r\n\t\t\t\treturn 2 * 2;\r\n\t\t\tcase Short4Norm:\r\n\t\t\t\treturn 2 * 4;\r\n\t\t}\r\n\t\treturn 0;\r\n\t}\r\n\t\r\n\t@:keep\r\n\tpublic function get(index: Int): VertexElement {\r\n\t\treturn elements[index];\r\n\t}\r\n}\r\n","package kha.input;\r\n\r\n@:allow(kha.SystemImpl)\r\n@:expose\r\nclass Gamepad {\r\n\tprivate var index: Int;\r\n\r\n\tpublic static function get(index: Int = 0): Gamepad {\r\n\t\tif (index >= instances.length) return null;\r\n\t\treturn instances[index];\r\n\t}\r\n\r\n\tpublic static function notifyOnConnect(connectListener: Int->Void, disconnectListener: Int->Void): Void {\r\n\t\tif (connectListener != null) connectListeners.push(connectListener);\r\n\t\tif (disconnectListener != null) disconnectListeners.push(disconnectListener);\r\n\t}\r\n\r\n\tpublic static function removeConnect(connectListener: Int->Void, disconnectListener: Int->Void): Void {\r\n\t\tif (connectListener != null) connectListeners.remove(connectListener);\r\n\t\tif (disconnectListener != null) disconnectListeners.remove(disconnectListener);\r\n\t}\r\n\r\n\tpublic function notify(axisListener: Int->Float->Void, buttonListener: Int->Float->Void): Void {\r\n\t\tif (axisListener != null) axisListeners.push(axisListener);\r\n\t\tif (buttonListener != null) buttonListeners.push(buttonListener);\r\n\t}\r\n\t\r\n\tpublic function remove(axisListener: Int->Float->Void, buttonListener: Int->Float->Void): Void {\r\n\t\tif (axisListener != null) axisListeners.remove(axisListener);\r\n\t\tif (buttonListener != null) buttonListeners.remove(buttonListener);\r\n\t}\r\n\t\r\n\tprivate static var instances: Array<Gamepad> = new Array();\r\n\tprivate var axisListeners: Array<Int->Float->Void>;\r\n\tprivate var buttonListeners: Array<Int->Float->Void>;\r\n\tprivate static var connectListeners:Array<Int->Void> = new Array();\r\n\tprivate static var disconnectListeners:Array<Int->Void> = new Array();\r\n\t\r\n\tprivate function new(index: Int = 0, id: String = \"unknown\") {\r\n\t\tthis.index = index;\r\n\t\taxisListeners = new Array<Int->Float->Void>();\r\n\t\tbuttonListeners = new Array<Int->Float->Void>();\r\n\t\tinstances[index] = this;\r\n\t}\r\n\r\n\tpublic var id(get, null): String;\r\n\tpublic var vendor(get, null): String;\r\n\tpublic var connected(default, null):Bool;\r\n\r\n\r\n\tprivate function get_id(): String {\r\n\t\treturn SystemImpl.getGamepadId(index);\r\n\t}\r\n\r\n\tprivate function get_vendor(): String {\r\n\t\treturn SystemImpl.getGamepadVendor(index);\r\n\t}\r\n\t\r\n\t@input\r\n\tprivate function sendAxisEvent(axis: Int, value: Float): Void {\r\n\t\tfor (listener in axisListeners) {\r\n\t\t\tlistener(axis, value);\r\n\t\t}\r\n\t}\r\n\t\r\n\t@input\r\n\tprivate function sendButtonEvent(button: Int, value: Float): Void {\r\n\t\tfor (listener in buttonListeners) {\r\n\t\t\tlistener(button, value);\r\n\t\t}\r\n\t}\r\n\t\r\n\t@input\r\n\tprivate static function sendConnectEvent(index: Int): Void {\r\n\t\tinstances[index].connected = true;\r\n\t\tfor (listener in connectListeners) {\r\n\t\t\tlistener(index);\r\n\t\t}\r\n\t}\r\n\t\r\n\t@input\r\n\tprivate static function sendDisconnectEvent(index: Int): Void {\r\n\t\tinstances[index].connected = false;\r\n\t\tfor (listener in disconnectListeners) {\r\n\t\t\tlistener(index);\r\n\t\t}\r\n\t}\r\n}\r\n","package kha.netsync;\r\n\r\nimport haxe.io.Bytes;\r\n\r\n@:autoBuild(kha.netsync.ControllerBuilder.build())\r\nclass Controller {\r\n\tprivate var __id: Int;\r\n\tpublic var _inputBufferIndex: Int;\r\n\tpublic var _inputBuffer: Bytes;\r\n\t\r\n\tpublic function new() {\r\n\t\t__id = ControllerBuilder.nextId++;\r\n\t\t_inputBuffer = Bytes.alloc(1);\r\n\t}\r\n\r\n\tpublic function _id(): Int {\r\n\t\treturn __id;\r\n\t\t\r\n\t}\r\n\r\n\tpublic function _receive(bytes: Bytes): Void {\r\n\t\t\r\n\t}\r\n}\r\n","package kha.input;\r\n\r\nimport kha.netsync.Controller;\r\n\r\n/** See `Keyboard.disableSystemInterventions` */\r\nenum BlockInterventions {\r\n\tDefault;\r\n\tFull;\r\n\tNone;\r\n\tCustom(func: (code: KeyCode)->Bool);\r\n}\r\n\r\n@:allow(kha.SystemImpl)\r\n@:expose\r\nclass Keyboard extends Controller {\r\n\tstatic var keyBehavior = BlockInterventions.Default;\r\n\r\n\t/**\r\n\t * Get current Keyboard.\r\n\t * @param num (optional) keyboard id (0 by default).\r\n\t */\r\n\tpublic static function get(num: Int = 0): Keyboard {\r\n\t\treturn SystemImpl.getKeyboard(num);\r\n\t}\r\n\r\n\t/**\r\n\t * Disables system hotkeys (html5 only).\r\n\t * @param behavior can be:\r\n\t *   Default - allow F-keys and char keys.\r\n\t *   Full - disable all keys (that browser allows).\r\n\t *   None - do not block any key.\r\n\t *   Custom(func:(code:Int)->Bool) - set custom handler for keydown event (should return true if keycode blocked).\r\n\t */\r\n\tpublic static function disableSystemInterventions(behavior: BlockInterventions):Void {\r\n\t\tkeyBehavior = behavior;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates event handlers from passed functions.\r\n\t * @param downListener function with `key:KeyCode` argument, fired when a key is pressed down.\r\n\t * @param upListener function with `key:KeyCode` argument, fired when a key is released.\r\n\t * @param pressListener (optional) function with `char:String` argument, fired when a key that produces a character value is pressed down.\r\n\t */\r\n\tpublic function notify(downListener: (key: KeyCode)->Void, upListener: (key: KeyCode)->Void, pressListener: (char: String)->Void = null): Void {\r\n\t\tif (downListener != null) downListeners.push(downListener);\r\n\t\tif (upListener != null) upListeners.push(upListener);\r\n\t\tif (pressListener != null) pressListeners.push(pressListener);\r\n\t}\r\n\r\n\t/**\r\n\t * Removes event handlers from the passed functions that were passed to `notify` function.\r\n\t */\r\n\tpublic function remove(downListener: (key: KeyCode)->Void, upListener: (key: KeyCode)->Void, pressListener: (char: String)->Void): Void {\r\n\t\tif (downListener != null) downListeners.remove(downListener);\r\n\t\tif (upListener != null) upListeners.remove(upListener);\r\n\t\tif (pressListener != null) pressListeners.remove(pressListener);\r\n\t}\r\n\r\n\t/**\r\n\t * Show virtual keyboard (if it exists).\r\n\t */\r\n\tpublic function show(): Void {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Hide virtual keyboard (if it exists).\r\n\t */\r\n\tpublic function hide(): Void {\r\n\r\n\t}\r\n\r\n\tprivate static var instance: Keyboard;\r\n\tprivate var downListeners: Array<(key: KeyCode)->Void>;\r\n\tprivate var upListeners: Array<(key: KeyCode)->Void>;\r\n\tprivate var pressListeners: Array<(char: String)->Void>;\r\n\r\n\tprivate function new() {\r\n\t\tsuper();\r\n\t\tdownListeners = [];\r\n\t\tupListeners = [];\r\n\t\tpressListeners = [];\r\n\t\tinstance = this;\r\n\t}\r\n\r\n\t@input\r\n\tprivate function sendDownEvent(code: KeyCode): Void {\r\n\t\t#if sys_server\r\n\t\t//js.Node.console.log(kha.Scheduler.time() + \" Down: \" + key + \" from \" + kha.network.Session.the().me.id);\r\n\t\t#end\r\n\t\tfor (listener in downListeners) {\r\n\t\t\tlistener(code);\r\n\t\t}\r\n\t}\r\n\r\n\t@input\r\n\tprivate function sendUpEvent(code: KeyCode): Void {\r\n\t\t#if sys_server\r\n\t\t//js.Node.console.log(kha.Scheduler.time() + \" Up: \" + key + \" from \" + kha.network.Session.the().me.id);\r\n\t\t#end\r\n\t\tfor (listener in upListeners) {\r\n\t\t\tlistener(code);\r\n\t\t}\r\n\t}\r\n\r\n\t@input\r\n\tprivate function sendPressEvent(char: String): Void {\r\n\t\tfor (listener in pressListeners) {\r\n\t\t\tlistener(char);\r\n\t\t}\r\n\t}\r\n}\r\n","package kha.netsync;\r\n\r\nimport haxe.macro.Context;\r\nimport haxe.macro.Expr.Field;\r\n\r\nclass ControllerBuilder {\r\n\tpublic static var nextId: Int = 0;\r\n\r\n\tmacro static public function build(): Array<Field> {\r\n\t\tvar fields = Context.getBuildFields();\r\n\r\n\t\t#if (!kha_server && (kha_html5 || kha_kore))\r\n\r\n\t\t{\r\n\t\t\tvar funcindex = 0;\r\n\t\t\tfor (field in fields) {\r\n\t\t\t\tvar input = false;\r\n\t\t\t\tfor (meta in field.meta) {\r\n\t\t\t\t\tif (meta.name == \"input\") {\r\n\t\t\t\t\t\tinput = true;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (!input) continue;\r\n\r\n\t\t\t\tswitch (field.kind) {\r\n\t\t\t\tcase FFun(f):\r\n\t\t\t\t\tvar size = 4;\r\n\t\t\t\t\tfor (arg in f.args) {\r\n\t\t\t\t\t\tswitch (arg.type) {\r\n\t\t\t\t\t\tcase TPath(p):\r\n\t\t\t\t\t\t\tswitch (p.name) {\r\n\t\t\t\t\t\t\tcase \"Int\":\r\n\t\t\t\t\t\t\t\tsize += 4;\r\n\t\t\t\t\t\t\tcase \"String\":\r\n\t\t\t\t\t\t\t\tsize += 1;\r\n\t\t\t\t\t\t\tcase \"Float\":\r\n\t\t\t\t\t\t\t\tsize += 8;\r\n\t\t\t\t\t\t\tcase \"Bool\":\r\n\t\t\t\t\t\t\t\tsize += 1;\r\n\t\t\t\t\t\t\tcase \"KeyCode\":\r\n\t\t\t\t\t\t\t\tsize += 1;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tvar expr = macro @:mergeBlock {\r\n\t\t\t\t\t\tvar bytes = haxe.io.Bytes.alloc($v { size } );\r\n\t\t\t\t\t\tbytes.setInt32(0, $v { funcindex } );\r\n\t\t\t\t\t};\r\n\t\t\t\t\tvar index: Int = 4;\r\n\t\t\t\t\tfor (arg in f.args) {\r\n\t\t\t\t\t\tswitch (arg.type) {\r\n\t\t\t\t\t\tcase TPath(p):\r\n\t\t\t\t\t\t\tswitch (p.name) {\r\n\t\t\t\t\t\t\tcase \"Int\":\r\n\t\t\t\t\t\t\t\tvar argname = arg.name;\r\n\t\t\t\t\t\t\t\texpr = macro @:mergeBlock {\r\n\t\t\t\t\t\t\t\t\t$expr;\r\n\t\t\t\t\t\t\t\t\tbytes.setInt32($v { index }, $i { argname });\r\n\t\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\t\tindex += 4;\r\n\t\t\t\t\t\t\tcase \"String\":\r\n\t\t\t\t\t\t\t\tvar argname = arg.name;\r\n\t\t\t\t\t\t\t\texpr = macro @:mergeBlock {\r\n\t\t\t\t\t\t\t\t\t$expr;\r\n\t\t\t\t\t\t\t\t\tbytes.set($v { index }, $i { argname }.charCodeAt(0));\r\n\t\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\t\tindex += 1;\r\n\t\t\t\t\t\t\tcase \"Float\":\r\n\t\t\t\t\t\t\t\tvar argname = arg.name;\r\n\t\t\t\t\t\t\t\texpr = macro @:mergeBlock {\r\n\t\t\t\t\t\t\t\t\t$expr;\r\n\t\t\t\t\t\t\t\t\tbytes.setDouble($v { index }, $i { argname } );\r\n\t\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\t\tindex += 8;\r\n\t\t\t\t\t\t\tcase \"Bool\":\r\n\t\t\t\t\t\t\t\tvar argname = arg.name;\r\n\t\t\t\t\t\t\t\texpr = macro @:mergeBlock {\r\n\t\t\t\t\t\t\t\t\t$expr;\r\n\t\t\t\t\t\t\t\t\tbytes.set($v { index } , $i { argname } ? 1 : 0);\r\n\t\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\t\tindex += 1;\r\n\t\t\t\t\t\t\tcase \"KeyCode\":\r\n\t\t\t\t\t\t\t\tvar argname = arg.name;\r\n\t\t\t\t\t\t\t\texpr = macro @:mergeBlock {\r\n\t\t\t\t\t\t\t\t\t$expr;\r\n\t\t\t\t\t\t\t\t\tbytes.set($v { index } , $i { argname });\r\n\t\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\t\tindex += 1;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tvar original = f.expr;\r\n\t\t\t\t\texpr = macro {\r\n\t\t\t\t\t\tif (kha.netsync.Session.the() != null) {\r\n\t\t\t\t\t\t\t$expr;\r\n\t\t\t\t\t\t\tkha.netsync.Session.the().sendControllerUpdate(_id(), bytes);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t$original;\r\n\t\t\t\t\t};\r\n\t\t\t\t\tf.expr = expr;\r\n\t\t\t\tdefault:\r\n\t\t\t\t}\r\n\t\t\t\t++funcindex;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t#end\r\n\r\n\t\t// macros failing everywhere but in JavaScript?\r\n\t\t#if (kha_server || kha_html5 || kha_kore)\r\n\r\n\t\tvar receive = macro @:mergeBlock {\r\n\t\t\tvar funcindex = bytes.getInt32(0);\r\n\t\t};\r\n\t\t{\r\n\t\t\tvar funcindex = 0;\r\n\t\t\tfor (field in fields) {\r\n\t\t\t\tvar input = false;\r\n\t\t\t\tfor (meta in field.meta) {\r\n\t\t\t\t\tif (meta.name == \"input\") {\r\n\t\t\t\t\t\tinput = true;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (!input) continue;\r\n\r\n\t\t\t\tswitch (field.kind) {\r\n\t\t\t\tcase FFun(f):\r\n\t\t\t\t\tvar expr = macro { };\r\n\t\t\t\t\tvar index: Int = 4;\r\n\t\t\t\t\tvar varindex: Int = 0;\r\n\t\t\t\t\tfor (arg in f.args) {\r\n\t\t\t\t\t\tswitch (arg.type) {\r\n\t\t\t\t\t\tcase TPath(p):\r\n\t\t\t\t\t\t\tswitch (p.name) {\r\n\t\t\t\t\t\t\tcase \"Int\":\r\n\t\t\t\t\t\t\t\tvar argname = arg.name;\r\n\t\t\t\t\t\t\t\tvar varname = \"input\" + varindex;\r\n\t\t\t\t\t\t\t\texpr = macro @:mergeBlock {\r\n\t\t\t\t\t\t\t\t\t$expr;\r\n\t\t\t\t\t\t\t\t\tvar $varname: Int = bytes.getInt32($v { index } );\r\n\t\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\t\tindex += 4;\r\n\t\t\t\t\t\t\tcase \"String\":\r\n\t\t\t\t\t\t\t\tvar argname = arg.name;\r\n\t\t\t\t\t\t\t\tvar varname = \"input\" + varindex;\r\n\t\t\t\t\t\t\t\texpr = macro @:mergeBlock {\r\n\t\t\t\t\t\t\t\t\t$expr;\r\n\t\t\t\t\t\t\t\t\tvar $varname: String = String.fromCharCode(bytes.get($v { index } ));\r\n\t\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\t\tindex += 1;\r\n\t\t\t\t\t\t\tcase \"Float\":\r\n\t\t\t\t\t\t\t\tvar argname = arg.name;\r\n\t\t\t\t\t\t\t\tvar varname = \"input\" + varindex;\r\n\t\t\t\t\t\t\t\texpr = macro @:mergeBlock {\r\n\t\t\t\t\t\t\t\t\t$expr;\r\n\t\t\t\t\t\t\t\t\tvar $varname: Float = bytes.getDouble($v { index } );\r\n\t\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\t\tindex += 8;\r\n\t\t\t\t\t\t\tcase \"Bool\":\r\n\t\t\t\t\t\t\t\tvar argname = arg.name;\r\n\t\t\t\t\t\t\t\tvar varname = \"input\" + varindex;\r\n\t\t\t\t\t\t\t\texpr = macro @:mergeBlock {\r\n\t\t\t\t\t\t\t\t\t$expr;\r\n\t\t\t\t\t\t\t\t\tvar $varname: Bool = bytes.get($v { index } ) != 0;\r\n\t\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\t\tindex += 1;\r\n\t\t\t\t\t\t\tcase \"KeyCode\":\r\n\t\t\t\t\t\t\t\tvar argname = arg.name;\r\n\t\t\t\t\t\t\t\tvar varname = \"input\" + varindex;\r\n\t\t\t\t\t\t\t\texpr = macro @:mergeBlock {\r\n\t\t\t\t\t\t\t\t\t$expr;\r\n\t\t\t\t\t\t\t\t\tvar $varname: kha.input.KeyCode = cast bytes.get($v { index } );\r\n\t\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\t\tindex += 1;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t++varindex;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tswitch (varindex) {\r\n\t\t\t\t\tcase 1:\r\n\t\t\t\t\t\tvar funcname = field.name;\r\n\t\t\t\t\t\treceive = macro @:mergeBlock {\r\n\t\t\t\t\t\t\t$receive;\r\n\t\t\t\t\t\t\tif (funcindex == $v { funcindex } ) {\r\n\t\t\t\t\t\t\t\t$expr;\r\n\t\t\t\t\t\t\t\t$i { funcname } (input0);\r\n\t\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\tcase 2:\r\n\t\t\t\t\t\tvar funcname = field.name;\r\n\t\t\t\t\t\treceive = macro @:mergeBlock {\r\n\t\t\t\t\t\t\t$receive;\r\n\t\t\t\t\t\t\tif (funcindex == $v { funcindex } ) {\r\n\t\t\t\t\t\t\t\t$expr;\r\n\t\t\t\t\t\t\t\t$i { funcname }(input0, input1);\r\n\t\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\tcase 3:\r\n\t\t\t\t\t\tvar funcname = field.name;\r\n\t\t\t\t\t\treceive = macro @:mergeBlock {\r\n\t\t\t\t\t\t\t$receive;\r\n\t\t\t\t\t\t\tif (funcindex == $v { funcindex } ) {\r\n\t\t\t\t\t\t\t\t$expr;\r\n\t\t\t\t\t\t\t\t$i { funcname }(input0, input1, input2);\r\n\t\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\tcase 4:\r\n\t\t\t\t\t\tvar funcname = field.name;\r\n\t\t\t\t\t\treceive = macro @:mergeBlock {\r\n\t\t\t\t\t\t\t$receive;\r\n\t\t\t\t\t\t\tif (funcindex == $v { funcindex } ) {\r\n\t\t\t\t\t\t\t\t$expr;\r\n\t\t\t\t\t\t\t\t$i { funcname }(input0, input1, input2, input3);\r\n\t\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\tcase 5:\r\n\t\t\t\t\t\tvar funcname = field.name;\r\n\t\t\t\t\t\treceive = macro @:mergeBlock {\r\n\t\t\t\t\t\t\t$receive;\r\n\t\t\t\t\t\t\tif (funcindex == $v { funcindex } ) {\r\n\t\t\t\t\t\t\t\t$expr;\r\n\t\t\t\t\t\t\t\t$i { funcname }(input0, input1, input2, input3, input4);\r\n\t\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t}\r\n\t\t\t\tdefault:\r\n\t\t\t\t}\r\n\t\t\t\t++funcindex;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfields.push({\r\n\t\t\tname: \"_receive\",\r\n\t\t\tdoc: null,\r\n\t\t\tmeta: [],\r\n\t\t\taccess: [APublic, AOverride],\r\n\t\t\tkind: FFun({\r\n\t\t\t\tret: null,\r\n\t\t\t\tparams: null,\r\n\t\t\t\texpr: receive,\r\n\t\t\t\targs: [{\r\n\t\t\t\t\tvalue: null,\r\n\t\t\t\t\ttype: Context.toComplexType(Context.getType(\"haxe.io.Bytes\")),\r\n\t\t\t\t\topt: null,\r\n\t\t\t\t\tname: \"bytes\"}]\r\n\t\t\t}),\r\n\t\t\tpos: Context.currentPos()\r\n\t\t});\r\n\r\n\t\t#else\r\n\r\n\t\tfields.push({\r\n\t\t\tname: \"_receive\",\r\n\t\t\tdoc: null,\r\n\t\t\tmeta: [],\r\n\t\t\taccess: [APublic, AOverride],\r\n\t\t\tkind: FFun({\r\n\t\t\t\tret: null,\r\n\t\t\t\tparams: null,\r\n\t\t\t\texpr: macro {},\r\n\t\t\t\targs: [{\r\n\t\t\t\t\tvalue: null,\r\n\t\t\t\t\ttype: Context.toComplexType(Context.getType(\"haxe.io.Bytes\")),\r\n\t\t\t\t\topt: null,\r\n\t\t\t\t\tname: \"bytes\"}]\r\n\t\t\t}),\r\n\t\t\tpos: Context.currentPos()\r\n\t\t});\r\n\r\n\t\t#end\r\n\r\n\t\treturn fields;\r\n\t}\r\n}\r\n","package kha.input;\r\n\r\nimport kha.netsync.Controller;\r\n\r\n/** See `Mouse.setWheelEventBlockBehavior` */\r\nenum MouseEventBlockBehavior {\r\n\tFull;\r\n\tNone;\r\n\tCustom(func: (event: Dynamic)->Bool);\r\n}\r\n\r\n@:allow(kha.SystemImpl)\r\n@:expose\r\nclass Mouse extends Controller {\r\n\tstatic var wheelEventBlockBehavior = MouseEventBlockBehavior.Full;\r\n\r\n\t/**\r\n\t * Get current Mouse.\r\n\t * @param num (optional) mouse id (0 by default).\r\n\t */\r\n\tpublic static function get(num: Int = 0): Mouse {\r\n\t\treturn SystemImpl.getMouse(num);\r\n\t}\r\n\r\n\t/**\r\n\t * Allows fine grained control of mouse wheel browser default actions (html5 only).\r\n\t * @param behavior can be:\r\n\t *   Full - block wheel events.\r\n\t *   None - do not block wheel events.\r\n\t *   Custom(func:(event:WheelEvent)->Bool) - set custom handler for wheel event (should return true if wheel event blocked).\r\n\t */\r\n\t public static function setWheelEventBlockBehavior(behavior: MouseEventBlockBehavior): Void {\r\n\t\twheelEventBlockBehavior = behavior;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates event handlers from passed functions.\r\n\t * @param downListener function with `button:Int`,`x:Int`,`y:Int` arguments, fired when a mouse is pressed down. `button:Int` is `0` for left button, `1` for right and `2` for middle.\r\n\t * @param upListener function with `button:Int`,`x:Int`,`y:Int` arguments, fired when a mouse is released.\r\n\t * @param moveListener function with `x:Int`,`y:Int`,`moveX:Int`,`moveY:Int` arguments, fired when a mouse is moved. `moveX`/`moveY` is the difference between the current coordinates and the last position of the mouse.\r\n\t * @param wheelListener function with `delta:Int` argument, fired when the wheel rotates. It can have a value of `1` or `-1` depending on the rotation.\r\n\t * @param leaveListener (optional) function without` arguments, when fired mouse leave canvas.\r\n\t */\r\n\tpublic function notify(downListener: (button:Int, x:Int, y:Int)->Void, upListener: (button:Int, x:Int, y:Int)->Void, moveListener: (x:Int, y:Int, moveX:Int, moveY:Int)->Void, wheelListener: (delta:Int)->Void, leaveListener:()->Void = null): Void {\r\n\t\tnotifyWindowed(0, downListener, upListener, moveListener, wheelListener, leaveListener);\r\n\t}\r\n\r\n\t/**\r\n\t * Removes event handlers from the passed functions that were passed to `notify` function.\r\n\t */\r\n\tpublic function remove(downListener: (button:Int, x:Int, y:Int)->Void, upListener: (button:Int, x:Int, y:Int)->Void, moveListener: (x:Int, y:Int, moveX:Int, moveY:Int)->Void, wheelListener: (delta:Int)->Void, leaveListener:()->Void = null): Void {\r\n\t\tremoveWindowed(0, downListener, upListener, moveListener, wheelListener, leaveListener);\r\n\t}\r\n\r\n\t/**\r\n\t * Creates event handlers from passed functions like `notify` function, but only for window with `windowId:Int` id argument. The windows are not supported by all the targets.\r\n\t */\r\n\tpublic function notifyWindowed(windowId: Int, downListener: Int->Int->Int->Void, upListener: Int->Int->Int->Void, moveListener: Int->Int->Int->Int->Void, wheelListener: Int->Void, leaveListener:Void->Void = null): Void {\r\n\t\tif (downListener != null) {\r\n\t\t\tif (windowDownListeners == null) {\r\n\t\t\t\twindowDownListeners = new Array();\r\n\t\t\t}\r\n\r\n\t\t\twhile (windowDownListeners.length <= windowId) {\r\n\t\t\t\twindowDownListeners.push(new Array());\r\n\t\t\t}\r\n\r\n\t\t\twindowDownListeners[windowId].push(downListener);\r\n\t\t}\r\n\r\n\t\tif (upListener != null) {\r\n\t\t\tif (windowUpListeners == null) {\r\n\t\t\t\twindowUpListeners = new Array();\r\n\t\t\t}\r\n\r\n\t\t\twhile (windowUpListeners.length <= windowId) {\r\n\t\t\t\twindowUpListeners.push(new Array());\r\n\t\t\t}\r\n\r\n\t\t\twindowUpListeners[windowId].push(upListener);\r\n\t\t}\r\n\r\n\t\tif (moveListener != null) {\r\n\t\t\tif (windowMoveListeners == null) {\r\n\t\t\t\twindowMoveListeners = new Array();\r\n\t\t\t}\r\n\r\n\t\t\twhile (windowMoveListeners.length <= windowId) {\r\n\t\t\t\twindowMoveListeners.push(new Array());\r\n\t\t\t}\r\n\r\n\t\t\twindowMoveListeners[windowId].push(moveListener);\r\n\t\t}\r\n\r\n\t\tif (wheelListener != null) {\r\n\t\t\tif (windowWheelListeners == null) {\r\n\t\t\t\twindowWheelListeners = new Array();\r\n\t\t\t}\r\n\r\n\t\t\twhile (windowWheelListeners.length <= windowId) {\r\n\t\t\t\twindowWheelListeners.push(new Array());\r\n\t\t\t}\r\n\r\n\t\t\twindowWheelListeners[windowId].push(wheelListener);\r\n\t\t}\r\n\t\t\r\n\t\tif (leaveListener != null) {\r\n\t\t\tif (windowLeaveListeners == null) {\r\n\t\t\t\twindowLeaveListeners = new Array();\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\twhile (windowLeaveListeners.length <= windowId) {\r\n\t\t\t\twindowLeaveListeners.push(new Array());\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\twindowLeaveListeners[windowId].push(leaveListener);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Removes event handlers for `windowId:Int` from the passed functions that were passed to `notifyWindowed` function.\r\n\t */\r\n\tpublic function removeWindowed(windowId: Int, downListener: Int->Int->Int->Void, upListener: Int->Int->Int->Void, moveListener: Int->Int->Int->Int->Void, wheelListener: Int->Void, leaveListener:Void->Void = null): Void {\r\n\t\tif (downListener != null) {\r\n\t\t\tif (windowDownListeners != null) {\r\n\t\t\t\tif (windowId < windowDownListeners.length) {\r\n\t\t\t\t\twindowDownListeners[windowId].remove(downListener);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\ttrace('no downListeners for window \"${windowId}\" are registered');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\ttrace('no downListeners were ever registered');\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (upListener != null) {\r\n\t\t\tif (windowUpListeners != null) {\r\n\t\t\t\tif (windowId < windowUpListeners.length) {\r\n\t\t\t\t\twindowUpListeners[windowId].remove(upListener);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\ttrace('no upListeners for window \"${windowId}\" are registered');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\ttrace('no upListeners were ever registered');\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (moveListener != null) {\r\n\t\t\tif (windowMoveListeners != null) {\r\n\t\t\t\tif (windowId < windowMoveListeners.length) {\r\n\t\t\t\t\twindowMoveListeners[windowId].remove(moveListener);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\ttrace('no moveListeners for window \"${windowId}\" are registered');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\ttrace('no moveListeners were ever registered');\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (wheelListener != null) {\r\n\t\t\tif (windowWheelListeners != null) {\r\n\t\t\t\tif (windowId < windowWheelListeners.length) {\r\n\t\t\t\t\twindowWheelListeners[windowId].remove(wheelListener);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\ttrace('no wheelListeners for window \"${windowId}\" are registered');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\ttrace('no wheelListeners were ever registered');\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tif (leaveListener != null) {\r\n\t\t\tif (windowLeaveListeners != null) {\r\n\t\t\t\tif (windowId < windowLeaveListeners.length) {\r\n\t\t\t\t\twindowLeaveListeners[windowId].remove(leaveListener);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\ttrace('no leaveListeners for window \"${windowId}\" are registered');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\ttrace('no leaveListeners were ever registered');\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Locks the cursor position and hides it. For catching movements, use the `moveX`/`moveY` arguments of your `moveListener` handler.\r\n\t */\r\n\tpublic function lock(): Void {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Unlock the cursor position and hides it. For catching movements, use the `moveX`/`moveY` arguments of your `moveListener` handler.\r\n\t */\r\n\tpublic function unlock(): Void {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Unlocks the cursor position and displays it.\r\n\t */\r\n\tpublic function canLock(): Bool {\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the status of the cursor lock\r\n\t */\r\n\tpublic function isLocked(): Bool {\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates event handlers from passed functions.\r\n\t * @param change function fired when the lock is turned on / off.\r\n\t * @param error function fired when a toggle error occurs.\r\n\t */\r\n\tpublic function notifyOnLockChange(change: Void -> Void, error: Void -> Void): Void {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Removes event handlers from the passed functions that were passed to `notifyOnLockChange` function.\r\n\t */\r\n\tpublic function removeFromLockChange(change: Void -> Void, error: Void -> Void): Void{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Hides the system cursor (without locking)\r\n\t */\r\n\tpublic function hideSystemCursor(): Void {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Show the system cursor\r\n\t */\r\n\tpublic function showSystemCursor(): Void {\r\n\r\n\t}\r\n\r\n\tprivate static var instance: Mouse;\r\n\tvar windowDownListeners: Array<Array<Int->Int->Int->Void>>;\r\n\tvar windowUpListeners: Array<Array<Int->Int->Int->Void>>;\r\n\tvar windowMoveListeners: Array<Array<Int->Int->Int->Int->Void>>;\r\n\tvar windowWheelListeners: Array<Array<Int->Void>>;\r\n\tvar windowLeaveListeners: Array<Array<Void->Void>>;\r\n\r\n\tprivate function new() {\r\n\t\tsuper();\r\n\t\tinstance = this;\r\n\t}\r\n\r\n\t@input\r\n\tprivate function sendLeaveEvent(windowId:Int): Void {\r\n\t\tif (windowLeaveListeners != null) {\r\n\t\t\tfor (listener in windowLeaveListeners[windowId]) {\r\n\t\t\t\tlistener();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\t@input\r\n\tprivate function sendDownEvent(windowId: Int, button: Int, x: Int, y: Int): Void {\r\n\t\tif (windowDownListeners != null) {\r\n\t\t\tfor (listener in windowDownListeners[windowId]) {\r\n\t\t\t\tlistener(button, x, y);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t@input\r\n\tprivate function sendUpEvent(windowId: Int, button: Int, x: Int, y: Int): Void {\r\n\t\tif (windowUpListeners != null) {\r\n\t\t\tfor (listener in windowUpListeners[windowId]) {\r\n\t\t\t\tlistener(button, x, y);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t@input\r\n\tprivate function sendMoveEvent(windowId: Int, x: Int, y: Int, movementX: Int, movementY: Int): Void {\r\n\t\tif (windowMoveListeners != null) {\r\n\t\t\tfor (listener in windowMoveListeners[windowId]) {\r\n\t\t\t\tlistener(x, y, movementX, movementY);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t@input\r\n\tprivate function sendWheelEvent(windowId: Int, delta: Int): Void {\r\n\t\tif (windowWheelListeners != null) {\r\n\t\t\tfor (listener in windowWheelListeners[windowId]) {\r\n\t\t\t\tlistener(delta);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n","package kha.input;\r\n\r\nimport kha.SystemImpl;\r\n\r\nclass MouseImpl extends kha.input.Mouse {\r\n\tpublic function new() {\r\n\t\tsuper();\r\n\t}\r\n\r\n\toverride public function lock(): Void {\r\n\t\tSystemImpl.lockMouse();\r\n\t}\r\n\r\n\toverride public function unlock(): Void {\r\n\t\tSystemImpl.unlockMouse();\r\n\t}\r\n\r\n\toverride public function canLock(): Bool {\r\n\t\treturn SystemImpl.canLockMouse();\r\n\t}\r\n\r\n\toverride public function isLocked(): Bool {\r\n\t\treturn SystemImpl.isMouseLocked();\r\n\t}\r\n\r\n\toverride public function notifyOnLockChange(func: Void -> Void, error: Void -> Void): Void {\r\n\t\tSystemImpl.notifyOfMouseLockChange(func, error);\r\n\t}\r\n\r\n\toverride public function removeFromLockChange(func: Void -> Void, error: Void -> Void): Void{\r\n\t\tSystemImpl.removeFromMouseLockChange(func, error);\r\n\t}\r\n\r\n\toverride public function hideSystemCursor(): Void {\r\n\t\tSystemImpl.khanvas.style.cursor = \"none\";\r\n\t}\r\n\r\n\toverride public function showSystemCursor(): Void {\r\n\t\tSystemImpl.khanvas.style.cursor = \"default\";\r\n\t}\r\n}\r\n","package kha.input;\r\n\r\n/** See `Surface.setTouchDownEventBlockBehavior` */\r\nenum TouchDownEventBlockBehavior {\r\n\tFull;\r\n\tNone;\r\n\tCustom(func: (event: Dynamic)->Bool);\r\n}\r\n\r\n@:allow(kha.SystemImpl)\r\n@:expose\r\nclass Surface {\r\n\tstatic var touchDownEventBlockBehavior = TouchDownEventBlockBehavior.Full;\r\n\r\n\t/**\r\n\t * Get current Surface.\r\n\t * @param num (optional) surface id (0 by default).\r\n\t */\r\n\tpublic static function get(num: Int = 0): Surface {\r\n\t\tif (num != 0) return null;\r\n\t\treturn instance;\r\n\t}\r\n\r\n\t/**\r\n\t * Allows fine grained control of touch down browser default actions (html5 only).\r\n\t * @param behavior can be:\r\n\t *   Full - block touch down events.\r\n\t *   None - do not block touch down events.\r\n\t *   Custom(func:(event:TouchEvent)->Bool) - set custom handler for touch down event (should return true if touch down event blocked).\r\n\t */\r\n\t public static function setTouchDownEventBlockBehavior(behavior: TouchDownEventBlockBehavior): Void {\r\n\t\ttouchDownEventBlockBehavior = behavior;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates event handlers from passed functions.\r\n\t * @param touchStartListener function with `id:Int`,`x:Int`,`y:Int` arguments, fired when a surface is pressed down. The finger `id` goes from 0 increasing by one. When the finger releases the screen, the old `id` is freed up and will be occupied with pressing the next finger (when releasing a finger, the shift of ids does not occur).\r\n\t * @param touchEndListener function with `id:Int`,`x:Int`,`y:Int` arguments, fired when a surface is released.\r\n\t * @param moveListener function with `id:Int`,`x:Int`,`y:Int` arguments, fired when a surface is moved.\r\n\t */\r\n\tpublic function notify(touchStartListener: (id:Int, x:Int, y:Int)->Void, touchEndListener: (id:Int, x:Int, y:Int)->Void, moveListener: (id:Int, x:Int, y:Int)->Void): Void {\r\n\t\tif (touchStartListener != null) touchStartListeners.push(touchStartListener);\r\n\t\tif (touchEndListener != null) touchEndListeners.push(touchEndListener);\r\n\t\tif (moveListener != null) moveListeners.push(moveListener);\r\n\t}\r\n\r\n\t/**\r\n\t * Removes event handlers from the passed functions that were passed to `notify` function.\r\n\t */\r\n\tpublic function remove(touchStartListener: (id:Int, x:Int, y:Int)->Void, touchEndListener: (id:Int, x:Int, y:Int)->Void, moveListener: (id:Int, x:Int, y:Int)->Void): Void {\r\n\t\tif (touchStartListener != null) touchStartListeners.remove(touchStartListener);\r\n\t\tif (touchEndListener != null) touchEndListeners.remove(touchEndListener);\r\n\t\tif (moveListener != null) moveListeners.remove(moveListener);\r\n\t}\r\n\r\n\tprivate static var instance: Surface;\r\n\tprivate var touchStartListeners: Array<Int->Int->Int->Void>;\r\n\tprivate var touchEndListeners: Array<Int->Int->Int->Void>;\r\n\tprivate var moveListeners: Array<Int->Int->Int->Void>;\r\n\r\n\tprivate function new() {\r\n\t\ttouchStartListeners = new Array<Int->Int->Int->Void>();\r\n\t\ttouchEndListeners = new Array<Int->Int->Int->Void>();\r\n\t\tmoveListeners = new Array<Int->Int->Int->Void>();\r\n\t\tinstance = this;\r\n\t}\r\n\r\n\tprivate function sendTouchStartEvent(index: Int, x: Int, y: Int): Void {\r\n\t\tfor (listener in touchStartListeners) {\r\n\t\t\tlistener(index, x, y);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate function sendTouchEndEvent(index: Int, x: Int, y: Int): Void {\r\n\t\tfor (listener in touchEndListeners) {\r\n\t\t\tlistener(index, x, y);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate function sendMoveEvent(index: Int, x: Int, y: Int): Void {\r\n\t\tfor (listener in moveListeners) {\r\n\t\t\tlistener(index, x, y);\r\n\t\t}\r\n\t}\r\n}\r\n","package kha.internal;\r\n\r\nimport haxe.ds.Vector;\r\nimport haxe.io.Bytes;\r\n\r\nclass BytesBlob implements Resource {\r\n\tstatic inline var bufferSize: Int = 2000;\r\n\tpublic var bytes: Bytes;\r\n\r\n\t@:allow(kha.LoaderImpl)\r\n\tprivate function new(bytes: Bytes) {\r\n\t\tthis.bytes = bytes;\r\n\t}\r\n\r\n\tpublic static function fromBytes(bytes: Bytes): Blob {\r\n\t\treturn new Blob(bytes);\r\n\t}\r\n\r\n\tpublic static function alloc(size: Int): Blob {\r\n\t\treturn new Blob(Bytes.alloc(size));\r\n\t}\r\n\r\n\tpublic function sub(start: Int, length: Int): Blob {\r\n\t\treturn new Blob(bytes.sub(start, length));\r\n\t}\r\n\r\n\tpublic var length(get, null): Int;\r\n\r\n\t@:keep\r\n\tpublic function get_length(): Int {\r\n\t\treturn bytes.length;\r\n\t}\r\n\r\n\tpublic function writeU8(position: Int, value: Int): Void {\r\n\t\tbytes.set(position, value);\r\n\t}\r\n\r\n\tpublic function readU8(position: Int): Int {\r\n\t\tvar byte = bytes.get(position);\r\n\t\t++position;\r\n\t\treturn byte;\r\n\t}\r\n\r\n\tpublic function readS8(position: Int): Int {\r\n\t\tvar byte = bytes.get(position);\r\n\t\t++position;\r\n\t\tvar sign = (byte & 0x80) == 0 ? 1 : -1;\r\n\t\tbyte = byte & 0x7F;\r\n\t\treturn sign * byte;\r\n\t}\r\n\r\n\tpublic function readU16BE(position: Int): Int {\r\n\t\tvar first = bytes.get(position + 0);\r\n\t\tvar second  = bytes.get(position + 1);\r\n\t\tposition += 2;\r\n\t\treturn first * 256 + second;\r\n\t}\r\n\r\n\tpublic function readU16LE(position: Int): Int {\r\n\t\tvar first = bytes.get(position + 0);\r\n\t\tvar second  = bytes.get(position + 1);\r\n\t\tposition += 2;\r\n\t\treturn second * 256 + first;\r\n\t}\r\n\r\n\tpublic function readU32LE(position: Int): Int {\r\n\t\tvar fourth = bytes.get(position + 0);\r\n\t\tvar third  = bytes.get(position + 1);\r\n\t\tvar second = bytes.get(position + 2);\r\n\t\tvar first  = bytes.get(position + 3);\r\n\t\tposition += 4;\r\n\r\n\t\treturn fourth + third * 256 + second * 256 * 256 + first * 256 * 256 * 256;\r\n\t}\r\n\r\n\tpublic function readU32BE(position: Int): Int {\r\n\t\tvar fourth = bytes.get(position + 0);\r\n\t\tvar third  = bytes.get(position + 1);\r\n\t\tvar second = bytes.get(position + 2);\r\n\t\tvar first  = bytes.get(position + 3);\r\n\t\tposition += 4;\r\n\r\n\t\treturn first + second * 256 + third * 256 * 256 + fourth * 256 * 256 * 256;\r\n\t}\r\n\r\n\tpublic function readS16BE(position: Int): Int {\r\n\t\tvar first = bytes.get(position + 0);\r\n\t\tvar second  = bytes.get(position + 1);\r\n\t\tposition += 2;\r\n\t\tvar sign = (first & 0x80) == 0 ? 1 : -1;\r\n\t\tfirst = first & 0x7F;\r\n\t\tif (sign == -1) return -0x7fff + first * 256 + second;\r\n\t\telse return first * 256 + second;\r\n\t}\r\n\r\n\tpublic function readS16LE(position: Int): Int {\r\n\t\tvar first = bytes.get(position + 0);\r\n\t\tvar second  = bytes.get(position + 1);\r\n\t\tvar sign = (second & 0x80) == 0 ? 1 : -1;\r\n\t\tsecond = second & 0x7F;\r\n\t\tposition += 2;\r\n\t\tif (sign == -1) return -0x7fff + second * 256 + first;\r\n\t\telse return second * 256 + first;\r\n\t}\r\n\r\n\tpublic function readS32LE(position: Int): Int {\r\n\t\tvar fourth = bytes.get(position + 0);\r\n\t\tvar third  = bytes.get(position + 1);\r\n\t\tvar second = bytes.get(position + 2);\r\n\t\tvar first  = bytes.get(position + 3);\r\n\t\tvar sign = (first & 0x80) == 0 ? 1 : -1;\r\n\t\tfirst = first & 0x7F;\r\n\t\tposition += 4;\r\n\t\tif (sign == -1) return -0x7fffffff + fourth + third * 256 + second * 256 * 256 + first * 256 * 256 * 256;\r\n\t\telse return fourth + third * 256 + second * 256 * 256 + first * 256 * 256 * 256;\r\n\t}\r\n\r\n\tpublic function readS32BE(position: Int): Int {\r\n\t\tvar fourth = bytes.get(position + 0);\r\n\t\tvar third  = bytes.get(position + 1);\r\n\t\tvar second = bytes.get(position + 2);\r\n\t\tvar first  = bytes.get(position + 3);\r\n\t\tvar sign = (fourth & 0x80) == 0 ? 1 : -1;\r\n\t\tfourth = fourth & 0x7F;\r\n\t\tposition += 4;\r\n\t\tif (sign == -1) return -0x7fffffff + first + second * 256 + third * 256 * 256 + fourth * 256 * 256 * 256;\r\n\t\treturn first + second * 256 + third * 256 * 256 + fourth * 256 * 256 * 256;\r\n\t}\r\n\r\n\tpublic function readF32LE(position: Int): Float {\r\n\t\treturn readF32(readS32LE(position));\r\n\t}\r\n\r\n\tpublic function readF32BE(position: Int): Float {\r\n\t\treturn readF32(readS32BE(position));\r\n\t}\r\n\r\n\tprivate static function readF32(i: Int): Float {\r\n\t\tvar sign: Float = ((i & 0x80000000) == 0) ? 1 : -1;\r\n\t\tvar exp: Int = ((i >> 23) & 0xFF);\r\n\t\tvar man: Int = (i & 0x7FFFFF);\r\n\t\tswitch (exp) {\r\n\t\t\tcase 0:\r\n\t\t\t\t//zero, do nothing, ignore negative zero and subnormals\r\n\t\t\t\treturn 0.0;\r\n\t\t\tcase 0xFF:\r\n\t\t\t\tif (man != 0) return Math.NaN;\r\n\t\t\t\telse if (sign > 0) return Math.POSITIVE_INFINITY;\r\n\t\t\t\telse return Math.NEGATIVE_INFINITY;\r\n\t\t\tdefault:\r\n\t\t\t\treturn sign * ((man + 0x800000) / 8388608.0) * Math.pow(2, exp - 127);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic function toString(): String {\r\n\t\treturn bytes.toString();\r\n\t}\r\n\r\n\tprivate static function bit(value: Int, position: Int): Bool {\r\n\t\tvar b = (value >>> position) & 1 == 1;\r\n\t\tif (b) {\r\n\t\t\tvar a = 3;\r\n\t\t\t++a;\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tvar c = 4;\r\n\t\t\t--c;\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\tstatic function toText(chars: Vector<Int>, length: Int): String {\r\n\t\tvar value = \"\";\r\n\t\tfor (i in 0...length) value += String.fromCharCode(chars[i]);\r\n\t\treturn value;\r\n\t}\r\n\r\n\tpublic function readUtf8String(): String {\r\n\t\treturn bytes.toString();\r\n\t}\r\n\r\n\tpublic function toBytes(): Bytes {\r\n\t\treturn bytes;\r\n\t}\r\n\r\n\tpublic function unload(): Void {\r\n\t\tbytes = null;\r\n\t}\r\n}\r\n","package kha.internal;\n\nimport haxe.io.UInt8Array;\nimport haxe.io.Float32Array;\nimport haxe.io.Bytes;\n\n// Based on https://github.com/vorg/pragmatic-pbr/blob/master/local_modules/parse-hdr/parse-hdr.js\nclass HdrFormat {\n\tstatic var radiancePattern = new EReg(\"#\\\\?RADIANCE\", \"i\");\n\tstatic var commentPattern = new EReg(\"#.*\", \"i\");\n\tstatic var gammaPattern = new EReg(\"GAMMA=\", \"i\");\n\tstatic var exposurePattern = new EReg(\"EXPOSURE=\\\\s*([0-9]*[.][0-9]*)\", \"i\");\n\tstatic var formatPattern = new EReg(\"FORMAT=32-bit_rle_rgbe\", \"i\");\n\tstatic var widthHeightPattern = new EReg(\"-Y ([0-9]+) \\\\+X ([0-9]+)\", \"i\");\n\tstatic var buffer: UInt8Array;\n\tstatic var bufferLength: Int;\n\tstatic var fileOffset: Int;\n\t\n\tfunction new() {\n\n\t}\n\n\tstatic function readBuf(buf: UInt8Array): Int {\n\t\tvar bytesRead = 0;\n\t\tdo {\n\t\t\tbuf[bytesRead++] = buffer[fileOffset];\n\t\t} while(++fileOffset < bufferLength && bytesRead < buf.length);\n\t\treturn bytesRead;\n\t}\n\n\tstatic function readBufOffset(buf: UInt8Array, offset: Int, length: Int): Int {\n\t\tvar bytesRead = 0;\n\t\tdo {\n\t\t\tbuf[offset + bytesRead++] = buffer[fileOffset];\n\t\t} while(++fileOffset < bufferLength && bytesRead < length);\n\t\treturn bytesRead;\n\t}\n\n\tstatic function readPixelsRaw(buffer: UInt8Array, data: UInt8Array, offset: Int, numpixels: Int) {\n\t\tvar numExpected = 4 * numpixels;\n\t\tvar numRead = readBufOffset(data, offset, numExpected);\n\t\tif (numRead < numExpected) {\n\t\t\ttrace(\"Error reading raw pixels: got \" + numRead + \" bytes, expected \" + numExpected);\n\t\t\treturn;\n\t\t}\n\t}\n\n\tstatic function readPixelsRawRLE(buffer: UInt8Array, data: UInt8Array, offset: Int, scanline_width: Int, num_scanlines: Int) {\n\t\tvar rgbe = new UInt8Array(4);\n\t\tvar scanline_buffer: UInt8Array = null;\n\t\tvar ptr: Int;\n\t\tvar ptr_end: Int;\n\t\tvar count: Int;\n\t\tvar buf = new UInt8Array(2);\n\t\tvar bufferLength = buffer.length;\n\n\t\twhile (num_scanlines > 0) {\n\t\t\tif (readBuf(rgbe) < rgbe.length) {\n\t\t\t\ttrace(\"Error reading bytes: expected \" + rgbe.length);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif ((rgbe[0] != 2)||(rgbe[1] != 2)||((rgbe[2] & 0x80) != 0)) {\n\t\t\t\t// This file is not run length encoded\n\t\t\t\tdata[offset++] = rgbe[0];\n\t\t\t\tdata[offset++] = rgbe[1];\n\t\t\t\tdata[offset++] = rgbe[2];\n\t\t\t\tdata[offset++] = rgbe[3];\n\t\t\t\treadPixelsRaw(buffer, data, offset, scanline_width * num_scanlines - 1);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif ((((rgbe[2] & 0xFF)<<8) | (rgbe[3] & 0xFF)) != scanline_width) {\n\t\t\t\ttrace(\"Wrong scanline width \" + (((rgbe[2] & 0xFF)<<8) | (rgbe[3] & 0xFF)) + \", expected \" + scanline_width);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (scanline_buffer == null) {\n\t\t\t\tscanline_buffer = new UInt8Array(4 * scanline_width);\n\t\t\t}\n\n\t\t\tptr = 0;\n\t\t\t// Read each of the four channels for the scanline into the buffer\n\t\t\tfor (i in 0...4) {\n\t\t\t\tptr_end = (i + 1) * scanline_width;\n\t\t\t\twhile (ptr < ptr_end) {\n\t\t\t\t\tif (readBuf(buf) < buf.length) {\n\t\t\t\t\t\ttrace(\"Error reading 2-byte buffer\");\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tif ((buf[0] & 0xFF) > 128) {\n\t\t\t\t\t\t// A run of the same value\n\t\t\t\t\t\tcount = (buf[0] & 0xFF) - 128;\n\t\t\t\t\t\tif ((count == 0) || (count > ptr_end - ptr)) {\n\t\t\t\t\t\t\ttrace(\"Bad scanline data\");\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\twhile(count-- > 0) {\n\t\t\t\t\t\t\tscanline_buffer[ptr++] = buf[1];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\t// A non-run\n\t\t\t\t\t\tcount = buf[0] & 0xFF;\n\t\t\t\t\t\tif ((count == 0) || (count > ptr_end - ptr)) {\n\t\t\t\t\t\t\ttrace(\"Bad scanline data\");\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tscanline_buffer[ptr++] = buf[1];\n\t\t\t\t\t\tif (--count > 0) {\n\t\t\t\t\t\t\tif (readBufOffset(scanline_buffer, ptr, count) < count) {\n\t\t\t\t\t\t\t\ttrace(\"Error reading non-run data\");\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tptr += count;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Copy byte data to output\n\t\t\tfor (i in 0...scanline_width) {\n\t\t\t\tdata[offset + 0] = scanline_buffer[i];\n\t\t\t\tdata[offset + 1] = scanline_buffer[i + scanline_width];\n\t\t\t\tdata[offset + 2] = scanline_buffer[i + 2 * scanline_width];\n\t\t\t\tdata[offset + 3] = scanline_buffer[i + 3 * scanline_width];\n\t\t\t\toffset += 4;\n\t\t\t}\n\n\t\t\tnum_scanlines--;\n\t\t}\n\t}\n\n\tstatic function readLine(): String {\n\t\tvar buf = \"\";\n\t\tdo {\n\t\t\tvar b = buffer[fileOffset];\n\t\t\tif (b == 10) { // New line\n\t\t\t\t++fileOffset;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tbuf += String.fromCharCode(b);\n\t\t} while(++fileOffset < bufferLength);\n\t\treturn buf;\n\t}\n\n\tpublic static function parse(bytes:Bytes) {\n\t\tbuffer = UInt8Array.fromBytes(bytes);\n\t\tbufferLength = buffer.length;\n\t\tfileOffset = 0;\n\t\tvar width = 0;\n\t\tvar height = 0;\n\t\tvar exposure = 1.0;\n\t\tvar gamma = 1.0;\n\t\tvar rle = false;\n\n\t\tfor (i in 0...20) {\n\t\t\tvar line = readLine();\n\t\t\tif (formatPattern.match(line)) {\n\t\t\t\trle = true;\n\t\t\t}\n\t\t\telse if (exposurePattern.match(line)) {\n\t\t\t\texposure = Std.parseFloat(exposurePattern.matched(1));\n\t\t\t}\n\t\t\telse if (widthHeightPattern.match(line)) {\n\t\t\t\theight = Std.parseInt(widthHeightPattern.matched(1));\n\t\t\t\twidth = Std.parseInt(widthHeightPattern.matched(2));\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\t//else if (radiancePattern.match(line)) {}\n\t\t\t//else if (commentPattern.match(line)) {}\n\t\t}\n\n\t\tif (!rle) {\n\t\t\ttrace(\"File is not run length encoded!\");\n\t\t\treturn null;\n\t\t}\n\n\t\tvar data = new UInt8Array(width * height * 4);\n\t\tvar scanline_width = width;\n\t\tvar num_scanlines = height;\n\n\t\treadPixelsRawRLE(buffer, data, 0, scanline_width, num_scanlines);\n\n\t\t// TODO: should be Float16\n\t\tvar floatData = new Float32Array(width * height * 4);\n\t\tvar offset = 0;\n\t\twhile (offset < data.length) {\n\t\t\tvar r = data[offset + 0] / 255;\n\t\t\tvar g = data[offset + 1] / 255;\n\t\t\tvar b = data[offset + 2] / 255;\n\t\t\tvar e = data[offset + 3];\n\t\t\tvar f = Math.pow(2.0, e - 128.0);\n\t\t\tr *= f;\n\t\t\tg *= f;\n\t\t\tb *= f;\n\n\t\t\tfloatData[offset + 0] = r;\n\t\t\tfloatData[offset + 1] = g;\n\t\t\tfloatData[offset + 2] = b;\n\t\t\tfloatData[offset + 3] = 1.0;\n\t\t\toffset += 4;\n\t\t}\n\n\t\treturn {\n\t\t\twidth: width,\n\t\t\theight: height,\n\t\t\t// exposure: exposure,\n\t\t\t// gamma: gamma,\n\t\t\tdata: floatData\n\t\t}\n\t}\n}\n","package kha.js;\n\nimport js.html.AudioElement;\nimport kha.audio1.AudioChannel;\n\nclass AEAudioChannel implements kha.audio1.AudioChannel {\n\tvar element: AudioElement;\n\tvar stopped = false;\n\tvar looping: Bool;\n\t\n\tpublic function new(element: AudioElement, looping: Bool) {\n\t\tthis.element = element;\n\t\tthis.looping = looping;\n\t}\n\t\n\tpublic function play(): Void {\n\t\tstopped = false;\n\t\telement.play();\n\t}\n\t\n\tpublic function pause(): Void {\n\t\ttry {\n\t\t\telement.pause();\n\t\t}\n\t\tcatch (e: Dynamic) {\n\t\t\ttrace(e);\n\t\t}\n\t}\n\n\tpublic function stop(): Void {\n\t\ttry {\n\t\t\telement.pause();\n\t\t\telement.currentTime = 0;\n\t\t\tstopped = true;\n\t\t}\n\t\tcatch (e: Dynamic) {\n\t\t\ttrace(e);\n\t\t}\n\t}\n\n\tpublic var length(get, null): Float; // Seconds\n\t\n\tprivate function get_length(): Float {\n\t\tif (Math.isFinite(element.duration)) {\n\t\t\treturn element.duration;\n\t\t}\n\t\telse {\n\t\t\treturn Math.POSITIVE_INFINITY;\n\t\t}\n\t}\n\n\tpublic var position(get, set): Float; // Seconds\n\t\n\tprivate function get_position(): Float {\n\t\treturn element.currentTime;\n\t}\n\n\tfunction set_position(value: Float): Float {\n\t\treturn element.currentTime = value;\n\t}\n\n\tpublic var volume(get, set): Float;\n\n\tprivate function get_volume(): Float {\n\t\treturn element.volume;\n\t}\n\n\tprivate function set_volume(value: Float): Float {\n\t\treturn element.volume = value;\n\t}\n\n\tpublic var finished(get, null): Bool;\n\n\tprivate function get_finished(): Bool {\n\t\treturn stopped || (!looping && position >= length);\n\t}\n}\n","package kha.js;\r\n\r\n@:keep\r\nclass AudioElementAudio {\r\n\r\n\tpublic static function play(sound: Sound, loop: Bool = false): kha.audio1.AudioChannel {\r\n\t\treturn stream(sound, loop);\r\n\t}\r\n\r\n\tpublic static function stream(sound: Sound, loop: Bool = false): kha.audio1.AudioChannel {\r\n\t\tsound.element.loop = loop;\r\n\t\tvar channel = new AEAudioChannel(sound.element, loop);\r\n\t\tchannel.play();\r\n\t\treturn cast channel;\r\n\t}\r\n}\r\n","package kha.js;\r\n\r\nimport kha.Color;\r\nimport kha.graphics2.Graphics;\r\nimport kha.graphics2.ImageScaleQuality;\r\nimport kha.math.FastMatrix3;\r\nimport js.html.CanvasRenderingContext2D;\r\n\r\nclass CanvasGraphics extends Graphics {\r\n\tprivate var canvas: CanvasRenderingContext2D;\r\n\tprivate var webfont: kha.js.Font;\r\n\tprivate var myColor: Color;\r\n\tprivate var scaleQuality: ImageScaleQuality;\r\n\tprivate var clipping: Bool = false;\r\n\tprivate static var instance: CanvasGraphics;\r\n\r\n\tpublic function new(canvas: CanvasRenderingContext2D) {\r\n\t\tsuper();\r\n\t\tthis.canvas = canvas;\r\n\t\tinstance = this;\r\n\t\tmyColor = Color.fromBytes(0, 0, 0);\r\n\t\t//webfont = new Font(\"Arial\", new FontStyle(false, false, false), 12);\r\n\t\t//canvas.globalCompositeOperation = \"normal\";\r\n\t}\r\n\r\n\tpublic static function stringWidth(font: kha.Font, text: String): Float {\r\n\t\tif (instance == null) return 5 * text.length;\r\n\t\telse {\r\n\t\t\tinstance.font = font;\r\n\t\t\treturn instance.canvas.measureText(text).width;\r\n\t\t}\r\n\t}\r\n\r\n\toverride public function begin(clear: Bool = true, clearColor: Color = null): Void {\r\n\t\tif (clear) this.clear(clearColor);\r\n\t}\r\n\r\n\toverride public function clear(color: Color = null): Void {\r\n\t\tif (color == null) color = 0x00000000;\r\n\t\tcanvas.strokeStyle = \"rgba(\" + color.Rb + \",\" + color.Gb + \",\" + color.Bb + \",\" + color.A + \")\";\r\n\t\tcanvas.fillStyle = \"rgba(\" + color.Rb + \",\" + color.Gb + \",\" + color.Bb + \",\" + color.A + \")\";\r\n\t\tif (color.A == 0) // if color is transparent, clear the screen. Note: in Canvas, transparent colors will overlay, not overwrite.\r\n\t\t\tcanvas.clearRect(0, 0, canvas.canvas.width, canvas.canvas.height);\r\n\t\telse\r\n\t\t\tcanvas.fillRect(0, 0, canvas.canvas.width, canvas.canvas.height);\r\n\t\tthis.color = myColor;\r\n\t}\r\n\r\n\toverride public function end(): Void {\r\n\r\n\t}\r\n\r\n\t/*override public function translate(x: Float, y: Float) {\r\n\t\ttx = x;\r\n\t\tty = y;\r\n\t}*/\r\n\r\n\toverride public function drawImage(img: kha.Image, x: Float, y: Float) {\r\n\t\tcanvas.globalAlpha = opacity;\r\n\t\tcanvas.drawImage(cast(img, CanvasImage).image, x, y);\r\n\t\tcanvas.globalAlpha = 1;\r\n\t}\r\n\r\n\toverride public function drawScaledSubImage(image: kha.Image, sx: Float, sy: Float, sw: Float, sh: Float, dx: Float, dy: Float, dw: Float, dh: Float) {\r\n\t\tcanvas.globalAlpha = opacity;\r\n\t\ttry {\r\n\t\t\tif (dw < 0 || dh < 0) {\r\n\t\t\t\tcanvas.save();\r\n\t\t\t\tcanvas.translate(dx, dy);\r\n\t\t\t\tvar x = 0.0;\r\n\t\t\t\tvar y = 0.0;\r\n\t\t\t\tif (dw < 0) {\r\n\t\t\t\t\tcanvas.scale(-1, 1);\r\n\t\t\t\t\tx = -dw;\r\n\t\t\t\t}\r\n\t\t\t\tif (dh < 0) {\r\n\t\t\t\t\tcanvas.scale(1, -1);\r\n\t\t\t\t\ty = -dh;\r\n\t\t\t\t}\r\n\t\t\t\tcanvas.drawImage(cast(image, CanvasImage).image, sx, sy, sw, sh, x, y, dw, dh);\r\n\t\t\t\tcanvas.restore();\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tcanvas.drawImage(cast(image, CanvasImage).image, sx, sy, sw, sh, dx, dy, dw, dh);\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (ex: Dynamic) {\r\n\r\n\t\t}\r\n\t\tcanvas.globalAlpha = 1;\r\n\t}\r\n\r\n\toverride public function set_color(color: Color): Color {\r\n\t\tmyColor = color;\r\n\t\tcanvas.strokeStyle = \"rgba(\" + color.Rb + \",\" + color.Gb + \",\" + color.Bb + \",\" + color.A + \")\";\r\n\t\tcanvas.fillStyle = \"rgba(\" + color.Rb + \",\" + color.Gb + \",\" + color.Bb + \",\" + color.A + \")\";\r\n\t\treturn color;\r\n\t}\r\n\r\n\toverride public function get_color(): Color {\r\n\t\treturn myColor;\r\n\t}\r\n\r\n\toverride private function get_imageScaleQuality(): ImageScaleQuality {\r\n\t\treturn scaleQuality;\r\n\t}\r\n\r\n\toverride private function set_imageScaleQuality(value: ImageScaleQuality): ImageScaleQuality {\r\n\t\tif (value == ImageScaleQuality.Low) {\r\n\t\t\tuntyped canvas.mozImageSmoothingEnabled = false;\r\n\t\t\tuntyped canvas.webkitImageSmoothingEnabled = false;\r\n\t\t\tuntyped canvas.msImageSmoothingEnabled = false;\r\n\t\t\tcanvas.imageSmoothingEnabled = false;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tuntyped canvas.mozImageSmoothingEnabled = true;\r\n\t\t\tuntyped canvas.webkitImageSmoothingEnabled = true;\r\n\t\t\tuntyped canvas.msImageSmoothingEnabled = true;\r\n\t\t\tcanvas.imageSmoothingEnabled = true;\r\n\t\t}\r\n\t\treturn scaleQuality = value;\r\n\t}\r\n\r\n\toverride public function drawRect(x: Float, y: Float, width: Float, height: Float, strength: Float = 1.0) {\r\n\t\tcanvas.beginPath();\r\n\t\tvar oldStrength = canvas.lineWidth;\r\n\t\tcanvas.lineWidth = Math.round(strength);\r\n\t\tcanvas.rect(x, y, width, height);\r\n\t\tcanvas.stroke();\r\n\t\tcanvas.lineWidth = oldStrength;\r\n\t}\r\n\r\n\toverride public function fillRect(x: Float, y: Float, width: Float, height: Float) {\r\n\t\tcanvas.globalAlpha = opacity * myColor.A;\r\n\t\tcanvas.fillRect(x, y, width, height);\r\n\t\tcanvas.globalAlpha = opacity;\r\n\t}\r\n\r\n\tpublic function drawArc(cx: Float, cy: Float, radius: Float, sAngle: Float, eAngle: Float, strength: Float = 1.0, ccw: Bool = false) {\r\n\t\t_drawArc(cx, cy, radius, sAngle, eAngle, strength, ccw);\r\n\t}\r\n\r\n\tpublic function drawCircle(cx: Float, cy: Float, radius: Float, strength: Float = 1.0) {\r\n\t\t_drawArc(cx, cy, radius, 0, 2 * Math.PI, strength, false);\r\n\t}\r\n\r\n\tinline function _drawArc(cx: Float, cy: Float, radius: Float, sAngle: Float, eAngle: Float, strength: Float, ccw: Bool) {\r\n\t\tcanvas.beginPath();\r\n\t\tvar oldStrength = canvas.lineWidth;\r\n\t\tcanvas.lineWidth = Math.round(strength);\r\n\t\tcanvas.arc(cx, cy, radius, sAngle, eAngle, ccw);\r\n\t\tcanvas.stroke();\r\n\t\tcanvas.lineWidth = oldStrength;\r\n\t}\r\n\r\n\tpublic function fillArc(cx: Float, cy: Float, radius: Float, sAngle: Float, eAngle: Float, ccw: Bool = false) {\r\n\t\tcanvas.beginPath();\r\n\t\tcanvas.arc(cx, cy, radius, sAngle, eAngle, ccw);\r\n\t\tcanvas.fill();\r\n\t}\r\n\r\n\tpublic function fillCircle(cx: Float, cy: Float, radius: Float) {\r\n\t\tcanvas.beginPath();\r\n\t\tcanvas.arc(cx, cy, radius, 0, 2 * Math.PI, false);\r\n\t\tcanvas.fill();\r\n\t}\r\n\r\n\tvar bakedQuadCache = new kha.Kravur.AlignedQuad();\r\n\r\n\toverride public function drawString(text: String, x: Float, y: Float) {\r\n\t\t//canvas.fillText(text, tx + x, ty + y + webfont.getHeight());\r\n\t\t//canvas.drawImage(cast(webfont.getTexture(), Image).image, 0, 0, 50, 50, tx + x, ty + y, 50, 50);\r\n\r\n\t\tvar image = webfont.getImage(fontSize, myColor);\r\n\t\tif (image.width > 0) {\r\n\t\t\t// the image created in getImage() is not imediately useable\r\n\t\t\tvar xpos = x;\r\n\t\t\tvar ypos = y;\r\n\t\t\tfor (i in 0...text.length) {\r\n\t\t\t\tvar q = webfont.kravur._get(fontSize).getBakedQuad(bakedQuadCache, kha.graphics2.Graphics.fontGlyphs.indexOf(text.charCodeAt(i)), xpos, ypos);\r\n\r\n\t\t\t\tif (q != null) {\r\n\t\t\t\t\tif (q.s1 - q.s0 > 0 && q.t1 - q.t0 > 0 && q.x1 - q.x0 > 0 && q.y1 - q.y0 > 0)\r\n\t\t\t\t\t\tcanvas.drawImage(image, q.s0 * image.width, q.t0 * image.height, (q.s1 - q.s0) * image.width, (q.t1 - q.t0) * image.height, q.x0, q.y0, q.x1 - q.x0, q.y1 - q.y0);\r\n\t\t\t\t\txpos += q.xadvance;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\toverride public function drawCharacters(text: Array<Int>, start: Int, length: Int, x: Float, y: Float): Void {\r\n\t\tvar image = webfont.getImage(fontSize, myColor);\r\n\t\tif (image.width > 0) {\r\n\t\t\t// the image created in getImage() is not imediately useable\r\n\t\t\tvar xpos = x;\r\n\t\t\tvar ypos = y;\r\n\t\t\tfor (i in start...start + length) {\r\n\t\t\t\tvar q = webfont.kravur._get(fontSize).getBakedQuad(bakedQuadCache, kha.graphics2.Graphics.fontGlyphs.indexOf(text[i]), xpos, ypos);\r\n\r\n\t\t\t\tif (q != null) {\r\n\t\t\t\t\tif (q.s1 - q.s0 > 0 && q.t1 - q.t0 > 0 && q.x1 - q.x0 > 0 && q.y1 - q.y0 > 0)\r\n\t\t\t\t\t\tcanvas.drawImage(image, q.s0 * image.width, q.t0 * image.height, (q.s1 - q.s0) * image.width, (q.t1 - q.t0) * image.height, q.x0, q.y0, q.x1 - q.x0, q.y1 - q.y0);\r\n\t\t\t\t\txpos += q.xadvance;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\toverride public function set_font(font: kha.Font): kha.Font {\r\n\t\twebfont = cast(font, kha.js.Font);\r\n\t\t//canvas.font = webfont.size + \"px \" + webfont.name;\r\n\t\treturn cast webfont;\r\n\t}\r\n\r\n\toverride public function get_font(): kha.Font {\r\n\t\treturn cast webfont;\r\n\t}\r\n\r\n\toverride public function drawLine(x1: Float, y1: Float, x2: Float, y2: Float, strength: Float = 1.0) {\r\n\t\tcanvas.beginPath();\r\n\t\tvar oldWith = canvas.lineWidth;\r\n\t\tcanvas.lineWidth = Math.round(strength);\r\n\t\tcanvas.moveTo(x1, y1);\r\n\t\tcanvas.lineTo(x2, y2);\r\n\t\tcanvas.moveTo(0, 0);\r\n\t\tcanvas.stroke();\r\n\t\tcanvas.lineWidth = oldWith;\r\n\t}\r\n\r\n\toverride public function fillTriangle(x1: Float, y1: Float, x2: Float, y2: Float, x3: Float, y3: Float) {\r\n\t\tcanvas.beginPath();\r\n\t\tcanvas.moveTo(x1, y1);\r\n\t\tcanvas.lineTo(x2, y2);\r\n\t\tcanvas.lineTo(x3, y3);\r\n\t\tcanvas.closePath();\r\n\t\tcanvas.fill();\r\n\t}\r\n\r\n\toverride public function scissor(x: Int, y: Int, width: Int, height: Int): Void {\r\n\t\tif (!clipping) {\r\n\t\t\tcanvas.save();\r\n\t\t\tclipping = true;\r\n\t\t}\r\n\t\tcanvas.beginPath();\r\n\t\tcanvas.rect(x, y, width, height);\r\n\t\tcanvas.clip();\r\n\t}\r\n\r\n\toverride public function disableScissor(): Void {\r\n\t\tif (clipping) {\r\n\t\t\tcanvas.restore();\r\n\t\t\tclipping = false;\r\n\t\t}\r\n\t}\r\n\r\n\toverride public function drawVideo(video: kha.Video, x: Float, y: Float, width: Float, height: Float): Void {\r\n\t\tcanvas.drawImage(cast(video, Video).element, x, y, width, height);\r\n\t}\r\n\r\n\toverride public function setTransformation(transformation: FastMatrix3): Void {\r\n\t\tcanvas.setTransform(transformation._00, transformation._01, transformation._10,\r\n\t\t\ttransformation._11, transformation._20, transformation._21);\r\n\t}\r\n}\r\n","package kha.js;\r\n\r\nimport haxe.io.Bytes;\r\nimport js.Browser;\r\nimport js.html.ImageElement;\r\nimport kha.Color;\r\nimport kha.Kravur;\r\n\r\n@:keepInit\r\nclass Font implements Resource {\r\n\tpublic var kravur: Kravur;\r\n\tprivate var images: Map<Int, Map<Int, ImageElement>> = new Map();\r\n\r\n\tpublic function new(blob: Blob) {\r\n\t\tthis.kravur = untyped __js__ (\"new kha_js_Font.Kravur(blob);\");\r\n\t}\r\n\r\n\tpublic static function fromBytes(bytes: Bytes): Font {\r\n\t\treturn new Font(Blob.fromBytes(bytes));\r\n\t}\r\n\r\n\tpublic function height(fontSize: Int): Float {\r\n\t\treturn kravur._get(fontSize).getHeight();\r\n\t}\r\n\r\n\tpublic function width(fontSize: Int, str: String): Float {\r\n\t\treturn kravur._get(fontSize).stringWidth(str);\r\n\t}\r\n\r\n\tpublic function widthOfCharacters(fontSize: Int, characters: Array<Int>, start: Int, length: Int): Float {\r\n\t\treturn kravur._get(fontSize).charactersWidth(characters, start, length);\r\n\t}\r\n\r\n\tpublic function baseline(fontSize: Int): Float {\r\n\t\treturn kravur._get(fontSize).getBaselinePosition();\r\n\t}\r\n\r\n\tpublic function getImage(fontSize: Int, color: Color): ImageElement {\r\n\t\tvar glyphs = kha.graphics2.Graphics.fontGlyphs;\r\n\t\tvar imageIndex = fontSize * 10000 + glyphs.length;\r\n\t\tif (!images.exists(imageIndex)) {\r\n\t\t\timages[imageIndex] = new Map();\r\n\t\t}\r\n\t\tif (!images[imageIndex].exists(color.value)) {\r\n\t\t\tvar kravur = this.kravur._get(fontSize);\r\n\t\t\tvar canvas = Browser.document.createCanvasElement();\r\n\t\t\tcanvas.width = kravur.width;\r\n\t\t\tcanvas.height = kravur.height;\r\n\t\t\tvar ctx = canvas.getContext(\"2d\");\r\n\t\t\tctx.fillStyle = \"black\";\r\n\t\t\tctx.fillRect(0, 0, kravur.width, kravur.height);\r\n\r\n\t\t\tvar imageData = ctx.getImageData(0, 0, kravur.width, kravur.height);\r\n\t\t\tvar bytes = cast(kravur.getTexture(), CanvasImage).bytes;\r\n\t\t\tfor (i in 0...bytes.length) {\r\n\t\t\t\timageData.data[i * 4 + 0] = color.Rb;\r\n\t\t\t\timageData.data[i * 4 + 1] = color.Gb;\r\n\t\t\t\timageData.data[i * 4 + 2] = color.Bb;\r\n\t\t\t\timageData.data[i * 4 + 3] = bytes.get(i);\r\n\t\t\t}\r\n\t\t\tctx.putImageData(imageData, 0, 0);\r\n\r\n\t\t\tvar img = Browser.document.createImageElement();\r\n\t\t\timg.src = canvas.toDataURL(\"image/png\");\r\n\t\t\timages[imageIndex][color.value] = img;\r\n\t\t\treturn img;\r\n\t\t}\r\n\t\treturn images[imageIndex][color.value];\r\n\t}\r\n\r\n\tpublic function unload(): Void {\r\n\t\tkravur = null;\r\n\t\timages = null;\r\n\t}\r\n}\r\n","package kha.js;\n\nimport js.html.audio.AudioContext;\n\n@:keep\nclass MobileWebAudio {\n\t@:noCompletion public static var _context: AudioContext;\n\n\t@:noCompletion public static function _init(): Void {\n\t\ttry {\n\t\t\t_context = new AudioContext();\n\t\t\treturn;\n\t\t}\n\t\tcatch (e: Dynamic) {\n\t\t\t\n\t\t}\n\t\ttry {\n\t\t\tuntyped __js__('this._context = new webkitAudioContext();');\n\t\t\treturn;\n\t\t}\n\t\tcatch (e: Dynamic) {\n\t\t\t\n\t\t}\n\t}\n\t\n\tpublic static function play(sound: Sound, loop: Bool = false): kha.audio1.AudioChannel {\n\t\tvar channel = new MobileWebAudioChannel(cast sound, loop);\n\t\tchannel.play();\n\t\treturn channel; \n\t}\n\n\tpublic static function stream(sound: Sound, loop: Bool = false): kha.audio1.AudioChannel {\n\t\treturn play(sound, loop);\n\t}\n}\n","package kha.js;\n\nimport js.html.audio.AudioBuffer;\nimport js.html.audio.AudioBufferSourceNode;\nimport js.html.audio.GainNode;\n\nclass MobileWebAudioChannel implements kha.audio1.AudioChannel {\n\tprivate var buffer: AudioBuffer;\n\tprivate var loop: Bool;\n\tprivate var source: AudioBufferSourceNode;\n\tprivate var gain: GainNode;\n\tprivate var startTime: Float;\n\tprivate var pauseTime: Float;\n\tprivate var paused: Bool = false;\n\tprivate var stopped: Bool = false;\n\n\tpublic function new(sound: MobileWebAudioSound, loop: Bool) {\n\t\tthis.buffer = sound._buffer;\n\t\tthis.loop = loop;\n\t\tcreateSource();\n\t}\n\n\tprivate function createSource(): Void {\n\t\tsource = MobileWebAudio._context.createBufferSource();\n\t\tsource.loop = loop;\n\t\tsource.buffer = buffer;\n\t\tsource.onended = function () {\n\t\t\tstopped = true;\n\t\t}\n\t\tgain = MobileWebAudio._context.createGain();\n\t\tsource.connect(gain);\n\t\tgain.connect(MobileWebAudio._context.destination);\n\t}\n\t\n\tpublic function play(): Void {\n\t\tif (paused || stopped) {\n\t\t\tcreateSource();\n\t\t}\n\t\tstopped = false;\n\t\tif (paused) {\n\t\t\tpaused = false;\n\t\t\tstartTime = MobileWebAudio._context.currentTime - pauseTime;\n\t\t\tsource.start(0, pauseTime);\n\t\t}\n\t\telse {\n\t\t\tstartTime = MobileWebAudio._context.currentTime;\n\t\t\tsource.start();\n\t\t}\n\t}\n\n\tpublic function pause(): Void {\n\t\tfinal wasStopped = paused || stopped;\n\t\tpauseTime = MobileWebAudio._context.currentTime - startTime;\n\t\tpaused = true;\n\t\tif (wasStopped) return;\n\t\tsource.stop();\n\t}\n\n\tpublic function stop(): Void {\n\t\tfinal wasStopped = paused || stopped;\n\t\tpaused = false;\n\t\tstopped = true;\n\t\tif (wasStopped) return;\n\t\tsource.stop();\n\t}\n\n\tpublic var length(get, null): Float; // Seconds\n\t\n\tprivate function get_length(): Float {\n\t\treturn source.buffer.duration;\n\t}\n\n\tpublic var position(get, set): Float; // Seconds\n\t\n\tprivate function get_position(): Float {\n\t\tif (stopped) return length;\n\t\tif (paused) return pauseTime;\n\t\telse return MobileWebAudio._context.currentTime - startTime;\n\t}\n\n\tfunction set_position(value: Float): Float {\n\t\treturn value;\n\t}\n\n\tpublic var volume(get, set): Float;\n\n\tprivate function get_volume(): Float {\n\t\treturn gain.gain.value;\n\t}\n\n\tprivate function set_volume(value: Float): Float {\n\t\treturn gain.gain.value = value;\n\t}\n\n\tpublic var finished(get, null): Bool;\n\n\tprivate function get_finished(): Bool {\n\t\treturn stopped;\n\t}\n}\n","package kha.js;\n\nimport haxe.io.Bytes;\nimport js.html.XMLHttpRequest;\n\nclass MobileWebAudioSound extends kha.Sound {\n\tpublic var _buffer: Dynamic;\n\n\tpublic function new(filename: String, done: kha.Sound -> Void, failed: AssetError -> Void) {\n\t\tsuper();\n\t\tvar request = untyped new XMLHttpRequest();\n\t\trequest.open(\"GET\", filename, true);\n\t\trequest.responseType = \"arraybuffer\";\n\n\t\trequest.onerror = function() {\n\t\t\tfailed({ url: filename });\n\t\t};\n\n\t\trequest.onload = function() {\n\t\t\tcompressedData = Bytes.ofData(request.response);\n\t\t\tuncompressedData = null;\n\t\t\tMobileWebAudio._context.decodeAudioData(compressedData.getData(),\n\t\t\t\tfunction (buffer) {\n\t\t\t\t\tlength = buffer.duration;\n\t\t\t\t\tchannels = buffer.numberOfChannels;\n\t\t\t\t\t_buffer = buffer;\n\t\t\t\t\tdone(this);\n\t\t\t\t},\n\t\t\t\tfunction () {\n\t\t\t\t\tfailed({ url: filename, error: 'Audio format not supported' });\n\t\t\t\t}\n\t\t\t);\n\t\t};\n\t\trequest.send(null);\n\t}\n\n\toverride public function uncompress(done: Void->Void): Void {\n\t\tdone();\n\t}\n}\n","package kha.js;\r\n\r\nimport js.Browser;\r\nimport js.html.AudioElement;\r\nimport js.html.ErrorEvent;\r\nimport js.html.Event;\r\nimport js.html.MediaError;\r\n\r\nusing StringTools;\r\n\r\n/*class SoundChannel extends kha.SoundChannel {\r\n\tprivate var element: Dynamic;\r\n\r\n\tpublic function new(element: Dynamic) {\r\n\t\tsuper();\r\n\t\tthis.element = element;\r\n\t}\r\n\r\n\toverride public function play(): Void {\r\n\t\tsuper.play();\r\n\t\telement.play();\r\n\t}\r\n\r\n\toverride public function pause(): Void {\r\n\t\ttry {\r\n\t\t\telement.pause();\r\n\t\t}\r\n\t\tcatch (e: Dynamic) {\r\n\t\t\ttrace(e);\r\n\t\t}\r\n\t}\r\n\r\n\toverride public function stop(): Void {\r\n\t\ttry {\r\n\t\t\telement.pause();\r\n\t\t\telement.currentTime = 0;\r\n\t\t\tsuper.stop();\r\n\t\t}\r\n\t\tcatch (e: Dynamic) {\r\n\t\t\ttrace(e);\r\n\t\t}\r\n\t}\r\n\r\n\toverride public function getCurrentPos(): Int {\r\n\t\treturn Math.ceil(element.currentTime * 1000);  // Miliseconds\r\n\t}\r\n\r\n\toverride public function getLength(): Int {\r\n\t\tif (Math.isFinite(element.duration)) {\r\n\t\t\treturn Math.floor(element.duration * 1000); // Miliseconds\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn -1;\r\n\t\t}\r\n\t}\r\n}*/\r\nclass Sound extends kha.Sound {\r\n\tprivate var filenames: Array<String>;\r\n\tstatic var loading: Array<Sound> = new Array();\r\n\tprivate var done: kha.Sound -> Void;\r\n\tprivate var failed: AssetError -> Void;\r\n\tpublic var element: AudioElement;\r\n\r\n\tpublic function new(filenames: Array<String>, done: kha.Sound -> Void, failed: AssetError -> Void) {\r\n\t\tsuper();\r\n\r\n\t\tthis.done = done;\r\n\t\tthis.failed = failed;\r\n\t\tloading.push(this); // prevent gc from removing this\r\n\r\n\t\telement = Browser.document.createAudioElement();\r\n\r\n\t\tthis.filenames = [];\r\n\t\tfor (filename in filenames) {\r\n\t\t\tif (element.canPlayType(\"audio/ogg\") != \"\" && filename.endsWith(\".ogg\")) this.filenames.push(filename);\r\n\t\t\tif (element.canPlayType(\"audio/mp4\") != \"\" && filename.endsWith(\".mp4\")) this.filenames.push(filename);\r\n\t\t\tif (element.canPlayType(\"audio/wav\") != \"\" && filename.endsWith(\".wav\")) this.filenames.push(filename);\r\n\t\t}\r\n\r\n\t\telement.addEventListener(\"error\", errorListener, false);\r\n\t\telement.addEventListener(\"canplay\", canPlayThroughListener, false);\r\n\r\n\t\telement.src = this.filenames[0];\r\n\t\telement.preload = \"auto\";\r\n\t\telement.load();\r\n\t}\r\n\r\n\t//override public function play(): kha.SoundChannel {\r\n\t//\ttry {\r\n\t//\t\telement.play();\r\n\t//\t}\r\n\t//\tcatch (e: Dynamic) {\r\n\t//\t\ttrace(e);\r\n\t//\t}\r\n\t//\treturn new SoundChannel(element);\r\n\t//}\r\n\tprivate function errorListener(eventInfo: ErrorEvent): Void {\r\n\t\tif (element.error.code == MediaError.MEDIA_ERR_SRC_NOT_SUPPORTED) {\r\n\t\t\tfor (i in 0...filenames.length - 1) {\r\n\t\t\t\tif (element.src == filenames[i]) {\r\n\t\t\t\t\t// try loading with next extension:\r\n\t\t\t\t\telement.src = filenames[i + 1];\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfailed({ url: element.src });\r\n\t\tfinishAsset();\r\n\t}\r\n\r\n\tprivate function canPlayThroughListener(eventInfo: Event): Void {\r\n\t\tfinishAsset();\r\n\t}\r\n\r\n\tprivate function finishAsset() {\r\n\t\telement.removeEventListener(\"error\", errorListener, false);\r\n\t\telement.removeEventListener(\"canplaythrough\", canPlayThroughListener, false);\r\n\t\tdone(this);\r\n\t\tloading.remove(this);\r\n\t}\r\n\r\n\toverride public function uncompress(done: Void->Void): Void {\r\n\t\tdone();\r\n\t}\r\n}\r\n","package kha.js;\r\n\r\nimport js.Browser;\r\nimport js.html.ErrorEvent;\r\nimport js.html.Event;\r\nimport js.html.MediaError;\r\nimport js.html.VideoElement;\r\n\r\nusing StringTools;\r\n\r\nclass Video extends kha.Video {\r\n\tprivate var filenames: Array<String>;\r\n\tpublic var element: VideoElement;\r\n\tprivate var done: kha.Video -> Void;\r\n\tpublic var texture: Image;\r\n\t\r\n\tprivate function new() {\r\n\t\tsuper();\r\n\t}\r\n\r\n\tpublic static function fromElement(element: js.html.VideoElement): Video {\r\n\t\tvar video = new Video();\r\n\t\tvideo.element = element;\r\n\t\tif (SystemImpl.gl != null) video.texture = Image.fromVideo(video);\r\n\t\treturn video;\r\n\t}\r\n\r\n\tpublic static function fromFile(filenames: Array<String>, done: kha.Video -> Void): Void {\r\n\t\tvar video = new Video();\r\n\r\n\t\tvideo.done = done;\r\n\t\t\r\n\t\tvideo.element = cast Browser.document.createElement(\"video\");\r\n\t\t\r\n\t\tvideo.filenames = [];\r\n\t\tfor (filename in filenames) {\r\n\t\t\tif (video.element.canPlayType(\"video/webm\") != \"\" && filename.endsWith(\".webm\")) video.filenames.push(filename);\r\n#if !kha_krom\r\n\t\t\tif (video.element.canPlayType(\"video/mp4\") != \"\" && filename.endsWith(\".mp4\")) video.filenames.push(filename);\r\n#end\r\n\t\t}\r\n\t\t\r\n\t\tvideo.element.addEventListener(\"error\", video.errorListener, false);\r\n\t\tvideo.element.addEventListener(\"canplaythrough\", video.canPlayThroughListener, false);\r\n\t\t\r\n\t\tvideo.element.preload = \"auto\";\r\n\t\tvideo.element.crossOrigin = \"anonymous\"; //Enable cross-origin playback of video\r\n\t\tvideo.element.muted = true; //Enable auto-playback without user interact\r\n\t\tvideo.element.src = video.filenames[0];\r\n\t}\r\n\r\n\toverride public function width(): Int{\r\n\t\treturn element.videoWidth;\r\n\t}\r\n\t\r\n\toverride public function height(): Int{\r\n\t\treturn element.videoHeight;\r\n\t}\r\n\t\r\n\toverride public function play(loop: Bool = false): Void {\r\n\t\ttry {\r\n\t\t\telement.loop = loop;\r\n\t\t\telement.play();\r\n\t\t}\r\n\t\tcatch (e: Dynamic) {\r\n\t\t\ttrace (e);\r\n\t\t}\r\n\t}\r\n\t\r\n\toverride public function pause(): Void {\r\n\t\ttry {\r\n\t\t\telement.pause();\r\n\t\t}\r\n\t\tcatch (e: Dynamic) {\r\n\t\t\ttrace(e);\r\n\t\t}\r\n\t}\r\n\t\r\n\toverride public function stop(): Void {\r\n\t\ttry {\r\n\t\t\telement.pause();\r\n\t\t\telement.currentTime = 0;\r\n\t\t}\r\n\t\tcatch (e: Dynamic) {\r\n\t\t\ttrace(e);\r\n\t\t}\r\n\t}\r\n\t\r\n\toverride public function getCurrentPos(): Int {\r\n\t\treturn Math.ceil(element.currentTime * 1000);  // Miliseconds\r\n\t}\r\n\r\n\toverride private function get_position(): Int {\r\n\t\treturn Math.ceil(element.currentTime * 1000);\r\n\t}\r\n\r\n\toverride private function set_position(value: Int): Int {\r\n\t\telement.currentTime = value / 1000;\r\n\t\treturn value;\r\n\t}\r\n\t\r\n\toverride public function getLength(): Int {\r\n\t\tif (Math.isFinite(element.duration)) {\r\n\t\t\treturn Math.floor(element.duration * 1000); // Miliseconds\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn -1;\r\n\t\t}\r\n\t}\r\n\t\r\n\toverride public function getVolume() : Float {\r\n\t\treturn element.volume;\r\n\t}\r\n\t\r\n\toverride public function setVolume(volume : Float) : Void { // [0, 1]\r\n\t\tif (element.muted && volume > 0)\r\n\t\t\telement.muted = false;\r\n\t\t\t\r\n\t\telement.volume = volume;\r\n\t}\r\n\t\r\n\tprivate function errorListener(eventInfo: ErrorEvent): Void {\r\n\t\tif (element.error.code == MediaError.MEDIA_ERR_SRC_NOT_SUPPORTED) {\r\n\t\t\tfor (i in 0...filenames.length - 1) {\r\n\t\t\t\tif (element.src == filenames[i]) {\r\n\t\t\t\t\t// try loading with next extension:\r\n\t\t\t\t\telement.src = filenames[i + 1];\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\ttrace(\"Error loading \" + element.src);\r\n\t\tfinishAsset();\r\n\t}\r\n\t\r\n\tfunction canPlayThroughListener(eventInfo: Event): Void {\r\n\t\tfinishAsset();\r\n\t}\r\n\t\r\n\tfunction finishAsset() {\r\n\t\telement.removeEventListener(\"error\", errorListener, false);\r\n\t\telement.removeEventListener(\"canplaythrough\", canPlayThroughListener, false);\r\n\t\tif (SystemImpl.gl != null) texture = Image.fromVideo(this);\r\n\t\tdone(this);\r\n\t}\r\n}\r\n","package kha.js.graphics4;\r\n\r\nclass ConstantLocation implements kha.graphics4.ConstantLocation {\r\n\tpublic var value: Dynamic;\r\n\tpublic var type: Int;\r\n\t\r\n\tpublic function new(value: Dynamic, type: Int) {\r\n\t\tthis.value = value;\r\n\t\tthis.type = type;\r\n\t}\r\n}\r\n","package kha.js.graphics4;\r\n\r\nimport kha.graphics4.StencilValue;\r\nimport kha.arrays.Float32Array;\r\nimport kha.arrays.Int32Array;\r\nimport js.html.webgl.GL;\r\nimport kha.graphics4.BlendingFactor;\r\nimport kha.graphics4.BlendingOperation;\r\nimport kha.graphics4.CompareMode;\r\nimport kha.graphics4.CubeMap;\r\nimport kha.graphics4.CullMode;\r\nimport kha.graphics4.IndexBuffer;\r\nimport kha.graphics4.MipMapFilter;\r\nimport kha.graphics4.PipelineState;\r\nimport kha.graphics4.StencilAction;\r\nimport kha.graphics4.TextureAddressing;\r\nimport kha.graphics4.TextureFilter;\r\nimport kha.graphics4.Usage;\r\nimport kha.graphics4.VertexBuffer;\r\nimport kha.graphics4.VertexStructure;\r\nimport kha.Image;\r\nimport kha.math.FastMatrix3;\r\nimport kha.math.FastMatrix4;\r\nimport kha.math.FastVector2;\r\nimport kha.math.FastVector3;\r\nimport kha.math.FastVector4;\r\nimport kha.WebGLImage;\r\n\r\nclass Graphics implements kha.graphics4.Graphics {\r\n\tvar currentPipeline: PipelineState = null;\r\n\tprivate var depthTest: Bool = false;\r\n\tprivate var depthMask: Bool = false;\r\n\tprivate var colorMaskRed: Bool = true;\r\n\tprivate var colorMaskGreen: Bool = true;\r\n\tprivate var colorMaskBlue: Bool = true;\r\n\tprivate var colorMaskAlpha: Bool = true;\r\n\tprivate var indicesCount: Int;\r\n\tprivate var renderTarget: Canvas;\r\n\tprivate var renderTargetFrameBuffer: Dynamic;\r\n\tprivate var renderTargetMSAA: Dynamic;\r\n\tprivate var renderTargetTexture: Dynamic;\r\n\tprivate var isCubeMap: Bool = false;\r\n\tprivate var isDepthAttachment: Bool = false;\r\n\tprivate var instancedExtension: Dynamic;\r\n\tprivate var blendMinMaxExtension: Dynamic;\r\n\tprivate var useVertexAttributes:Int=0;\r\n\r\n\t// WebGL2 constants\r\n\t// https://www.khronos.org/registry/webgl/specs/2.0.0/\r\n\tprivate static inline var GL_TEXTURE_COMPARE_MODE = 0x884C;\r\n\tprivate static inline var GL_TEXTURE_COMPARE_FUNC = 0x884D;\r\n\tprivate static inline var GL_COMPARE_REF_TO_TEXTURE = 0x884E;\r\n\r\n\tpublic function new(renderTarget: Canvas = null) {\r\n\t\tthis.renderTarget = renderTarget;\r\n\t\tinit();\r\n\t\tif (SystemImpl.gl2) {\r\n\t\t\tinstancedExtension = true;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tinstancedExtension = SystemImpl.gl.getExtension(\"ANGLE_instanced_arrays\");\r\n\t\t\tblendMinMaxExtension = SystemImpl.gl.getExtension(\"EXT_blend_minmax\");\r\n\t\t}\r\n\t}\r\n\r\n\tprivate function init() {\r\n\t\tif (renderTarget == null) return;\r\n\t\tisCubeMap = Std.is(renderTarget, CubeMap);\r\n\t\tif (isCubeMap) {\r\n\t\t\tvar cubeMap: CubeMap = cast(renderTarget, CubeMap);\r\n\t\t\trenderTargetFrameBuffer = cubeMap.frameBuffer;\r\n\t\t\trenderTargetTexture = cubeMap.texture;\r\n\t\t\tisDepthAttachment = cubeMap.isDepthAttachment;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tvar image: WebGLImage = cast(renderTarget, WebGLImage);\r\n\t\t\trenderTargetFrameBuffer = image.frameBuffer;\r\n\t\t\trenderTargetMSAA=image.MSAAFrameBuffer;\r\n\t\t\trenderTargetTexture = image.texture;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic function begin(additionalRenderTargets: Array<Canvas> = null): Void {\r\n\t\tSystemImpl.gl.enable(GL.BLEND);\r\n\t\tSystemImpl.gl.blendFunc(GL.SRC_ALPHA, GL.ONE_MINUS_SRC_ALPHA);\r\n\t\tif (renderTarget == null) {\r\n\t\t\tSystemImpl.gl.bindFramebuffer(GL.FRAMEBUFFER, null);\r\n\t\t\tSystemImpl.gl.viewport(0, 0, System.windowWidth(), System.windowHeight());\r\n\t\t}\r\n\t\telse {\r\n\t\t\tSystemImpl.gl.bindFramebuffer(GL.FRAMEBUFFER, renderTargetFrameBuffer);\r\n\t\t\t// if (isCubeMap) SystemImpl.gl.framebufferTexture(GL.FRAMEBUFFER, GL.COLOR_ATTACHMENT0, GL.TEXTURE_CUBE_MAP, renderTargetTexture, 0); // Layered\r\n\t\t\tSystemImpl.gl.viewport(0, 0, renderTarget.width, renderTarget.height);\r\n\t\t\tif (additionalRenderTargets != null) {\r\n\t\t\t\tSystemImpl.gl.framebufferTexture2D(GL.FRAMEBUFFER, SystemImpl.drawBuffers.COLOR_ATTACHMENT0_WEBGL, GL.TEXTURE_2D, renderTargetTexture, 0);\r\n\t\t\t\tfor (i in 0...additionalRenderTargets.length) {\r\n\t\t\t\t\tSystemImpl.gl.framebufferTexture2D(GL.FRAMEBUFFER, SystemImpl.drawBuffers.COLOR_ATTACHMENT0_WEBGL + i + 1, GL.TEXTURE_2D, cast(additionalRenderTargets[i], WebGLImage).texture, 0);\r\n\t\t\t\t}\r\n\t\t\t\tvar attachments = [SystemImpl.drawBuffers.COLOR_ATTACHMENT0_WEBGL];\r\n\t\t\t\tfor (i in 0...additionalRenderTargets.length) {\r\n\t\t\t\t\tattachments.push(SystemImpl.drawBuffers.COLOR_ATTACHMENT0_WEBGL + i + 1);\r\n\t\t\t\t}\r\n\t\t\t\tSystemImpl.gl2 ? untyped SystemImpl.gl.drawBuffers(attachments) : SystemImpl.drawBuffers.drawBuffersWEBGL(attachments);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tpublic function beginFace(face: Int): Void {\r\n\t\tSystemImpl.gl.enable(GL.BLEND);\r\n\t\tSystemImpl.gl.blendFunc(GL.SRC_ALPHA, GL.ONE_MINUS_SRC_ALPHA);\r\n\t\tSystemImpl.gl.bindFramebuffer(GL.FRAMEBUFFER, renderTargetFrameBuffer);\r\n\t\tSystemImpl.gl.framebufferTexture2D(GL.FRAMEBUFFER, isDepthAttachment ? GL.DEPTH_ATTACHMENT : GL.COLOR_ATTACHMENT0, GL.TEXTURE_CUBE_MAP_POSITIVE_X + face, renderTargetTexture, 0);\r\n\t\tSystemImpl.gl.viewport(0, 0, renderTarget.width, renderTarget.height);\r\n\t}\r\n\r\n\tpublic function beginEye(eye: Int): Void {\r\n\t\tSystemImpl.gl.enable(GL.BLEND);\r\n\t\tSystemImpl.gl.blendFunc(GL.SRC_ALPHA, GL.ONE_MINUS_SRC_ALPHA);\r\n\t\tSystemImpl.gl.bindFramebuffer(GL.FRAMEBUFFER, null);\r\n\t\tif (eye == 0) {\r\n\t\t\tSystemImpl.gl.viewport(0, 0, Std.int(System.windowWidth() * 0.5), System.windowHeight());\r\n\t\t} else {\r\n\t\t\tSystemImpl.gl.viewport(Std.int(System.windowWidth() * 0.5), 0, Std.int(System.windowWidth() * 0.5), System.windowHeight());\r\n\t\t}\r\n\t}\r\n\r\n\tpublic function end(): Void {\r\n\t\tif (renderTargetMSAA != null) {\r\n\t\t\tuntyped SystemImpl.gl.bindFramebuffer(SystemImpl.gl.READ_FRAMEBUFFER, renderTargetFrameBuffer);\r\n\t\t\tuntyped SystemImpl.gl.bindFramebuffer(SystemImpl.gl.DRAW_FRAMEBUFFER, renderTargetMSAA);\r\n\t\t\tuntyped SystemImpl.gl.blitFramebuffer(0, 0, renderTarget.width, renderTarget.height,\r\n\t\t\t\t\t\t\t\t0, 0, renderTarget.width, renderTarget.height,\r\n\t\t\t\t\t\t\t\tGL.COLOR_BUFFER_BIT, GL.NEAREST);\r\n\t\t\t\r\n\t\t}\r\n\t\t#if (debug || kha_debug_html5)\r\n\t\tvar error = SystemImpl.gl.getError();\r\n\t\tswitch (error) {\r\n\t\t\tcase GL.NO_ERROR:\r\n\r\n\t\t\tcase GL.INVALID_ENUM:\r\n\t\t\t\ttrace(\"WebGL error: Invalid enum\");\r\n\t\t\tcase GL.INVALID_VALUE:\r\n\t\t\t\ttrace(\"WebGL error: Invalid value\");\r\n\t\t\tcase GL.INVALID_OPERATION:\r\n\t\t\t\ttrace(\"WebGL error: Invalid operation\");\r\n\t\t\tcase GL.INVALID_FRAMEBUFFER_OPERATION:\r\n\t\t\t\ttrace(\"WebGL error: Invalid framebuffer operation\");\r\n\t\t\tcase GL.OUT_OF_MEMORY:\r\n\t\t\t\ttrace(\"WebGL error: Out of memory\");\r\n\t\t\tcase GL.CONTEXT_LOST_WEBGL:\r\n\t\t\t\ttrace(\"WebGL error: Context lost\");\r\n\t\t\tdefault:\r\n\t\t\t\ttrace(\"Unknown WebGL error\");\r\n\t\t}\r\n\t\t#end\r\n\t}\r\n\r\n\tpublic function flush(): Void {\r\n\r\n\t}\r\n\r\n\tpublic function vsynced(): Bool {\r\n\t\treturn true;\r\n\t}\r\n\r\n\tpublic function refreshRate(): Int {\r\n\t\treturn 60;\r\n\t}\r\n\r\n\tpublic function clear(?color: Color, ?depth: Float, ?stencil: Int): Void {\r\n\t\tvar clearMask: Int = 0;\r\n\t\tif (color != null) {\r\n\t\t\tclearMask |= GL.COLOR_BUFFER_BIT;\r\n\t\t\tSystemImpl.gl.colorMask(true, true, true, true);\r\n\t\t\tSystemImpl.gl.clearColor(color.R, color.G, color.B, color.A);\r\n\t\t}\r\n\t\tif (depth != null) {\r\n\t\t\tclearMask |= GL.DEPTH_BUFFER_BIT;\r\n\t\t\tSystemImpl.gl.enable(GL.DEPTH_TEST);\r\n\t\t\tSystemImpl.gl.depthMask(true);\r\n\t\t\tSystemImpl.gl.clearDepth(depth);\r\n\t\t}\r\n\t\tif (stencil != null) {\r\n\t\t\tclearMask |= GL.STENCIL_BUFFER_BIT;\r\n\t\t\tSystemImpl.gl.enable(GL.STENCIL_TEST);\r\n\t\t\tSystemImpl.gl.stencilMask(0xff);\r\n\t\t\tSystemImpl.gl.clearStencil(stencil);\r\n\t\t}\r\n\t\tSystemImpl.gl.clear(clearMask);\r\n\t\tSystemImpl.gl.colorMask(colorMaskRed, colorMaskGreen, colorMaskBlue, colorMaskAlpha);\r\n\t\tif (depthTest) {\r\n\t\t\tSystemImpl.gl.enable(GL.DEPTH_TEST);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tSystemImpl.gl.disable(GL.DEPTH_TEST);\r\n\t\t}\r\n\t\tSystemImpl.gl.depthMask(depthMask);\r\n\t}\r\n\r\n\tpublic function viewport(x: Int, y: Int, width: Int, height: Int): Void {\r\n\t\tif (renderTarget == null) {\r\n\t\t\tSystemImpl.gl.viewport(x, System.windowHeight(0) - y - height, width, height);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tSystemImpl.gl.viewport(x, y, width, height);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic function scissor(x: Int, y: Int, width: Int, height: Int): Void {\r\n\t\tSystemImpl.gl.enable(GL.SCISSOR_TEST);\r\n\t\tif (renderTarget == null) {\r\n\t\t\tSystemImpl.gl.scissor(x, System.windowHeight(0) - y - height, width, height);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tSystemImpl.gl.scissor(x, y, width, height);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic function disableScissor(): Void {\r\n\t\tSystemImpl.gl.disable(GL.SCISSOR_TEST);\r\n\t}\r\n\r\n\tpublic function setDepthMode(write: Bool, mode: CompareMode): Void {\r\n\t\tswitch (mode) {\r\n\t\tcase Always:\r\n\t\t\twrite ? SystemImpl.gl.enable(GL.DEPTH_TEST) : SystemImpl.gl.disable(GL.DEPTH_TEST);\r\n\t\t\tdepthTest = write;\r\n\t\t\tSystemImpl.gl.depthFunc(GL.ALWAYS);\r\n\t\tcase Never:\r\n\t\t\tSystemImpl.gl.enable(GL.DEPTH_TEST);\r\n\t\t\tdepthTest = true;\r\n\t\t\tSystemImpl.gl.depthFunc(GL.NEVER);\r\n\t\tcase Equal:\r\n\t\t\tSystemImpl.gl.enable(GL.DEPTH_TEST);\r\n\t\t\tdepthTest = true;\r\n\t\t\tSystemImpl.gl.depthFunc(GL.EQUAL);\r\n\t\tcase NotEqual:\r\n\t\t\tSystemImpl.gl.enable(GL.DEPTH_TEST);\r\n\t\t\tdepthTest = true;\r\n\t\t\tSystemImpl.gl.depthFunc(GL.NOTEQUAL);\r\n\t\tcase Less:\r\n\t\t\tSystemImpl.gl.enable(GL.DEPTH_TEST);\r\n\t\t\tdepthTest = true;\r\n\t\t\tSystemImpl.gl.depthFunc(GL.LESS);\r\n\t\tcase LessEqual:\r\n\t\t\tSystemImpl.gl.enable(GL.DEPTH_TEST);\r\n\t\t\tdepthTest = true;\r\n\t\t\tSystemImpl.gl.depthFunc(GL.LEQUAL);\r\n\t\tcase Greater:\r\n\t\t\tSystemImpl.gl.enable(GL.DEPTH_TEST);\r\n\t\t\tdepthTest = true;\r\n\t\t\tSystemImpl.gl.depthFunc(GL.GREATER);\r\n\t\tcase GreaterEqual:\r\n\t\t\tSystemImpl.gl.enable(GL.DEPTH_TEST);\r\n\t\t\tdepthTest = true;\r\n\t\t\tSystemImpl.gl.depthFunc(GL.GEQUAL);\r\n\t\t}\r\n\t\tSystemImpl.gl.depthMask(write);\r\n\t\tdepthMask = write;\r\n\t}\r\n\r\n\tprivate static function getBlendFunc(factor: BlendingFactor): Int {\r\n\t\tswitch (factor) {\r\n\t\tcase BlendZero, Undefined:\r\n\t\t\treturn GL.ZERO;\r\n\t\tcase BlendOne:\r\n\t\t\treturn GL.ONE;\r\n\t\tcase SourceAlpha:\r\n\t\t\treturn GL.SRC_ALPHA;\r\n\t\tcase DestinationAlpha:\r\n\t\t\treturn GL.DST_ALPHA;\r\n\t\tcase InverseSourceAlpha:\r\n\t\t\treturn GL.ONE_MINUS_SRC_ALPHA;\r\n\t\tcase InverseDestinationAlpha:\r\n\t\t\treturn GL.ONE_MINUS_DST_ALPHA;\r\n\t\tcase SourceColor:\r\n\t\t\treturn GL.SRC_COLOR;\r\n\t\tcase DestinationColor:\r\n\t\t\treturn GL.DST_COLOR;\r\n\t\tcase InverseSourceColor:\r\n\t\t\treturn GL.ONE_MINUS_SRC_COLOR;\r\n\t\tcase InverseDestinationColor:\r\n\t\t\treturn GL.ONE_MINUS_DST_COLOR;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate static function getBlendOp(op: BlendingOperation): Int {\r\n\t\tswitch (op) {\r\n\t\tcase Add:\r\n\t\t\treturn GL.FUNC_ADD;\r\n\t\tcase Subtract:\r\n\t\t\treturn GL.FUNC_SUBTRACT;\r\n\t\tcase ReverseSubtract:\r\n\t\t\treturn GL.FUNC_REVERSE_SUBTRACT;\r\n\t\tcase Min:\r\n\t\t\treturn 0x8007;\r\n\t\tcase Max:\r\n\t\t\treturn 0x8008;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic function setBlendingMode(source: BlendingFactor, destination: BlendingFactor, operation: BlendingOperation,\r\n\t\talphaSource: BlendingFactor, alphaDestination: BlendingFactor, alphaOperation: BlendingOperation): Void {\r\n\t\tif (source == BlendOne && destination == BlendZero) {\r\n\t\t\tSystemImpl.gl.disable(GL.BLEND);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tSystemImpl.gl.enable(GL.BLEND);\r\n\t\t\tSystemImpl.gl.blendFuncSeparate(getBlendFunc(source), getBlendFunc(destination), getBlendFunc(alphaSource), getBlendFunc(alphaDestination));\r\n\t\t\tSystemImpl.gl.blendEquationSeparate(getBlendOp(operation), getBlendOp(alphaOperation));\r\n\t\t}\r\n\t}\r\n\r\n\tpublic function createVertexBuffer(vertexCount: Int, structure: VertexStructure, usage: Usage, canRead: Bool = false): kha.graphics4.VertexBuffer {\r\n\t\treturn new VertexBuffer(vertexCount, structure, usage);\r\n\t}\r\n\r\n\tpublic function setVertexBuffer(vertexBuffer: kha.graphics4.VertexBuffer): Void {\r\n\t\tuseVertexAttributes =cast(vertexBuffer, VertexBuffer).set(0);\r\n\t}\r\n\r\n\tpublic function setVertexBuffers(vertexBuffers: Array<kha.graphics4.VertexBuffer>): Void {\r\n\t\tvar offset: Int = 0;\r\n\t\tfor (vertexBuffer in vertexBuffers) {\r\n\t\t\toffset += cast(vertexBuffer, VertexBuffer).set(offset);\r\n\t\t}\r\n\t\tuseVertexAttributes=offset;\r\n\t}\r\n\r\n\tpublic function createIndexBuffer(indexCount: Int, usage: Usage, canRead: Bool = false): kha.graphics4.IndexBuffer {\r\n\t\treturn new IndexBuffer(indexCount, usage);\r\n\t}\r\n\r\n\tpublic function setIndexBuffer(indexBuffer: kha.graphics4.IndexBuffer): Void {\r\n\t\tindicesCount = indexBuffer.count();\r\n\t\tcast(indexBuffer, IndexBuffer).set();\r\n\t}\r\n\r\n\t//public function maxTextureSize(): Int {\r\n\t//\treturn Sys.gl == null ? 8192 : Sys.gl.getParameter(Sys.gl.MAX_TEXTURE_SIZE);\r\n\t//}\r\n\r\n\t//public function supportsNonPow2Textures(): Bool {\r\n\t//\treturn false;\r\n\t//}\r\n\r\n\tpublic function setTexture(stage: kha.graphics4.TextureUnit, texture: kha.Image): Void {\r\n\t\tif (texture == null) {\r\n\t\t\tSystemImpl.gl.activeTexture(GL.TEXTURE0 + cast(stage, TextureUnit).value);\r\n\t\t\tSystemImpl.gl.bindTexture(GL.TEXTURE_2D, null);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tcast(texture, WebGLImage).set(cast(stage, TextureUnit).value);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic function setTextureDepth(stage: kha.graphics4.TextureUnit, texture: kha.Image): Void {\r\n\t\tcast(texture, WebGLImage).setDepth(cast(stage, TextureUnit).value);\r\n\t}\r\n\r\n\tpublic function setTextureArray(unit: kha.graphics4.TextureUnit, texture: kha.Image): Void {\r\n\t\t//not implemented yet.\r\n\t}\r\n\r\n\tpublic function setVideoTexture(unit: kha.graphics4.TextureUnit, texture: kha.Video): Void {\r\n\t\tif (texture == null) {\r\n\t\t\tSystemImpl.gl.activeTexture(GL.TEXTURE0 + cast(unit, TextureUnit).value);\r\n\t\t\tSystemImpl.gl.bindTexture(GL.TEXTURE_2D, null);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tcast(cast(texture, kha.js.Video).texture, WebGLImage).set(cast(unit, TextureUnit).value);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic function setImageTexture(unit: kha.graphics4.TextureUnit, texture: kha.Image): Void {\r\n\r\n\t}\r\n\r\n\tpublic function setTextureParameters(texunit: kha.graphics4.TextureUnit, uAddressing: TextureAddressing, vAddressing: TextureAddressing, minificationFilter: TextureFilter, magnificationFilter: TextureFilter, mipmapFilter: MipMapFilter): Void {\r\n\t\tSystemImpl.gl.activeTexture(GL.TEXTURE0 + cast(texunit, TextureUnit).value);\r\n\r\n\t\tswitch (uAddressing) {\r\n\t\tcase Clamp:\r\n\t\t\tSystemImpl.gl.texParameteri(GL.TEXTURE_2D, GL.TEXTURE_WRAP_S, GL.CLAMP_TO_EDGE);\r\n\t\tcase Repeat:\r\n\t\t\tSystemImpl.gl.texParameteri(GL.TEXTURE_2D, GL.TEXTURE_WRAP_S, GL.REPEAT);\r\n\t\tcase Mirror:\r\n\t\t\tSystemImpl.gl.texParameteri(GL.TEXTURE_2D, GL.TEXTURE_WRAP_S, GL.MIRRORED_REPEAT);\r\n\t\t}\r\n\r\n\t\tswitch (vAddressing) {\r\n\t\tcase Clamp:\r\n\t\t\tSystemImpl.gl.texParameteri(GL.TEXTURE_2D, GL.TEXTURE_WRAP_T, GL.CLAMP_TO_EDGE);\r\n\t\tcase Repeat:\r\n\t\t\tSystemImpl.gl.texParameteri(GL.TEXTURE_2D, GL.TEXTURE_WRAP_T, GL.REPEAT);\r\n\t\tcase Mirror:\r\n\t\t\tSystemImpl.gl.texParameteri(GL.TEXTURE_2D, GL.TEXTURE_WRAP_T, GL.MIRRORED_REPEAT);\r\n\t\t}\r\n\r\n\t\tswitch (minificationFilter) {\r\n\t\tcase PointFilter:\r\n\t\t\tswitch (mipmapFilter) {\r\n\t\t\tcase NoMipFilter:\r\n\t\t\t\tSystemImpl.gl.texParameteri(GL.TEXTURE_2D, GL.TEXTURE_MIN_FILTER, GL.NEAREST);\r\n\t\t\tcase PointMipFilter:\r\n\t\t\t\tSystemImpl.gl.texParameteri(GL.TEXTURE_2D, GL.TEXTURE_MIN_FILTER, GL.NEAREST_MIPMAP_NEAREST);\r\n\t\t\tcase LinearMipFilter:\r\n\t\t\t\tSystemImpl.gl.texParameteri(GL.TEXTURE_2D, GL.TEXTURE_MIN_FILTER, GL.NEAREST_MIPMAP_LINEAR);\r\n\t\t\t}\r\n\t\tcase LinearFilter, AnisotropicFilter:\r\n\t\t\tswitch (mipmapFilter) {\r\n\t\t\tcase NoMipFilter:\r\n\t\t\t\tSystemImpl.gl.texParameteri(GL.TEXTURE_2D, GL.TEXTURE_MIN_FILTER, GL.LINEAR);\r\n\t\t\tcase PointMipFilter:\r\n\t\t\t\tSystemImpl.gl.texParameteri(GL.TEXTURE_2D, GL.TEXTURE_MIN_FILTER, GL.LINEAR_MIPMAP_NEAREST);\r\n\t\t\tcase LinearMipFilter:\r\n\t\t\t\tSystemImpl.gl.texParameteri(GL.TEXTURE_2D, GL.TEXTURE_MIN_FILTER, GL.LINEAR_MIPMAP_LINEAR);\r\n\t\t\t}\r\n\t\t\tif (minificationFilter == AnisotropicFilter) {\r\n\t\t\t\tSystemImpl.gl.texParameteri(GL.TEXTURE_2D, SystemImpl.anisotropicFilter.TEXTURE_MAX_ANISOTROPY_EXT, 4);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tswitch (magnificationFilter) {\r\n\t\t\tcase PointFilter:\r\n\t\t\t\tSystemImpl.gl.texParameteri(GL.TEXTURE_2D, GL.TEXTURE_MAG_FILTER, GL.NEAREST);\r\n\t\t\tcase LinearFilter, AnisotropicFilter:\r\n\t\t\t\tSystemImpl.gl.texParameteri(GL.TEXTURE_2D, GL.TEXTURE_MAG_FILTER, GL.LINEAR);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic function setTexture3DParameters(texunit: kha.graphics4.TextureUnit, uAddressing: TextureAddressing, vAddressing: TextureAddressing, wAddressing: TextureAddressing, minificationFilter: TextureFilter, magnificationFilter: TextureFilter, mipmapFilter: MipMapFilter): Void {\r\n\r\n\t}\r\n\r\n\tpublic function setTextureCompareMode(texunit: kha.graphics4.TextureUnit, enabled: Bool) {\r\n\t\tif (enabled) {\r\n\t\t\tSystemImpl.gl.texParameteri(GL.TEXTURE_2D, GL_TEXTURE_COMPARE_MODE, GL_COMPARE_REF_TO_TEXTURE);\r\n\t\t\tSystemImpl.gl.texParameteri(GL.TEXTURE_2D, GL_TEXTURE_COMPARE_FUNC, GL.LEQUAL);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tSystemImpl.gl.texParameteri(GL.TEXTURE_2D, GL_TEXTURE_COMPARE_MODE, GL.NONE);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic function setCubeMapCompareMode(texunit: kha.graphics4.TextureUnit, enabled: Bool) {\r\n\t\tif (enabled) {\r\n\t\t\tSystemImpl.gl.texParameteri(GL.TEXTURE_CUBE_MAP, GL_TEXTURE_COMPARE_MODE, GL_COMPARE_REF_TO_TEXTURE);\r\n\t\t\tSystemImpl.gl.texParameteri(GL.TEXTURE_CUBE_MAP, GL_TEXTURE_COMPARE_FUNC, GL.LEQUAL);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tSystemImpl.gl.texParameteri(GL.TEXTURE_CUBE_MAP, GL_TEXTURE_COMPARE_MODE, GL.NONE);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic function setCubeMap(stage: kha.graphics4.TextureUnit, cubeMap: kha.graphics4.CubeMap): Void {\r\n\t\tif (cubeMap == null) {\r\n\t\t\tSystemImpl.gl.activeTexture(GL.TEXTURE0 + cast(stage, TextureUnit).value);\r\n\t\t\tSystemImpl.gl.bindTexture(GL.TEXTURE_CUBE_MAP, null);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tcubeMap.set(cast(stage, TextureUnit).value);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic function setCubeMapDepth(stage: kha.graphics4.TextureUnit, cubeMap: kha.graphics4.CubeMap): Void {\r\n\t\tcubeMap.setDepth(cast(stage, TextureUnit).value);\r\n\t}\r\n\r\n\tpublic function maxBoundTextures(): Int {\r\n\t\treturn SystemImpl.gl.getParameter(GL.MAX_TEXTURE_IMAGE_UNITS);\r\n\t}\r\n\r\n\tpublic function setCullMode(mode: CullMode): Void {\r\n\t\tswitch (mode) {\r\n\t\tcase None:\r\n\t\t\tSystemImpl.gl.disable(GL.CULL_FACE);\r\n\t\tcase Clockwise:\r\n\t\t\tSystemImpl.gl.enable(GL.CULL_FACE);\r\n\t\t\tSystemImpl.gl.cullFace(GL.BACK);\r\n\t\tcase CounterClockwise:\r\n\t\t\tSystemImpl.gl.enable(GL.CULL_FACE);\r\n\t\t\tSystemImpl.gl.cullFace(GL.FRONT);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic function setPipeline(pipe: PipelineState): Void {\r\n\t\tsetCullMode(pipe.cullMode);\r\n\t\tsetDepthMode(pipe.depthWrite, pipe.depthMode);\r\n\t\tsetStencilParameters(pipe.stencilMode, pipe.stencilBothPass, pipe.stencilDepthFail, pipe.stencilFail, pipe.stencilReferenceValue, pipe.stencilReadMask, pipe.stencilWriteMask);\r\n\t\tsetBlendingMode(pipe.blendSource, pipe.blendDestination, pipe.blendOperation, pipe.alphaBlendSource, pipe.alphaBlendDestination, pipe.alphaBlendOperation);\r\n\t\tcurrentPipeline = pipe;\r\n\t\tpipe.set();\r\n\t\tcolorMaskRed = pipe.colorWriteMaskRed;\r\n\t\tcolorMaskGreen = pipe.colorWriteMaskGreen;\r\n\t\tcolorMaskBlue = pipe.colorWriteMaskBlue;\r\n\t\tcolorMaskAlpha = pipe.colorWriteMaskAlpha;\r\n\t}\r\n\r\n\tpublic function setStencilReferenceValue(value: Int): Void {\r\n\t\tSystemImpl.gl.stencilFunc(convertCompareMode(currentPipeline.stencilMode), value, currentPipeline.stencilReadMask);\r\n\t}\r\n\r\n\tpublic function setBool(location: kha.graphics4.ConstantLocation, value: Bool): Void {\r\n\t\tSystemImpl.gl.uniform1i(cast(location, ConstantLocation).value, value ? 1 : 0);\r\n\t}\r\n\r\n\tpublic function setInt(location: kha.graphics4.ConstantLocation, value: Int): Void {\r\n\t\tSystemImpl.gl.uniform1i(cast(location, ConstantLocation).value, value);\r\n\t}\r\n\r\n\tpublic function setInt2(location: kha.graphics4.ConstantLocation, value1: Int, value2: Int): Void {\r\n\t\tSystemImpl.gl.uniform2i(cast(location, ConstantLocation).value, value1, value2);\r\n\t}\r\n\r\n\tpublic function setInt3(location: kha.graphics4.ConstantLocation, value1: Int, value2: Int, value3: Int): Void {\r\n\t\tSystemImpl.gl.uniform3i(cast(location, ConstantLocation).value, value1, value2, value3);\r\n\t}\r\n\r\n\tpublic function setInt4(location: kha.graphics4.ConstantLocation, value1: Int, value2: Int, value3: Int, value4: Int): Void {\r\n\t\tSystemImpl.gl.uniform4i(cast(location, ConstantLocation).value, value1, value2, value3, value4);\r\n\t}\r\n\r\n\tpublic function setInts(location: kha.graphics4.ConstantLocation, values: Int32Array): Void {\r\n\t\tvar webglLocation = cast(location, ConstantLocation);\r\n\t\tswitch (webglLocation.type) {\r\n\t\t\tcase GL.INT_VEC2:\r\n\t\t\t\tSystemImpl.gl.uniform2iv(webglLocation.value, cast values);\r\n\t\t\tcase GL.INT_VEC3:\r\n\t\t\t\tSystemImpl.gl.uniform3iv(webglLocation.value, cast values);\r\n\t\t\tcase GL.INT_VEC4:\r\n\t\t\t\tSystemImpl.gl.uniform4iv(webglLocation.value, cast values);\r\n\t\t\tdefault:\r\n\t\t\t\tSystemImpl.gl.uniform1iv(webglLocation.value, cast values);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic function setFloat(location: kha.graphics4.ConstantLocation, value: FastFloat): Void {\r\n\t\tSystemImpl.gl.uniform1f(cast(location, ConstantLocation).value, value);\r\n\t}\r\n\r\n\tpublic function setFloat2(location: kha.graphics4.ConstantLocation, value1: FastFloat, value2: FastFloat): Void {\r\n\t\tSystemImpl.gl.uniform2f(cast(location, ConstantLocation).value, value1, value2);\r\n\t}\r\n\r\n\tpublic function setFloat3(location: kha.graphics4.ConstantLocation, value1: FastFloat, value2: FastFloat, value3: FastFloat): Void {\r\n\t\tSystemImpl.gl.uniform3f(cast(location, ConstantLocation).value, value1, value2, value3);\r\n\t}\r\n\r\n\tpublic function setFloat4(location: kha.graphics4.ConstantLocation, value1: FastFloat, value2: FastFloat, value3: FastFloat, value4: FastFloat): Void {\r\n\t\tSystemImpl.gl.uniform4f(cast(location, ConstantLocation).value, value1, value2, value3, value4);\r\n\t}\r\n\r\n\tpublic function setFloats(location: kha.graphics4.ConstantLocation, values: Float32Array): Void {\r\n\t\tvar webglLocation = cast(location, ConstantLocation);\r\n\t\tswitch (webglLocation.type) {\r\n\t\t\tcase GL.FLOAT_VEC2:\r\n\t\t\t\tSystemImpl.gl.uniform2fv(webglLocation.value, cast values);\r\n\t\t\tcase GL.FLOAT_VEC3:\r\n\t\t\t\tSystemImpl.gl.uniform3fv(webglLocation.value, cast values);\r\n\t\t\tcase GL.FLOAT_VEC4:\r\n\t\t\t\tSystemImpl.gl.uniform4fv(webglLocation.value, cast values);\r\n\t\t\tcase GL.FLOAT_MAT4:\r\n\t\t\t\tSystemImpl.gl.uniformMatrix4fv(webglLocation.value,false,cast values);\r\n\t\t\tdefault:\r\n\t\t\t\tSystemImpl.gl.uniform1fv(webglLocation.value, cast values);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic function setVector2(location: kha.graphics4.ConstantLocation, value: FastVector2): Void {\r\n\t\tSystemImpl.gl.uniform2f(cast(location, ConstantLocation).value, value.x, value.y);\r\n\t}\r\n\r\n\tpublic function setVector3(location: kha.graphics4.ConstantLocation, value: FastVector3): Void {\r\n\t\tSystemImpl.gl.uniform3f(cast(location, ConstantLocation).value, value.x, value.y, value.z);\r\n\t}\r\n\r\n\tpublic function setVector4(location: kha.graphics4.ConstantLocation, value: FastVector4): Void {\r\n\t\tSystemImpl.gl.uniform4f(cast(location, ConstantLocation).value, value.x, value.y, value.z, value.w);\r\n\t}\r\n\r\n\tprivate var matrixCache = new Float32Array(16);\r\n\r\n\tpublic inline function setMatrix(location: kha.graphics4.ConstantLocation, matrix: FastMatrix4): Void {\r\n\t\tmatrixCache[ 0] = matrix._00; matrixCache[ 1] = matrix._01; matrixCache[ 2] = matrix._02; matrixCache[ 3] = matrix._03;\r\n\t\tmatrixCache[ 4] = matrix._10; matrixCache[ 5] = matrix._11; matrixCache[ 6] = matrix._12; matrixCache[ 7] = matrix._13;\r\n\t\tmatrixCache[ 8] = matrix._20; matrixCache[ 9] = matrix._21; matrixCache[10] = matrix._22; matrixCache[11] = matrix._23;\r\n\t\tmatrixCache[12] = matrix._30; matrixCache[13] = matrix._31; matrixCache[14] = matrix._32; matrixCache[15] = matrix._33;\r\n\t\tSystemImpl.gl.uniformMatrix4fv(cast(location, ConstantLocation).value, false, cast matrixCache);\r\n\t}\r\n\r\n\tprivate var matrix3Cache = new Float32Array(9);\r\n\r\n\tpublic inline function setMatrix3(location: kha.graphics4.ConstantLocation, matrix: FastMatrix3): Void {\r\n\t\tmatrix3Cache[0] = matrix._00; matrix3Cache[1] = matrix._01; matrix3Cache[2] = matrix._02;\r\n\t\tmatrix3Cache[3] = matrix._10; matrix3Cache[4] = matrix._11; matrix3Cache[5] = matrix._12;\r\n\t\tmatrix3Cache[6] = matrix._20; matrix3Cache[7] = matrix._21; matrix3Cache[8] = matrix._22;\r\n\t\tSystemImpl.gl.uniformMatrix3fv(cast(location, ConstantLocation).value, false, cast matrix3Cache);\r\n\t}\r\n\r\n\tpublic function drawIndexedVertices(start: Int = 0, count: Int = -1): Void {\r\n\t\tvar type = SystemImpl.elementIndexUint == null ? GL.UNSIGNED_SHORT : GL.UNSIGNED_INT;\r\n\t\tvar size = type == GL.UNSIGNED_SHORT ? 2 : 4;\r\n\t\tSystemImpl.gl.drawElements(GL.TRIANGLES, count == -1 ? indicesCount : count, type, start * size);\r\n\t\tfor(i in 0...useVertexAttributes){\r\n\t\t\tSystemImpl.gl.disableVertexAttribArray(i);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate function convertStencilAction(action: StencilAction) {\r\n\t\tswitch (action) {\r\n\t\t\tcase StencilAction.Decrement:\r\n\t\t\t\treturn GL.DECR;\r\n\t\t\tcase StencilAction.DecrementWrap:\r\n\t\t\t\treturn GL.DECR_WRAP;\r\n\t\t\tcase StencilAction.Increment:\r\n\t\t\t\treturn GL.INCR;\r\n\t\t\tcase StencilAction.IncrementWrap:\r\n\t\t\t\treturn GL.INCR_WRAP;\r\n\t\t\tcase StencilAction.Invert:\r\n\t\t\t\treturn GL.INVERT;\r\n\t\t\tcase StencilAction.Keep:\r\n\t\t\t\treturn GL.KEEP;\r\n\t\t\tcase StencilAction.Replace:\r\n\t\t\t\treturn GL.REPLACE;\r\n\t\t\tcase StencilAction.Zero:\r\n\t\t\t\treturn GL.ZERO;\r\n\t\t}\r\n\t}\r\n\r\n\tfunction convertCompareMode(compareMode: CompareMode) {\r\n\t\tswitch (compareMode) {\r\n\t\t\tcase Always:\r\n\t\t\t\treturn GL.ALWAYS;\r\n\t\t\tcase Equal:\r\n\t\t\t\treturn GL.EQUAL;\r\n\t\t\tcase Greater:\r\n\t\t\t\treturn GL.GREATER;\r\n\t\t\tcase GreaterEqual:\r\n\t\t\t\treturn GL.GEQUAL;\r\n\t\t\tcase Less:\r\n\t\t\t\treturn GL.LESS;\r\n\t\t\tcase LessEqual:\r\n\t\t\t\treturn GL.LEQUAL;\r\n\t\t\tcase Never:\r\n\t\t\t\treturn GL.NEVER;\r\n\t\t\tcase NotEqual:\r\n\t\t\t\treturn GL.NOTEQUAL;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic function setStencilParameters(compareMode: CompareMode, bothPass: StencilAction, depthFail: StencilAction, stencilFail: StencilAction, referenceValue: StencilValue, readMask: Int = 0xff, writeMask: Int = 0xff): Void {\r\n\t\tif (compareMode == CompareMode.Always && bothPass == StencilAction.Keep\r\n\t\t\t&& depthFail == StencilAction.Keep && stencilFail == StencilAction.Keep) {\r\n\t\t\t\tSystemImpl.gl.disable(GL.STENCIL_TEST);\r\n\t\t\t}\r\n\t\telse {\r\n\t\t\tSystemImpl.gl.enable(GL.STENCIL_TEST);\r\n\t\t\tvar stencilFunc = convertCompareMode(compareMode);\r\n\t\t\tSystemImpl.gl.stencilMask(writeMask);\r\n\t\t\tSystemImpl.gl.stencilOp(convertStencilAction(stencilFail), convertStencilAction(depthFail), convertStencilAction(bothPass));\r\n\t\t\tswitch (referenceValue) {\r\n\t\t\t\tcase Static(value):\r\n\t\t\t\t\tSystemImpl.gl.stencilFunc(stencilFunc, value, readMask);\r\n\t\t\t\tcase Dynamic:\r\n\t\t\t\t\tSystemImpl.gl.stencilFunc(stencilFunc, 0, readMask);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tpublic function drawIndexedVerticesInstanced(instanceCount : Int, start: Int = 0, count: Int = -1) {\r\n\t\tif (instancedRenderingAvailable()) {\r\n\t\t\tvar type = SystemImpl.elementIndexUint == null ? GL.UNSIGNED_SHORT : GL.UNSIGNED_INT;\r\n\t\t\tvar typeSize = SystemImpl.elementIndexUint == null ? 2 : 4;\r\n\t\t\tif (SystemImpl.gl2) {\r\n\t\t\t\tuntyped SystemImpl.gl.drawElementsInstanced(GL.TRIANGLES, count == -1 ? indicesCount : count, type, start * typeSize, instanceCount);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tinstancedExtension.drawElementsInstancedANGLE(GL.TRIANGLES, count == -1 ? indicesCount : count, type, start * typeSize, instanceCount);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tpublic function instancedRenderingAvailable(): Bool {\r\n\t\treturn instancedExtension;\r\n\t}\r\n}\r\n","package kha.js.graphics4;\r\n\r\nimport js.html.webgl.GL;\r\nimport kha.Color;\r\n\r\nclass Graphics2 extends kha.graphics4.Graphics2 {\r\n\tpublic function new(canvas: Canvas) {\r\n\t\tsuper(canvas);\r\n\t}\r\n\t\r\n\toverride public function drawVideoInternal(video: kha.Video, x: Float, y: Float, width: Float, height: Float): Void {\r\n\t\tvar v = cast(video, Video);\r\n\t\tdrawScaledSubImage(v.texture, 0, 0, v.texture.width, v.texture.height, x, y, width, height);\r\n\t}\r\n\t\r\n\toverride public function begin(clear: Bool = true, clearColor: Color = null): Void {\r\n\t\tSystemImpl.gl.colorMask(true, true, true, true);\r\n\t\t\r\n\t\t// Disable depth test so that everything is just overpainted as determined by the order of function calls2\r\n\t\tSystemImpl.gl.disable(GL.DEPTH_TEST);\r\n\t\tSystemImpl.gl.depthFunc(GL.ALWAYS);\r\n\t\t\r\n\t\tsuper.begin(clear, clearColor);\r\n\t}\r\n}\r\n","package kha.js.graphics4;\r\n\r\nclass TextureUnit implements kha.graphics4.TextureUnit {\r\n\tpublic var value: Int;\r\n\t\r\n\tpublic function new(value: Int) {\r\n\t\tthis.value = value;\r\n\t}\r\n}\r\n","package kha.vr;\n\nimport kha.math.FastMatrix4;\n\nclass VrInterface {\n\n\tpublic static var instance: VrInterface;\n\t\n\t// Returns the current sensor state\n\tpublic function GetSensorState(): SensorState {\n\t\treturn null;\n\t}\n\t\n\t// Returns the predicted sensor state at the specified time\n\tpublic function GetPredictedSensorState(time: Float): SensorState {\n\t\treturn null;\n\t}\n\t\n\t// Sends a black image to the warp swap thread\n\tpublic function WarpSwapBlack(): Void {\n\t}\n\t\n\t// Sends the Oculus loading symbol to the warp swap thread\n\tpublic function WarpSwapLoadingIcon(): Void {\n\t}\n\t\n\t// Sends the set of images to the warp swap thread\n\tpublic function WarpSwap(parms: TimeWarpParms): Void {\n\t}\n\n\t// Return true if VR displays are presenting\n\tpublic function IsPresenting(): Bool {\n\t\treturn false;\n\t}\n\n\t// Return true if any VR devices connected to the computer are available\n\tpublic function IsVrEnabled(): Bool {\n\t\treturn false;\n\t}\n\t\n\t// This returns the time that the TimeWarp thread uses\n\t// Since it is created from the library's vsync counting code, we should use this\n\tpublic function GetTimeInSeconds(): Float {\n\t\treturn 0.0;\n\t}\n\n\t// Returns projection to be used for the left or right eye’s rendering\n\tpublic function GetProjectionMatrix(eye: Int): FastMatrix4 {\n\t\treturn null;\n\t}\n\n\t// Returns view transformation to be used for the left or right eye’s rendering\n\tpublic function GetViewMatrix(eye: Int): FastMatrix4 {\n\t\treturn null;\n\t}\n\n\t// Browsers will only allow to enter WebVR if requestPresent is called in response to user interaction. \n\tpublic function onVRRequestPresent(): Void {\n\t}\n\n\t// Exit WebVR\n\tpublic function onVRExitPresent(): Void {\n\t}\n\n\t// Reset position and orientation\n\tpublic function onResetPose(): Void {\n\t}\n\n\tprivate function new() {\n\t\t\n\t}\n\t\n}","package kha.js.vr;\r\n\r\nimport js.lib.Float32Array;\r\nimport kha.vr.Pose;\r\nimport kha.vr.PoseState;\r\nimport kha.vr.SensorState;\r\nimport kha.vr.TimeWarpParms;\r\nimport kha.math.FastMatrix4;\r\nimport kha.math.Vector3;\r\nimport kha.math.Quaternion;\r\nimport kha.SystemImpl;\r\n\r\nclass VrInterface extends kha.vr.VrInterface {\r\n\tprivate var vrEnabled: Bool = false;\r\n\r\n\tprivate var vrDisplay: Dynamic;\r\n\tprivate var frameData: Dynamic;\r\n\r\n\tprivate var leftProjectionMatrix: FastMatrix4 = FastMatrix4.identity();\r\n\tprivate var rightProjectionMatrix: FastMatrix4 = FastMatrix4.identity();\r\n\tprivate var leftViewMatrix: FastMatrix4 = FastMatrix4.identity();\r\n\tprivate var rightViewMatrix: FastMatrix4 = FastMatrix4.identity();\r\n\r\n\tprivate var width: Int = 0;\r\n\tprivate var height: Int = 0;\r\n\tprivate var vrWidth: Int = 0;\r\n\tprivate var vrHeight: Int = 0;\r\n\r\n\tpublic function new() {\r\n\t\tsuper();\r\n\t\t#if kha_webvr\r\n\t\tvar displayEnabled: Bool = untyped __js__('navigator.getVRDisplays');\r\n\t\t#else\r\n\t\tvar displayEnabled = false;\r\n\t\t#end\r\n\t\tif (displayEnabled) {\r\n\t\t\tvrEnabled = true;\r\n\t\t\tgetVRDisplays();\r\n\t\t\ttrace(\"Display enabled.\");\r\n\t\t}\r\n\t}\r\n\r\n\tprivate function getVRDisplays() {\r\n\t\tvar vrDisplayInstance = untyped __js__('navigator.getVRDisplays()');\r\n\t\tvrDisplayInstance.then(function (displays) {\r\n\t\t\tif (displays.length > 0) {\r\n\t\t\t\tframeData = untyped __js__('new VRFrameData()');\r\n\t\t\t\tvrDisplay = untyped __js__('displays[0]');\r\n\t\t\t\tvrDisplay.depthNear = 0.1;\r\n\t\t\t\tvrDisplay.depthFar = 1024.0;\r\n\r\n\t\t\t\tvar leftEye = vrDisplay.getEyeParameters(\"left\");\r\n\t\t\t\tvar rightEye = vrDisplay.getEyeParameters(\"right\");\r\n\t\t\t\twidth = SystemImpl.khanvas.width;\r\n\t\t\t\theight = SystemImpl.khanvas.height;\r\n\t\t\t\tvrWidth = Std.int(Math.max(leftEye.renderWidth, rightEye.renderWidth) * 2);\r\n\t\t\t\tvrHeight = Std.int(Math.max(leftEye.renderHeight, rightEye.renderHeight));\r\n\t\t\t} else {\r\n\t\t\t\ttrace(\"There are no VR displays connected.\");\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tpublic override function onVRRequestPresent () {\r\n\t\ttry {\r\n\t\t\tvrDisplay.requestPresent([{ source: SystemImpl.khanvas }]).then(function () {\r\n\t\t\t\tonResize();\r\n\t\t\t\tvrDisplay.requestAnimationFrame(onAnimationFrame);\r\n\t\t\t});\r\n\t\t} catch(err: Dynamic) {\r\n\t\t\ttrace(\"Failed to requestPresent.\");\r\n\t\t\ttrace(err);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic override function onVRExitPresent () {\r\n\t\ttry {\r\n\t\t\tvrDisplay.exitPresent([{ source: SystemImpl.khanvas }]).then(function () {\r\n\t\t\t\tonResize();\r\n\t\t\t});\r\n\t\t} catch(err: Dynamic) {\r\n\t\t\ttrace(\"Failed to exitPresent.\");\r\n\t\t\ttrace(err);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic override function onResetPose() {\r\n\t\ttry {\r\n\t\t\tvrDisplay.resetPose();\r\n\t\t} catch(err: Dynamic) {\r\n\t\t\ttrace(\"Failed to resetPose\");\r\n\t\t\ttrace(err);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate function onAnimationFrame(timestamp: Float): Void {\r\n\t\tif(vrDisplay != null && vrDisplay.isPresenting) {\r\n\t\t\tvrDisplay.requestAnimationFrame(onAnimationFrame);\r\n\r\n\t\t\tvrDisplay.getFrameData(frameData);\r\n\r\n\t\t\tleftProjectionMatrix = createMatrixFromArray(untyped frameData.leftProjectionMatrix);\r\n\t\t\tleftViewMatrix = createMatrixFromArray(untyped frameData.leftViewMatrix);\r\n\r\n\t\t\trightProjectionMatrix = createMatrixFromArray(untyped frameData.rightProjectionMatrix);\r\n\t\t\trightViewMatrix = createMatrixFromArray(untyped frameData.rightViewMatrix);\r\n\r\n\t\t\t// Submit the newly rendered layer to be presented by the VRDisplay\r\n\t\t\tvrDisplay.submitFrame();\r\n\t\t}\r\n\t}\r\n\r\n\tprivate function onResize () {\r\n\t\tif(vrDisplay != null && vrDisplay.isPresenting) {\r\n\t\t\tSystemImpl.khanvas.width = vrWidth;\r\n\t\t\tSystemImpl.khanvas.height = vrHeight;\r\n\t\t} else {\r\n\t\t\tSystemImpl.khanvas.width = width;\r\n\t\t\tSystemImpl.khanvas.height = height;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic override function GetSensorState(): SensorState {\r\n\t\treturn GetPredictedSensorState(0.0);\r\n\t}\r\n\r\n\tpublic override function GetPredictedSensorState(time: Float): SensorState {\r\n\t\tvar result: SensorState = new SensorState();\r\n\r\n\t\tresult.Predicted = new PoseState();\r\n\t\tresult.Recorded = result.Predicted;\r\n\r\n\t\tresult.Predicted.AngularAcceleration = new Vector3();\r\n\t\tresult.Predicted.AngularVelocity = new Vector3();\r\n\t\tresult.Predicted.LinearAcceleration = new Vector3();\r\n\t\tresult.Predicted.LinearVelocity = new Vector3();\r\n\t\tresult.Predicted.TimeInSeconds = time;\r\n\t\tresult.Predicted.Pose = new Pose();\r\n\t\tresult.Predicted.Pose.Orientation = new Quaternion();\r\n\t\tresult.Predicted.Pose.Position = new Vector3();\r\n\r\n\t\tvar mPose = frameData.pose;\t// predicted pose of the vrDisplay\r\n\t\tif (mPose != null) {\r\n\t\t\tresult.Predicted.AngularVelocity = createVectorFromArray(untyped mPose.angularVelocity);\r\n\t\t\tresult.Predicted.AngularAcceleration = createVectorFromArray(untyped mPose.angularAcceleration);\r\n\t\t\tresult.Predicted.LinearVelocity = createVectorFromArray(untyped mPose.linearVelocity);\r\n\t\t\tresult.Predicted.LinearAcceleration = createVectorFromArray(untyped mPose.linearAcceleration);\r\n\t\t\tresult.Predicted.Pose.Orientation = createQuaternion(untyped mPose.orientation);\r\n\t\t\tresult.Predicted.Pose.Position = createVectorFromArray(untyped mPose.position);\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\t// Sends a black image to the warp swap thread\r\n\tpublic override function WarpSwapBlack(): Void {\r\n\t\t// TODO: Implement\r\n\t}\r\n\r\n\t// Sends the Oculus loading symbol to the warp swap thread\r\n\tpublic override function WarpSwapLoadingIcon(): Void {\r\n\t\t// TODO: Implement\r\n\t}\r\n\r\n\t// Sends the set of images to the warp swap thread\r\n\tpublic override function WarpSwap(parms: TimeWarpParms): Void {\r\n\t\t// TODO: Implement\r\n\t}\r\n\r\n\tpublic override function IsPresenting(): Bool {\r\n\t\tif(vrDisplay != null)\r\n\t\t\treturn vrDisplay.isPresenting;\r\n\t\treturn false;\r\n\t}\r\n\r\n\tpublic override function IsVrEnabled(): Bool {\r\n\t\treturn vrEnabled;\r\n\t}\r\n\r\n\tpublic override function GetTimeInSeconds(): Float {\r\n\t\treturn Scheduler.time();\r\n\t}\r\n\r\n\tpublic override function GetProjectionMatrix(eye: Int): FastMatrix4 {\r\n\t\tif (eye == 0) {\r\n\t\t\treturn leftProjectionMatrix;\r\n\t\t} else {\r\n\t\t\treturn rightProjectionMatrix;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic override function GetViewMatrix(eye: Int): FastMatrix4 {\r\n\t\tif (eye == 0) {\r\n\t\t\treturn leftViewMatrix;\r\n\t\t} else {\r\n\t\t\treturn rightViewMatrix;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate function createMatrixFromArray(array: Float32Array): FastMatrix4 {\r\n\t\tvar matrix: FastMatrix4 = FastMatrix4.identity();\r\n\t\tmatrix._00 = array[0];  matrix._01 = array[1];  matrix._02 = array[2];  matrix._03 = array[3];\r\n\t\tmatrix._10 = array[4];  matrix._11 = array[5];  matrix._12 = array[6];  matrix._13 = array[7];\r\n\t\tmatrix._20 = array[8];  matrix._21 = array[9];  matrix._22 = array[10]; matrix._23 = array[11];\r\n\t\tmatrix._30 = array[12]; matrix._31 = array[13]; matrix._32 = array[14]; matrix._33 = array[15];\r\n\t\treturn matrix;\r\n\t}\r\n\r\n\tprivate function createVectorFromArray(array: Float32Array): Vector3 {\r\n\t\tvar vector: Vector3 = new Vector3(0, 0, 0);\r\n\t\tif (array != null) {\r\n\t\t\tvector.x = array[0];\tvector.y = array[1];\tvector.z = array[2];\r\n\t\t}\r\n\t\treturn vector;\r\n\t}\r\n\r\n\tprivate function createQuaternion(array: Float32Array): Quaternion {\r\n\t\tvar quaternion: Quaternion = new Quaternion(0, 0, 0, 0);\r\n\t\tif (array != null) {\r\n\t\t\tquaternion.x = array[0];\tquaternion.y = array[1];\tquaternion.z = array[2];\tquaternion.w = array[3];\r\n\t\t}\r\n\t\treturn quaternion;\r\n\t}\r\n}\r\n","package kha.math;\r\n\r\nclass FastMatrix3 {\r\n\tprivate static inline var width: Int = 3;\r\n\tprivate static inline var height: Int = 3;\r\n\r\n\tpublic var _00: FastFloat; public var _10: FastFloat; public var _20: FastFloat;\r\n\tpublic var _01: FastFloat; public var _11: FastFloat; public var _21: FastFloat;\r\n\tpublic var _02: FastFloat; public var _12: FastFloat; public var _22: FastFloat;\r\n\r\n\tpublic inline function new(_00: FastFloat, _10: FastFloat, _20: FastFloat,\r\n\t\t\t\t\t\t\t\t_01: FastFloat, _11: FastFloat, _21: FastFloat,\r\n\t\t\t\t\t\t\t\t_02: FastFloat, _12: FastFloat, _22: FastFloat) {\r\n\t\tthis._00 = _00; this._10 = _10; this._20 = _20;\r\n\t\tthis._01 = _01; this._11 = _11; this._21 = _21;\r\n\t\tthis._02 = _02; this._12 = _12; this._22 = _22;\r\n\t}\r\n\r\n\tpublic static inline function fromMatrix3(m: Matrix3): FastMatrix3 {\r\n\t\treturn new FastMatrix3(m._00, m._10, m._20,\r\n\t\t\t\t\t\t\t\tm._01, m._11, m._21,\r\n\t\t\t\t\t\t\t\tm._02, m._12, m._22);\r\n\t}\r\n\r\n\t/*@:arrayAccess public inline function get(index: Int): Float {\r\n\t\treturn this[index];\r\n\t}\r\n\r\n\t@:arrayAccess public inline function set(index: Int, value: Float): Float {\r\n\t\tthis[index] = value;\r\n\t\treturn value;\r\n\t}\r\n\r\n\tpublic static function index(x: Int, y: Int): Int {\r\n\t\treturn y * width + x;\r\n\t}*/\r\n\r\n\t@:extern public inline function setFrom(m: FastMatrix3): Void {\r\n\t\tthis._00 = m._00; this._10 = m._10; this._20 = m._20;\r\n\t\tthis._01 = m._01; this._11 = m._11; this._21 = m._21;\r\n\t\tthis._02 = m._02; this._12 = m._12; this._22 = m._22;\r\n\t}\r\n\r\n\t@:extern public static inline function translation(x: FastFloat, y: FastFloat): FastMatrix3 {\r\n\t\treturn new FastMatrix3(\r\n\t\t\t1, 0, x,\r\n\t\t\t0, 1, y,\r\n\t\t\t0, 0, 1\r\n\t\t);\r\n\t}\r\n\r\n\t@:extern public static inline function empty(): FastMatrix3 {\r\n\t\treturn new FastMatrix3(\r\n\t\t\t0, 0, 0,\r\n\t\t\t0, 0, 0,\r\n\t\t\t0, 0, 0\r\n\t\t);\r\n\t}\r\n\r\n\t@:extern public static inline function identity(): FastMatrix3 {\r\n\t\treturn new FastMatrix3(\r\n\t\t\t1, 0, 0,\r\n\t\t\t0, 1, 0,\r\n\t\t\t0, 0, 1\r\n\t\t);\r\n\t}\r\n\r\n\t@:extern public static inline function scale(x: FastFloat, y: FastFloat): FastMatrix3 {\r\n\t\treturn new FastMatrix3(\r\n\t\t\tx, 0, 0,\r\n\t\t\t0, y, 0,\r\n\t\t\t0, 0, 1\r\n\t\t);\r\n\t}\r\n\r\n\t@:extern public static inline function rotation(alpha: FastFloat): FastMatrix3 {\r\n\t\treturn new FastMatrix3(\r\n\t\t\tMath.cos(alpha), -Math.sin(alpha), 0,\r\n\t\t\tMath.sin(alpha), Math.cos(alpha), 0,\r\n\t\t\t0, 0, 1\r\n\t\t);\r\n\t}\r\n\r\n\t@:extern public inline function add(m: FastMatrix3): FastMatrix3 {\r\n\t\treturn new FastMatrix3(\r\n\t\t\t_00 + m._00, _10 + m._10, _20 + m._20,\r\n\t\t\t_01 + m._01, _11 + m._11, _21 + m._21,\r\n\t\t\t_02 + m._02, _12 + m._12, _22 + m._22\r\n\t\t);\r\n\t}\r\n\r\n\t@:extern public inline function sub(m: FastMatrix3): FastMatrix3 {\r\n\t\treturn new FastMatrix3(\r\n\t\t\t_00 - m._00, _10 - m._10, _20 - m._20,\r\n\t\t\t_01 - m._01, _11 - m._11, _21 - m._21,\r\n\t\t\t_02 - m._02, _12 - m._12, _22 - m._22\r\n\t\t);\r\n\t}\r\n\r\n\t@:extern public inline function mult(value: FastFloat): FastMatrix3 {\r\n\t\treturn new FastMatrix3(\r\n\t\t\t_00 * value, _10 * value, _20 * value,\r\n\t\t\t_01 * value, _11 * value, _21 * value,\r\n\t\t\t_02 * value, _12 * value, _22 * value\r\n\t\t);\r\n\t}\r\n\r\n\t@:extern public inline function transpose(): FastMatrix3 {\r\n\t\treturn new FastMatrix3(\r\n\t\t\t_00, _01, _02,\r\n\t\t\t_10, _11, _12,\r\n\t\t\t_20, _21, _22\r\n\t\t);\r\n\t}\r\n\r\n\t@:extern public inline function trace(): FastFloat {\r\n\t\treturn _00 + _11 + _22;\r\n\t}\r\n\r\n\t@:extern public inline function multmat(m: FastMatrix3): FastMatrix3 {\r\n\t\treturn new FastMatrix3(\r\n\t\t\t_00 * m._00 + _10 * m._01 + _20 * m._02, _00 * m._10 + _10 * m._11 + _20 * m._12, _00 * m._20 + _10 * m._21 + _20 * m._22,\r\n\t\t\t_01 * m._00 + _11 * m._01 + _21 * m._02, _01 * m._10 + _11 * m._11 + _21 * m._12, _01 * m._20 + _11 * m._21 + _21 * m._22,\r\n\t\t\t_02 * m._00 + _12 * m._01 + _22 * m._02, _02 * m._10 + _12 * m._11 + _22 * m._12, _02 * m._20 + _12 * m._21 + _22 * m._22\r\n\t\t);\r\n\t}\r\n\r\n\t@:extern public inline function multvec(value: FastVector2): FastVector2 {\r\n\t\t//var product = new Vector2(0, 0);\r\n\t\tvar w = _02 * value.x + _12 * value.y + _22 * 1;\r\n\t\tvar x = (_00 * value.x + _10 * value.y + _20 * 1) / w;\r\n\t\t// type hint requred because of haxe bug #8220\r\n\t\tvar y: FastFloat = (_01 * value.x + _11 * value.y + _21 * 1) / w;\r\n\t\treturn new FastVector2(x, y);\r\n\t}\r\n\r\n\t@:extern public inline function cofactor(m0: FastFloat, m1: FastFloat, m2: FastFloat, m3: FastFloat): Float {\r\n\t\treturn m0 * m3 - m1 * m2;\r\n\t}\r\n\r\n\t@:extern public inline function determinant(): FastFloat {\r\n\t\tvar c00 = cofactor(_11, _21, _12, _22);\r\n\t\tvar c01 = cofactor(_10, _20, _12, _22);\r\n\t\tvar c02 = cofactor(_10, _20, _11, _21);\r\n\t\treturn _00 * c00 - _01 * c01 + _02 * c02;\r\n\t}\r\n\r\n\t@:extern public inline function inverse(): FastMatrix3 {\r\n\t\tvar c00 = cofactor(_11, _21, _12, _22);\r\n\t\tvar c01 = cofactor(_10, _20, _12, _22);\r\n\t\tvar c02 = cofactor(_10, _20, _11, _21);\r\n\r\n\t\tvar det: FastFloat = _00 * c00 - _01 * c01 + _02 * c02;\r\n\t\tif (Math.abs(det) < 0.000001) {\r\n\t\t\tthrow \"determinant is too small\";\r\n\t\t}\r\n\r\n\t\tvar c10 = cofactor(_01, _21, _02, _22);\r\n\t\tvar c11 = cofactor(_00, _20, _02, _22);\r\n\t\tvar c12 = cofactor(_00, _20, _01, _21);\r\n\r\n\t\tvar c20 = cofactor(_01, _11, _02, _12);\r\n\t\tvar c21 = cofactor(_00, _10, _02, _12);\r\n\t\tvar c22 = cofactor(_00, _10, _01, _11);\r\n\r\n\t\tvar invdet: FastFloat = 1.0 / det;\r\n\t\treturn new FastMatrix3(\r\n\t\t\tc00 * invdet,  -c01 * invdet,  c02 * invdet,\r\n\t\t\t-c10 * invdet,  c11 * invdet, -c12 * invdet,\r\n\t\t\tc20 * invdet,  -c21 * invdet,  c22 * invdet\r\n\t\t);\r\n\t}\r\n}\r\n","package kha.math;\r\n\r\nclass FastMatrix4 {\r\n\tprivate static inline var width: Int = 4;\r\n\tprivate static inline var height: Int = 4;\r\n\r\n\tpublic var _00: FastFloat; public var _10: FastFloat; public var _20: FastFloat; public var _30: FastFloat;\r\n\tpublic var _01: FastFloat; public var _11: FastFloat; public var _21: FastFloat; public var _31: FastFloat;\r\n\tpublic var _02: FastFloat; public var _12: FastFloat; public var _22: FastFloat; public var _32: FastFloat;\r\n\tpublic var _03: FastFloat; public var _13: FastFloat; public var _23: FastFloat; public var _33: FastFloat;\r\n\r\n\tpublic inline function new(_00: FastFloat, _10: FastFloat, _20: FastFloat, _30: FastFloat,\r\n\t\t\t\t\t\t\t\t_01: FastFloat, _11: FastFloat, _21: FastFloat, _31: FastFloat,\r\n\t\t\t\t\t\t\t\t_02: FastFloat, _12: FastFloat, _22: FastFloat, _32: FastFloat,\r\n\t\t\t\t\t\t\t\t_03: FastFloat, _13: FastFloat, _23: FastFloat, _33: FastFloat) {\r\n\t\tthis._00 = _00; this._10 = _10; this._20 = _20; this._30 = _30;\r\n\t\tthis._01 = _01; this._11 = _11; this._21 = _21; this._31 = _31;\r\n\t\tthis._02 = _02; this._12 = _12; this._22 = _22; this._32 = _32;\r\n\t\tthis._03 = _03; this._13 = _13; this._23 = _23; this._33 = _33;\r\n\t}\r\n\r\n\tpublic static inline function fromMatrix4(m: Matrix4): FastMatrix4 {\r\n\t\treturn new FastMatrix4(m._00, m._10, m._20, m._30,\r\n\t\t\t\t\t\t\t\tm._01, m._11, m._21, m._31,\r\n\t\t\t\t\t\t\t\tm._02, m._12, m._22, m._32,\r\n\t\t\t\t\t\t\t\tm._03, m._13, m._23, m._33);\r\n\t}\r\n\r\n\t@:extern public inline function setFrom(m: FastMatrix4): Void {\r\n\t\tthis._00 = m._00; this._10 = m._10; this._20 = m._20; this._30 = m._30;\r\n\t\tthis._01 = m._01; this._11 = m._11; this._21 = m._21; this._31 = m._31;\r\n\t\tthis._02 = m._02; this._12 = m._12; this._22 = m._22; this._32 = m._32;\r\n\t\tthis._03 = m._03; this._13 = m._13; this._23 = m._23; this._33 = m._33;\r\n\t}\r\n\r\n\t@:extern public static inline function translation(x: FastFloat, y: FastFloat, z: FastFloat): FastMatrix4 {\r\n\t\treturn new FastMatrix4(\r\n\t\t\t1, 0, 0, x,\r\n\t\t\t0, 1, 0, y,\r\n\t\t\t0, 0, 1, z,\r\n\t\t\t0, 0, 0, 1\r\n\t\t);\r\n\t}\r\n\r\n\t@:extern public static inline function empty(): FastMatrix4 {\r\n\t\treturn new FastMatrix4(\r\n\t\t\t0, 0, 0, 0,\r\n\t\t\t0, 0, 0, 0,\r\n\t\t\t0, 0, 0, 0,\r\n\t\t\t0, 0, 0, 0\r\n\t\t);\r\n\t}\r\n\r\n\t@:extern public static inline function identity(): FastMatrix4 {\r\n\t\treturn new FastMatrix4(\r\n\t\t\t1, 0, 0, 0,\r\n\t\t\t0, 1, 0, 0,\r\n\t\t\t0, 0, 1, 0,\r\n\t\t\t0, 0, 0, 1\r\n\t\t);\r\n\t}\r\n\r\n\t@:extern public static inline function scale(x: FastFloat, y: FastFloat, z: FastFloat): FastMatrix4 {\r\n\t\treturn new FastMatrix4(\r\n\t\t\tx, 0, 0, 0,\r\n\t\t\t0, y, 0, 0,\r\n\t\t\t0, 0, z, 0,\r\n\t\t\t0, 0, 0, 1\r\n\t\t);\r\n\t}\r\n\r\n\t@:extern public static inline function rotationX(alpha: FastFloat): FastMatrix4 {\r\n\t\tvar ca = Math.cos(alpha);\r\n\t\tvar sa = Math.sin(alpha);\r\n\t\treturn new FastMatrix4(\r\n\t\t\t1,  0,   0, 0,\r\n\t\t\t0, ca, -sa, 0,\r\n\t\t\t0, sa,  ca, 0,\r\n\t\t\t0,  0,   0, 1\r\n\t\t);\r\n\t}\r\n\r\n\t@:extern public static inline function rotationY(alpha: FastFloat): FastMatrix4 {\r\n\t\tvar ca = Math.cos(alpha);\r\n\t\tvar sa = Math.sin(alpha);\r\n\t\treturn new FastMatrix4(\r\n\t\t\tca,  0, sa, 0,\r\n\t\t\t0,   1,  0, 0,\r\n\t\t\t-sa, 0, ca, 0,\r\n\t\t\t0,   0,  0, 1\r\n\t\t);\r\n\t}\r\n\r\n\t@:extern public static inline function rotationZ(alpha: FastFloat): FastMatrix4 {\r\n\t\tvar ca = Math.cos(alpha);\r\n\t\tvar sa = Math.sin(alpha);\r\n\t\treturn new FastMatrix4(\r\n\t\t\tca, -sa, 0, 0,\r\n\t\t\tsa,  ca, 0, 0,\r\n\t\t\t0,   0, 1, 0,\r\n\t\t\t0,   0, 0, 1\r\n\t\t);\r\n\t}\r\n\r\n\t@:extern public static inline function rotation(yaw: FastFloat, pitch: FastFloat, roll: FastFloat): FastMatrix4 {\r\n\t\tvar sy = Math.sin(yaw);\r\n\t\tvar cy = Math.cos(yaw);\r\n\t\tvar sx = Math.sin(pitch);\r\n\t\tvar cx = Math.cos(pitch);\r\n\t\tvar sz = Math.sin(roll);\r\n\t\tvar cz = Math.cos(roll);\r\n\t\treturn new FastMatrix4(\r\n\t\t\tcx * cy, cx * sy * sz - sx * cz, cx * sy * cz + sx * sz, 0,\r\n\t\t\tsx * cy, sx * sy * sz + cx * cz, sx * sy * cz - cx * sz, 0,\r\n\t\t\t-sy,     cy * sz,                cy * cz,                0,\r\n\t\t\t0,       0,                      0,                      1\r\n\t\t);\r\n\t}\r\n\r\n\t// Inlining with `2` instead of `2.0` leads to wrong temp var type in Java/C#\r\n\tpublic static inline function orthogonalProjection(left: FastFloat, right: FastFloat, bottom: FastFloat, top: FastFloat, zn: FastFloat, zf: FastFloat): FastMatrix4 {\r\n\t\tvar tx: FastFloat = -(right + left) / (right - left);\r\n\t\tvar ty: FastFloat = -(top + bottom) / (top - bottom);\r\n\t\tvar tz: FastFloat = -(zf + zn) / (zf - zn);\r\n\t\treturn new FastMatrix4(\r\n\t\t\t2 / (right - left), 0,                  0,              tx,\r\n\t\t\t0,                  2.0 / (top - bottom), 0,              ty,\r\n\t\t\t0,                  0,                  -2 / (zf - zn), tz,\r\n\t\t\t0,                  0,                  0,               1\r\n\t\t);\r\n\t}\r\n\r\n\tpublic static inline function perspectiveProjection(fovY: FastFloat, aspect: FastFloat, zn: FastFloat, zf: FastFloat): FastMatrix4 {\r\n\t\tvar uh = 1.0 / Math.tan(fovY / 2);\r\n\t\tvar uw = uh / aspect;\r\n\t\treturn new FastMatrix4(\r\n\t\t\tuw, 0, 0, 0,\r\n\t\t\t0, uh, 0, 0,\r\n\t\t\t0, 0, (zf + zn) / (zn - zf), 2 * zf * zn / (zn - zf),\r\n\t\t\t0, 0, -1, 0\r\n\t\t);\r\n\t}\r\n\r\n\tpublic static inline function lookAt(eye: FastVector3, at: FastVector3, up: FastVector3): FastMatrix4 {\r\n\t\tvar zaxis = at.sub(eye).normalized();\r\n\t\tvar xaxis = zaxis.cross(up).normalized();\r\n\t\tvar yaxis = xaxis.cross(zaxis);\r\n\r\n\t\treturn new FastMatrix4(\r\n\t\t\txaxis.x, xaxis.y, xaxis.z, -xaxis.dot(eye),\r\n\t\t\tyaxis.x, yaxis.y, yaxis.z, -yaxis.dot(eye),\r\n\t\t\t-zaxis.x, -zaxis.y, -zaxis.z, zaxis.dot(eye),\r\n\t\t\t0, 0, 0, 1\r\n\t\t);\r\n\t}\r\n\r\n\t@:extern public inline function add(m: FastMatrix4): FastMatrix4 {\r\n\t\treturn new FastMatrix4(\r\n\t\t\t_00 + m._00, _10 + m._10, _20 + m._20, _30 + m._30,\r\n\t\t\t_01 + m._01, _11 + m._11, _21 + m._21, _31 + m._31,\r\n\t\t\t_02 + m._02, _12 + m._12, _22 + m._22, _32 + m._32,\r\n\t\t\t_03 + m._03, _13 + m._13, _23 + m._23, _33 + m._33\r\n\t\t);\r\n\t}\r\n\r\n\t@:extern public inline function sub(m: FastMatrix4): FastMatrix4 {\r\n\t\treturn new FastMatrix4(\r\n\t\t\t_00 - m._00, _10 - m._10, _20 - m._20, _30 - m._30,\r\n\t\t\t_01 - m._01, _11 - m._11, _21 - m._21, _31 - m._31,\r\n\t\t\t_02 - m._02, _12 - m._12, _22 - m._22, _32 - m._32,\r\n\t\t\t_03 - m._03, _13 - m._13, _23 - m._23, _33 - m._33\r\n\t\t);\r\n\t}\r\n\r\n\t@:extern public inline function mult(value: FastFloat): FastMatrix4 {\r\n\t\treturn new FastMatrix4(\r\n\t\t\t_00 * value, _10 * value, _20 * value, _30 * value,\r\n\t\t\t_01 * value, _11 * value, _21 * value, _31 * value,\r\n\t\t\t_02 * value, _12 * value, _22 * value, _32 * value,\r\n\t\t\t_03 * value, _13 * value, _23 * value, _33 * value\r\n\t\t);\r\n\t}\r\n\r\n\t@:extern public inline function transpose(): FastMatrix4 {\r\n\t\treturn new FastMatrix4(\r\n\t\t\t_00, _01, _02, _03,\r\n\t\t\t_10, _11, _12, _13,\r\n\t\t\t_20, _21, _22, _23,\r\n\t\t\t_30, _31, _32, _33\r\n\t\t);\r\n\t}\r\n\r\n\t@:extern public inline function transpose3x3(): FastMatrix4 {\r\n\t\treturn new FastMatrix4(\r\n\t\t\t_00, _01, _02, _30,\r\n\t\t\t_10, _11, _12, _31,\r\n\t\t\t_20, _21, _22, _32,\r\n\t\t\t_03, _13, _23, _33\r\n\t\t);\r\n\t}\r\n\r\n\t@:extern public inline function trace(): FastFloat {\r\n\t\treturn _00 + _11 + _22 + _33;\r\n\t}\r\n\r\n\t@:extern public inline function multmat(m: FastMatrix4): FastMatrix4 {\r\n\t\treturn new FastMatrix4(\r\n\t\t\t_00 * m._00 + _10 * m._01 + _20 * m._02 + _30 * m._03, _00 * m._10 + _10 * m._11 + _20 * m._12 + _30 * m._13, _00 * m._20 + _10 * m._21 + _20 * m._22 + _30 * m._23, _00 * m._30 + _10 * m._31 + _20 * m._32 + _30 * m._33,\r\n\t\t\t_01 * m._00 + _11 * m._01 + _21 * m._02 + _31 * m._03, _01 * m._10 + _11 * m._11 + _21 * m._12 + _31 * m._13, _01 * m._20 + _11 * m._21 + _21 * m._22 + _31 * m._23, _01 * m._30 + _11 * m._31 + _21 * m._32 + _31 * m._33,\r\n\t\t\t_02 * m._00 + _12 * m._01 + _22 * m._02 + _32 * m._03, _02 * m._10 + _12 * m._11 + _22 * m._12 + _32 * m._13, _02 * m._20 + _12 * m._21 + _22 * m._22 + _32 * m._23, _02 * m._30 + _12 * m._31 + _22 * m._32 + _32 * m._33,\r\n\t\t\t_03 * m._00 + _13 * m._01 + _23 * m._02 + _33 * m._03, _03 * m._10 + _13 * m._11 + _23 * m._12 + _33 * m._13, _03 * m._20 + _13 * m._21 + _23 * m._22 + _33 * m._23, _03 * m._30 + _13 * m._31 + _23 * m._32 + _33 * m._33\r\n\t\t);\r\n\t}\r\n\r\n\t@:extern public inline function multvec(value: FastVector4): FastVector4 {\r\n\t\tvar product = new FastVector4();\r\n\t\tproduct.x = _00 * value.x + _10 * value.y + _20 * value.z + _30 * value.w;\r\n\t\tproduct.y = _01 * value.x + _11 * value.y + _21 * value.z + _31 * value.w;\r\n\t\tproduct.z = _02 * value.x + _12 * value.y + _22 * value.z + _32 * value.w;\r\n\t\tproduct.w = _03 * value.x + _13 * value.y + _23 * value.z + _33 * value.w;\r\n\t\treturn product;\r\n\t}\r\n\r\n\t@:extern public inline function cofactor(m0: FastFloat, m1: FastFloat, m2: FastFloat,\r\n\t\t\t\t\t\t\t\t\t\t\tm3: FastFloat, m4: FastFloat, m5: FastFloat,\r\n\t\t\t\t\t\t\t\t\t\t\tm6: FastFloat, m7: FastFloat, m8: FastFloat): FastFloat {\r\n\t\treturn m0 * ( m4 * m8 - m5 * m7 ) - m1 * ( m3 * m8 - m5 * m6 ) + m2 * ( m3 * m7 - m4 * m6 );\r\n\t}\r\n\r\n\t@:extern public inline function determinant(): FastFloat {\r\n\t\tvar c00 = cofactor(_11, _21, _31, _12, _22, _32, _13, _23, _33);\r\n\t\tvar c01 = cofactor(_10, _20, _30, _12, _22, _32, _13, _23, _33);\r\n\t\tvar c02 = cofactor(_10, _20, _30, _11, _21, _31, _13, _23, _33);\r\n\t\tvar c03 = cofactor(_10, _20, _30, _11, _21, _31, _12, _22, _32);\r\n\t\treturn _00 * c00 - _01 * c01 + _02 * c02 - _03 * c03;\r\n\t}\r\n\r\n\t@:extern public inline function inverse(): FastMatrix4 {\r\n\t\tvar c00 = cofactor(_11, _21, _31, _12, _22, _32, _13, _23, _33);\r\n\t\tvar c01 = cofactor(_10, _20, _30, _12, _22, _32, _13, _23, _33);\r\n\t\tvar c02 = cofactor(_10, _20, _30, _11, _21, _31, _13, _23, _33);\r\n\t\tvar c03 = cofactor(_10, _20, _30, _11, _21, _31, _12, _22, _32);\r\n\r\n\t\tvar det: FastFloat = _00 * c00 - _01 * c01 + _02 * c02 - _03 * c03;\r\n\t\tif (Math.abs(det) < 0.000001) {\r\n\t\t\tthrow \"determinant is too small\";\r\n\t\t}\r\n\r\n\t\tvar c10 = cofactor(_01, _21, _31, _02, _22, _32, _03, _23, _33);\r\n\t\tvar c11 = cofactor(_00, _20, _30, _02, _22, _32, _03, _23, _33);\r\n\t\tvar c12 = cofactor(_00, _20, _30, _01, _21, _31, _03, _23, _33);\r\n\t\tvar c13 = cofactor(_00, _20, _30, _01, _21, _31, _02, _22, _32);\r\n\r\n\t\tvar c20 = cofactor(_01, _11, _31, _02, _12, _32, _03, _13, _33);\r\n\t\tvar c21 = cofactor(_00, _10, _30, _02, _12, _32, _03, _13, _33);\r\n\t\tvar c22 = cofactor(_00, _10, _30, _01, _11, _31, _03, _13, _33);\r\n\t\tvar c23 = cofactor(_00, _10, _30, _01, _11, _31, _02, _12, _32);\r\n\r\n\t\tvar c30 = cofactor(_01, _11, _21, _02, _12, _22, _03, _13, _23);\r\n\t\tvar c31 = cofactor(_00, _10, _20, _02, _12, _22, _03, _13, _23);\r\n\t\tvar c32 = cofactor(_00, _10, _20, _01, _11, _21, _03, _13, _23);\r\n\t\tvar c33 = cofactor(_00, _10, _20, _01, _11, _21, _02, _12, _22);\r\n\r\n\t\tvar invdet: FastFloat = 1.0 / det;\r\n\t\treturn new FastMatrix4(\r\n\t\t\tc00 * invdet,  -c01 * invdet,  c02 * invdet, -c03 * invdet,\r\n\t\t\t-c10 * invdet,  c11 * invdet, -c12 * invdet,  c13 * invdet,\r\n\t\t\tc20 * invdet,  -c21 * invdet,  c22 * invdet, -c23 * invdet,\r\n\t\t\t-c30 * invdet,  c31 * invdet, -c32 * invdet,  c33 * invdet\r\n\t\t);\r\n\t}\r\n}\r\n","package kha.netsync;\r\n\r\nimport haxe.io.Bytes;\r\n#if sys_server\r\nimport js.node.Http;\r\nimport js.Node;\r\n#end\r\n#if js\r\nimport js.Browser;\r\nimport js.html.BinaryType;\r\nimport js.html.WebSocket;\r\n#end\r\nimport kha.System;\r\n\r\nclass State {\r\n\tpublic var time: Float;\r\n\tpublic var data: Bytes;\r\n\t\r\n\tpublic function new(time: Float, data: Bytes) {\r\n\t\tthis.time = time;\r\n\t\tthis.data = data;\r\n\t}\r\n}\r\n\r\nclass Session {\r\n\tpublic static inline var START = 0;\r\n\tpublic static inline var ENTITY_UPDATES = 1;\r\n\tpublic static inline var CONTROLLER_UPDATES = 2;\r\n\tpublic static inline var REMOTE_CALL = 3;\r\n\tpublic static inline var PING = 4;\r\n\tpublic static inline var SESSION_ERROR = 5;\r\n\tpublic static inline var PLAYER_UPDATES = 6;\r\n\t\r\n\tpublic static inline var RPC_SERVER = 0;\r\n\tpublic static inline var RPC_ALL = 1;\r\n\r\n\tprivate static var instance: Session = null;\r\n\tprivate var entities: Map<Int, Entity> = new Map();\r\n\tprivate var controllers: Map<Int, Controller> = new Map();\r\n\tpublic var maxPlayers: Int;\r\n\tpublic var currentPlayers: Int = 0;\r\n\tpublic var ping: Float = 1;\r\n\tprivate var address: String;\r\n\tprivate var port: Int;\r\n\tprivate var startCallback: Void->Void;\r\n\tprivate var refusedCallback: Void->Void;\r\n\tprivate var resetCallback: Void->Void;\r\n\t#if sys_server\r\n\tprivate var server: Server;\r\n\tprivate var clients: Array<Client> = new Array();\r\n\tprivate var current: Client;\r\n\tprivate var isJoinable: Bool = false;\r\n\tprivate var lastStates: Array<State> = new Array();\r\n\tprivate static inline var stateCount = 60 * 10; // 10 seconds with 60 fps\r\n\t#else\r\n\tprivate var localClient: Client;\r\n\tpublic var network: Network;\r\n\tprivate var updateTaskId: Int;\r\n\tprivate var pingTaskId: Int;\r\n\t#end\r\n\t\r\n\tpublic var me(get, null): Client;\r\n\t\r\n\tprivate function get_me(): Client {\r\n\t\t#if sys_server\r\n\t\treturn current;\r\n\t\t#else\r\n\t\treturn localClient;\r\n\t\t#end\r\n\t}\r\n\t\r\n\tpublic function new(maxPlayers: Int, address: String, port: Int) {\r\n\t\tinstance = this;\r\n\t\tthis.maxPlayers = maxPlayers;\r\n\t\tthis.address = address;\r\n\t\tthis.port = port;\r\n\t}\r\n\t\r\n\tpublic static function the(): Session {\r\n\t\treturn instance;\r\n\t}\r\n\t\r\n\tpublic function addEntity(entity: Entity): Void {\r\n\t\tentities.set(entity._id(), entity);\r\n\t}\r\n\t\r\n\tpublic function addController(controller: Controller): Void {\r\n\t\ttrace(\"Adding controller id \" + controller._id());\r\n\t\tcontroller._inputBufferIndex = 0;\r\n\t\tcontrollers.set(controller._id(), controller);\r\n\t}\r\n\t\r\n\t#if sys_server\r\n\tprivate function send(): Bytes {\r\n\t\tvar size = 0;\r\n\t\tfor (entity in entities) {\r\n\t\t\tsize += entity._size();\r\n\t\t}\r\n\t\tvar offset = 0;\r\n\t\tvar bytes = Bytes.alloc(size + 9);\r\n\t\tbytes.set(offset, ENTITY_UPDATES);\r\n\t\toffset += 1;\r\n\t\tbytes.setDouble(offset, Scheduler.time());\r\n\t\toffset += 8;\r\n\t\tfor (entity in entities) {\r\n\t\t\tentity._send(offset, bytes);\r\n\t\t\toffset += entity._size();\r\n\t\t}\r\n\t\t\r\n\t\tlastStates.push(new State(Scheduler.time(), bytes));\r\n\t\tif (lastStates.length > stateCount) {\r\n\t\t\tlastStates.splice(0, 1);\r\n\t\t}\r\n\t\t\r\n\t\treturn bytes;\r\n\t}\r\n\t#end\r\n\t\r\n\tpublic function sendControllerUpdate(id: Int, bytes: haxe.io.Bytes) {\r\n\t\t#if !sys_server\r\n\t\tif (controllers.exists(id)) {\r\n\t\t\tif (controllers[id]._inputBuffer.length < controllers[id]._inputBufferIndex + 4 + bytes.length) {\r\n\t\t\t\tvar newBuffer = Bytes.alloc(controllers[id]._inputBufferIndex + 4 + bytes.length);\r\n\t\t\t\tnewBuffer.blit(0, controllers[id]._inputBuffer, 0, controllers[id]._inputBufferIndex);\r\n\t\t\t\tcontrollers[id]._inputBuffer = newBuffer;\r\n\t\t\t}\r\n\r\n\t\t\tcontrollers[id]._inputBuffer.setInt32(controllers[id]._inputBufferIndex, bytes.length);\r\n\t\t\tcontrollers[id]._inputBuffer.blit(controllers[id]._inputBufferIndex + 4, bytes, 0, bytes.length);\r\n\t\t\tcontrollers[id]._inputBufferIndex += (4 + bytes.length);\r\n\t\t}\r\n\t\t#end\r\n\t}\r\n\t\r\n\tprivate function sendPing() {\r\n\t\t#if !sys_server\r\n\t\tvar bytes = haxe.io.Bytes.alloc(5);\r\n\t\tbytes.set(0, kha.netsync.Session.PING);\r\n\t\tbytes.setFloat(1, Scheduler.realTime());\r\n\r\n\t\tsendToServer(bytes);\r\n\t\t#end\r\n\t}\r\n\t\r\n\tprivate function sendPlayerUpdate() {\r\n\t\t#if sys_server\r\n\t\tcurrentPlayers = clients.length;\r\n\t\tvar bytes = haxe.io.Bytes.alloc(5);\r\n\t\tbytes.set(0, PLAYER_UPDATES);\r\n\t\tbytes.setInt32(1, currentPlayers);\r\n\r\n\t\tsendToEverybody(bytes);\r\n\t\t#end\r\n\t}\r\n\r\n\tpublic function receive(bytes: Bytes, client: Client = null): Void {\r\n\t\t#if sys_server\r\n\t\t\r\n\t\tswitch (bytes.get(0)) {\r\n\t\tcase CONTROLLER_UPDATES:\r\n\t\t\tvar id = bytes.getInt32(1);\r\n\t\t\tvar time = bytes.getDouble(5);\r\n\t\t\t\r\n\t\t\tvar width = bytes.getInt32(13);\r\n\t\t\tvar height = bytes.getInt32(17);\r\n\t\t\tvar rotation = bytes.get(21);\r\n\t\t\tSystemImpl._updateSize(width, height);\r\n\t\t\tSystemImpl._updateScreenRotation(rotation);\r\n\t\t\t\r\n\t\t\tif (controllers.exists(id)) {\r\n\t\t\t\tprocessEventRetroactively(function () {\r\n\t\t\t\t\tcurrent = client;\r\n\t\t\t\t\tvar offset = 22;\r\n\t\t\t\t\twhile (offset < bytes.length) {\r\n\t\t\t\t\t\tvar length = bytes.getInt32(offset);\r\n\t\t\t\t\t\tcontrollers[id]._receive(bytes.sub(offset + 4, length));\r\n\t\t\t\t\t\toffset += (4 + length);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcurrent = null;\t\t\t\t\t\r\n\t\t\t\t}, time);\r\n\t\t\t}\r\n\t\tcase REMOTE_CALL:\r\n\t\t\tprocessRPC(bytes);\r\n\t\tcase PING:\r\n\t\t\t// PONG, i.e. just return the packet to the client\r\n\t\t\tif (client != null) client.send(bytes, false);\r\n\t\t}\r\n\t\t\r\n\t\t#else\r\n\t\t\r\n\t\tswitch (bytes.get(0)) {\r\n\t\tcase START:\r\n\t\t\tvar index = bytes.get(1);\r\n\t\t\tlocalClient = new LocalClient(index);\r\n\t\t\tScheduler.resetTime();\r\n\t\t\tstartCallback();\r\n\t\tcase ENTITY_UPDATES:\r\n\t\t\tvar time = bytes.getDouble(1);\r\n\t\t\tvar offset = 9;\r\n\t\t\tfor (entity in entities) {\r\n\t\t\t\tentity._receive(offset, bytes);\r\n\t\t\t\toffset += entity._size();\r\n\t\t\t}\r\n\t\t\tScheduler.warp(time);\r\n\t\tcase REMOTE_CALL:\r\n\t\t\tswitch (bytes.get(1)) {\r\n\t\t\tcase RPC_SERVER:\r\n\t\t\t\t// Mainly a safeguard, packets with RPC_SERVER should not be received here\r\n\t\t\tcase RPC_ALL:\r\n\t\t\t\texecuteRPC(bytes);\r\n\t\t\t}\r\n\t\tcase PING:\r\n\t\t\tvar sendTime = bytes.getFloat(1);\r\n\t\t\tping = Scheduler.realTime() - sendTime;\r\n\t\tcase SESSION_ERROR:\r\n\t\t\trefusedCallback();\r\n\t\tcase PLAYER_UPDATES:\r\n\t\t\tcurrentPlayers = bytes.getInt32(1);\r\n\t\t}\r\n\t\t\r\n\t\t#end\r\n\t}\r\n\r\n\t#if sys_server\r\n\tprivate function processEventRetroactively(event: Void->Void, time: Float) {\r\n\t\tif (time <= Scheduler.time()) {\r\n\t\t\tvar temp = time;\r\n\t\t\t// Process after earliest saved state if it is too far back\r\n\t\t\tif (time <= lastStates[0].time) {\r\n\t\t\t\ttime = lastStates[0].time + 0.00001;\r\n\t\t\t}\r\n\r\n\t\t\tvar i = lastStates.length - 1;\r\n\t\t\twhile (i >= 0) {\r\n\t\t\t\tif (lastStates[i].time < time) {\r\n\t\t\t\t\tvar offset = 9;\r\n\t\t\t\t\tfor (entity in entities) {\r\n\t\t\t\t\t\tentity._receive(offset, lastStates[i].data);\r\n\t\t\t\t\t\toffset += entity._size();\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// Invalidate states in which the new event is missing\r\n\t\t\t\t\tif (i < lastStates.length - 1) {\r\n\t\t\t\t\t\tlastStates.splice(i + 1, lastStates.length - i - 1);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tScheduler.warp(lastStates[i].time);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\t--i;\r\n\t\t\t}\r\n\t\t}\r\n\t\tScheduler.addTimeTask(event, time - Scheduler.time());\r\n\t}\r\n\t#end\r\n\r\n\t#if sys_server\r\n\tpublic function processRPC(bytes: Bytes) {\r\n\t\tswitch (bytes.get(1)) {\r\n\t\tcase RPC_SERVER:\r\n\t\t\texecuteRPC(bytes);\r\n\t\tcase RPC_ALL:\r\n\t\t\tsendToEverybody(bytes);\r\n\t\t\texecuteRPC(bytes);\r\n\t\t}\r\n\t}\r\n\t#end\r\n\r\n\tprivate function executeRPC(bytes: Bytes) {\r\n\t\tvar args = new Array<Dynamic>();\r\n\t\tvar syncId = bytes.getInt32(2);\r\n\t\tvar index: Int = 6;\r\n\t\t\r\n\t\tvar classnamelength = bytes.getUInt16(index);\r\n\t\tindex += 2;\r\n\t\tvar classname = \"\";\r\n\t\tfor (i in 0...classnamelength) {\r\n\t\t\tclassname += String.fromCharCode(bytes.get(index));\r\n\t\t\t++index;\r\n\t\t}\r\n\t\t\r\n\t\tvar methodnamelength = bytes.getUInt16(index);\r\n\t\tindex += 2;\r\n\t\tvar methodname = \"\";\r\n\t\tfor (i in 0...methodnamelength) {\r\n\t\t\tmethodname += String.fromCharCode(bytes.get(index));\r\n\t\t\t++index;\r\n\t\t}\r\n\t\t\r\n\t\twhile (index < bytes.length) {\r\n\t\t\tvar type = bytes.get(index);\r\n\t\t\t++index;\r\n\t\t\tswitch (type) {\r\n\t\t\tcase 0x42: // B\r\n\t\t\t\tvar value: Bool = bytes.get(index) == 1;\r\n\t\t\t\t++index;\r\n\t\t\t\ttrace(\"Bool: \" + value);\r\n\t\t\t\targs.push(value);\r\n\t\t\tcase 0x46: // F\r\n\t\t\t\tvar value: Float = bytes.getDouble(index);\r\n\t\t\t\tindex += 8;\r\n\t\t\t\ttrace(\"Float: \" + value);\r\n\t\t\t\targs.push(value);\r\n\t\t\tcase 0x49: // I\r\n\t\t\t\tvar value: Int = bytes.getInt32(index);\r\n\t\t\t\tindex += 4;\r\n\t\t\t\ttrace(\"Int: \" + value);\r\n\t\t\t\targs.push(value);\r\n\t\t\tcase 0x53: // S\r\n\t\t\t\tvar length = bytes.getUInt16(index);\r\n\t\t\t\tindex += 2;\r\n\t\t\t\tvar str = \"\";\r\n\t\t\t\tfor (i in 0...length) {\r\n\t\t\t\t\tstr += String.fromCharCode(bytes.get(index));\r\n\t\t\t\t\t++index;\r\n\t\t\t\t}\r\n\t\t\t\ttrace(\"String: \" + str);\r\n\t\t\t\targs.push(str);\r\n\t\t\tdefault:\r\n\t\t\t\ttrace(\"Unknown argument type.\");\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (syncId == -1) {\r\n\t\t\tReflect.callMethod(null, Reflect.field(Type.resolveClass(classname), methodname + \"_remotely\"), args);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tReflect.callMethod(SyncBuilder.objects[syncId], Reflect.field(SyncBuilder.objects[syncId], methodname + \"_remotely\"), args);\r\n\t\t}\r\n\t}\r\n\t\r\n\tpublic function waitForStart(callback: Void->Void, refuseCallback: Void->Void, errorCallback: Void->Void, closeCallback: Void->Void, resCallback: Void->Void): Void {\r\n\t\tstartCallback = callback;\r\n\t\trefusedCallback = refuseCallback;\r\n\t\tresetCallback = resCallback;\r\n\t\t#if sys_server\r\n\t\tisJoinable = true;\r\n\t\t#if direct_connection\r\n\t\ttrace(\"Starting server at \" + port + \".\");\r\n\t\t#end\r\n\t\tserver = new Server(port);\r\n\t\tserver.onConnection(function (client: Client) {\r\n\t\t\tif (!isJoinable) {\r\n\t\t\t\tvar bytes = Bytes.alloc(1);\r\n\t\t\t\tbytes.set(0, SESSION_ERROR);\r\n\t\t\t\tclient.send(bytes, true);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tclients.push(client);\r\n\t\t\tcurrent = client;\r\n\t\t\t\r\n\t\t\tNode.console.log(clients.length + \" client\" + (clients.length > 1 ? \"s \" : \" \") + \"connected.\");\r\n\t\t\tsendPlayerUpdate();\r\n\t\t\t\r\n\t\t\tclient.receive(function (bytes: Bytes) {\r\n\t\t\t\treceive(bytes, client);\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\tclient.onClose(function () {\r\n\t\t\t\tNode.console.log(\"Removing client \" + client.id + \".\");\r\n\t\t\t\tclients.remove(client);\r\n\t\t\t\tsendPlayerUpdate();\r\n\t\t\t\t// isJoinable is intentionally not reset here immediately, as late joining is currently unsupported\r\n\t\t\t\tif (clients.length == 0) {\r\n\t\t\t\t\treset();\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\tif (clients.length >= maxPlayers) {\r\n\t\t\t\tisJoinable = false;\r\n\t\t\t\tNode.console.log(\"Starting game.\");\r\n\t\t\t\tvar index = 0;\r\n\t\t\t\tfor (c in clients) {\r\n\t\t\t\t\ttrace(\"Starting client \" + c.id);\r\n\t\t\t\t\tvar bytes = Bytes.alloc(2);\r\n\t\t\t\t\tbytes.set(0, START);\r\n\t\t\t\t\tbytes.set(1, index);\r\n\t\t\t\t\tc.send(bytes, true);\r\n\t\t\t\t\t++index;\r\n\t\t\t\t}\r\n\t\t\t\tScheduler.resetTime();\r\n\t\t\t\tstartCallback();\r\n\t\t\t}\r\n\t\t});\r\n\t\t#else\r\n\t\tnetwork = new Network(address, port, errorCallback, function() {\r\n\t\t\tcloseCallback();\r\n\t\t\treset();\r\n\t\t});\r\n\t\tnetwork.listen(function (bytes: Bytes) {\r\n\t\t\treceive(bytes);\r\n\t\t});\r\n\t\tupdateTaskId = Scheduler.addFrameTask(update, 0);\r\n\t\tping = 1;\r\n\t\tpingTaskId = Scheduler.addTimeTask(sendPing, 0, 1);\r\n\t\t#end\r\n\t}\r\n\r\n\tprivate function reset() {\r\n\t\t#if sys_server\r\n\t\tisJoinable = true;\r\n\t\tserver.reset();\r\n\t\t#else\r\n\t\tScheduler.removeFrameTask(updateTaskId);\r\n\t\tScheduler.removeTimeTask(pingTaskId);\r\n\t\t#end\r\n\t\tcurrentPlayers = 0;\r\n\t\tping = 1;\r\n\t\tcontrollers = new Map();\r\n\t\tentities = new Map();\r\n\t\tresetCallback();\r\n\t}\r\n\t\r\n\tpublic function update(): Void {\r\n\t\t#if sys_server\r\n\t\tvar bytes = send();\r\n\t\tsendToEverybody(bytes);\r\n\t\t#else\r\n\t\tfor (controller in controllers) {\r\n\t\t\tif (controller._inputBufferIndex > 0) {\r\n\t\t\t\tvar bytes = haxe.io.Bytes.alloc(22 + controller._inputBufferIndex);\r\n\t\t\t\tbytes.set(0, kha.netsync.Session.CONTROLLER_UPDATES);\r\n\t\t\t\tbytes.setInt32(1, controller._id());\r\n\t\t\t\tbytes.setDouble(5, Scheduler.time());\r\n\t\t\t\tbytes.setInt32(13, System.windowWidth(0));\r\n\t\t\t\tbytes.setInt32(17, System.windowHeight(0));\r\n\t\t\t\tbytes.set(21, 0); //System.screenRotation.getIndex());\r\n\r\n\t\t\t\tbytes.blit(22, controller._inputBuffer, 0, controller._inputBufferIndex);\r\n\r\n\t\t\t\tsendToServer(bytes);\r\n\t\t\t\tcontroller._inputBufferIndex = 0;\r\n\t\t\t}\r\n\t\t}\r\n\t\t#end\r\n\t}\r\n\t\r\n\t#if sys_server\r\n\tpublic function sendToEverybody(bytes: Bytes): Void {\r\n\t\tfor (client in clients) {\r\n\t\t\tclient.send(bytes, false);\r\n\t\t}\r\n\t}\r\n\t#end\r\n\t\r\n\t#if !sys_server\r\n\tpublic function sendToServer(bytes: Bytes): Void {\r\n\t\tnetwork.send(bytes, false);\r\n\t}\r\n\t#end\r\n\r\n}\r\n","package no.logic.kha.uix.core;\r\n\r\nimport no.logic.kha.uix.kontentum.Kontentum;\r\nimport no.logic.kha.uix.types.Object;\r\n\r\n/**\r\n * ...\r\n * @author Tommy S.\r\n */\r\nclass UIXAssets\r\n{\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\t\r\n\t//===================================================================================\r\n\t// Consts \r\n\t//-----------------------------------------------------------------------------------\r\n\t\r\n\tpublic static inline var LANG_EN\t\t\t\t: String = \t\"en\";\r\n\tpublic static inline var LANG_NO\t\t\t\t: String = \t\"no\";\r\n\tpublic static inline var LANG_SW\t\t\t\t: String = \t\"sw\";\r\n\tpublic static inline var LANG_DK\t\t\t\t: String = \t\"dk\";\r\n\tpublic static inline var LANG_DE\t\t\t\t: String = \t\"de\";\r\n\t\t\r\n\tstatic public inline var ASSET_TYPE_TEXT\t\t: String \t= \"text\";\r\n\tstatic public inline var ASSET_TYPE_FILE\t\t: String \t= \"file\";\r\n\t//static public inline var ASSET_TYPE_IMAGE\t\t: String \t= \"image\";\r\n\t//static public inline var ASSET_TYPE_VIDEO\t\t: String \t= \"video\";\r\n\t//static public inline var ASSET_TYPE_SOUND\t\t: String \t= \"sound\";\r\n\r\n\t//===================================================================================\r\n\t// Properties \r\n\t//-----------------------------------------------------------------------------------\r\n\t\r\n\t//public var supportedLanguages\t\t\t: Array<String>\t\t= [LANG_NO, LANG_EN, LANG_DE, LANG_SE];\r\n\t//public var currentLanguage\t\t\t\t: String\t\t\t= LANG_NO;\r\n\tpublic var localFileDir\t\t\t\t\t: String\t\t\t= \"\";\r\n\t\r\n\t//===================================================================================\r\n\t// Declarations \r\n\t//-----------------------------------------------------------------------------------\r\n\t\r\n\tvar kontentum\t\t\t: Kontentum;\r\n\tvar assets\t\t\t\t: BindData\t\t\t\t= new BindData();\r\n\r\n\t//===================================================================================\r\n\t// Variables \r\n\t//-----------------------------------------------------------------------------------\t\t\r\n\t\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\r\n\tpublic function new() \r\n\t{\r\n\t\t\r\n\t}\r\n\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\t\r\n\tpublic function setAssetContent(k:Kontentum)\r\n\t{\r\n\t\tthis.kontentum = k;\r\n\t\tfor (l in kontentum.languages)\r\n\t\t{\t\t\t\t\t\r\n\t\t\tfor (a in kontentum.textsByIdentifier)\r\n\t\t\t{\r\n\t\t\t\tvar assetCode:String = \"asset[\" + l + \"]$|\" + a;\r\n\t\t\t\tvar assObj:Object = kontentum.textsByIdentifier[a];\r\n\t\t\t\tif (assObj!=null)\r\n\t\t\t\t{\r\n\t\t\t\t\tvar asset:String = processSpecialChars( getAssetByID(assObj.id, \"text\", Kontentum.i.getLangType(l)) );\r\n\t\t\t\t\tassets.setValue(assetCode, asset);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tfor (b in kontentum.filesByIdentifier)\r\n\t\t\t{\r\n\t\t\t\tvar assetCodeF:String = \"asset[\" + l + \"]$|\" + b;\r\n\t\t\t\tvar assObjF:Object = kontentum.filesByIdentifier[b];\r\n\t\t\t\tif (assObjF!=null)\r\n\t\t\t\t{\r\n\t\t\t\t\tvar assetF:String = processSpecialChars( getAssetByID(Std.string(assObjF.id), \"file\", Kontentum.i.getLangType(l)) );\r\n\t\t\t\t\tassets.setValue(assetCodeF, assetF);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\tfunction processSpecialChars(a:String):String \r\n\t{\r\n\t\treturn a;\r\n\t}\r\n\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\t\r\n\tpublic function getAsset(assetCode:String, type:String, ?lang:KontentumLanguage):String\r\n\t{\r\n\t\tif (kontentum!=null && kontentum.assetsLoaded)\r\n\t\t{\r\n\t\t\tvar toUpper:Bool = false;\r\n\t\t\tif (assetCode.indexOf(\"^\") !=-1)\r\n\t\t\t{\r\n\t\t\t\ttoUpper = true;\r\n\t\t\t\tassetCode = assetCode.split(\"^\").join(\"\");\r\n\t\t\t}\r\n\t\t\tif (lang == null || lang==KontentumLanguage.CURRENT)\r\n\t\t\t{\r\n\t\t\t\tlang = findLanguageFromAssetCode(assetCode);\r\n\t\t\t\tif (lang==null || lang==KontentumLanguage.CURRENT)\r\n\t\t\t\t\tlang = Kontentum.i.currentLanguage;\r\n\t\t\t\t\t\r\n\t\t\t\tassetCode = stripLangCodeFromAssetCode(assetCode,lang);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tvar res:String = null;\r\n\t\t\tif (assetCode.indexOf(\"@content.\") !=-1)\r\n\t\t\t{\r\n\t\t\t\tvar eStr:String = assetCode.split(\"@content.\").join(\"\");\r\n\t\t\t\tif (type == null)\r\n\t\t\t\t{\r\n\t\t\t\t\tres = getContentStringEval(eStr, ASSET_TYPE_TEXT);\r\n\t\t\t\t\tif (res == null)\r\n\t\t\t\t\t\tres = getContentStringEval(eStr, ASSET_TYPE_FILE);\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t\tres = getContentStringEval(eStr, type);\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tif (type == null)\r\n\t\t\t\t{\r\n\t\t\t\t\tres = removeAssetPrefix(getAssetByID(assetCode, ASSET_TYPE_TEXT, lang));\r\n\t\t\t\t\tif (res == null)\r\n\t\t\t\t\t\tres = removeAssetPrefix(getAssetByID(assetCode, ASSET_TYPE_FILE, lang));\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t\tres = removeAssetPrefix(getAssetByID(assetCode,type,lang));\r\n\t\t\t}\r\n\r\n\t\t\tif (res==null)\r\n\t\t\t\tres = \"?:\" + assetCode;\r\n\t\t\t\t\r\n\t\t\tif (type == ASSET_TYPE_FILE)\r\n\t\t\t{\r\n\t\t\t\tif (kontentum.localFileDir != null && kontentum.localFileDir != \"\")\r\n\t\t\t\t{\r\n\t\t\t\t\tres = res.split(kontentum.localFileDir).join(\"\");\r\n\t\t\t\t\treturn kontentum.localFileDir + \"/\" + res;\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\treturn res;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t\treturn toUpper?res.toUpperCase():res;\t\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\tpublic function getTextAsset(assetCode:String, ?lang:KontentumLanguage):String\r\n\t{\r\n\t\treturn getAsset(assetCode, ASSET_TYPE_TEXT, lang);\t\r\n\t}\r\n\t\r\n\tpublic function getFileAsset(assetCode:String, ?lang:KontentumLanguage):String\r\n\t{\r\n\t\treturn getAsset(assetCode, ASSET_TYPE_FILE, lang);\t\r\n\t}\r\n\t\r\n/*\tpublic function setAsset(assetCode:String, value:Any, type:String, ?lang:String)\r\n\t{\r\n\t\tassets[assetCode] = value;\t\t\r\n\t}\r\n\r\n\tpublic function setTextAsset(assetCode:String, value:Any, ?lang:String) \r\n\t{\r\n\t\tsetAsset(assetCode, value, ASSET_TYPE_TEXT, lang);\r\n\t}\r\n\t\r\n\tpublic function setFileAsset(assetCode:String, value:Any, ?lang:String) \r\n\t{\r\n\t\tsetAsset(assetCode, value, ASSET_TYPE_FILE, lang);\r\n\t}*/\r\n\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\t\r\n\tpublic function forceRefresh() \r\n\t{\r\n\t\tfor (uid in @:privateAccess UIX.trackedAssetCodes.keys()) \r\n\t\t{\r\n\t\t\tvar bindCode:String = stripTCode(uid);\r\n\t\t\tvar value:String = getAsset( bindCode, null);\r\n\t\t\t@:privateAccess UIX.runAssetBinding(uid, bindCode, value);\r\n\t\t}\r\n\t}\r\n\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\t\r\n/*\tpublic function getIDofIdentifier(identifier:String, ?type:String, ?lang:KontentumLanguage):Int\r\n\t{\r\n\t\tif (identifier == null)\r\n\t\t\treturn -1;\r\n\t\t\r\n\t\tif (type==null)\r\n\t\t\ttype = ASSET_TYPE_TEXT;\r\n\t\t\t\r\n\t\tif (type==ASSET_TYPE_TEXT)\r\n\t\t{\r\n\t\t\tif (identifier!=null && kontentum.textsByIdentifier!=null)\r\n\t\t\t{\r\n\t\t\t\tif (kontentum.textsByIdentifier.hasOwnProperty(identifier))\r\n\t\t\t\t{\r\n\t\t\t\t\tvar tid = kontentum.textsByIdentifier[identifier];\r\n\t\t\t\t\tif (kontentum.texts.hasOwnProperty(tid))\r\n\t\t\t\t\t\treturn kontentum.texts[tid];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n/*\t\telse if (type==ASSET_TYPE_FILE)\r\n\t\t{\r\n\t\t\t//UIX.c.debug(\"fInt \" + fInt + \" -- \"+id);\r\n\t\t\tif (fInt>0 && kontentum.files!=null && kontentum.files.hasOwnProperty( Std.string(fInt) ) )\r\n\t\t\t{\r\n\t\t\t\t//if (files.hasOwnProperty(Std.string(fInt)))\r\n\t\t\t\t//{\r\n\t\t\t\t\treturn kontentum.files[Std.string(fInt)].file;\r\n\t\t\t\t//}\r\n\t\t\t}\r\n\t\t\telse if (Std.is(id,String) && kontentum.filesByIdentifier!=null)\r\n\t\t\t{\r\n\t\t\t\t//UIX.c.debug(\"Try to find: \" + id);\r\n\t\t\t\t//UIX.c.debug(filesByIdentifier.toString());\r\n\t\t\t\t//UIX.c.debug(filesByIdentifier[id]);\r\n\t\t\t\tif (kontentum.filesByIdentifier.hasOwnProperty(id))\r\n\t\t\t\t{\r\n\t\t\t\t\treturn kontentum.filesByIdentifier[id].file;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}*/\r\n\t\t//return -1;\t\t\r\n\t//}\r\n\t//*/\r\n\t\r\n\tpublic function getIdentifierByID(id:String, ?type:String=ASSET_TYPE_TEXT):String \r\n\t{\r\n\t\tif (type==ASSET_TYPE_TEXT)\r\n\t\t{\r\n\t\t\tif (kontentum.textsIdIdentifier!=null)\r\n\t\t\t{\r\n\t\t\t\tif (kontentum.textsIdIdentifier.hasOwnProperty(id))\r\n\t\t\t\t{\r\n\t\t\t\t\treturn kontentum.textsIdIdentifier[id];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if (type == ASSET_TYPE_FILE)\r\n\t\t{\r\n\t\t\tif (kontentum.filesIdIdentifier!=null)\r\n\t\t\t{\r\n\t\t\t\tif (kontentum.filesIdIdentifier.hasOwnProperty(id))\r\n\t\t\t\t{\r\n\t\t\t\t\treturn kontentum.filesIdIdentifier[id];\r\n\t\t\t\t}\r\n\t\t\t}\t\t\t\r\n\t\t}\r\n\t\treturn \"\";\r\n\t}\r\n\r\n\tpublic function getAssetByID(id:String, ?type:String, ?lang:KontentumLanguage):String\r\n\t{\r\n\t\tif (type==null)\r\n\t\t\ttype = ASSET_TYPE_TEXT;\r\n\t\t\t\r\n\t\tvar fInt:Int = Std.parseInt(Std.string(id));\r\n\t\t\r\n\t\tif (type==ASSET_TYPE_TEXT)\r\n\t\t{\r\n\t\t\tif (fInt>0 && kontentum.texts!=null)\r\n\t\t\t{\r\n\t\t\t\tif (kontentum.texts.hasOwnProperty(Std.string(fInt)))\r\n\t\t\t\t{\r\n\t\t\t\t\treturn getLanguageFromNode(kontentum.texts[Std.string(fInt)].text,lang);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse if (Std.is(id,String) && kontentum.textsByIdentifier!=null)\r\n\t\t\t{\r\n\t\t\t\tif (kontentum.textsByIdentifier.hasOwnProperty(id))\r\n\t\t\t\t{\r\n\t\t\t\t\treturn getLanguageFromNode(kontentum.textsByIdentifier[id].text,lang);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if (type==ASSET_TYPE_FILE)\r\n\t\t{\r\n\t\t\t//UIX.c.debug(\"fInt \" + fInt + \" -- \"+id);\r\n\t\t\tif (fInt>0 && kontentum.files!=null && kontentum.files.hasOwnProperty( Std.string(fInt) ) )\r\n\t\t\t{\r\n\t\t\t\t//if (files.hasOwnProperty(Std.string(fInt)))\r\n\t\t\t\t//{\r\n\t\t\t\t\treturn kontentum.files[Std.string(fInt)].file;\r\n\t\t\t\t//}\r\n\t\t\t}\r\n\t\t\telse if (Std.is(id,String) && kontentum.filesByIdentifier!=null)\r\n\t\t\t{\r\n\t\t\t\t//UIX.c.debug(\"Try to find: \" + id);\r\n\t\t\t\t//UIX.c.debug(filesByIdentifier.toString());\r\n\t\t\t\t//UIX.c.debug(filesByIdentifier[id]);\r\n\t\t\t\tif (kontentum.filesByIdentifier.hasOwnProperty(id))\r\n\t\t\t\t{\r\n\t\t\t\t\treturn kontentum.filesByIdentifier[id].file;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn null;\r\n\t}\t\r\n\t\r\n\tfunction getLanguageFromNode(nNode:Object,lang:KontentumLanguage):String \r\n\t{\r\n\t\t//var langCode:UIXLanguage = lang;\r\n\t\t//var langCode:UIXLanguage = UIXLanguage.CURRENT;\r\n\t\t//var findLang:UIXLanguage = Kontentum.i.currentLanguage;\r\n\t\t//if (lang!=null && lang!=UIXLanguage.CURRENT)\r\n\t\t//findLang = lang;\r\n\r\n\t\t//if (kontentum.languages.hasOwnProperty(Kontentum.i.getLangStr(findLang)))\r\n\t\t//{\r\n\t\t\t//langCode = Kontentum.i.getLangType(kontentum.languages[Kontentum.i.getLangStr(findLang)].identifier);\r\n\t\t//}\r\n\t\tif (nNode.hasOwnProperty(Kontentum.i.getLangStr(lang)))\r\n\t\t{\r\n\t\t\treturn nNode[Kontentum.i.getLangStr(lang)];\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\t\r\n\tfunction removeAssetPrefix(assetStr:String):String \r\n\t{\r\n\t\tif (assetStr!=null)\r\n\t\t{\r\n\t\t\treturn assetStr.split(\"*$text$*\").join(\"\").split(\"*$image$*\").join(\"\").split(\"*$audio$*\").join(\"\").split(\"*$video$*\").join(\"\");\r\n\t\t}\r\n\t\telse\r\n\t\t\treturn null;\r\n\t}\r\n\r\n\tfunction findLanguageFromAssetCode(assetCode:String):KontentumLanguage\r\n\t{\r\n\t\tif (assetCode==null)\r\n\t\t\treturn KontentumLanguage.CURRENT;\r\n\t\telse if (assetCode.toLowerCase().indexOf(\":no\")!=-1)\r\n\t\t\treturn KontentumLanguage.NO;\r\n\t\telse if (assetCode.toLowerCase().indexOf(\":en\")!=-1)\r\n\t\t\treturn KontentumLanguage.EN;\r\n\t\telse\t\r\n\t\t\treturn KontentumLanguage.CURRENT;\r\n\t\t//for (i in 0...supportedLanguages.length) \r\n\t\t//{\r\n\t\t\t//var lang:String = \"|\"+supportedLanguages[i];\r\n\t\t\t//if (assetCode.indexOf(lang) !=-1)\r\n\t\t\t\t//return lang;\r\n\t\t//}\r\n\t\t//return null;\r\n\t\t\r\n\t}\r\n\t\r\n\tfunction stripLangCodeFromAssetCode(assetCode:String,lang:KontentumLanguage):String\r\n\t{\r\n\t\treturn assetCode.split(\":\"+Kontentum.i.getLangStr(lang)).join(\"\");\r\n\t}\r\n\t\t\r\n\tfunction getContentArrayByName(nodeName:String):Array<Object>\r\n\t{\r\n\t\tif (kontentum.content==null || nodeName==null)\r\n\t\t\treturn null;\r\n\t\t\t\r\n\t\tvar nn:String = nodeName.toLowerCase();\r\n\t\tfor (name in kontentum.content) \r\n\t\t{\r\n\t\t\tvar ln:String = name.toLowerCase();\r\n\t\t\tif (name!=null && (name.toLowerCase() == nn))\r\n\t\t\t{\r\n\t\t\t\treturn kontentum.content[name];\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\t\t\r\n\tfunction getContentStringEval(eval:String, ?type:String):String \r\n\t{\r\n\t\tif (eval==null)\r\n\t\t\treturn null;\r\n\t\t\t\r\n\t\tvar sprDot:Array<String> = eval.split(\".\");\r\n\t\tif (sprDot!=null && sprDot.length > 0)\r\n\t\t{\r\n\t\t\tvar eq1:String = sprDot[0];\r\n\t\t\tif (eq1!=null && eq1.indexOf(\"[\") !=-1)\r\n\t\t\t{\r\n\t\t\t\tvar eq2:Array<String> = eq1.split(\"[\");\r\n\t\t\t\tif (eq2!=null && eq2.length > 1)\r\n\t\t\t\t{\r\n\t\t\t\t\tvar nodeName:String = eq2[0];\r\n\t\t\t\t\t\r\n\t\t\t\t\tvar index:Int = Std.parseInt(eq2[1].split(\"]\").join(\"\"));\r\n\t\t\t\t\tvar fieldName:String = sprDot[1];\r\n\t\t\t\t\t\r\n\t\t\t\t\treturn getContentString(nodeName, index, fieldName, null, type);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\tfunction getContentString(nodeName:String,index:Int,fieldName:String, lang:KontentumLanguage=null, type:String=null):String\r\n\t{\r\n\t\tif (kontentum.content==null || nodeName==null)\r\n\t\t\treturn null;\r\n\t\t\t\r\n\t\tvar cArr:Array<Object> = getContentArrayByName(nodeName);\r\n\t\tif (cArr!=null && cArr.length>0)\r\n\t\t{\r\n\t\t\tif (index >= cArr.length)\r\n\t\t\t\tindex = cArr.length - 1;\r\n\t\t\t\t\r\n\t\t\treturn getStringFieldFromContentEntry(cArr[index], fieldName, lang, type);\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\t\r\n\tfunction getStringFieldFromContentEntry(contentEntry:Object, fieldName:String, lang:KontentumLanguage, type:String=null):String \r\n\t{\r\n\t\tif (contentEntry!=null && fieldName!=null)\r\n\t\t{\r\n\t\t\tif (contentEntry.hasOwnProperty(fieldName) && contentEntry[fieldName]!=null)\r\n\t\t\t{\r\n\t\t\t\tvar qn:Object = contentEntry[fieldName];\r\n\t\t\t\tvar t:String = contentEntry.type;\r\n\t\t\t\tif (type!=null)\r\n\t\t\t\t\tt = type;\r\n\t\t\t\tif (Std.is(qn,String))\r\n\t\t\t\t\treturn getAssetByID(qn, t, lang);\r\n\t\t\t\telse\r\n\t\t\t\t\treturn getAssetByID(qn.id, t, lang);\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\treturn null;\r\n\t}\r\n\t\r\n\tfunction stripTCode(uid:String):String \r\n\t{\r\n\t\tvar sa:Array<String> = uid.split(\"_UIX_bind_\");\r\n\t\tif (sa != null)\r\n\t\t\treturn sa[0];\r\n\t\telse\r\n\t\t\treturn uid;\r\n\t}\r\n\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\t\r\n\t//public function dispose() \r\n\t//{\r\n\t\t//\r\n\t//}\r\n\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\t\r\n/*\t\t\t\t\r\n\tprivate function onAssetChange(e:ElementChangeEvent):void \r\n\t{\r\n\t\tvar boundVarItems:Array = trackedElements.getItemsByMeta(e.valueName);\r\n\t\tfor (var i:int = 0; i < boundVarItems.length; i++) \r\n\t\t{\r\n\t\t\tprocessBindingUpdate(boundVarItems[i] as UIXGElement);\r\n\t\t}\r\n\t}\r\n\t\r\n\tpublic function forceAssetRefresh():void \r\n\t{\r\n\t\tvar boundVarItems:Array = trackedElements.getAllItems();\r\n\t\tfor (var i:int = 0; i < boundVarItems.length; i++) \r\n\t\t{\r\n\t\t\tvar el:UIXGElement = boundVarItems[i];\r\n\t\t\tif (el && el.assetCode)\r\n\t\t\t{\r\n\t\t\t\tprocessBindingUpdate(el);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t\tpublic function setAsset(key:String, value:*):void\r\n\t\t{\r\n\t\t\tassets[key] = value;\r\n\t\t}\r\n\t\t\r\n\t\tpublic function getAsset(assetCode:String,lang:String=null,type:String=null):String\r\n\t\t{\r\n\t\t\t//if (assetCode.indexOf(\"scenarios\") !=-1)\r\n\t\t\t\t//trace(\"hey\");\r\n\t\t\t\r\n\t\t\tif (lang == null)\r\n\t\t\t{\r\n\t\t\t\tlang = findLanguageFromAssetCode(assetCode);\r\n\t\t\t\tif (!lang)\r\n\t\t\t\t\tlang = currentLanguage;\r\n\t\t\t\t\r\n\t\t\t\tassetCode = stripLangCodeFromAssetCode(assetCode,lang);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tvar res:String;\r\n\t\t\tif (assetCode.indexOf(\"@content.\") !=-1)\r\n\t\t\t{\r\n\t\t\t\tvar eStr:String = assetCode.split(\"@content.\").join(\"\");\r\n\t\t\t\tres = Kontentum.i.getContentStringEval(eStr, type);\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\t//var gA:String = \"asset[\" + lang + \"]$|\" +assetCode;\r\n\t\t\t\t//res = removeAssetPrefix(getAssetByID(gA,type,lang));\r\n\t\t\t\t//var gA:String = \"asset[\" + lang + \"]$|\" +assetCode;\r\n\t\t\t\tres = removeAssetPrefix(getAssetByID(assetCode,type,lang));\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (!res)\r\n\t\t\t\tres = \"??|\" + assetCode;\r\n\t\t\t\t\r\n\t\t\tif (type == \"file\")\r\n\t\t\t{\r\n\t\t\t\tres = res.split(localFilePath).join(\"\");\r\n\t\t\t\treturn localFilePath + res;\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t\treturn res;\r\n\t\t}\r\n\r\n\t\tpublic function getAssetByPattern(match:String,type:String=null,lang:String=null):Dictionary\r\n\t\t{\r\n\t\t\tvar r:Dictionary = new Dictionary()\r\n\t\t\tvar gA:String = \"\";\r\n\t\t\tif (lang)\r\n\t\t\t{\r\n\t\t\t\tgA = \"asset[\" + lang + \"]$|\";\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t\tgA = \"]$|\";\r\n\t\t\t\t\r\n\t\t\tgA += match;\r\n\t\t\t\r\n\t\t\tfor (var name:String in assets.strings) \r\n\t\t\t{\r\n\t\t\t\tif (name.indexOf(gA) !=-1)\r\n\t\t\t\t{\r\n\t\t\t\t\tvar fC:String = assets[name];\r\n\t\t\t\t\tif (type == null)\r\n\t\t\t\t\t\tr[name] = removeAssetPrefix(fC);\r\n\t\t\t\t\telse if (fC.indexOf(\"*$\" + type+\"$*\") !=-1)\r\n\t\t\t\t\t\tr[name] = removeAssetPrefix(fC);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\treturn r;\r\n\t\t}\t\t\r\n\t\t\r\n\t\tpublic function getAssetArrayByPattern(match:String,type:String=null,lang:String=null):Array\r\n\t\t{\r\n\t\t\tvar d:Dictionary = getAssetByPattern(match, type, lang);\r\n\t\t\t\r\n\t\t\tvar a:Array = new Array();\r\n\t\t\tfor (var dictionaryKey:Object in d)\r\n\t\t\t{\r\n\t\t\t\ta.push({key:dictionaryKey,value:d[dictionaryKey]});\r\n\t\t\t}\r\n\t\t\t//a.sortOn(\"key\", [Array.NUMERIC | Array.DESCENDING]);\r\n\t\t\tvar ra:Array = ListUtils.alphaNumericSort(a, \"key\" , ListUtils.ASCENDING);\r\n\t\t\t\r\n\t\t\tvar b:Array = [];\r\n            for (var i:int = 0; i < a.length; i++) \r\n            {\r\n                b.push(a[i].value);\r\n            }\r\n\t\t\t\r\n\t\t\treturn b;\r\n\t\t}\t\t\r\n\t\t\r\n\t\tpublic function getAssetByID(id:*,type:String=null,lang:String=null):String\r\n\t\t{\r\n\t\t\tif (type == \"file\")\r\n\t\t\t{\r\n\t\t\t\treturn localFilePath + Kontentum.i.getAssetByID(id, type, lang);\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t\treturn Kontentum.i.getAssetByID(id, type, lang);\r\n\t\t}\r\n\r\n\t\tprivate function removeAssetPrefix(assetStr:String):String \r\n\t\t{\r\n\t\t\tif (assetStr)\r\n\t\t\t{\r\n\t\t\t\treturn assetStr.split(\"*$text$*\").join(\"\").split(\"*$image$*\").join(\"\").split(\"*$audio$*\").join(\"\").split(\"*$video$*\").join(\"\");\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t\treturn null;\r\n\t\t}\r\n\t\r\n\t\tpublic function findLanguageFromAssetCode(assetCode:String):String\r\n\t\t{\r\n\t\t\tfor (var i:int = 0; i < supportedLanguages.length; i++) \r\n\t\t\t{\r\n\t\t\t\tvar lang:String = \"|\"+supportedLanguages[i];\r\n\t\t\t\tif (assetCode.indexOf(lang) !=-1)\r\n\t\t\t\t\treturn lang;\r\n\t\t\t}\r\n\t\t\treturn null;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tpublic function stripLangCodeFromAssetCode(assetCode:String,lang:String):String\r\n\t\t{\r\n\t\t\treturn assetCode.split(lang+\"|\").join(\"\");\r\n\t\t}\r\n\t\t\r\n\t\tpublic function getContent(expression:String):Array \r\n\t\t{\r\n\t\t\treturn Kontentum.i.getContent(expression);\r\n\t\t}\r\n\t\r\n\t\r\n*/\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n}","package no.logic.kha.uix.core.loading;\r\nimport kha.Image;\r\n\r\n/**\r\n * ...\r\n * @author Tommy Svensson\r\n */\r\n\r\nclass UIXCache\r\n{\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\t\r\n\tpublic function new() {}\t\r\n\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\r\n\tpublic var images\t\t\t: UIXImageCache\t\t\t= new UIXImageCache();\r\n\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n}\r\n\r\nclass UIXImageCache\r\n{\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\t\r\n\t//===================================================================================\r\n\t// Consts \r\n\t//-----------------------------------------------------------------------------------\r\n\r\n\t//===================================================================================\r\n\t// Properties \r\n\t//-----------------------------------------------------------------------------------\r\n\t\r\n\tvar images\t\t\t: Map<String,Image>\t\t= new Map<String, Image>();\r\n\t\r\n\t//===================================================================================\r\n\t// Declarations \r\n\t//-----------------------------------------------------------------------------------\r\n\r\n\t//===================================================================================\r\n\t// Callback \r\n\t//-----------------------------------------------------------------------------------\t\t\r\n\r\n\t//===================================================================================\r\n\t// Variables \r\n\t//-----------------------------------------------------------------------------------\t\t\r\n\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\t\r\n\tpublic function new() \r\n\t{\r\n\t}\t\r\n\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\t\r\n\tpublic function add(src:String, image:Image):Image\r\n\t{\r\n\t\timages.set(src, image);\r\n\t\treturn image;\r\n\t}\r\n\t\r\n\tpublic function get(src:String):Image\r\n\t{\r\n\t\tif (src == null)\r\n\t\t\treturn null;\r\n\t\t\t\r\n\t\treturn images.get(src);\r\n\t}\r\n\t\r\n\tpublic function has(src:String):Bool\r\n\t{\r\n\t\tif (src == null)\r\n\t\t\treturn false;\r\n\t\t\t\r\n\t\treturn images.exists(src);\r\n\t}\r\n\t\r\n\tpublic function list():Array<String>\r\n\t{\r\n\t\tvar ol:Array<String> = [];\r\n\t\tfor (img in images.keys())\r\n\t\t{\r\n\t\t\tol.push(img);\r\n\t\t}\r\n\t\treturn ol;\r\n\t}\r\n\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n}\r\n\r\n/*\r\ntypedef BindDataValue =\r\n{\r\n\t\t\t\tvar value\t: Dynamic;\r\n\t\t\t\tvar index\t: Int;\r\n\t@:optional \tvar meta\t: Dynamic;\r\n}*/\r\n\r\n","package no.logic.kha.uix.core;\r\n\r\n\r\n/**\r\n * ...\r\n * @author Tommy Svensson\r\n */\r\n\r\nclass BindData\r\n{\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\t\r\n\t//===================================================================================\r\n\t// Consts \r\n\t//-----------------------------------------------------------------------------------\r\n\r\n\t//===================================================================================\r\n\t// Properties \r\n\t//-----------------------------------------------------------------------------------\r\n\t\r\n\tpublic var data\t\t\t\t\t: Map<String,BindDataValue>;\r\n\t\r\n\t//===================================================================================\r\n\t// Declarations \r\n\t//-----------------------------------------------------------------------------------\r\n\r\n\t//===================================================================================\r\n\t// Callback \r\n\t//-----------------------------------------------------------------------------------\t\t\r\n\r\n\tpublic var onBindEventChange\t: (String,Dynamic)->Void;\r\n\t\r\n\t//===================================================================================\r\n\t// Variables \r\n\t//-----------------------------------------------------------------------------------\t\t\r\n\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\t\r\n\tpublic function new() \r\n\t{\r\n\t\tdata = new Map<String,BindDataValue>();\r\n\t}\t\r\n\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\t\r\n\tpublic function setValue(key:String, value:Dynamic, ?meta:Dynamic)\r\n\t{\r\n\t\tif (key == null)\r\n\t\t\treturn;\r\n\t\t\r\n\t\tif (meta == null)\r\n\t\t\tdata.set(key, {value:value, index:length()});\r\n\t\telse\r\n\t\t\tdata.set(key, {value:value, meta:meta, index:length()});\r\n\t\t\t\r\n\t\tif (onBindEventChange != null)\r\n\t\t\tonBindEventChange(key, value);\r\n\t\t\t\r\n\t\t//dispatchEvent(new BindDataEvent(BindDataEvent.CHANGE, key, value, false, false));\r\n\t}\r\n\t\r\n\tpublic function getValue(key:String):Dynamic\r\n\t{\r\n\t\tif (key == null)\r\n\t\t\treturn null;\r\n\t\t\t\r\n\t\tif (data.exists(key))\r\n\t\t{\r\n\t\t\tvar bdv:BindDataValue = data.get(key);\r\n\t\t\treturn bdv.value;\r\n\t\t}\r\n\t\telse\r\n\t\t\treturn null;\r\n\t}\r\n\t\r\n\tpublic function hasValue(key:String):Bool\r\n\t{\r\n\t\tif (key == null)\r\n\t\t\treturn false;\r\n\t\t\t\r\n\t\treturn data.exists(key);\r\n\t}\r\n\t\r\n\tpublic function removeValue(key:String):Bool\r\n\t{\r\n\t\tif (key == null)\r\n\t\t\treturn false;\r\n\t\t\t\r\n\t\treturn data.remove(key);\r\n\t}\r\n\t\r\n\tpublic function getByIndex(ind:Int):Dynamic\r\n\t{\r\n\t\tfor (i in data.keys()) \r\n\t\t{\r\n\t\t\tif (data.get(i).index == ind)\r\n\t\t\t\treturn data.get(i).value;\t\t\t\t\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\tpublic function length():Int\r\n\t{\r\n\t\tvar len = 0;\r\n\t\tfor (i in data.keys()) \r\n\t\t{\r\n\t\t\tlen++;\r\n\t\t}\r\n\t\treturn len;\r\n\t}\r\n\t\r\n\tpublic function clear()\r\n\t{\r\n\t\tfor (i in data.keys()) \r\n\t\t{\r\n\t\t\tdata.remove(i);\r\n\t\t}\r\n\t}\r\n\t\r\n\tpublic function toString()\r\n\t{\r\n\t\tvar rStr:String = \"BindData:\";\r\n\t\tfor (i in data.keys()) \r\n\t\t{\r\n\t\t\trStr += \"\\n\" + i + \"  \" + data.get(i);\r\n\t\t}\r\n\t\treturn rStr;\r\n\t}\r\n\t\r\n\tpublic function dispose()\r\n\t{\r\n\t\tclear();\r\n\t\tdata = null;\r\n\t\tonBindEventChange = null;\r\n\t}\r\n\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n}\r\n\r\ntypedef BindDataValue =\r\n{\r\n\t\t\t\tvar value\t: Dynamic;\r\n\t\t\t\tvar index\t: Int;\r\n\t@:optional \tvar meta\t: Dynamic;\r\n}","package no.logic.kha.uix;\r\n\r\nimport haxe.Constraints.Function;\r\nimport haxe.Timer;\r\nimport no.logic.kha.uix.console.UIXConsole;\r\nimport no.logic.kha.uix.core.BindData;\r\nimport no.logic.kha.uix.core.UIXAssets;\r\nimport no.logic.kha.uix.core.loading.UIXCache;\r\nimport no.logic.kha.uix.debug.DebugInspector;\r\nimport no.logic.kha.uix.kontentum.Kontentum;\r\n\r\n/**\r\n * ...\r\n * @author Tommy S.\r\n */\r\n\r\n/////////////////////////////////////////////////////////////////////////////////////////\r\n \r\ntypedef UIXEventItem =\r\n{\r\n\t\t\t\tvar eventName\t\t\t: String;\r\n\t\t\t\tvar eventNameUID\t\t: String;\r\n\t@:optional\tvar callback\t\t\t: Function;\r\n\t@:optional\tvar properties\t\t\t: Dynamic;\r\n\t@:optional\tvar scope\t\t\t\t: Dynamic;\r\n}\r\n \r\n/////////////////////////////////////////////////////////////////////////////////////////\r\n\r\nclass UIX\r\n{\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\t\r\n\t//===================================================================================\r\n\t//===================================================================================\r\n\t// Consts \r\n\t//-----------------------------------------------------------------------------------\r\n\r\n\tstatic public inline var \t\tDISPOSE\t\t\t: String \t= \"UIX_DISPOSE\";\r\n\r\n\t//===================================================================================\r\n\t// Properties \r\n\t//-----------------------------------------------------------------------------------\r\n\t\r\n\tpublic static var variables\t\t: BindData\t\t\t\t\t\t= new BindData();\r\n\tstatic var trackedVariables\t\t: Map<String, Any>\t\t\t\t= new Map<String, Any>();\r\n\tstatic var trackedAssetCodes\t: Map<String, Any>\t\t\t\t= new Map<String, Any>();\r\n\tstatic var trackedElements\t\t: Map<String, (Any)->Void>\t\t= new Map<String, (Any)->Void>();\r\n\t\r\n\tstatic var eventPool\t\t\t: Map<String, UIXEventItem>\t\t= new Map<String, UIXEventItem>();\r\n\r\n\t//===================================================================================\r\n\t// Declarations \r\n\t//-----------------------------------------------------------------------------------\r\n\r\n\tpublic static var assets\t\t\t: UIXAssets\t\t\t\t\t= new UIXAssets();\r\n\tstatic public var c(get, null)\t\t: UIXConsole;\r\n\tstatic public var cache\t\t\t\t: UIXCache\t\t\t\t\t= new UIXCache();\r\n\r\n\t//===================================================================================\r\n\t// Variables \r\n\t//-----------------------------------------------------------------------------------\t\t\r\n\r\n\tstatic var _intCount\t\t\t\t: Int\t\t\t\t= 0;\r\n\tstatic var bindCodeCount\t\t\t: Int\t\t\t\t= 0;\r\n\t\r\n\tstatic var initiated\t\t\t\t: Bool\t\t\t\t= false;\r\n\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\t\r\n\tstatic function init()\r\n\t{\r\n\t\tinitiated = true;\r\n\t\tvariables.onBindEventChange = onVariableChanged;\r\n\t\t@:privateAccess assets.assets.onBindEventChange = onAssetChanged;\r\n\t}\r\n\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\t\r\n\tpublic static function add(eventName:String, callback:Function, ?properties:Dynamic=null, ?scope:Dynamic=null):UIXEventItem\r\n\t{\r\n\t\t_intCount++;\r\n\t\tvar nen = eventName+\"__$ic\" + Std.string(_intCount);\r\n\t\teventPool.set(nen, { eventName:eventName, eventNameUID:nen, callback:callback, properties:properties, scope:scope } );\r\n\t\treturn eventPool.get(nen);\r\n\t}\t\r\n\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\t\r\n\tpublic static function remove(eventName:String, ?callback:Function, ?scope:Dynamic)\r\n\t{\r\n\t\tfor ( key in eventPool.keys() )\r\n\t\t{\r\n\t\t\tif (eventPool[key].scope == scope || (eventPool[key].scope==null && scope==null))\r\n\t\t\t{\r\n\t\t\t\tvar sk = key.split(\"__$ic\")[0];\r\n\t\t\t\tif (callback != null)\r\n\t\t\t\t{\r\n\t\t\t\t\tif (sk == eventName && eventPool[key].callback == callback)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\teventPool[key] = null;\r\n\t\t\t\t\t\teventPool.remove(key);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse if (sk == eventName)\r\n\t\t\t\t{\r\n\t\t\t\t\teventPool[key] = null;\r\n\t\t\t\t\teventPool.remove(key);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\t\r\n\tpublic static function dispatch(eventName:String, ?properties:Dynamic=null, ?scope:Dynamic=null, ?delay:Float=0):Class<UIX>\r\n\t{\r\n\t\tif (delay == 0)\r\n\t\t\tdoDispatch(eventName, properties, scope);\r\n\t\telse\r\n\t\t{\r\n\t\t\tTimer.delay(function()\r\n\t\t\t{\r\n\t\t\t\tdoDispatch(eventName, properties, scope);\r\n\t\t\t\t\r\n\t\t\t},Std.int(delay*1000));\r\n\t\t}\r\n\t\treturn UIX;\r\n\t}\r\n\t\r\n\tstatic function doDispatch(eventName:String, ?properties:Dynamic=null, ?scope:Dynamic=null) \r\n\t{\r\n\t\tfor ( key in eventPool.keys() )\r\n\t\t{\r\n\t\t\tif (eventPool[key] != null)\r\n\t\t\t{\r\n\t\t\t\tvar sk = key.split(\"__$ic\")[0];\r\n\t\t\t\tif (sk == eventName)\r\n\t\t\t\t{\r\n\t\t\t\t\tif (scope==null && eventPool[key].scope == null && eventPool[key].callback!=null)\r\n\t\t\t\t\t\teventPool[key].callback(properties);\r\n\t\t\t\t}\r\n\t\t\t\telse if (eventPool[key].scope==scope)\r\n\t\t\t\t{\r\n\t\t\t\t\tvar sk = key.split(\"__$ic\")[0];\r\n\t\t\t\t\tif (sk == eventName)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tif (eventPool[key].callback!=null)\r\n\t\t\t\t\t\t\teventPool[key].callback(properties);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t  \r\n\t}\r\n\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\t\r\n\tstatic public function bindAsset(bindCode:String, callback:(Any)->Void):String\r\n\t{\r\n\t\tif (!initiated)\r\n\t\t\tinit();\r\n\t\t\t\r\n\t\tif (bindCode != null)\r\n\t\t{\r\n\t\t\tvar bindID:String = bindCode+getTCode();\r\n\t\t\ttrackedAssetCodes.set(bindID, callback);\t\t\r\n\t\t\treturn bindID;\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\t\r\n\tstatic public function removeBindAsset(bindID:String)\r\n\t{\r\n\t\tif (bindID != null)\r\n\t\t{\r\n\t\t\tif (trackedAssetCodes.exists(bindID))\r\n\t\t\t\ttrackedAssetCodes.remove(bindID);\r\n\t\t\t\t\r\n\t\t}\r\n\t}\r\n\t\r\n\tstatic public function bindVar(bindCode:String, callback:(Any)->Void):String\r\n\t{\r\n\t\tif (!initiated)\r\n\t\t\tinit();\r\n\t\t\t\r\n\t\tif (bindCode != null)\r\n\t\t{\r\n\t\t\tvar bindID:String = bindCode+getTCode();\r\n\t\t\ttrackedElements.set(bindID, callback);\t\t\r\n\t\t\treturn bindID;\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\t\r\n\tstatic public function removeBindVar(bindID:String)\r\n\t{\r\n\t\tif (bindID != null)\r\n\t\t{\r\n\t\t\tif (trackedElements.exists(bindID))\r\n\t\t\t\ttrackedElements.remove(bindID);\r\n\t\t\t\t\r\n\t\t}\r\n\t}\r\n\t\r\n\tstatic public function removeAllVarBindings()\r\n\t{\r\n\t\tfor (variable in trackedVariables.keys()) \r\n\t\t{\r\n\t\t\ttrackedVariables.remove(variable);\r\n\t\t}\r\n\t}\r\n\t\r\n\tstatic public function removeAllAssetBindings()\r\n\t{\r\n\t\tfor (asset in trackedAssetCodes.keys()) \r\n\t\t{\r\n\t\t\ttrackedAssetCodes.remove(asset);\r\n\t\t}\r\n\t}\r\n\t\r\n\tstatic public function removeAllBindings()\r\n\t{\r\n\t\tremoveAllVarBindings();\r\n\t\tremoveAllAssetBindings();\r\n\t\tfor (code in trackedElements.keys()) \r\n\t\t{\r\n\t\t\ttrackedElements.remove(code);\r\n\t\t}\r\n\t}\r\n\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\r\n\tstatic public function setVar(varName:String, value:Dynamic) \r\n\t{\r\n\t\tif (!initiated)\r\n\t\t\tinit();\r\n\t\t\t\r\n\t\tvariables.setValue(varName, value);\r\n\t}\r\n\t\r\n\tstatic public function getVar(varName:String):Dynamic\r\n\t{\r\n\t\treturn variables.getValue(varName);\r\n\t}\r\n\t\r\n\tstatic public function hasVar(varName:String):Bool\r\n\t{\r\n\t\treturn variables.hasValue(varName);\r\n\t}\r\n\t\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\r\n\tstatic public function getText(assetCode:String, ?lang:String):String\r\n\t{\r\n\t\treturn assets.getAsset(assetCode, \"text\", Kontentum.i.getLangType(lang));\r\n\t}\r\n\r\n\tstatic public function getAsset(assetCode:String, ?type:String, ?lang:String):String\r\n\t{\r\n\t\treturn assets.getAsset(assetCode, type, Kontentum.i.getLangType(lang));\r\n\t}\r\n\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\t\r\n\tstatic function onVariableChanged(key:String, value:Any)\r\n\t{\r\n\t\tfor (uid in trackedElements.keys()) \r\n\t\t{\r\n\t\t\tvar pUID:String = uid.split(\"_UIX_\")[0];\r\n\t\t\tif (pUID==key)\r\n\t\t\t\trunVarBinding(uid, key, value);\r\n\t\t\t\t\r\n\t\t}\r\n\t}\t\r\n\t\r\n\tstatic function onAssetChanged(key:String, value:Any)\r\n\t{\r\n\t\tfor (uid in trackedAssetCodes.keys()) \r\n\t\t{\r\n\t\t\tif (trackedAssetCodes.get(uid) == key)\r\n\t\t\t{\r\n\t\t\t\trunAssetBinding(uid, key, value);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\tstatic function runVarBinding(uid:String, valueName:String=null, value:Any=null) \r\n\t{\r\n\t\tvar callBack:(Any)->Void = trackedElements.get(uid);\r\n\t\tif (callBack!=null)\r\n\t\t\tcallBack(value);\r\n\t}\r\n\t\r\n\tstatic function runAssetBinding(uid:String, valueName:String=null, value:Any=null) \r\n\t{\r\n\t\tvar callBack:(Any)->Void = trackedAssetCodes.get(uid);\r\n\t\tif (callBack!=null)\r\n\t\t\tcallBack(value);\r\n\t}\r\n\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\t\r\n\tstatic function getTCode():String \r\n\t{\r\n\t\treturn \"_UIX_bind_\"+bindCodeCount++;\r\n\t}\t\r\n\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\t\r\n\tpublic static function dispose()\r\n\t{\r\n\t\tremoveAllBindings();\r\n\t\tvariables.clear();\r\n\t\t//assets.dispose();\r\n\t\t\r\n\t\tfor (p in eventPool.keys()) \r\n\t\t\teventPool.remove(p);\r\n\t\t\t\r\n\t\t//eventPool = null;\r\n\t\t//variables = null;\r\n\t\t//assetCodes = null;\r\n\t\tinitiated = false;\r\n\t\t//world = null;\r\n\t\t\r\n\t\tUIX.dispatch(UIX.DISPOSE, null, UIX);\r\n\t\tUIX.remove(UIX.DISPOSE,null,UIX);\r\n\t}\r\n\t\r\n\tstatic function get_c():UIXConsole \r\n\t{\r\n\t\treturn UIXConsole.i;\r\n\t}\t\r\n\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n}\t\r\n\r\nclass UIXGlobals\r\n{\r\n\tpublic static var VERSION = \"1.0\";\r\n\r\n\tpublic static function debug(value:Dynamic)\r\n\t{\r\n\t\tUIXConsole.i.debug(value);\r\n\t}\r\n\t\r\n\tpublic static function log(value:Dynamic)\r\n\t{\r\n\t\tDebugInspector.i.log(value);\r\n\t}\r\n\t\r\n\tpublic static function warning(value:Dynamic)\r\n\t{\r\n\t\tUIXConsole.i.warning(value);\r\n\t}\r\n\r\n\t\r\n\tpublic static function report(value:Dynamic)\r\n\t{\r\n\t\tDebugInspector.i.report(value);\r\n\t}\r\n\r\n\tstatic public function setVar(varName:String, value:Dynamic) \r\n\t{\r\n\t\tUIX.setVar(varName, value);\r\n\t}\r\n\t\r\n\tstatic public function getVar(varName:String):Dynamic\r\n\t{\r\n\t\treturn UIX.getVar(varName);\r\n\t}\r\n}\t\r\n\r\n\r\n","package no.logic.kha.uix.utils;\r\nimport haxe.crypto.Base64;\r\nimport kha.Blob;\r\nimport kha.Font;\r\nimport kha.Kravur;\r\n\r\nclass FontUtils \r\n{\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\t\r\n\tpublic static function fontFromBase64(base64Font:String):Font \r\n\t{\r\n\t\tif (base64Font == null)\r\n\t\t\treturn null;\r\n\t\t\t\r\n\t\tvar f:Font = new Kravur(@:privateAccess new Blob(Base64.decode(base64Font)));\r\n\t\treturn f;\r\n\t}\r\n\t\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n}\r\n\t","package no.logic.kha.uix.audio.modplayer;\r\n\r\n#if kha_js\r\n\r\nimport haxe.io.UInt8Array;\r\nimport js.html.XMLHttpRequest;\r\nimport js.html.audio.AudioContext;\r\nimport js.html.audio.AudioProcessingEvent;\r\nimport js.html.audio.BiquadFilterNode;\r\nimport js.lib.Float32Array;\r\n\r\n#end\r\n\r\n/**\r\n * ...\r\n * @author Tommy S. - Ported from firehawk/tda\r\n */\r\nclass ModPlayer \r\n{\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\t\r\n\t//===================================================================================\r\n\t// Properties\r\n\t//-----------------------------------------------------------------------------------\r\n\r\n\t#if kha_js\r\n\t\r\n\tvar supportedformats\t: Array<String>\t\t\t= ['mod', 's3m', 'xm'];\r\n\r\n\tvar url\t\t\t\t\t: String\t\t\t\t= \"\";\r\n\tvar format\t\t\t\t: String\t\t\t\t= \"s3m\";\r\n\r\n\tvar state(default, set)\t: String\t\t\t\t= \"initializing..\";\r\n\tvar request\t\t\t\t: XMLHttpRequest;\r\n\r\n\tvar loading\t\t\t\t: Bool\t\t\t\t\t= false;\r\n\tvar playing\t\t\t\t: Bool\t\t\t\t\t= false;\r\n\tvar paused\t\t\t\t: Bool\t\t\t\t\t= false;\r\n\tvar repeat\t\t\t\t: Bool\t\t\t\t\t= false;\r\n\r\n\tvar separation\t\t\t: Null<Int>\t\t\t\t= 1;\r\n\tvar mixval\t\t\t\t: Float\t\t\t\t\t= 8.0;\r\n\r\n\tvar amiga500\t\t\t: Bool\t\t\t\t\t= false;\r\n\r\n\tvar filter\t\t\t\t: Bool\t\t\t\t\t= false;\r\n\tvar endofsong\t\t\t: Bool\t\t\t\t\t= false;\r\n\r\n\tvar autostart\t\t\t: Bool\t\t\t\t\t= false;\r\n\tvar bufferstodelay\t\t: Int\t\t\t\t\t= 4; // adjust this if you get stutter after loading new song\r\n\tvar delayfirst\t\t\t: Float\t\t\t\t\t= 0;\r\n\tvar delayload\t\t\t: Float\t\t\t\t\t= 0;\r\n\r\n\tvar buffer\t\t\t\t: Int\t\t\t\t\t= 0;\r\n\tvar mixerNode\t\t\t: Dynamic;\r\n\tvar context\t\t\t\t: AudioContext;\r\n\tvar samplerate\t\t\t: Float\t\t\t\t\t= 44100;\r\n\tvar bufferlen\t\t\t: Int\t\t\t\t\t= 4096;\r\n\tvar row\t\t\t\t\t: Int;\r\n\r\n\t// format-specific player\r\n\tvar player\t\t\t\t: Protracker\t\t\t= null;\r\n\t//var player\t\t\t\t: Dynamic\t\t\t= null;\r\n\r\n\t// read-only data from player class\r\n\tvar title\t\t\t\t: String\t\t\t\t= \"\";\r\n\tvar signature\t\t\t: String\t\t\t\t= \"....\";\r\n\tvar songlen\t\t\t\t: Int\t\t\t\t\t= 0;\r\n\tvar channels\t\t\t: Int\t\t\t\t\t= 0;\r\n\tvar patterns\t\t\t: Int\t\t\t\t\t= 0;\r\n\tvar samplenames\t\t\t: Array<String>\t\t\t= [];\t\t\r\n\tvar lowpassNode\t\t\t: BiquadFilterNode;\r\n\tvar filterNode\t\t\t: BiquadFilterNode;\r\n\tvar position\t\t\t: Int;\r\n\t\r\n\tpublic var speed\t\t: Int;\r\n\tpublic var bpm\t\t\t: Int;\r\n\tpublic var chvu\t\t\t: Float32Array\t\t\t= new Float32Array(32);\r\n\r\n\t#end\r\n\t\r\n\t// Event callbacks //////////////////////////////////////////////////////////////////\r\n\t\r\n\tpublic var onReady\t\t: ()->Void;\r\n\tpublic var onPlay\t\t: ()->Void;\r\n\tpublic var onStop\t\t: ()->Void;\r\n\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\t\r\n\tpublic function new()\r\n\t{\r\n\t}\r\n\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\t\r\n\t//===================================================================================\r\n\t// Load module from url into local buffer\r\n\t//-----------------------------------------------------------------------------------\r\n\t\r\n\tpublic function load(url:String):Bool\r\n\t{\r\n\t\t#if kha_js\r\n\t\t\r\n\t\t// try to identify file format from url and create a new\r\n\t\t// player class for it\r\n\t\tthis.url=url;\r\n\t\tvar ext=StringTools.trim(url.split('.').pop().toLowerCase());\r\n\t\tif (supportedformats.indexOf(ext) ==-1)\r\n\t\t{\r\n\t\t\t// unknown extension, maybe amiga-style prefix?\r\n\t\t\text=StringTools.trim(url.split('/').pop().split('.').shift().toLowerCase());\r\n\t\t\tif (supportedformats.indexOf(ext) ==-1)\r\n\t\t\t{\r\n\t\t\t\t// ok, give up\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\t\tformat=ext;\r\n\r\n\t\tswitch (ext)\r\n\t\t{\r\n\t\t\tcase 'mod':\r\n\t\t\t\tplayer=new Protracker();\r\n\t\t\t//case 's3m':\r\n\t\t\t\t//player==new Screamtracker();\r\n\t\t\t//case 'xm':\r\n\t\t\t\t//player==new Fasttracker();\r\n\t\t\tdefault:\r\n\t\t}\r\n\r\n\t\t//player.onReady=loadSuccess;\r\n\r\n\t\tstate=\"loading..\";\r\n\t\tvar request = new XMLHttpRequest();\r\n\t\trequest.open(\"GET\", url, true);\r\n\t\trequest.responseType = cast \"arraybuffer\";\r\n\t\tloading = true;\r\n\t\t\r\n\t\trequest.onprogress = function(oe)\r\n\t\t{\r\n\t\t\tstate=\"loading (\"+Math.floor(100*oe.loaded/oe.total)+\"%)..\";\r\n\t\t};\r\n\t\t\r\n\t\trequest.onload = function()\r\n\t\t{\r\n\t\t\tvar buffer=new UInt8Array(request.response);\r\n\t\t\tstate=\"parsing..\";\r\n\t\t\tif (player.parse(buffer))\r\n\t\t\t{\r\n\t\t\t\t// copy static data from player\r\n\t\t\t\ttitle = player.title;\r\n\t\t\t\tsignature=player.signature;\r\n\t\t\t\tsonglen=player.songlen;\r\n\t\t\t\tchannels=player.channels;\r\n\t\t\t\tpatterns=player.patterns;\r\n\t\t\t\tfilter=player.filter;\r\n\t\t\t\t\r\n\t\t\t\tif (context!=null)\r\n\t\t\t\t\tsetfilter(filter);\r\n\t\t\t\t\r\n\t\t\t\tmixval=player.mixval; // usually 8.0, though\r\n\t\t\t\tsamplenames.resize(32);\r\n\t\t\t\t\r\n\t\t\t\tfor (i in 0...32) \r\n\t\t\t\t\tsamplenames[i]=\"\";\r\n\t\t\t\t\r\n\t\t\t\tfor (i in 0...32) \r\n\t\t\t\t{\r\n\t\t\t\t\tif (format == 'xm' || format == 'it')\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t//for (p in 0...player.instrument.length) \r\n\t\t\t\t\t\t\t//samplenames[p] = player.instrument[i].name;\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t//Not supported yet...only mod for now\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tfor (p in 0...player.sample.length)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tif (player.sample[i]!=null)\r\n\t\t\t\t\t\t\t\tsamplenames[p] = player.sample[i].name;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tstate=\"ready.\";\r\n\t\t\t\tloading = false;\r\n\t\t\t\t\r\n\t\t\t\tif (onReady!=null)\r\n\t\t\t\t\tonReady();\r\n\t\t\t\r\n\t\t\t\tif (autostart)\r\n\t\t\t\t\tplay();\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tstate=\"error!\";\r\n\t\t\t\tloading=false;\r\n\t\t\t}\r\n\t\t}\r\n\t\trequest.send();\r\n\t\treturn true;\r\n\t\t\r\n\t\t#else\r\n\t\treturn false;\r\n\t\t#end\r\n\t}\r\n\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\t\r\n\t//===================================================================================\r\n\t// Play loaded and parsed module with webaudio context\r\n\t//-----------------------------------------------------------------------------------\r\n\t\r\n\tpublic function play():Bool\r\n\t{\r\n\t\t#if kha_js\r\n\t\t\r\n\t\tif (loading) \r\n\t\t\treturn false;\r\n\t\t\t\r\n\t\tif (player != null)\r\n\t\t{\r\n\t\t\tif (context == null) \r\n\t\t\t\tcreateContext();\r\n\t\t\t\t\r\n\t\t\tplayer.samplerate=samplerate;\r\n\t\t\tif (context != null)\r\n\t\t\t\tsetfilter(player.filter);\r\n\r\n\t\t\tif (player.paused)\r\n\t\t\t{\r\n\t\t\t\tplayer.paused=false;\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\r\n\t\t\tendofsong=false;\r\n\t\t\tplayer.endofsong=false;\r\n\t\t\tplayer.paused=false;\r\n\t\t\tplayer.initialize();\r\n\t\t\tplayer.flags=1+2;\r\n\t\t\tplayer.playing=true;\r\n\t\t\tplaying = true;\r\n\t\t\t\r\n\t\t\tchvu = new Float32Array(player.channels);\r\n\t\t\t\r\n\t\t\tfor (i in 0...player.channels) \r\n\t\t\t\tchvu[i]=0.0;\r\n\t\t\t\r\n\t\t\tif (onPlay!=null)\r\n\t\t\t\tonPlay();\r\n\r\n\t\t\tplayer.delayfirst=bufferstodelay;\r\n\t\t\treturn true;\r\n\t\t} \r\n\t\telse\r\n\t\t\treturn false;\r\n\t\t\t\r\n\t\t#else\r\n\t\treturn false;\r\n\t\t#end\r\n\t\t\r\n\t}\r\n\t\r\n\t// Playback functions ///////////////////////////////////////////////////////////////\r\n\t\r\n\t// pause playback\r\n\tpublic function pause()\r\n\t{\r\n\t\t#if kha_js\r\n\t\t\r\n\t\tif (player!=null)\r\n\t\t{\r\n\t\t\tif (player.paused)\r\n\t\t\t{\r\n\t\t\t\tplayer.paused=true;\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tplayer.paused=false;\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\t#end\r\n\t}\r\n\r\n\t// stop playback\r\n\tpublic function stop()\r\n\t{\r\n\t\t#if kha_js\r\n\t\t\r\n\t\tpaused=false;\r\n\t\tplaying=false;\r\n\t\tif (player != null)\r\n\t\t{\r\n\t\t\tplayer.paused=false;\r\n\t\t\tplayer.playing=false;\r\n\t\t\tplayer.delayload=1;\r\n\t\t}\r\n\t\t\r\n\t\tif (onStop!=null)\r\n\t\t\tonStop();\r\n\t\t\t\r\n\t\t#end\r\n\t}\r\n\r\n\t// stop playing but don't call callbacks\r\n\tpublic function stopaudio(st:Bool)\r\n\t{\r\n\t\t#if kha_js\r\n\t\t\r\n\t\tif (player!=null)\r\n\t\t\tplayer.playing = st;\r\n\t\t\t\r\n\t\t#end\r\n\t}\r\n\r\n\r\n\t// jump positions forward/back\r\n\tpublic function jump(step:Int)\r\n\t{\r\n\t\t#if kha_js\r\n\t\t\r\n\t\tif (player!=null)\r\n\t\t{\r\n\t\t\tplayer.tick=0;\r\n\t\t\tplayer.row=0;\r\n\t\t\tplayer.position+=step;\r\n\t\t\tplayer.flags = 1 + 2;\r\n\t\t\t\r\n\t\t\tif (player.position < 0)\r\n\t\t\t\tplayer.position=0;\r\n\t\t\tif (player.position >= player.songlen)\r\n\t\t\t\tstop();\r\n\t\t}\r\n\t\tposition=player.position;\r\n\t\trow = player.row;\r\n\t\t\r\n\t\t#end\r\n\t}\r\n\r\n\t// set whether module repeats after songlen\r\n\tpublic function setrepeat(rep:Bool)\r\n\t{\r\n\t\t#if kha_js\r\n\t\t\r\n\t\trepeat=rep;\r\n\t\tif (player!=null) \r\n\t\t\tplayer.repeat=rep;\r\n\r\n\t\t#end\r\n\t}\r\n\r\n\t// set stereo separation mode (0=standard, 1=65/35 mix, 2=mono)\r\n\tpublic function setseparation(sep:Int)\r\n\t{\r\n\t\t#if kha_js\r\n\t\t\r\n\t\tseparation=sep;\r\n\t\tif (player != null)\r\n\t\t\tplayer.separation=sep;\r\n\r\n\t\t#end\r\n\t}\r\n\r\n\t// set autostart to play immediately after loading\r\n\tpublic function setautostart(st:Bool)\r\n\t{\r\n\t\t#if kha_js\r\n\t\tautostart=st;\r\n\t\t#end\r\n\t}\r\n\r\n\t// Effect functions /////////////////////////////////////////////////////////////////\r\n\r\n\t#if kha_js\t\r\n\t\r\n\t// set amiga model - changes lowpass filter state\r\n\tpublic function setamigamodel(amiga:String)\r\n\t{\r\n\t\tif (amiga == \"600\" || amiga == \"1200\" || amiga == \"4000\")\r\n\t\t{\r\n\t\t\tamiga500=false;\r\n\t\t\tif (filterNode != null)\r\n\t\t\t\tfilterNode.frequency.value=22050;\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tamiga500=true;\r\n\t\t\tif (filterNode != null)\r\n\t\t\t\tfilterNode.frequency.value=6000;\r\n\t\t}\r\n\t}\r\n\r\n\t// amiga \"LED\" filter\r\n\tpublic function setfilter(f:Bool)\r\n\t{\r\n\t\tif (f)\r\n\t\t\tlowpassNode.frequency.value = 3275;\r\n\t\telse\r\n\t\t\tlowpassNode.frequency.value = 24000;//28867;\r\n\t\t\r\n\t\tfilter=f;\r\n\t\tif (player != null)\r\n\t\t\tplayer.filter=f;\r\n\t}\r\n\r\n\t// are there E8x sync events queued?\r\n\tpublic function hassyncevents()\r\n\t{\r\n\t\tif (player!=null) \r\n\t\t\treturn player.syncqueue.length != 0;\r\n\t\t\t\r\n\t\treturn false;\r\n\t}\r\n\r\n\t// pop oldest sync event nybble from the FIFO queue\r\n\tpublic function popsyncevent()\r\n\t{\r\n\t\tif (player!=null)\r\n\t\t\treturn player.syncqueue.pop();\r\n\t\t\t\r\n\t\treturn null;\r\n\t}\r\n\t\r\n\t#end\r\n\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\t\r\n\t//===================================================================================\r\n\t// Get patterndata info\r\n\t//-----------------------------------------------------------------------------------\r\n\t\r\n\t// get current pattern number\r\n\tpublic function currentpattern()\r\n\t{\r\n\t\t#if kha_js\r\n\t\t\r\n\t\tif (player != null)\r\n\t\t\treturn player.patterntable[player.position];\r\n\t\t\t\r\n\t\treturn null;\r\n\t\t\r\n\t\t#else\r\n\t\treturn null;\r\n\t\t#end\r\n\t}\r\n\t\r\n\t// get current pattern in standard unpacked format (note, sample, volume, command, data)\r\n\t// note: 254=noteoff, 255=no note\r\n\t// sample: 0=no instrument, 1..255=sample number\r\n\t// volume: 255=no volume set, 0..64=set volume, 65..239=ft2 volume commands\r\n\t// command: 0x2e=no command, 0..0x24=effect command\r\n\t// data: 0..255\r\n\tpublic function patterndata(pn:Int):UInt8Array\r\n\t{\r\n\t\tvar patt:UInt8Array = null;\r\n\r\n\t\t#if kha_js\r\n\r\n\t\tvar i:Int = 0;\r\n\t\tvar c:Int = 0;\r\n\t\t\r\n\t\tif (format == 'mod')\r\n\t\t{\r\n\t\t\tpatt = new UInt8Array(player.pattern_unpack[pn]);\r\n\t\t\t\r\n\t\t\tfor (i in 0...64)\r\n\t\t\t{\r\n\t\t\t\tfor (c in 0...player.channels) \r\n\t\t\t\t{\r\n\t\t\t\t\tif (patt[i * 5 * channels + c * 5 + 3] == 0 && patt[i * 5 * channels + c * 5 + 4] == 0)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tpatt[i*5*channels+c*5+3]=0x2e;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tpatt[i*5*channels+c*5+3]+=0x37;\r\n\t\t\t\t\t\tif (patt[i * 5 * channels + c * 5 + 3] < 0x41) \r\n\t\t\t\t\t\t\tpatt[i*5*channels+c*5+3]-=0x07;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if (format == 's3m')\r\n\t\t{\r\n\t\t\tpatt = new UInt8Array(player.pattern[pn]);\r\n\t\t\t\r\n\t\t\tfor (i in 0...64) \r\n\t\t\t{\r\n\t\t\t\tfor(c in 0...player.channels) \r\n\t\t\t\t{\r\n\t\t\t\t\tif (patt[i * 5 * channels + c * 5 + 3] == 255)\r\n\t\t\t\t\t\tpatt[i*5*channels+c*5+3]=0x2e;\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\tpatt[i*5*channels+c*5+3]+=0x40;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\t\telse if (format == 'xm')\r\n\t\t{\r\n\t\t\tpatt=new UInt8Array(player.pattern[pn]);\r\n\t\t\t\r\n\t\t\tfor (i in 0...player.patternlen[pn]) \r\n\t\t\t{\r\n\t\t\t\tfor (c in 0...player.channels) \r\n\t\t\t\t{\r\n\t\t\t\t\tif (patt[i*5*channels+c*5+0]<97)\r\n\t\t\t\t\t\tpatt[i*5*channels+c*5+0]=(patt[i*5*channels+c*5+0]%12)|(Math.floor(patt[i*5*channels+c*5+0]/12)<<4);\r\n\t\t\t\t\t\t\r\n\t\t\t\t\tif (patt[i * 5 * channels + c * 5 + 3] == 255) \r\n\t\t\t\t\t\tpatt[i*5*channels+c*5+3]=0x2e;\r\n\t\t\t\t\telse\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tif (patt[i * 5 * channels + c * 5 + 3] < 0x0a)\r\n\t\t\t\t\t\t\tpatt[i*5*channels+c*5+3]+=0x30;\r\n\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\tpatt[i*5*channels+c*5+3]+=0x41-0x0a;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\t#end;\r\n\t\t\r\n\t\treturn patt;  \r\n\t}\r\n\r\n\t// check if a channel has a note on\r\n\tpublic function noteon(ch:Int):Int\r\n\t{\r\n\t\t#if kha_js\r\n\r\n\t\tif (ch >= channels)\r\n\t\t\treturn 0;\r\n\t\t\t\r\n\t\treturn player.channel[ch].noteon;\r\n\t\t\r\n\t\t#end\r\n\t}\r\n\r\n\t// get currently active sample on channel\r\n\tpublic function currentsample(ch:Int):Float\r\n\t{\r\n\t\t#if kha_js\r\n\r\n\t\tif (ch >= channels)\r\n\t\t\treturn 0;\r\n\t  \r\n\t\tif (format == \"xm\" || this.format == \"it\") \r\n\t\t\treturn player.channel[ch].voiceperiod;\r\n\t\t\r\n\t\treturn player.channel[ch].sample;\r\n\t\t\r\n\t\t#end\r\n\t}\r\n\r\n\t// get length of currently playing pattern\r\n\tpublic function currentpattlen():Int\r\n\t{\r\n\t\t#if kha_js\r\n\t\t\r\n\t\tif (format == \"mod\" || format == \"s3m\")\r\n\t\t\treturn 64;\r\n\t\t\r\n\t\treturn player.patternlen[player.patterntable[player.position]];\r\n\t\t\r\n\t\t#else\r\n\t\treturn 0;\r\n\t\t#end\r\n\t}\r\n\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\t\r\n\t#if kha_js\r\n\t\r\n\t//===================================================================================\r\n\t// Setup WebAudio - create the web audio context\r\n\t//-----------------------------------------------------------------------------------\r\n\t\r\n\tpublic function createContext()\r\n\t{\r\n\t\tif ( untyped __js__(\"typeof AudioContext !== 'undefined'\") )\r\n\t\t\tcontext = new AudioContext();\r\n\t\telse\r\n\t\t\tcontext = untyped __js__(\"new webkitAudioContext()\");\r\n\t\t\r\n\t\tsamplerate=context.sampleRate;\r\n\t\tbufferlen=(samplerate > 44100) ? 4096 : 2048;\r\n\r\n\t\t// Amiga 500 fixed filter at 6kHz. WebAudio lowpass is 12dB/oct, whereas\r\n\t\t// older Amigas had a 6dB/oct filter at 4900Hz.\r\n\t\tfilterNode=context.createBiquadFilter();\r\n\t\t\r\n\t\tif (amiga500)\r\n\t\t\tfilterNode.frequency.value=6000;\r\n\t\telse\r\n\t\t\tfilterNode.frequency.value=22050;\r\n\r\n\t\t// \"LED filter\" at 3275kHz - off by default\r\n\t\tlowpassNode=context.createBiquadFilter();\r\n\t\tsetfilter(filter);\r\n\r\n\t\t// mixer\r\n\t\t//if ( untyped __js__(\"typeof this.context.createJavaScriptNode === 'function'\"))\r\n\t\t\t//mixerNode = untyped __js__(\"context.createJavaScriptNode(bufferlen, 1, 2)\");\r\n\t\t//else\r\n\t\tmixerNode = context.createScriptProcessor(bufferlen, 1, 2);\r\n\t\t\t\r\n\t\tmixerNode.module=this;\r\n\t\tmixerNode.onaudioprocess = mix;\r\n\r\n\t\t// patch up some cables :)\r\n\t\tmixerNode.connect(filterNode);\r\n\t\tfilterNode.connect(lowpassNode);\r\n\t\tlowpassNode.connect(context.destination);\r\n\r\n\t\tmixerNode.onaudioprocess = mix;\r\n\t}\r\n\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\t\r\n\t//===================================================================================\r\n\t// Mix - scriptnode callback - pass through to player class\r\n\t//-----------------------------------------------------------------------------------\r\n\r\n\tpublic function mix(ape:AudioProcessingEvent)\r\n\t{\r\n\t\tvar mod:ModPlayer=null;\r\n\r\n\t\tif (untyped ape.srcElement)\r\n\t\t\tmod=untyped ape.srcElement.module;\r\n\t\t//else\r\n\t\t//{\r\n\t\t\t////untyped __js__(\"mod=module\");// \r\n\t\t//}\r\n\r\n\t\tif (mod.player!=null && mod.delayfirst == 0)\r\n\t\t{\r\n\t\t\tmod.player.repeat=mod.repeat;\r\n\r\n\t\t\tvar bufs=[ape.outputBuffer.getChannelData(0), ape.outputBuffer.getChannelData(1)];//Float32Array\r\n\t\t\tvar buflen=ape.outputBuffer.length;\r\n\t\t\tmod.player.mix(mod.player, bufs, buflen);\r\n\r\n\t\t\t// apply stereo separation and soft clipping\r\n\t\t\tvar outp:Float32Array = new Float32Array(2);\r\n\t\t\t\r\n\t\t\tfor (s in 0...buflen)\r\n\t\t\t{\r\n\t\t\t\toutp[0]=bufs[0][s];\r\n\t\t\t\toutp[1]=bufs[1][s];\r\n\r\n\t\t\t\t// a more headphone-friendly stereo separation\r\n\t\t\t\tif (cast mod.separation)\r\n\t\t\t\t{\r\n\t\t\t\t\tvar t=outp[0];\r\n\t\t\t\t\tif (mod.separation == 2)\r\n\t\t\t\t\t{ \t// mono\r\n\t\t\t\t\t\toutp[0]=outp[0]*0.5 + outp[1]*0.5;\r\n\t\t\t\t\t\toutp[1]=outp[1]*0.5 + t*0.5;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t{ \t// narrow stereo\r\n\t\t\t\t\t\toutp[0]=outp[0]*0.65 + outp[1]*0.35;\r\n\t\t\t\t\t\toutp[1]=outp[1]*0.65 + t*0.35;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t// scale down and soft clip\r\n\t\t\t\toutp[0] /= mod.mixval; \r\n\t\t\t\toutp[0]=0.5*(Math.abs(outp[0]+0.975)-Math.abs(outp[0]-0.975));\r\n\t\t\t\t\r\n\t\t\t\toutp[1] /= mod.mixval; \r\n\t\t\t\toutp[1]=0.5*(Math.abs(outp[1]+0.975)-Math.abs(outp[1]-0.975));\r\n\r\n\t\t\t\tbufs[0][s]=outp[0];\r\n\t\t\t\tbufs[1][s]=outp[1];\r\n\t\t\t}\r\n\r\n\t\t\tmod.row=mod.player.row;\r\n\t\t\tmod.position=mod.player.position;\r\n\t\t\tmod.speed=mod.player.speed;\r\n\t\t\tmod.bpm=mod.player.bpm;\r\n\t\t\tmod.endofsong=mod.player.endofsong;\r\n\r\n\t\t\tif (mod.player.filter != mod.filter)\r\n\t\t\t\tmod.setfilter(mod.player.filter);\r\n\r\n\t\t\tif (mod.endofsong && mod.playing)\r\n\t\t\t\tmod.stop();\r\n\r\n\t\t\tif (mod.delayfirst > 0)\r\n\t\t\t\tmod.delayfirst--;\r\n\t\t\t\t\r\n\t\t\tmod.delayload=0;\r\n\r\n\t\t\t// update this.chvu from player channel vu\r\n\t\t\t\r\n\t\t\tfor (i in 0...mod.player.channels)\r\n\t\t\t{\r\n\t\t\t\tmod.chvu[i]=mod.chvu[i]*0.25 + mod.player.chvu[i]*0.75;    \r\n\t\t\t\tmod.player.chvu[i]=0.0;\r\n\t\t\t}\r\n\t\t}\t\r\n\t\t\r\n\t}\r\n\r\n\t#end\r\n\t\r\n\t// Debug ////////////////////////////////////////////////////////////////////////////\r\n\t\r\n\tfunction set_state(value:String):String \r\n\t{\r\n\t\ttrace(value);\r\n\t\treturn state = value;\r\n\t}\r\n\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n}","package no.logic.kha.uix.audio.modplayer;\r\n\r\n#if kha_js\r\nimport js.html.audio.AudioContext;\r\nimport js.html.audio.BiquadFilterNode;\r\nimport no.logic.kha.uix.utils.bytes.ArrayBuffer;\r\nimport js.lib.Float32Array;\r\nimport haxe.io.UInt8Array;\r\n#end\r\n/**\r\n * ...\r\n * @author Tommy S. - Ported from firehawk/tda\r\n */\r\nclass Protracker \r\n{\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\t\r\n\t//===================================================================================\r\n\t// Protracker .mod player\r\n\t//-----------------------------------------------------------------------------------\r\n\t\r\n\t// Properties ///////////////////////////////////////////////////////////////////////\r\n\r\n\t#if kha_js\r\n\t\r\n\tpublic var playing\t\t\t: Bool\t\t\t\t\t= false;\r\n\tpublic var paused\t\t\t: Bool\t\t\t\t\t= false;\r\n\tpublic var repeat\t\t\t: Bool\t\t\t\t\t= false;\r\n\r\n\tpublic var filter\t\t\t: Bool\t\t\t\t\t= false;\r\n\tpublic var mixval\t\t\t: Float\t\t\t\t\t= 4.0;\r\n\tpublic var syncqueue\t\t: Array<Dynamic>\t\t= [];\r\n\tpublic var samplerate\t\t: Float\t\t\t\t\t= 44100;\r\n\tpublic var delayfirst\t\t: Int;\r\n\tpublic var delayload\t\t: Int;\r\n\tpublic var separation\t\t: Int;\r\n\tpublic var patternlen\t\t: Dynamic;\r\n\t\r\n\t// paula period values\r\n\tvar baseperiodtable\t\t\t: Float32Array\t\t\t= new Float32Array([\r\n\t\t856,808,762,720,678,640,604,570,538,508,480,453,\r\n\t\t428,404,381,360,339,320,302,285,269,254,240,226,\r\n\t\t214,202,190,180,170,160,151,143,135,127,120,113\r\n\t]);\r\n\r\n\t// finetune multipliers\r\n\tvar finetunetable\t\t\t: Float32Array\t\t\t= new Float32Array(16);\r\n\r\n\t// calc tables for vibrato waveforms\r\n\tvar vibratotable\t\t\t: Array<Float32Array>\t= [];\r\n\t\r\n\t// effect jumptables\r\n\tvar effects_t0\t\t\t\t: Array<(mod:Protracker, ch:Int)->Void>;\r\n\tvar effects_t0_e\t\t\t: Array<(mod:Protracker, ch:Int)->Void>;\r\n\tvar effects_t1\t\t\t\t: Array<(mod:Protracker, ch:Int)->Void>;\r\n\tvar effects_t1_e\t\t\t: Array<(mod:Protracker, ch:Int)->Void>;\r\n\r\n\tpublic var title\t\t\t: String;\r\n\tpublic var signature\t\t: String;\r\n\tpublic var songlen\t\t\t: Int;\r\n\tpublic var repeatpos\t\t: Int;\r\n\tpublic var patterntable\t\t: Dynamic\t\t\t\t= new ArrayBuffer(128);\r\n\tpublic var channels\t\t\t: Int;\r\n\tpublic var sample\t\t\t: Array<Dynamic>;\r\n\tpublic var patterns\t\t\t: Int;\r\n\tpublic var pattern\t\t\t: Array<Dynamic>;\r\n\tpublic var pattern_unpack\t: Array<Dynamic>;\r\n\tpublic var tick\t\t\t\t: Null<Int>;\r\n\tpublic var position\t\t\t: Int;\r\n\tpublic var row\t\t\t\t: Int;\r\n\tpublic var flags\t\t\t: Int;\r\n\tpublic var speed\t\t\t: Int;\r\n\tpublic var bpm\t\t\t\t: Int;\r\n\tpublic var endofsong\t\t: Bool;\r\n\tpublic var channel\t\t\t: Array<PTChannel>;\r\n\tpublic var chvu\t\t\t\t: Float32Array;\r\n\r\n\tvar context\t\t\t\t\t: AudioContext;\r\n\tvar lowpassNode\t\t\t\t: BiquadFilterNode;\r\n\tvar samples\t\t\t\t\t: Int;\r\n\tvar note\t\t\t\t\t: Array<Dynamic>;\r\n\tvar looprow\t\t\t\t\t: Int;\r\n\tvar loopstart\t\t\t\t: Int;\r\n\tvar loopcount\t\t\t\t: Int;\r\n\tvar patterndelay\t\t\t: Int;\r\n\tvar patternwait\t\t\t\t: Int;\r\n\tvar offset\t\t\t\t\t: Int;\r\n\tvar breakrow\t\t\t\t: Int;\r\n\tvar patternjump\t\t\t\t: Int;\r\n\r\n\t#end\r\n\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\r\n\tpublic function new()\r\n\t{\r\n\t\t#if kha_js\r\n\t\t\r\n\t\teffects_t0\t\t= [ effect_t0_0, effect_t0_1, effect_t0_2, effect_t0_3, effect_t0_4, effect_t0_5, effect_t0_6, effect_t0_7, effect_t0_8, effect_t0_9, effect_t0_a, effect_t0_b, effect_t0_c, effect_t0_d, effect_t0_e, effect_t0_f];\r\n\t\teffects_t0_e\t= [\teffect_t0_e0, effect_t0_e1, effect_t0_e2, effect_t0_e3, effect_t0_e4, effect_t0_e5, effect_t0_e6, effect_t0_e7, effect_t0_e8, effect_t0_e9, effect_t0_ea, effect_t0_eb, effect_t0_ec, effect_t0_ed, effect_t0_ee, effect_t0_ef];\r\n\t\teffects_t1\t\t= [\teffect_t1_0, effect_t1_1, effect_t1_2, effect_t1_3, effect_t1_4, effect_t1_5, effect_t1_6, effect_t1_7, effect_t1_8, effect_t1_9, effect_t1_a, effect_t1_b, effect_t1_c, effect_t1_d, effect_t1_e, effect_t1_f];\r\n\t\teffects_t1_e\t= [\teffect_t1_e0, effect_t1_e1, effect_t1_e2, effect_t1_e3, effect_t1_e4, effect_t1_e5, effect_t1_e6, effect_t1_e7, effect_t1_e8, effect_t1_e9, effect_t1_ea, effect_t1_eb, effect_t1_ec, effect_t1_ed, effect_t1_ee, effect_t1_ef];\r\n\r\n\t\tclearsong();\r\n\t\tinitialize();\r\n\t\r\n\t\tfor (t in 0...16)\r\n\t\t\tfinetunetable[t]=Math.pow(2, (t-8)/12/8);\t\t\r\n\t\r\n\t\tfor (t in 0...4)\r\n\t\t{\r\n\t\t\tvibratotable[t] = new Float32Array(64);\r\n\t\t\t\r\n\t\t\tfor (i in 0...64)\r\n\t\t\t{\r\n\t\t\t\tswitch (t)\r\n\t\t\t\t{\r\n\t\t\t\t\tcase 0:\r\n\t\t\t\t\t\tvibratotable[t][i]=127*Math.sin(Math.PI*2*(i/64));\r\n\t\t\t\t\tcase 1:\r\n\t\t\t\t\t\tvibratotable[t][i]=127-4*i;\r\n\t\t\t\t\tcase 2:\r\n\t\t\t\t\t\tvibratotable[t][i]=(i<32)?127:-127;\r\n\t\t\t\t\tcase 3:\r\n\t\t\t\t\t\tvibratotable[t][i]=(1-2*Math.random())*127;\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\t#end\r\n\t}\r\n\r\n\t#if kha_js\r\n\t\r\n\t\t// clear song data\r\n\tfunction clearsong()\r\n\t{\r\n\t\ttitle=\"\";\r\n\t\tsignature=\"\";\r\n\r\n\t\tsonglen=1;\r\n\t\trepeatpos=0;\r\n\t\tpatterntable = new ArrayBuffer(128);\r\n\t\t\r\n\t\tfor (i in 0...128)\r\n\t\t\tpatterntable[i]=0;\r\n\r\n\t\tchannels=4;\r\n\r\n\t\tsample=new Array();\r\n\t\tsamples = 31;\r\n\t\t\r\n\t\tfor (i in 0...31)\r\n\t\t{\r\n\t\t\tsample[i] = {};\r\n\t\t\tsample[i].name=\"\";\r\n\t\t\tsample[i].length=0;\r\n\t\t\tsample[i].finetune=0;\r\n\t\t\tsample[i].volume=64;\r\n\t\t\tsample[i].loopstart=0;\r\n\t\t\tsample[i].looplength=0;\r\n\t\t\tsample[i].data=0;\r\n\t\t}\r\n\r\n\t\tpatterns=0;\r\n\t\tpattern = [];\r\n\t\tnote = [];\r\n\t\tpattern_unpack = [];\r\n\r\n\t\tlooprow=0;\r\n\t\tloopstart=0;\r\n\t\tloopcount=0;\r\n\r\n\t\tpatterndelay=0;\r\n\t\tpatternwait=0;\r\n\t}\r\n\t\r\n\t// initialize all player variables\r\n\tpublic function initialize()\r\n\t{\r\n\t\tsyncqueue=[];\r\n\r\n\t\ttick=0;\r\n\t\tposition=0;\r\n\t\trow=0;\r\n\t\toffset=0;\r\n\t\tflags=0;\r\n\r\n\t\tspeed=6;\r\n\t\tbpm=125;\r\n\t\tbreakrow=0;\r\n\t\tpatternjump=0;\r\n\t\tpatterndelay=0;\r\n\t\tpatternwait=0;\r\n\t\tendofsong=false;\r\n\r\n\t\tchannel = [];\r\n\t\tfor (i in 0...channels)\r\n\t\t\tchannel[i] = { sample:0, period:214, voiceperiod:214, note:24, volume:64, command:0, data:0, samplepos:0, samplespeed:0, flags:0, noteon:0, slidespeed:0, slideto:214, slidetospeed:0, arpeggio:0, semitone:12, vibratospeed:0, vibratodepth:0, vibratopos:0, vibratowave:0, instrument:0 };\r\n\t}\r\n\t\r\n\t// parse the module from local buffer\r\n\tpublic function parse(buffer:UInt8Array)\r\n\t{\r\n\t\tvar i:Int;\r\n\t\tvar j:Int;\r\n\t\tvar c:Int;\r\n\r\n\t\tfor (i in 0...4) \r\n\t\t\tsignature+=String.fromCharCode(buffer[1080+i]);\r\n\r\n\t\tswitch (signature)\r\n\t\t{\r\n\t\t\tcase \"M.K.\" | \"M!K!\" | \"4CHN\" | \"FLT4\":\r\n\t\t\t{}\r\n\r\n\t\t\tcase \"6CHN\":\r\n\t\t\t\tchannels=6;\r\n\r\n\t\t\tcase \"8CHN\" | \"FLT8\":\r\n\t\t\t\tchannels=8;\r\n\r\n\t\t\tcase \"28CH\":\r\n\t\t\t\tchannels=28;\r\n\r\n\t\t\tdefault:\r\n\t\t\t\treturn false;\r\n\t\t}\r\n\t  \r\n\t\tchvu = new Float32Array(128);\r\n\t\t\r\n\t\tfor (i in 0...channels)\r\n\t\t\tchvu[i]=0.0;\r\n\r\n\t\ti=0;\r\n\t\twhile(buffer[i]!=null && i<20)\r\n\t\t\ttitle=title+String.fromCharCode(buffer[i++]);\r\n\t\tfor (i in 0...samples)\r\n\t\t{\r\n\t\t\tvar st=20+i*30;\r\n\t\t\tj = 0;\r\n\t\t\t\r\n\t\t\twhile (buffer[st+j]!=null && j<22)\r\n\t\t\t{\r\n\t\t\t\tsample[i].name+= ((buffer[st+j]>0x1f) && (buffer[st+j]<0x7f)) ? (String.fromCharCode(buffer[st+j])) : (\" \");\r\n\t\t\t\tj++;\r\n\t\t\t}\r\n\r\n\t\t\tsample[i].length=2*(buffer[st+22]*256 + buffer[st+23]);\r\n\t\t\tsample[i].finetune=buffer[st+24];\r\n\t\t\r\n\t\t\tif (sample[i].finetune > 7)\r\n\t\t\t\tsample[i].finetune = sample[i].finetune-16;\r\n\t\t\t\t\r\n\t\t\tsample[i].volume=buffer[st+25];\r\n\t\t\tsample[i].loopstart=2*(buffer[st+26]*256 + buffer[st+27]);\r\n\t\t\tsample[i].looplength=2*(buffer[st+28]*256 + buffer[st+29]);\r\n\t\t\r\n\t\t\tif (sample[i].looplength == 2)\r\n\t\t\t\tsample[i].looplength = 0;\r\n\t\t\t\t\r\n\t\t\tif (sample[i].loopstart > sample[i].length)\r\n\t\t\t{\r\n\t\t\t\tsample[i].loopstart=0;\r\n\t\t\t\tsample[i].looplength=0;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tsonglen = buffer[950];\r\n\t\t\r\n\t\tif (buffer[951] != 127)\r\n\t\t\trepeatpos=buffer[951];\r\n\t  \r\n\t\tfor (i in 0...128) \r\n\t\t{\r\n\t\t\tpatterntable[i]=buffer[952+i];\r\n\t\t\tif (patterntable[i] > patterns) \r\n\t\t\t\tpatterns=patterntable[i];\r\n\t\t}\r\n\t\t\r\n\t\tpatterns+=1;\r\n\t\tvar patlen=4*64*channels;\r\n\r\n\t\tpattern = [];\r\n\t\tnote = [];\r\n\t  \r\n\t\tpattern_unpack = [];\r\n\t\t\r\n\t\tfor (i in 0...patterns) \r\n\t\t{\r\n\t\t\tpattern[i]=new UInt8Array(patlen);\r\n\t\t\tnote[i]=new UInt8Array(channels*64);\r\n\t\t\tpattern_unpack[i] = new UInt8Array(channels * 64 * 5);\r\n\t\t\t\r\n\t\t\tfor (j in 0...patlen) \r\n\t\t\t\tpattern[i][j]=buffer[1084+i*patlen+j];\r\n\t\t\r\n\t\t\tfor (j in 0...64)\r\n\t\t\t{\r\n\t\t\t\tfor (c in 0...channels)\r\n\t\t\t\t{\r\n\t\t\t\t\tnote[i][j*channels+c]=0;\r\n\t\t\t\t\tvar n = (pattern[i][j * 4 * channels + c * 4] & 0x0f) << 8 | pattern[i][j * 4 * channels + c * 4 + 1];\r\n\t\t\t\t\t\r\n\t\t\t\t\tfor(np in 0...baseperiodtable.length)\r\n\t\t\t\t\t\tif (n == baseperiodtable[np]) \r\n\t\t\t\t\t\t\tnote[i][j*channels+c]=np;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tfor (j in 0...64)\r\n\t\t\t{\r\n\t\t\t\tfor (c in 0...channels)\r\n\t\t\t\t{\r\n\t\t\t\t\tvar pp= j*4*channels+c*4;\r\n\t\t\t\t\tvar ppu=j*5*channels+c*5;\r\n\t\t\t\t\tvar n = (pattern[i][pp] & 0x0f) << 8 | pattern[i][pp + 1];\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (n!=null)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tn = note[i][j * channels + c]; \r\n\t\t\t\t\t\tn=(n%12)|(Math.floor(n/12)+2)<<4;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tpattern_unpack[i][ppu+0]=(n!=null)?n:255;\r\n\t\t\t\t\tpattern_unpack[i][ppu+1]=pattern[i][pp+0]&0xf0 | pattern[i][pp+2]>>4;\r\n\t\t\t\t\tpattern_unpack[i][ppu+2]=255;\r\n\t\t\t\t\tpattern_unpack[i][ppu+3]=pattern[i][pp+2]&0x0f;\r\n\t\t\t\t\tpattern_unpack[i][ppu+4]=pattern[i][pp+3];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tvar sst=1084+patterns*patlen;\r\n  \r\n\t\tfor (i in 0...samples)\r\n\t\t{\r\n\t\t\tsample[i].data=new Float32Array(sample[i].length);\r\n\t\r\n\t\t\tfor (j in 0...sample[i].length)\r\n\t\t\t{\r\n\t\t\t\tvar q:Float=buffer[sst+j];\r\n\t\t\t\tif (q < 128)\r\n\t\t\t\t{\r\n\t\t\t\t\tq=q/128.0;\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\tq=((q-128)/128.0)-1.0;\r\n\t\t\t\t}\r\n\t\t\t\tsample[i].data[j]=q;\r\n\t\t\t}\r\n\t\t\tsst+=sample[i].length;\r\n\t\t}\r\n\r\n\t\t// look ahead at very first row to see if filter gets enabled\r\n\t\tfilter = false;\r\n\t\t\r\n\t\tfor(ch in 0...channels)\r\n\t\t{\r\n\t\t\tvar p=patterntable[0];\r\n\t\t\tvar pp=ch*4;\r\n\t\t\tvar cmd = pattern[p][pp + 2] & 0x0f;\r\n\t\t\tvar data:Dynamic=pattern[p][pp+3];\r\n\t\t\t\r\n\t\t\tif (cmd==0x0e && ((data&0xf0)==0x00))\r\n\t\t\t{\r\n\t\t\t\tif (! ((data&0x01)!=null))\r\n\t\t\t\t{\r\n\t\t\t\t\tfilter=true;\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\tfilter=false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// set lowpass cutoff\r\n\t\tif (context!=null)\r\n\t\t{\r\n\t\t\tif (filter!=null)\r\n\t\t\t{\r\n\t\t\t\tlowpassNode.frequency.value=3275;\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tlowpassNode.frequency.value=28867;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tchvu=new Float32Array(channels);\r\n\t\tfor (i in 0...channels)\r\n\t\t\tchvu[i] = 0.0;\r\n\t\t\t\r\n\t\treturn true;\r\n\t}\r\n\t\t\r\n\t\r\n\r\n\r\n\t// advance player\r\n\tpublic function advance(mod:Protracker)\r\n\t{\r\n\t\tvar spd=(((mod.samplerate*60)/mod.bpm)/4)/6;\r\n\r\n\t\t// advance player\r\n\t\tif (mod.offset > spd)\r\n\t\t{\r\n\t\t\tmod.tick++; \r\n\t\t\tmod.offset = 0; \r\n\t\t\tmod.flags|=1;\r\n\t\t}\r\n\t\tif (mod.tick >= mod.speed)\r\n\t\t{\r\n\t\t\tif (cast mod.patterndelay) // delay pattern\r\n\t\t\t{ \r\n\t\t\t\tif (mod.tick < ((mod.patternwait + 1) * mod.speed))\r\n\t\t\t\t{\r\n\t\t\t\t\tmod.patternwait++;\r\n\t\t\t\t} \r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\tmod.row++; \r\n\t\t\t\t\tmod.tick = 0; \r\n\t\t\t\t\tmod.flags |= 2; \r\n\t\t\t\t\tmod.patterndelay=0;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tif (cast mod.flags&(16+32+64))\r\n\t\t\t\t{\r\n\t\t\t\t\tif (cast mod.flags&64)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t// loop pattern?\r\n\t\t\t\t\t\tmod.row=mod.looprow;\r\n\t\t\t\t\t\tmod.flags&=0xa1;\r\n\t\t\t\t\t\tmod.flags|=2;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tif (cast mod.flags&16)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t// pattern jump/break?\r\n\t\t\t\t\t\t\tmod.position=mod.patternjump;\r\n\t\t\t\t\t\t\tmod.row=mod.breakrow;\r\n\t\t\t\t\t\t\tmod.patternjump=0;\r\n\t\t\t\t\t\t\tmod.breakrow=0;\r\n\t\t\t\t\t\t\tmod.flags&=0xe1;\r\n\t\t\t\t\t\t\tmod.flags|=2;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tmod.tick=0;\r\n\t\t\t\t} \r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\tmod.row++; \r\n\t\t\t\t\tmod.tick = 0; \r\n\t\t\t\t\tmod.flags|=2;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (mod.row >= 64)\r\n\t\t{\r\n\t\t\tmod.position++; \r\n\t\t\tmod.row = 0; \r\n\t\t\tmod.flags|=4;\r\n\t\t}\r\n\t\tif (mod.position >= mod.songlen)\r\n\t\t{\r\n\t\t\tif (mod.repeat)\r\n\t\t\t\tmod.position=0;\r\n\t\t\telse\r\n\t\t\t\tthis.endofsong=true;\r\n\t\t\t\t//mod.stop();\r\n\t\t\treturn;\r\n\t\t}\r\n\t}\r\n\r\n\t// mix an audio buffer with data\r\n\tpublic function mix(mod:Protracker, bufs:Array<Float32Array>, buflen:Int)\r\n\t{\r\n\t\tvar f\t: Null<Float>;\r\n\t\tvar p\t: Null<Int>;\r\n\t\tvar pp\t: Null<Int>;\r\n\t\tvar n\t: Null<Int>;\r\n\t\tvar nn\t: Null<Int>;\r\n\r\n\t\tvar outp = new Float32Array(2);\r\n\t\t\r\n\t\tfor(s in 0...buflen)\r\n\t\t{\r\n\t\t\toutp[0]=0.0;\r\n\t\t\toutp[1]=0.0;\r\n\t\t\t\r\n\r\n\t\t\tif (!mod.paused && !mod.endofsong && mod.playing)\r\n\t\t\t{\r\n\t\t\t\tmod.advance(mod);\r\n\r\n\t\t\t\tvar och:Int=0;\r\n\t\t\t\tfor(ch in 0...mod.channels)\r\n\t\t\t\t{\r\n\t\t\t\t\t// calculate playback position\r\n\t\t\t\t\tp=mod.patterntable[mod.position];\r\n\t\t\t\t\tpp=mod.row*4*mod.channels + ch*4;\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (cast mod.flags&2) // new row\r\n\t\t\t\t\t{ \r\n\t\t\t\t\t\tmod.channel[ch].command=mod.pattern[p][pp+2]&0x0f;\r\n\t\t\t\t\t\tmod.channel[ch].data=mod.pattern[p][pp+3];\r\n\r\n\t\t\t\t\t\tif (!(mod.channel[ch].command==0x0e && (mod.channel[ch].data&0xf0)==0xd0))\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tn=(mod.pattern[p][pp]&0x0f)<<8 | mod.pattern[p][pp+1];\r\n\t\t\t\t\t\t\tif (cast n)\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t// noteon, except if command=3 (porta to note)\r\n\t\t\t\t\t\t\t\tif ((mod.channel[ch].command != 0x03) && (mod.channel[ch].command != 0x05))\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tmod.channel[ch].period=n;\r\n\t\t\t\t\t\t\t\t\tmod.channel[ch].samplepos=0;\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\tif (mod.channel[ch].vibratowave > 3) \r\n\t\t\t\t\t\t\t\t\t\tmod.channel[ch].vibratopos=0;\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\tmod.channel[ch].flags|=3; // recalc speed\r\n\t\t\t\t\t\t\t\t\tmod.channel[ch].noteon=1;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t// in either case, set the slide to note target\r\n\t\t\t\t\t\t\t\tmod.channel[ch].slideto=n;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tnn=mod.pattern[p][pp+0]&0xf0 | mod.pattern[p][pp+2]>>4;\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tif (cast nn)\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tmod.channel[ch].sample = nn - 1;\r\n\t\t\t\t\t\t\t\tmod.channel[ch].volume=mod.sample[nn-1].volume;\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tif (untyped n && (mod.channel[ch].samplepos > mod.sample[nn-1].length))\r\n\t\t\t\t\t\t\t\t\tmod.channel[ch].samplepos=0;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tmod.channel[ch].voiceperiod=mod.channel[ch].period;\r\n\t\t\t\t\t\r\n\t\t\t\t\t// kill empty samples\r\n\t\t\t\t\tif (!mod.sample[mod.channel[ch].sample].length)\r\n\t\t\t\t\t\tmod.channel[ch].noteon=0;\r\n\r\n\t\t\t\t\t// effects\r\n\t\t\t\t\tif (cast mod.flags&1)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tif (untyped !mod.tick)\r\n\t\t\t\t\t\t\tmod.effects_t0[mod.channel[ch].command](mod, ch); // process only on tick 0\r\n\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\tmod.effects_t1[mod.channel[ch].command](mod, ch);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\t// recalc note number from period\r\n\t\t\t\t\tif (cast mod.channel[ch].flags&2)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tfor (np in 0...mod.baseperiodtable.length)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tif (mod.baseperiodtable[np] >= mod.channel[ch].period)\r\n\t\t\t\t\t\t\t\tmod.channel[ch].note = np;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t  \r\n\t\t\t\t\t\tmod.channel[ch].semitone=7;\r\n\t\t\t\t  \r\n\t\t\t\t\t\tif (mod.channel[ch].period>=120)\r\n\t\t\t\t\t\t\tmod.channel[ch].semitone=mod.baseperiodtable[mod.channel[ch].note]-mod.baseperiodtable[mod.channel[ch].note+1];\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// recalc sample speed and apply finetune\r\n\t\t\t\t\tif ((untyped mod.channel[ch].flags&1 || cast mod.flags&2) && cast mod.channel[ch].voiceperiod)\r\n\t\t\t\t\t\tmod.channel[ch].samplespeed=7093789.2/(mod.channel[ch].voiceperiod*2) * mod.finetunetable[mod.sample[mod.channel[ch].sample].finetune+8] / mod.samplerate;\r\n\r\n\t\t\t\t\t// advance vibrato on each new tick\r\n\t\t\t\t\tif (cast mod.flags&1)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tmod.channel[ch].vibratopos+=mod.channel[ch].vibratospeed;\r\n\t\t\t\t\t\tmod.channel[ch].vibratopos&=0x3f;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\t// mix channel to output\r\n\t\t\t\t\toch=och^(ch&1);\r\n\t\t\t\t\tf=0.0;\r\n\t\t\t\t\r\n\t\t\t\t\tif (cast mod.channel[ch].noteon)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tif (cast mod.sample[mod.channel[ch].sample] && mod.sample[mod.channel[ch].sample].length > mod.channel[ch].samplepos)\r\n\t\t\t\t\t\t\tf=(mod.sample[mod.channel[ch].sample].data[Math.floor(mod.channel[ch].samplepos)]*mod.channel[ch].volume)/64.0;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\toutp[och]+=f;\r\n\t\t\t\t\t\tmod.channel[ch].samplepos+=mod.channel[ch].samplespeed;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tmod.chvu[ch]=Math.max(mod.chvu[ch], Math.abs(f));\r\n\t\t\t\t\t\r\n\t\t\t\t\t// loop or end samples\r\n\t\t\t\t\tif (cast mod.channel[ch].noteon)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tif (mod.sample[mod.channel[ch].sample].loopstart || mod.sample[mod.channel[ch].sample].looplength)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tif (mod.channel[ch].samplepos >= (mod.sample[mod.channel[ch].sample].loopstart + mod.sample[mod.channel[ch].sample].looplength))\r\n\t\t\t\t\t\t\t\tmod.channel[ch].samplepos-=mod.sample[mod.channel[ch].sample].looplength;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tif (mod.channel[ch].samplepos >= mod.sample[mod.channel[ch].sample].length)\r\n\t\t\t\t\t\t\t\tmod.channel[ch].noteon=0;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// clear channel flags\r\n\t\t\t\t\tmod.channel[ch].flags=0;\r\n\t\t\t\t}\r\n\t\t\t\tmod.offset++;\r\n\t\t\t\tmod.flags&=0x70;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t// done - store to output buffer\r\n\t\t\tbufs[0][s]=outp[0];\r\n\t\t\tbufs[1][s]=outp[1];\r\n\t\t}\r\n\t\t\r\n\t\t\r\n\t}\r\n\t\r\n\t//\r\n\t// tick 0 effect functions\r\n\t//\r\n\tfunction effect_t0_0(mod:Protracker, ch:Int)\r\n\t{\r\n\t\t// 0 arpeggio\r\n\t\tmod.channel[ch].arpeggio=mod.channel[ch].data;\r\n\t}\r\n\t\r\n\tfunction effect_t0_1(mod:Protracker, ch:Int)\r\n\t{\r\n\t\t// 1 slide up\r\n\t\tif (cast mod.channel[ch].data) \r\n\t\t\tmod.channel[ch].slidespeed=mod.channel[ch].data;\r\n\t}\r\n\t\r\n\tfunction effect_t0_2(mod:Protracker, ch:Int)\r\n\t{\r\n\t\t// 2 slide down\r\n\t\tif (cast mod.channel[ch].data) \r\n\t\t\tmod.channel[ch].slidespeed=mod.channel[ch].data;\r\n\t}\r\n\t\r\n\tfunction effect_t0_3(mod:Protracker, ch:Int)\r\n\t{\r\n\t\t// 3 slide to note\r\n\t\tif (cast mod.channel[ch].data)\r\n\t\t\tmod.channel[ch].slidetospeed=mod.channel[ch].data;\r\n\t}\r\n\t\r\n\tfunction effect_t0_4(mod:Protracker, ch:Int)\r\n\t{\r\n\t\t// 4 vibrato\r\n\t\tif (untyped mod.channel[ch].data&0x0f && untyped mod.channel[ch].data&0xf0)\r\n\t\t{\r\n\t\t\tmod.channel[ch].vibratodepth=(mod.channel[ch].data&0x0f);\r\n\t\t\tmod.channel[ch].vibratospeed=(mod.channel[ch].data&0xf0)>>4;\r\n\t\t}\r\n\t\tmod.effects_t1[4](mod, ch);\r\n\t}\r\n\t\r\n\tfunction effect_t0_5(mod:Protracker, ch:Int) {} // 5\r\n\tfunction effect_t0_6(mod:Protracker, ch:Int) {} // 6\r\n\tfunction effect_t0_7(mod:Protracker, ch:Int) {} // 7\r\n\t\r\n\tfunction effect_t0_8(mod:Protracker, ch:Int)\r\n\t{\r\n\t\t// 8 unused, used for syncing\r\n\t\tmod.syncqueue.unshift(mod.channel[ch].data&0x0f);\r\n\t}\r\n\t\r\n\tfunction effect_t0_9(mod:Protracker, ch:Int)\r\n\t{\r\n\t\t// 9 set sample offset\r\n\t\tmod.channel[ch].samplepos=mod.channel[ch].data*256;\r\n\t}\r\n\t\r\n\tfunction effect_t0_a(mod:Protracker, ch:Int){} // a\r\n\t\r\n\tfunction effect_t0_b(mod:Protracker, ch:Int)\r\n\t{\r\n\t\t// b pattern jump\r\n\t\tmod.breakrow=0;\r\n\t\tmod.patternjump=mod.channel[ch].data;\r\n\t\tmod.flags|=16;\r\n\t}\r\n\t\r\n\tfunction effect_t0_c(mod:Protracker, ch:Int)\r\n\t{\r\n\t\t// c set volume\r\n\t\tmod.channel[ch].volume=mod.channel[ch].data;\r\n\t}\r\n\t\r\n\tfunction effect_t0_d(mod:Protracker, ch:Int)\r\n\t{\r\n\t\t// d pattern break\r\n\t\tmod.breakrow=((mod.channel[ch].data&0xf0)>>4)*10 + (mod.channel[ch].data&0x0f);\r\n\t\t\r\n\t\tif (untyped !(mod.flags&16))\r\n\t\t\tmod.patternjump=mod.position+1;\r\n\t\t\r\n\t\tmod.flags|=16;\r\n\t}\r\n\t\r\n\tfunction effect_t0_e(mod:Protracker, ch:Int)\r\n\t{\r\n\t\t// e\r\n\t\tvar i=(mod.channel[ch].data&0xf0)>>4;\r\n\t\tmod.effects_t0_e[i](mod, ch);\r\n\t}\r\n\t\r\n\tfunction effect_t0_f(mod:Protracker, ch:Int)\r\n\t{\r\n\t\t// f set speed\r\n\t\tif (mod.channel[ch].data > 32)\r\n\t\t\tmod.bpm=mod.channel[ch].data;\r\n\t\telse\r\n\t\t{\r\n\t\t\tif (cast mod.channel[ch].data) \r\n\t\t\t\tmod.speed=mod.channel[ch].data;\r\n\t\t}\r\n\t}\r\n\r\n\t//\r\n\t// tick 0 effect e functions\r\n\t//\r\n\tfunction effect_t0_e0(mod:Protracker, ch:Int)\r\n\t{\r\n\t\t// e0 filter on/off\r\n\t\tif (mod.channels > 4) \r\n\t\t\treturn; // use only for 4ch amiga tunes\r\n\t\t\r\n\t\tif (cast mod.channel[ch].data&0x01)\r\n\t\t\tmod.filter=false;\r\n\t\telse\r\n\t\t\tmod.filter=true;\r\n\t}\r\n\r\n\tfunction effect_t0_e1(mod:Protracker, ch:Int)\r\n\t{\r\n\t\t// e1 fine slide up\r\n\t\tmod.channel[ch].period -= mod.channel[ch].data & 0x0f;\r\n\t\t\r\n\t\tif (mod.channel[ch].period < 113)\r\n\t\t\tmod.channel[ch].period=113;\r\n\t}\r\n\r\n\tfunction effect_t0_e2(mod:Protracker, ch:Int)\r\n\t{\r\n\t\t// e2 fine slide down\r\n\t\tmod.channel[ch].period+=mod.channel[ch].data&0x0f;\r\n\t\t\r\n\t\tif (mod.channel[ch].period > 856) \r\n\t\t\tmod.channel[ch].period = 856;\r\n\t\t\t\r\n\t\tmod.channel[ch].flags|=1;\r\n\t}\r\n\r\n\tfunction effect_t0_e3(mod:Protracker, ch:Int) {} // e3 set glissando\r\n\r\n\tfunction effect_t0_e4(mod:Protracker, ch:Int)\r\n\t{\r\n\t\t// e4 set vibrato waveform\r\n\t\tmod.channel[ch].vibratowave=mod.channel[ch].data&0x07;\r\n\t}\r\n\t\r\n\tfunction effect_t0_e5(mod:Protracker, ch:Int) {} // e5 set finetune\r\n\r\n\tfunction effect_t0_e6(mod:Protracker, ch:Int)\r\n\t{\r\n\t\t// e6 loop pattern\r\n\t\tif (cast mod.channel[ch].data&0x0f)\r\n\t\t{\r\n\t\t\tif (mod.loopcount!=null)\r\n\t\t\t\tmod.loopcount--;\r\n\t\t\telse\r\n\t\t\t\tmod.loopcount = mod.channel[ch].data&0x0f;\r\n\t\t\t\t\r\n\t\t\tif (mod.loopcount!=null) \r\n\t\t\t\tmod.flags|=64;\r\n\t\t} \r\n\t\telse\r\n\t\t\tmod.looprow=mod.row;\r\n\t}\r\n\r\n\tfunction effect_t0_e7(mod:Protracker, ch:Int) {} // e7\r\n\r\n\tfunction effect_t0_e8(mod:Protracker, ch:Int)\r\n\t{\r\n\t\t// e8, use for syncing\r\n\t\tmod.syncqueue.unshift(mod.channel[ch].data&0x0f);\r\n\t}\r\n\t\r\n\tfunction effect_t0_e9(mod:Protracker, ch:Int) {} // e9\r\n\r\n\tfunction effect_t0_ea(mod:Protracker, ch:Int)\r\n\t{\r\n\t\t// ea fine volslide up\r\n\t\tmod.channel[ch].volume+=mod.channel[ch].data&0x0f;\r\n\t\tif (mod.channel[ch].volume > 64) \r\n\t\t\tmod.channel[ch].volume=64;\r\n\t}\r\n\t\r\n\tfunction effect_t0_eb(mod:Protracker, ch:Int)\r\n\t{\r\n\t\t// eb fine volslide down\r\n\t\tmod.channel[ch].volume-=mod.channel[ch].data&0x0f;\r\n\t\tif (mod.channel[ch].volume < 0) \r\n\t\t\tmod.channel[ch].volume=0;\r\n\t}\r\n\r\n\tfunction effect_t0_ec(mod:Protracker, ch:Int) {} // ec\r\n\r\n\tfunction effect_t0_ed(mod:Protracker, ch:Int)\r\n\t{\r\n\t\t// ed delay sample\r\n\t\tif (mod.tick == (mod.channel[ch].data&0x0f))\r\n\t\t{\r\n\t\t\t// start note\r\n\t\t\tvar p:Int=mod.patterntable[mod.position];\r\n\t\t\tvar pp:Int=mod.row*4*mod.channels + ch*4;\r\n\t\t\tvar n=(mod.pattern[p][pp]&0x0f)<<8 | mod.pattern[p][pp+1];\r\n\t\t\t\r\n\t\t\tif (cast n)\r\n\t\t\t{\r\n\t\t\t\tmod.channel[ch].period=n;\r\n\t\t\t\tmod.channel[ch].voiceperiod=mod.channel[ch].period;\r\n\t\t\t\tmod.channel[ch].samplepos = 0;\r\n\t\t\t\t\r\n\t\t\t\tif (mod.channel[ch].vibratowave > 3) \r\n\t\t\t\t\tmod.channel[ch].vibratopos = 0;\r\n\t\t\t\t\t\r\n\t\t\t\tmod.channel[ch].flags|=3; // recalc speed\r\n\t\t\t\tmod.channel[ch].noteon=1;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tn=mod.pattern[p][pp+0]&0xf0 | mod.pattern[p][pp+2]>>4;\r\n\t\t\t\r\n\t\t\tif (cast n)\r\n\t\t\t{\r\n\t\t\t\tmod.channel[ch].sample=n-1;\r\n\t\t\t\tmod.channel[ch].volume=mod.sample[n-1].volume;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\tfunction effect_t0_ee(mod:Protracker, ch:Int)\r\n\t{\r\n\t\t// ee delay pattern\r\n\t\tmod.patterndelay=mod.channel[ch].data&0x0f;\r\n\t\tmod.patternwait=0;\r\n\t}\r\n\r\n\tfunction effect_t0_ef(mod:Protracker, ch:Int) {} // ef\r\n\r\n\t//\r\n\t// tick 1+ effect functions\r\n\t//\r\n\tfunction effect_t1_0(mod:Protracker, ch:Int)\r\n\t{\r\n\t\t// 0 arpeggio\r\n\t\tif (cast mod.channel[ch].data)\r\n\t\t{\r\n\t\t\tvar apn=mod.channel[ch].note;\r\n\t\t\t\r\n\t\t\tif ((mod.tick % 3) == 1)\r\n\t\t\t\tapn+=mod.channel[ch].arpeggio>>4;\r\n\t\t\t\r\n\t\t\tif ((mod.tick % 3) == 2)\r\n\t\t\t\tapn+=mod.channel[ch].arpeggio&0x0f;\r\n\t\t\t\r\n\t\t\tif (apn>=0 && apn <= mod.baseperiodtable.length)\r\n\t\t\t\tmod.channel[ch].voiceperiod = mod.baseperiodtable[apn];\r\n\t\t\t\r\n\t\t\tmod.channel[ch].flags|=1;\r\n\t\t}\r\n\t}\r\n\t\r\n\tfunction effect_t1_1(mod:Protracker, ch:Int)\r\n\t{\r\n\t\t// 1 slide up\r\n\t\tmod.channel[ch].period -= mod.channel[ch].slidespeed;\r\n\t\t\r\n\t\tif (mod.channel[ch].period < 113) \r\n\t\t\tmod.channel[ch].period=113;\r\n\t\t\r\n\t\tmod.channel[ch].flags|=3; // recalc speed\r\n\t}\r\n\t\r\n\tfunction effect_t1_2(mod:Protracker, ch:Int)\r\n\t{\r\n\t\t// 2 slide down\r\n\t\tmod.channel[ch].period+=mod.channel[ch].slidespeed;\r\n\t\t\r\n\t\tif (mod.channel[ch].period > 856) \r\n\t\t\tmod.channel[ch].period=856;\r\n\t\t\r\n\t\tmod.channel[ch].flags|=3; // recalc speed\r\n\t}\r\n\t\r\n\tfunction effect_t1_3(mod:Protracker, ch:Int)\r\n\t{\r\n\t\t// 3 slide to note\r\n\t\tif (mod.channel[ch].period < mod.channel[ch].slideto)\r\n\t\t{\r\n\t\t\tmod.channel[ch].period+=mod.channel[ch].slidetospeed;\r\n\t\t\t\r\n\t\t\tif (mod.channel[ch].period > mod.channel[ch].slideto)\r\n\t\t\t\tmod.channel[ch].period=mod.channel[ch].slideto;\r\n\t\t}\r\n\t\t\r\n\t\tif (mod.channel[ch].period > mod.channel[ch].slideto)\r\n\t\t{\r\n\t\t\tmod.channel[ch].period-=mod.channel[ch].slidetospeed;\r\n\t\t\t\r\n\t\t\tif (mod.channel[ch].period<mod.channel[ch].slideto)\r\n\t\t\t\tmod.channel[ch].period=mod.channel[ch].slideto;\r\n\t\t}\r\n\t\tmod.channel[ch].flags|=3; // recalc speed\r\n\t}\r\n\t\r\n\tfunction effect_t1_4(mod:Protracker, ch:Int)\r\n\t{\r\n\t\t// 4 vibrato\r\n\t\tvar waveform:Float=mod.vibratotable[mod.channel[ch].vibratowave&3][mod.channel[ch].vibratopos]/63.0; //127.0;\r\n\r\n\t\t// two different implementations for vibrato\r\n\t\t//  var a:Float=(mod.channel[ch].vibratodepth/32)*mod.channel[ch].semitone*waveform; // non-linear vibrato +/- semitone\r\n\t\tvar a:Float=mod.channel[ch].vibratodepth*waveform; // linear vibrato, depth has more effect high notes\r\n\r\n\t\tmod.channel[ch].voiceperiod+=a;\r\n\t\tmod.channel[ch].flags|=1;\r\n\t}\r\n\t\r\n\tfunction effect_t1_5(mod:Protracker, ch:Int)\r\n\t{\r\n\t\t// 5 volslide + slide to note\r\n\t\tmod.effect_t1_3(mod, ch); // slide to note\r\n\t\tmod.effect_t1_a(mod, ch); // volslide\r\n\t}\r\n\t\r\n\tfunction effect_t1_6(mod:Protracker, ch:Int)\r\n\t{\r\n\t\t// 6 volslide + vibrato\r\n\t\tmod.effect_t1_4(mod, ch); // vibrato\r\n\t\tmod.effect_t1_a(mod, ch); // volslide\r\n\t}\r\n\t\r\n\tfunction effect_t1_7(mod:Protracker, ch:Int) {} // 7\r\n\tfunction effect_t1_8(mod:Protracker, ch:Int) {} // 8 unused\r\n\tfunction effect_t1_9(mod:Protracker, ch:Int) {} // 9 set sample offset\r\n\t\r\n\tfunction effect_t1_a(mod:Protracker, ch:Int)\r\n\t{\r\n\t\t// a volume slide\r\n\t\tif (untyped !(mod.channel[ch].data&0x0f))\r\n\t\t{\r\n\t\t\t// y is zero, slide up\r\n\t\t\tmod.channel[ch].volume+=(mod.channel[ch].data>>4);\r\n\t\t\t\r\n\t\t\tif (mod.channel[ch].volume > 64)\r\n\t\t\t\tmod.channel[ch].volume=64;\r\n\t\t}\r\n\r\n\t\tif (untyped !(mod.channel[ch].data&0xf0))\r\n\t\t{\r\n\t\t\t// x is zero, slide down\r\n\t\t\tmod.channel[ch].volume-=(mod.channel[ch].data&0x0f);\r\n\t\t\t\r\n\t\t\tif (mod.channel[ch].volume < 0) \r\n\t\t\t\tmod.channel[ch].volume=0;\r\n\t\t}\r\n\t}\r\n\t\r\n\tfunction effect_t1_b(mod:Protracker, ch:Int) {} // b pattern jump\r\n\tfunction effect_t1_c(mod:Protracker, ch:Int) {} // c set volume\r\n\tfunction effect_t1_d(mod:Protracker, ch:Int) {} // d pattern break\r\n\r\n\tfunction effect_t1_e(mod:Protracker, ch:Int)\r\n\t{\r\n\t\t// e\r\n\t\tvar i=(mod.channel[ch].data&0xf0)>>4;\r\n\t\tmod.effects_t1_e[i](mod, ch);\r\n\t}\r\n\t\r\n\tfunction effect_t1_f(mod:Protracker, ch:Int) {} // f\r\n\r\n\t//\r\n\t// tick 1+ effect e functions\r\n\t//\r\n\tfunction effect_t1_e0(mod:Protracker, ch:Int) {} // e0\r\n\tfunction effect_t1_e1(mod:Protracker, ch:Int) {} // e1\r\n\tfunction effect_t1_e2(mod:Protracker, ch:Int) {} // e2\r\n\tfunction effect_t1_e3(mod:Protracker, ch:Int) {} // e3\r\n\tfunction effect_t1_e4(mod:Protracker, ch:Int) {} // e4\r\n\tfunction effect_t1_e5(mod:Protracker, ch:Int) {} // e5\r\n\tfunction effect_t1_e6(mod:Protracker, ch:Int) {} // e6\r\n\tfunction effect_t1_e7(mod:Protracker, ch:Int) {} // e7\r\n\tfunction effect_t1_e8(mod:Protracker, ch:Int) {} // e8\r\n\t\r\n\tfunction effect_t1_e9(mod:Protracker, ch:Int)\r\n\t{\r\n\t\t// e9 retrig sample\r\n\t\tif (mod.tick%(mod.channel[ch].data&0x0f)==0)\r\n\t\t\tmod.channel[ch].samplepos=0;\r\n\t}\r\n\t\r\n\tfunction effect_t1_ea(mod:Protracker, ch:Int) {} // ea\r\n\tfunction effect_t1_eb(mod:Protracker, ch:Int) {} // eb\r\n\t\t\r\n\tfunction effect_t1_ec(mod:Protracker, ch:Int)\r\n\t{\r\n\t\t// ec cut sample\r\n\t\tif (mod.tick==(mod.channel[ch].data&0x0f))\r\n\t\t\tmod.channel[ch].volume=0;\r\n\t}\r\n\t\r\n\tfunction effect_t1_ed(mod:Protracker, ch:Int)\r\n\t{\r\n\t\t// ed delay sample\r\n\t\tmod.effect_t0_ed(mod, ch);\r\n\t}\r\n\t\r\n\tfunction effect_t1_ee(mod:Protracker, ch:Int) {} // ee\r\n\tfunction effect_t1_ef(mod:Protracker, ch:Int) {} // ef\r\n\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\t\r\n\t#end\r\n}\r\n\r\n\t//===================================================================================\r\n\t// Channel\r\n\t//-----------------------------------------------------------------------------------\r\n\t\r\n\ttypedef PTChannel =\r\n\t{\r\n\t\tsample:Null<Int>,\r\n\t\tperiod:Null<Int>,\r\n\t\tvoiceperiod:Null<Float>,\r\n\t\tnote:Null<Int>,\r\n\t\tvolume:Null<Int>,\r\n\t\tcommand:Null<Int>,\r\n\t\tdata:Null<Int>,\r\n\t\tsamplepos:Null<Float>,\r\n\t\tsamplespeed:Null<Float>,\r\n\t\tflags:Null<Int>,\r\n\t\tnoteon:Null<Int>,\r\n\t\tslidespeed:Null<Int>,\r\n\t\tslideto:Null<Int>,\r\n\t\tslidetospeed:Null<Int>,\r\n\t\tarpeggio:Null<Int>,\r\n\t\tsemitone:Null<Float>,\r\n\t\tvibratospeed:Null<Int>,\r\n\t\tvibratodepth:Null<Int>,\r\n\t\tvibratopos:Null<Int>,\r\n\t\tvibratowave:Null<Int>,\t\r\n\t\tinstrument:Null<Int>,\t\r\n\t}\r\n\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n","package no.logic.kha.uix.console;\r\n\r\nimport kha.Assets;\r\nimport kha.Scheduler;\r\nimport kha.graphics2.Graphics;\r\nimport kha.math.FastMatrix3;\r\nimport no.logic.kha.uix.app.App;\r\nimport no.logic.kha.uix.assets.EmbeddedAssets;\r\nimport no.logic.kha.uix.graphics.Draw;\r\nimport no.logic.kha.uix.utils.StringUtils;\r\n\r\nclass Fps\r\n{\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\r\n\t//===================================================================================\r\n\t// Consts \r\n\t//-----------------------------------------------------------------------------------\r\n\t\r\n\t//===================================================================================\r\n\t// Properties \r\n\t//-----------------------------------------------------------------------------------\r\n\r\n\tstatic var totalTime\t\t: Float \t\t\t= 0;\r\n\tstatic var times\t\t\t: Array<Float> \t\t= [];\r\n\t\r\n\tstatic var deltaTime\t\t: Float;\r\n\tstatic var lastTime\t\t\t: Float;\r\n\tstatic public var updateTime: Float;\r\n\tstatic public var renderTime: Float;\r\n\tstatic public var frameTime\t: Float;\r\n\t\r\n\tstatic public var fps\t\t: Int;\r\n\tstatic public var vfps\t\t: Int;\r\n\tstatic public var x\t\t\t: Int\t\t\t\t= 0;\r\n\tstatic public var y\t\t\t: Int\t\t\t\t= 0;\r\n\tstatic public var width\t\t: Int\t\t\t\t= 100;\r\n\tstatic public var height\t: Int\t\t\t\t= 60;\r\n\t\r\n\t//===================================================================================\r\n\t// Declarations \r\n\t//-----------------------------------------------------------------------------------\r\n\t\r\n\t//===================================================================================\r\n\t// Variables \r\n\t//-----------------------------------------------------------------------------------\t\t\r\n\t\r\n\tstatic var updateTimeStart\t: Float;\r\n\tstatic var updateTimeEnd\t: Float;\r\n\tstatic var renderTimeStart\t: Float;\r\n\tstatic var renderTimeEnd\t: Float;\r\n\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\t\r\n\tstatic public function update()\r\n\t{\r\n\t\tvar currentTime = Scheduler.realTime();\r\n\t\tdeltaTime = currentTime - lastTime;\r\n\t\tlastTime = currentTime;\r\n\t\t\r\n\t\ttotalTime += deltaTime;\r\n\t\ttimes.push(totalTime);\r\n\t\t\r\n\t\tvar nFps = 1.0 / deltaTime;\r\n\t\tif (Math.isFinite(nFps))\r\n\t\t\tfps = Math.round(nFps);\r\n\r\n\t\tx = App.appWidth - width;\r\n\t\t\r\n\t\t//var mem:Float = Math.round(System.totalMemory / 1024 / 1024 * 100)/100;\r\n\t}\r\n\t\r\n\tstatic public function render(g:Graphics) \r\n\t{\r\n\t\tg.font = EmbeddedAssets.fonts.cft;\r\n\t\tg.pushTranslation(x,y);\r\n\r\n\t\tDraw.fillRect(width, height, 0, 0, 0.5, 0xff000000);\r\n\t\tDraw.text(StringUtils.floatToString(fps, 2), 10, 10, 1, 0xcc00ff00, 36);\r\n\t\tDraw.text(\"FPS\", 55, 14, 1, 0xccaaddaa, 12);\r\n\t\t\r\n\t\tg.popTransformation();\r\n\t}\r\n\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\r\n\tstatic public function timeTrack(fts:FpsTimerState)\r\n\t{\r\n\t\tvar t = Scheduler.realTime();\r\n\t\tswitch (fts) \r\n\t\t{\r\n\t\t\tcase FpsTimerState.UPDATE_START:\r\n\t\t\t{\r\n\t\t\t\tupdateTimeStart = t;\r\n\t\t\t}\r\n\t\t\tcase FpsTimerState.UPDATE_END:\t\t\r\n\t\t\t{\r\n\t\t\t\tupdateTimeEnd = t; \r\n\t\t\t\tupdateTime = updateTimeEnd - updateTimeStart;  \r\n\t\t\t}\r\n\t\t\tcase FpsTimerState.RENDER_START:\r\n\t\t\t{\r\n\t\t\t\trenderTimeStart = t;\r\n\t\t\t}\r\n\t\t\tcase FpsTimerState.RENDER_END:\t\t\r\n\t\t\t{\r\n\t\t\t\trenderTimeEnd = t; \r\n\t\t\t\trenderTime = renderTimeEnd - renderTimeStart;\r\n\t\t\t\tframeTime = updateTime+renderTime;\r\n\t\t\t\tvar nFps = 1.0 / frameTime;\r\n\t\t\t\tif (Math.isFinite(nFps))\r\n\t\t\t\t\tvfps = Math.round(nFps);\t\t\t\t\r\n\t\t\t}\r\n\t\t\tdefault:\r\n\t\t}\r\n\t}\r\n\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n}\r\n\r\nenum FpsTimerState\r\n{\r\n\tUPDATE_START;\r\n\tUPDATE_END;\r\n\tRENDER_START;\r\n\tRENDER_END;\r\n}\r\n","package no.logic.kha.uix.console;\r\n\r\nimport kha.Assets;\r\nimport kha.Color;\r\nimport kha.graphics2.Graphics;\r\nimport kha.input.KeyCode;\r\nimport kha.input.Keyboard;\r\nimport no.logic.kha.uix.app.App;\r\nimport no.logic.kha.uix.assets.EmbeddedAssets;\r\nimport no.logic.kha.uix.debug.DebugInspector;\r\nimport no.logic.kha.uix.utils.StringUtils;\r\nimport no.logic.kha.uix.utils.TimeUtils;\r\n\r\ntypedef CommandBufferEntry =\r\n{\r\n\tvar\tcommand\t\t\t: String;\r\n\tvar\tcallback\t\t: (Any)->Void;\r\n}\r\n\r\ntypedef EntryBuffer =\r\n{\r\n\tvar time\t\t: String;\r\n\tvar text\t\t: String;\r\n\tvar type\t\t: Int;\r\n}\r\n\r\nclass UIXConsole\r\n{\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\r\n\t//===================================================================================\r\n\t// Consts \r\n\t//-----------------------------------------------------------------------------------\r\n\t\r\n\t//===================================================================================\r\n\t// Properties \r\n\t//-----------------------------------------------------------------------------------\r\n\r\n\tstatic public var i\t\t: UIXConsole;\r\n\r\n\tvar height\t\t\t\t: Float\t\t\t\t= 0;\r\n\tvar visible\t\t\t\t: Bool\t\t\t\t= true;\r\n\tvar transitionSpeed\t\t: Float\t\t\t\t= 0;\r\n\tvar obPoint\t\t\t\t: Int\t\t\t\t= 0;\r\n\tvar numlinestodraw\t\t: Int\t\t\t\t= 10;\r\n\tvar autoOpen\t\t\t: Bool\t\t\t\t= true;\r\n\tvar ctrlIsDown\t\t\t: Bool;\r\n\t\r\n\t//===================================================================================\r\n\t// Declarations \r\n\t//-----------------------------------------------------------------------------------\r\n\t\r\n\tvar commandBuffer \t\t: Array<CommandBufferEntry>\t\t= [];\r\n\tvar outputBuffer \t\t: Array<EntryBuffer>\t\t\t= [];\r\n\t\r\n\t//===================================================================================\r\n\t// Variables \r\n\t//-----------------------------------------------------------------------------------\t\t\r\n\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\t\r\n\tfunction new()\r\n\t{\r\n\t\tKeyboard.get().notify(onKeyDown,onKeyUp,null);\r\n\t}\r\n\t\r\n\tpublic function debug(value:Dynamic) \r\n\t{\r\n\t\tprint(value);\r\n\t}\r\n\t\r\n\tpublic function warning(value:Dynamic) \r\n\t{\r\n\t\tDebugInspector.i.warning(value);\t\t\r\n\t}\r\n\t\r\n\tpublic function error(value:Dynamic) \r\n\t{\r\n\t\tDebugInspector.i.error(value);\t\t\r\n\t}\r\n\t\t\r\n\tpublic function log(value:Dynamic) \r\n\t{\r\n\t\tDebugInspector.i.log(value);\t\r\n\t}\r\n\t\t\r\n\t\t\r\n\tpublic function report(value:Dynamic) \r\n\t{\r\n\t\tDebugInspector.i.report(value);\t\r\n\t}\r\n\t\t\r\n\tpublic function print(value:Dynamic) \r\n\t{\r\n\t\tif (autoOpen)\r\n\t\t\tshow();\r\n\t\t\t\r\n\t\toutputBuffer.push( { time:TimeUtils.getFormatedTimeStamp(), text:Std.string(value), type:0 });\t\r\n\t}\r\n\t\r\n\tfunction onKeyDown(k:KeyCode)\r\n\t{\r\n\t\tswitch (k) \r\n\t\t{\r\n\t\t\tcase KeyCode.Control:\r\n\t\t\t{\r\n\t\t\t\tctrlIsDown = true;\r\n\t\t\t}\r\n\t\t\tcase KeyCode.Return:\r\n\t\t\t{\r\n\t\t\t\tif (ctrlIsDown)\r\n\t\t\t\t\ttoggle();\r\n\t\t\t}\r\n\t\t\tdefault:\r\n\t\t\t\t\r\n\t\t}\r\n\t}\r\n\t\r\n\tfunction onKeyUp(k:KeyCode)\r\n\t{\r\n\t\tswitch (k) \r\n\t\t{\r\n\t\t\tcase KeyCode.Control:\r\n\t\t\t{\r\n\t\t\t\tctrlIsDown = false;\r\n\t\t\t}\r\n\t\t\tdefault:\r\n\t\t\t\t\r\n\t\t}\r\n\t}\r\n\t\r\n\tfunction toggle() \r\n\t{\r\n\t\tvisible = !visible;\r\n\t\tif (visible)\r\n\t\t\tshow();\r\n\t\telse\r\n\t\t\thide();\r\n\t}\r\n\t\r\n\tfunction show() \r\n\t{\r\n\t\ttransitionSpeed = 30;\r\n\t}\r\n\t\r\n\tfunction hide() \r\n\t{\r\n\t\ttransitionSpeed = -30;\r\n\t}\r\n\t\r\n\tpublic function update()\r\n\t{\r\n\t\tif (transitionSpeed != 0)\r\n\t\t{\r\n\t\t\theight += transitionSpeed;\r\n\t\t\tif (height >= 250)\r\n\t\t\t{\r\n\t\t\t\theight = 250;\r\n\t\t\t\ttransitionSpeed = 0;\r\n\t\t\t}\r\n\t\t\telse if (height <= 0)\r\n\t\t\t{\r\n\t\t\t\theight = 0;\r\n\t\t\t\ttransitionSpeed = 0;\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tif (height == 0)\r\n\t\t\treturn;\r\n\t\t\r\n\t\tobPoint = 0;\r\n\t\t\r\n\t\tif (outputBuffer.length > numlinestodraw)\r\n\t\t\tobPoint = outputBuffer.length - numlinestodraw;\r\n\t}\r\n\r\n\tpublic function render(g:Graphics)\r\n\t{\r\n\t\tif (height == 0)\r\n\t\t\treturn;\r\n\t\t\t\r\n\t\tvar startY:Int = Math.round(App.appHeight - height);\r\n\t\t\r\n\t\tg.scissor(0, startY, App.appWidth, Math.round(height));\r\n        g.color = 0xff222222;\r\n\t\tg.opacity = 0.7;\r\n\t\tg.fillRect(0, App.appHeight - height, App.appWidth, App.appHeight);\r\n\t\t\r\n\t\tvar lx:Float = 20;\r\n\t\tvar ly:Float = startY + 20;\r\n\t\t\r\n\t\tg.color = Color.White;\r\n\t\tg.opacity = 0.15;\r\n\t\t\r\n\t\tg.drawLine(0, startY+1, App.appWidth, startY+1);\r\n\t\t\r\n\t\tfor (j in 0...numlinestodraw+1) \r\n\t\t{\r\n\t\t\tvar py = ly + (j * 20);\r\n\t\t\tg.drawLine(lx, py, App.appWidth - lx, py);\r\n\t\t}\r\n\t\t\r\n\t\tg.color = 0xffcccccc;\r\n\t\tg.opacity = 1;\r\n\t\tg.font = EmbeddedAssets.fonts.cft;\r\n\t\tg.fontSize = 12;\r\n\t\tly = startY + 25;\r\n\t\t\r\n\t\tvar outputLineNr = \"\";\r\n\t\tvar outputTime = \"\";\r\n\t\tvar outputDebug = \"\";\r\n\t\tfor (t in 0...numlinestodraw) \r\n\t\t{\r\n\t\t\tvar py = ly + (t * 20);\r\n\t\t\tif (obPoint>-1 && obPoint < outputBuffer.length)\r\n\t\t\t{\r\n\t\t\t\tvar py = ly + (t * 20);\r\n\t\t\t\tg.color = 0x88888888;\r\n\t\t\t\tg.drawString(StringUtils.enforceFourDigitNumberToString(obPoint+1),\tlx, py);\r\n\t\t\t\tg.color = 0xaaaaaaaa;\r\n\t\t\t\tg.drawString(outputBuffer[obPoint].time, lx+40, py);\r\n\t\t\t\tg.color = 0xeecccccc;\r\n\t\t\t\tg.drawString(outputBuffer[obPoint].text, lx+107, py);\r\n\t\t\t\tobPoint++;\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tg.disableScissor();\r\n\t}\r\n\r\n\t\r\n\tstatic public function init() \r\n\t{\r\n\t\tif (i==null)\r\n\t\t\ti = new UIXConsole();\r\n\t}\r\n\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\t\r\n\tstatic public function Debug(value:Dynamic) \r\n\t{\r\n\t\tUIXConsole.i.debug(value);\r\n\t}\r\n\t\r\n\tstatic public function Warning(value:Dynamic) \r\n\t{\r\n\t\tUIXConsole.i.warning(value);\r\n\t}\r\n\t\r\n\tstatic public function Print(text:String) \r\n\t{\r\n\t\tUIXConsole.i.print(text);\r\n\t}\t\r\n\t\r\n\tstatic public function Toggle() \r\n\t{\r\n\t\tUIXConsole.i.toggle();\r\n\t}\r\n\t\r\n\tstatic public function Show() \r\n\t{\r\n\t\tUIXConsole.i.show();\r\n\t}\r\n\t\r\n\tstatic public function Hide() \r\n\t{\r\n\t\tUIXConsole.i.hide();\r\n\t}\r\n\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\t\r\n}\r\n\t\r\n","package no.logic.kha.uix.core.loading;\r\n\r\nimport haxe.Constraints.Function;\r\nimport haxe.crypto.Base64;\r\nimport haxe.io.Bytes;\r\nimport kha.AssetError;\r\nimport kha.Assets;\r\nimport kha.Blob;\r\nimport kha.Image;\r\nimport kha.Scheduler;\r\nimport kha.graphics4.TextureFormat;\r\nimport kha.network.Http;\r\nimport kha.network.HttpMethod;\r\nimport no.logic.kha.uix.app.App;\r\nimport no.logic.kha.uix.debug.DebugInspector;\r\nimport no.logic.kha.uix.types.Object;\r\n\r\n@:dox(hide)\r\nenum ContentType {\r\n  XML;\r\n  JSON;\r\n  IMAGE;\r\n  VIDEO;\r\n  SOUND;\r\n  TEXT; //generic text type\r\n  BYTES; //generic binary type\r\n}\r\n\r\nprivate typedef ContentKindMatch = {\r\n  var kind:ContentType;\r\n  var regex:EReg;\r\n}\r\n\r\n/**\r\n * ...\r\n * @author \r\n */\r\nclass UIXLoader\r\n{\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\t\r\n\t//===================================================================================\r\n\t// Consts \r\n\t//-----------------------------------------------------------------------------------\r\n\t\r\n\t@:dox(hide)\r\n\t#if (kha_js)\r\n\tpublic static inline var DEFAULT_CONTENT_TYPE = \"text/plain\";\r\n\t#else\r\n\tpublic static inline var DEFAULT_CONTENT_TYPE = \"application/octet-stream\";\r\n\t#end\r\n\r\n\tstatic public inline var LOCAL_FILE\t\t: String = \"urlloader_localFile\";\r\n\tstatic public inline var WEB_URL\t\t: String = \"urlloader_webaddress\";\r\n\r\n\t//===================================================================================\r\n\t// Properties \r\n\t//-----------------------------------------------------------------------------------\r\n\t\r\n\tpublic var source\t\t\t\t\t\t: String;\r\n\tpublic var loadtime\t\t\t\t\t\t: Float;\r\n\tpublic var type\t\t\t\t\t\t\t: ContentType;\r\n\tpublic var pathType\t\t\t\t\t\t: String;\r\n\tpublic var corsProxy\t\t\t\t\t: Bool\t\t\t= false;\r\n\tpublic var disposeOnComplete\t\t\t: Bool\t\t\t= false;\r\n\tpublic var useCache\t\t\t\t\t\t: Bool\t\t\t= true;\r\n\t\r\n\tvar startTime\t\t\t\t\t\t\t: Float;\r\n\tvar endTime\t\t\t\t\t\t\t\t: Float;\r\n\r\n\t//===================================================================================\r\n\t// Declarations \r\n\t//-----------------------------------------------------------------------------------\r\n\r\n\tpublic var contentTEXT\t\t\t\t\t: String;\r\n\tpublic var contentXML\t\t\t\t\t: Xml;\r\n\tpublic var contentJSON\t\t\t\t\t: Dynamic;\r\n\tpublic var contentIMAGE\t\t\t\t\t: Image;\r\n\t//public var bytes\t\t\t\t\t\t: Bytes;\r\n\tpublic var contentRAW\t\t\t\t\t: Any;\r\n\tpublic var contentIsBinary\t\t\t\t: Bool;\r\n\tpublic var contentType\t\t\t\t\t: ContentType;\r\n\tvar parsedFileType\t\t\t\t\t\t: ContentType;\r\n\r\n\tstatic public var loaderQueue\t\t\t: Array<LoaderQueueItem>;\r\n\tstatic public var loaderQueueIndex\t\t: Int;\r\n\tstatic public var loaderQueueLoader\t\t: UIXLoader;\r\n\tstatic public var onQueueCompleteCallback: ()->Void;\r\n\tstatic public var onQueueLoadErrorCallback: ()->Void;\r\n\tstatic public var onQueueItemCompleteCallback: (UIXLoader)->Void;\r\n\tstatic public var onQueueItemLoadErrorCallback: (UIXLoader)->Void;\r\n\r\n\t#if (kha_js)\r\n\tpublic var xhr\t\t\t\t\t\t\t: js.html.XMLHttpRequest;\r\n\t#end\r\n\t\r\n\tvar cProxy\t\t\t\t\t\t\t\t: String\t\t= \"cors-anywhere.herokuapp.com/\";\r\n\r\n\t//===================================================================================\r\n\t// Callbacks \r\n\t//-----------------------------------------------------------------------------------\t\t\r\n\r\n\tpublic\tvar\tonComplete\t\t\t\t\t: (UIXLoader)->Void;\r\n\tpublic\tvar\tonError\t\t\t\t\t\t: (UIXLoader)->Void;\r\n\r\n\t//public\tvar\tonProgress\t\t\t\t: Function;\r\n\t//public\tvar\tonBytesLoaded\t\t\t: Function;\r\n\t//public\tvar\tonFileNotFound\t\t\t: Function;\r\n\t//public\tvar\tonQueueItemComplete\t\t: Function;\r\n\t\r\n\t//===================================================================================\r\n\t// Variables \r\n\t//-----------------------------------------------------------------------------------\t\t\r\n\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\t\t\r\n\t\r\n\t//===================================================================================\r\n\t// Constructor\r\n\t//-----------------------------------------------------------------------------------\r\n\t\t\r\n\tpublic function new(?props:Object) \r\n\t{\r\n\t\tsetProps(props);\r\n\t}\r\n\r\n\tfunction init() \r\n\t{\r\n\t\t//if (this.source != null)\r\n\t\t//{\r\n\t\t\t//load(this.source);\r\n\t\t//}\r\n\t}\r\n\t\r\n\tpublic function setProps(props:Null<Object>):Void \r\n\t{\r\n\t\tif (props != null)\r\n\t\t{\r\n\t\t\tfor (name in props) \r\n\t\t\t{\r\n\t\t\t\tReflect.setProperty(this, name, props[name]);\r\n\t\t\t}\r\n\t\t}\t\t\r\n\t}\r\n\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\t\t\r\n\t\r\n\tpublic function loadImage(file:String)\r\n\t{\r\n\t\ttype = ContentType.IMAGE;\r\n\t\tsource = analyzePath(file);\r\n\t\tif (source != null)\r\n\t\t{\r\n\t\t\tif (useCache && UIX.cache.images.has(source))\r\n\t\t\t{\r\n\t\t\t\tUIX.c.log(\"Grabbed from cache: \" + source);\r\n\t\t\t\tthis.contentIMAGE = UIX.cache.images.get(source);\r\n\t\t\t\tif (onComplete != null)\r\n\t\t\t\tif (onComplete != null)\r\n\t\t\t\t\tonComplete(this);\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tif (pathType == LOCAL_FILE)\r\n\t\t\t\t{\r\n\t\t\t\t\tif (fileExists(source))\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t#if (kha_kore || kha_krom || kha_js || android_native)\r\n\t\t\t\t\t\tAssets.loadImageFromPath(source, false, onImageLoaded, onFileLoadError);\r\n\t\t\t\t\t\t#end\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tDebugInspector.i.notfound(\"File not found : \" + source);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse if (pathType == WEB_URL)\r\n\t\t\t\t{\r\n\t\t\t\t\tstartTime = Scheduler.realTime();\r\n\t\t\t\t\t#if (kha_kore || android_native)\r\n\t\t\t\t\tvar httpRequest = new com.akifox.asynchttp.HttpRequest( { url:source, method : com.akifox.asynchttp.HttpMethod.GET, callback:onHttpResponseImage, async : true, http11 : true });\r\n\t\t\t\t\t//httpRequest = httpRequest.clone();\r\n\t\t\t\t\thttpRequest.headers.add(\"Access-Control-Allow-Origin:\", \"*\");\r\n\t\t\t\t\thttpRequest.headers.add(\"Content-Type\", \"application/xml\");\r\n\t\t\t\t\thttpRequest.contentType = \"application/x-www-form-urlencoded\"; \r\n\t\t\t\t\thttpRequest.timeout = 30;\r\n\t\t\t\t\thttpRequest.send();\t\t\t\t\r\n\t\t\t\t\t#elseif (kha_js || kha_krom)\r\n\t\t\t\t\tvar headers = new Map<String,String>();\r\n\t\t\t\t\t//headers.set(\"mime-type\", \"text/plain; charset=x-user-defined\");\r\n\t\t\t\t\tvar useSecure:Bool = isSecure(source);\r\n\t\t\t\t\tfile = stripHttp(source);\r\n\t\t\t\t\tvar domain = getDomain(source);\r\n\t\t\t\t\tvar domainPath = getDomainPath(source);\r\n\t\t\t\t\tHttpRequestJS(domain, domainPath, null, useSecure?443:80 ,useSecure, kha.network.HttpMethod.Get, headers, onHttpResponseImage);\t\t\t\t\t\t\r\n\t\t\t\t\t#end\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n    }\r\n\r\n\t#if (kha_kore || android_native)\r\n\tfunction onHttpResponseImage(response:com.akifox.asynchttp.HttpResponse)\r\n\t{\r\n\t\tif (response.isOK)\r\n\t\t{\r\n\t\t\tif (response.content != null)\r\n\t\t\t{\r\n\t\t\t\tcontentRAW = response.contentRaw;\r\n\t\t\t\t//UIX.c.debug(response.toString());\r\n\t\t\t\t//UIX.c.debug(\"Binary: \"+response.isBinary);\r\n\t\t\t\t//UIX.c.debug(\"Image: \" + response.isImage);\r\n\t\t\t\t\r\n\t\t\t\tif (response.isImage)\r\n\t\t\t\t{\r\n\t\t\t\t\timageFromBytes(contentRAW, onImageLoaded);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}  \t\r\n\t#elseif (kha_js || kha_krom)\r\n\tfunction onHttpResponseImage()\r\n\t{\r\n\t\tvar reader = new js.html.FileReader();\r\n\t\t//reader.readAsDataURL(xhr.response);\r\n\t\t//reader.readAsBinaryString(xhr.response);\r\n\t\treader.readAsArrayBuffer(xhr.response);\r\n\t\treader.onload =  function(e)\r\n\t\t{\r\n\t\t\ttry\r\n\t\t\t{\r\n\t\t\t\tcontentRAW = Bytes.ofData(e.target.result);\r\n\t\t\t\timageFromBytes(contentRAW, onImageLoaded);\r\n\t\t\t}\r\n\t\t\tcatch (e:Dynamic)\r\n\t\t\t{\r\n\t\t\t\tDebugInspector.i.warning(\"Error decoding image : \" + source);\r\n\t\t\t}\r\n\t\t\txhr = null;\r\n\t\t};\r\n\t}\r\n\t\r\n\tpublic function HttpRequestJS(url: String, path: String, data: String, port: Int, secure: Bool, method: HttpMethod, headers: Map<String, String>, callback: Void->Void /*error, response, body*/): Void\r\n\t{\r\n\t\t#if (kha_krom)\r\n\t\t//no solution for krom yet...\r\n\t\tonFileLoadError(null);\r\n\t\t\r\n\t\t#elseif (kha_js)\r\n\t\txhr = new js.html.XMLHttpRequest(\"\");\r\n\t\tvar cp:String = \"\";\r\n\t\tif (corsProxy)\r\n\t\t\tcp = cProxy;\r\n\t\t\t\r\n\t\tvar completeUrl = (secure ? \"https://\" : \"http://\") + cp + url + \":\" + port + \"/\" + path;\r\n\t\t// xhr.open(@:privateAccess Http.methodToString(method), completeUrl, true);\r\n\t\txhr.open(\"Get\", completeUrl, true);\r\n\t\txhr.responseType = js.html.XMLHttpRequestResponseType.BLOB;\r\n\t\tif (headers != null) {\r\n\t\t\tfor (key in headers.keys()) {\r\n\t\t\t\txhr.setRequestHeader(key, headers[key]);\r\n\t\t\t}\r\n\t\t}\r\n\t\t//req.onreadystatechange = function () {\r\n\t\t\t//if (req.readyState != 4) return;\r\n\t\t\t//if (req.status != 200)  {\r\n\t\t\t\t//callback(1, req.status, null);\r\n\t\t\t\t//return;\r\n\t\t\t//}\r\n\t\t\t//callback(0, req.status, req.responseText);\r\n\t\t//}\r\n\t\txhr.onload = callback;\r\n\t\txhr.onerror = onFileLoadError;\r\n\t\txhr.send(data);\r\n\t\t#else\r\n\t\tonFileLoadError(null);\r\n\t\t#end\r\n\t}\t\r\n\t#end\r\n\r\n\tpublic function imageFromBytes(bytes:Bytes, onImageDecoded:(Image)->Void) \r\n\t{\r\n\t\tImage.fromEncodedBytes(bytes, null, function(i:Image)\r\n\t\t{\r\n\t\t\tloadtime = Scheduler.realTime() - startTime;\r\n\t\t\tif (onImageDecoded != null)\r\n\t\t\t\tonImageDecoded(i);\t\t\t\t\t\t\r\n\t\t\t\t\r\n\t\t}, function(error:String)\r\n\t\t{\r\n\t\t\tDebugInspector.i.warning(\"Error decoding image!\");\r\n\t\t\t\r\n\t\t}, false);\t\r\n\t\t\t\t\t\r\n\t}\r\n\t\r\n\tfunction onURLloaded(data:String) \r\n\t{\r\n\t\t//UIX.c.debug(\"LOAD \"+data);\r\n\t}\r\n\t\t\t\r\n\tpublic function onImageLoaded(image:Image)\r\n\t{\r\n\t\tthis.contentIMAGE = image;\r\n\t\tUIX.cache.images.add(source, this.contentIMAGE);\r\n\t\t\t\r\n\t\tif (onComplete != null)\r\n\t\t\tonComplete(this);\r\n\t}\r\n\t\t\r\n\tpublic function onFileLoadError(e) \r\n\t{\r\n\t\tDebugInspector.i.warning(\"Error loading file : \" +this.source);\r\n\t\tif (onError != null)\r\n\t\t\tonError(this);\r\n\t}\r\n\r\n\t/////////////////////////////////////////////////////////////////////////////////////\t\r\n\t\r\n\tpublic function load(file:String)\r\n\t{\r\n\t\tsource = analyzePath(file);\r\n\t\tif (source != null)\r\n\t\t{\r\n\t\t\tif (parsedFileType == ContentType.IMAGE && useCache && UIX.cache.images.has(source))\r\n\t\t\t{\r\n\t\t\t\tUIX.c.log(\"Grabbed from cache: \" + source);\r\n\t\t\t\tthis.contentIMAGE = UIX.cache.images.get(source);\r\n\t\t\t\tif (onComplete != null)\r\n\t\t\t\t\tonComplete(this);\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tif (pathType == LOCAL_FILE)\r\n\t\t\t\t{\r\n\t\t\t\t\tif (fileExists(source))\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t#if (kha_kore || kha_krom || kha_js || android_native)\r\n\t\t\t\t\t\tAssets.loadBlobFromPath(source, onBlobLoaded, onFileLoadError);\r\n\t\t\t\t\t\t#end\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tDebugInspector.i.notfound(\"File not found : \" + source);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse if (pathType == WEB_URL)\r\n\t\t\t\t{\r\n\t\t\t\t\tstartTime = Scheduler.realTime();\r\n\t\t\t\t\t#if (kha_kore || android_native)\r\n\t\t\t\t\t\t\r\n\t\t\t\t\tvar httpRequest = new com.akifox.asynchttp.HttpRequest( { url:source, method : com.akifox.asynchttp.HttpMethod.GET, callback:onHttpResponseFile, async : true, http11 : true });\r\n\t\t\t\t\t//httpRequest = httpRequest.clone();\r\n\t\t\t\t\t//httpRequest.headers.add(\"Access-Control-Allow-Origin:\", \"*\");\r\n\t\t\t\t\t//httpRequest.headers.add(\"Content-Type\", \"application/xml\");\r\n\t\t\t\t\t//httpRequest.contentType=\"application/x-www-form-urlencoded\"; \r\n\t\t\t\t\thttpRequest.timeout = 30;\r\n\t\t\t\t\thttpRequest.send();\t\t\t\t\r\n\t\t\t\t\t#elseif (kha_js || kha_krom)\r\n\t\t\t\t\tvar headers = new Map<String,String>();\r\n\t\t\t\t\t//headers.set(\"Access-Control-Allow-Origin:\", \"*\");\r\n\t\t\t\t\t//headers.set(\"Access-Control-Request-Method\", \"GET\");\r\n\t\t\t\t\t//headers.set(\"Origin\", \"*\");\r\n\t\t\t\t\t//headers.set(\"User-Agent\", \"*\");\r\n\t\t\t\t\t//headers.set(\"Access-Control-Allow-Headers\", \"Content-Type,Authorization\");\r\n\t\t\t\t\t//headers.set(\"Access-Control-Allow-Origin\", \"*\");\r\n\t\t\t\t\t//headers.set(\"Access-Control-Allow-Credentials\", \"true\");\r\n\t\t\t\t\t//headers.set(\"Access-Control-Allow-Methods\", \"GET,HEAD,OPTIONS,POST,PUT\");\r\n\t\t\t\t\t//headers.set(\"Access-Control-Allow-Headers\", \"Access-Control-Allow-Headers, Origin,Accept, X-Requested-With, Content-Type, Access-Control-Request-Method, Access-Control-Request-Headers\");\t\t\t\t\r\n\t\t\t\t\t//headers.set(\"Content-Type\", \"text/plain\");\r\n\t\t\t\t\t//headers.set(\"Mime-Type\", \"text/plain; charset=x-user-defined\");\r\n\t\t\t\t\t\r\n\t\t\t\t\tvar useSecure:Bool = isSecure(source);\r\n\t\t\t\t\tfile = stripHttp(source);\r\n\t\t\t\t\tvar domain = getDomain(source);\r\n\t\t\t\t\tvar domainPath = getDomainPath(source);\r\n\t\t\t\t\t\r\n\t\t\t\t\tHttpRequestJS(domain, domainPath, \"\", useSecure?443:80 ,useSecure, kha.network.HttpMethod.Get, headers, onHttpResponseFile);\t\t\t\t\r\n\t\t\t\t\t#end\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n    }\r\n\t\r\n\tfunction getDomain(file:String):String\r\n\t{\r\n\t\tif (file == null)\r\n\t\t\treturn null;\r\n\t\t\t\r\n\t\tfile = file.split(\"https://\").join(\"\").split(\"http://\").join(\"\");\r\n\t\t\t\r\n\t\tif (file.indexOf(\"/\") !=-1)\r\n\t\t{\r\n\t\t\tvar fa = file.split(\"/\");\r\n\t\t\tif (fa.length > 0)\r\n\t\t\t\treturn fa[0];\r\n\t\t}\r\n\t\t\r\n\t\treturn file;\r\n\t}\r\n\t\r\n\tfunction getDomainPath(file:String):String\r\n\t{\r\n\t\tif (file == null)\r\n\t\t\treturn null;\r\n\t\t\r\n\t\tfile = file.split(\"https://\").join(\"\").split(\"http://\").join(\"\");\r\n\t\t\t\r\n\t\tif (file.indexOf(\"/\") !=-1)\r\n\t\t{\r\n\t\t\tvar fa = file.split(\"/\");\r\n\t\t\tif (fa.length > 1)\r\n\t\t\t{\r\n\t\t\t\tfa.shift();\r\n\t\t\t\treturn fa.join(\"/\");\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t\treturn \"\";\r\n\t\t}\r\n\t\treturn \"\";\r\n\t}\r\n\t\r\n\tfunction stripHttp(file:String):String\r\n\t{\r\n\t\tif (file == null)\r\n\t\t\treturn null;\r\n\t\t\t\r\n\t\treturn file.split(\"https://\").join(\"\").split(\"https//\").join(\"\").split(\"http//\").join(\"\").split(\"http://\").join(\"\");\r\n\t}\r\n\t\r\n\tfunction isSecure(file:String):Bool\r\n\t{\r\n\t\tvar isSec:Bool = false;\r\n\t\tif (file != null)\r\n\t\t{\r\n\t\t\tif (file.indexOf(\"http://\") !=-1)\r\n\t\t\t\tisSec = false;\r\n\t\t\telse if (file.indexOf(\"http//\") !=-1)\r\n\t\t\t\tisSec = false;\r\n\t\t\telse if (file.indexOf(\"https//\") !=-1)\r\n\t\t\t\tisSec = true;\r\n\t\t\telse if (file.indexOf(\"https://\") !=-1)\r\n\t\t\t\tisSec = true;\r\n\t\t}\r\n\t\treturn isSec;\r\n\t}\r\n\t\r\n\tpublic function onBlobLoaded(blob:Blob)\r\n\t{\r\n\t\tthis.contentRAW = blob.bytes;\r\n\t\tif (onComplete != null)\r\n\t\t\tonComplete(this);\r\n\t}\r\n\t\r\n\t#if (kha_kore || android_native)\r\n\tfunction onHttpResponseFile(response:com.akifox.asynchttp.HttpResponse)\r\n\t{\r\n\t\tif (response.isOK)\r\n\t\t{\r\n\t\t\tif (response.content != null)\r\n\t\t\t{\r\n\t\t\t\tvar contentKind:ContentType = type;\r\n\t\t\t\tcontentType = contentKind;\r\n\t\t\t\tcontentIsBinary = determineIsBinary(contentKind);\t\t\r\n\t\t\r\n\t\t\t\tcontentRAW = response.contentRaw;\r\n/*\t\t\t\tif (contentIsBinary)\r\n\t\t\t\t{\r\n\t\t\t\t\ttry\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tcontentRAW = response.contentRaw;// Bytes.ofData(data);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcatch (e:Dynamic)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttrace(\"Error : \" + source);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\ttry\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tcontentRAW = Std.string(response.contentRaw);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcatch (e:Dynamic)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttrace(\"Error with string : \" + source);\r\n\t\t\t\t\t}\t\t\t\t\r\n\t\t\t\t}\t\t\t\t\r\n*/\t\t\t\t//contentRAW = response.contentRaw;\r\n\t\t\t\t\r\n\t\t\t\t//loadtime = Scheduler.realTime() - startTime;\r\n\t\t\t\tparseLoadedData();\r\n\t\t\t\t//if (response.isText)\r\n\t\t\t\t//{\r\n\t\t\t\t\t//contentTEXT = response.toText();\r\n\t\t\t\t\t//if (onComplete != null)\r\n\t\t\t\t\t\t//onComplete(this);\t\t\t\t\t\t\r\n\t\t\t\t//}\r\n\t\t\t\t//else if (response.isJson)\r\n\t\t\t\t//{\r\n\t\t\t\t\t//contentJSON = response.toJson();\r\n\t\t\t\t\t//if (onComplete != null)\r\n\t\t\t\t\t\t//onComplete(this);\t\t\t\t\t\t\r\n\t\t\t\t//}\r\n\t\t\t\t//else if (response.isXml)\r\n\t\t\t\t//{\r\n\t\t\t\t\t//contentXML = response.toXml();\r\n\t\t\t\t\t//if (onComplete != null)\r\n\t\t\t\t\t\t//onComplete(this);\t\t\t\t\t\t\r\n\t\t\t\t//}\r\n\t\t\t\t//else if (response.isImage)\r\n\t\t\t\t//{\r\n\t\t\t\t\t//imageFromBytes(contentRAW, onImageLoaded);\t\t\t\t\t\r\n\t\t\t\t//}\r\n\t\t\t\t//if (onError != null)\r\n\t\t\t\t\t//onError(this);\r\n\t\t\t}\r\n\t\t}\r\n\t}  \t\r\n\t#elseif (kha_js || kha_krom)\r\n\tfunction onHttpResponseFile()\r\n\t{\r\n\t\tif (type == null)\r\n\t\t\ttype = parsedFileType;\r\n\t\t\t\r\n\t\tvar contentKind:ContentType = type;\r\n\t\tcontentType = contentKind;\r\n\t\tcontentIsBinary = determineIsBinary(contentKind);\t\t\r\n\r\n\t\tvar reader = new js.html.FileReader();\r\n\t\t//reader.readAsDataURL(xhr.response);\r\n\t\t//reader.readAsBinaryString(xhr.response);\r\n\t\tif (contentIsBinary)\r\n\t\t\treader.readAsArrayBuffer(xhr.response);\r\n\t\telse\r\n\t\t\treader.readAsBinaryString(xhr.response);\r\n\t\t\t\r\n\t\treader.onload =  function(e)\r\n\t\t{\r\n\t\t\tif (contentIsBinary)\r\n\t\t\t{\r\n\t\t\t\ttry\r\n\t\t\t\t{\r\n\t\t\t\t\tcontentRAW = Bytes.ofData(e.target.result);\r\n\t\t\t\t}\r\n\t\t\t\tcatch (e:Dynamic)\r\n\t\t\t\t{\r\n\t\t\t\t\tDebugInspector.i.warning(\"Error : \" + source);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\ttry\r\n\t\t\t\t{\r\n\t\t\t\t\tcontentRAW = Std.string(e.target.result);\r\n\t\t\t\t}\r\n\t\t\t\tcatch (e:Dynamic)\r\n\t\t\t\t{\r\n\t\t\t\t\tDebugInspector.i.warning(\"Error with string : \" + source);\r\n\t\t\t\t}\t\t\t\t\r\n\t\t\t}\r\n\t\t\tparseLoadedData();\r\n\t\t}\r\n\t\treader.onerror = function(e)\r\n\t\t{\r\n\t\t\tDebugInspector.i.warning(\"Error loading file: \"+e);\r\n\t\t}\r\n\t}\r\n\t#end\r\n\t\r\n\tfunction parseLoadedData()\r\n\t{\r\n\t\t//UIX.c.debug(\"binary: \"+contentIsBinary);\t\t\t\t\r\n\t\t\t\r\n\t\tloadtime = Scheduler.realTime() - startTime;\r\n\t\tif (contentType==ContentType.TEXT)\r\n\t\t{\r\n\t\t\ttry\r\n\t\t\t{\r\n\t\t\t\tcontentTEXT = Std.string(contentRAW);\r\n\t\t\t\tif (onComplete != null)\r\n\t\t\t\t\tonComplete(this);\t\t\t\t\t\t\r\n\t\t\t} \r\n\t\t\tcatch (msg:Dynamic)\r\n\t\t\t{\r\n\t\t\t\tDebugInspector.i.warning(\"content error\");\r\n\t\t\t}\t\t\t\t\r\n\t\t}\r\n\t\telse if (contentType==ContentType.JSON)\r\n\t\t{\r\n\t\t\ttry\r\n\t\t\t{\r\n\t\t\t\tcontentJSON = haxe.Json.parse(contentRAW);\r\n\t\t\t} \r\n\t\t\tcatch (msg:Dynamic)\r\n\t\t\t{\r\n\t\t\t\tDebugInspector.i.warning(\"content error\");\r\n\t\t\t}\r\n\t\t\tif (onComplete != null)\r\n\t\t\t\tonComplete(this);\t\t\t\t\t\t\r\n\t\t}\r\n\t\telse if (contentType==ContentType.XML)\r\n\t\t{\r\n\t\t\ttry\r\n\t\t\t{\r\n\t\t\t\tcontentXML= Xml.parse(contentRAW);\r\n\t\t\t}\r\n\t\t\tcatch (msg:Dynamic)\r\n\t\t\t{\r\n\t\t\t\tDebugInspector.i.warning(\"content error\");\r\n\t\t\t}\r\n\t\t\tif (onComplete != null)\r\n\t\t\t\tonComplete(this);\t\t\t\t\t\t\r\n\t\t}\r\n\t\telse if (contentType==ContentType.IMAGE)\r\n\t\t{\r\n\t\t\timageFromBytes(contentRAW, onImageLoaded);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tif (onComplete != null)\r\n\t\t\t\tonComplete(this);\t\r\n\t\t}\t\t\r\n\t}\r\n\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\t\r\n\t\r\n\tvar CONTENT_KIND_MATCHES:Array<ContentKindMatch> = [\r\n\t{\r\n\t\tkind:ContentType.IMAGE,\r\n\t\tregex:~/^image\\/(jpe?g|png|gif)/i\r\n\t}, \r\n\t{\r\n\t\tkind:ContentType.XML,\r\n\t\tregex:~/(application\\/xml|text\\/xml|\\+xml)/i\r\n\t},\r\n\t{\r\n\t\tkind:ContentType.JSON,\r\n\t\tregex:~/^(application\\/json|\\+json)/i\r\n\t},\r\n\t{\r\n\t\tkind:ContentType.TEXT,\r\n\t\tregex:~/(^text|application\\/javascript)/i\r\n\t} //text is the last one\r\n\t];\r\n\r\n\t// The content kind is used to determine if a content is Binary or Text\r\n\t@:dox(hide)\r\n\tpublic function determineContentKind(contentType:String):ContentType\r\n\t{\r\n\t\tvar contentKind = ContentType.BYTES;\r\n\t\tfor (el in CONTENT_KIND_MATCHES)\r\n\t\t{\r\n\t\t\tif (el.regex.match(contentType))\r\n\t\t\t{\r\n\t\t\t\tcontentKind = el.kind;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn contentKind;\r\n\t}\r\n\r\n\t@:dox(hide)\r\n\tpublic function determineIsBinary(contentKind:ContentType):Bool\r\n\t{\r\n\t\tif (contentKind == ContentType.BYTES || contentKind == ContentType.IMAGE) return true;\r\n\t\t\treturn false;\r\n\t}\r\n\r\n  /////////////////////////////////////////////////////////////////////////////////////\t\t\r\n\t\r\n\tfunction analyzePath(url:String):String \r\n\t{\r\n\t\tif (url == null)\r\n\t\t\treturn url;\r\n\t\t\t\r\n\t\t// Is path local\r\n\t\t\t\t\r\n\t\tparsedFileType = getFileType(url);\r\n\t\t\r\n\t\tif (url.indexOf(\"://\") ==-1)\r\n\t\t{\r\n\t\t\turl = url.split(\"/\").join(\"\\\\\");\r\n\t\t\t//if (url.charAt(0) == \"/\" || url.charAt(0) == \"\\\\\")\r\n\t\t\t\t//url = url.substr(1);\r\n\t\t\t\t\r\n\t\t\tpathType = UIXLoader.LOCAL_FILE;\r\n\t\t\t\t\r\n\t\t\treturn url;\r\n\t\t}\r\n\t\t\r\n\t\t// Is path an URL?\r\n\t\t\r\n\t\tif (url.indexOf(\"http://\") !=-1)\r\n\t\t{\r\n\t\t\tvar tu = url.split(\"http://\").join(\"\");\r\n\t\t\tvar mx = tu.split(\"/\");\r\n\t\t\t\r\n\t\t\tvar nu = \"http://\" + mx.shift();\r\n\t\t\tvar cstr = mx.join(\"/\");\r\n\t\t\t//nu += \"/\" + StringTools.urlEncode(cstr);\r\n\t\t\tnu += \"/\" + cstr;\r\n\t\t\turl = nu.split(\"%2F\").join(\"/\");\r\n\t\t\tpathType = UIXLoader.WEB_URL;\r\n\t\t\treturn url;\r\n\t\t}\r\n\t\telse if (url.indexOf(\"https://\") !=-1)\r\n\t\t{\r\n\t\t\tvar tu = url.split(\"https://\").join(\"\");\r\n\t\t\tvar mx = tu.split(\"/\");\r\n\t\t\t\r\n\t\t\tvar nu = \"https://\" + mx.shift();\r\n\t\t\tvar cstr = mx.join(\"/\");\r\n\t\t\t//nu += \"/\"+StringTools.urlEncode(cstr);\r\n\t\t\tnu += \"/\"+cstr;\r\n\t\t\turl = nu.split(\"%2F\").join(\"/\");\r\n\t\t\tpathType = UIXLoader.WEB_URL;\r\n\t\t\treturn url;\r\n\t\t}\r\n\t\t\r\n\t\treturn url;\r\n\t}\r\n\t\r\n\tfunction detectFileType(url:String):String\r\n\t{\r\n\t\treturn url;\r\n\t}\r\n\t\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\t\t\r\n\t\r\n\tpublic function loadText(url:String, ?properties:Dynamic, ?onCompleteCallback:Null<(UIXLoader)->Void>, ?onLoadErrorCallback:Null<(UIXLoader)->Void>=null):UIXLoader\r\n\t{\r\n\t\tif (properties == null)\r\n\t\t\tproperties = {};\r\n\t\t\t\r\n\t\tproperties.type = ContentType.TEXT;\r\n\t\tsetProps(properties);\r\n\t\tif (onCompleteCallback!=null)\r\n\t\t\tonComplete = onCompleteCallback;\r\n\t\tif (onLoadErrorCallback!=null)\r\n\t\t\tonError = onLoadErrorCallback;\r\n\t\tload(url);\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\tpublic function loadJSON(url:String, ?properties:Dynamic, ?onCompleteCallback:Null<(UIXLoader)->Void>, ?onLoadErrorCallback:Null<(UIXLoader)->Void>=null):UIXLoader\r\n\t{\r\n\t\tif (properties == null)\r\n\t\t\tproperties = {};\r\n\t\t\t\r\n\t\tproperties.type = ContentType.JSON;\r\n\t\tsetProps(properties);\r\n\t\tif (onCompleteCallback!=null)\r\n\t\t\tonComplete = onCompleteCallback;\r\n\t\tif (onLoadErrorCallback!=null)\r\n\t\t\tonError = onLoadErrorCallback;\r\n\t\tload(url);\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\tpublic function loadXML(url:String, ?properties:Dynamic, ?onCompleteCallback:Null<(UIXLoader)->Void>, ?onLoadErrorCallback:Null<(UIXLoader)->Void>=null):UIXLoader\r\n\t{\r\n\t\tif (properties == null)\r\n\t\t\tproperties = {};\r\n\t\t\t\r\n\t\tproperties.type = ContentType.XML;\r\n\t\tsetProps(properties);\r\n\t\tif (onCompleteCallback!=null)\r\n\t\t\tonComplete = onCompleteCallback;\r\n\t\tif (onLoadErrorCallback!=null)\r\n\t\t\tonError = onLoadErrorCallback;\r\n\t\tload(url);\r\n\t\treturn this;\r\n\t}\r\n\t\r\n/*\tpublic function loadImage(url:String, ?properties:Dynamic, ?onCompleteCallback:(UIXLoader)->Void, ?onLoadErrorCallback:(UIXLoader)->Void=null):UIXLoader\r\n\t{\r\n\t\tif (properties == null)\r\n\t\t\tproperties = {};\r\n\t\t\t\r\n\t\tproperties.type = ContentType.IMAGE;\r\n\t\treturn load(url, properties, onCompleteCallback, onLoadErrorCallback);\r\n\t}*/\r\n\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\t\t\r\n\r\n\tstatic public function LoadText(url:String, ?properties:Dynamic, ?onCompleteCallback:(UIXLoader)->Void, ?onLoadErrorCallback:(UIXLoader)->Void=null):UIXLoader\r\n\t{\r\n\t\tif (properties == null)\r\n\t\t\tproperties = {};\r\n\t\t\t\r\n\t\tproperties.type = ContentType.TEXT;\r\n\t\treturn Load(url, properties, onCompleteCallback, onLoadErrorCallback);\r\n\t}\r\n\t\r\n\tstatic public function LoadJSON(url:String, ?properties:Dynamic, ?onCompleteCallback:(UIXLoader)->Void, ?onLoadErrorCallback:(UIXLoader)->Void=null):UIXLoader\r\n\t{\r\n\t\tif (properties == null)\r\n\t\t\tproperties = {};\r\n\t\t\t\r\n\t\tproperties.type = ContentType.JSON;\r\n\t\treturn Load(url, properties, onCompleteCallback, onLoadErrorCallback);\r\n\t}\r\n\t\r\n\tpublic static function LoadImage(url:String, ?properties:Dynamic, ?onCompleteCallback:(UIXLoader)->Void, ?onLoadErrorCallback:(UIXLoader)->Void=null):UIXLoader\r\n\t{\r\n\t\tvar uxl = new UIXLoader(properties);\r\n\t\tif (onCompleteCallback!=null)\r\n\t\t\tuxl.onComplete = onCompleteCallback;\r\n\t\tif (onLoadErrorCallback!=null)\r\n\t\t\tuxl.onError = onLoadErrorCallback;\r\n\t\t\r\n\t\tuxl.loadImage(url);\r\n\t\treturn uxl;\r\n\t}\r\n\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\t\t\r\n\r\n\tpublic static function Load(url:String, ?properties:Dynamic, ?onCompleteCallback:(UIXLoader)->Void, ?onLoadErrorCallback:(UIXLoader)->Void=null):UIXLoader\r\n\t{\r\n\t\tvar uxl = new UIXLoader(properties);\r\n\t\tif (onCompleteCallback!=null)\r\n\t\t\tuxl.onComplete = onCompleteCallback;\r\n\t\tif (onLoadErrorCallback!=null)\r\n\t\t\tuxl.onError = onLoadErrorCallback;\r\n\t\t\r\n\t\tuxl.load(url);\r\n\t\treturn uxl;\r\n\t}\r\n\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\t\t\r\n\r\n\tpublic static function fileExists(file:String):Bool\r\n\t{\r\n\t\tif (file != null)\r\n\t\t{\r\n\t\t\t#if kha_kore\r\n\t\t\treturn sys.FileSystem.exists(file);\r\n\t\t\t#elseif kha_krom\r\n\t\t\treturn true;\r\n\t\t\t#elseif kha_js\t\t\t\r\n\t\t\treturn true;\r\n\t\t\t#elseif android_native\t\t\t\r\n\t\t\treturn true;\r\n\t\t\t#end\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\t\r\n\t//===================================================================================\r\n\t// Detect filetype \r\n\t//-----------------------------------------------------------------------------------\r\n\r\n\tfunction getFileType(filename:String):ContentType\r\n\t{\r\n\t\tfilename = filename.toLowerCase();\r\n\r\n\t\tif (fio(filename, \"jpg\") || fio(filename, \"png\") || fio(filename, \"gif\") || fio(filename, \"jpeg\"))\r\n\t\t\treturn ContentType.IMAGE;\r\n\t\telse if (fio(filename, \"txt\") || fio(filename, \"text\") || fio(filename, \"nfo\"))\r\n\t\t\treturn ContentType.TEXT;\r\n\t\telse if (fio(filename, \"mp4\") || fio(filename, \"flv\") || fio(filename, \"f4v\") || fio(filename, \"mov\") || fio(filename, \"avi\") || fio(filename, \"mpg\") || fio(filename, \"mkv\") || fio(filename, \"mpeg\") || fio(filename, \"wmv\"))\r\n\t\t\treturn ContentType.VIDEO;\r\n\t\telse if (fio(filename, \"mp3\") || fio(filename, \"wav\"))\r\n\t\t\treturn ContentType.SOUND;\r\n\t\telse if (fio(filename, \"xml\"))\r\n\t\t\treturn ContentType.XML;\r\n\t\telse if (fio(filename, \"json\") || fio(filename, \"jsn\"))\r\n\t\t\treturn ContentType.JSON;\r\n\t\telse\r\n\t\t\treturn ContentType.BYTES;\r\n\t}\r\n\t\r\n\tfunction fio(name:String,key:String):Bool\r\n\t{\r\n\t\tif (name.indexOf(\".\"+key) == -1)\r\n\t\t\treturn false;\r\n\t\telse\r\n\t\t\treturn true;\r\n\t}\r\n\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\t\r\n\t\r\n\tstatic public function addToQueue(source:String, ?properties:Dynamic):Class<UIXLoader>\r\n\t{\r\n\t\tif (loaderQueue==null)\r\n\t\t\tloaderQueue = [];\r\n\r\n\t\tloaderQueue.push({source:source,properties:properties});\r\n\t\treturn UIXLoader;\r\n\t}\r\n\r\n\tstatic public function runQueue(?onQueueCompleteCallback:()->Void, ?onQueueLoadErrorCallback:()->Void,?onQueueItemCompleteCallback:(UIXLoader)->Void, ?onQueueItemLoadErrorCallback:(UIXLoader)->Void,?properties:Dynamic):Class<UIXLoader>\r\n\t{\r\n\t\t// if (loaderQueue==null)\r\n\t\t// {\r\n\t\t\tif (loaderQueueLoader==null)\r\n\t\t\t\tloaderQueueLoader = new UIXLoader(properties);\r\n\t\t\telse\r\n\t\t\t\tloaderQueueLoader.setProps(properties);\r\n\t\t\t\r\n\t\t\tloaderQueueLoader.onComplete = onQueueItemComplete;\r\n\t\t\tloaderQueueLoader.onError = onQueueItemError;\r\n\t\t\tloaderQueueIndex = 0;\r\n\r\n\t\t\tif (onQueueCompleteCallback!=null)\r\n\t\t\t\tUIXLoader.onQueueCompleteCallback = onQueueCompleteCallback;\r\n\t\t\tif (onQueueLoadErrorCallback!=null)\r\n\t\t\t\tUIXLoader.onQueueLoadErrorCallback = onQueueLoadErrorCallback;\r\n\t\t\tif (onQueueItemCompleteCallback!=null)\r\n\t\t\t\tUIXLoader.onQueueItemCompleteCallback = onQueueItemCompleteCallback;\r\n\t\t\tif (onQueueItemLoadErrorCallback!=null)\r\n\t\t\t\tUIXLoader.onQueueItemLoadErrorCallback = onQueueItemLoadErrorCallback;\r\n\r\n\t\t\texecuteLoaderQueueItem(loaderQueueIndex);\r\n\t\t// }\r\n\t\t// else if (onQueueLoadErrorCallback!=null)\r\n\t\t\t// onQueueLoadErrorCallback();\r\n\r\n\t\treturn UIXLoader;\r\n\t}\t\r\n\t\r\n\tstatic function executeLoaderQueueItem(itemIndex:Int)\r\n\t{\r\n\t\tif (itemIndex<loaderQueue.length)\r\n\t\t{\r\n\t\t\tvar item:LoaderQueueItem = loaderQueue[itemIndex];\r\n\t\t\tif (item!=null)\r\n\t\t\t{\r\n\t\t\t\tif (item.properties!=null)\r\n\t\t\t\t\tloaderQueueLoader.setProps(item.properties);\r\n\r\n\t\t\t\tloaderQueueLoader.load(item.source);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\tstatic function onQueueItemComplete(uxl:UIXLoader)\r\n\t{\r\n\t\ttrace(\"Queue item loaded: \"+uxl.source);\r\n\t\tif (UIXLoader.onQueueItemCompleteCallback!=null)\r\n\t\t\tUIXLoader.onQueueItemCompleteCallback(uxl);\r\n\t\tnextQueueItem();\r\n\t}\r\n\r\n\tstatic function onQueueItemError(uxl:UIXLoader)\r\n\t{\r\n\t\ttrace(\"Queue item failed to load: \"+uxl.source);\r\n\t\tif (UIXLoader.onQueueItemLoadErrorCallback!=null)\r\n\t\t\tUIXLoader.onQueueItemLoadErrorCallback(uxl);\r\n\t\tnextQueueItem();\r\n\t}\r\n\t\r\n\tstatic function nextQueueItem()\r\n\t{\r\n\t\tloaderQueueIndex++;\r\n\t\tif (loaderQueueIndex>=loaderQueue.length)\r\n\t\t\tonQueueCompleted();\r\n\t\telse \r\n\t\t\texecuteLoaderQueueItem(loaderQueueIndex);\r\n\t}\r\n\r\n\tstatic inline function onQueueCompleted()\r\n\t{\r\n\t\ttrace(\"Queue loaded complete!\");\r\n\t\tif (UIXLoader.onQueueCompleteCallback!=null)\r\n\t\t\tUIXLoader.onQueueCompleteCallback();\r\n\r\n\t\ttrace(UIX.cache.images.list().length);\r\n\t}\r\n\t\r\n\t\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\t\t\r\n\t\r\n\tpublic function dispose()\r\n\t{\r\n\t\t\r\n\t}\r\n\t\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\t\t\r\n}\r\n\r\ntypedef LoaderQueueItem =\r\n{\r\n\tvar source\t\t: String;\r\n\tvar properties\t: Dynamic;\r\n}\r\n\r\n/*\r\n\r\n\r\npackage no.logic.kha.uix.core.loading;\r\n\r\nimport haxe.PosInfos;\r\nimport haxe.Timer;\r\nimport haxe.io.Bytes;\r\nimport haxe.zip.Reader;\r\n\r\nclass UIXLoader\r\n{\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\t\r\n\t//===================================================================================\r\n\t// Consts \r\n\t//-----------------------------------------------------------------------------------\r\n\t\r\n\t//public static inline FILETYPE_BINARY\t: String \t\t\t= \"binary\";\r\n\t//public static inline FILETYPE_SWF\t\t: String \t\t\t= \"swf\";\r\n\t//public static inline FILETYPE_IMAGE\t\t: String \t\t\t= \"image\";\r\n\t//public static inline FILETYPE_SOUND\t\t: String \t\t\t= \"sound\";\r\n\t//public static inline FILETYPE_TEXT\t\t: String \t\t\t= \"text\";\r\n\t//public static inline FILETYPE_JSON\t\t: String \t\t\t= \"json\";\r\n\t//public static inline FILETYPE_XML\t\t: String \t\t\t= \"xml\";\r\n\t\r\n\t//===================================================================================\r\n\t// Properties \r\n\t//-----------------------------------------------------------------------------------\r\n\t\r\n\tpublic\tvar autoDispose\t\t\t\t\t: Bool\t\t\t\t\t= false;\r\n\tpublic\tvar autoLoad\t\t\t\t\t: Bool\t\t\t\t\t= true;\r\n\tpublic\tvar useCache\t\t\t\t\t: Bool\t\t\t\t\t= false;\r\n\t//public\tvar sourceFiletype\t\t\t\t: String\t\t\t\t= FILETYPE_BINARY;\r\n\tpublic\tvar\tparent\t\t\t\t\t\t: DisplayObjectContainer;\r\n\tpublic\tvar\tsource\t\t\t\t\t\t: String;\r\n\tpublic \tvar id\t\t\t\t\t\t\t: String;\r\n\tpublic \tvar cacheID\t\t\t\t\t\t: String;\r\n\tpublic \tvar keepBytes\t\t\t\t\t: Bool\t\t\t\t\t= false;\r\n\t//public \tvar partOfQueue\t\t\t\t\t: UIXLoaderQueue;\r\n\tpublic  var loadTime\t\t\t\t\t: Int;\r\n\t\r\n\t//===================================================================================\r\n\t// Declarations \r\n\t//-----------------------------------------------------------------------------------\r\n\r\n\tpublic static var basePath\t\t\t\t: String\t\t\t\t= \"\";\r\n\t//public static var bytesCache\t\t\t: DataList\t\t\t\t= new DataList();\r\n\t//public static var cache\t\t\t\t\t: DataList\t\t\t\t= new DataList();\r\n\t//public static var useCache\t\t\t\t: Boolean\t\t\t\t= false;\r\n\t//static private var queue\t\t\t\t: Array;\r\n\t//static private var queueIndex\t\t\t: int;\r\n\t//static private var queueProperties\t\t: Object\t\t\t\t= {};\r\n\t//static private var queueSequence\t\t: Object\t\t\t\t= {};\r\n\t\r\n\tprivate var loader\t\t\t\t\t\t: URLLoader;\r\n\tprivate var innerLoader\t\t\t\t\t: Loader;\r\n\tpublic\tvar bytes\t\t\t\t\t\t: ByteArray;\r\n\tpublic\tvar\tsound\t\t\t\t\t\t: flash.media.Sound;\r\n\t\r\n\tpublic var text\t\t\t\t\t\t\t: String;\r\n\tpublic var xml\t\t\t\t\t\t\t: XML;\r\n\tpublic var json\t\t\t\t\t\t\t: Object;\r\n\tpublic var bitmapData\t\t\t\t\t: BitmapData;\r\n\tpublic var content\t\t\t\t\t\t: *;\r\n\tpublic var metaData\t\t\t\t\t\t: Object\t\t= {};\r\n\t\r\n\t//===================================================================================\r\n\t// Callbacks \r\n\t//-----------------------------------------------------------------------------------\t\t\r\n\t//\r\n\t//public\tvar\tonProgress\t\t\t\t\t: Function;\r\n\t//public\tvar\tonBytesLoaded\t\t\t\t: Function;\r\n\t//public\tvar\tonFileNotFound\t\t\t\t: Function;\r\n\t//public\tvar\tonError\t\t\t\t\t\t: Function;\r\n\t//public\tvar\tonComplete\t\t\t\t\t: Function;\r\n\t//public\tvar\tonQueueItemComplete\t\t\t: Function;\r\n\t\r\n\t//===================================================================================\r\n\t// Variables \r\n\t//-----------------------------------------------------------------------------------\t\t\r\n\r\n\tprivate var currentFileAdress\t\t\t: String;\r\n\tvar now:Float;\r\n\tvar myLoader:openfl.display.Loader;\r\n\tpublic var bytes:ByteArray;\r\n\tpublic var bitmapData:openfl.display.BitmapData;\r\n\t//\r\n\t//private var startTime\t\t\t\t\t: int;\r\n\t//private var endTime\t\t\t\t\t\t: int;\r\n\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\t\t\r\n\t\r\n\t//===================================================================================\r\n\t// Constructor\r\n\t//-----------------------------------------------------------------------------------\r\n\t\t\r\n\tpublic function new(?props:Object) \r\n\t{\r\n\t\tif (props != null)\r\n\t\t{\r\n\t\t\tfor (name in props) \r\n\t\t\t{\r\n\t\t\t\t//if (Reflect.field(this, name))\r\n\t\t\t\t//{\r\n\t\t\t\t\t//trace(name, props[name]);\r\n\t\t\t\t\tReflect.setProperty(this, name, props[name]);\r\n\t\t\t\t//}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tinit();\r\n\t\t}\r\n\t}\r\n\t\r\n\tfunction init() \r\n\t{\r\n\t\t//trace(this.source);\r\n\t\t\r\n\t\tif (this.source != null)\r\n\t\t{\r\n\t\t\tload(this.source);\r\n\t\t}\r\n\t}\r\n\t\r\n\tpublic function load(file:String, ?pos:PosInfos)\r\n\t{\r\n\t\tif (file != null)\r\n\t\t{\r\n\t\t\t#if (!mobile && !js && !flash)\r\n\t\t\t\r\n\t\t\tif (sys.FileSystem.exists(file))\r\n\t\t\t{\r\n\t\t\t\tbytes = sys.io.File.getBytes(file);\r\n\t\t\t\tif (bytes!=null)\r\n\t\t\t\t{\r\n\t\t\t\t\tbitmapData = BitmapData.fromBytes(bytes);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tUIX.c.warning('UIXLOADER :: '+pos.className + '.'+ pos.methodName + ' (' + pos.lineNumber+') : File \"'+file+'\" not found.');\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t#end\r\n\t\t}\r\n\t}\r\n\t\r\n\tpublic function test(file:String):BitmapData\r\n\t{\r\n\t\tvar bitmap:BitmapData = null;\r\n\t\tnow = Sys.time();\r\n\t\tif (FileSystem.exists(file) == true)\r\n\t\t{\r\n\t\t\tvar bytes = File.getBytes(file);\r\n\t\t\tbitmap = BitmapData.fromBytes(bytes);\r\n\t\t\tvar timed:Float = Sys.time() - now;\r\n\t\t\tUIX.c.debug(\"Loaded:\" + bytes.length + \" - \" + Std.string(timed*1000));\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tUIX.c.debug(\"File not found: \"+file);\r\n\t\t}\r\n\t\treturn bitmap;\r\n\t\t\r\n\t\t//var handle = File.getContent(file, true);\r\n\t\t//handle.\r\n\t\t//\r\n\t\t//var d = new Reader(handle).read();\r\n\t\t//var hdr = format.png.Tools.getHeader(d);\r\n\t\t//var ret = {\r\n\t\t\t//data:format.png.Tools.extract32(d),\r\n\t\t\t//width:hdr.width,\r\n\t\t\t//height:hdr.height\r\n\t\t//};\r\n\t\t//handle.close();\r\n\t\t//return ret;\r\n\t}\r\n\r\n\t\r\n\tpublic function test2(file:String)\r\n\t{\r\n\t\t#if (!js && !flash)\r\n\t\tnow = Sys.time();\r\n\t\t#end\r\n\t\t\r\n\t\tmyLoader = new Loader();\r\n\r\n\t\t//note that you apply the listeners to \"contentLoaderInfo\" NOT myLoader\r\n\t\tmyLoader.contentLoaderInfo.addEventListener(ProgressEvent.PROGRESS, onProgress);\r\n\t\tmyLoader.contentLoaderInfo.addEventListener(Event.OPEN, onOpen);\r\n\t\tmyLoader.contentLoaderInfo.addEventListener(Event.COMPLETE, onComplete);\r\n\t\tmyLoader.contentLoaderInfo.addEventListener(IOErrorEvent.IO_ERROR, onIOError );\r\n\t\tmyLoader.load(new URLRequest(file));\r\n\t\t\r\n\t\tUIX.c.debug(\"load..\");\r\n\t}\r\n\t\r\n\tprivate function onOpen(e:Event):Void \r\n\t{\r\n\t\tUIX.c.debug(\"Open!\");\r\n\t}\r\n\t\r\n\tprivate function onIOError(e:IOErrorEvent):Void \r\n\t{\r\n\t\tUIX.c.debug(\"Error\");\r\n\t}\r\n\r\n\tpublic function onProgress(e:Event)\r\n\t{\r\n\t\tUIX.c.debug(\"Progress\");\r\n\t}\r\n\t\r\n\tpublic function onComplete(e:Event)\r\n\t{\r\n\t\t//trace(\"no\");\r\n\t\t//don't add until finished loading\r\n\t\t//addChild(myLoader);\r\n\t\t\r\n\t\t#if (!js && !flash)\r\n\t\t\r\n\t\tvar timed:Float = Sys.time() - now;\r\n\t\tUIX.c.debug(\"Loaded 2: \" + Std.string(timed * 1000));\t\t\r\n\t\t\r\n\t\t#end\r\n\t}\r\n\r\n\t//===================================================================================\r\n\t// Dispose\r\n\t//-----------------------------------------------------------------------------------\r\n\r\n\tpublic function dispose() \r\n\t{\r\n\t\tunload();\r\n\t\t//instances.removeItem(id, this);\r\n\t\tif (loader)\r\n\t\t{\r\n\t\t\t//loader.close();\r\n\t\t\tloader.removeEventListener(ErrorEvent.ERROR, errorHandler)\r\n\t\t\tloader.removeEventListener(AsyncErrorEvent.ASYNC_ERROR, errorHandler);\r\n\t\t\tloader.removeEventListener(SecurityErrorEvent.SECURITY_ERROR, errorHandler);\r\n\t\t\tif (onBytesLoaded)\r\n\t\t\t\tloader.removeEventListener(Event.COMPLETE, onBytesLoaded);\r\n\t\t\tif (onFileNotFound)\r\n\t\t\t\tloader.removeEventListener(IOErrorEvent.IO_ERROR, fileNotFound);\r\n\t\t}\r\n\t\tif (innerLoader)\r\n\t\t{\r\n\t\t\t//innerLoader.close();\r\n\t\t\tinnerLoader.contentLoaderInfo.removeEventListener(Event.COMPLETE, bitmapInnerLoaded);\t\r\n\t\t}\r\n\t\t\r\n\t\tpartOfQueue = null;\r\n\t\tsource = null;\r\n\t\tloader = null;\r\n\t\tinnerLoader = null;\r\n\t\t\r\n\t\tif (bitmapData)\r\n\t\t{\r\n\t\t\tbitmapData.dispose();\r\n\t\t\tbitmapData = null;\r\n\t\t}\r\n\t\tif (content)\r\n\t\t{\r\n\t\t\tif (content is ByteArray)\r\n\t\t\t{\r\n\t\t\t\tByteArray(content).clear()\r\n\t\t\t}\r\n\t\t\tcontent = null;\r\n\t\t}\r\n\t\tif (bytes)\r\n\t\t{\r\n\t\t\tbytes.clear()\r\n\t\t\tbytes = null;\r\n\t\t}\r\n\t\tif (sound)\r\n\t\t{\r\n\t\t\t//sound.close();\r\n\t\t\tsound = null;\r\n\t\t}\r\n\t\tmetaData = null;\r\n\t\t\r\n\t\tcurrentFileAdress = null;\r\n\t\tsourceFiletype = null;\r\n\t\t\r\n\t\tonComplete\t \t= null;\r\n\t\tonBytesLoaded \t= null;\r\n\t\tonError \t\t= null;\r\n\t\tonFileNotFound \t= null;\r\n\t\tonProgress \t\t= null;\r\n\t\t\r\n\t\t\r\n\t}\r\n\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\t\r\n\tpublic static function loadSync(file:String, ?pos:PosInfos):Bytes\r\n\t{\r\n\t\tif (file != null)\r\n\t\t{\r\n\t\t\t#if (!mobile && !js && !flash)\r\n\t\t\t\r\n\t\t\tif (sys.FileSystem.exists(file))\r\n\t\t\t{\r\n\t\t\t\treturn sys.io.File.getBytes(file);\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tUIX.c.warning('UIXLOADER :: '+pos.className + '.'+ pos.methodName + ' (' + pos.lineNumber+') : File \"'+file+'\" not found.');\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t#end\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t#if android\r\n\t\t\t\r\n\t\t\t#end\t\t\t\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\t\t\r\n\tpublic static function loadTextSync(file:String, ?pos:PosInfos):String\r\n\t{\r\n\t\tif (file != null)\r\n\t\t{\r\n\t\t\t#if (!mobile && !js && !flash)\r\n\t\t\t\r\n\t\t\tif (sys.FileSystem.exists(file))\r\n\t\t\t{\r\n\t\t\t\treturn sys.io.File.getContent(file);\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tUIX.c.warning('UIXLOADER :: '+pos.className + '.'+ pos.methodName + ' (' + pos.lineNumber+') : File \"'+file+'\" not found.');\r\n\t\t\t}\r\n\t\t\t#elseif UIX_USE_ELECTRON\r\n\t\t\tif (js.node.Fs.existsSync(file))\r\n\t\t\t\treturn js.node.Fs.readFileSync(file, {encoding:\"UTF-8\"});\r\n\t\t\t#end\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t#if android\r\n\t\t\t\r\n\t\t\t#end\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\t\r\n\tpublic static function fileExists(file:String, ?pos:PosInfos):Bool\r\n\t{\r\n\t\tif (file != null)\r\n\t\t{\r\n\t\t\t#if kha_kore\r\n\t\t\treturn sys.FileSystem.exists(file);\r\n\t\t\t#elseif kha_krom\t\t\t\r\n\t\t\t#elseif kha_js\t\t\t\r\n\t\t\t\r\n\t\t\t#end\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\t\t\r\n\t\r\n\t\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\npackage no.logic.uix.loaders;\r\n\r\nimport sys.thread.Thread;\r\nimport haxe.Json;\r\nimport haxe.io.Bytes;\r\nimport haxe.macro.Expr.Error;\r\nimport no.logic.uix.core.UIX;\r\nimport no.logic.uix.file.Files;\r\nimport no.logic.uix.textures.UIXTextureTools;\r\nimport no.logic.uix.types.Object;\r\nimport no.logic.uix.utils.Convert;\r\nimport no.logic.uix.utils.FileUtils;\r\nimport no.logic.uix.utils.ObjUtils;\r\nimport sys.FileSystem;\r\nimport sys.io.File;\r\nimport unreal.FHttpModule;\r\nimport unreal.IHttpRequest;\r\nimport unreal.IHttpResponse;\r\nimport unreal.Int32;\r\nimport unreal.POwnedPtr;\r\nimport unreal.TArray;\r\nimport unreal.TSharedPtr;\r\nimport unreal.TSharedRef;\r\nimport unreal.PPtr;\r\nimport unreal.TThreadSafeSharedPtr;\r\nimport unreal.UInt8;\r\nimport unreal.UTexture2D;\r\nimport unreal.UUIXCPPImageUtils;\r\n\r\n\r\nclass UIXLoader\r\n{\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\t\r\n\t//===================================================================================\r\n\t// Consts \r\n\t//-----------------------------------------------------------------------------------\r\n\r\n\tprivate static inline var \tDATATYPE_TEXT\t\t\t: String\t= \"application/text\";\r\n\tprivate static inline var \tDATATYPE_JSON\t\t\t: String\t= \"application/json\";\r\n\tprivate static inline var \tDATATYPE_XML\t\t\t: String\t= \"application/xml\";\r\n\tprivate static inline var \tDATATYPE_BINARY\t\t\t: String\t= \"application/octet-stream\";\r\n\t\r\n\tpublic static inline var \tTYPE_BINARY\t\t\t\t: String\t= \"fileType_Binary\";\r\n\tpublic static inline var \tTYPE_TEXT\t\t\t\t: String\t= \"fileType_Text\";\r\n\tpublic static inline var \tTYPE_JSON\t\t\t\t: String\t= \"fileType_Json\";\r\n\tpublic static inline var \tTYPE_XML\t\t\t\t: String\t= \"fileType_xml\";\r\n\tpublic static inline var \tTYPE_IMAGE\t\t\t\t: String\t= \"fileType_Image\";\r\n\t\r\n\t//===================================================================================\r\n\t// Properties \r\n\t//-----------------------------------------------------------------------------------\r\n\t\r\n\tpublic var contentRaw\t\t\t: Dynamic;\r\n\tpublic var contentBytesUE\t\t: TArray<UInt8>;\r\n\tpublic var contentJSON\t\t\t: Dynamic;\r\n\tpublic var contentText\t\t\t: String;\r\n\tpublic var contentXML\t\t\t: Xml;\r\n\tpublic var contentObject\t\t: Object;\r\n\t\r\n\tpublic var isDisposed\t\t\t: Bool\t\t\t\t= false;\r\n\tpublic var disposeOnComplete\t: Bool\t\t\t\t= true;\r\n\tpublic var localDestination\t\t: String;\r\n\tpublic var url\t\t\t\t\t: String;\r\n\tpublic var type\t\t\t\t\t: String;\r\n\tpublic var fileName\t\t\t\t: String;\r\n\tpublic var createTexture\t\t: Bool\t\t\t\t= true;\r\n\t\r\n\tpublic var texturePtr\t\t\t: POwnedPtr<UTexture2D>;\r\n\tpublic var meta\t\t\t\t\t: Object\t\t\t\t\t\t= {};\r\n\r\n\tvar loadThread\t\t\t\t\t: Thread;\r\n\tvar mainThread\t\t\t\t\t: Thread;\r\n\r\n\t//===================================================================================\r\n\t// Declarations \r\n\t//-----------------------------------------------------------------------------------\r\n\r\n\t//static var queue\t\t\t\t: Array;\r\n\t//static var queueIndex\t\t\t: Int;\r\n\t//static var queueProperties\t\t: Object\t\t\t\t= {};\r\n\t//static var queueSequence\t\t: Object\t\t\t\t= {};\r\n\r\n\t//===================================================================================\r\n\t// Callbacks\r\n\t//-----------------------------------------------------------------------------------\r\n\r\n\tpublic var onComplete\t\t\t: (UIXLoader)->Void;\r\n\tpublic var onError\t\t\t\t: (UIXLoader)->Void;\r\n\t\r\n\t//===================================================================================\r\n\t// Variables \r\n\t//-----------------------------------------------------------------------------------\t\t\r\n\t\t\r\n\tpublic var ContentWidth\t\t\t: Int32\t\t\t\t\t= -1;\r\n\tpublic var ContentHeight\t\t: Int32\t\t\t\t\t= -1;\r\n\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\t\r\n\tpublic function new()\r\n\t{\r\n\t}\r\n\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\r\n\tfunction createHttpLoader(datatypeJson:String):IHttpRequest\r\n\t{\r\n\t\tvar reqPtr:TSharedRef<IHttpRequest> = FHttpModule.Get().CreateRequest();\r\n\t\tvar req:IHttpRequest = reqPtr.Get();\r\n\t\treq.SetVerb(\"GET\");\r\n\t\treq.SetHeader(\"Content-Type\", datatypeJson);\r\n\t\treturn req;\r\n\t}\r\n\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\r\n\tpublic function loadText(url:String, ?properties:Dynamic, ?onCompleteCallback:(UIXLoader)->Void, ?onErrorCallback:(UIXLoader)->Void)\r\n\t{\r\n\t\ttype = TYPE_TEXT;\r\n\t\tthis.url = Files.fixPath(url);\r\n\t\tthis.fileName = Files.getFilenameFromFilePath(url);\r\n\t\tif (FileUtils.isLocalFile(this.url))\r\n\t\t{\r\n\t\t\tif (loadLocalTextFile(this.url))\r\n\t\t\t{\r\n\t\t\t\tif (onComplete != null)\r\n\t\t\t\t\tonComplete(this);\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t\tloadFileFailed();\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tvar req:IHttpRequest = createHttpLoader(DATATYPE_JSON);\r\n\t\t\treq.SetURL(fixURL(this.url));\r\n\t\t\treq.OnProcessRequestComplete().BindLambda(onTextRequestComplete);\r\n\t\t\treq.ProcessRequest();\r\n\t\t}\r\n\t}\t\r\n\t\r\n\tfunction onTextRequestComplete(request, response:TThreadSafeSharedPtr<IHttpResponse>, bWasSuccessful:Bool)\r\n\t{\r\n\t\tif (bWasSuccessful)\r\n\t\t\tonTextLoadedCompleted(response.Get());\r\n\t\telse\r\n\t\t\tonTextFailed(response.Get());\r\n\t}\r\n\t\r\n\tfunction onTextLoadedCompleted(response:PPtr<IHttpResponse>) \r\n\t{\r\n\t\tvar contentString:String = response.GetContentAsString().toString();\r\n\t\tif (contentString != null)\r\n\t\t{\r\n\t\t\tcontentText = contentString;\r\n\t\t\tif (onComplete != null)\r\n\t\t\t\tonComplete(this);\r\n\t\t}\r\n\t\tif (disposeOnComplete)\r\n\t\t\tdispose();\r\n\t}\r\n\t\r\n\tfunction onTextFailed(response:PPtr<IHttpResponse>) \r\n\t{\r\n\t\tUIX.c.warning(\"Failed!\");\r\n\t}\t\r\n\t\r\n\tpublic function loadTextSync(url:String):String\r\n\t{\r\n\t\ttype = TYPE_TEXT;\r\n\t\tthis.url = Files.fixPath(url);\r\n\t\tthis.fileName = Files.getFilenameFromFilePath(url);\r\n\t\tif (FileUtils.isLocalFile(this.url))\r\n\t\t{\r\n\t\t\tif (loadLocalTextFile(this.url))\r\n\t\t\t{\r\n\t\t\t\treturn contentText;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn null;\r\n\t}\t\r\n\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\r\n\tpublic function loadXML(url:String, ?properties:Dynamic, ?onCompleteCallback:(UIXLoader)->Void, ?onErrorCallback:(UIXLoader)->Void)\r\n\t{\r\n\t\ttype = TYPE_XML;\r\n\t\tthis.url = Files.fixPath(url);\r\n\t\tthis.fileName = Files.getFilenameFromFilePath(url);\r\n\t\tif (FileUtils.isLocalFile(this.url))\r\n\t\t{\r\n\t\t\tif (loadLocalTextFile(this.url))\r\n\t\t\t{\r\n\t\t\t\tcontentXML = Xml.parse(contentText);\r\n\t\t\t\tif (contentXML!=null)\r\n\t\t\t\t\tcontentObject = ObjUtils.fromXML(contentXML);\r\n\t\t\t\t\r\n\t\t\t\tif (onComplete != null)\r\n\t\t\t\t\tonComplete(this);\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t\tloadFileFailed();\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tvar req:IHttpRequest = createHttpLoader(DATATYPE_XML);\r\n\t\t\treq.SetURL(fixURL(this.url));\r\n\t\t\treq.OnProcessRequestComplete().BindLambda(onXMLRequestComplete);\r\n\t\t\treq.ProcessRequest();\r\n\t\t}\r\n\t}\t\r\n\t\r\n\tfunction onXMLRequestComplete(request, response:TThreadSafeSharedPtr<IHttpResponse>, bWasSuccessful:Bool)\r\n\t{\r\n\t\tif (response != null && response.Get() != null)\r\n\t\t{\r\n\t\t\tif (bWasSuccessful)\r\n\t\t\t\tonXMLLoadedCompleted(response.Get());\r\n\t\t\telse\r\n\t\t\t\tonXMLFailed(response.Get());\r\n\t\t}\r\n\t\telse\r\n\t\t\tonXMLFailed();\r\n\t}\r\n\t\r\n\tfunction onXMLLoadedCompleted(response:PPtr<IHttpResponse>) \r\n\t{\r\n\t\tvar contentString:String = response.GetContentAsString().toString();\r\n\t\tif (contentString != null)\r\n\t\t{\r\n\t\t\tif (contentString.indexOf(\"<html\") ==-1)\r\n\t\t\t{\r\n\t\t\t\tcontentText = contentString;\r\n\t\t\t\tcontentXML = Xml.parse(contentString);\r\n\t\t\t\tif (contentXML!=null)\r\n\t\t\t\t\tcontentObject = ObjUtils.fromXML(contentXML);\r\n\t\t\t\t\r\n\t\t\t\tif (onComplete != null)\r\n\t\t\t\t\tonComplete(this);\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\ttrace(\"ERROR: XML loaded - but found html instead!\");\r\n\t\t\t\tonXMLFailed();\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (disposeOnComplete)\r\n\t\t\tdispose();\r\n\t}\r\n\t\r\n\tfunction onXMLFailed(response=null) \r\n\t{\r\n\t\tUIX.c.warning(\"Loading of XML Failed!\");\r\n\t}\t\r\n\t\r\n\tpublic function loadXMLSync(url:String):Xml\r\n\t{\r\n\t\ttype = TYPE_TEXT;\r\n\t\tthis.url = Files.fixPath(url);\r\n\t\tthis.fileName = Files.getFilenameFromFilePath(url);\r\n\t\tif (FileUtils.isLocalFile(this.url))\r\n\t\t{\r\n\t\t\tif (loadLocalTextFile(this.url))\r\n\t\t\t{\r\n\t\t\t\tcontentXML = Xml.parse(contentText);\r\n\t\t\t\treturn contentXML;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn null;\r\n\t}\t\r\n\t\r\n\tpublic function loadXMLtoObjSync(url:String):Object\r\n\t{\r\n\t\ttype = TYPE_TEXT;\r\n\t\tthis.url = Files.fixPath(url);\r\n\t\tthis.fileName = Files.getFilenameFromFilePath(url);\r\n\t\tif (FileUtils.isLocalFile(this.url))\r\n\t\t{\r\n\t\t\tif (loadLocalTextFile(this.url))\r\n\t\t\t{\r\n\t\t\t\tcontentXML = Xml.parse(contentText);\r\n\t\t\t\tif (contentXML!=null)\r\n\t\t\t\t\tcontentObject = ObjUtils.fromXML(contentXML);\r\n\t\t\t\treturn contentObject;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn null;\r\n\t}\t\r\n\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\r\n\tpublic function loadJSON(url:String, ?properties:Dynamic, ?onCompleteCallback:(UIXLoader)->Void, ?onErrorCallback:(UIXLoader)->Void):Object\r\n\t{\r\n\t\ttype = TYPE_JSON;\r\n\t\tthis.url = Files.fixPath(url);\r\n\t\tthis.fileName = Files.getFilenameFromFilePath(url);\r\n\t\tif (FileUtils.isLocalFile(this.url))\r\n\t\t{\r\n\t\t\tif (loadLocalTextFile(this.url))\r\n\t\t\t{\r\n\t\t\t\tcontentJSON = Json.parse(contentText);\r\n\t\t\t\tcontentObject = contentJSON;\r\n\t\t\t\tif (onComplete != null)\r\n\t\t\t\t\tonComplete(this);\r\n\t\t\t\t\t\r\n\t\t\t\treturn contentObject;\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tonError(this);\r\n\t\t\t}\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tvar req:IHttpRequest = createHttpLoader(DATATYPE_JSON);\r\n\t\t\treq.SetURL(fixURL(this.url));\r\n\t\t\treq.OnProcessRequestComplete().BindLambda(onJSONRequestComplete);\r\n\t\t\treq.ProcessRequest();\r\n\t\t}\r\n\t\treturn null;\t\t\r\n\t}\r\n\t\r\n\tfunction onJSONRequestComplete(request, response:TThreadSafeSharedPtr<IHttpResponse>, bWasSuccessful:Bool)\r\n\t{\r\n\t\tif (bWasSuccessful)\r\n\t\t\tonJSONLoadedCompleted(response.Get());\r\n\t\telse\r\n\t\t\tonJSONFailed(response.Get());\r\n\t}\r\n\t\r\n\tfunction onJSONLoadedCompleted(response:PPtr<IHttpResponse>) \r\n\t{\r\n\t\tvar contentString:String = response.GetContentAsString().toString();\r\n\t\tif (contentString != null)\r\n\t\t{\r\n\t\t\tcontentRaw = contentString;\r\n\t\t\tif (contentString.indexOf(\"{\") ==-1 || contentString.indexOf(\"}\") ==-1 || contentString.indexOf('\"') ==-1)\r\n\t\t\t{\r\n\t\t\t\tUIX.c.warning(\"JSON Rest invalid! Server error?\");\r\n\t\t\t\tonError(this);\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\ttry\r\n\t\t\t\t{\r\n\t\t\t\t\tcontentJSON = Json.parse(contentString);\r\n\t\t\t\t\tif (onComplete != null)\r\n\t\t\t\t\t\tonComplete(this);\r\n\t\t\t\t}\r\n\t\t\t\tcatch (e:Error)\r\n\t\t\t\t{\r\n\t\t\t\t\ttrace(\"JSON parsing failed! : \",contentString);\r\n\t\t\t\t\tUIX.c.warning(\"JSON parsing failed!\");\r\n\t\t\t\t\tonError(this);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (disposeOnComplete)\r\n\t\t\tdispose();\r\n\t}\r\n\t\r\n\tfunction onJSONFailed(response:PPtr<IHttpResponse>) \r\n\t{\r\n\t\tUIX.c.warning(\"Failed!\");\r\n\t}\r\n\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\t\r\n\tpublic function loadFile(url:String, ?properties:Dynamic, ?onCompleteCallback:(UIXLoader)->Void, ?onErrorCallback:(UIXLoader)->Void)\r\n\t{\r\n\t\ttype = TYPE_BINARY;\r\n\t\tthis.url = Files.fixPath(url);\r\n\t\tthis.fileName = Files.getFilenameFromFilePath(url);\r\n\t\t\r\n///\tloadThread = Thread.create(loadFileThread);\r\n\t\t//loadThread.sendMessage(Thread.current());\t\t\r\n\t//}\r\n\t//\r\n\t//function loadFileThread():Void \r\n\t//{\r\n\t\t//mainThread = Thread.readMessage(true);\r\n\t\t\r\n\t\tif (FileUtils.isLocalFile(this.url))\r\n\t\t{\r\n\t\t\tif (loadLocalBinaryFile(this.url))\r\n\t\t\t{\r\n\t\t\t\tif (onComplete != null)\r\n\t\t\t\t\tonComplete(this);\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t\tloadFileFailed();\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tvar req:IHttpRequest = createHttpLoader(DATATYPE_BINARY);\r\n\t\t\treq.SetURL(fixURL(this.url));\r\n\t\t\treq.OnProcessRequestComplete().BindLambda(onHttpBinaryRequestComplete);\r\n\t\t\treq.ProcessRequest();\r\n\t\t}\r\n\t}\r\n\t\r\n\tfunction onHttpBinaryRequestComplete(request, response:TThreadSafeSharedPtr<IHttpResponse>, bWasSuccessful:Bool)\r\n\t{\r\n\t\tif (bWasSuccessful)\r\n\t\t\tonFileLoadedCompleted(response.Get());\r\n\t\telse\r\n\t\t\tonFileLoadFailed(response.Get());\r\n\t}\r\n\t\r\n\tfunction onFileLoadedCompleted(response:PPtr<IHttpResponse>) \r\n\t{\r\n\t\tthis.contentBytesUE = response.GetContent();\r\n\t\tif (contentBytesUE != null)\r\n\t\t{\r\n\t\t\tif (onComplete != null)\r\n\t\t\t\tonComplete(this);\r\n\t\t}\r\n\t\telse if (onError != null)\r\n\t\t\tonError(this);\r\n\t\t\t\r\n\t\t//if (mainThread != null)\r\n\t\t\t//Sys.exit(0);\r\n\t\tif (disposeOnComplete)\r\n\t\t\tdispose();\r\n\t}\r\n\t\r\n\tfunction onFileLoadFailed(get:PPtr<IHttpResponse>) \r\n\t{\r\n\t\tUIX.c.warning('Loading file: $url failed!');\r\n\t}\r\n\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\t\r\n\tpublic function loadImage(url:String, ?properties:Dynamic, ?onCompleteCallback:(UIXLoader)->Void, ?onErrorCallback:(UIXLoader)->Void)\r\n\t{\r\n\t\ttype = TYPE_IMAGE;\r\n\t\tthis.url = Files.fixPath(url);\r\n\t\tthis.fileName = Files.getFilenameFromFilePath(url);\r\n\t\tif (FileUtils.isLocalFile(this.url))\r\n\t\t{\r\n\t\t\tif (loadLocalBinaryFile(this.url))\r\n\t\t\t{\r\n\t\t\t\tprocessImage();\r\n\t\t\t\tif (onComplete != null)\r\n\t\t\t\t\tonComplete(this);\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t\tloadFileFailed();\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tvar req:IHttpRequest = createHttpLoader(DATATYPE_BINARY);\r\n\t\t\treq.SetURL(fixURL(this.url));\r\n\t\t\treq.OnProcessRequestComplete().BindLambda(onHttpImageRequestComplete);\r\n\t\t\treq.ProcessRequest();\r\n\t\t}\r\n\t}\r\n\t\r\n\tfunction onHttpImageRequestComplete(request, response:TThreadSafeSharedPtr<IHttpResponse>, bWasSuccessful:Bool)\r\n\t{\r\n\t\tif (bWasSuccessful)\r\n\t\t\tonImageLoadedCompleted(response.Get());\r\n\t\telse\r\n\t\t\tonImageFailed(response.Get());\r\n\t}\r\n\t\r\n\tfunction onImageLoadedCompleted(response:PPtr<IHttpResponse>) \r\n\t{\r\n\t\tthis.contentBytesUE = response.GetContent();\r\n\t\tif (contentBytesUE != null)\r\n\t\t{\r\n\t\t\tprocessImage();\r\n\t\t\tif (onComplete != null)\r\n\t\t\t\tonComplete(this);\r\n\t\t\t\t\r\n\t\t}\r\n\t\telse if (onError != null)\r\n\t\t\tonError(this);\r\n\t\t\t\r\n\t\tif (disposeOnComplete)\r\n\t\t\tdispose();\r\n\t}\r\n\t\r\n\tfunction processImage() \r\n\t{\r\n\t\tif (createTexture)\r\n\t\t{\r\n\t\t\ttexturePtr = UUIXCPPImageUtils.DecodeImageToTexture(this.contentBytesUE, this.url); \r\n\t\t\tvar tex:PPtr<UTexture2D> = cast texturePtr;\r\n\t\t\tif (tex != null)\r\n\t\t\t{\r\n\t\t\t\tif (ContentWidth==-1)\r\n\t\t\t\t\tContentWidth = tex.GetSizeX();\r\n\t\t\t\tif (ContentHeight==-1)\r\n\t\t\t\t\tContentHeight = tex.GetSizeY();\t\t\t\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\tfunction onImageFailed(get:PPtr<IHttpResponse>) \r\n\t{\r\n\t\tUIX.c.warning('Loading file: $url failed!');\r\n\t}\r\n\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\r\n\tfunction loadLocalTextFile(url:String):Bool\r\n\t{\r\n\t\tcontentText = FileUtils.loadFileToString(url);\r\n\t\t\r\n\t\tif (contentText != null)\r\n\t\t\treturn true;\r\n\t\telse\r\n\t\t\treturn false;\r\n\t}\t\r\n\t\r\n\t//function loadLocalJSONFile(url:String):Bool\r\n\t//{\r\n\t\t//contentText = FileUtils.loadFileToString(url);\r\n\t\t//if (contentText != null)\r\n\t\t\t//return true;\r\n\t\t//else\r\n\t\t\t//return false;\r\n\t//}\t\r\n\t\r\n\tfunction loadLocalBinaryFile(url:String, ?properties:Dynamic, ?onCompleteCallback:(UIXLoader)->Void, ?onErrorCallback:(UIXLoader)->Void):Bool\r\n\t{\r\n\t\tcontentBytesUE = FileUtils.loadFileToTArray(url);\r\n\t\tif (contentBytesUE != null)\r\n\t\t\treturn true;\r\n\t\telse\r\n\t\t\treturn false;\r\n\t}\r\n\t\t\r\n\tfunction loadFileFailed() \r\n\t{\r\n\t\tif (onError != null)\r\n\t\t\tonError(this);\r\n\t\t\t\r\n\t\t//UIX.c.warning('Loading file: $url failed!');\r\n\t}\r\n\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\t\r\n\tpublic function dispose() \r\n\t{\r\n\t\tif (!isDisposed)\r\n\t\t{\r\n\t\t\tisDisposed = true;\r\n\t\t\t\r\n\t\t\tif (texturePtr != null)\r\n\t\t\t{\r\n\t\t\t\ttexturePtr = null;\r\n\t\t\t}\r\n\t\t\tif (contentBytesUE != null)\r\n\t\t\t{\r\n\t\t\t\tcontentBytesUE.empty();\r\n\t\t\t\tcontentBytesUE = null;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tcontentRaw = null;\r\n\t\t\tcontentJSON = null;\r\n\t\t\tcontentText = null;\r\n\t\t\tcontentXML = null;\r\n\t\t\tcontentObject = null;\r\n\t\t\t\r\n\t\t\tfileName = null;\r\n\t\t\turl = null;\r\n\t\t\ttype = null;\r\n\t\t\tmeta = null;\r\n\t\t\tonComplete = null;\r\n\t\t\tonError = null;\r\n\t\t}\r\n\t}\r\n\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\t\r\n\tpublic static function LoadFile(url:String, ?properties:Dynamic, ?onCompleteCallback:(UIXLoader)->Void, ?onLoadErrorCallback:(UIXLoader)->Void):UIXLoader\r\n\t{\r\n\t\tvar uxl = new UIXLoader();\r\n\t\t\r\n\t\tif (onCompleteCallback!=null)\r\n\t\t\tuxl.onComplete = onCompleteCallback;\r\n\t\tif (onLoadErrorCallback!=null)\r\n\t\t\tuxl.onError = onLoadErrorCallback;\r\n\t\t\r\n\t\tuxl.loadFile(url);\r\n\t\treturn uxl;\r\n\t}\r\n\t\r\n\tpublic static function LoadText(url:String, ?properties:Dynamic, ?onCompleteCallback:(UIXLoader)->Void, ?onLoadErrorCallback:(UIXLoader)->Void):UIXLoader\r\n\t{\r\n\t\tvar uxl = new UIXLoader();\r\n\t\t\r\n\t\tif (onCompleteCallback!=null)\r\n\t\t\tuxl.onComplete = onCompleteCallback;\r\n\t\tif (onLoadErrorCallback!=null)\r\n\t\t\tuxl.onError = onLoadErrorCallback;\r\n\t\t\r\n\t\tuxl.loadText(url);\r\n\t\treturn uxl;\r\n\t}\r\n\t\r\n\tpublic static function LoadTextSync(url:String):String\r\n\t{\r\n\t\tvar textToReturn:String = null;\r\n\t\tif (url != null)\r\n\t\t{\r\n\t\t\tvar uxl = new UIXLoader();\r\n\t\t\tvar res:String = uxl.loadTextSync(url);\r\n\t\t\tuxl.dispose();\r\n\t\t\tuxl = null;\r\n\t\t\treturn res;\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\t\r\n\tpublic static function LoadXML(url:String, ?properties:Dynamic, ?onCompleteCallback:(UIXLoader)->Void, ?onLoadErrorCallback:(UIXLoader)->Void):UIXLoader\r\n\t{\r\n\t\tvar uxl = new UIXLoader();\r\n\t\t\r\n\t\tif (onCompleteCallback!=null)\r\n\t\t\tuxl.onComplete = onCompleteCallback;\r\n\t\tif (onLoadErrorCallback!=null)\r\n\t\t\tuxl.onError = onLoadErrorCallback;\r\n\t\t\r\n\t\tuxl.loadXML(url);\r\n\t\treturn uxl;\r\n\t}\r\n\t\r\n\tpublic static function LoadXMLSync(url:String):Xml\r\n\t{\r\n\t\tvar xmlToReturn:Xml = null;\r\n\t\tif (url != null)\r\n\t\t{\r\n\t\t\tvar uxl = new UIXLoader();\r\n\t\t\tvar res:Xml = uxl.loadXMLSync(url);\r\n\t\t\tuxl.dispose();\r\n\t\t\tuxl = null;\r\n\t\t\treturn res;\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\t\r\n\tpublic static function LoadImage(url:String, ?properties:Dynamic, ?onCompleteCallback:(UIXLoader)->Void, ?onLoadErrorCallback:(UIXLoader)->Void, createTexture:Bool=true):UIXLoader\r\n\t{\r\n\t\tvar uxl = new UIXLoader();\r\n\t\tuxl.createTexture = createTexture;\r\n\t\t\r\n\t\tif (onCompleteCallback!=null)\r\n\t\t\tuxl.onComplete = onCompleteCallback;\r\n\t\tif (onLoadErrorCallback!=null)\r\n\t\t\tuxl.onError = onLoadErrorCallback;\r\n\t\t\r\n\t\tuxl.loadImage(url);\r\n\t\treturn uxl;\r\n\t}\r\n\t\r\n\tpublic static function LoadJSON(url:String, ?properties:Dynamic, ?onCompleteCallback:(UIXLoader)->Void, ?onLoadErrorCallback:(UIXLoader)->Void):UIXLoader\r\n\t{\r\n\t\tvar uxl = new UIXLoader();\r\n\t\t\r\n\t\tif (onCompleteCallback!=null)\r\n\t\t\tuxl.onComplete = onCompleteCallback;\r\n\t\tif (onLoadErrorCallback!=null)\r\n\t\t\tuxl.onError = onLoadErrorCallback;\r\n\t\t\t\r\n\t\tuxl.loadJSON(url);\r\n\t\treturn uxl;\r\n\t}\r\n\r\n\tpublic static function DownloadFile(url:String, destinationFolder:String, ?properties:Dynamic, ?onCompleteCallback:(UIXLoader)->Void, ?onLoadErrorCallback:(UIXLoader)->Void):UIXLoader\r\n\t{\r\n\t\tvar uxl = new UIXLoader();\r\n\t\tuxl.localDestination = destinationFolder;\r\n\t\tuxl.onComplete = onDownloadFileLoaded;\r\n\t\tuxl.meta[\"onCompleteCallback\"] = onCompleteCallback;\r\n\t\t\r\n\t\tif (onLoadErrorCallback!=null)\r\n\t\t\tuxl.onError = onLoadErrorCallback;\r\n\t\t\t\r\n\t\tuxl.loadFile(url);\r\n\t\treturn uxl;\r\n\t}\r\n\t\r\n\tstatic function onDownloadFileLoaded(u:UIXLoader) \r\n\t{\r\n\t\tif (u.contentBytesUE != null)\r\n\t\t{\r\n\t\t\t//var imgbytes:Bytes = Bytes.ofData(u.contentBytesUE.toArray()); //This is VERY expensive!!!\r\n\t\t\tvar destinationFolder:String = u.localDestination;\r\n\t\t\tif (destinationFolder != null)\r\n\t\t\t{\r\n\t\t\t\tif (!FileSystem.exists(destinationFolder))\r\n\t\t\t\t{\r\n\t\t\t\t\ttry\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tFileSystem.createDirectory(destinationFolder);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcatch (e:Error)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tUIX.c.warning(\"Could not find/create folder for download: \" + destinationFolder);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttry\r\n\t\t\t\t{\r\n\t\t\t\t\t//if (u.fileName!=null && imgbytes!=null && imgbytes.length>0)\r\n\t\t\t\t\t\t//File.saveBytes(destinationFolder + \"/\" + u.fileName, imgbytes);\t\r\n\t\t\t\t\t\t\r\n\t\t\t\t\tif (u.fileName != null && u.contentBytesUE.length > 0)\r\n\t\t\t\t\t\tFileUtils.saveTArrayToFile(destinationFolder+\"/\"+u.fileName, u.contentBytesUE);\r\n\t\t\t\t}\r\n\t\t\t\tcatch (e:Error)\r\n\t\t\t\t{\r\n\t\t\t\t\tu.onError(u);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (u.meta.hasOwnProperty(\"onCompleteCallback\") && u.meta.onCompleteCallback != null)\r\n\t\t\t\tu.meta.onCompleteCallback(u);\r\n\t\t\t\t\r\n\t\t}\t\t\r\n\t}\r\n\t\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\t\r\n\tstatic public function LoadFileSync(path:String):TArray<UInt8>\r\n\t{\r\n\t\tif (FileUtils.isLocalFile(path))\r\n\t\t{\r\n\t\t\treturn FileUtils.loadFileToTArray(path);\r\n\t\t}\r\n\t\telse\r\n\t\t\treturn null;\r\n\t}\r\n\t\r\n\tstatic public function LoadJSONSync(path:String):Dynamic\r\n\t{\r\n\t\tif (FileUtils.isLocalFile(path))\r\n\t\t{\r\n\t\t\ttry\r\n\t\t\t{\r\n\t\t\t\tvar jstr:String = File.getContent(path);\r\n\t\t\t\tif (jstr != null)\r\n\t\t\t\t{\r\n\t\t\t\t\treturn Json.parse(jstr);\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t\tcatch (e:Error)\r\n\t\t\t{\r\n\t\t\t\ttrace(\"Load JSON failed for : \" + path);\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse\r\n\t\t\treturn null;\r\n\t}\r\n\t\r\n\tstatic public function LoadImageSync(path:String):POwnedPtr<UTexture2D>\r\n\t{\r\n\t\tif (FileUtils.isLocalFile(path))\r\n\t\t{\r\n\t\t\tvar bytes = FileUtils.loadFileToTArray(path);\r\n\t\t\tif (bytes != null)\r\n\t\t\t{\r\n\t\t\t\treturn UIXTextureTools.createTextureFromRaw(bytes);\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t\treturn null;\r\n\t\t}\r\n\t\telse\r\n\t\t\treturn null;\r\n\t}\r\n\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\t\r\n\tfunction fixURL(url:String):String\r\n\t{\r\n\t\tvar v_ae = StringTools.urlEncode(\"Ã¦\");\r\n\t\tvar v_AE = StringTools.urlEncode(\"Ã†\");\r\n\t\tvar v_oo = StringTools.urlEncode(\"Ã¸\");\r\n\t\tvar v_OO = StringTools.urlEncode(\"Ã˜\");\r\n\t\tvar v_aa = StringTools.urlEncode(\"Ã¥\");\r\n\t\tvar v_AA = StringTools.urlEncode(\"Ã…\");\r\n\t\t\r\n\t\treturn url.split(\"Ã¦\").join(v_ae).split(\"Ã†\").join(v_AE).split(\"Ã¸\").join(v_oo).split(\"Ã˜\").join(v_OO).split(\"Ã¥\").join(v_aa).split(\"Ã…\").join(v_AA);\r\n\t}\r\n\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\r\n\tpublic static function createQueue(properties:Object=null,id:String=\"standardQueue\"):Sequence\r\n\t{\r\n\t\tqueueProperties[id] = properties;\r\n\t\tqueueSequence[id] = new Sequence();\r\n\t\tif (properties!=null && properties.hasOwnProperty(\"onQueueComplete\"))\r\n\t\t\tqueueSequence[id].onComplete = properties.onQueueComplete;\r\n\t\t\t\r\n\t\treturn queueSequence[id];\r\n\t}\r\n\t\t\r\n\tpublic static function addToQueue(source:String,properties:Object=null,id:String=\"standardQueue\")\r\n\t{\t\t//if (sourceOrUIXLoader is UIXLoader)\r\n\t\t//{\r\n\t\t\t//queue.push(sourceOrUIXLoader);\r\n\t\t//}\r\n\t\tif (queueSequence[id]!=null)\r\n\t\t\tqueueSequence[id].add(executeCueueItem, true, source, properties);\r\n\t\t//if (sourceOrUIXLoader is String)\r\n\t\t//{\r\n\t\t\t//queue.push({source:sourceOrUIXLoader,props:properties});\r\n\t\t//}\r\n\t}\r\n\r\n\tpublic static function runQueue(id:String=\"standardQueue\")\r\n\t{\r\n\t\t//for (var i:int = 0; i < queue.length; i++) \r\n\t\t//{\r\n\t\t\t//queueSequence.add(executeCueueItem, true, i);\r\n\t\t//}\r\n\t\tif (queueSequence[id] != null)\r\n\t\t\tqueueSequence[id].run();\r\n\t}\r\n\t\r\n\tstatic function executeCueueItem(source:String,properties:Object=null,id:String=\"standardQueue\") \r\n\t{\r\n\t\tvar props:Object = {};\r\n\t\tObjUtils.copyProperties(queueProperties[id],props);\r\n\t\tObjUtils.copyProperties(properties,props);\r\n\t\tprops.onQueueItemComplete = queueItemComplete;\r\n\t\tif (props.hasOwnProperty(\"onComplete\"))\r\n\t\t{\r\n\t\t\tif ((!(props.hasOwnProperty(\"metaData\")) || (props.metaData==null))\r\n\t\t\t\tprops.metaData = {};\r\n\t\t\t\r\n\t\t\tprops.metaData.onQueueItemComplete = props.onComplete;\r\n\t\t\tprops.onComplete = null;\r\n\t\t}\r\n\t\t\t\r\n\t\tUIXLoader.loadFile(source, props);\r\n\t}\r\n\t\r\n\tstatic function queueItemComplete(ul:UIXLoader,id:String=\"standardQueue\") \r\n\t{\r\n\t\tif (ul.metaData!=null && (ul.metaData.hasOwnProperty(\"onQueueItemComplete\")) && (ul.metaData.onQueueItemComplete!=null));\r\n\t\t\tul.metaData.onQueueItemComplete(ul);\r\n\t\t\t\r\n\t\t//if (ul.onQueueItemComplete && ul.onQueueItemComplete is Function)\r\n\t\t\t//ul.onQueueItemComplete(ul);\r\n\t\t\t\r\n\t\tqueueSequence[id].actionCompleted();\r\n\t}\r\n\t\r\n\tstatic function getQueue(id:String=\"standardQueue\"):UIXLoaderQueue \r\n\t{\r\n\t\tvar q:UIXLoaderQueue;\r\n\t\treturn q;\r\n\t}\r\n\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n*/","package no.logic.kha.uix.debug;\r\n\r\nimport haxe.Timer;\r\nimport kha.AssetError;\r\nimport kha.Assets;\r\nimport kha.Color;\r\nimport kha.FastFloat;\r\nimport kha.Image;\r\nimport kha.Video;\r\nimport kha.graphics2.Graphics;\r\nimport kha.graphics2.ImageScaleQuality;\r\nimport kha.input.KeyCode;\r\nimport kha.input.Keyboard;\r\nimport kha.input.Mouse;\r\nimport no.logic.kha.uix.app.App;\r\nimport no.logic.kha.uix.console.Fps;\r\nimport no.logic.kha.uix.console.UIXConsole;\r\nimport no.logic.kha.uix.console.UIXConsole.EntryBuffer;\r\nimport no.logic.kha.uix.core.loading.UIXLoader;\r\nimport no.logic.kha.uix.kontentum.Kontentum;\r\nimport no.logic.kha.uix.scene.styles.Styles;\r\nimport no.logic.kha.uix.types.Point.Point2D;\r\nimport no.logic.kha.uix.utils.MathUtils;\r\nimport no.logic.kha.uix.utils.SmoothFloat;\r\nimport no.logic.kha.uix.utils.StringUtils;\r\nimport no.logic.kha.uix.utils.TimeUtils;\r\n\r\nclass DebugInspector\r\n{\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\r\n\t//===================================================================================\r\n\t// Consts \r\n\t//-----------------------------------------------------------------------------------\r\n\t\r\n\t//===================================================================================\r\n\t// Properties \r\n\t//-----------------------------------------------------------------------------------\r\n\r\n\tpublic var enabled\t\t\t\t: Bool;\r\n\t\r\n\t//===================================================================================\r\n\t// Declarations \r\n\t//-----------------------------------------------------------------------------------\r\n\t\r\n\tvar imageLoader\t\t\t\t\t\t: UIXLoader;\r\n\t\r\n\t//===================================================================================\r\n\t// Variables \r\n\t//-----------------------------------------------------------------------------------\t\t\r\n\t\r\n\tvar debugView\t\t\t\t\t: String\t\t\t\t= \"log\";\r\n\tvar scrollOffset\t\t\t\t: Int\t\t\t\t\t= 0;\r\n\tvar lastClickedPos\t\t\t\t: Point2D\t\t\t\t= {x:-1,y:-1};\r\n\tvar textColor\t\t\t\t\t: Color\t\t\t\t\t= 0xffcccccc;\r\n\tvar clickedFile\t\t\t\t\t: String;\r\n\tvar clickedFilePrev\t\t\t\t: String;\r\n\tvar assetImage\t\t\t\t\t: Image;\r\n\tvar assetVideo\t\t\t\t\t: Video;\r\n\tvar lineheight\t\t\t\t\t: Int\t\t\t\t\t= 18;\r\n\t//var ypos\t\t\t\t\t\t: SmoothFloat\t\t\t= new SmoothFloat(30);\r\n\t\r\n\tvar bufferLog\t\t\t\t\t: Array<EntryBuffer>\t= [];\r\n\tvar bufferWarning\t\t\t\t: Array<EntryBuffer>\t= [];\r\n\tvar bufferReport\t\t\t\t: Array<EntryBuffer>\t= [];\r\n\tvar bufferError\t\t\t\t\t: Array<EntryBuffer>\t= [];\r\n\tvar bufferNotFound\t\t\t\t: Array<EntryBuffer>\t= [];\r\n\t\r\n\t// Singleton ////////////////////////////////////////////////////////////////////////\r\n  \t\r\n\tstatic var instance\t\t\t\t: DebugInspector;\r\n\tpublic static var i(get, null)\t: DebugInspector;\r\n\tstatic function get_i()\t\t\t: DebugInspector \r\n\t{\r\n    \tif (instance == null) return instance = new DebugInspector();\r\n      \telse return instance;\r\n\t}\r\n\tpublic function new(){}\r\n\t\r\n\tpublic function init()\r\n\t{\r\n\t\timageLoader = new UIXLoader();\r\n\t\timageLoader.onComplete = onImageLoaded;\r\n\t\t\r\n\t\tKeyboard.get().notify(onKeyDown, onKeyUp);\r\n\t}\r\n\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\r\n\tpublic function onKeyDown(keyCode:KeyCode)\r\n\t{\r\n\t}\r\n\t\r\n\tpublic function onKeyUp(keyCode:KeyCode)\r\n\t{\r\n\t\tswitch (keyCode)\r\n\t\t{\r\n\t\t\tcase KeyCode.D:\ttoggle();\r\n\t\t\tdefault:\r\n\t\t}\r\n\t\tif (enabled)\r\n\t\t{\r\n\t\t\tswitch (keyCode)\r\n\t\t\t{\r\n\t\t\t\tcase KeyCode.One: \t\tsetView(\"log\");\r\n\t\t\t\tcase KeyCode.Two: \t\tsetView(\"kontentumtext\");\r\n\t\t\t\tcase KeyCode.Three: \tsetView(\"kontentumfiles\");\r\n\t\t\t\tcase KeyCode.Down: \t\tonArrowDown();\r\n\t\t\t\tcase KeyCode.Up: \t\tonArrowUp();\r\n\t\t\t\tdefault:\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tfunction setView(view:String):Void \r\n\t{\r\n\t\tdebugView = view;\r\n\t\tscrollOffset = 0;\r\n\t\tlastClickedPos.x =-1;\r\n\t\tlastClickedPos.y =-1;\r\n\t\tclickedFile = null;\r\n\t\t\r\n\t\tif (assetImage!=null)\r\n\t\t{\r\n\t\t\tassetImage.unload();\r\n\t\t\tassetImage = null;\r\n\t\t}\r\n\t}\r\n\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\t\r\n\tpublic function toggle()\r\n\t{\r\n\t\tenabled = !enabled;\r\n\t\tmouseActive(enabled);\r\n\t\tif (!enabled)\r\n\t\t{\r\n\t\t\tif (assetVideo != null)\r\n\t\t\t\tassetVideo.stop();\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\tfunction mouseActive(a:Bool)\r\n\t{\r\n\t\tif (a)\r\n\t\t\tMouse.get().notify(null, onMouseUp, null, onMoveWheel);\r\n\t\telse\r\n\t\t\tMouse.get().remove(null, onMouseUp, null, onMoveWheel);\r\n\t}\r\n\t\r\n\tfunction onMoveWheel(d:Int) \r\n\t{\r\n\t\tlastClickedPos.x =-1;\r\n\t\tlastClickedPos.y =-1;\r\n\t\tscrollOffset += d;\r\n\t\tif (scrollOffset < 0)\r\n\t\t\tscrollOffset = 0;\r\n\t}\r\n\t\r\n\tfunction onMouseUp(b:Int,x:Int,y:Int) \r\n\t{\r\n\t\tif (b == 0)\r\n\t\t{\r\n\t\t\tlastClickedPos = {x:x, y:y}; \r\n\t\t\tcheckClickedAsset();\r\n\t\t}\r\n\t}\r\n\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\r\n\tpublic function update()\r\n\t{\r\n\t\tparseKontentum();\r\n\t\t//enabled ? ypos.add(0) : ypos.add( App.appWidth);\r\n\t}\r\n\t\r\n\tpublic function render(g:Graphics) \r\n\t{\r\n\t\tif (enabled)\r\n\t\t{\r\n\t\t\tg.begin(false);\r\n\t\t\t//g.pushTranslation(0, ypos.value);\r\n\t\t\tg.font = Styles.defaultFont;\r\n\t\t\tg.fontSize = 12;\r\n\t\t\t\r\n\t\t\tg.color = 0xff000000;\r\n\t\t\tg.opacity = 0.75;\r\n\t\t\tg.fillRect(0, 0, App.appWidth, App.appHeight);\r\n\t\t\t\r\n\t\t\tg.opacity = 1;\r\n\t\t\tg.color = 0xff55cc55;\r\n\t\t\tg.drawString(\"| \"+Fps.vfps+\"vpfs | Budget: \"+Math.round((Fps.frameTime/(1000/60))*100)+\"% | Total: \"+Fps.frameTime+\"ms\", 200, 50);\r\n\t\t\tg.color = 0xffcccc55;\r\n\t\t\tg.drawString(\"| Update: \"+Fps.updateTime+\"ms\", 500, 50);\r\n\t\t\tg.color = 0xffcc5555;\r\n\t\t\tg.drawString(\"| Render: \"+Fps.renderTime+\"ms\", 800, 50);\r\n\r\n\t\t\tg.color = 0xffcccccc;\r\n\t\t\tg.drawString(\"// UIX : INSPECTOR\", 50, 50);\r\n\r\n\t\t\tg.opacity = 0.4;\r\n\t\t\tg.drawLine(50, 80, App.appWidth - 50, 80);\r\n\t\t\t\r\n\t\t\tswitch (debugView) \r\n\t\t\t{\r\n\t\t\t\tcase \"default\": \t\t\tdrawDefault(g,lineheight);\r\n\t\t\t\tcase \"log\": \t\t\t\tdrawLogInfo(g,lineheight);\r\n\t\t\t\tcase \"kontentumtext\": \t\tdrawKontentumInfo(g,lineheight);\r\n\t\t\t\tcase \"kontentumfiles\": \t\tdrawKontentumInfo(g,lineheight);\r\n\t\t\t\tdefault:\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t//g.popTransformation();\r\n\t\t\tg.end();\r\n\t\t}\r\n\t}\r\n\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\t\r\n\tfunction parseKontentum():Void \r\n\t{\r\n\t\tif (Kontentum.i.initiated)\r\n\t\t{\r\n\t\t\t\r\n\t\t}\r\n\t}\r\n\t\r\n\tfunction drawDefault(g:Graphics,lh:Int) \r\n\t{\r\n\t\tif (Kontentum.i.initiated)\r\n\t\t{\r\n\t\t\t\r\n\t\t}\r\n\t}\r\n\t\r\n\t\r\n\tfunction drawLogInfo(g:Graphics,lh:Int) \r\n\t{\r\n\t\tvar px = 50;\r\n\t\tvar pY = 100;\r\n\t\tvar numlinestodraw = 10;\r\n\t\t\t\t\t\r\n\t\t//g.color = 0xff000000;\r\n\t\t//g.opacity = 0.5;\r\n\t\t//g.fillRect(px, pY+lh, App.appWidth-px, (numlinestodraw+3)*lh);\r\n\t\t\t\r\n\t\tg.color = textColor;\r\n\t\tg.opacity = 1;\r\n\r\n\t\tpY += lh;\r\n\t\tg.drawString(\"DEBUG:\", px, pY);\r\n\t\tpY += lh;\r\n\t\tpY += lh;\r\n\t\t\r\n\t\tvar outputLineNr = \"\";\r\n\t\tvar outputTime = \"\";\r\n\t\tvar outputDebug = \"\";\r\n\t\t\r\n\t\tvar consoleBuffer:Array<EntryBuffer> = @:privateAccess UIXConsole.i.outputBuffer;\r\n\t\tvar obPoint = 0;\r\n\t\t\r\n\t\tif (consoleBuffer.length > numlinestodraw)\r\n\t\t\tobPoint = consoleBuffer.length - numlinestodraw;\r\n\t\t\t\r\n\t\tfor (t in 0...numlinestodraw) \r\n\t\t{\r\n\t\t\tif (t < consoleBuffer.length)\r\n\t\t\t{\r\n\t\t\t\tg.color = 0xff888888;\r\n\t\t\t\tg.drawString(StringUtils.enforceFourDigitNumberToString(obPoint+1), px, pY);\r\n\t\t\t\tg.color = 0xffaaaaaa;\r\n\t\t\t\tg.drawString(consoleBuffer[obPoint].time, px+40, pY);\r\n\t\t\t\tg.color = 0xffcccccc;\r\n\t\t\t\tg.drawString(consoleBuffer[obPoint].text, px+107, pY);\r\n\t\t\t\tpY += lh;\t\t\t\t\r\n\t\t\t}\r\n\t\t}\r\n\t\t\t\r\n\t\tg.color = Color.Green;\r\n\t\tg.opacity = 1;\r\n\r\n\t\tpY += lh;\r\n\t\tg.drawString(\"LOG:\", px, pY);\r\n\t\tpY += lh;\r\n\t\tpY += lh;\r\n\t\t\r\n\t\tobPoint = 0;\r\n\t\t\r\n\t\tif (bufferLog.length > numlinestodraw)\r\n\t\t\tobPoint = bufferLog.length - numlinestodraw;\r\n\t\t\t\r\n\t\tfor (t in 0...numlinestodraw) \r\n\t\t{\r\n\t\t\tif (t < bufferLog.length)\r\n\t\t\t{\r\n\t\t\t\tg.color = 0xff888888;\r\n\t\t\t\tg.drawString(StringUtils.enforceFourDigitNumberToString(obPoint+1), px, pY);\r\n\t\t\t\tg.color = 0xffaaaaaa;\r\n\t\t\t\tg.drawString(bufferLog[obPoint].time, px+40, pY);\r\n\t\t\t\tg.color = 0xffcccccc;\r\n\t\t\t\tg.drawString(bufferLog[obPoint].text, px+107, pY);\r\n\t\t\t\tpY += lh;\t\t\t\t\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tg.color = Color.Red;\r\n\t\tg.opacity = 1;\r\n\r\n\t\tpY += lh;\r\n\t\tg.drawString(\"ERROR:\", px, pY);\r\n\t\tpY += lh;\r\n\t\tpY += lh;\r\n\t\t\r\n\t\tobPoint = 0;\r\n\t\t\r\n\t\tif (bufferError.length > numlinestodraw)\r\n\t\t\tobPoint = bufferError.length - numlinestodraw;\r\n\t\t\t\r\n\t\tfor (t in 0...numlinestodraw) \r\n\t\t{\r\n\t\t\tif (t < bufferError.length)\r\n\t\t\t{\r\n\t\t\t\tg.color = 0xff888888;\r\n\t\t\t\tg.drawString(StringUtils.enforceFourDigitNumberToString(obPoint+1), px, pY);\r\n\t\t\t\tg.color = 0xffaaaaaa;\r\n\t\t\t\tg.drawString(bufferError[obPoint].time, px+40, pY);\r\n\t\t\t\tg.color = 0xffcccccc;\r\n\t\t\t\tg.drawString(bufferError[obPoint].text, px+107, pY);\r\n\t\t\t\tpY += lh;\t\t\t\t\r\n\t\t\t}\r\n\t\t}\t\t\r\n\t\t\t\t\t\r\n\t\tg.color = Color.Orange;\r\n\t\tg.opacity = 1;\r\n\r\n\t\tpY += lh;\r\n\t\tg.drawString(\"WARNING:\", px, pY);\r\n\t\tpY += lh;\r\n\t\tpY += lh;\r\n\t\t\r\n\t\tobPoint = 0;\r\n\t\t\r\n\t\tif (bufferWarning.length > numlinestodraw)\r\n\t\t\tobPoint = bufferWarning.length - numlinestodraw;\r\n\t\t\t\r\n\t\tfor (t in 0...numlinestodraw) \r\n\t\t{\r\n\t\t\tif (t < bufferWarning.length)\r\n\t\t\t{\r\n\t\t\t\tg.color = 0xff888888;\r\n\t\t\t\tg.drawString(StringUtils.enforceFourDigitNumberToString(obPoint+1), px, pY);\r\n\t\t\t\tg.color = 0xffaaaaaa;\r\n\t\t\t\tg.drawString(bufferWarning[obPoint].time, px+40, pY);\r\n\t\t\t\tg.color = 0xffcccccc;\r\n\t\t\t\tg.drawString(bufferWarning[obPoint].text, px+107, pY);\r\n\t\t\t\tpY += lh;\t\t\t\t\r\n\t\t\t}\r\n\t\t}\t\t\r\n\t\t\t\t\r\n\t\tg.color = Color.Cyan;\r\n\t\tg.opacity = 1;\r\n\r\n\t\tpY += lh;\r\n\t\tg.drawString(\"REPORT:\", px, pY);\r\n\t\tpY += lh;\r\n\t\tpY += lh;\r\n\t\t\r\n\t\tobPoint = 0;\r\n\t\t\r\n\t\tif (bufferReport.length > numlinestodraw)\r\n\t\t\tobPoint = bufferReport.length - numlinestodraw;\r\n\t\t\t\r\n\t\tfor (t in 0...numlinestodraw) \r\n\t\t{\r\n\t\t\tif (t < bufferReport.length)\r\n\t\t\t{\r\n\t\t\t\tg.color = 0xff888888;\r\n\t\t\t\tg.drawString(StringUtils.enforceFourDigitNumberToString(obPoint+1), px, pY);\r\n\t\t\t\tg.color = 0xffaaaaaa;\r\n\t\t\t\tg.drawString(bufferReport[obPoint].time, px+40, pY);\r\n\t\t\t\tg.color = 0xffcccccc;\r\n\t\t\t\tg.drawString(bufferReport[obPoint].text, px+107, pY);\r\n\t\t\t\tpY += lh;\t\t\t\t\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tg.color = Color.Pink;\r\n\t\tg.opacity = 1;\r\n\r\n\t\tpY += lh;\r\n\t\tg.drawString(\"NOT FOUND:\", px, pY);\r\n\t\tpY += lh;\r\n\t\tpY += lh;\r\n\t\t\r\n\t\tobPoint = 0;\r\n\t\t\r\n\t\tif (bufferNotFound.length > numlinestodraw)\r\n\t\t\tobPoint = bufferNotFound.length - numlinestodraw;\r\n\t\t\t\r\n\t\tfor (t in 0...numlinestodraw) \r\n\t\t{\r\n\t\t\tif (t < bufferNotFound.length)\r\n\t\t\t{\r\n\t\t\t\tg.color = 0xff888888;\r\n\t\t\t\tg.drawString(StringUtils.enforceFourDigitNumberToString(obPoint+1), px, pY);\r\n\t\t\t\tg.color = 0xffaaaaaa;\r\n\t\t\t\tg.drawString(bufferNotFound[obPoint].time, px+40, pY);\r\n\t\t\t\tg.color = 0xffcccccc;\r\n\t\t\t\tg.drawString(bufferNotFound[obPoint].text, px+107, pY);\r\n\t\t\t\tpY += lh;\t\t\t\t\r\n\t\t\t}\r\n\t\t}\t\t\r\n\t\t\r\n\t}\r\n\t\r\n\tfunction drawKontentumInfo(g:Graphics,lh:Int) \r\n\t{\r\n\t\tif (Kontentum.i.initiated)\r\n\t\t{\r\n\t\t\tvar px = 50;\r\n\t\t\t\r\n\t\t\tg.color = textColor;\r\n\t\t\tg.opacity = 1;\r\n\r\n\t\t\tvar pY = 100;\r\n\t\t\t\r\n\t\t\tswitch (debugView) \r\n\t\t\t{\r\n\t\t\t\tcase \"kontentumtext\": \t\tdrawKontentumTextInfo(g, px, pY,lh);\r\n\t\t\t\tcase \"kontentumfiles\": \t\tdrawKontentumFileInfo(g, px, pY,lh);\r\n\t\t\t\tdefault:\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\t\t\r\n\t}\r\n\t\r\n\tfunction drawKontentumTextInfo(g:Graphics, px:Int, pY:Int, plh:Int) \r\n\t{\r\n\t\tg.drawString(\"TEXT\", px, pY += plh );\r\n\t\tpY += plh;\r\n\t\tg.drawString(\"ID    Identifier:\", px, pY += plh );\r\n\t\tpY += plh;\r\n\t\tvar ly = pY+(plh)-3;\r\n\t\tvar lx = px;\r\n\t\t\r\n\t\tvar c1w = 0;\r\n\t\tvar c1tw:Float = 0;\r\n\t\tvar c1t = \"\";\r\n\t\tvar count = 0;\r\n\t\tfor (tc in Kontentum.i.texts) \r\n\t\t{\r\n\t\t\tif (scrollOffset < count)\r\n\t\t\t{\r\n\t\t\t\tc1t = \"\" + tc + (Std.parseInt(tc) < 1000?\" \":\"\") + \"  \" + UIX.assets.getIdentifierByID(tc);\r\n\t\t\t\tif (pY<App.appHeight)\r\n\t\t\t\t\tg.drawString(c1t, px, pY += plh);\r\n\t\t\t\t\r\n\t\t\t\tc1tw = g.font.width(g.fontSize, c1t);\r\n\t\t\t\tif (c1tw > c1w)\r\n\t\t\t\t\tc1w = Math.ceil(c1tw);\r\n\t\t\t}\r\n\t\t\tcount++;\r\n\t\t}\r\n\t\t\r\n\t\tpx += c1w + 50;\r\n\t\tpY = 100;\r\n\t\tpY += plh;\r\n\t\tpY += plh;\r\n\t\tg.drawString(\"Text:\", px, pY += plh );\r\n\t\tpY += plh;\r\n\t\tcount = 0;\r\n\t\tfor (tc in Kontentum.i.texts) \r\n\t\t{\r\n\t\t\tif (scrollOffset < count)\r\n\t\t\t{\r\n\t\t\t\tif (pY < App.appHeight)\r\n\t\t\t\t\tg.drawString(UIX.getAsset(tc), px, pY += plh );\r\n\t\t\t}\r\n\t\t\tcount++;\t\t\t\t\t\r\n\t\t}\t\t\t\r\n\t\t\r\n\t\tg.opacity = 0.2;\r\n\t\tvar aw = App.appWidth;\r\n\t\t\r\n\t\tfor (tc in Kontentum.i.texts) \r\n\t\t{\r\n\t\t\tg.drawLine(lx, ly, aw-50, ly);\r\n\t\t\tly += plh;\r\n\t\t}\t\t\t\r\n\t\tg.drawLine(lx, ly, aw-50, ly);\r\n\t}\r\n\t\r\n\tfunction drawKontentumFileInfo(g:Graphics, px:Int, pY:Int, plh:Int) \r\n\t{\r\n\t\tg.drawString(\"FILES\", px, pY += plh );\r\n\t\tpY += plh;\r\n\t\tg.drawString(\"ID    Identifier:\", px, pY += plh );\r\n\t\tpY += plh;\r\n\t\tvar ly = pY+(plh)-3;\r\n\t\tvar lx = px;\r\n\t\tvar sy = ly;\r\n\t\t\r\n\t\tvar c1w = 0;\r\n\t\tvar c1tw:Float = 0;\r\n\t\tvar c1t = \"\";\r\n\t\tvar count = 0;\r\n\t\tfor (tc in Kontentum.i.files) \r\n\t\t{\r\n\t\t\tif (scrollOffset < count)\r\n\t\t\t{\r\n\t\t\t\tif (lastClickedPos.y > pY && lastClickedPos.y < pY + plh)\r\n\t\t\t\t{\r\n\t\t\t\t\tg.color = 0xffff8800;\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t\tg.color = textColor;\r\n\t\t\t\t\t\r\n\t\t\t\tc1t = \"\" + tc + (Std.parseInt(tc) < 1000?\" \":\"\") + \"  \" + UIX.assets.getIdentifierByID(tc,\"file\");\r\n\t\t\t\tif (pY<App.appHeight)\r\n\t\t\t\t\tg.drawString(c1t, px, pY);\r\n\t\t\t\t\r\n\t\t\t\tc1tw = g.font.width(g.fontSize, c1t);\r\n\t\t\t\tif (c1tw > c1w)\r\n\t\t\t\t\tc1w = Math.ceil(c1tw);\r\n\t\t\t\t\t\r\n\t\t\t\tpY += plh;\r\n\t\t\t}\r\n\t\t\tcount++;\r\n\t\t}\r\n\t\t\r\n\t\tpx += c1w + 50;\r\n\t\tpY = 100;\r\n\t\tpY += plh;\r\n\t\tpY += plh;\r\n\t\tg.drawString(\"File:\", px, pY += plh );\r\n\t\tpY += plh;\r\n\t\tcount = 0;\r\n\t\tfor (tc in Kontentum.i.files) \r\n\t\t{\r\n\t\t\tif (scrollOffset < count)\r\n\t\t\t{\r\n\t\t\t\tif (pY < App.appHeight)\r\n\t\t\t\t{\r\n\t\t\t\t\tvar file = UIX.getAsset(tc, \"file\");\r\n\t\t\t\t\tif (lastClickedPos.y > pY && lastClickedPos.y < pY + plh)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tclickedFile = file;\r\n\t\t\t\t\t\tvar col = g.color;\r\n\t\t\t\t\t\tg.color = 0xffff8800;\r\n\t\t\t\t\t\tg.drawString(file, px, pY);\r\n\t\t\t\t\t\tg.color = col;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\tg.drawString(file, px, pY);\r\n\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\tpY += plh;\r\n\t\t\t}\r\n\t\t\tcount++;\t\t\t\t\t\r\n\t\t}\t\t\t\r\n\t\t\r\n\t\tg.opacity = 0.2;\r\n\t\tvar aw = App.appWidth*0.5;\r\n\t\t\r\n\t\tfor (tc in Kontentum.i.texts) \r\n\t\t{\r\n\t\t\tg.drawLine(lx, ly, aw-50, ly);\r\n\t\t\tly += plh;\r\n\t\t}\t\t\t\r\n\t\tg.drawLine(lx, ly, aw-50, ly);\r\n\t\t\r\n\t\tg.drawRect(aw, sy, (aw - 50), App.appHeight-sy-50 );\r\n\t\t\r\n\t\tg.color = 0xffffffff;\r\n\t\tg.opacity = 1;\r\n\t\t\r\n\t\tif (assetImage != null)\r\n\t\t{\r\n\t\t\tif (assetImage.width<=(aw-70))\r\n\t\t\t{\r\n\t\t\t\tg.drawImage(assetImage, aw+10+((aw-70)*0.5)-(assetImage.width*0.5), sy+((App.appHeight-sy-70)*0.5)-(assetImage.height*0.5));\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tvar s = (aw-70) / assetImage.width;\r\n\t\t\t\tvar isq = g.imageScaleQuality;\r\n\t\t\t\tg.imageScaleQuality = ImageScaleQuality.High;\r\n\t\t\t\tg.drawScaledImage(assetImage, aw+10, sy + ((App.appHeight-sy-50)*0.5)-(assetImage.height*s*0.5), assetImage.width*s, assetImage.height*s);\r\n\t\t\t\tg.imageScaleQuality = isq;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if (assetVideo != null)\r\n\t\t{\r\n\t\t\tvar s = (aw-70) / assetVideo.width();\r\n\t\t\tvar isq = g.imageScaleQuality;\r\n\t\t\tg.imageScaleQuality = ImageScaleQuality.High;\r\n\t\t\tg.drawVideo(assetVideo, aw+10, sy + ((App.appHeight-sy-50)*0.5)-(assetVideo.height()*s*0.5), assetVideo.width()*s, assetVideo.height()*s);\r\n\t\t\tg.imageScaleQuality = isq;\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\t\r\n\tfunction checkClickedAsset()\r\n\t{\r\n\t\tTimer.delay(function()\r\n\t\t{\r\n\t\t\tif (clickedFilePrev != clickedFile)\r\n\t\t\t{\r\n\t\t\t\tif (assetVideo != null)\r\n\t\t\t\t{\r\n\t\t\t\t\tassetVideo.stop();\r\n\t\t\t\t\tassetVideo.unload();\r\n\t\t\t\t\tassetVideo = null;\r\n\t\t\t\t}\r\n\t\t\t\tassetImage = null;\r\n\t\t\t\tclickedFilePrev = clickedFile;\r\n\t\t\t\t\r\n\t\t\t\tif (clickedFile.indexOf(\".jpg\") !=-1 || clickedFile.indexOf(\".png\") !=-1 || clickedFile.indexOf(\".JPG\") !=-1 || clickedFile.indexOf(\".PNG\") !=-1 || clickedFile.indexOf(\".jpeg\") !=-1 || clickedFile.indexOf(\".JPEG\") !=-1)\r\n\t\t\t\t{\r\n\t\t\t\t\tclickedFilePrev = clickedFile;\r\n\t\t\t\t\timageLoader.loadImage(Kontentum.i.fileURL + clickedFile);\r\n\t\t\t\t}\r\n\t\t\t\telse if (clickedFile.indexOf(\".mp4\") !=-1)\r\n\t\t\t\t{\r\n\t\t\t\t\t//Assets.loadVideoFromPath(\"vix.mp4\", function(v:Video)\r\n\t\t\t\t\tAssets.loadVideoFromPath(Kontentum.i.fileURL + clickedFile, function(v:Video)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tassetVideo = v;\r\n\t\t\t\t\t\tassetVideo.play();\r\n\t\t\t\t\t\tassetVideo.setVolume(1);\r\n\t\t\t\t\t},\r\n\t\t\t\t\tfunction(e:AssetError)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttrace(e);\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}, 32);\r\n\t}\r\n\t\r\n\tfunction onImageLoaded(uxl:UIXLoader)\r\n\t{\r\n\t\tassetImage = uxl.contentIMAGE;\r\n\t}\r\n\t\r\n\tfunction onArrowUp() \r\n\t{\r\n\t\tif (debugView == \"kontentumfiles\")\r\n\t\t{\r\n\t\t\tlastClickedPos.y -= lineheight;\r\n\t\t\tif (lastClickedPos.y < 100)\r\n\t\t\t\tlastClickedPos.y = 100;\r\n\t\t\t\t\r\n\t\t\tcheckClickedAsset();\r\n\t\t}\r\n\t}\r\n\t\r\n\tfunction onArrowDown() \r\n\t{\r\n\t\tif (debugView == \"kontentumfiles\")\r\n\t\t{\r\n\t\t\tlastClickedPos.y += lineheight;\r\n\t\t\tif (lastClickedPos.y > (App.appHeight-10))\r\n\t\t\t\tlastClickedPos.y = (App.appHeight - 10);\r\n\r\n\t\t\tcheckClickedAsset();\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\t\r\n\tpublic function notfound(value:Dynamic) \r\n\t{\r\n\t\tbufferNotFound.push( { time:TimeUtils.getFormatedTimeStamp(), text:Std.string(value), type:0 });\t\r\n\t}\r\n\t\r\n\tpublic function error(value:Dynamic) \r\n\t{\r\n\t\tbufferError.push( { time:TimeUtils.getFormatedTimeStamp(), text:Std.string(value), type:0 });\t\r\n\t}\r\n\t\r\n\tpublic function report(value:Dynamic) \r\n\t{\r\n\t\tbufferReport.push( { time:TimeUtils.getFormatedTimeStamp(), text:Std.string(value), type:0 });\t\r\n\t}\r\n\t\r\n\tpublic function warning(value:Dynamic) \r\n\t{\r\n\t\tbufferWarning.push( { time:TimeUtils.getFormatedTimeStamp(), text:Std.string(value), type:0 });\t\r\n\t}\r\n\t\r\n\tpublic function log(value:Dynamic) \r\n\t{\r\n\t\tbufferLog.push( { time:TimeUtils.getFormatedTimeStamp(), text:Std.string(value), type:0 });\t\r\n\t}\t\r\n\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\t\r\n}\r\n","package no.logic.kha.uix.file;\r\nimport haxe.ds.StringMap;\r\nimport haxe.io.Bytes;\r\nimport haxe.zip.Entry;\r\nimport kha.Image;\r\nimport no.logic.kha.uix.core.loading.UIXLoader;\r\nimport no.logic.kha.uix.utils.ImageUtils;\r\nimport zip.Zip;\r\nimport zip.ZipEntry;\r\nimport zip.ZipReader;\r\n\r\n\r\n/**\r\n * ...\r\n * @author Tommy Svensson\r\n */\r\n\r\nclass ZipFile\r\n{\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\t\r\n\t//===================================================================================\r\n\t// Consts \r\n\t//-----------------------------------------------------------------------------------\r\n\r\n\t//===================================================================================\r\n\t// Properties \r\n\t//-----------------------------------------------------------------------------------\r\n\t\r\n\tpublic var rawBytes\t\t\t\t: Bytes;\r\n\tpublic var file\t\t\t\t\t: String;\r\n\r\n\t//===================================================================================\r\n\t// Declarations \r\n\t//-----------------------------------------------------------------------------------\r\n\r\n\tvar loader\t\t\t\t\t\t: UIXLoader;\r\n\tpublic var entries\t\t\t\t: StringMap<ZipEntry>;\r\n\r\n\tpublic var files\t\t\t\t: Array<String>\t\t\t\t= [];\r\n\tpublic var images\t\t\t\t: Array<String>\t\t\t\t= [];\r\n\t\r\n\t//===================================================================================\r\n\t// Callback \r\n\t//-----------------------------------------------------------------------------------\t\t\r\n\r\n\tpublic var onReady\t\t\t\t: (ZipFile)->Void;\r\n\t\r\n\t//===================================================================================\r\n\t// Variables \r\n\t//-----------------------------------------------------------------------------------\t\t\r\n\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\t\r\n\tpublic function new(bytesOrFile:Any,?autoLoad:Bool=false,?onReady:(ZipFile)->Void) \r\n\t{\r\n\t\tif (bytesOrFile != null)\r\n\t\t{\r\n\t\t\tif (onReady != null)\r\n\t\t\t\tthis.onReady = onReady;\r\n\t\t\t\t\r\n\t\t\tif (Std.is(bytesOrFile, Bytes))\r\n\t\t\t{\r\n\t\t\t\tthis.rawBytes = cast bytesOrFile;\r\n\t\t\t\tparseZip();\r\n\t\t\t\tif (onReady != null)\r\n\t\t\t\t\tonReady(this);\r\n\t\t\t}\r\n\t\t\telse if (Std.is(bytesOrFile, String))\r\n\t\t\t{\r\n\t\t\t\tfile = cast bytesOrFile;\r\n\t\t\t\tif (autoLoad)\r\n\t\t\t\t\tload();\r\n\t\t\t}\r\n\t\t}\t\t\r\n\t}\t\r\n\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\r\n\tpublic function load(?file:String) \r\n\t{\r\n\t\tif (file != null)\r\n\t\t\tthis.file = file;\r\n\t\t\t\r\n\t\tloader = new UIXLoader();\r\n\t\tloader.onComplete = onFileLoaded;\r\n\t\tloader.onError = onFileLoadError;\r\n\t\tloader.load(this.file);\r\n\t}\r\n\t\r\n\tfunction onFileLoaded(uxl:UIXLoader) \r\n\t{\r\n\t\tthis.rawBytes = uxl.contentRAW;\r\n\t\tparseZip();\r\n\t\tif (onReady != null)\r\n\t\t\tonReady(this);\r\n\t}\r\n\t\r\n\tfunction onFileLoadError(uxl:UIXLoader) \r\n\t{\r\n\t\t\r\n\t}\r\n\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\r\n\tfunction parseZip() \r\n\t{\r\n\t\tfiles = [];\r\n\t\timages = [];\r\n\t\tentries = new StringMap<ZipEntry>();\r\n\r\n\t\tvar zip = new ZipReader(rawBytes);\r\n\t\tvar entry:ZipEntry;\r\n\r\n\t\twhile ( (entry = zip.getNextEntry()) != null )\r\n\t\t{\r\n\t\t\tvar fn = entry.fileName;\r\n\t\t\tentries.set(fn, entry);\r\n\t\t\tfiles.push(fn);\r\n\t\t\t\r\n\t\t\tif (fn.indexOf(\".png\")!=-1 || fn.indexOf(\".jpg\")!=-1 ||fn.indexOf(\".gif\")!=-1)\r\n\t\t\t\timages.push(fn);\r\n\t\t}\t\t\t\r\n\t}\r\n\t\r\n\t//////////////////////////////////////////////////////////////////////////////////////\r\n\t\r\n\tpublic function getFile(path:String):Bytes\r\n\t{\r\n\t\tif (entries == null)\r\n\t\t{\r\n\t\t\ttrace(\"zipfile is empty or not parsed yet!\");\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\t\t\r\n\t\tvar entry:ZipEntry = entries.get(path);\r\n\t\tif (entry == null)\r\n\t\t\treturn null;\r\n\t\t\t\r\n\t\treturn Zip.getBytes(entry);\r\n\t}\r\n\t\r\n\tpublic function getTextFile(path:String):String\r\n\t{\r\n\t\tif (entries == null)\r\n\t\t{\r\n\t\t\ttrace(\"zipfile is empty or not parsed yet!\");\r\n\t\t\treturn null;\r\n\t\t}\r\n\r\n\t\tvar entry:ZipEntry = entries.get(path);\r\n\t\tif (entry == null)\r\n\t\t\treturn null;\r\n\t\t\t\r\n\t\treturn Zip.getString(entry);\r\n\t}\r\n\r\n\tpublic function getImage(path:String,onImageLoaded:(Image)->Void)\r\n\t{\r\n\t\tif (onImageLoaded == null)\r\n\t\t\treturn;\r\n\t\tImageUtils.imageFromFileBytes(getFile(path), onImageLoaded);\r\n\t}\r\n\t\r\n\t//////////////////////////////////////////////////////////////////////////////////////\r\n\t\r\n\tpublic function dispose()\r\n\t{\r\n\t\t\r\n\t}\r\n\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n}","package no.logic.kha.uix.fla;\r\nimport haxe.Timer;\r\nimport haxe.ds.Map;\r\nimport haxe.io.Bytes;\r\nimport haxe.xml.Access;\r\nimport kha.Color;\r\nimport kha.Image;\r\nimport kha.graphics2.Graphics;\r\nimport no.logic.kha.uix.file.ZipFile;\r\nimport no.logic.kha.uix.fla.FlaElement;\r\nimport no.logic.kha.uix.fla.FlaFrame;\r\nimport no.logic.kha.uix.fla.FlaSymbol;\r\nimport no.logic.kha.uix.fla.FlaTimeline;\r\nimport no.logic.kha.uix.scene.DisplayObject;\r\nimport no.logic.kha.uix.scene.Sprite;\r\n\r\n/**\r\n * ...\r\n * @author Tommy Svensson\r\n */\r\n\r\nenum FlaInitAction\r\n{\r\n\tPLAY;\r\n\tSTOPPED;\r\n\tNONE;\r\n}\r\n \r\nclass Fla extends Sprite\r\n{\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\r\n\t//===================================================================================\r\n\t// Consts\r\n\t//-----------------------------------------------------------------------------------\r\n\r\n\t//===================================================================================\r\n\t// Properties\r\n\t//-----------------------------------------------------------------------------------\r\n\r\n\tpublic var initAction\t\t: FlaInitAction\t\t\t= FlaInitAction.PLAY;\r\n\r\n\t//===================================================================================\r\n\t// Declarations\r\n\t//-----------------------------------------------------------------------------------\r\n\r\n\tvar flaZip\t\t\t\t\t: ZipFile;\r\n\tvar mediaParseTimer\t\t\t: Timer;\r\n\tpublic var library\t\t\t: FlaLibrary;\r\n\tstatic public var l\t\t\t: FlaLibrary;\r\n\tstatic public var fla\t\t: Fla;\r\n\r\n\t//===================================================================================\r\n\t// Callback\r\n\t//-----------------------------------------------------------------------------------\r\n\r\n\t//===================================================================================\r\n\t// Variables\r\n\t//-----------------------------------------------------------------------------------\r\n\r\n\tvar domXML\t\t\t\t\t: Xml;\r\n\tvar flaTimeline\t\t\t\t: FlaTimeline;\r\n\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\r\n\tpublic function new(bytesOrFile:Any, ?autoLoad:Bool=true, ?props:Dynamic, ?initAction:FlaInitAction=FlaInitAction.PLAY)\r\n\t{\r\n\t\tthis.initAction = initAction;\r\n\t\tsuper(props);\r\n\t\t#if (kha_kore || kha_krom || kha_js)\r\n\t\tflaZip = new ZipFile(bytesOrFile, true, ready);\r\n\t\t#end\r\n\t}\r\n\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\r\n\tfunction ready(z)\r\n\t{\r\n\t\tif (z != null)\r\n\t\t{\r\n\t\t\tlibrary = new FlaLibrary(z);\r\n\t\t\tFla.l = library;\r\n\t\t\t\r\n\t\t\t//if (name == null && flaZip.file != null)\r\n\t\t\t\tname = flaZip.file;\r\n\t\t\t\r\n\t\t\tvar domXML:String = z.getTextFile(\"DOMDocument.xml\");\r\n\t\t\tif (domXML == null)\r\n\t\t\t\treturn;\r\n\t\t\t\r\n\t\t\tdomXML = FlaLibrary.cleanTags(domXML);\r\n\t\t\tparseDOM(Xml.parse(domXML));\r\n\t\t\t//if (initAction==FlaInitAction.PLAY && autoPlay)\r\n\t\t\t\t//play();\r\n\t\t\t//else if (initAction == FlaInitAction.STOPPED)\r\n\t\t\t\t//goto(1);\r\n\t\t}\r\n\t\telse\r\n\t\t\tUIX.c.debug(\"Error: Could not open zip file!\");\r\n\t}\r\n\r\n\tfunction parseDOM(domXML:Xml)\r\n\t{\r\n\t\tthis.domXML = domXML;\r\n\t\tvar xa = new Access(domXML.firstElement());\r\n\t\twidth = Std.parseInt(xa.att.width);\r\n\t\theight = Std.parseInt(xa.att.height);\r\n\t\tframeRate = Std.parseInt(xa.att.frameRate);\r\n\t\tfillColor = Color.fromString(xa.att.backgroundColor);\r\n\r\n\t\tlibrary.preloadMedia(xa);\r\n\t\tlibrary.parseSymbols(xa);\r\n\t\tcheckMediaReady();\r\n\t}\r\n\r\n\tfunction checkMediaReady()\r\n\t{\r\n\t\tif (library.bitmapsReady == true)\r\n\t\t{\r\n\t\t\tflaTimeline = new FlaTimeline(domXML.firstElement());\r\n\t\t\t//setTimelineDataFromFLA(flaTimeline);\r\n\t\t\t//numFrames = timeline.numFrames;\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tTimer.delay(checkMediaReady, 17);\r\n\t\t}\r\n\t}\r\n\r\n\t//////////////////////////////////////////////////////////////////////////////////////\r\n/*\r\n\toverride public function update()\r\n\t{\r\n\t\tsuper.update();\r\n\t}\r\n\r\n\toverride public function render(g)\r\n\t{\r\n\t\tsuper.render(g);\r\n\t}*/\r\n\r\n\t//////////////////////////////////////////////////////////////////////////////////////\r\n\r\n/*\tpublic function renderDocumentFrame(frameNr:Int=1,g:Graphics)\r\n\t{\r\n\t\t//super.render(g);\r\n\t\tif (timeline != null && timeline.layers != null)\r\n\t\t{\r\n\t\t\tfor (layer in timeline.layers)\r\n\t\t\t{\r\n\t\t\t\tfor (frame in layer.frames)\r\n\t\t\t\t{\r\n\t\t\t\t\tfor (element in frame.elements)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\telement.render(g,library);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}*/\r\n\r\n\t//////////////////////////////////////////////////////////////////////////////////////\r\n\r\n\t@:keep\r\n\tstatic public function getRoot(?flaName:String):Fla\r\n\t{\r\n\t\ttrace(\"Hello\");\r\n\t\tif (Fla.fla != null && Fla.fla.flaTimeline!=null)\r\n\t\t{\r\n\t\t\tFla.fla.setTimelineDataFromFLA( Fla.fla.flaTimeline );\r\n\t\t\treturn Fla.fla;\r\n\t\t}\r\n\t\telse\r\n\t\t\treturn null;\r\n\t}\r\n\t\r\n\t@:keep\r\n\tstatic public function getSymbol(symbolName:String,?flaName:String):MovieClip\r\n\t{\r\n\t\t//if (symbolName == \"root\")\r\n\t\t//{\r\n\t\t\t//play();\r\n\t\t\t//return this;\r\n\t\t//}\r\n\t\t//else\r\n\t\tif (Fla.l!=null && Fla.l.symbols.exists(symbolName))\r\n\t\t{\r\n\t\t\tvar fs:FlaSymbol = Fla.l.symbols.get(symbolName);\r\n\t\t\tif (fs != null)\r\n\t\t\t{\r\n\t\t\t\tvar mc:MovieClip = new MovieClip({name:fs.name+FlaElement.elementCount++});\r\n\t\t\t\tmc.setTimelineDataFromFLA( fs.timeline);\r\n\t\t\t\treturn mc;\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t\treturn null;\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\t\r\n\t//////////////////////////////////////////////////////////////////////////////////////\r\n\r\n\toverride public function dispose()\r\n\t{\r\n\t\tsuper.dispose();\r\n\t}\r\n\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n}","package no.logic.kha.uix.fla;\r\nimport haxe.macro.Expr.Error;\r\nimport haxe.xml.Access;\r\nimport kha.Assets;\r\nimport kha.Color;\r\nimport kha.FastFloat;\r\nimport kha.Font;\r\nimport kha.Image;\r\nimport kha.graphics2.Graphics;\r\nimport no.logic.kha.uix.file.ZipFile;\r\nimport no.logic.kha.uix.graphics.Draw;\r\nimport no.logic.kha.uix.scene.Bitmap;\r\nimport no.logic.kha.uix.scene.DisplayObject;\r\nimport no.logic.kha.uix.scene.Shape;\r\nimport no.logic.kha.uix.scene.Text;\r\nimport no.logic.kha.uix.scene.shapes.ShapeData;\r\nimport no.logic.kha.uix.scene.shapes.ShapeParser;\r\nimport no.logic.kha.uix.scene.shapes.ShapeRenderer;\r\nimport no.logic.kha.uix.scene.uixcomp.UIXGComponentManager;\r\nimport no.logic.kha.uix.scene.uixcomp.UIXGElement;\r\nimport no.logic.kha.uix.types.Object;\r\nimport no.logic.kha.uix.utils.Convert;\r\nimport no.logic.kha.uix.utils.MathUtils;\r\n\r\n/**\r\n * ...\r\n * @author Tommy Svensson\r\n */\r\n\r\nclass FlaElement\r\n{\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\t\r\n\t//===================================================================================\r\n\t// Consts \r\n\t//-----------------------------------------------------------------------------------\r\n\r\n\tstatic public inline var STATIC_TEXT\t\t: String \t= \"DOMStaticText\";\r\n\tstatic public inline var DYNAMIC_TEXT\t\t: String \t= \"DOMDynamicText\";\r\n\tstatic public inline var SHAPE\t\t\t\t: String \t= \"DOMShape\";\r\n\tstatic public inline var SHAPE_RECTANGLE\t: String \t= \"DOMRectangleObject\";\r\n\tstatic public inline var SHAPE_OVAL\t\t\t: String \t= \"DOMOvalObject\";\r\n\tstatic public inline var SYMBOL_INSTANCE\t: String \t= \"DOMSymbolInstance\";\r\n\tstatic public inline var BITMAP_INSTANCE\t: String \t= \"DOMBitmapInstance\";\r\n\t\r\n\t//===================================================================================\r\n\t// Properties \r\n\t//-----------------------------------------------------------------------------------\r\n\t\r\n\tstatic public var elementCount\t: Int\t\t\t= 0;\r\n\t\r\n\tpublic var parentFrame\t\t: FlaFrame;\r\n\tpublic var type\t\t\t\t: String;\r\n\tpublic var uuid\t\t\t\t: String;\r\n\tpublic var zIndex\t\t\t: Int;\r\n\t\r\n\tpublic var name\t\t\t\t: String;\r\n\tpublic var align\t\t\t: Align;\r\n\tpublic var x\t\t\t\t: Float\t\t\t\t= 0;\r\n\tpublic var y\t\t\t\t: Float\t\t\t\t= 0;\r\n\tpublic var width\t\t\t: Float\t\t\t\t= 0;\r\n\tpublic var height\t\t\t: Float\t\t\t\t= 0;\r\n\tpublic var rotation\t\t\t: FastFloat\t\t\t= 0;\r\n\tpublic var centerx\t\t\t: Float\t\t\t\t= 0;\r\n\tpublic var centery\t\t\t: Float\t\t\t\t= 0;\r\n\tpublic var a\t\t\t\t: Float\t\t\t\t= 1;\r\n\tpublic var b\t\t\t\t: Float\t\t\t\t= 1;\r\n\tpublic var c\t\t\t\t: Float\t\t\t\t= 1;\r\n\tpublic var d\t\t\t\t: Float\t\t\t\t= 1;\r\n\tpublic var scale \t\t\t: Float\t\t\t\t= 1;\r\n\tpublic var scaleX\t\t\t: Float\t\t\t\t= 1;\r\n\tpublic var scaleY\t\t\t: Float\t\t\t\t= 1;\r\n\tpublic var libraryItemName\t: String;\r\n\tpublic var disposeOnRemove\t: Bool\t\t\t\t= true;\r\n\tpublic var tintMultiplier\t: Null<Float>;\r\n\tpublic var tintColor\t\t: Null<Color>;\r\n\t\r\n\tpublic var uixData\t\t\t: Object;\r\n\r\n\t// Text type properties /////////////////////////////////////////////////////////////\r\n\r\n\tpublic var text\t\t\t\t: String;\r\n\tpublic var aliasText\t\t: Bool;\r\n\tpublic var autoKern\t\t\t: Bool;\r\n\tpublic var lineHeight\t\t: Float;\r\n\tpublic var lineSpacing\t\t: Float;\r\n\tpublic var lineType\t\t\t: String;\r\n\tpublic var fontSize\t\t\t: Int;\r\n\tpublic var bitmapSize\t\t: Int;\r\n\tpublic var face\t\t\t\t: String;\r\n\tpublic var font\t\t\t\t: Font;\r\n\tpublic var fillColor\t\t: Color;\r\n\tpublic var color\t\t\t: Null<Color>;\r\n\tpublic var alpha\t\t\t: Null<Float>;\r\n\tpublic var visible\t\t\t: Bool;\r\n\tpublic var dynamicText\t\t: Bool;\r\n\t\r\n\t// Shape type properties ////////////////////////////////////////////////////////////\r\n\r\n\tpublic var shapeData\t\t: ShapeData;\r\n\t\r\n\t// Bitmap type properties ///////////////////////////////////////////////////////////\r\n\r\n\tpublic var bitmap\t\t\t: Image;\r\n\t\r\n\t// Symbol type properties ///////////////////////////////////////////////////////////\r\n\r\n\tpublic var symbolType\t\t: String;\r\n\tpublic var loop\t\t\t\t: String;\r\n\tpublic var timeline\t\t\t: FlaTimeline;\r\n\t\r\n\t//===================================================================================\r\n\t// Declarations \r\n\t//-----------------------------------------------------------------------------------\r\n\r\n\t//===================================================================================\r\n\t// Callback \r\n\t//-----------------------------------------------------------------------------------\t\t\r\n\r\n\t//===================================================================================\r\n\t// Variables \r\n\t//-----------------------------------------------------------------------------------\t\t\r\n\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\t\r\n\tpublic function new(DOMElement:Xml, parentFrame:FlaFrame,zIndex:Int) \r\n\t{\r\n\t\t//trace(\"p:\",parentFrame.parentLayer.parentTimeline.name);\r\n\t\t//if (parentFrame.parentLayer.parentTimeline.name == \"LTest\")\r\n\t\t//{\r\n\t\t\t////trace(\"z:\",zIndex);\r\n\t\t\t//trace(\"zp:\",parentFrame.parentLayer.zIndex,parentFrame.parentLayer.name);\r\n\t\t//}\r\n\t\t\r\n\t\tthis.zIndex = zIndex;\r\n\t\tthis.parentFrame = parentFrame;\r\n\t\t\r\n\t\tvar xa = new Access(DOMElement);\r\n\t\t\r\n\t\tif (xa.has.width)\r\n\t\t\twidth = Std.parseFloat(xa.att.width);\r\n\t\t\t\r\n\t\tif (xa.has.height)\r\n\t\t\theight = Std.parseFloat(xa.att.height);\r\n\t\t//try\r\n\t\t//{\r\n\t\t\tif (xa.hasNode.matrix)\r\n\t\t\t{\r\n\t\t\t\tif (xa.node.matrix.node.Matrix.has.tx)\r\n\t\t\t\t\tx = Std.parseFloat(xa.node.matrix.node.Matrix.att.tx);\r\n\t\t\t\tif (xa.node.matrix.node.Matrix.has.ty)\r\n\t\t\t\t\ty = Std.parseFloat(xa.node.matrix.node.Matrix.att.ty);\r\n\t\t\t\tif (xa.node.matrix.node.Matrix.has.a)\r\n\t\t\t\t\ta = Std.parseFloat(xa.node.matrix.node.Matrix.att.a);\r\n\t\t\t\tif (xa.node.matrix.node.Matrix.has.b)\r\n\t\t\t\t\tb = Std.parseFloat(xa.node.matrix.node.Matrix.att.b);\r\n\t\t\t\tif (xa.node.matrix.node.Matrix.has.c)\r\n\t\t\t\t\tc = Std.parseFloat(xa.node.matrix.node.Matrix.att.c);\r\n\t\t\t\tif (xa.node.matrix.node.Matrix.has.d)\r\n\t\t\t\t\td = Std.parseFloat(xa.node.matrix.node.Matrix.att.d);\r\n\t\t\t\t\t\r\n\t\t\t\tscaleX = a;\r\n\t\t\t\tscaleY = a;\r\n\t\t\t\t//scale = a;\r\n\t\t\t\t//rotation = MathUtils.radiansToDegrees(c);\r\n\t\t\t}\r\n\t\t\tif (xa.hasNode.transformationPoint)\r\n\t\t\t{\r\n\t\t\t\tcenterx = Std.parseFloat(xa.node.transformationPoint.node.Point.att.x);\r\n\t\t\t\tcentery = Std.parseFloat(xa.node.transformationPoint.node.Point.att.y);\r\n\t\t\t}\r\n\t\t//}\r\n\t\t//catch (e:Any)\r\n\t\t//{\r\n\t\t\t////UIX.c.debug(e);\r\n\t\t//}\r\n\t\t\r\n\t\tif (xa.has.libraryItemName)\r\n\t\t\tlibraryItemName = xa.att.libraryItemName;\r\n\t\t\r\n\t\ttype = xa.name;\r\n\t\tif (xa.has.name)\r\n\t\t{\r\n\t\t\tname = xa.att.name;\r\n\t\t\tif (UIXGComponentManager.isUIXComponent(name))\r\n\t\t\t\tuixData = UIXGComponentManager.constructUIXData(name);\r\n\t\t}\r\n\t\telse\r\n\t\t\tname = generateName();\r\n\t\t\r\n\t\tuuid = generateUUID();\r\n\t\t\r\n\t\tif (xa.hasNode.color)\r\n\t\t{\r\n\t\t\tvar xaCol = xa.node.color;\r\n\t\t\tif (xaCol != null)\r\n\t\t\t{\r\n\t\t\t\tif (xaCol.hasNode.Color)\r\n\t\t\t\t{\r\n\t\t\t\t\tif (xaCol.node.Color.has.alphaMultiplier)\r\n\t\t\t\t\t\tthis.alpha = Std.parseFloat(xaCol.node.Color.att.alphaMultiplier);\r\n\t\t\t\t\tif (xaCol.node.Color.has.tintMultiplier)\r\n\t\t\t\t\t\tthis.tintMultiplier = Std.parseFloat(xaCol.node.Color.att.tintMultiplier);\r\n\t\t\t\t\tif (xaCol.node.Color.has.tintColor)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tvar tstr:String = xaCol.node.Color.att.tintColor;\r\n\t\t\t\t\t\ttstr = tstr.split(\"#\").join(\"#FF\");\r\n\t\t\t\t\t\tthis.tintColor = Color.fromString(tstr);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (parentFrame.alpha!=1)\r\n\t\t\tthis.alpha *= parentFrame.alpha;\r\n\t\t\r\n\t\tif (xa.has.isVisible)\r\n\t\t\tvisible = Convert.toBool(xa.att.isVisible);\r\n\t\telse\r\n\t\t\tvisible = true;\r\n\r\n\t\tswitch (type) \r\n\t\t{\r\n\t\t\tcase STATIC_TEXT | DYNAMIC_TEXT:\r\n\t\t\t{\r\n\t\t\t\tparseText(xa,true);\r\n\t\t\t}\r\n\t\t\tcase SYMBOL_INSTANCE:\r\n\t\t\t{\r\n\t\t\t\tparseSymbolInstance(xa);\r\n\t\t\t}\r\n\t\t\tcase SHAPE | SHAPE_RECTANGLE | SHAPE_OVAL:\r\n\t\t\t{\r\n\t\t\t\tparseShape(xa);\r\n\t\t\t}\r\n\t\t\tcase BITMAP_INSTANCE:\r\n\t\t\t{\r\n\t\t\t\tparseBitmapInstance(xa);\r\n\t\t\t}\r\n\t\t\tdefault:\r\n\t\t\t\t\r\n\t\t}\r\n\t}\t\r\n\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\t\r\n\tfunction parseText(xa:Access,isDynamicText:Bool)\r\n\t{\r\n\t\tdynamicText = isDynamicText;\r\n\r\n\t\tif (xa.has.lineType)\r\n\t\t\tlineType = xa.att.lineType;\t\t\r\n\t\t\r\n\t\t//try\r\n\t\t//{\r\n\t\t\tif (xa.hasNode.textRuns && xa.node.textRuns.hasNode.DOMTextRun)\r\n\t\t\t{\r\n\t\t\t\tvar tn = xa.node.textRuns.node.DOMTextRun;\r\n\r\n\t\t\t\tif (tn.hasNode.characters)\r\n\t\t\t\t\ttext = tn.node.characters.innerData;\r\n\t\t\t\t\r\n\t\t\t\tif (tn.hasNode.textAttrs && tn.node.textAttrs.hasNode.DOMTextAttrs)\r\n\t\t\t\t{\r\n\t\t\t\t\tvar ta = tn.node.textAttrs.node.DOMTextAttrs;\r\n\t\t\t\t\tif (ta.has.aliasText)\r\n\t\t\t\t\t\taliasText = Convert.toBool(ta.att.aliasText);\r\n\t\t\t\t\tif (ta.has.autoKern)\r\n\t\t\t\t\t\tautoKern = Convert.toBool(ta.att.autoKern);\r\n\t\t\t\t\tif (ta.has.lineType)\r\n\t\t\t\t\t\tlineType = ta.att.lineType;\t\t\r\n\t\t\t\t\tif (ta.has.alignment)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tswitch ta.att.alignment \r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tcase \"left\":\r\n\t\t\t\t\t\t\t\talign = Align.left;\r\n\t\t\t\t\t\t\tcase \"center\":\r\n\t\t\t\t\t\t\t\talign = Align.center;\r\n\t\t\t\t\t\t\tcase \"right\":\r\n\t\t\t\t\t\t\t\talign = Align.right;\r\n\t\t\t\t\t\t\tcase \"justify\":\r\n\t\t\t\t\t\t\t\talign = Align.justify;\r\n\t\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (ta.has.size)\r\n\t\t\t\t\t\tfontSize = Math.floor(Std.parseInt(ta.att.size)*1.27);\r\n\t\t\t\t\tif (ta.has.lineHeight)\r\n\t\t\t\t\t\tlineHeight = Std.parseFloat(ta.att.lineHeight);\r\n\t\t\t\t\tif (ta.has.lineSpacing)\r\n\t\t\t\t\t\tlineSpacing = Std.parseFloat(ta.att.lineSpacing);\r\n\t\t\t\t\tif (ta.has.bitmapSize)\r\n\t\t\t\t\t\tbitmapSize = Std.parseInt(ta.att.bitmapSize);\r\n\t\t\t\t\tif (ta.has.face)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tface = ta.att.face;\r\n\t\t\t\t\t\tif (face != null)\r\n\t\t\t\t\t\t\tface = face.split(\" \").join(\"_\").split(\"-\").join(\"_\");\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\tif (Assets.fonts.get(face) != null)\r\n\t\t\t\t\t\t\tfont = Assets.fonts.get(face);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t//if (ta.has.fillColor)\r\n\t\t\t\t\t\t//fillColor = Color.fromString(ta.att.fillColor);\r\n\t\t\t\t\tif (ta.has.fillColor)\r\n\t\t\t\t\t\tcolor = Color.fromString(ta.att.fillColor);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t//}\r\n\t\t//catch (e:Any)\r\n\t\t//{\r\n\t\t\t////UIX.c.debug(e);\r\n\t\t//}\t\t\t\r\n\t}\r\n\t\r\n\tfunction parseSymbolInstance(xa:Access)\r\n\t{\r\n\t\tif (libraryItemName != null)\r\n\t\t{\r\n\t\t\tif (Fla.l.symbols.exists(libraryItemName))\r\n\t\t\t{\r\n\t\t\t\tvar fs:FlaSymbol = Fla.l.symbols.get(libraryItemName);\r\n\t\t\t\tif (fs!=null)\r\n\t\t\t\t\ttimeline = fs.timeline;\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tFla.l.getSymbol(libraryItemName);\r\n\t\t\t\tvar fs:FlaSymbol = Fla.l.symbols.get(libraryItemName);\r\n\t\t\t\tif (fs!=null)\r\n\t\t\t\t\ttimeline = fs.timeline;\r\n\t\t\t\telse\r\n\t\t\t\t\ttrace(\"lib item not found: \"+libraryItemName);\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (xa.has.symbolType)\r\n\t\t{\r\n\t\t\tsymbolType = xa.att.symbolType;\r\n\t\t}\t\t\r\n\t\tif (xa.has.loop)\r\n\t\t{\r\n\t\t\tloop = xa.att.loop;\r\n\t\t}\t\t\r\n\r\n\t}\r\n\t\r\n\tfunction parseShape(xa:Access)\r\n\t{\r\n\t\tshapeData = ShapeParser.parseShape(xa);\r\n\t}\r\n\t\r\n\tfunction parseBitmapInstance(xa:Access)\r\n\t{\r\n\t\tif (xa.has.libraryItemName)\r\n\t\t{\r\n\t\t\tlibraryItemName = xa.att.libraryItemName;\r\n\t\t}\r\n\t}\r\n\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\r\n/*\tpublic function render(g:Graphics,l:FlaLibrary) \r\n\t{\r\n\t\tswitch (type) \r\n\t\t{\r\n\t\t\tcase STATIC_TEXT:\r\n\t\t\t{\r\n\t\t\t\trenderStaticText(g,l);\r\n\t\t\t}\r\n\t\t\tcase SYMBOL_INSTANCE:\r\n\t\t\t{\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\tcase SHAPE:\r\n\t\t\t{\r\n\t\t\t}\r\n\t\t\tcase BITMAP_INSTANCE:\r\n\t\t\t{\r\n\t\t\t\trenderBitmap(g,l);\r\n\t\t\t}\r\n\t\t\tdefault:\r\n\t\t\t\t\r\n\t\t}\r\n\t}\r\n\t*/\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\t\r\n/*\tpublic function renderStaticText(g:Graphics,l:FlaLibrary)\r\n\t{\r\n\t\tDraw.text(text, x, y, 1, color, fontSize, Assets.fonts.get(face));\r\n\t}\r\n\t*/\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n/*\t\r\n\tfunction renderBitmap(g:Graphics,l:FlaLibrary) \r\n\t{\r\n\t\tif (bitmap == null && libraryItemName!=null)\r\n\t\t\tbitmap = l.bitmaps.get(libraryItemName);\r\n\t\t\t\r\n\t\tif (bitmap!=null)\r\n\t\t\tDraw.image(bitmap, x, y, 1, color, rotation, a);\r\n\t}\r\n\t\r\n\tfunction onImageFetched(i:Image)\r\n\t{\r\n\t\tbitmap = i;\r\n\t}\r\n\t*/\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\t\r\n\tpublic function instantiateDisplayObject():DisplayObject \r\n\t{\r\n\t\tswitch (type) \r\n\t\t{\r\n\t\t\tcase STATIC_TEXT | DYNAMIC_TEXT:\r\n\t\t\t{\r\n\t\t\t\treturn new Text(copyParameters(type));\r\n\t\t\t}\r\n\t\t\tcase SYMBOL_INSTANCE:\r\n\t\t\t{\r\n\t\t\t\treturn FlaSymbol.createNew(this);\r\n\t\t\t}\r\n\t\t\tcase SHAPE | SHAPE_RECTANGLE | SHAPE_OVAL:\r\n\t\t\t{\r\n\t\t\t\treturn new Shape(copyParameters(type));\r\n\t\t\t}\r\n\t\t\tcase BITMAP_INSTANCE:\r\n\t\t\t{\r\n\t\t\t\treturn new Bitmap(copyParameters(type));\r\n\t\t\t}\r\n\t\t\tdefault:\r\n\t\t\t\treturn null;\t\t\t\t\r\n\t\t}\r\n\t}\r\n\t\r\n\tfunction copyParameters(pType:String):Dynamic \r\n\t{\r\n\t\tvar r:Dynamic = {};\r\n\t\t\r\n\t\tr.x = this.x;\r\n\t\tr.y = this.y;\r\n\t\tr.width = this.width;\r\n\t\tr.height = this.height;\r\n\t\tr.rotation = this.rotation;\r\n\t\tr.centerx = this.centerx;\r\n\t\tr.centery = this.centery;\r\n\t\tr.type = this.type;\r\n\t\tr.uuid = this.uuid;\r\n\t\t//r.parentFrame = this.parentFrame;\r\n\t\t//r.a = this.a;\r\n\t\t//r.b = this.b;\r\n\t\t//r.c = this.c;\r\n\t\t//r.d = this.d;\r\n\t\tr.scaleX =this.scaleX;\r\n\t\tr.scaleY =this.scaleY;\r\n\t\tr.libraryItemName = this.libraryItemName;\r\n\t\tr.disposeOnRemove = this.disposeOnRemove;\r\n\t\tr.visible = this.visible;\r\n\t\tr.uixData = this.uixData;\r\n\t\t//r.symbolType = this.symbolType;\r\n\t\t//r.zIndex = this.zIndex;\r\n\r\n\t\t\r\n\t\t\r\n\t\tif (this.alpha != null)\r\n\t\t\tr.alpha = this.alpha;\r\n\t\t\t\r\n\t\tif (this.color != null)\r\n\t\t\tr.color = this.color;\r\n\t\t\r\n\t\tif (this.tintColor != null)\r\n\t\t\tr.tintColor = this.tintColor;\r\n\t\t\r\n\t\tswitch (type) \r\n\t\t{\r\n\t\t\tcase STATIC_TEXT | DYNAMIC_TEXT:\r\n\t\t\t{\r\n\t\t\t\tr.text = this.text;\r\n\t\t\t\tr.fontSize = this.fontSize;\r\n\t\t\t\tr.face = this.face;\r\n\t\t\t\tr.font = this.font;\r\n\t\t\t\t//r.aliasText = this.aliasText;\r\n\t\t\t\t//r.autoKern =this.autoKern;\r\n\t\t\t\tr.fillColor = this.fillColor;\r\n\t\t\t\tr.color = this.color;\r\n\t\t\t\tr.lineType = this.lineType;\r\n\t\t\t\tr.lineHeight = this.lineHeight;\r\n\t\t\t\tr.lineSpacing = this.lineSpacing;\r\n\t\t\t\tr.align = this.align;\r\n\t\t\t}\r\n\t\t\tcase SYMBOL_INSTANCE:\r\n\t\t\t{\r\n\t\t\t\t//r.timeline = this.timeline;\r\n\t\t\t\tr.fillColor = this.fillColor;\r\n\t\t\t\tr.color = this.color;\r\n\t\t\t}\r\n\t\t\tcase SHAPE | SHAPE_RECTANGLE | SHAPE_OVAL:\r\n\t\t\t{\r\n\t\t\t\tr.fillColor = this.fillColor;\r\n\t\t\t\tr.color = this.color;\r\n\t\t\t\tr.shapeData = this.shapeData;\r\n\t\t\t}\r\n\t\t\tcase BITMAP_INSTANCE:\r\n\t\t\t{\r\n\t\t\t\t//r.bitmapSize = this.bitmapSize;\r\n\t\t\t\t//r.bitmap = this.bitmap;\r\n\t\t\t\tr.libraryItemName = this.libraryItemName;\r\n\t\t\t\tr.fillColor = this.fillColor;\r\n\t\t\t\tr.color = this.color;\r\n\t\t\t}\r\n\t\t\tdefault:\r\n\t\t\t\treturn null;\t\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\t//r.loop = this.loop;\r\n\t\t\r\n\t\treturn r;\r\n\t}\r\n\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\t\r\n\tfunction generateName():String\r\n\t{\r\n\t\tif (type == SYMBOL_INSTANCE)\r\n\t\t{\r\n\t\t\tvar n = type+\"_\" + libraryItemName;\r\n\t\t\treturn n;\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tvar c = FlaElement.elementCount++;\r\n\t\t\tvar n = type + c;\r\n\t\t\treturn n;\r\n\t\t}\r\n\t}\r\n\t\r\n\tfunction generateUUID():String\r\n\t{\r\n\t\tvar u = \"FlaElm_\" + parentFrame.parentLayer.name+\"_\" + name;\r\n\t\t//var u = \"FlaElm_\" + parentFrame.parentLayer.name+\"_\" + parentFrame.index + \"_\" + name;\r\n\t\treturn u;\r\n\t}\r\n\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n}","package no.logic.kha.uix.scene.uixcomp;\r\n\r\nimport haxe.Constraints.Function;\r\nimport haxe.Json;\r\nimport haxe.crypto.Base64;\r\nimport no.logic.kha.uix.scene.DisplayObject;\r\nimport no.logic.kha.uix.scene.Sprite.MovieClip;\r\nimport no.logic.kha.uix.scene.uixcomp.UIXGComponent;\r\nimport no.logic.kha.uix.scene.uixcomp.UIXGElement;\r\nimport no.logic.kha.uix.types.Object;\r\nimport no.logic.kha.uix.scene.uixcomp.UIXGTextComponent;\r\n\r\n/**\r\n * ...\r\n * @author Tommy Svensson\r\n */\r\n\r\nclass UIXGComponentManager\r\n{\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\t\r\n\t//===================================================================================\r\n\t// Consts \r\n\t//-----------------------------------------------------------------------------------\r\n\r\n\t//===================================================================================\r\n\t// Properties \r\n\t//-----------------------------------------------------------------------------------\r\n\t\r\n\tpublic static var trackedElements\t\t\t: Map<String, UIXGElement>\t\t= new Map<String, UIXGElement>();\r\n\tstatic public var trackedVariables\t\t\t: Map<String, String>\t\t\t= new Map<String, String>();\r\n\tstatic public var trackedAssetCodes\t\t\t: Map<String, String>\t\t\t= new Map<String, String>();\r\n\r\n\t//===================================================================================\r\n\t// Declarations \r\n\t//-----------------------------------------------------------------------------------\r\n\r\n\t//===================================================================================\r\n\t// Variables \r\n\t//-----------------------------------------------------------------------------------\t\t\r\n\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\t\r\n\t//public function new(uixgElement:UIXGElement, target:DisplayObject)\r\n\t//{\r\n\t\t//\r\n\t//}\r\n\t\r\n\tstatic public function copyProps(uixgElement:UIXGElement, target:DisplayObject) \r\n\t{\r\n\t\tif (uixgElement==null || uixgElement.rawUIXData == null)\r\n\t\t\treturn;\r\n\t\t\t\r\n\t\tuixgElement.dispObjName = uixgElement.rawUIXData.name;\r\n\t\tuixgElement.target = uixgElement.target;\r\n\t\tuixgElement.uniqueID = getTCode(uixgElement.dispObjName);\r\n\t\tuixgElement.createdTime = tCodeToDateString(uixgElement.dispObjName);\r\n\r\n\t\tuixgElement.targetType = uixgElement.rawUIXData.type;\r\n\t\tuixgElement.name = uixgElement.rawUIXData.name;\r\n\t\tuixgElement.className = uixgElement.rawUIXData.className;\r\n\t\tuixgElement.editable = uixgElement.rawUIXData.editable;\r\n\t\tuixgElement.upperCase = uixgElement.rawUIXData.upperCase;\r\n\t\tuixgElement.upperCaseFirstLetter = uixgElement.rawUIXData.upperCaseFirstLetter;\r\n\t\tuixgElement.triggerOnChange = uixgElement.rawUIXData.triggerOnChange;\r\n\t\tuixgElement.triggerOneShot = uixgElement.rawUIXData.triggerOneShot;\r\n\t\tuixgElement.triggerOnPressEnter = uixgElement.rawUIXData.triggerOnPressEnter;\r\n\t\tuixgElement.classProperties = uixgElement.rawUIXData.classProperties;\r\n\t\tuixgElement.audio = uixgElement.rawUIXData.audio;\r\n\t\tuixgElement.events = uixgElement.rawUIXData.events;\r\n\t\tuixgElement.originalMode = uixgElement.rawUIXData.originalMode;\r\n\t\tuixgElement.source = uixgElement.rawUIXData.source;\r\n\t\tuixgElement.loop = uixgElement.rawUIXData.loop;\r\n\t\tuixgElement.autoPlay = uixgElement.rawUIXData.autoPlay;\r\n\t\tuixgElement.volume = uixgElement.rawUIXData.volume;\r\n\t\tuixgElement.scaleMode = uixgElement.rawUIXData.scalemode;\r\n\t\tuixgElement.bindVariable = uixgElement.rawUIXData.variable;\r\n\t\tuixgElement.assetCode = uixgElement.rawUIXData.assetCode;\r\n\t\tuixgElement.mouseChildren = uixgElement.rawUIXData.mouseChildren;\r\n\t\tuixgElement.mouseEnabled = uixgElement.rawUIXData.mouseEnabled;\t\t\r\n\t}\t\r\n\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\t\t\r\n\t\r\n\tstatic public inline function getTCode(tCstr:String):String \r\n\t{\r\n\t\tif (tCstr==null)\r\n\t\t\treturn null;\r\n\t\t\t\r\n\t\tvar ix:Array<String> = tCstr.split(\"_UIX_\").join(\"\").split(\"_\");\r\n\t\treturn ix[0];\r\n\t}\t\r\n\t\r\n\tstatic private inline function tCodeToDateString(tCstr:String):String \r\n\t{\r\n\t\tif (tCstr==null)\r\n\t\t\treturn null;\r\n\t\t\t\r\n\t\tvar ix:Array<String> = tCstr.split(\"_UIX_\").join(\"\").split(\"_\");\r\n\t\t\t\r\n\t\tvar yea:String = ix[0].substring(0, 2);\r\n\t\tvar mon:String = ix[0].substring(2, 4);\r\n\t\tvar dat:String = ix[0].substring(4, 6);\r\n\t\tvar hou:String = ix[0].substring(6, 8);\r\n\t\tvar min:String = ix[0].substring(8, 10);\r\n\t\tvar sec:String = ix[0].substring(10, 12);\r\n\t\t\r\n\t\treturn dat + \"/\" + mon + \"/\" + yea + \" \" + hou + \":\" + min + \":\" + sec;\r\n\t}\t\r\n\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\t\r\n\t\r\n\tstatic public inline function constructUIXData(dispObjName:String):Object \r\n\t{\r\n\t\tvar nx:String = stripTCode(dispObjName.split(\"_UIX_\").join(\"\")).split(\"_\").join(\"+\").split(\"$\").join(\"/\");\r\n\t\tvar jstr:String = Std.string(Base64.decode(nx));\r\n\r\n\t\tvar rawUIXData:Object = null;\r\n\t\ttry\r\n\t\t{\r\n\t\t\trawUIXData = Json.parse(jstr);\r\n\t\t}\r\n\t\tcatch(e:Dynamic)\r\n\t\t{\r\n\t\t\ttrace(\"Error decoding UIX data\");\r\n\t\t}\r\n\t\treturn rawUIXData;\r\n\t}\r\n\t\r\n\tstatic public inline function isUIXComponent(dispObjName:String):Bool \r\n\t{\r\n\t\tif (dispObjName==null)\r\n\t\t\treturn false;\r\n\t\t\t\r\n\t\treturn dispObjName.indexOf(\"_UIX_\") !=-1;\r\n\t}\t\r\n\t\r\n\t//===================================================================================\r\n\t// UID Timecode\r\n\t//-----------------------------------------------------------------------------------\t\t\r\n\t\r\n\tstatic private inline function stripTCode(inSt:String):String\r\n\t{\r\n\t\tvar spx:Array<String> = inSt.split(\"_\");\r\n\t\tspx.splice(0, 1);\r\n\t\treturn spx.join(\"\");\r\n\t}\r\n\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\t\r\n\t\r\n\tstatic public inline function setupUIXGElement(uixgElement:UIXGElement) \r\n\t{\r\n\t\t\r\n\t\tif (uixgElement.bindVariable != null)\r\n\t\t{\r\n\t\t\taddVariableBinding(uixgElement);\t\t\t\r\n\t\t}\r\n\t\tif (uixgElement.assetCode != null)\r\n\t\t{\r\n\t\t\taddAssetCodeBinding(uixgElement);\t\t\t\r\n\t\t}\r\n\t\tif (uixgElement.className == null)\r\n\t\t{\r\n\t\t\tswitch (uixgElement.rawUIXData.type) \r\n\t\t\t{\r\n\t\t\t\tcase \"Custom\":\r\n\t\t\t\t{\r\n\t\t\t\t\tuixgElement.type = UIXGElement.TYPE_CUSTOM;\t\r\n\t\t\t\t\tif (uixgElement.className != null)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tuixgElement.className.split(\" \").join(\"\"); //We dont want spaces here!!\r\n\t\t\t\t\t\tuixgElement.classDefinition = Type.resolveClass(uixgElement.className);\r\n\t\t\t\t\t\tuixgElement.classInstance = Type.createInstance(uixgElement.classDefinition,[uixgElement]);\t\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tcase \"Text\":\t\t\r\n\t\t\t\t{\r\n\t\t\t\t\tuixgElement.type = UIXGElement.TYPE_TEXT;\t\r\n\t\t\t\t\tuixgElement.classInstance = new UIXGTextComponent(uixgElement);\r\n\t\t\t\t}\r\n\t\t\t\tcase \"Button\":\r\n\t\t\t\t{\r\n\t\t\t\t\tuixgElement.type = UIXGElement.TYPE_BUTTON;\t\r\n\t\t\t\t\tuixgElement.classInstance = new UIXGButtonComponent(uixgElement);\r\n\t\t\t\t\t//trace(uixgElement);\r\n\t\t\t\t}\r\n\t\t\t\tcase \"Image\":\r\n\t\t\t\t{\r\n\t\t\t\t\tuixgElement.type = UIXGElement.TYPE_IMAGE;\t\r\n\t\t\t\t\tuixgElement.classInstance = new UIXGImageComponent(uixgElement);\r\n\t\t\t\t}\r\n\t\t\t\t//case \"Video\":\t\t\r\n\t\t\t\t\t//type = UIXGElement.TYPE_VIDEO;\t\r\n\t\t\t\t\t//new UIXGVideoComponent(this);\r\n\t\t\t\t//case \"Sound\":\t\t\r\n\t\t\t\t\t//type = UIXGElement.TYPE_SOUND;\t\r\n\t\t\t}\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tuixgElement.className.split(\" \").join(\"\"); //We dont want spaces here!!\r\n\t\t\tuixgElement.classDefinition = Type.resolveClass(uixgElement.className);\r\n\t\t\tif (uixgElement.classDefinition != null)\r\n\t\t\t{\r\n\t\t\t\tuixgElement.classInstance = Type.createInstance(uixgElement.classDefinition, [uixgElement]);\t\t\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\ttrace('Class \"' + uixgElement.className+'\" not found. ');\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\t\r\n\r\n\tstatic public inline function processProperties(uixgElement:UIXGElement) \r\n\t{\r\n\t\tif (uixgElement.classProperties!=null && uixgElement.classInstance!=null)\r\n\t\t{\r\n\t\t\tfor (i in 0...uixgElement.classProperties.length) \r\n\t\t\t{\r\n\t\t\t\tif (Reflect.hasField(uixgElement.classProperties[i],\"name\") && Reflect.hasField(uixgElement.classProperties[i],\"value\"))\r\n\t\t\t\t{\r\n\t\t\t\t\tvar clName:String = uixgElement.classProperties[i].name;\r\n\t\t\t\t\tvar clValue:String = uixgElement.classProperties[i].value;\r\n\t\t\t\t\t\r\n\t\t\t\t\t//if(Reflect.fields(uixgElement.classInstance).indexOf(clName)!=-1)\r\n\t\t\t\t\t//{\r\n\t\t\t\t\t\ttry\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tReflect.setField(uixgElement.classInstance, clName, clValue);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tcatch (e:Dynamic)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\ttrace(\"Error setting prop:\", uixgElement.classInstance, clName, clValue);\r\n\t\t\t\t\t\t\t//Error setting class property\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t//}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n/*\t\t\telse if (uixgElement.classProperties && uixgElement.staticClassDefinition)\r\n\t\t{\r\n\t\t\tfor (i = 0; i < uixgElement.classProperties.length; i++) \r\n\t\t\t{\r\n\t\t\t\tif ((\"name\" in uixgElement.classProperties[i]) && (\"value\" in uixgElement.classProperties[i]))\r\n\t\t\t\t{\r\n\t\t\t\t\tclName = uixgElement.classProperties[i].name;\r\n\t\t\t\t\tclValue = uixgElement.classProperties[i].value;\r\n\t\t\t\t\t\r\n\t\t\t\t\ttry\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tuixgElement.staticClassDefinition[clName] = clValue\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcatch (e:Error)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t//Error setting class property\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t*/\r\n\t\tswitch(uixgElement.originalMode)\r\n\t\t{\r\n\t\t\tcase UIXGElement.ORIGINAL_CONTENT_ALPHA0:\r\n\t\t\t\tfor (j in uixgElement.target.children) \r\n\t\t\t\t\tif (j != null && !j.isComponentPart)\r\n\t\t\t\t\t\tj.alpha = 0;\r\n\t\t\tcase UIXGElement.ORIGINAL_CONTENT_HIDDEN:\r\n\t\t\t\tfor (j in uixgElement.target.children) \r\n\t\t\t\t\tif (j != null && !j.isComponentPart)\r\n\t\t\t\t\t\tj.visible = false;\r\n\t\t\tcase UIXGElement.ORIGINAL_CONTENT_REMOVE:\r\n\t\t\t\tuixgElement.disposeOnRemove = false;\r\n\t\t\t\t//if (classInstance!=null)\r\n\t\t\t\t\t//classInstance.removeFromStage();\r\n\t\t\t//case UIXGElement.ORIGINAL_CONTENT_SHOW:\r\n\t\t}\r\n\t\t\r\n\t\tif (uixgElement.classInstance!=null)\r\n\t\t{\r\n\t\t\tuixgElement.classInstance.preCreate();\r\n\t\t\tuixgElement.classInstance.created();\r\n\t\t\tUIXGComponentManager.eventCommand(UIXComponentEventAction.onCreate, uixgElement);\r\n\t\t\t//uixgElement.classReference.checkAudioEvent(\"onCreate\");\r\n\t\t\t//uixgElement.classInstance;\r\n\t\t}\r\n\t\t\r\n\t}\t\r\n\t\r\n\t\r\n\tstatic public inline function addVariableBinding(uixgElement:UIXGElement) \r\n\t{\r\n\t\ttrackedVariables.set(uixgElement.uniqueID, uixgElement.bindVariable);\r\n\t}\r\n\t\r\n\tstatic public inline function addAssetCodeBinding(uixgElement:UIXGElement) \r\n\t{\r\n\t\ttrackedAssetCodes.set(uixgElement.uniqueID, uixgElement.assetCode);\r\n\t}\r\n\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\t\r\n\t\r\n\tstatic public inline function hasBindingOfTypeRelated(uixdata:UIXGElement):Bool \r\n\t{\r\n\t\treturn (uixdata.bindVariable != null && ( uixdata.bindVariable.indexOf(\"@parentClass\") !=-1 || uixdata.bindVariable.indexOf(\"@class\")!=-1 ));\r\n\t}\r\n\t\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\t\r\n\t\r\n\tstatic public function eventCommand(eventAction:UIXComponentEventAction, uixgElement:UIXGElement)\r\n\t{\r\n\t\tvar actionName:String = eventAction.getName();\r\n\t\tif (eventAction == null || uixgElement == null || uixgElement.events == null || !uixgElement.events.hasOwnProperty(actionName))\r\n\t\t\treturn;\r\n\t\t\t\r\n\t\tvar commandStr:String = uixgElement.events[actionName];\r\n\t\tif (commandStr == null)\r\n\t\t\treturn;\r\n\t\t\t\r\n\t\texecuteEventCommand(commandStr, uixgElement);\r\n\t}\r\n\t\r\n\tstatic public function executeEventCommand(cmdStr:String, uixgElement:UIXGElement) \r\n\t{\r\n\t\tif (cmdStr.indexOf(\"@\") !=-1)\r\n\t\t{\r\n\t\t\tvar prefix:String = \"@uix\";\r\n\t\t\tif (cmdStr.indexOf(prefix) !=-1)\r\n\t\t\t{\r\n\t\t\t\tvar typX:Array<String> = splitFunc(cmdStr, prefix);\r\n\t\t\t\ttypX.shift();\r\n\t\t\t\tif (typX.length>1 && typX[1]!=null && typX[1]!=\"\")\r\n\t\t\t\t\tUIX.dispatch(typX[0], typX[1]);\r\n\t\t\t\telse\r\n\t\t\t\t\tUIX.dispatch(typX[0]);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tprefix = \"@class:\";\r\n\t\t\tif (cmdStr.indexOf(prefix) !=-1 && uixgElement.classInstance != null)\r\n\t\t\t{\r\n\t\t\t\tvar typX:Array<String> = splitFunc(cmdStr, prefix);\r\n\t\t\t\tReflect.callMethod(uixgElement.classInstance, Reflect.field(uixgElement.classInstance, typX.shift()), typX);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tprefix = \"@parentClass:\";\r\n\t\t\tif (cmdStr.indexOf(prefix) !=-1)\r\n\t\t\t{\r\n\t\t\t\tvar typX:Array<String> = splitFunc(cmdStr, prefix);\r\n\t\t\t\tif (uixgElement.target!=null && uixgElement.target.parent!=null && uixgElement.target.parent.uixElement!=null)\r\n\t\t\t\t{\r\n\t\t\t\t\tvar u:UIXGComponent = uixgElement.target.parent.uixElement.classInstance;\r\n\t\t\t\t\tif (u != null && u.uixgElement != null && u.uixgElement.classInstance != null)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tReflect.callMethod(u.uixgElement.classInstance, Reflect.field(u.uixgElement.classInstance, typX.shift()), typX);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn;\r\n\t\t\t}\t\t\r\n\t\t\tprefix = \"@parent.parentClass:\";\r\n\t\t\tif (cmdStr.indexOf(prefix) !=-1 )\r\n\t\t\t{\r\n\t\t\t\tvar typX:Array<String> = splitFunc(cmdStr, prefix);\r\n\t\t\t\tif (uixgElement.target!=null && uixgElement.target.parent!=null && uixgElement.target.parent.parent!=null && uixgElement.target.parent.parent.uixElement!=null)\r\n\t\t\t\t{\r\n\t\t\t\t\tvar u:UIXGComponent = uixgElement.target.parent.parent.uixElement.classInstance;\r\n\t\t\t\t\tif (u!=null && u.uixgElement!=null && u.uixgElement.classInstance!=null)\r\n\t\t\t\t\t\tReflect.callMethod(u.uixgElement.classInstance, Reflect.field(u.uixgElement.classInstance, typX.shift()), typX);\r\n\t\t\t\t}\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tvar prefix:String = \"parent.\";\r\n\t\t\tif (cmdStr.indexOf(prefix) !=-1)\r\n\t\t\t{\r\n\t\t\t\tvar typX:Array<String> = splitFunc(cmdStr, prefix);\r\n\t\t\t\tif (uixgElement.target!=null && uixgElement.target.parent!=null)\r\n\t\t\t\t{\r\n\t\t\t\t\tvar d:MovieClip = cast uixgElement.target.parent;\r\n\t\t\t\t\tif (d != null)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tvar f:Function = Reflect.field(d, typX.shift());\r\n\t\t\t\t\t\tReflect.callMethod(d, f, typX);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\tstatic function splitFunc(cmdStr:String, prefix:String):Array<String> \r\n\t{\r\n\t\tvar r:Array<String> = [];\r\n\t\tcmdStr = cmdStr.split(prefix).join(\"\").split(\";\").join(\"\");\r\n\t\tif (cmdStr.indexOf(\"(\")!=-1)\r\n\t\t{\r\n\t\t\tvar rs:Array<String> = cmdStr.split(\")\").join(\"\").split('\"').join(\"\").split(\"(\");\r\n\t\t\tif (rs != null)\r\n\t\t\t{\r\n\t\t\t\tif (rs.length==2 && rs[1].indexOf(\",\")!=-1)\r\n\t\t\t\t{\r\n\t\t\t\t\tr.push(rs[0]);\r\n\t\t\t\t\tvar rp:Array<String> = rs[1].split(\",\");\r\n\t\t\t\t\tfor (i in 0...rp.length)\r\n\t\t\t\t\t\tr.push(rp[i]);\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t\tfor (i in 0...rs.length)\r\n\t\t\t\t\t\tr.push(rs[i]);\r\n\t\t\t}\r\n\t\t}\r\n\t\telse\r\n\t\t\tr.push(cmdStr);\r\n\t\t\t\r\n\t\treturn r;\r\n\t}\r\n\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\t\r\n\t\r\n}\r\n\r\nenum UIXComponentEventAction\r\n{\r\n\tonClick;\r\n\tonPress;\r\n\tonRelease;\r\n\tonRollOver;\r\n\tonRollOut;\r\n\tonCreate;\r\n\tonDestroy;\r\n\tdelayCall1;\r\n\tdelayCall2;\r\n}","package no.logic.kha.uix.fla;\r\nimport haxe.macro.Expr.Var;\r\nimport haxe.xml.Access;\r\nimport no.logic.kha.uix.utils.Convert;\r\n\r\n/**\r\n * ...\r\n * @author Tommy Svensson\r\n */\r\n\r\nclass FlaFrame\r\n{\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\t\r\n\t//===================================================================================\r\n\t// Consts \r\n\t//-----------------------------------------------------------------------------------\r\n\r\n\t//===================================================================================\r\n\t// Properties \r\n\t//-----------------------------------------------------------------------------------\r\n\t\r\n\tpublic var parentLayer\t\t : FlaLayer;\r\n\t\r\n\tpublic var index\t\t\t : Int;\r\n\tpublic var duration\t\t\t : Int\t\t\t\t\t = 1;\r\n\tpublic var name\t\t\t\t : String;\r\n\tpublic var labelType\t\t : String;\r\n\tpublic var tweenType\t\t : String;\r\n\tpublic var easeMethodName\t : String;\r\n\tpublic var motionTweenSnap\t : Bool;\r\n\tpublic var keyMode\t\t\t : Int;\r\n\tpublic var actionScript\t\t : String;\r\n\tpublic var alpha\t\t\t : Float\t\t\t\t= 1;\r\n\tpublic var elements\t\t\t : Array<FlaElement>;\r\n\t\r\n\t//tweenType=\"motion\" motionTweenSnap=\"true\"\r\n\t\r\n\t//===================================================================================\r\n\t// Declarations \r\n\t//-----------------------------------------------------------------------------------\r\n\r\n\t//===================================================================================\r\n\t// Callback \r\n\t//-----------------------------------------------------------------------------------\t\t\r\n\r\n\t//===================================================================================\r\n\t// Variables \r\n\t//-----------------------------------------------------------------------------------\t\t\r\n\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\t\r\n\tpublic function new(DOMFrame:Xml, parentLayer:FlaLayer) \r\n\t{\r\n\t\tthis.parentLayer = parentLayer;\r\n\t\t\r\n\t\telements = [];\r\n\t\tvar xa = new Access(DOMFrame);\r\n\t\tindex = Std.parseInt(xa.att.index)+1;\r\n\t\t\r\n\t\tif (xa.has.duration)\r\n\t\t\tduration = Std.parseInt(xa.att.duration);\r\n\t\t\r\n\t\tif (xa.has.name)\r\n\t\t\tname = xa.att.name;\r\n\t\t\r\n\t\tif (xa.has.labelType)\r\n\t\t\tlabelType = xa.att.labelType;\r\n\t\t\r\n\t\tif (xa.has.keyMode)\r\n\t\t\tkeyMode = Std.parseInt(xa.att.keyMode);\r\n\t\t\r\n\t\tif (xa.has.tweenType)\r\n\t\t\ttweenType = xa.att.tweenType;\r\n\t\t\t\r\n\t\tif (xa.has.easeMethodName)\r\n\t\t\teaseMethodName = xa.att.easeMethodName;\r\n\t\t\t\r\n\t\tif (xa.has.motionTweenSnap)\r\n\t\t\tmotionTweenSnap = Convert.toBool(xa.att.motionTweenSnap);\r\n\r\n\t\tif (xa.hasNode.Actionscript && xa.node.Actionscript.hasNode.script)\r\n\t\t{\r\n\t\t\tactionScript = Std.string(xa.node.Actionscript.node.script.innerData);\r\n\t\t}\r\n\t\t\r\n\t\tif (xa.hasNode.frameColor)\r\n\t\t{\r\n\t\t\tvar xaCol = xa.node.frameColor;\r\n\t\t\tif (xaCol != null)\r\n\t\t\t{\r\n\t\t\t\tif (xaCol.hasNode.Color)\r\n\t\t\t\t{\r\n\t\t\t\t\tif (xaCol.node.Color.has.alphaMultiplier)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tthis.alpha = Std.parseFloat(xaCol.node.Color.att.alphaMultiplier);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tif (labelType==\"name\" && name!=null)\r\n\t\t\tparentLayer.parentTimeline.frameLabels.set(name, index);\r\n\t\t\r\n\t\tvar parentZ:Int = parentLayer.zIndex;\r\n\t\tvar xel:Array<Xml> = [];\r\n\t\tvar eLen:Int = 0;\r\n\t\tfor (e in xa.node.elements.x.elements())\r\n\t\t{\r\n\t\t\txel.push(e);\r\n\t\t\teLen++;\r\n\t\t}\r\n\t\t\r\n\t\tfor (e in 0...eLen)\r\n\t\t{\r\n\t\t\teLen--;\r\n\t\t\tvar eXml:Xml = xel[eLen];\r\n\t\t\telements.push(new FlaElement(eXml, this, eLen));\t\t\t\t\r\n\t\t}\r\n\t}\t\r\n\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n}\r\n\r\n  //<Actionscript>\r\n\t//<script><![CDATA[gotoAndPlayRandom();]]></script>\r\n  //</Actionscript>","package no.logic.kha.uix.fla;\r\nimport haxe.xml.Access;\r\nimport kha.Color;\r\nimport no.logic.kha.uix.utils.Convert;\r\n\r\n/**\r\n * ...\r\n * @author Tommy Svensson\r\n */\r\n\r\nclass FlaLayer\r\n{\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\t\r\n\t//===================================================================================\r\n\t// Consts \r\n\t//-----------------------------------------------------------------------------------\r\n\r\n\t//===================================================================================\r\n\t// Properties \r\n\t//-----------------------------------------------------------------------------------\r\n\t\r\n\tpublic var parentTimeline\t\t: FlaTimeline;\r\n\tpublic var name\t\t\t\t\t: String;\r\n\tpublic var numFrames\t\t\t: Int;\r\n\tpublic var color\t\t\t\t: Color;\r\n\tpublic var visible\t\t\t\t: Bool\t\t\t\t\t\t= true;\r\n\tpublic var keyFrames\t\t\t: Array<FlaFrame>;\r\n\tpublic var previousFrameData\t: FlaFrame;\r\n\tpublic var zIndex\t\t\t\t: Int;\r\n\r\n\t//===================================================================================\r\n\t// Declarations \r\n\t//-----------------------------------------------------------------------------------\r\n\r\n\t//===================================================================================\r\n\t// Callback \r\n\t//-----------------------------------------------------------------------------------\t\t\r\n\r\n\t//===================================================================================\r\n\t// Variables \r\n\t//-----------------------------------------------------------------------------------\t\t\r\n\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\t\r\n\tpublic function new(DOMLayer:Xml,parentTimeline:FlaTimeline,zIndex:Int) \r\n\t{\r\n\t\tthis.parentTimeline = parentTimeline;\r\n\t\tthis.zIndex = zIndex;\r\n\t\t\r\n\t\tkeyFrames = [];\r\n\t\tvar xa = new Access(DOMLayer);\r\n\t\tname = xa.att.name;\r\n\t\tcolor = Color.fromString(xa.att.color);\r\n\t\tvar v:String = DOMLayer.get(\"visible\");\r\n\t\tif (v != null)\r\n\t\t\tvisible = Convert.toBool(v);\r\n\t\t\r\n\t\tif (visible == false)\r\n\t\t\treturn;\r\n\t\t\t\r\n\t\tfor (f in xa.node.frames.nodes.DOMFrame)\r\n\t\t{\r\n\t\t\tvar nf:FlaFrame = new FlaFrame(f.x, this);\r\n\t\t\tnumFrames = nf.index + nf.duration - 1;\r\n\t\t\tkeyFrames.push(nf);\t\t\r\n\t\t}\r\n\t}\t\r\n\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n}","package no.logic.kha.uix.fla;\r\n\r\nimport haxe.ds.Map;\r\nimport haxe.macro.Expr.Var;\r\nimport haxe.xml.Access;\r\nimport kha.Image;\r\nimport no.logic.kha.uix.file.ZipFile;\r\nimport no.logic.kha.uix.types.Object;\r\nimport no.logic.kha.uix.utils.Convert;\r\n\r\n/**\r\n * ...\r\n * @author Tommy Svensson\r\n */\r\n\r\nclass FlaLibrary\r\n{\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\t\r\n\t//===================================================================================\r\n\t// Consts \r\n\t//-----------------------------------------------------------------------------------\r\n\r\n\t//===================================================================================\r\n\t// Properties \r\n\t//-----------------------------------------------------------------------------------\r\n\t\r\n\tpublic var bitmaps\t\t\t: Map<String,Image> = new Map<String,Image>();\r\n\tpublic var symbols\t\t\t: Map<String,FlaSymbol> = new Map<String,FlaSymbol>();\r\n\tpublic var bitmapsReady\t\t: Bool;\r\n\tvar loadItems\t\t\t\t: Array<String>;\r\n\t\r\n\t//===================================================================================\r\n\t// Declarations \r\n\t//-----------------------------------------------------------------------------------\r\n\r\n\t//===================================================================================\r\n\t// Callback \r\n\t//-----------------------------------------------------------------------------------\t\t\r\n\r\n\t//===================================================================================\r\n\t// Variables \r\n\t//-----------------------------------------------------------------------------------\t\t\r\n\r\n\tvar flaZip\t\t\t\t\t: ZipFile;\r\n\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\t\r\n\tpublic function new(flaZip:ZipFile) \r\n\t{\r\n\t\tthis.flaZip = flaZip;\r\n\t\tbitmapsReady = false;\r\n\t}\t\r\n\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\t\r\n\tpublic function preloadMedia(xa:Access) \r\n\t{\r\n\t\tif (xa.hasNode.media)\r\n\t\t{\r\n\t\t\tloadItems = [];\r\n\t\t\tbitmapsReady = false;\r\n\t\t\tfor (m in xa.node.media.nodes.DOMBitmapItem)\r\n\t\t\t{\r\n\t\t\t\tif (m.has.name)\r\n\t\t\t\t{\r\n\t\t\t\t\tloadItems.push(m.att.name);\r\n\t\t\t\t\tflaZip.getImage(\"LIBRARY/\" + m.att.name, function(i:Image)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tbitmaps.set(m.att.name, i);\r\n\t\t\t\t\t\tloadItems.remove(m.att.name);\r\n\t\t\t\t\t\tif (loadItems.length == 0)\r\n\t\t\t\t\t\t\tbitmapsReady = true;\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\r\n\tpublic function getSymbol(symbName:String) \r\n\t{\r\n\t\tif (!symbols.exists(symbName))\r\n\t\t{\r\n\t\t\tvar s:String = flaZip.getTextFile(\"LIBRARY/\"+symbName+\".xml\");\r\n\t\t\tif (s != null)\r\n\t\t\t{\r\n\t\t\t\tvar x:Xml = Xml.parse(s);\r\n\t\t\t\tvar ns:FlaSymbol = new FlaSymbol(x, this);\r\n\t\t\t\tsymbols.set(symbName, ns);\r\n\t\t\t}\r\n\t\t}\r\n\t}\t\r\n\t\r\n\tpublic function parseSymbols(xa:Access) \r\n\t{\r\n\t\tsymbols = [];\r\n\t\tfor (e in flaZip.entries) \r\n\t\t{\r\n\t\t\tvar fn:String = e.fileName; \r\n\t\t\tif (fn.indexOf(\"LIBRARY/\")!=-1 && fn.indexOf(\".xml\") !=-1)\r\n\t\t\t{\r\n\t\t\t\tvar symbName:String = fn.split(\"LIBRARY/\").join(\"\").split(\".xml\").join(\"\");\r\n\t\t\t\tif (!symbols.exists(symbName))\r\n\t\t\t\t{\r\n\t\t\t\t\tvar s:String = flaZip.getTextFile(fn);\r\n\t\t\t\t\tif (s != null)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ts = FlaLibrary.cleanTags(s);\r\n\t\t\t\t\t\tvar x:Xml = Xml.parse(s);\r\n\t\t\t\t\t\tvar ns:FlaSymbol = new FlaSymbol(x, this);\r\n\t\t\t\t\t\t//if (i.has.loadImmediate)\r\n\t\t\t\t\t\t\t//ns.loadImmediate = Convert.toBool(i.att.loadImmediate);\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\tsymbols.set(symbName, ns);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\t\r\n\t\t/*if (xa.hasNode.symbols && xa.node.symbols.hasNode.Include)\r\n\t\t{\r\n\t\t\tfor (i in xa.node.symbols.nodes.Include)\r\n\t\t\t{\r\n\t\t\t\tif (i.has.href)\r\n\t\t\t\t{\r\n\t\t\t\t\tvar s:String = flaZip.getTextFile(\"LIBRARY/\" + i.att.href);\r\n\t\t\t\t\tif (s != null)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t//try\r\n\t\t\t\t\t\t//{\r\n\t\t\t\t\t\t\tvar x:Xml = Xml.parse(s);\r\n\t\t\t\t\t\t\tvar ns:FlaSymbol = new FlaSymbol(x, this);\r\n\t\t\t\t\t\t\tif (i.has.loadImmediate)\r\n\t\t\t\t\t\t\t\tns.loadImmediate = Convert.toBool(i.att.loadImmediate);\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tvar sName:String = i.att.href;\r\n\t\t\t\t\t\t\tsymbols.set(sName.split(\".xml\").join(\"\") , ns);\r\n\t\t\t\t\t\t//}\r\n\t\t\t\t\t\t//catch (e:Dynamic)\r\n\t\t\t\t\t\t//{\r\n\t\t\t\t\t\t\t//trace(\"Error parsing symbols in FLA...\");\r\n\t\t\t\t\t\t//}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\t\t\t\r\n\t\t}*/\r\n\t}\r\n\t\r\n\tstatic public function cleanTags(domXML:String):String \r\n\t{\r\n\t\tdomXML = domXML.split(\"&#xD;\").join(\"\\n\");\r\n\t\tdomXML = domXML.split(\"\\r\").join(\"\").split(\"\\t\").join(\"\");\r\n\t\tdomXML = domXML.split('<DOMGroup selected=\"true\">').join(\"\");\r\n\t\tdomXML = domXML.split('<DOMGroup selected=\"false\">').join(\"\");\r\n\t\tdomXML = domXML.split('<DOMGroup>').join(\"\");\r\n\t\tdomXML = domXML.split('</DOMGroup>').join(\"\");\r\n\t\tdomXML = domXML.split('<members>').join(\"\");\r\n\t\tdomXML = domXML.split('</members>').join(\"\");\r\n\t\treturn domXML;\r\n\t}\r\n\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n}","package no.logic.kha.uix.fla;\r\nimport haxe.xml.Access;\r\nimport no.logic.kha.uix.fla.FlaElement;\r\nimport no.logic.kha.uix.fla.FlaSymbol;\r\nimport no.logic.kha.uix.scene.Bitmap;\r\nimport no.logic.kha.uix.scene.DisplayObject;\r\nimport no.logic.kha.uix.scene.InteractiveObject;\r\nimport no.logic.kha.uix.scene.Shape;\r\nimport no.logic.kha.uix.scene.SimpleButton;\r\nimport no.logic.kha.uix.scene.Sprite;\r\nimport no.logic.kha.uix.scene.Sprite.MovieClip;\r\nimport no.logic.kha.uix.scene.uixcomp.UIXGElement;\r\n\r\n/**\r\n * ...\r\n * @author Tommy Svensson\r\n */\r\n\r\nclass FlaSymbol\r\n{\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\t\r\n\t//===================================================================================\r\n\t// Consts \r\n\t//-----------------------------------------------------------------------------------\r\n\r\n\tstatic public inline var SYMBOL_TYPE_GRAPHIC\t\t: String \t= \"graphic\";\r\n\tstatic public inline var SYMBOL_TYPE_BUTTON\t\t\t: String \t= \"button\";\r\n\tstatic public inline var SYMBOL_TYPE_MOVIECLIP\t\t: String \t= \"movieclip\";\r\n\t\r\n\t//===================================================================================\r\n\t// Properties \r\n\t//-----------------------------------------------------------------------------------\r\n\t\r\n\tpublic var xml\t\t\t\t: Xml;\r\n\tpublic var loadImmediate\t: Bool;\r\n\tpublic var name\t\t\t\t: String;\r\n\tpublic var type\t\t\t\t: String\t\t\t\t= SYMBOL_TYPE_MOVIECLIP;\r\n\tpublic var timeline\t\t\t: FlaTimeline;\r\n\tpublic var numFrames\t\t: Int\t\t\t\t\t= 1;\r\n\r\n\t//===================================================================================\r\n\t// Declarations \r\n\t//-----------------------------------------------------------------------------------\r\n\r\n\t//===================================================================================\r\n\t// Callback \r\n\t//-----------------------------------------------------------------------------------\t\t\r\n\r\n\t//===================================================================================\r\n\t// Variables \r\n\t//-----------------------------------------------------------------------------------\t\t\r\n\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\t\r\n\tpublic function new(symbolXML:Xml, fl:FlaLibrary) \r\n\t{\r\n\t\tthis.xml = symbolXML;\r\n\t\tif (this.xml!=null)\r\n\t\t{\r\n\t\t\tvar xa = new Access(this.xml);\r\n\t\t\t\r\n\t\t\tvar si = xa.node.DOMSymbolItem;\r\n\t\t\t\r\n\t\t\tif (si.has.name)\r\n\t\t\t\tthis.name = si.att.name;\r\n\t\t\t\t\r\n\t\t\tif (si.has.symbolType)\r\n\t\t\t{\r\n\t\t\t\tvar st = si.att.symbolType;\r\n\t\t\t\tswitch (st) \r\n\t\t\t\t{\r\n\t\t\t\t\tcase \"graphic\":\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttype = SYMBOL_TYPE_GRAPHIC;\r\n\t\t\t\t\t\tparseTimeline(si);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcase \"button\":\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttype = SYMBOL_TYPE_BUTTON;\r\n\t\t\t\t\t\tparseTimeline(si);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttype = SYMBOL_TYPE_MOVIECLIP;\r\n\t\t\t\t\t\tparseTimeline(si);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\ttype = SYMBOL_TYPE_MOVIECLIP;\r\n\t\t\t\tparseTimeline(si);\r\n\t\t\t}\r\n\t\t}\r\n\t}\t\r\n\t\r\n\t///////////////////////////////////////////////////////////////////////////////////////\r\n\r\n\tfunction parseTimeline(xa:Access) \r\n\t{\r\n\t\t//if (xa.hasNode.timeline && xa.node.timeline.hasNode.DOMTimeline)\r\n\t\t//{\r\n\t\t\t//trace(xa.x);\r\n\t\t\t//trace(xa.node.timeline.node.DOMTimeline);\r\n\t\t\t//timeline = new FlaTimeline(xa.node.timeline.node.DOMTimeline.x);\r\n\t\t\ttimeline = new FlaTimeline(xa.x);\r\n\t\t//}\r\n\t}\r\n\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\r\n\tstatic public function createNew(fe:FlaElement):DisplayObject \r\n\t{\r\n\t\tvar libName:String = fe.libraryItemName;\r\n\t\tif (libName != null)\r\n\t\t{\r\n\t\t\tvar fs:FlaSymbol = Fla.l.symbols.get(libName);\r\n\t\t\tif (fs != null)\r\n\t\t\t{\r\n\t\t\t\tswitch (fs.type) \r\n\t\t\t\t{\r\n\t\t\t\t\tcase \"graphic\" | \"movieclip\":\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\treturn createMovieClip(fe,fs);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcase \"shape\":\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\treturn createShape(fe,fs);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcase \"button\":\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\treturn createButton(fe,fs);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\treturn createMovieClip(fe,fs);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\t\r\n\tstatic public function createMovieClip(fe:FlaElement,fs:FlaSymbol):DisplayObject \r\n\t{\r\n\t\tvar mc:MovieClip = new MovieClip(null);\r\n\t\tmc.color = fe.color;\r\n\t\t//mc.centerx = fe.centerx;\r\n\t\t//mc.centery = fe.centery;\r\n\t\t//mc.currentFrame = 1;\r\n\t\tmc.type = fs.type;\r\n\t\tmc.name = fe.name;\r\n\t\tmc.rotation = fe.rotation;\r\n\t\tmc.scale = fe.scale;\r\n\t\tmc.scaleX = fe.scaleX;\r\n\t\tmc.scaleY = fe.scaleY;\r\n\t\tmc.x = fe.x;\r\n\t\tmc.y = fe.y;\r\n\t\tmc.uuid = fe.uuid;\r\n\t\t//mc.autoPlay = true;\r\n\t\t//mc.play();\r\n\t\tmc.disposeOnRemove = true;\r\n\t\tmc.visible = fe.visible;\r\n\t\tmc.uixData = fe.uixData;\r\n\t\tif (mc.uixData != null)\r\n\t\t{\r\n\t\t\tmc.name = mc.uixData.name;\r\n\t\t}\r\n\t\t\r\n\t\tif (fe.alpha != null)\r\n\t\t{\r\n\t\t\tmc.alpha = fe.alpha;\r\n\t\t}\r\n\t\t\t\r\n\t\tmc.setTimelineDataFromFLA(fe.timeline);\r\n\t\treturn mc;\r\n\t}\r\n\t\r\n\tstatic function createShape(fe:FlaElement,fs:FlaSymbol):Shape \r\n\t{\r\n\t\tvar sh:Shape = new Shape(null);\r\n\t\tsh.color = fe.color;\r\n\t\t//mc.centerx = fe.centerx;\r\n\t\t//mc.centery = fe.centery;\r\n\t\t//mc.currentFrame = 1;\r\n\t\tsh.type = fs.type;\r\n\t\tsh.name = fe.name;\r\n\t\tsh.rotation = fe.rotation;\r\n\t\tsh.scale = fe.scale;\r\n\t\tsh.scaleX = fe.scaleX;\r\n\t\tsh.scaleY = fe.scaleY;\r\n\t\tsh.x = fe.x;\r\n\t\tsh.y = fe.y;\r\n\t\tsh.uuid = fe.uuid;\r\n\t\tsh.disposeOnRemove = true;\r\n\t\tsh.visible = fe.visible;\r\n\t\tif (fe.shapeData!=null)\r\n\t\t{\r\n\t\t\tsh.shapeData = fe.shapeData;\r\n\t\t\tsh.width = fe.shapeData.rect.width;\r\n\t\t\tsh.height = fe.shapeData.rect.height;\r\n\t\t}\r\n\t\tif (fe.alpha != null)\r\n\t\t\tsh.alpha = fe.alpha;\r\n\t\t\t\r\n\t\treturn sh;\r\n\t}\t\r\n\tstatic function createButton(fe:FlaElement,fs:FlaSymbol):SimpleButton \r\n\t{\r\n\t\tvar btn:SimpleButton = new SimpleButton(null);\r\n\t\tbtn.color = fe.color;\r\n\t\t//mc.centerx = fe.centerx;\r\n\t\t//mc.centery = fe.centery;\r\n\t\t//mc.currentFrame = 1;\r\n\t\tbtn.type = fs.type;\r\n\t\tbtn.name = fe.name;\r\n\t\tbtn.rotation = fe.rotation;\r\n\t\tbtn.scale = fe.scale;\r\n\t\tbtn.scaleX = fe.scaleX;\r\n\t\tbtn.scaleY = fe.scaleY;\r\n\t\tbtn.x = fe.x;\r\n\t\tbtn.y = fe.y;\r\n\t\tbtn.uuid = fe.uuid;\r\n\t\t//btn.autoPlay = false;\r\n\t\tbtn.disposeOnRemove = true;\r\n\t\tbtn.visible = fe.visible;\r\n\t\tbtn.uixData = fe.uixData;\r\n\t\tif (btn.uixData != null)\r\n\t\t\tbtn.name = btn.uixData.name;\r\n\t\t\r\n\t\tif (fe.alpha != null)\r\n\t\t\tbtn.alpha = fe.alpha;\r\n\t\t\t\r\n\t\tbtn.setTimelineDataFromFLA(fe.timeline);\r\n\t\treturn btn;\r\n\t}\r\n\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n}\r\n","package no.logic.kha.uix.fla;\r\nimport haxe.macro.Expr.Var;\r\nimport haxe.xml.Access;\r\n\r\n/**\r\n * ...\r\n * @author Tommy Svensson\r\n */\r\n\r\nclass FlaTimeline\r\n{\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\t\r\n\t//===================================================================================\r\n\t// Consts \r\n\t//-----------------------------------------------------------------------------------\r\n\r\n\t//===================================================================================\r\n\t// Properties \r\n\t//-----------------------------------------------------------------------------------\r\n\t\r\n\tpublic var name\t\t\t\t: String;\r\n\tpublic var numFrames\t\t: Int;\r\n\tpublic var frameLabels\t\t: Map<String,Int>\t\t= new Map<String,Int>();\r\n\r\n\t//===================================================================================\r\n\t// Declarations \r\n\t//-----------------------------------------------------------------------------------\r\n\r\n\tpublic var layers\t\t\t: Array<FlaLayer>;\r\n\t\r\n\t//===================================================================================\r\n\t// Callback \r\n\t//-----------------------------------------------------------------------------------\t\t\r\n\r\n\t//===================================================================================\r\n\t// Variables \r\n\t//-----------------------------------------------------------------------------------\t\t\r\n\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\t\r\n\tpublic function new(domXML:Xml) \r\n\t{\r\n\t\tlayers = [];\r\n\t\t\r\n\t\tvar t1 = null;\r\n\t\t\r\n\t\tvar xa = new Access(domXML);\r\n\t\tif (xa.hasNode.timeline)\r\n\t\t\tt1 = new Access(xa.node.timeline.x.firstElement());\r\n\t\telse\r\n\t\t\tt1 = new Access(xa.node.timelines.x.firstElement());\r\n\t\t\r\n\t\tthis.name = t1.att.name;\r\n\t\t\t\t\r\n\t\tvar layNum:Int = t1.node.layers.nodes.DOMLayer.length;\r\n\t\tvar layNumInv:Int = 0;\r\n\t\tvar visibleLayers:Array<Xml> = [];\r\n\t\t\r\n\t\tfor (i in 0...layNum)\r\n\t\t{\r\n\t\t\tvar v:String = t1.node.layers.nodes.DOMLayer[i].x.get(\"visible\");\r\n\t\t\tif (v==null || v != \"false\")\r\n\t\t\t{\r\n\t\t\t\tvisibleLayers.push(t1.node.layers.nodes.DOMLayer[i].x);\r\n\t\t\t\t//layNumInv++;\r\n\t\t\t}\r\n\t\t}\r\n\t\t\t\r\n\t\tvisibleLayers.reverse();\r\n\t\tfor (i in 0...visibleLayers.length)\r\n\t\t{\r\n\t\t\tvar fl:FlaLayer = new FlaLayer(visibleLayers[layNumInv], this, layNumInv);\r\n\t\t\tif (fl.numFrames>this.numFrames)\r\n\t\t\t\tthis.numFrames = fl.numFrames;\r\n\t\t\tthis.layers.push(fl);\r\n\t\t\tlayNumInv++;\r\n\t\t}\r\n\t}\t\r\n\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n}","package no.logic.kha.uix.graphics.shaders;\r\n\r\nimport kha.Shaders;\r\nimport kha.graphics4.BlendingFactor;\r\nimport kha.graphics4.FragmentShader;\r\nimport kha.graphics4.PipelineState;\r\nimport kha.graphics4.VertexData;\r\nimport kha.graphics4.VertexShader;\r\nimport kha.graphics4.VertexStructure;\r\n\r\nclass PipelineTools\r\n{\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\r\n\t//===================================================================================\r\n\t// Variables \r\n\t//-----------------------------------------------------------------------------------\t\t\r\n\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\t\r\n\tstatic public function createPipeline(?fragmentShader:FragmentShader,?vertexShader:VertexShader,?blendMode:Blendmode):PipelineState\r\n\t{\r\n\t\tvar\tpipeline:PipelineState = new PipelineState();\r\n\t\tvar structure = new VertexStructure();\r\n\t\tstructure.add(\"vertexPosition\", VertexData.Float3);\r\n\t\tstructure.add(\"texPosition\", VertexData.Float2);\r\n\t\tstructure.add(\"vertexColor\", VertexData.Float4);\r\n\t\tpipeline.inputLayout = [structure];\r\n\t\tif (vertexShader==null)\r\n\t\t\tpipeline.vertexShader = Shaders.painter_image_vert;\r\n\t\telse\t\r\n\t\t\tpipeline.vertexShader = vertexShader;\r\n\t\t\r\n\t\tif (fragmentShader==null)\r\n\t\t\tpipeline.fragmentShader = Shaders.painter_image_frag;\r\n\t\telse\r\n\t\t\tpipeline.fragmentShader = fragmentShader;\r\n\t\t\r\n\t\tpipeline.blendSource = BlendingFactor.BlendOne;\r\n\t\tpipeline.blendDestination = BlendingFactor.BlendOne;\r\n\t\tpipeline.alphaBlendSource = BlendingFactor.SourceAlpha;\r\n\t\tpipeline.alphaBlendDestination = BlendingFactor.InverseSourceAlpha;\t\t\t\r\n\t\t\t\r\n\t\tpipeline.compile();\r\n\t\t\r\n\t\tif (blendMode!=null)\r\n\t\t\tsetBlendmode(blendMode, pipeline);\r\n\r\n\t\treturn pipeline;\r\n\t}\r\n\t\r\n\t///////////////////////////////////////////////////////////////////////////////////////\r\n\t\r\n\tstatic public function setBlendmode(blendMode:Blendmode,pipeline:PipelineState)\r\n\t{\r\n\t\tif (pipeline != null)\r\n\t\t{\r\n\t\t\tswitch blendMode \r\n\t\t\t{\r\n\t\t\t\tcase Blendmode.Multiply:\r\n\t\t\t\t{\r\n\t\t\t\t\tpipeline.blendSource = BlendingFactor.BlendOne;\r\n\t\t\t\t\tpipeline.blendDestination = BlendingFactor.BlendOne;\r\n\t\t\t\t\tpipeline.alphaBlendSource = BlendingFactor.SourceAlpha;\r\n\t\t\t\t\tpipeline.alphaBlendDestination = BlendingFactor.InverseSourceAlpha;\t\t\r\n\t\t\t\t}\t\r\n\t\t\t\tdefault:\r\n\t\t\t\t{\r\n\t\t\t\t\tpipeline.blendSource = BlendingFactor.BlendOne;\r\n\t\t\t\t\tpipeline.blendDestination = BlendingFactor.BlendZero;\r\n\t\t\t\t\tpipeline.alphaBlendSource = BlendingFactor.SourceAlpha;\r\n\t\t\t\t\tpipeline.alphaBlendDestination = BlendingFactor.InverseSourceAlpha;\t\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\t///////////////////////////////////////////////////////////////////////////////////////\r\n\t\r\n}\r\n\r\nenum Blendmode\r\n{\r\n\tNormal;\r\n\tMultiply;\r\n}","package no.logic.kha.uix.input;\r\n\r\n//import kha.SystemImpl;\r\nimport kha.input.Mouse;\r\nimport no.logic.kha.uix.utils.SmoothFloat;\r\n\r\n@:enum\r\nabstract CursorType(String)\r\n{\r\n\tvar DEFAULT\t\t= \"default\";\r\n\tvar ARROW\t\t= \"arrow\";\r\n\tvar NONE\t\t= \"none\";\r\n\tvar POINTER\t\t= \"pointer\";\r\n\tvar WAIT\t\t= \"wait\";\r\n}\r\n\r\nclass MouseManager\r\n{\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\r\n\t//===================================================================================\r\n\t// Consts \r\n\t//-----------------------------------------------------------------------------------\r\n\t\r\n\t//===================================================================================\r\n\t// Properties \r\n\t//-----------------------------------------------------------------------------------\r\n\r\n\tstatic public var x\t\t\t\t\t: Int;\r\n\tstatic public var y\t\t\t\t\t: Int;\r\n\t\r\n\tstatic public var prevX\t\t\t\t: Int;\r\n\tstatic public var prevY\t\t\t\t: Int;\r\n\t\r\n\tstatic public var stageX\t\t\t: Int;\r\n\tstatic public var stageY\t\t\t: Int;\r\n\t\r\n\tstatic public var pressedX\t\t\t: Int;\r\n\tstatic public var pressedY\t\t\t: Int;\r\n\r\n\tstatic public var releasedX\t\t\t: Int;\r\n\tstatic public var releasedY\t\t\t: Int;\r\n\t\r\n\tstatic public var dx\t\t\t\t: Float;\r\n\tstatic public var dy\t\t\t\t: Float;\r\n\tstatic public var wheelDelta\t\t: Null<Float>;\r\n\tstatic public var wheelDeltaSmooth\t: SmoothFloat;\r\n\tstatic public var velocityX\t\t\t: Float;\r\n\tstatic public var velocityY\t\t\t: Float;\r\n\t\r\n\tstatic public var isPressed\t\t\t: Bool;\r\n\tstatic public var isRightPressed\t: Bool;\r\n\tstatic public var isMiddlePressed\t: Bool;\r\n\tstatic public var isWheelMoving\t\t: Bool;\r\n\tstatic public var hasLeft\t\t\t: Bool;\r\n\t\r\n\tstatic public var damping\t\t\t: Float\t\t\t\t= 0.96;\r\n\t\r\n\t// Singleton ////////////////////////////////////////////////////////////////////////\r\n  \t\r\n\tstatic public function init()\r\n\t{\r\n\t\twheelDeltaSmooth = new SmoothFloat(20);\r\n\t\ttry\r\n\t\t{\r\n\t\t\tMouse.get().notify(onMouseDown, onMouseUp, onMouseMove, onMouseWheel, onLeave);\r\n\t\t}\r\n\t\tcatch (e:Dynamic)\r\n\t\t{\r\n\t\t\ttrace(\"Mouse setup failed!\");\r\n\t\t}\r\n\t}\r\n\t\r\n\tstatic function onMouseDown(button:Int, x:Int, y:Int) \r\n\t{\r\n\t\tif (button == 0)\r\n\t\t{\r\n\t\t\tpressedX = x;\r\n\t\t\tpressedY = y;\r\n\t\t\tisPressed = true;\r\n\t\t}\r\n\t\telse if (button == 1)\r\n\t\t{\r\n\t\t\tisRightPressed = true;\r\n\t\t}\r\n\t\telse if (button == 2)\r\n\t\t{\r\n\t\t\tisMiddlePressed = true;\r\n\t\t}\r\n\t}\r\n\t\r\n\tstatic function onMouseUp(button:Int, x:Int, y:Int) \r\n\t{\r\n\t\tif (button == 0)\r\n\t\t{\r\n\t\t\treleasedX = x;\r\n\t\t\treleasedY = y;\r\n\t\t\tisPressed = false;\r\n\t\t}\r\n\t\telse if (button == 1)\r\n\t\t{\r\n\t\t\tisRightPressed = false;\r\n\t\t}\r\n\t\telse if (button == 2)\r\n\t\t{\r\n\t\t\tisMiddlePressed = false;\r\n\t\t}\r\n\t}\r\n\t\r\n\tstatic function onMouseMove(x:Int, y:Int, moveX:Int, moveY:Int) \r\n\t{\r\n\t\tMouseManager.prevX = MouseManager.x;\r\n\t\tMouseManager.prevY = MouseManager.y;\r\n\t\tMouseManager.x = x;\r\n\t\tMouseManager.y = y;\r\n\t\tMouseManager.stageX = x;\r\n\t\tMouseManager.stageY = y;\r\n\t\tMouseManager.dx = moveX;\r\n\t\tMouseManager.dy = moveY;\r\n\t\tMouseManager.hasLeft = false;\r\n\t}\r\n\t\r\n\tstatic function onMouseWheel(delta:Int) \r\n\t{\r\n\t\twheelDelta = delta;\r\n\t\twheelDeltaSmooth.add(wheelDelta);\r\n\t}\r\n\t\r\n\tstatic function onLeave() \r\n\t{\r\n\t\thasLeft = true;\r\n\t}\r\n\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\t\r\n\tstatic public function setCursorType(cursorType:CursorType) \r\n\t{\r\n\t\t#if (kha_krom)\r\n\t\t\r\n\t\t#elseif (kha_js)\r\n\t\tkha.SystemImpl.khanvas.style.cursor = cast cursorType;\r\n\t\t#end\r\n\t}\r\n\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\t\r\n\tstatic public function update()\r\n\t{\r\n\t\twheelDelta = 0;\r\n\t\twheelDeltaSmooth.add(wheelDelta);\r\n\t}\r\n\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n}\r\n","package no.logic.kha.uix.kontentum;\r\n\r\nimport haxe.Timer;\r\nimport kha.Scheduler;\r\nimport no.logic.kha.uix.core.loading.UIXLoader;\r\nimport no.logic.kha.uix.types.Object;\r\nimport no.logic.kha.uix.utils.DateUtils;\r\nimport no.logic.kha.uix.utils.ObjUtils;\r\n\r\nenum KontentumStatus\r\n{\r\n\tSuccess;\r\n\tTimeOutJSONLoadedLocally;\r\n\tFailedToGetJSONRest;\r\n}\r\n\r\ntypedef KontentumExhibitInfo =\r\n{\r\n\t@:optional\tvar id\t\t\t: Int;\r\n\t@:optional\tvar app_id\t\t: Int;\r\n\t@:optional\tvar liveupdate\t: Bool;\r\n\t@:optional\tvar name\t\t: String;\r\n\t@:optional\tvar exhibit_id\t: Int;\r\n\t@:optional\tvar client_id\t: Int;\r\n\t@:optional\tvar variables\t: Object;\r\n}\r\n\r\ntypedef KontentumHighscoreEntry =\r\n{\r\n\t\t\t\tvar name\t\t: String;\r\n\t\t\t\tvar score\t\t: Int;\r\n\t@:optional\tvar metaData\t: Dynamic;\r\n}\r\n\r\nenum KontentumLanguage\r\n{\r\n\tCURRENT;\r\n\tNO;\r\n\tEN;\r\n\tSE;\r\n\tDK;\r\n}\r\n\r\nclass Kontentum\r\n{\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\t\r\n\t//===================================================================================\r\n\t// Consts \r\n\t//-----------------------------------------------------------------------------------\r\n\r\n\t//===================================================================================\r\n\t// Properties \r\n\t//-----------------------------------------------------------------------------------\r\n\t\r\n\tpublic var rest_ip\t\t\t\t: String\t\t\t= \"\";\r\n\tpublic var rest_path\t\t\t: String\t\t\t= \"rest/getExhibit\";\r\n\tpublic var rest_ping\t\t\t: String\t\t\t= \"rest/pingExhibit\";\r\n\tpublic var remoteFilePath\t\t: String\t\t\t= \"filevault\";\r\n\tpublic var localFileDir\t\t\t: String\t\t\t= \"\";\r\n\t//public var ExhibitID\t\t\t: Int\t\t\t\t= 7;\r\n\t//public var ExhibitID\t\t\t: Int\t\t\t\t= 1;\r\n\t//public var ExhibitID\t\t\t: Int\t\t\t\t= 13;\r\n\tpublic var exhibitToken\t\t\t: String\t\t\t= '';\t\r\n\tpublic var initiated\t\t\t: Bool;\r\n\tpublic var preloadImages\t\t: Bool;\r\n\tpublic var downloadFiles\t\t: Bool;\r\n\tpublic var liveupdate\t\t\t: Bool;\r\n\t\r\n\tpublic  var fullURL\t\t\t\t: String;\r\n\tpublic  var fileURL\t\t\t\t: String;\r\n\tpublic  var pingURL\t\t\t\t: String;\r\n\tvar previousTimeStamp\t\t\t: Int;\r\n\tvar pingTime\t\t\t\t\t: Int\t\t\t\t= 1000;\r\n\tvar pingTimer\t\t\t\t\t: Timer;\r\n\t\r\n\tpublic var RESTJson\t\t\t\t: Object;\r\n\tpublic var RESTJsonStr\t\t\t: String;\r\n\tpublic var assetsLoaded\t\t\t: Bool;\r\n\tvar usingLocalJsonFile\t\t\t: Bool;\r\n\t\r\n\tpublic var exhibit\t\t\t\t: KontentumExhibitInfo;\r\n\tpublic var languages\t\t\t: Object;\r\n\tpublic var files\t\t\t\t: Object;\r\n\tpublic var filesByIdentifier\t: Object;\r\n\tpublic var filesIdIdentifier\t: Object;\r\n\tpublic var texts\t\t\t\t: Object;\r\n\tpublic var textsByIdentifier\t: Object;\r\n\tpublic var textsIdIdentifier\t: Object;\r\n\tpublic var content\t\t\t\t: Object;\r\n\tpublic var variables\t\t\t: Object;\r\n\t\t\r\n\t//public var downloadedFiles\t\t: Files;\r\n\t//public var selectedFiles\t\t: Files;\r\n\r\n\tpublic var multipleScoresArray\t: Array<String>\t\t= [];\t\r\n\t\r\n\tpublic var currentLanguage(default, set) : KontentumLanguage;\r\n\r\n\t//===================================================================================\r\n\t// Declarations \r\n\t//-----------------------------------------------------------------------------------\r\n\r\n\tvar pingLoader\t\t\t\t\t: UIXLoader;\r\n\tpublic var onComplete\t\t\t: ()->Void;\r\n\tpublic var onFail\t\t\t\t: (KontentumStatus)->Void;\r\n\t\t\r\n\t//===================================================================================\r\n\t// Variables \r\n\t//-----------------------------------------------------------------------------------\t\t\r\n\t\r\n\t// Singleton ////////////////////////////////////////////////////////////////////////\r\n  \t\r\n\tstatic var instance\t\t\t\t: Kontentum;\r\n\tpublic static var i(get, null)\t: Kontentum;\r\n\tstatic function get_i()\t\t\t: Kontentum \r\n\t{\r\n    \tif (instance == null) return instance = new Kontentum();\r\n      \telse return instance;\r\n\t}\r\n\tpublic function new(){}\r\n\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\t\r\n\tpublic function init(ip:String, exhibitToken:String, ?localFileDir:String=null, ?downloadFiles:Bool=true, ?preloadImages:Bool=false, ?liveupdate:Bool, autoStart:Bool=true):Kontentum\r\n\t{\r\n\t\tthis.initiated = true;\r\n\t\tthis.rest_ip = ip;\r\n\t\tthis.exhibitToken = exhibitToken;\t\t\r\n\t\tthis.downloadFiles = downloadFiles;\r\n\t\tthis.preloadImages = preloadImages;\r\n\t\tthis.liveupdate = liveupdate;\r\n\t\t\r\n/*\t\tif (localFileDir == \"\" || localFileDir == \" \" || localFileDir == \"[object Object]\" )  //hjo..hum...\r\n\t\t{\r\n\t\t\tthis.localFileDir = null;\r\n\t\t\tUIX.assets.localFileDir = \"\";\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tthis.localFileDir = localFileDir;\r\n\t\t\tUIX.assets.localFileDir = this.localFileDir;\r\n\t\t}*/\r\n\r\n\t\tfullURL = rest_ip + \"/\" + rest_path + \"/\" + exhibitToken;\r\n\t\tfileURL = rest_ip + \"/\" + remoteFilePath + \"/\";\r\n\t\t\r\n\t\tif (autoStart)\r\n\t\t\tfetch();\r\n\t\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\t\r\n\tpublic function fetch()\r\n\t{\r\n\t\tgetREST();\r\n\t}\r\n\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\r\n\tfunction getREST()\r\n\t{\r\n\t\tusingLocalJsonFile = false;\r\n\t\t\r\n\t\tUIXLoader.LoadJSON(fullURL, null, onRestJSONLoaded, function(uxl:UIXLoader)\r\n\t\t{\r\n\t\t\tif (onFail!=null)\r\n\t\t\t\tonFail(KontentumStatus.FailedToGetJSONRest);\r\n\t\t\t\r\n\t\t\treturn;\r\n\r\n\t\t\tvar localFile = localFileDir + \"/exhibit\" + exhibitToken + \".json\";\r\n\t\t\tusingLocalJsonFile = true;\r\n\t\t\tUIX.c.debug(\"Rest JSON failed, trying local copy : \"+localFile);\r\n\t\t\tUIXLoader.LoadJSON(localFile, null, onRestJSONLoaded, function(uxl:UIXLoader)\r\n\t\t\t{\r\n\t\t\t\tif (onFail!=null)\r\n\t\t\t\t\tonFail(KontentumStatus.FailedToGetJSONRest);\r\n\t\t\t});\r\n\t\t});\r\n\t}\t\r\n\t\t\r\n\tfunction onRestJSONLoaded(uxl:UIXLoader)\r\n\t{\r\n\t\tRESTJsonStr = uxl.contentRAW;\r\n\t\tRESTJson = uxl.contentJSON;\r\n\t\tif (RESTJson!=null)\r\n\t\t{\r\n\t\t\t//trace(\"Kontentum REST loaded. \");\r\n\t\t\texhibit = {};\r\n\t\t\tObjUtils.copyProperties(RESTJson.exhibit, exhibit, true);\r\n\t\t\t\r\n\t\t\t//if (liveupdate)\r\n\t\t\t\t//liveupdate = exhibit.liveupdate;\r\n\t\t\t\t\r\n\t\t\tlanguages = parseLanguages();\r\n\t\t\tcontent = RESTJson.content;\r\n\t\t\ttexts = processTexts(RESTJson.texts);\r\n\t\t\tfiles = processFiles(RESTJson.files);\r\n\t\t\tvariables = processVariables(exhibit.variables);\r\n\t\t\t\r\n\t\t\tUIX.assets.setAssetContent(this);\r\n\t\t\t\r\n\t\t\t\r\n\t\t\tpingURL = rest_ip + \"/\" + rest_ping + \"/\" + exhibitToken;\r\n\t\t\t\r\n/*\t\t\tif (this.localFileDir == null)\r\n\t\t\t{\r\n\t\t\t\t//UIXGuiScanner.localFilePath = fileURL;\r\n\t\t\t\tcheckPreload();\r\n\t\t\t}\r\n\t\t\telse if (downloadFiles)\r\n\t\t\t\tdownloadAllFiles(this.localFileDir);\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\t//var fd:String = (localFileDir + \"/\").split(\"\\\"\").join(\"/\");\r\n\t\t\t\t//UIXGuiScanner.localFilePath = fd;\t\t\t\t\t\r\n\t\t\t\tcheckPreload();\r\n\t\t\t}*/\r\n\t\t\t\r\n\t\t\t//if (!usingLocalJsonFile && liveupdate)\r\n\t\t\t\t//startPing();\r\n\t\t\t\r\n\t\t\tif (liveupdate)\r\n\t\t\t\tstartPing();\r\n\t\t\t\t\r\n\t\t\tif (preloadImages)\r\n\t\t\t\tpreloadAssets();\r\n\t\t\telse \r\n\t\t\t\tkontentumReady();\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tUIX.c.debug(\"Kontentum Error: Cant parse JSON\");\r\n\t\t}\r\n\t\t//UIX.c.debug(UIX.assets.toString());\r\n\t\t//UIX.c.debug(filesByIdentifier.toString());\t\t\r\n\t}\r\n\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\t\r\n\tfunction parseLanguages():Object \r\n\t{\r\n\t\tvar langObj:Object = {}; \r\n\t\t\r\n\t\tvar langs:Array<Object> = RESTJson.languages;\r\n\t\tif (langs!=null && langs.length > 0)\r\n\t\t{\r\n\t\t\tfor (j in 0...langs.length) \r\n\t\t\t{\r\n\t\t\t\tvar l = langs[j];\r\n\t\t\t\tlangObj[Std.string(langs[j].identifier)] = l;\r\n\t\t\t}\r\n\t\t\tcurrentLanguage = getLangType(langs[0].identifier);\r\n\t\t}\r\n\t\t\r\n\t\treturn langObj;\r\n\t}\r\n\t\r\n\tpublic function getLangType(langStr:String):KontentumLanguage\r\n\t{\r\n\t\tif (langStr == null)\r\n\t\t\treturn currentLanguage;\r\n\t\t\t\r\n\t\tvar fLang = KontentumLanguage.NO;\t\r\n\t\t\r\n\t\tswitch (langStr.toLowerCase()) \r\n\t\t{\r\n\t\t\tcase \"no\":\r\n\t\t\tcase \"nor\":\r\n\t\t\t\tfLang = KontentumLanguage.NO;\r\n\t\t\tcase \"en\":\r\n\t\t\tcase \"eng\":\r\n\t\t\t\tfLang = KontentumLanguage.EN;\r\n\t\t\tcase \"sw\":\r\n\t\t\tcase \"swe\":\r\n\t\t\t\tfLang = KontentumLanguage.SE;\r\n\t\t\tcase \"dk\":\r\n\t\t\t\tfLang = KontentumLanguage.DK;\r\n\t\t}\r\n\t\t\r\n\t\treturn fLang;\r\n\t}\r\n\t\r\n\tpublic function getLangStr(lang:KontentumLanguage):String\r\n\t{\r\n\t\tvar langStr = null;\r\n\t\t\r\n\t\tswitch (lang) \r\n\t\t{\r\n\t\t\tcase KontentumLanguage.NO:\t\tlangStr = \"no\";\r\n\t\t\tcase KontentumLanguage.EN:\t\tlangStr = \"en\";\r\n\t\t\tcase KontentumLanguage.SE:\t\tlangStr = \"se\";\r\n\t\t\tcase KontentumLanguage.DK:\t\tlangStr = \"dk\";\r\n\t\t\tcase KontentumLanguage.CURRENT:\tlangStr = null;\r\n\t\t}\r\n\t\t\r\n\t\treturn langStr;\r\n\t}\r\n\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\t\r\n\tfunction processTexts(texts:Array<Dynamic>):Object \r\n\t{\r\n\t\ttextsByIdentifier = {};\r\n\t\ttextsIdIdentifier = {};\r\n\t\tvar rObj:Object = {};\r\n\t\tif (texts!=null)\r\n\t\t{\r\n\t\t\tfor (j in 0...texts.length) \r\n\t\t\t{\r\n\t\t\t\tvar ti:Object = texts[j];\r\n\t\t\t\trObj[ti.id] = ti;\r\n\t\t\t\ttextsByIdentifier[ti.identifier] = ti;\r\n\t\t\t\ttextsIdIdentifier[ti.id] = ti.identifier;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn rObj;\r\n\t}\r\n\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\t\r\n\tfunction startPing() \r\n\t{\r\n\t\t//trace(\"Start Kontentum live update: \"+pingTime);\r\n\t\tpreviousTimeStamp = DateUtils.getWDateInt();\r\n\t\tpingLoader = new UIXLoader();\r\n\t\tpingLoader.disposeOnComplete = false;\r\n\t\tpingLoader.onComplete = onPingLoadedComplete;\r\n\t\tpingLoader.onError = onPingLoadedError;\r\n\t\tpingTimer = new haxe.Timer(pingTime);\r\n\t\tpingTimer.run = triggerPing;\r\n\t}\r\n\t\r\n\tfunction triggerPing() \r\n\t{\r\n\t\tpingLoader.onComplete = onPingLoadedComplete;\r\n\t\tpingLoader.loadJSON(pingURL);\r\n\t}\r\n\t\r\n\tfunction onPingLoadedComplete(ul:UIXLoader) \r\n\t{\r\n\t\t//trace(\"pong:\",ul.contentJSON);\r\n\t\t//if (ul!=null && ul.contentJSON!=null && ul.contentJSON.hasOwnProperty(\"last_modified\"))\r\n\t\t//{\r\n\t\t\t//trace(\"ping-time: \",ul.contentJSON.last_modified);\r\n\t\t\tvar newTime:Int = ul.contentJSON.last_modified;\r\n\t\t\t//trace(\"ping: \",newTime,previousTimeStamp);\r\n\t\t\tif (newTime > previousTimeStamp)\r\n\t\t\t{\r\n\t\t\t\ttrace(\"Kontentum updated!\");\r\n\t\t\t\tpreviousTimeStamp = newTime;\r\n\t\t\t\tUIXLoader.LoadJSON(fullURL, null, onRestLoadedPingComplete, onPingLoadedError);\r\n\t\t\t}\r\n\t\t//}\r\n\t}\r\n\t\r\n\tfunction onPingLoadedError(ul:UIXLoader) \r\n\t{\r\n\t\ttrace(\"Kontentium ping failed.\");\r\n\t\tTimer.delay(triggerPing, pingTime);\r\n\t}\r\n\t\t\t\r\n\tfunction onRestLoadedPingComplete(ul:UIXLoader)\r\n\t{\r\n\t\ttrace(\"Kontentum REST reloaded.\");\r\n\t\tRESTJson = ul.contentJSON;\r\n\t\tlanguages = parseLanguages();\r\n\t\tcontent = RESTJson.content;\r\n\t\ttexts = processTexts(RESTJson.texts);\r\n\t\t\r\n\t\t//UIXGuiScanner.currentLanguage = currentLanguage;\r\n\t\tUIX.assets.setAssetContent(this);\r\n\t\tUIX.assets.forceRefresh();\r\n\t\tTimer.delay(triggerPing, pingTime);\r\n\t}\r\n\t\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\t\r\n\tfunction kontentumReady() \r\n\t{\r\n\t\tassetsLoaded = true;\r\n\t\t//UIX.assets.forceRefresh();\r\n\t\tif (onComplete!=null)\r\n\t\t\tonComplete();\t\t\t\r\n\t}\t\r\n\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\t\r\n\tfunction processFiles(files:Array<Object>):Object \r\n\t{\r\n\t\tfilesByIdentifier = {};\r\n\t\tfilesIdIdentifier = {};\r\n\t\tvar rObj:Object = {};\r\n\t\tif (files!=null)\r\n\t\t{\r\n\t\t\tfor (j in 0...files.length) \r\n\t\t\t{\r\n\t\t\t\tvar ti:Object = files[j];\r\n\t\t\t\trObj[ti.id] = ti;\r\n\t\t\t\tfilesByIdentifier[ti.identifier] = ti;\r\n\t\t\t\tfilesIdIdentifier[ti.id] = ti.identifier;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn rObj;\r\n\t}\r\n\t\r\n\tfunction preloadAssets()\r\n\t{\r\n\t\tif (files!=null)\r\n\t\t{\r\n\t\t\tfor (i in files) \r\n\t\t\t{\t\t\r\n\t\t\t\t// var f = UIX.getAsset(fid, \"file\");\r\n\t\t\t\tvar file:KontentumFile = files[i];\r\n\t\t\t\tif (file.type==\"image\")\r\n\t\t\t\t{\r\n\t\t\t\t\tUIXLoader.addToQueue(Kontentum.i.fileURL+file.file);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (UIXLoader.loaderQueue.length>0)\r\n\t\t\t\tUIXLoader.runQueue(onPreloadComplete,onPreloadError);\r\n\t\t}\r\n\t\telse \r\n\t\t\tonPreloadError();\r\n\r\n\t\t//if (preloadImages)\r\n\t\t//{\r\n\t\t\t//var fd:String = UIXGuiScanner.localFilePath;\r\n\t\t\t//downloadedFiles = new Files(localFileDir, true, false, false);\r\n\t\t\t//UIXLoader.LoadImage(\t\r\n\t\t\t//UIXLoader.createQueue({onQueueComplete:allImagesPreloaded});\r\n\t\t//\r\n\t\t\t//for (var j:int = 0; j < downloadedFiles.currentDirFiles.length; j++) \r\n\t\t\t//{\r\n\t\t\t\t//var fname:String = downloadedFiles.currentDirFiles[j].name.toLowerCase();;\r\n\t\t\t\t//if (fname.indexOf(\".jpg\")!=-1 || fname.indexOf(\".png\")!=-1 || fname.indexOf(\".gif\")!=-1 || fname.indexOf(\".bmp\")!=-1)\r\n\t\t\t\t\t//UIXLoader.addToQueue(downloadedFiles.currentDirFiles[j].nativePath, {useCache:true, sourceFiletype:UIXLoader.FILETYPE_IMAGE, metaData:{fileName:downloadedFiles.currentDirFiles[j].name, onQueueItemComplete:onFilePreLoaded}});\r\n\t\t\t//}\r\n\t\t\t//UIXLoader.runQueue();\t\t\r\n\t\t\t//allImagesPreloaded();\t\t\r\n\r\n\t\t\t// kontentumReady();\r\n\t}\r\n\t\r\n\tfunction onPreloadComplete()\r\n\t{\r\n\t\tkontentumReady();\r\n\t}\r\n\t\r\n\tfunction onPreloadError()\r\n\t{\r\n\t\tkontentumReady();\r\n\t}\r\n\t\r\n/*\t\t\r\n\tpublic function downloadAllFiles(fileDir:String=\"\")\r\n\t{\r\n\t\t//UIX.c.debug(\"tries to download??  \"+fileDir);\r\n\t\t\r\n\t\tdownloadedFiles = new Files(fileDir, true, false, false);\r\n\t\tdeleteNonExistingFiles();\r\n\t\t\r\n\t\tif (!usingLocalJsonFile && RESTJsonStr!=null)\r\n\t\t\tdownloadedFiles.saveTextFile(\"exhibit\" + exhibitToken + \".json\", RESTJsonStr, true);\r\n\t\t\r\n\t\tfor (name in files) \r\n\t\t{\r\n\t\t\tvar cf:File = downloadedFiles.getFile(files[name].file);\r\n\t\t\tif (cf!=null && DateUtils.getWDateInt(cf.modified) < Std.parseInt(files[name].modified) )\r\n\t\t\t{\r\n\t\t\t\tUIX.c.debug(\"Downloading: \"+files[name].file);\r\n\t\t\t\tdownloadedFiles.downloadFile(fileURL + files[name].file);\r\n\t\t\t\t////UIXLoader.addToQueue(fileURL + \"/\" + files[name].file, {metaData:{fileName:files[name].file, dir:fd, onQueueItemComplete:onFileLoaded}});\r\n\t\t\t}\r\n\t\t\telse if (cf==null)\r\n\t\t\t{\r\n\t\t\t\tUIX.c.debug(\"Downloading: \"+files[name].file);\r\n\t\t\t\tdownloadedFiles.downloadFile(fileURL + files[name].file);\r\n\t\t\t\t////UIXLoader.addToQueue(fileURL + \"/\" + files[name].file, {metaData:{fileName:files[name].file, dir:fd, onQueueItemComplete:onFileLoaded}});\r\n\t\t\t\t//UIX.c.debug(\"Added for download: \"+ files[name].file);\r\n\t\t\t}\r\n\t\t}\t\r\n\t\t\r\n\t\tallFilesDownloaded();\r\n\t}\r\n\t\t\r\n\tfunction deleteNonExistingFiles()\r\n\t{\r\n\t\tvar newFiles:Array<File> = [];\r\n\t\tvar markedForDeletion:Array<File> = [];\r\n\t\t\r\n\t\tif (downloadedFiles != null)\r\n\t\t{\r\n\t\t\tfor (j in 0...downloadedFiles.currentDirFiles.length) \r\n\t\t\t{\r\n\t\t\t\tvar df:String = downloadedFiles.currentDirFiles[j].fileName;\r\n\t\t\t\tvar found:Bool = false;\r\n\t\t\t\t\r\n\t\t\t\tfor (name in files) \r\n\t\t\t\t{\r\n\t\t\t\t\tvar fN:String = files[name].file;\r\n\t\t\t\t\tif (fN==df)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tfound = true;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (!found)\r\n\t\t\t\t\tmarkedForDeletion.push(downloadedFiles.currentDirFiles[j]);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tfor (k in 0...markedForDeletion.length) \r\n\t\t\t{\r\n\t\t\t\tvar fnn:File = markedForDeletion[k];\r\n\t\t\t\tif (fnn!=null && fnn.isValid)\r\n\t\t\t\t{\r\n\t\t\t\t\tvar en:Int = fnn.fileName.indexOf(\"exhibit\");\r\n\t\t\t\t\tvar to:Int = fnn.fileName.indexOf(\".json\");\r\n\t\t\t\t\tif (en < 0 && to < 0)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tfnn.delete();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tdownloadedFiles.readDir();\r\n\t\t}\r\n\t}\r\n\t\t\r\n\tfunction checkPreload()\r\n\t{\r\n\t\tif (preloadImages)\r\n\t\t{\r\n\t\t\t//var fd:String = UIXGuiScanner.localFilePath;\r\n\t\t\tdownloadedFiles = new Files(localFileDir, true, false, false);\r\n\t\t\t//UIXLoader.LoadImage(\t\r\n\t\t\t//UIXLoader.createQueue({onQueueComplete:allImagesPreloaded});\r\n\t\t//\r\n\t\t\t//for (var j:int = 0; j < downloadedFiles.currentDirFiles.length; j++) \r\n\t\t\t//{\r\n\t\t\t\t//var fname:String = downloadedFiles.currentDirFiles[j].name.toLowerCase();;\r\n\t\t\t\t//if (fname.indexOf(\".jpg\")!=-1 || fname.indexOf(\".png\")!=-1 || fname.indexOf(\".gif\")!=-1 || fname.indexOf(\".bmp\")!=-1)\r\n\t\t\t\t\t//UIXLoader.addToQueue(downloadedFiles.currentDirFiles[j].nativePath, {useCache:true, sourceFiletype:UIXLoader.FILETYPE_IMAGE, metaData:{fileName:downloadedFiles.currentDirFiles[j].name, onQueueItemComplete:onFilePreLoaded}});\r\n\t\t\t//}\r\n\t\t\t//UIXLoader.runQueue();\t\t\r\n\t\t\tallImagesPreloaded();\r\n\t\t}\r\n\t\telse\r\n\t\t\tnoPreload();\r\n\t}\r\n\t\t\r\n\tfunction allFilesDownloaded()\r\n\t{\r\n\t\t//UIX.console.debug(\"loading complete\");\r\n\t\tcheckPreload();\r\n\t}\r\n\t\t\r\n\tfunction noPreload() \r\n\t{\r\n\t\tassetsLoaded = true;\r\n\t\tUIX.assets.forceRefresh();\r\n\t\tif (onComplete!=null)\r\n\t\t\tonComplete();\t\t\t\r\n\t}\r\n*/\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\t\r\n\tfunction processVariables(vars:Dynamic):Object\r\n\t{\r\n\t\tvar rObj:Object = {};\r\n\t\tif (vars!=null)\r\n\t\t{\r\n\t\t\tfor (n in Reflect.fields(vars))\r\n\t\t\t{\r\n\t\t\t\trObj[n]=Reflect.field(vars, n);\t\t\t\r\n\t\t\t}\r\n\t\t}\r\n\t\t//trace(\"vvv: \", rObj);\r\n\t\t//trace(\"SSS: \", rObj);\r\n\t\treturn rObj;\r\n\t}\r\n\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\r\n\tfunction set_currentLanguage(value:KontentumLanguage):KontentumLanguage \r\n\t{\r\n\t\tcurrentLanguage = value;\r\n\t\tUIX.assets.forceRefresh();\r\n\t\treturn currentLanguage;\r\n\t}\r\n\t\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\t\r\n\tpublic function submitAction(identifier:String, metadata:String = '')\r\n\t{\r\n\t\tUIXLoader.LoadJSON(rest_ip +'/rest/submitAction/' + exhibitToken + '/' + StringTools.urlEncode(identifier) + '/' + StringTools.urlEncode(metadata), null, onActionResponse, onActionResponse);\r\n\t}\r\n\r\n\tfunction onActionResponse(ul:UIXLoader)\r\n\t{\r\n\t\tif (ul.contentJSON != null)\r\n\t\t{\r\n\t\t\tvar json:Object = ul.contentJSON;\r\n\t\t\t\r\n\t\t\tif (json.hasOwnProperty('success'))\r\n\t\t\t{\r\n\t\t\t\ttrace('submitAction: ' + json['success']);\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\ttrace('submitAction: error');\r\n\t\t\t}\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\ttrace('submitAction: error');\r\n\t\t}\r\n\t}\r\n\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\r\n\tpublic function getScoreboard(interval:String, rows:UInt = 10, onResponse:(UIXLoader)->Void=null, onFail:(UIXLoader)->Void=null)\r\n\t{\r\n\t\t/* Valid intervals:\r\n\t\t\t'D' = Day\r\n\t\t\t'W' = Week\r\n\t\t\t'M' = Month\r\n\t\t\t'Y' = Year\r\n\t\t\t'A' = All-time high\r\n\t\t*/\r\n\t\tUIXLoader.LoadJSON(rest_ip +'/rest/getScoreboard/' + exhibitToken + '/' + interval + '/' + rows, null, onResponse, onFail );\r\n\t}\r\n\r\n\tpublic function submitScore(name:String, score:UInt, metadata:String = '', onResponse:(UIXLoader)->Void, onFail:(UIXLoader)->Void)\r\n\t{\r\n\t\tUIXLoader.LoadJSON(rest_ip + '/rest/submitScore/' + exhibitToken + '/' + StringTools.urlEncode(name) + '/' + score + '/' + StringTools.urlEncode(metadata), null, onResponse, onFail);\r\n\t}\r\n\r\n\tpublic function multipleScoresAdd(name:String, score:UInt, metadata:String = '')\r\n\t{\r\n\t\tmultipleScoresArray.push(name + '|' + Std.string(score) + '|' + metadata);\r\n\t}\r\n\r\n\tpublic function multipleScoresSubmit(onResponse:(UIXLoader)->Void, onFail:(UIXLoader)->Void)\r\n\t{\r\n\t\tvar scoreData:String = multipleScoresArray.join('--');\r\n\t\tUIXLoader.LoadJSON(rest_ip + '/rest/submitMultipleScores/' + exhibitToken + '/' + StringTools.urlEncode(scoreData), null, onResponse, onFail);\r\n\t\tmultipleScoresArray = [];\r\n\t}\r\n\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\t\r\n\t\r\n\tpublic function getVar(varName:String):Dynamic\r\n\t{\r\n\t\tif (exhibit != null && exhibit.variables != null && exhibit.variables.hasOwnProperty(varName))\r\n\t\t\treturn exhibit.variables[varName];\r\n\t\telse\r\n\t\t\treturn null;\r\n\t}\r\n\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\t\r\n/*\t\r\n\tpublic function getContentByExpression(expression:String):Dynamic\r\n\t{\r\n\t\tif (expression == null)\r\n\t\t\treturn null;\r\n\t\t\t\r\n\t\tvar sprDot:Array<String> = expression.split(\".\");\r\n\t\t\r\n\t\tif (sprDot!=null && sprDot.length > 0)\r\n\t\t{\r\n\t\t\tvar eq1:String = sprDot[0];\r\n\t\t\tif (eq1!=null && eq1.indexOf(\"[\") !=-1)\r\n\t\t\t{\r\n\t\t\t\tvar eq2:Array<String> = eq1.split(\"[\");\r\n\t\t\t\tif (eq2!=null && eq2.length > 1)\r\n\t\t\t\t{\r\n\t\t\t\t\tvar index:Int = 0;\r\n\t\t\t\t\tvar fieldName:String = sprDot[sprDot.length-1];\r\n\t\t\t\t\tvar nodeName:String = eq2[0];\r\n\t\t\t\t\tvar ps:String = eq2[1].split(\"]\").join(\"\");\r\n\t\t\t\t\tif (ps!=null && ps.indexOf(\"?\") ==-1 && ps.indexOf(\"$\") ==-1)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tindex = Std.parseInt(ps);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tvar brCont:String = ps;\r\n\t\t\t\t\t\tvar beq2:Array<String> = expression.split(\"[\");\r\n\t\t\t\t\t\tif (beq2.length > 0)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tvar baq2:Array<String> = beq2[1].split(\"]\");\r\n\t\t\t\t\t\t\tif (baq2.length > 0)\r\n\t\t\t\t\t\t\t\tbrCont = baq2[0];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tvar rqA:Array<String> = brCont.split(\"?\").join(\"\").split(\"=\");\r\n\t\t\t\t\t\tif (rqA!=null && rqA.length > 1)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tvar fn:String = rqA[0];\r\n\t\t\t\t\t\t\tif (fn!=null && fn.indexOf(\".\") ==-1 )\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tindex = findContentByFieldMatch(nodeName, \"element\", fn, switchConstants(rqA[1]));\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tvar sfn:Array = fn.split(\".\");\r\n\t\t\t\t\t\t\t\tindex = findContentByFieldMatch(nodeName, sfn[0], sfn[1], switchConstants(rqA[1]));\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse if (rqA!=null && rqA.length == 1)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tindex = Convert.toInt(UIXGuiScanner.getScanner().getVar(ps.split(\"$\").join(\"\")));\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t\treturn getContentString(nodeName, index, fieldName, null, type);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tindex = findContentByFieldMatch(sprDot[0], sprDot[1], type, null);\r\n\t\t\t\treturn getContentString(sprDot[0], index, sprDot[1], null, type);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn null;\r\n\t\t\t\r\n\t\t\r\n\t}\r\n\t\r\n\tpublic function findContentByFieldMatch(nodeName:String, subNodeName:String, fieldName:String, fieldValue:Dynamic):Int\r\n\t{\r\n\t\tif (fieldName==null || nodeName==null)\r\n\t\t\treturn null;\r\n\t\t\t\r\n\t\tvar index:Int = 0;\r\n\t\tvar cArr:Array<Dynamic> = getContentArrayByName(nodeName);\r\n\t\tif (cArr!=null && cArr.length>0)\r\n\t\t{\r\n\t\t\tfor (j in 0...cArr.length) \r\n\t\t\t{\r\n\t\t\t\tif (cArr[j]!=null)\r\n\t\t\t\t{\r\n\t\t\t\t\tif (subNodeName == null)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tif (Reflect.hasField(cArr[j], fieldName))\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tif (Reflect.field(cArr[j],fieldName) == fieldValue)\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tindex = j;\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (Reflect.hasField(cArr[j], subNodeName))\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tvar ss:Object = Reflect.field(cArr[j], subNodeName);\r\n\t\t\t\t\t\tif (ss!=null)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tif (fieldValue==null)\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tindex = j;\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse if (Reflect.hasField(ss, fieldName))\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tif (ss[fieldName] == fieldValue)\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tindex = j;\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\r\n\t\t\tif (index >= cArr.length)\r\n\t\t\t\tindex = cArr.length - 1;\r\n\t\t\t\t\r\n\t\t\treturn index;\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\t\r\n\tfunction getContentArrayByName(nodeName:String):Array<String>\r\n\t{\r\n\t\tif (content==null || nodeName==null)\r\n\t\t\treturn null;\r\n\t\t\t\r\n\t\tvar nn:String = nodeName.toLowerCase();\r\n\t\tfor (name in content) \r\n\t\t{\r\n\t\t\tvar ln:String = name.toLowerCase();\r\n\t\t\tif (name && (name.toLowerCase() == nn))\r\n\t\t\t{\r\n\t\t\t\treturn content[name];\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn null;\r\n\t}\t\r\n\r\n\tpublic function getContentString(nodeName:String,index:Int,fieldName:String, lang:String=null, type:String=null):String\r\n\t{\r\n\t\tif (content==null || nodeName==null)\r\n\t\t\treturn null;\r\n\t\t\t\r\n\t\tvar cArr:Array<String> = getContentArrayByName(nodeName);\r\n\t\tif (cArr!=null && cArr.length>0)\r\n\t\t{\r\n\t\t\tif (index >= cArr.length)\r\n\t\t\t\treturn null;\r\n\t\t\t\t//index = cArr.length - 1;\r\n\t\t\t\t\r\n\t\t\treturn getStringFieldFromContentEntry(cArr[index], fieldName, lang, type);\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\t\r\n\tfunction getStringFieldFromContentEntry(contentEntry:Object, fieldName:String, lang:String, type:String=null):String \r\n\t{\r\n\t\tif (contentEntry!=null && fieldName!=null)\r\n\t\t{\r\n\t\t\tif (Reflect.hasField(contentEntry,fieldName) && contentEntry[fieldName]!=null)\r\n\t\t\t{\r\n\t\t\t\tvar qn:Object = contentEntry[fieldName];\r\n\t\t\t\t\r\n\t\t\t\tvar t:String = contentEntry.type;\r\n\t\t\t\tif (type)\r\n\t\t\t\t\tt = type;\r\n\t\t\t\tif (qn is String)\r\n\t\t\t\t\treturn UIX.\r\n\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\treturn getAssetByID(qn, t, lang);\r\n\t\t\t\telse\r\n\t\t\t\t\treturn getAssetByID(parseInt(qn.id), t, lang);\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\treturn null;\r\n\t}\r\n*/\t\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\t\r\n\r\n\t//===================================================================================\r\n\t// Dispose \r\n\t//-----------------------------------------------------------------------------------\t\t\r\n\t\r\n\tpublic function dispose()\r\n\t{\r\n\t\t\r\n\t}\r\n\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n}\r\n\t\r\ntypedef KontentumFile =\r\n{\r\n\tvar id \t\t\t\t: Int; \r\n\tvar title\t\t\t: String; \r\n\tvar credit \t\t\t: String; \r\n\tvar description\t\t: String; \r\n\tvar file \t\t\t: String; \r\n\tvar filename \t\t: String; \r\n\tvar identifier \t\t: String; \r\n\tvar modified \t\t: String; \r\n\tvar type \t\t\t: String;\t\r\n}","package no.logic.kha.uix.network;\r\nimport haxe.Timer;\r\nimport haxe.io.Bytes;\r\nimport hx.ws.BinaryType;\r\nimport hx.ws.WebSocket;\r\n//import kha.Blob;\r\n#if kha_js\r\nimport js.html.Blob;\r\n#end\r\n\r\nclass LocalClient\r\n{\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\r\n\t//===================================================================================\r\n\t// Consts \r\n\t//-----------------------------------------------------------------------------------\r\n\t\r\n\t//===================================================================================\r\n\t// Properties \r\n\t//-----------------------------------------------------------------------------------\r\n\r\n\tpublic var\twsURL\t\t\t\t: String\t\t\t= \"ws://localhost:5000\";\r\n\tvar \t\twebsocket\t\t\t: WebSocket;\r\n\t\r\n\tpublic var isOpen\t\t\t\t: Bool;\r\n\tvar clientCheckConnection\t\t: Timer;\r\n\t\r\n\t// Singleton ////////////////////////////////////////////////////////////////////////\r\n  \t\r\n\tstatic var instance\t\t\t\t: LocalClient;\r\n\tpublic static var i(get, null)\t: LocalClient;\r\n\tstatic function get_i()\t\t\t: LocalClient \r\n\t{\r\n    \tif (instance == null) return instance = new LocalClient();\r\n      \telse return instance;\r\n\t}\r\n\tpublic function new(){}\r\n  \t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\t\r\n\tpublic function init(active:Bool=true)\r\n\t{\r\n\t\tif (active)\r\n\t\t{\r\n\t\t\topenClient();\r\n\t\t\tclientCheckConnection = new Timer(500);\r\n\t\t\tclientCheckConnection.run = checkClient;\r\n\t\t}\r\n\t}\r\n\t\r\n\tfunction checkClient() \r\n\t{\r\n\t\tif (websocket == null)\r\n\t\t{\r\n\t\t\topenClient();\r\n\t\t}\r\n\t}\r\n\t\r\n\tfunction openClient() \r\n\t{\r\n\t\ttry\r\n\t\t{\r\n\t\t\t#if (kha_krom)\r\n\t\t\t//var supportsWebSockets = untyped __js__('\"WebSocket\" in window || \"MozWebSocket\" in window');\r\n\t\t\t//var supportsWebSockets = untyped __js__('this');\r\n\t\t\t#elseif (kha_js)\r\n\t\t\twebsocket = new WebSocket(wsURL);\r\n            websocket.onopen = onOpen;\r\n            websocket.onmessage = onMessage;\r\n            websocket.onclose = onClose;\r\n            websocket.onerror = onError;\r\n\t\t\t#end\r\n        } \r\n\t\tcatch (err:Dynamic)\r\n\t\t{\r\n            trace(\"Exception creating websocket: \" + err);\r\n        }\t\t\r\n\t}\r\n\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\t\r\n\tprivate function onOpen()\r\n\t{\r\n\t\tisOpen = true;\r\n\t\tUIX.c.log(\"Websocket open : \"+wsURL );\r\n\t}\r\n\t\r\n\tprivate function onMessage(msg:Dynamic)\r\n\t{\r\n\t\tUIX.c.log(\"data received: \" + msg);\r\n\t\t\r\n\t\t#if kha_krom\r\n\t\t\r\n\t\t#elseif kha_js\r\n\t\tif (Std.is(msg.data, Blob))\r\n\t\t{\r\n\t\t\tvar bl:Blob = msg.data;\r\n\t\t\tuntyped __js__('bl.arrayBuffer().then(this.onReceivedArrayBuffer);');\r\n\t\t}\r\n\t\t#end\r\n\t}\r\n\t\r\n\t#if js\r\n\t@:keep\r\n\tprivate function onReceivedArrayBuffer(buffer:JsBuffer)\r\n\t{\r\n\t\tvar bb:Bytes = Bytes.ofData(buffer);\r\n\t\tUIX.dispatch(\"WS_REC\", bb);\r\n\t}\r\n\t#end\r\n\t\r\n\tprivate function onClose()\r\n\t{\r\n\t\t// UIX.c.log(\"Websocket connection closed!\");\r\n\t\tisOpen = false;\r\n\t\twebsocket = null;\r\n\t}\r\n\t\r\n\tprivate function onError(err)\r\n\t{\r\n\t\t// UIX.c.warning(\"Websocket creation error!\");\t\t\r\n\t}\r\n\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\t\r\n    public function send(data:Any):Bool\r\n\t{\r\n\t\t#if (kha_js)\t\t\r\n        if (websocket == null || !isOpen)\r\n            return false;\r\n\t\t\t\r\n\t\tif (Std.is(data, String))\r\n\t\t{\r\n\t\t\twebsocket.send(data);\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\telse if (Std.is(data, Bytes))\r\n\t\t{\r\n\t\t\tvar bm:Bytes = cast data;\r\n\t\t\twebsocket.sendBytes(bm);\r\n\t\t}\r\n\t\t#end\r\n\t\treturn false;\r\n    }\r\n\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n}\r\n","package no.logic.kha.uix.scene;\r\nimport haxe.Timer;\r\nimport kha.AssetError;\r\nimport kha.Assets;\r\nimport kha.Color;\r\nimport kha.FastFloat;\r\nimport kha.Image;\r\nimport kha.Scaler.TargetRectangle;\r\nimport kha.Video;\r\nimport kha.graphics2.Graphics;\r\nimport kha.graphics2.ImageScaleQuality;\r\nimport kha.math.Matrix2;\r\nimport no.logic.kha.uix.core.loading.UIXLoader;\r\nimport no.logic.kha.uix.debug.DebugInspector;\r\nimport no.logic.kha.uix.fla.Fla;\r\nimport no.logic.kha.uix.kontentum.Kontentum;\r\nimport no.logic.kha.uix.scene.Bitmap.ScaleMode;\r\nimport no.logic.kha.uix.scene.layout.Layout;\r\nimport no.logic.kha.uix.types.Rectangle;\r\nimport no.logic.kha.uix.utils.Convert;\r\n\r\nclass MediaObject extends Sprite\r\n{\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\r\n\t//===================================================================================\r\n\t// Static\r\n\t//-----------------------------------------------------------------------------------\r\n\t\r\n\t//===================================================================================\r\n\t// Consts \r\n\t//-----------------------------------------------------------------------------------\r\n\t\r\n\t//===================================================================================\r\n\t// Properties \r\n\t//-----------------------------------------------------------------------------------\r\n\t\t\r\n\tpublic var maintainAspectRatio\t\t\t: Bool\t\t\t\t\t= true;\r\n\tpublic var scaleMode\t\t\t\t\t: ScaleMode\t\t\t\t= ScaleMode.NONE;\r\n\tpublic var scaleQuality\t\t\t\t\t: ImageScaleQuality\t\t= ImageScaleQuality.High;\r\n\tpublic var corsProxy\t\t\t\t\t: Bool\t\t\t\t\t= false;\r\n\t\r\n\tpublic var source\t\t\t\t\t\t: String;\r\n\tvar mediaWidth\t\t\t\t\t\t\t: Null<Float>;\r\n\tvar mediaHeight\t\t\t\t\t\t\t: Null<Float>;\r\n\tvar fitRect\t\t\t\t\t\t\t\t: Rectangle;\r\n\t\r\n\t//===================================================================================\r\n\t// Declarations \r\n\t//-----------------------------------------------------------------------------------\r\n\t\r\n\tfunction mediaRenderComplete()\t{};\r\n\r\n\t//===================================================================================\r\n\t// Variables \r\n\t//-----------------------------------------------------------------------------------\t\t\r\n\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\r\n\tpublic function new(?data:Dynamic)\r\n\t{\r\n\t\tsuper(data);\r\n\t}\r\n\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\r\n\toverride function spriteRenderComplete()\r\n\t{\r\n\t\tsuper.spriteRenderComplete();\r\n\t\tmediaRenderComplete();\r\n\t}\r\n\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\t\r\n\toverride public function update()\r\n\t{\r\n\t\tif (isDisposed)\r\n\t\t\treturn;\r\n\t\t\t\r\n\t\tsuper.update();\r\n\t\tfitMediaElement();\r\n\t}\r\n\t\r\n\toverride public function render(g:Graphics) \r\n\t{\r\n\t\tif (isDisposed)\r\n\t\t\treturn;\r\n\t\t\t\r\n\t\tsuper.render(g);\r\n\t}\r\n\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\r\n\tfunction fitMediaElement() \r\n\t{\r\n\t\tif (mediaWidth != null && mediaHeight != null)\r\n\t\t{\r\n\t\t\tif ((width>0&&height>0&&scaleMode==ScaleMode.NONE)||scaleMode == ScaleMode.STRETCH)\r\n\t\t\t{\r\n\t\t\t\t_width = layoutHandler._width;\r\n\t\t\t\twidth == 0 ? _width = mediaWidth : _width = width;\r\n\t\t\t\t\t\r\n\t\t\t\tif (layoutHandler._height!=null)\r\n\t\t\t\t\t_height = layoutHandler._height;\r\n\t\t\t\telse\r\n\t\t\t\t\theight == 0 ? _height = mediaHeight : _height = height;\r\n\t\t\t\tfitRect = null;\r\n\t\t\t}\r\n\t\t\telse if (scaleMode == ScaleMode.NONE)\r\n\t\t\t{\r\n\t\t\t\t_width = mediaWidth;\r\n\t\t\t\t_height = mediaHeight;\r\n\t\t\t\t\t\r\n\t\t\t\tfitRect = null;\r\n\t\t\t}\r\n\t\t\telse if (scaleMode == ScaleMode.FILL || scaleMode == ScaleMode.FIT)\r\n\t\t\t{\r\n\t\t\t\tvar cw = width;\r\n\t\t\t\tif (layoutHandler._width!=null)\r\n\t\t\t\t\tcw = layoutHandler._width;\r\n\t\t\t\telse if (width == 0)\r\n\t\t\t\t\tcw = mediaWidth;\r\n\t\t\t\t\t\r\n\t\t\t\tvar ch = height;\r\n\t\t\t\tif (layoutHandler._height!=null)\r\n\t\t\t\t\tch = layoutHandler._height;\r\n\t\t\t\telse if (height == 0)\r\n\t\t\t\t\tch = mediaHeight;\r\n\t\t\t\r\n\t\t\t\t_width = cw;\r\n\t\t\t\t_height = ch;\r\n\t\t\t\t\r\n\t\t\t\tfitRect = Layout.fitIntoRect(mediaWidth, mediaHeight, cw, ch, scaleMode == ScaleMode.FILL);\t\r\n\t\t\t}\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t_width = width;\r\n\t\t\t_height = height;\t\t\t\r\n\t\t}\t\t\r\n\t}\r\n\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\t\r\n\toverride public function dispose()\r\n\t{\r\n\t\tif (!isDisposed)\r\n\t\t{\r\n\t\t\t//scaleQuality = null;\r\n\t\t\tscaleMode = null;\r\n\t\t\tsource = null;\r\n\t\t\tmediaWidth = null;\r\n\t\t\tmediaHeight = null;\r\n\t\t\tfitRect = null;\r\n\t\t\tsuper.dispose();\r\n\t\t}\r\n\t}\r\n\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n}\r\n","package no.logic.kha.uix.scene;\r\nimport kha.Color;\r\nimport kha.FastFloat;\r\nimport kha.Image;\r\nimport kha.Scaler.TargetRectangle;\r\nimport kha.graphics2.Graphics;\r\nimport kha.graphics2.ImageScaleQuality;\r\nimport kha.math.Matrix2;\r\nimport no.logic.kha.uix.core.loading.UIXLoader;\r\nimport no.logic.kha.uix.debug.DebugInspector;\r\nimport no.logic.kha.uix.fla.Fla;\r\nimport no.logic.kha.uix.kontentum.Kontentum;\r\nimport no.logic.kha.uix.scene.layout.Layout;\r\nimport no.logic.kha.uix.types.Object;\r\nimport no.logic.kha.uix.types.Rectangle;\r\nimport no.logic.kha.uix.utils.ColorUtils;\r\nimport no.logic.kha.uix.utils.Convert;\r\n\r\nenum ScaleMode\r\n{\r\n\tNONE;\r\n\tSTRETCH;\r\n\tFILL;\r\n\tFIT;\r\n}\r\n\r\nclass Bitmap extends MediaObject\r\n{\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\r\n\t//===================================================================================\r\n\t// Static\r\n\t//-----------------------------------------------------------------------------------\r\n\t\r\n\tpublic static var unloadIfNull\t\t\t: Bool\t\t\t= true;\r\n\tstatic public var useCacheAlways\t\t: Bool;\r\n\t\r\n\t//===================================================================================\r\n\t// Consts \r\n\t//-----------------------------------------------------------------------------------\r\n\t\r\n\t//===================================================================================\r\n\t// Properties \r\n\t//-----------------------------------------------------------------------------------\r\n\t\t\r\n\tpublic var image\t\t\t\t\t\t: Image;\r\n\t\t\r\n\t//===================================================================================\r\n\t// Declarations \r\n\t//-----------------------------------------------------------------------------------\r\n\t\r\n\tfunction bitmapRenderComplete()\t{};\r\n\r\n\t//public var bitmap\t\t: Image;\r\n\tvar loader\t\t\t\t: UIXLoader;\r\n\t\r\n\t//===================================================================================\r\n\t// Variables \r\n\t//-----------------------------------------------------------------------------------\t\t\r\n\t\r\n\tpublic function new(?data:Dynamic)\r\n\t{\r\n\t\tsuper(data);\r\n\t\t\r\n\t\t//if (bitmapData != null && Std.is(bitmapData, Image))\r\n\t\t\t//this.bitmapData = bitmapData;\r\n\t\texplicitSize = true;\r\n\t\tif (source != null && source != \"\")\r\n\t\t{\r\n\t\t\tload(source);\r\n\t\t}\r\n\t}\r\n\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\t\r\n\toverride public function setPropsFromData(data:Null<Dynamic>)\r\n\t{\r\n\t\tsuper.setPropsFromData(data);\r\n\t\tvar dataObj:Object = data;\r\n\t\tif (dataObj.hasOwnProperty(\"libraryItemName\"))\r\n\t\t{\r\n\t\t\tthis.libraryItemName = dataObj.libraryItemName;\r\n\t\t}\r\n\t}\r\n\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\r\n\toverride function spriteRenderComplete()\r\n\t{\r\n\t\tsuper.spriteRenderComplete();\r\n\t\tif (visible)\r\n\t\t\tdrawBitmap();\r\n\t\tbitmapRenderComplete();\r\n\t}\r\n\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\t\r\n\toverride function onBindAsset(value:Any) \r\n\t{\r\n\t\tif (Std.is(value, String))\r\n\t\t\tload(Kontentum.i.fileURL+value);\r\n\t}\r\n\t\r\n\toverride function onBindVar(value:Any) \r\n\t{\r\n\t\tif (Std.is(value, String))\r\n\t\t\tload(value);\r\n\t}\r\n\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\r\n\tpublic function load(file:String) \r\n\t{\r\n\t\t//autoTransition = true;\r\n\t\t//if (autoTransition)\r\n\t\t\t//this.alpha = 0;\r\n\t\t\t\r\n\t\tloader = new UIXLoader();\r\n\t\tloader.corsProxy = corsProxy;\r\n\t\tloader.onComplete = onImageLoaded;\r\n\t\tloader.onError = onImageLoadError;\r\n\t\tloader.loadImage(file);\r\n\t}\r\n\t\r\n\tfunction onImageLoaded(uxl:UIXLoader)\r\n\t{\r\n\t\tsource = uxl.source;\r\n\t\tUIX.c.report(\"Image \"+source+\" loaded in: \" + uxl.loadtime);\r\n\t\timage = uxl.contentIMAGE;\r\n\t\tloader.dispose();\r\n\t\tloader = null;\r\n\t}\r\n\t\r\n\tfunction onImageLoadError(uxl:UIXLoader)\r\n\t{\r\n\t\tDebugInspector.i.warning(\"Load error: \" + uxl.source);\r\n\t\tloader.dispose();\r\n\t\tloader = null;\r\n\t}\r\n\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\t\r\n\tpublic function setImage(i:Image)\r\n\t{\r\n\t\timage = i;\r\n\t}\r\n\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\r\n\tfunction drawBitmap()\r\n\t{\r\n\t\tif (image == null && libraryItemName==null)\r\n\t\t\treturn;\r\n\t\ttintColor.A = 256;\r\n\t\tif (tintMultiplier != null && tintColor!=null)\r\n\t\t\tg.color = ColorUtils.lerpColor(Color.White, tintColor, tintMultiplier, true);\r\n\t\telse\r\n\t\t\tg.color = 0xffffffff;\r\n\t\tg.opacity = _alpha;\r\n\t\t\r\n\t\t//trace(g.opacity);\r\n\t\t\t\r\n\t\tif (image != null)\r\n\t\t{\r\n\t\t\tvar oisq:ImageScaleQuality = g.imageScaleQuality;\r\n\t\t\tif (g.imageScaleQuality != scaleQuality)\r\n\t\t\t\tg.imageScaleQuality = scaleQuality;\r\n\t\t\t\t\r\n\t\t\t//g.mipmapScaleQuality = ImageScaleQuality.High;\r\n\t\t\t\t\r\n\t\t\tif (scaleMode == ScaleMode.NONE)\r\n\t\t\t{\r\n\t\t\t\tg.drawImage(image, 0, 0);\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tif (fitRect==null)\t\t\t\t\r\n\t\t\t\t\tg.drawScaledImage(image, 0, 0, _width, _height);\r\n\t\t\t\telse\r\n\t\t\t\t\tg.drawScaledImage(image, cast fitRect.x, cast fitRect.y, cast fitRect.width, cast fitRect.height);\r\n\t\t\t}\r\n\r\n\t\t\t//if (oisq!=null)\r\n\t\t\tg.imageScaleQuality = oisq;\r\n\t\t}\r\n\t}\r\n\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\t\r\n\toverride public function update()\r\n\t{\r\n\t\tif (image != null)\r\n\t\t{\r\n\t\t\tthis.mediaWidth = image.width;\r\n\t\t\tthis.mediaHeight = image.height;\r\n\t\t}\r\n\t\t\r\n\t\t//if (autoTransition && bitmap!=null && this.alpha < 1)\r\n\t\t\t//this.alpha += 0.01;\r\n\t\t\r\n\t\tsuper.update();\r\n\t}\r\n\t\r\n\toverride public function render(g:Graphics) \r\n\t{\r\n\t\tsuper.render(g);\r\n\t}\r\n\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\t\r\n\toverride function set_libraryItemName(value:String):String \r\n\t{\r\n\t\tif (libraryItemName!=null && Fla.l.bitmaps.exists(libraryItemName) && Fla.l.bitmaps.get(libraryItemName) != null)\r\n\t\t{\r\n\t\t\timage = Fla.l.bitmaps.get(libraryItemName);\r\n\t\t}\r\n\t\treturn libraryItemName = value;\r\n\t}\r\n\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\t\r\n\tpublic function unload()\r\n\t{\r\n\t\tif (image != null)\r\n\t\t{\r\n\t\t\timage.unload();\r\n\t\t\timage = null;\r\n\t\t}\r\n\t}\r\n\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\t\r\n\toverride public function dispose()\r\n\t{\r\n\t\tif (!isDisposed)\r\n\t\t{\r\n\t\t\tif (loader != null)\r\n\t\t\t{\r\n\t\t\t\tloader.dispose();\r\n\t\t\t\tloader = null;\r\n\t\t\t}\r\n\t\t\tif (image != null)\r\n\t\t\t{\r\n\t\t\t\t//image.unload();\r\n\t\t\t\timage = null;\r\n\t\t\t}\r\n\t\t\tsuper.dispose();\r\n\t\t}\r\n\t}\r\n\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n}\r\n","package no.logic.kha.uix.scene;\r\nimport kha.graphics2.Graphics;\r\nimport no.logic.kha.uix.fla.FlaTimeline;\r\nimport no.logic.kha.uix.scene.animation.Timeline.MetaFrame;\r\n\r\nclass SimpleButton extends Sprite\r\n{\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\r\n\t//===================================================================================\r\n\t// Static\r\n\t//-----------------------------------------------------------------------------------\r\n\t\r\n\t//===================================================================================\r\n\t// Consts \r\n\t//-----------------------------------------------------------------------------------\r\n\t\r\n\t//===================================================================================\r\n\t// Properties \r\n\t//-----------------------------------------------------------------------------------\r\n\t\t\r\n\t//===================================================================================\r\n\t// Declarations \r\n\t//-----------------------------------------------------------------------------------\r\n\t\r\n\tfunction buttonRenderComplete()\t{};\r\n\r\n\t//===================================================================================\r\n\t// Variables \r\n\t//-----------------------------------------------------------------------------------\t\t\r\n\t\r\n\tpublic function new(?data:Dynamic)\r\n\t{\r\n\t\tsuper(data);\r\n\t\tmouseEnabled = true;\r\n\t\tbuttonMode = true;\r\n\t\twidth = 256;\r\n\t\theight = 100;\r\n\t}\r\n\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\t\r\n\t//override public function setPropsFromData(data:Null<Dynamic>)\r\n\t//{\r\n\t\t//super.setPropsFromData(data);\r\n\t\t//var dataObj:Object = data;\r\n\t\t//if (dataObj.hasOwnProperty(\"libraryItemName\"))\r\n\t\t//{\r\n\t\t\t//this.libraryItemName = dataObj.libraryItemName;\r\n\t\t//}\r\n\t//}\r\n\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\r\n\toverride function spriteRenderComplete()\r\n\t{\r\n\t\tsuper.spriteRenderComplete();\r\n\t\t//drawButton();\r\n\t\tbuttonRenderComplete();\r\n\t}\r\n\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\t\r\n\toverride public function update()\r\n\t{\r\n\t\tsuper.update();\r\n\t}\r\n\t\r\n\toverride public function render(g:Graphics) \r\n\t{\r\n\t\tsuper.render(g);\r\n\t}\r\n\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\t\r\n\toverride public function setTimelineDataFromFLA(flaTimeline:FlaTimeline)\r\n\t{\r\n\t\tsuper.setTimelineDataFromFLA(flaTimeline);\r\n\t\tstop();\r\n\t\tfindHitBoxSize();\r\n\t}\r\n\t\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\t\r\n\tpublic function findHitBoxSize()\r\n\t{\r\n\t\tif (timeline != null && timeline.numFrames > 3)\r\n\t\t{\r\n\t\t\tif (timeline.layers != null && timeline.layers.length > 0 && timeline.layers[0].length > 3)\r\n\t\t\t{\r\n\t\t\t\tvar mf:MetaFrame = timeline.layers[0][4];\r\n\t\t\t\tif (mf.keyFrame != null)\r\n\t\t\t\t{\r\n\t\t\t\t\tfor (el in mf.keyFrame.elements) \r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tif (el != null && el.type==\"DOMShape\")\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tif (el.shapeData != null)\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\twidth = el.shapeData.rect.width;\r\n\t\t\t\t\t\t\t\theight = el.shapeData.rect.height;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\t\r\n\t//===================================================================================\r\n\t// Mouse Events \r\n\t//-----------------------------------------------------------------------------------\t\t\r\n\t\r\n\toverride function _mouseOver()\r\n\t{\r\n\t\tsuper._mouseOver();\r\n\t\tgoButtonFrame(2);\r\n\t}\r\n\t\r\n\toverride function _mouseOut()\r\n\t{\r\n\t\tsuper._mouseOut();\r\n\t\tgoButtonFrame(1);\r\n\t}\r\n\t\r\n\toverride function _click()\r\n\t{\r\n\t\tsuper._click();\r\n\t\t//goButtonFrame(3);\r\n\t}\r\n\t\r\n\toverride function _mouseDown()\r\n\t{\r\n\t\tsuper._mouseDown();\r\n\t\tgoButtonFrame(3);\r\n\t}\r\n\t\r\n\toverride function _mouseUp()\r\n\t{\r\n\t\tsuper._mouseUp();\r\n\t\tgoButtonFrame(2);\r\n\t}\r\n\t\r\n\toverride function _rightClick()\r\n\t{\r\n\t\tsuper._rightClick();\r\n\t}\r\n\t\r\n\toverride function _middleClick()\r\n\t{\r\n\t\tsuper._middleClick();\r\n\t}\r\n\t\r\n\tfunction goButtonFrame(bf:Int) \r\n\t{\r\n\t\tgotoAndStop(bf);\r\n\t}\r\n\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\t\r\n\toverride public function dispose()\r\n\t{\r\n\t\tif (!isDisposed)\r\n\t\t{\r\n\t\t\tsuper.dispose();\r\n\t\t}\r\n\t}\r\n\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n}\r\n","package no.logic.kha.uix.scene;\r\n\r\nimport kha.Assets;\r\nimport kha.Color;\r\nimport kha.FastFloat;\r\nimport kha.Font;\r\nimport kha.StringExtensions;\r\nimport kha.graphics2.Graphics;\r\nimport kha.graphics2.ImageScaleQuality;\r\nimport no.logic.kha.uix.app.App;\r\nimport no.logic.kha.uix.assets.EmbeddedAssets;\r\nimport no.logic.kha.uix.scene.DisplayObject.Align;\r\nimport no.logic.kha.uix.scene.styles.Styles;\r\nimport no.logic.kha.uix.utils.ColorUtils;\r\nimport no.logic.kha.uix.utils.Convert;\r\n\r\nclass Text extends Sprite\r\n{\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\r\n\t//===================================================================================\r\n\t// Consts \r\n\t//-----------------------------------------------------------------------------------\r\n\t\r\n\t//===================================================================================\r\n\t// Properties \r\n\t//-----------------------------------------------------------------------------------\r\n\r\n\tpublic var scaleQuality\t\t\t: ImageScaleQuality\t= ImageScaleQuality.High;\r\n\tpublic var text(default, set)\t: String;\r\n\tvar prevText\t\t\t\t\t: String;\r\n\t\r\n\tpublic var face\t\t\t\t\t: String;\r\n\tpublic var font(default, set)\t: Font;\r\n\tpublic var fontSize(default, set): Null<Int>;\r\n\tpublic var isMultiline\t\t\t: Bool\t\t\t\t= false;\r\n\tpublic var lineHeight\t\t\t: Null<Float>;\r\n\tpublic var lineSpacing\t\t\t: Null<Float>;\r\n\tpublic var lineType(default, set)\t\t\t\t: String;\r\n\tpublic var align\t\t\t\t: Align;\r\n\t\r\n\t//===================================================================================\r\n\t// Declarations \r\n\t//-----------------------------------------------------------------------------------\r\n\t\r\n\tfunction textRenderComplete()\t{};\r\n\r\n\t//===================================================================================\r\n\t// Variables \r\n\t//-----------------------------------------------------------------------------------\t\t\r\n\t\r\n\tvar multiLineTexts\t\t\t\t: Array<String>;\r\n\t\r\n\t@:noCompletion\r\n\tvar _text\t\t\t\t\t\t: String;\r\n\t\r\n\t@:noCompletion\r\n\tvar _font\t\t\t\t\t\t: Font\t\t\t\t= Styles.defaultFont;\r\n\r\n\t@:noCompletion\r\n\tvar _fontSize\t\t\t\t\t: Null<Int>\t\t\t= Styles.defaultFontSize;\t\r\n\tvar wrapText\t\t\t\t\t: Array<String>;\r\n\tvar wrapTextCh\t\t\t\t\t: Array<Array<Int>>;\r\n\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\r\n\tpublic function new(?data:Dynamic)\r\n\t{\r\n\t\tsuper(data);\r\n\t\t\r\n\t\t//if (text != null)\r\n\t\t\t//this.text = text;\r\n\t\t\r\n\t\tisDirty = true;\r\n\t\texplicitSize = true;\r\n\t\tclipping = false;\r\n\t}\r\n\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\r\n\toverride function spriteRenderComplete()\r\n\t{\r\n\t\tsuper.spriteRenderComplete();\r\n\t\tif (isDisposed)\r\n\t\t\treturn;\r\n\r\n\t\tif (visible)\r\n\t\t\tdrawText();\r\n\t\ttextRenderComplete();\r\n\t}\r\n\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\t\r\n\toverride function onBindAsset(value:Any) \r\n\t{\r\n\t\tif (text != null && text.indexOf(\"{#\") !=-1)\r\n\t\t{\r\n\t\t\t_text = Std.string(value);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t_text = Std.string(value);\r\n\t\t}\r\n\r\n\t\tisDirty = true;\r\n\t}\r\n\t\t\r\n\toverride function onBindVar(value:Any) \r\n\t{\r\n\t\tif (text != null && text.indexOf(\"{@\") !=-1)\r\n\t\t{\r\n\t\t\t_text = Std.string(value);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t_text = Std.string(value);\r\n\t\t}\r\n\t\t\t\r\n\t}\r\n\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\r\n\tfunction parseText() \r\n\t{\r\n\t\tif (text != null)\r\n\t\t{\r\n\t\t\tif (text.indexOf(\"{#\") !=-1)\r\n\t\t\t{\r\n\t\t\t\tvar regexp:EReg = ~/{#([^{#}]{1,})}/;\r\n\t\t\t\tif (regexp.match(text))\r\n\t\t\t\t{\r\n\t\t\t\t\tvar ac:String = regexp.matched(0);\r\n\t\t\t\t\tif (ac != null)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tac = ac.split(\"{#\").join(\"\").split(\"}\").join(\"\");\r\n\t\t\t\t\t\tasset = ac;\r\n\t\t\t\t\t\ttext = regexp.replace(text, UIX.getAsset(ac));\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse if (text.indexOf(\"{@\") !=-1)\r\n\t\t\t{\r\n\t\t\t\tvar bc:String = text.split(\"{@\").join(\"\").split(\"}\").join(\"\");\r\n\t\t\t\tthis.variable = bc;\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t\t_text = text;\r\n\t\t\t\t\r\n\t\t\tisDirty = true;\r\n\t\t}\r\n\t}\r\n\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\r\n\tfunction drawText()\r\n\t{\r\n\t\tif (_text == null)\r\n\t\t\treturn;\r\n\t\t\r\n\t\tif (style != null && Styles.fontStyles.exists(style))\r\n\t\t{\r\n\t\t\tvar fs:FontStyle = Styles.fontStyles.get(style);\r\n\t\t\tif (fs.font != null)\r\n\t\t\t\t_font = fs.font;\r\n\t\t\tif (fontSize == null && fs.fontSize != null)\r\n\t\t\t\t_fontSize = fs.fontSize;\r\n\t\t\tif (color == null && fs.color != null)\r\n\t\t\t\t_color = fs.color;\r\n\t\t\tif (fs.alpha != null)\r\n\t\t\t\talpha = fs.alpha;\r\n\t\t}\r\n\t\t//\r\n\t\tg.fontSize = _fontSize;\r\n\t\tg.opacity = _alpha;\r\n\t\tg.font = _font;\r\n\t\tif (tintMultiplier != null && tintColor!=null)\r\n\t\t\tg.color = ColorUtils.lerpColor(_color, tintColor, tintMultiplier);\r\n\t\telse\r\n\t\t\tg.color = _color;\r\n\t\t\r\n\t\tvar oisq = g.imageScaleQuality;\r\n\t\tif (oisq != scaleQuality)\r\n\t\t{\r\n\t\t\tg.imageScaleQuality = scaleQuality;\r\n\t\t}\t\t\r\n\t\t\r\n\t\tvar gf = g.font;\r\n\t\tvar gfs = g.fontSize;\r\n\t\tvar lw:FastFloat = 0;\r\n\t\t\r\n\t\tif (!isMultiline)\r\n\t\t{\r\n\t\t\tif (align == Align.center)\r\n\t\t\t{\r\n\t\t\t\tlw = gf.width(gfs, _text);\r\n\t\t\t\tg.drawString(_text, (_width * 0.5) - (lw * 0.5), 0);\r\n\t\t\t}\r\n\t\t\telse if (align == Align.right)\r\n\t\t\t{\r\n\t\t\t\tlw = gf.width(gfs, _text);\r\n\t\t\t\tg.drawString(_text, _width-lw, 0);\t\t\t\t\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t\tg.drawString(_text, 0, 0);\r\n\t\t}\r\n\t\telse if (wrapTextCh!=null)\r\n\t\t{\r\n\t\t\tvar mLineHeight:Float = lineHeight;\r\n\t\t\tif (lineSpacing != null)\r\n\t\t\t\tmLineHeight += lineSpacing;\r\n\t\t\t\t\r\n\t\t\tvar spaceWidth:Float = _font.width(_fontSize, \" \");\r\n\t\t\tvar swB:Float = spaceWidth;\r\n\t\t\tvar xpos:Float = 0;\r\n\t\t\tvar ypos:Float = 0;\r\n\t\t\tvar t:String = \"\";\r\n\t\t\tvar i:Int = 0;\r\n\t\t\tvar wordWidth:Float = 0;\r\n\t\t\tvar ta:Array<Int> = wrapTextCh[i];\r\n\t\t\t\r\n\t\t\tvar mLines:Array<Array<Dynamic>> = [[]];\r\n\t\t\tvar lineNr:Int = 0;\r\n\t\t\tvar lineWidths:Array<Float> = [];\r\n\t\t\twhile (i < wrapTextCh.length) \r\n\t\t\t{\r\n\t\t\t\tta = wrapTextCh[i];\r\n\t\t\t\twordWidth = _font.widthOfCharacters(_fontSize, ta, 0, ta.length);\r\n\t\t\t\tif (xpos+wordWidth > _width)\r\n\t\t\t\t{\r\n\t\t\t\t\tmLines.push([]);\r\n\t\t\t\t\tlineWidths.push(xpos-spaceWidth);\r\n\t\t\t\t\txpos = 0;\r\n\t\t\t\t}\r\n\t\t\t\tmLines[mLines.length-1].push(ta);\r\n\t\t\t\txpos += wordWidth + spaceWidth;\t\t\t\t\r\n\t\t\t\ti++;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tfor (i in 0...mLines.length) \r\n\t\t\t{\r\n\t\t\t\tvar lw:Int = mLines[i][0];\r\n\t\t\t\t\r\n\t\t\t\tif (align == Align.center)\r\n\t\t\t\t{\r\n\t\t\t\t\txpos = ((_width - lineWidths[i]) * 0.5);\r\n\t\t\t\t}\r\n\t\t\t\telse if (align == Align.right)\r\n\t\t\t\t{\r\n\t\t\t\t\txpos = _width-lineWidths[i];\r\n\t\t\t\t}\r\n\t\t\t\telse if (align == Align.justify)\r\n\t\t\t\t{\r\n\t\t\t\t\tspaceWidth = swB + (_width-lineWidths[i]) / (mLines[i].length-1);\r\n\t\t\t\t\txpos = 0;\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t\txpos = 0;\r\n\t\t\t\t\t\r\n\t\t\t\tfor (j in 0...mLines[i].length) \r\n\t\t\t\t{\r\n\t\t\t\t\tg.drawCharacters(mLines[i][j], 0, mLines[i][j].length, xpos, ypos);\r\n\t\t\t\t\twordWidth = _font.widthOfCharacters(_fontSize, mLines[i][j], 0, mLines[i][j].length);\r\n\t\t\t\t\txpos += wordWidth + spaceWidth;\r\n\t\t\t\t}\r\n\t\t\t\typos += mLineHeight;\r\n\t\t\t}\r\n\t\t}\r\n\t\t//if (oisq!=null)\r\n\t\tg.imageScaleQuality = oisq;\r\n\t\t\r\n\t}\r\n\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\t\r\n\toverride public function update()\r\n\t{\r\n\t\tif (isDisposed)\r\n\t\t\treturn;\r\n\r\n\t\tsuper.update();\r\n\t\t\r\n\t\tif (_text != null && _font != null && _fontSize!=null && isDirty)\r\n\t\t{\r\n\t\t\t//if (_text.indexOf(\"\\n\") !=-1)\r\n\t\t\t//{\r\n\t\t\t\t//isMultiline = true;\r\n\t\t\t//}\r\n\t\t\t//else\r\n\t\t\t\t//isMultiline = false;\r\n\t\t\t\t//\r\n\t\t\tif (!isMultiline)\r\n\t\t\t{\r\n\t\t\t\tif (width==0)\r\n\t\t\t\t\tthis.width = _font.width(_fontSize, _text);\r\n\t\t\t\tif (height==0)\r\n\t\t\t\t\tthis.height = _font.height(_fontSize);\r\n\t\t\t\tlineHeight = this.height;\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tif (isMultiline)\r\n\t\t\t\t{\r\n\t\t\t\t\t//wrapText = _text.split(\"-\").join(\" \").split(\" \");\r\n\t\t\t\t\twrapText = _text.split(\" \");\r\n\t\t\t\t\twrapTextCh = [];\r\n\t\t\t\t\tfor (i in 0...wrapText.length) \r\n\t\t\t\t\t{\r\n\t\t\t\t\t\twrapTextCh.push(StringExtensions.toCharArray(wrapText[i]));\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (lineHeight == null)\r\n\t\t\t\t\t\tlineHeight = _font.height(_fontSize);\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t//multiLineTexts = _text.split(\"\\n\");\r\n\t\t\t\t//lineHeight = _font.height(_fontSize);\r\n\t\t\t\t//this.height = lineHeight * multiLineTexts.length;\r\n\t\t\t\t//\r\n\t\t\t\t//var w:Float = 0;\r\n\t\t\t\t//for (i in 0...multiLineTexts.length) \r\n\t\t\t\t//{\r\n\t\t\t\t\t//var wl = _font.width(_fontSize, multiLineTexts[i]);\t\t\t\t\t\r\n\t\t\t\t\t//if (wl > w)\r\n\t\t\t\t\t\t//w = wl;\r\n\t\t\t\t//}\r\n\t\t\t\t//this.width = w;\r\n\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\tisDirty = false;\r\n\t\t}\r\n\t}\r\n\t\r\n\toverride public function render(g:Graphics) \r\n\t{\r\n\t\tsuper.render(g);\r\n\t}\r\n\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\t\r\n\toverride public function setPropsFromData(data:Null<Dynamic>)\r\n\t{\r\n\t\tsuper.setPropsFromData(data);\r\n\t\tif (data == null)\r\n\t\t\treturn;\r\n\t\t\t\r\n\t\tfor (field in Reflect.fields(data))\r\n\t\t{\r\n\t\t\tif (field == \"text\")\r\n\t\t\t\tthis.text = Reflect.field(data, field);\r\n\t\t\telse if (field == \"fontSize\")\r\n\t\t\t\tthis.fontSize = Reflect.field(data, field);\r\n\t\t\telse if (field == \"font\")\r\n\t\t\t\tthis.font = Reflect.field(data, field);\r\n\t\t\telse if (field == \"lineType\")\r\n\t\t\t\tthis.lineType = Reflect.field(data, field);\r\n\t\t}\r\n\t}\t\r\n\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\t\r\n\t@:noCompletion\r\n\tfunction set_text(value:String):String \r\n\t{\r\n\t\tif (value != text)\r\n\t\t{\r\n\t\t\ttext = value;\r\n\t\t\tparseText();\r\n\t\t\tisDirty = true;\r\n\t\t}\r\n\t\treturn text;\r\n\t}\r\n\t\r\n\t@:noCompletion\r\n\tfunction set_fontSize(value:Null<Int>):Null<Int> \r\n\t{\r\n\t\tif (value == null)\r\n\t\t\t_fontSize = Styles.defaultFontSize;\r\n\t\telse\r\n\t\t\t_fontSize = value;\r\n\t\t\t\r\n\t\tisDirty = true;\r\n\t\treturn _fontSize;\r\n\t}\r\n\t\r\n\t@:noCompletion\r\n\tfunction set_font(value:Font):Font \r\n\t{\r\n\t\tif (value == null)\r\n\t\t\t_font = Styles.defaultFont;\r\n\t\telse\r\n\t\t\t_font = value;\r\n\t\t\t\r\n\t\tisDirty = true;\r\n\t\treturn _font;\r\n\t}\r\n\r\n\t@:noCompletion\r\n\tfunction set_lineType(value:String):String \r\n\t{\r\n\t\tif (value != null)\r\n\t\t\tisMultiline = value.indexOf(\"multiline\")>=0;\r\n\t\t\t\r\n\t\treturn lineType = value;\r\n\t}\r\n\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\t\r\n\toverride public function dispose()\r\n\t{\r\n\t\tif (!isDisposed)\r\n\t\t{\r\n\t\t\t//scaleQuality = null;\r\n\t\t\ttext = null;\r\n\t\t\twrapText = null;\r\n\t\t\tprevText = null;\r\n\t\t\tfont = null;\r\n\t\t\talign = null;\r\n\t\t\t//isMultiline = null;\r\n\t\t\t//lineHeight = null;\r\n\t\t\t_text = null;\r\n\t\t\t_font = null;\r\n\t\t\t_fontSize = null;\r\n\t\t\tface = null;\r\n\t\t\t\r\n\t\t\tsuper.dispose();\r\n\t\t}\r\n\t}\r\n\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n}\r\n","package no.logic.kha.uix.scene.animation;\r\nimport haxe.ds.Map;\r\n\r\n/**\r\n * ...\r\n * @author ...\r\n */\r\nclass Ease \r\n{\r\n\tprivate static inline var PI_M2:Float = 6.28318530718;\r\n\tprivate static inline var PI_D2:Float = 1.57079632679;\r\n\t\r\n\tprivate static inline var svar:Float = 1.70158;\r\n\r\n\t/**\r\n\t * \r\n\t Method - finds the method by Animate-style name\r\n\t ---------------------------------------------------------------------------------\r\n\t t:Number — Specifies the current time, between 0 and duration inclusive.\r\n\t b:Number — Specifies the initial value of the animation property.\r\n\t c:Number — Specifies the total change in the animation property.\r\n\t d:Number — Specifies the duration of the motion.\r\n\t */\r\n\t public static var method:Map<String, (t:Float, b:Float, c:Float, d:Float)->Float> = [\r\n\t\t\"none\" \t\t\t\t=> easeLinear,\r\n\t\t\"quadIn\" \t\t\t=> easeInQuad,\r\n\t\t\"quadOut\" \t\t\t=> easeOutQuad,\r\n\t\t\"quadInOut\" \t\t=> easeInOutQuad,\r\n\t\t\"cubicIn\" \t\t\t=> easeInCubic,\r\n\t\t\"cubicOut\" \t\t\t=> easeOutCubic,\r\n\t\t\"cubicInOut\" \t\t=> easeInOutCubic,\r\n\t\t\"quartIn\" \t\t\t=> easeInQuart,\r\n\t\t\"quartOut\" \t\t\t=> easeOutQuart,\r\n\t\t\"quartInOut\" \t\t=> easeInOutQuart,\r\n\t\t\"quintIn\" \t\t\t=> easeInQuint,\r\n\t\t\"quintOut\" \t\t\t=> easeOutQuint,\r\n\t\t\"quintInOut\" \t\t=> easeInOutQuint,\r\n\t\t\"sineIn\" \t\t\t=> easeInSine,\r\n\t\t\"sineOut\" \t\t\t=> easeOutSine,\r\n\t\t\"sineInOut\" \t\t=> easeInOutSine,\r\n\t\t\"backIn\" \t\t\t=> easeInBack,\r\n\t\t\"backOut\" \t\t\t=> easeOutBack,\r\n\t\t\"backInOut\" \t\t=> easeInOutBack,\r\n\t\t\"circIn\" \t\t\t=> easeInCircular,\r\n\t\t\"circOut\" \t\t\t=> easeOutCircular,\r\n\t\t\"circInOut\" \t\t=> easeInOutCircular,\r\n\t\t\"bounceIn\" \t\t\t=> easeInBounce,\r\n\t\t\"bounceOut\" \t\t=> easeOutBounce,\r\n\t\t\"bounceInOut\"\t\t=> easeInOutBounce,\r\n\t\t\"elasticIn\" \t\t=> cast easeInElastic,\r\n\t\t\"elasticOut\" \t\t=> cast easeOutElastic,\r\n\t\t\"elasticInOut\"\t\t=> cast easeInOutElastic\r\n\t];\r\n\t\r\n\tpublic static var linear:(t:Float, b:Float, c:Float, d:Float)->Float = easeLinear;\r\n\tpublic static var none:(t:Float, b:Float, c:Float, d:Float)->Float = easeLinear;\r\n\t/**\r\n\t * \r\n\t Linear\r\n\t ---------------------------------------------------------------------------------\r\n\t t:Number — Specifies the current time, between 0 and duration inclusive.\r\n\t b:Number — Specifies the initial value of the animation property.\r\n\t c:Number — Specifies the total change in the animation property.\r\n\t d:Number — Specifies the duration of the motion.\r\n\t */\r\n\tpublic static function easeLinear (t:Float, b:Float, c:Float, d:Float):Float\r\n\t{\r\n\t\treturn c*t/d + b;\r\n\t}\r\n\r\n\t/*\r\n\tSine\r\n\t---------------------------------------------------------------------------------\r\n\t*/\r\n\tpublic static function easeInSine (t:Float, b:Float, c:Float, d:Float):Float\r\n\t{\r\n\t\treturn -c * Math.cos(t/d * PI_D2) + c + b;\r\n\t}\r\n\tpublic static function easeOutSine (t:Float, b:Float, c:Float, d:Float):Float\r\n\t{\r\n\t\treturn c * Math.sin(t/d * PI_D2) + b;\r\n\t}\r\n\tpublic static function easeInOutSine (t:Float, b:Float, c:Float, d:Float):Float\r\n\t{\r\n\t\treturn -c/2 * (Math.cos(Math.PI*t/d) - 1) + b;\r\n\t}\r\n\r\n\t/*\r\n\tQuintic\r\n\t---------------------------------------------------------------------------------\r\n\t*/\r\n\tpublic static function easeInQuint (t:Float, b:Float, c:Float, d:Float):Float\r\n\t{\r\n\t\treturn c*(t/=d)*t*t*t*t + b;\r\n\t}\r\n\tpublic static function easeOutQuint (t:Float, b:Float, c:Float, d:Float):Float\r\n\t{\r\n\t\treturn c*((t=t/d-1)*t*t*t*t + 1) + b;\r\n\t}\r\n\tpublic static function easeInOutQuint (t:Float, b:Float, c:Float, d:Float):Float\r\n\t{\r\n\t\tif ((t/=d/2) < 1) return c/2*t*t*t*t*t + b;\r\n\t\treturn c/2*((t-=2)*t*t*t*t + 2) + b;\r\n\t}\r\n\r\n\t/*\r\n\tQuartic\r\n\t---------------------------------------------------------------------------------\r\n\t*/\r\n\tpublic static function easeInQuart (t:Float, b:Float, c:Float, d:Float):Float\r\n\t{\r\n\t\treturn c*(t/=d)*t*t*t + b;\r\n\t}\r\n\tpublic static function easeOutQuart (t:Float, b:Float, c:Float, d:Float):Float\r\n\t{\r\n\t\treturn -c * ((t=t/d-1)*t*t*t - 1) + b;\r\n\t}\r\n\tpublic static function easeInOutQuart (t:Float, b:Float, c:Float, d:Float):Float\r\n\t{\r\n\t\tif ((t/=d/2) < 1) return c/2*t*t*t*t + b;\r\n\t\treturn -c/2 * ((t-=2)*t*t*t - 2) + b;\r\n\t}\r\n\r\n\t/*\r\n\tQuadratic\r\n\t---------------------------------------------------------------------------------\r\n\t*/\r\n\tpublic static function easeInQuad (t:Float, b:Float, c:Float, d:Float):Float\r\n\t{\r\n\t\treturn c*(t/=d)*t + b;\r\n\t}\r\n\tpublic static function easeOutQuad (t:Float, b:Float, c:Float, d:Float):Float\r\n\t{\r\n\t\treturn -c *(t/=d)*(t-2) + b;\r\n\t}\r\n\tpublic static function easeInOutQuad (t:Float, b:Float, c:Float, d:Float):Float\r\n\t{\r\n\t\tif ((t/=d/2) < 1) return c/2*t*t + b;\r\n\t\treturn -c/2 * ((--t)*(t-2) - 1) + b;\r\n\t}\r\n\r\n\t/*\r\n\tExponential\r\n\t---------------------------------------------------------------------------------\r\n\t*/\r\n\tpublic static function easeInExpo (t:Float, b:Float, c:Float, d:Float):Float\r\n\t{\r\n\t\treturn (t==0) ? b : c * Math.pow(2, 10 * (t/d - 1)) + b;\r\n\t}\r\n\tpublic static function easeOutExpo (t:Float, b:Float, c:Float, d:Float):Float\r\n\t{\r\n\t\treturn (t==d) ? b+c : c * (-Math.pow(2, -10 * t/d) + 1) + b;\r\n\t}\r\n\tpublic static function easeInOutExpo (t:Float, b:Float, c:Float, d:Float):Float\r\n\t{\r\n\t\tif (t==0) return b;\r\n\t\tif (t==d) return b+c;\r\n\t\tif ((t/=d/2) < 1) return c/2 * Math.pow(2, 10 * (t - 1)) + b;\r\n\t\treturn c/2 * (-Math.pow(2, -10 * --t) + 2) + b;\r\n\t}\r\n\r\n\t/*\r\n\tElastic\r\n\t---------------------------------------------------------------------------------\r\n\t*/\r\n\tpublic static function easeInElastic (t:Float, b:Float, c:Float, d:Float, a:Null<Float>, p:Null<Float>):Float\r\n\t{\r\n\t\tvar s:Float;\r\n\t\tif (t==0) return b;  if ((t/=d)==1) return b+c;  if (p==null) p=d*.3;\r\n\t\tif (a==null || a < Math.abs(c)) { a=c; s=p/4; }\r\n\t\telse s = p/PI_M2 * Math.asin (c/a);\r\n\t\treturn -(a*Math.pow(2,10*(t-=1)) * Math.sin( (t*d-s)*PI_M2/p )) + b;\r\n\t}\r\n\tpublic static function easeOutElastic (t:Float, b:Float, c:Float, d:Float, a:Null<Float>, p:Null<Float>):Float\r\n\t{\r\n\t\tvar s:Float;\r\n\t\tif (t==0) return b;  if ((t/=d)==1) return b+c;  if (p==null) p=d*.3;\r\n\t\tif (a==null || a < Math.abs(c)) { a=c; s=p/4; }\r\n\t\telse s = p/PI_M2 * Math.asin (c/a);\r\n\t\treturn (a*Math.pow(2,-10*t) * Math.sin( (t*d-s)*PI_M2/p ) + c + b);\r\n\t}\r\n\tpublic static function easeInOutElastic (t:Float, b:Float, c:Float, d:Float, a:Null<Float>, p:Null<Float>):Float\r\n\t{\r\n\t\tvar s:Float;\r\n\t\tif (t==0) return b;  if ((t/=d/2)==2) return b+c;  if (p==null) p=d*(.3*1.5);\r\n\t\tif (a==null || a < Math.abs(c)) { a=c; s=p/4; }\r\n\t\telse s = p/PI_M2 * Math.asin (c/a);\r\n\t\tif (t < 1) return -.5*(a*Math.pow(2,10*(t-=1)) * Math.sin( (t*d-s)*PI_M2/p )) + b;\r\n\t\treturn a*Math.pow(2,-10*(t-=1)) * Math.sin( (t*d-s)*PI_M2/p )*.5 + c + b;\r\n\t}\r\n\r\n\t/*\r\n\tCircular\r\n\t---------------------------------------------------------------------------------\r\n\t*/\r\n\tpublic static function easeInCircular (t:Float, b:Float, c:Float, d:Float):Float\r\n\t{\r\n\t\treturn -c * (Math.sqrt(1 - (t/=d)*t) - 1) + b;\r\n\t}\r\n\tpublic static function easeOutCircular (t:Float, b:Float, c:Float, d:Float):Float\r\n\t{\r\n\t\treturn c * Math.sqrt(1 - (t=t/d-1)*t) + b;\r\n\t}\r\n\tpublic static function easeInOutCircular (t:Float, b:Float, c:Float, d:Float):Float\r\n\t{\r\n\t\tif ((t/=d/2) < 1) return -c/2 * (Math.sqrt(1 - t*t) - 1) + b;\r\n\t\treturn c/2 * (Math.sqrt(1 - (t-=2)*t) + 1) + b;\r\n\t}\r\n\r\n\t/*\r\n\tBack\r\n\t---------------------------------------------------------------------------------\r\n\t*/\r\n\tpublic static function easeInBack (t:Float, b:Float, c:Float, d:Float):Float\r\n\t{\r\n\t\treturn c*(t/=d)*t*((svar+1)*t - svar) + b;\r\n\t}\r\n\tpublic static function easeOutBack (t:Float, b:Float, c:Float, d:Float):Float\r\n\t{\r\n\t\treturn c*((t=t/d-1)*t*((svar+1)*t + svar) + 1) + b;\r\n\t}\r\n\tpublic static function easeInOutBack (t:Float, b:Float, c:Float, d:Float):Float\r\n\t{\r\n\t\tvar sv = svar;\r\n\t\tif ((t/=d/2) < 1) return c/2*(t*t*(((sv*=(1.525))+1)*t - sv)) + b;\r\n\t\treturn c/2*((t-=2)*t*(((sv*=(1.525))+1)*t + sv) + 2) + b;\r\n\t}\r\n\r\n\t/*\r\n\tBounce\r\n\t---------------------------------------------------------------------------------\r\n\t*/\r\n\tpublic static function easeInBounce (t:Float, b:Float, c:Float, d:Float):Float\r\n\t{\r\n\t\treturn c - easeOutBounce (d-t, 0, c, d) + b;\r\n\t}\r\n\tpublic static function easeOutBounce (t:Float, b:Float, c:Float, d:Float):Float\r\n\t{\r\n\t\tif ((t/=d) < (1/2.75)) {\r\n\t\t\treturn c*(7.5625*t*t) + b;\r\n\t\t} else if (t < (2/2.75)) {\r\n\t\t\treturn c*(7.5625*(t-=(1.5/2.75))*t + .75) + b;\r\n\t\t} else if (t < (2.5/2.75)) {\r\n\t\t\treturn c*(7.5625*(t-=(2.25/2.75))*t + .9375) + b;\r\n\t\t} else {\r\n\t\t\treturn c*(7.5625*(t-=(2.625/2.75))*t + .984375) + b;\r\n\t\t}\r\n\t}\r\n\tpublic static function easeInOutBounce (t:Float, b:Float, c:Float, d:Float):Float\r\n\t{\r\n\t\tif (t < d/2) return easeInBounce (t*2, 0, c, d) * .5 + b;\r\n\t\telse return easeOutBounce (t*2-d, 0, c, d) * .5 + c*.5 + b;\r\n\t}\r\n\r\n\t/*\r\n\tCubic\r\n\t---------------------------------------------------------------------------------\r\n\t*/\r\n\tpublic static function easeInCubic (t:Float, b:Float, c:Float, d:Float):Float\r\n\t{\r\n\t\treturn c*(t/=d)*t*t + b;\r\n\t}\r\n\tpublic static function easeOutCubic (t:Float, b:Float, c:Float, d:Float):Float\r\n\t{\r\n\t\treturn c*((t=t/d-1)*t*t + 1) + b;\r\n\t}\r\n\tpublic static function easeInOutCubic (t:Float, b:Float, c:Float, d:Float):Float\r\n\t{\r\n\t\tif ((t/=d/2) < 1) return c/2*t*t*t + b;\r\n\t\treturn c/2*((t-=2)*t*t + 2) + b;\r\n\t}\r\n}","package no.logic.kha.uix.scene.animation;\r\nimport no.logic.kha.uix.fla.FlaElement;\r\nimport no.logic.kha.uix.fla.FlaFrame;\r\n\r\nclass Frame\r\n{\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\r\n\t//===================================================================================\r\n\t// Static\r\n\t//-----------------------------------------------------------------------------------\r\n\t\r\n\t//===================================================================================\r\n\t// Consts \r\n\t//-----------------------------------------------------------------------------------\r\n\t\r\n\t//===================================================================================\r\n\t// Properties \r\n\t//-----------------------------------------------------------------------------------\r\n\t\t\r\n\tpublic var index\t\t\t : Int;\r\n\tpublic var duration\t\t\t : Int\t\t\t\t\t = 1;\r\n\tpublic var name\t\t\t\t : String;\r\n\tpublic var labelType\t\t : String;\r\n\tpublic var keyMode\t\t\t : Int;\r\n\tpublic var actionScript\t\t : String;\r\n\tpublic var elements\t\t\t : Array<FlaElement>;\t\r\n\t\r\n\t//===================================================================================\r\n\t// Declarations \r\n\t//-----------------------------------------------------------------------------------\r\n\t\r\n\t//===================================================================================\r\n\t// Variables \r\n\t//-----------------------------------------------------------------------------------\t\t\r\n\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\t\r\n\tpublic function new(frameData:FlaFrame)\r\n\t{\r\n\t\tif (frameData != null)\r\n\t\t{\r\n\t\t\tindex = frameData.index;\r\n\t\t\tduration = frameData.duration;\r\n\t\t\tname = frameData.name;\r\n\t\t\tlabelType = frameData.labelType;\r\n\t\t\tkeyMode = frameData.keyMode;\r\n\t\t\t\r\n\t\t\tif (frameData.actionScript!=null)\r\n\t\t\t\tactionScript = frameData.actionScript;\r\n\t\t\t\t\r\n\t\t\tif (frameData.elements != null)\r\n\t\t\t{\r\n\t\t\t\telements = [];\r\n\t\t\t\tfor (eli in 0...frameData.elements.length) \r\n\t\t\t\t{\r\n\t\t\t\t\tgetFrameElementInfo(frameData.elements[eli]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\r\n\tfunction getFrameElementInfo(flaElement:FlaElement) \r\n\t{\r\n\t\tthis.elements.push(flaElement);\r\n\t}\r\n\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n}\r\n","package no.logic.kha.uix.scene.animation;\r\nimport haxe.macro.Type.Ref;\r\nimport kha.FastFloat;\r\nimport no.logic.kha.uix.fla.FlaElement;\r\nimport no.logic.kha.uix.fla.FlaFrame;\r\nimport no.logic.kha.uix.fla.FlaLayer;\r\nimport no.logic.kha.uix.fla.FlaTimeline;\r\nimport no.logic.kha.uix.script.As3Interpreter;\r\nimport no.logic.kha.uix.scene.DisplayObject;\r\nimport no.logic.kha.uix.scene.Sprite;\r\nimport no.logic.kha.uix.scene.animation.Ease;\r\nimport no.logic.kha.uix.scene.animation.Frame;\r\nimport no.logic.kha.uix.utils.StringUtils;\r\n\r\nclass Timeline\r\n{\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\r\n\t//===================================================================================\r\n\t// Static\r\n\t//-----------------------------------------------------------------------------------\r\n\t\r\n\t//===================================================================================\r\n\t// Consts \r\n\t//-----------------------------------------------------------------------------------\r\n\t\r\n\t//===================================================================================\r\n\t// Properties \r\n\t//-----------------------------------------------------------------------------------\r\n\t\r\n\tpublic var numFrames\t\t\t\t\t: Int\t\t\t\t\t\t= 0;\r\n\tpublic var name\t\t\t\t\t\t\t: String;\r\n\tpublic var currentFrame(default, set)\t: Int\t\t\t\t\t\t= 1;\r\n\tpublic var prevFrameNr\t\t\t\t\t: Int\t\t\t\t\t\t= 0;\r\n\tpublic var isPlaying\t\t\t\t\t: Bool;\t\r\n\tpublic var layers\t\t\t\t\t\t: Array<Array<MetaFrame>>;\r\n\tpublic var prevkeyFramesInLayer\t\t\t: Array<Frame>;\r\n\tpublic var parent\t\t\t\t\t\t: Sprite;\r\n\tpublic var frameLabels\t\t\t\t\t: Map<String,Int>;\r\n\r\n\t//===================================================================================\r\n\t// Declarations \r\n\t//-----------------------------------------------------------------------------------\r\n\t\r\n\t//===================================================================================\r\n\t// Variables \r\n\t//-----------------------------------------------------------------------------------\t\t\r\n\t\r\n\tvar flaTimeline\t\t\t: Null<FlaTimeline>;\r\n\tvar lastFrame\t\t\t: Int;\r\n\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\t\r\n\tpublic function new(parent:Sprite)\r\n\t{\r\n\t\tthis.parent = parent;\r\n\t}\r\n\r\n\t/////////////////////////////////////////////////////////////////////////////////////\t\r\n\t\r\n\tpublic function setFLAtimelineData(flaTimeline:FlaTimeline)\r\n\t{\r\n\t\tif (flaTimeline != null)\r\n\t\t{\r\n\t\t\tthis.flaTimeline = flaTimeline;\r\n\t\t\tinitTimeline();\r\n\t\t\tcheckCurrent();\r\n\t\t}\r\n\t}\r\n\t\r\n\tfunction initTimeline()\r\n\t{\r\n\t\tname = flaTimeline.name;\r\n\t\tlayers = [];\r\n\t\tprevkeyFramesInLayer = [];\r\n\t\tframeLabels = flaTimeline.frameLabels;\r\n\t\t\t\r\n\t\tvar kf:FlaFrame;\r\n\t\tvar currentKeyFrame:FlaFrame;\r\n\t\tvar numLayers:Int = flaTimeline.layers.length;\r\n\t\t\r\n\t\tfor (lNri in 0...numLayers) \r\n\t\t{\r\n\t\t\t//var lNri:Int = numLayers - lNr;\r\n\t\t\tvar layer:Array<MetaFrame> = [];\r\n\t\t\tlayer.resize(flaTimeline.layers[lNri].numFrames);\r\n\t\t\tprevkeyFramesInLayer.push(null);\r\n\t\t\t\r\n\t\t\tfor (kfNr in 0...flaTimeline.layers[lNri].keyFrames.length) \r\n\t\t\t{\r\n\t\t\t\tkf = flaTimeline.layers[lNri].keyFrames[kfNr];\r\n\t\t\t\tlayer[kf.index] = { keyFrame:new Frame(kf) }; \r\n\t\t\t\t\r\n\t\t\t\tif (kf.tweenType == \"motion\")\r\n\t\t\t\t{\r\n\t\t\t\t\tif (flaTimeline.layers[lNri].keyFrames.length >= kfNr)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tvar tweenTargetFrame:FlaFrame = flaTimeline.layers[lNri].keyFrames[kfNr+1];\r\n\t\t\t\t\t\tif (tweenTargetFrame != null && tweenTargetFrame.elements.length==1 && kf.elements.length==1) // tween only possible if 1 element in keyframe\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t//trace(\"motion : \" + kf.elements[0].x + \":\" + kf.elements[0].y + \" to \" + nf.elements[0].x + \":\" + nf.elements[0].y + \" duration: \"+kf.duration);\r\n\t\t\t\t\t\t\tvar tweenNumF:Float = kf.duration-2;\r\n\t\t\t\t\t\t\tvar tx:Float = (tweenTargetFrame.elements[0].x - kf.elements[0].x);\r\n\t\t\t\t\t\t\tvar ty:Float = (tweenTargetFrame.elements[0].y - kf.elements[0].y);\r\n\t\t\t\t\t\t\tvar sx:Float = kf.elements[0].x;\r\n\t\t\t\t\t\t\tvar sy:Float = kf.elements[0].y;\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tvar sAlpha:Null<Float> = kf.elements[0].alpha;\r\n\t\t\t\t\t\t\tvar tAlpha:Null<Float> = tweenTargetFrame.elements[0].alpha;\r\n\t\t\t\t\t\t\tif (sAlpha == null)\r\n\t\t\t\t\t\t\t\tsAlpha = 1;\r\n\t\t\t\t\t\t\tif (tAlpha == null)\r\n\t\t\t\t\t\t\t\ttAlpha = 1;\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tvar aX:Float = tAlpha-sAlpha;\r\n\t\t\t\t\r\n\t\t\t\t\t\t\tvar easeMethod:(t:Float, b:Float, c:Float, d:Float)->Float;\r\n\t\t\t\t\t\t\tif (kf.easeMethodName==null || !Ease.method.exists(kf.easeMethodName))\r\n\t\t\t\t\t\t\t\teaseMethod = Ease.method.get(\"none\");\r\n\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t\teaseMethod = Ease.method.get(kf.easeMethodName);\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tfor (dr in 1...kf.duration) \r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t//var mf:MetaFrame = { keyFrame:null, kfPointer:kf.index, tweenType:kf.tweenType, tweenX:sx += dx, tweenY:sy += dy }; \r\n\t\t\t\t\t\t\t\t//var mf:MetaFrame = { keyFrame:null, kfPointer:kf.index, tweenType:kf.tweenType, tweenX:easeMethod(dr-1,sx,tx,kf.duration-2), tweenY:easeMethod(dr-1,sy,ty,kf.duration-2) }; \r\n\t\t\t\t\t\t\t\tlayer[kf.index+dr] = { kfPointer:kf.index, tweenType:kf.tweenType, x:easeMethod(dr-1, sx, tx, tweenNumF), y:easeMethod(dr-1, sy, ty, tweenNumF), alpha:easeMethod(dr-1, sAlpha, aX, tweenNumF) };\r\n\t\t\t\t\t\t\t\t//layer[kf.index+dr] = { kfPointer:kf.index, tweenType:kf.tweenType, x:easeMethod(dr-1, sx, tx, tweenNumF), y:easeMethod(dr-1, sy, ty, tweenNumF) };\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\tfor (dr in 1...kf.duration) \r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tlayer[kf.index+dr] = { kfPointer:kf.index };\r\n\t\t\t\t\t}\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\tlayers.push(layer);\r\n\t\t}\r\n\t\t\r\n\t\t\r\n\t\t//numFrames = layers[0].length;\r\n\t\tnumFrames = flaTimeline.numFrames;\r\n\t\tif (numFrames > 1)\r\n\t\t\tplay();\r\n\t}\r\n\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\r\n\tpublic function update()\r\n\t{\r\n\t\tif (isPlaying)\r\n\t\t\tnextFrame();\r\n\t\t\r\n\t\tif (currentFrame != lastFrame)\r\n\t\t{\r\n\t\t\tgoto(currentFrame);\r\n\t\t}\r\n\t\tlastFrame = currentFrame;\t\t\r\n\t\t\r\n\t\tif (parent.name.indexOf(\"LTest\")!=-1)\r\n\t\t{\r\n\t\t\t//trace(currentFrame, numFrames);\r\n\t\t}\r\n\t}\r\n\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\r\n\tpublic function play()\r\n\t{\r\n\t\tif (numFrames > 1)\r\n\t\t\tisPlaying = true;\r\n\t}\r\n\t\r\n\tpublic function stop()\r\n\t{\r\n\t\tisPlaying = false;\r\n\t}\t\r\n\t\r\n\tpublic function gotoAndPlay(frameNrOrLabel:Dynamic):Int\r\n\t{\r\n\t\tif (numFrames < 2)\r\n\t\t\treturn currentFrame;\r\n\r\n\t\tplay();\r\n\r\n\t\tcurrentFrame = findFrameNr(frameNrOrLabel);\r\n\t\tcheckCurrent();\r\n\t\treturn currentFrame;\r\n\t}\r\n\t\r\n\tpublic function gotoAndStop(frameNrOrLabel:Dynamic):Int\r\n\t{\r\n\t\tif (numFrames < 2)\r\n\t\t\treturn currentFrame;\r\n\r\n\t\tstop();\r\n\t\t\r\n\t\tcurrentFrame = findFrameNr(frameNrOrLabel);\r\n\t\tcheckCurrent();\r\n\t\treturn currentFrame;\r\n\t}\r\n\t\r\n\tpublic function goto(frameNrOrLabel:Dynamic)\r\n\t{\r\n\t\tif (numFrames < 2)\r\n\t\t\treturn;\r\n\r\n\t\tcurrentFrame = findFrameNr(frameNrOrLabel);\r\n\t\tcheckCurrent();\r\n\t}\t\r\n\t\r\n\tpublic function nextFrame():Int\r\n\t{\r\n\t\tif (numFrames < 2)\r\n\t\t\treturn currentFrame;\r\n\t\t\r\n\t\tcurrentFrame++;\r\n\t\tcheckCurrent();\r\n\t\treturn currentFrame;\r\n\t}\r\n\t\r\n\tpublic function previousFrame():Int\r\n\t{\r\n\t\tif (numFrames < 2)\r\n\t\t\treturn currentFrame;\r\n\r\n\t\tcurrentFrame--;\r\n\t\tcheckCurrent();\r\n\t\treturn currentFrame;\r\n\t}\r\n\t\r\n\tpublic function gotoAndPlayRandom() \r\n\t{\r\n\t\tvar r:Int = 1 + Math.floor(Math.random() * numFrames);\r\n\t\tgotoAndPlay(r);\r\n\t}\r\n\t\r\n\tpublic function gotoAndStopRandom() \r\n\t{\r\n\t\tvar r:Int = 1+Math.floor(Math.random()*numFrames);\r\n\t\tgotoAndStop(r);\r\n\t}\r\n\t\r\n\tfunction checkCurrent()\r\n\t{\r\n\t\tif (prevFrameNr != currentFrame)\r\n\t\t{\r\n\t\t\tif ((currentFrame-1) >= numFrames)\r\n\t\t\t\tcurrentFrame = 1;\r\n\t\t\telse if (currentFrame<=0)\r\n\t\t\t\tcurrentFrame = 1;\r\n\t\t\t\r\n\t\t\tprocessFrame();\r\n\t\t\tprevFrameNr = currentFrame;\r\n\t\t}\r\n\t}\r\n\t\r\n\tfunction processFrame() \r\n\t{\r\n\t\tfor (lNr in 0...layers.length) \r\n\t\t{\r\n\t\t\tvar ll:Array<MetaFrame> = layers[lNr]; \r\n\t\t\tif ((currentFrame-1) < ll.length)\r\n\t\t\t{\r\n\t\t\t\tvar mkf:MetaFrame = ll[currentFrame];\r\n\t\t\t\tif (mkf != null)\r\n\t\t\t\t{\r\n\t\t\t\t\tvar nkd:Frame = null;\r\n\t\t\t\t\tif (Reflect.hasField(mkf,\"keyFrame\") && mkf.keyFrame != null)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tnkd = mkf.keyFrame;\r\n\t\t\t\t\t\tif (nkd != null && nkd.actionScript != null)\r\n\t\t\t\t\t\t\tAs3Interpreter.frameScriptEval(nkd.actionScript, this.parent);\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (Reflect.hasField(mkf,\"kfPointer\") && mkf.kfPointer != null)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tnkd = ll[mkf.kfPointer].keyFrame;\r\n\t\t\t\t\t\tif (mkf.tweenType == \"motion\")\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tvar elm:DisplayObject = parent.getChildByUUID(nkd.elements[0].uuid);\r\n\t\t\t\t\t\t\tif (elm != null)\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tif (Reflect.hasField(mkf,\"x\"))\r\n\t\t\t\t\t\t\t\t\telm.x = mkf.x;\r\n\t\t\t\t\t\t\t\tif (Reflect.hasField(mkf,\"y\"))\r\n\t\t\t\t\t\t\t\t\telm.y = mkf.y;\r\n\t\t\t\t\t\t\t\tif (Reflect.hasField(mkf, \"alpha\"))\r\n\t\t\t\t\t\t\t\t\telm.alpha = mkf.alpha;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (nkd != null)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tif (prevkeyFramesInLayer[lNr] == null || prevkeyFramesInLayer[lNr].index != nkd.index)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t//new keyframe found\r\n\t\t\t\t\t\t\tpopulateFromKeyframe(nkd,prevkeyFramesInLayer[lNr]);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse \r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t//frame uses keyframe from eariler\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tprevkeyFramesInLayer[lNr] = nkd;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\tinline function findFrameNr(frameNrOrLabel:Dynamic):Int \r\n\t{\r\n\t\tif (Std.is(frameNrOrLabel,Int))\r\n\t\t\treturn frameNrOrLabel;\r\n\t\telse if (StringUtils.isNumeric(frameNrOrLabel))\r\n\t\t\treturn Std.parseInt(frameNrOrLabel);\r\n\t\telse\r\n\t\t{\r\n\t\t\tvar frameLabel:String = frameNrOrLabel;\r\n\t\t\tif (frameLabels!=null && frameLabels.exists(frameLabel))\r\n\t\t\t\treturn frameLabels.get(frameLabel);\r\n\t\t\telse\r\n\t\t\t\treturn 0;\r\n\t\t}\r\n\t}\r\n\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\r\n\tfunction populateFromKeyframe(newFrame:Frame, oldFrame:Frame) \r\n\t{\r\n\t\tvar notRemoved:Array<String> = [];\r\n\t\t\r\n\t\tif (oldFrame != null && oldFrame.elements != null && parent!=null)\r\n\t\t{\r\n\t\t\tif (newFrame.elements.length > 0)\r\n\t\t\t{\r\n\t\t\t\tfor (ofNr in 0...oldFrame.elements.length) \r\n\t\t\t\t{\r\n\t\t\t\t\tif (oldFrame.elements[ofNr] != null)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tvar ud:String = oldFrame.elements[ofNr].uuid;\r\n\t\t\t\t\t\tfor (nfe in newFrame.elements) \r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tif (nfe.uuid == ud)\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tnotRemoved.push(ud);\r\n\t\t\t\t\t\t\t\t//trace(\"not removed:\", ud);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse if (oldFrame.elements[ofNr]!=null)\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tparent.removeChildByUUID(oldFrame.elements[ofNr].uuid);\r\n\t\t\t\t\t\t\t\t//trace(\"removed:\", oldFrame.elements[ofNr].uuid);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\t//trace(oldFrame.elements);\r\n\t\t\t\tfor (ofNr in 0...oldFrame.elements.length) \r\n\t\t\t\t{\r\n\t\t\t\t\tif (oldFrame.elements[ofNr]!= null)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tparent.removeChildByUUID(oldFrame.elements[ofNr].uuid);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tvar flaEl:FlaElement = null;\r\n\t\tfor (nfNr in 0...newFrame.elements.length) \r\n\t\t{\r\n\t\t\tflaEl = newFrame.elements[nfNr];\r\n\t\t\tif (flaEl != null)\r\n\t\t\t{\r\n\t\t\t\tif (notRemoved.indexOf(flaEl.uuid)==-1)\r\n\t\t\t\t{\r\n\t\t\t\t\tvar dispObj:DisplayObject = flaEl.instantiateDisplayObject();\r\n\t\t\t\t\tif (dispObj != null)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t//trace(dispObj.name, flaEl.parentFrame.parentLayer.name,flaEl.parentFrame.parentLayer.zIndex+flaEl.zIndex);\r\n\t\t\t\t\t\tif (parent != null)\r\n\t\t\t\t\t\t\t//parent.addChildAt(dispObj,flaEl.parentFrame.parentLayer.zIndex+flaEl.zIndex); //flaEl.parentFrame.parentLayer.zIndex+flaEl.zIndex\r\n\t\t\t\t\t\t\tparent.addChildAt(dispObj, flaEl.parentFrame.parentLayer.zIndex + flaEl.zIndex);\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t//parent.addChildForcedZ(dispObj,flaEl.parentFrame.parentLayer.zIndex+flaEl.zIndex); //flaEl.parentFrame.parentLayer.zIndex+flaEl.zIndex\r\n\t\t\t\t\t\t\t//parent.addChildAt(dispObj,flaEl.parentFrame.parentLayer.zIndex+flaEl.zIndex); //flaEl.parentFrame.parentLayer.zIndex+flaEl.zIndex\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t//trace(parent.children.length);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t//else\r\n\t\t\t\t\t\t//trace(\"NULL: \", newFrame.elements[enr].name);\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\tvar dpo:DisplayObject = parent.getChildByUUID(flaEl.uuid);\r\n\t\t\t\t\tif (dpo != null)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tdpo.x = flaEl.x;\r\n\t\t\t\t\t\tdpo.y = flaEl.y;\r\n\t\t\t\t\t\tif (flaEl.alpha == null)\r\n\t\t\t\t\t\t\tdpo.alpha = 1;\r\n\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\tdpo.alpha = flaEl.alpha;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\r\n\tfunction set_currentFrame(value:Int):Int \r\n\t{\r\n\t\tcurrentFrame = value;\r\n\t\tcheckCurrent();\r\n\t\treturn currentFrame;\r\n\t}\r\n\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\t\r\n\tpublic function dispose()\r\n\t{\r\n\t\tflaTimeline = null;\r\n\t\tname = null;\r\n\t\tlayers = null;\r\n\t\tprevkeyFramesInLayer = null;\r\n\t\tparent = null;\r\n\t\tframeLabels = null;\r\n\t}\r\n\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n}\r\n\r\ntypedef MetaFrame = \r\n{\r\n\t?kfPointer\t: Null<Int>,\r\n\t?keyFrame\t: Frame,\r\n\t?tweenType\t: String,\r\n\t?x\t\t\t: Null<Float>,\r\n\t?y\t\t\t: Null<Float>,\r\n\t?scaleX\t\t: Null<Float>,\r\n\t?scaleY\t\t: Null<Float>,\r\n\t?rotation\t: Null<Float>,\r\n\t?alpha\t\t: Null<Float>\r\n}","package no.logic.kha.uix.scene.layout;\r\nimport kha.FastFloat;\r\nimport no.logic.kha.uix.types.Rectangle;\r\nimport no.logic.kha.uix.utils.Convert;\r\n\r\nenum LayoutType\r\n{\r\n\tNONE;\r\n\tABSOLUTE;\r\n}\r\n\r\ntypedef LayoutData=\r\n{\r\n\t?x\t\t\t: Dynamic,\r\n\t?y\t\t\t: Dynamic,\r\n\t?width\t\t: Dynamic,\r\n\t?height\t\t: Dynamic\r\n}\r\n\r\nclass Layout\r\n{\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\r\n\t//===================================================================================\r\n\t// Consts \r\n\t//-----------------------------------------------------------------------------------\r\n\t\r\n\t//===================================================================================\r\n\t// Properties \r\n\t//-----------------------------------------------------------------------------------\r\n\r\n\tpublic var type \t\t: LayoutType\t\t= LayoutType.NONE;\r\n\t\r\n\tpublic var x\t\t\t: String;\r\n\tpublic var y\t\t\t: String;\r\n\tpublic var width\t\t: String;\r\n\tpublic var height\t\t: String;\r\n\t\r\n\tpublic var _x\t\t\t: Null<Float>;\r\n\tpublic var _y\t\t\t: Null<Float>;\r\n\tpublic var _width\t\t: Null<Float>;\r\n\tpublic var _height\t\t: Null<Float>;\r\n\r\n\t//===================================================================================\r\n\t// Declarations \r\n\t//-----------------------------------------------------------------------------------\r\n\t\r\n\t//===================================================================================\r\n\t// Variables \r\n\t//-----------------------------------------------------------------------------------\t\t\r\n\t\r\n\tpublic function new()\r\n\t{\r\n\t}\r\n\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\t\r\n\tpublic function update(displayObject:DisplayObject)\r\n\t{\r\n\t\tif (displayObject != null && displayObject.parent!=null)\r\n\t\t{\r\n\t\t\tif (x!=null)\r\n\t\t\t\t_x = Convert.toFloat(x, displayObject.parent.width);\r\n\t\t\tif (y!=null)\r\n\t\t\t\t_y = Convert.toFloat(y, displayObject.parent.height);\r\n\t\t\tif (width!=null)\r\n\t\t\t\t_width = Convert.toFloat(width, displayObject.parent.width);\r\n\t\t\tif (width!=null)\r\n\t\t\t\t_height = Convert.toFloat(height, displayObject.parent.height);\r\n\t\t}\r\n\t}\r\n\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\t\r\n\tstatic public function fitIntoRect(sourceWidth:Float, sourceHeight:Float, targetWidth:Float, targetHeight:Float, fill:Bool=false):Rectangle\r\n\t{\r\n\t\tvar r:Rectangle = new Rectangle();\r\n\t\tif (fill)\r\n\t\t{\r\n\t\t\tr.height = targetHeight;\r\n\t\t\tr.width = (r.height * sourceWidth) / sourceHeight;\r\n\t\t\t\r\n\t\t\tif (r.width < targetWidth)\r\n\t\t\t{\r\n\t\t\t\tr.width = targetWidth;\r\n\t\t\t\tr.height = (r.width * sourceHeight) / sourceWidth;\r\n\t\t\t}\r\n\t\t\tr.x = (targetWidth*0.5)-(r.width * 0.5);\r\n\t\t\tr.y = (targetHeight*0.5)-(r.height * 0.5);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tr.width = targetWidth;\r\n\t\t\tr.height = (r.width * sourceHeight) / sourceWidth;\r\n\t\t\tif (r.height > targetHeight)\r\n\t\t\t{\r\n\t\t\t\tr.height = targetHeight;\r\n\t\t\t\tr.width = (r.height * sourceWidth) / sourceHeight;\r\n\t\t\t}\r\n\t\t\tr.x = (targetWidth*0.5)-(r.width * 0.5);\r\n\t\t\tr.y = (targetHeight*0.5)-(r.height * 0.5);\r\n\t\t}\r\n\t\t\r\n\t\treturn r;\r\n\t}\t\r\n\t\t\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\t\r\n\tpublic function dispose()\r\n\t{\r\n\t\ttype = null;\r\n\t\tx = null;\r\n\t\ty = null;\r\n\t\twidth = null;\r\n\t\theight = null;\r\n\t\t_x = null;\r\n\t\t_y = null;\r\n\t\t_width = null;\r\n\t\t_height = null;\r\n\t}\r\n\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n}\r\n","package no.logic.kha.uix.scene.shapes;\r\nimport haxe.xml.Access;\r\nimport kha.Color;\r\nimport no.logic.kha.uix.fla.FlaElement;\r\nimport no.logic.kha.uix.scene.shapes.ShapeData;\r\nimport no.logic.kha.uix.types.Rectangle;\r\nimport trilateral.polys.Poly;\r\nimport trilateral.tri.TriangleArray;\r\n\r\nclass ShapeParser\r\n{\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\r\n\t//===================================================================================\r\n\t// Consts \r\n\t//-----------------------------------------------------------------------------------\r\n\t\r\n\t//===================================================================================\r\n\t// Properties \r\n\t//-----------------------------------------------------------------------------------\r\n\r\n\t//===================================================================================\r\n\t// Declarations \r\n\t//-----------------------------------------------------------------------------------\r\n\r\n\t//===================================================================================\r\n\t// Variables \r\n\t//-----------------------------------------------------------------------------------\t\t\r\n\t\r\n\tpublic function new()\r\n\t{\r\n\t}\r\n\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\t\r\n\tstatic public function parseShape(xa:Access):ShapeData\r\n\t{\r\n\t\tif (xa == null)\r\n\t\t\treturn null;\r\n\t\t\t\r\n\t\tvar shapeData:ShapeData = {type:xa.name,fillList:[],pathData:[],SVGPathFillsStyles:[],SVGPathStrokeStyles:[],rect:new Rectangle(),fillTriangles:[],edgeTriangles:[]};\r\n\t\t\r\n\t\tif (xa.name == FlaElement.SHAPE)\r\n\t\t{\r\n\t\t\tif (xa.hasNode.fills && xa.node.fills.hasNode.FillStyle)\r\n\t\t\t{\r\n\t\t\t\tfor (fs in xa.node.fills.x.elements()) \r\n\t\t\t\t{\r\n\t\t\t\t\tvar ind:Int = 1;\r\n\t\t\t\t\tvar fsxa = new Access(fs);\r\n\t\t\t\t\tif (fsxa.has.index)\r\n\t\t\t\t\t\tind = Std.parseInt(fsxa.att.index)-1;\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (fsxa.hasNode.SolidColor)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tif (fsxa.node.SolidColor.has.color)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tvar cCol:String = fsxa.node.SolidColor.att.color;\r\n\t\t\t\t\t\t\tcCol = cCol.split(\"#\").join(\"#FF\");\r\n\t\t\t\t\t\t\tshapeData.fillList[ind] = Color.fromString(cCol);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\tshapeData.fillList[ind] = Color.Black;\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\tif (fsxa.node.SolidColor.has.alpha)\r\n\t\t\t\t\t\t\tshapeData.fillList[ind].A = Std.parseFloat(fsxa.node.SolidColor.att.alpha);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (xa.hasNode.strokes && xa.node.strokes.hasNode.StrokeStyle)\r\n\t\t\t{\r\n\t\t\t\tfor (fs in xa.node.strokes.x.elements()) \r\n\t\t\t\t{\r\n\t\t\t\t\tvar ind:Int = 1;\r\n\t\t\t\t\tvar stxa = new Access(fs);\r\n\t\t\t\t\tif (stxa.has.index)\r\n\t\t\t\t\t\tind = Std.parseInt(stxa.att.index)-1;\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (stxa.hasNode.SolidStroke)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tvar stScaleMode:String = \"normal\";\r\n\t\t\t\t\t\tvar stWeight:Float = 1;\r\n\t\t\t\t\t\tvar stColor:Color = Color.Black;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif (stxa.node.SolidStroke.has.scaleMode)\r\n\t\t\t\t\t\t\tstScaleMode = stxa.node.SolidStroke.att.scaleMode;\r\n\t\t\t\t\t\tif (stxa.node.SolidStroke.has.weight)\r\n\t\t\t\t\t\t\tstWeight = Std.parseFloat(stxa.node.SolidStroke.att.weight);\r\n\t\t\t\t\t\tif (stxa.node.SolidStroke.hasNode.fill && stxa.node.SolidStroke.node.fill.hasNode.SolidColor)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tvar sc = stxa.node.SolidStroke.node.fill.node.SolidColor;\r\n\t\t\t\t\t\t\tif (sc.has.color)\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tvar cCol:String = sc.att.color;\r\n\t\t\t\t\t\t\t\tcCol = cCol.split(\"#\").join(\"#FF\");\r\n\t\t\t\t\t\t\t\tstColor = Color.fromString(cCol);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif (sc.has.alpha)\r\n\t\t\t\t\t\t\t\tstColor.A = Std.parseFloat(sc.att.alpha);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tshapeData.SVGPathStrokeStyles[ind] = { color:stColor, weight:stWeight, scaleMode:stScaleMode };\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (xa.hasNode.edges)\r\n\t\t\t{\r\n\t\t\t\tvar eCount:Int = 0;\r\n\t\t\t\tfor (ed in xa.node.edges.x.elements()) \r\n\t\t\t\t{\r\n\t\t\t\t\tif (ed != null)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tvar fsed = new Access(ed);\r\n\t\t\t\t\t\tif (fsed.has.edges)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tvar svgPath:Array<Dynamic> = createSVGPath(fsed.att.edges);\r\n\t\t\t\t\t\t\tvar dim:Rectangle = findDimensions(svgPath);\r\n\t\t\t\t\t\t\tdim.width += dim.x;\r\n\t\t\t\t\t\t\tdim.height += dim.y;\r\n\t\t\t\t\t\t\tif (dim.width > shapeData.rect.width)\r\n\t\t\t\t\t\t\t\tshapeData.rect.width = dim.width;\r\n\t\t\t\t\t\t\tif (dim.height > shapeData.rect.height)\r\n\t\t\t\t\t\t\t\tshapeData.rect.height = dim.height;\r\n\t\t\t\t\t\t\tshapeData.pathData[eCount] = { edges:createSVGEdge(svgPath) };\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tif (fsed.has.fillStyle1)\r\n\t\t\t\t\t\t\t\tshapeData.pathData[eCount].fillStyle = Std.parseInt(fsed.att.fillStyle1);\r\n\t\t\t\t\t\t\telse if (fsed.has.fillStyle0)\r\n\t\t\t\t\t\t\t\tshapeData.pathData[eCount].fillStyle = Std.parseInt(fsed.att.fillStyle0);\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tif (fsed.has.strokeStyle)\r\n\t\t\t\t\t\t\t\tshapeData.pathData[eCount].strokeStyle = Std.parseInt(fsed.att.strokeStyle);\r\n\r\n\t\t\t\t\t\t\teCount++;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if (xa.name == FlaElement.SHAPE_RECTANGLE || xa.name==FlaElement.SHAPE_OVAL)\r\n\t\t{\r\n\t\t\tif (xa.hasNode.fill && xa.node.fill.hasNode.SolidColor)\r\n\t\t\t{\r\n\t\t\t\tif (xa.node.fill.node.SolidColor.has.color)\r\n\t\t\t\t{\r\n\t\t\t\t\tvar cCol:String = xa.node.fill.node.SolidColor.att.color;\r\n\t\t\t\t\tcCol = cCol.split(\"#\").join(\"#FF\");\r\n\t\t\t\t\tshapeData.fillList[0] = Color.fromString(cCol);\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t\tshapeData.fillList[0] = Color.Black;\r\n\t\t\t\t\t\r\n\t\t\t\tif (xa.node.fill.node.SolidColor.has.alpha)\r\n\t\t\t\t\tshapeData.fillList[0].A = Std.parseFloat(xa.node.fill.node.SolidColor.att.alpha);\r\n\t\t\t}\r\n\t\t\tif (xa.hasNode.stroke && xa.node.stroke.hasNode.SolidStroke)\r\n\t\t\t{\r\n\t\t\t\tvar stScaleMode:String = \"normal\";\r\n\t\t\t\tvar stWeight:Float = 1;\r\n\t\t\t\tvar stColor:Color = Color.Black;\r\n\t\t\t\t\r\n\t\t\t\tif (xa.node.stroke.node.SolidStroke.has.scaleMode)\r\n\t\t\t\t\tstScaleMode = xa.node.stroke.node.SolidStroke.att.scaleMode;\r\n\t\t\t\tif (xa.node.stroke.node.SolidStroke.has.weight)\r\n\t\t\t\t\tstWeight = Std.parseFloat(xa.node.stroke.node.SolidStroke.att.weight);\r\n\t\t\t\tif (xa.node.stroke.node.SolidStroke.hasNode.fill && xa.node.stroke.node.SolidStroke.node.fill.hasNode.SolidColor)\r\n\t\t\t\t{\r\n\t\t\t\t\tvar sc = xa.node.stroke.node.SolidStroke.node.fill.node.SolidColor;\r\n\t\t\t\t\tif (sc.has.color)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tvar cCol:String = sc.att.color;\r\n\t\t\t\t\t\tif (cCol!=null) \r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tcCol = cCol.split(\"#\").join(\"#FF\");\r\n\t\t\t\t\t\t\tstColor = Color.fromString(cCol);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (sc.has.alpha)\r\n\t\t\t\t\t\tstColor.A = Std.parseFloat(sc.att.alpha);\r\n\t\t\t\t}\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\tshapeData.SVGPathStrokeStyles[0] = { color:stColor, weight:stWeight, scaleMode:stScaleMode };\r\n\t\t\t}\r\n\r\n\t\t\tvar otx:Float = 0;\r\n\t\t\tvar oty:Float = 0;\r\n\t\t\tvar ow:Float = 0;\r\n\t\t\tvar oh:Float = 0;\r\n\t\t\tvar ox:Float = 0;\r\n\t\t\tvar oy:Float = 0;\r\n\t\t\tvar otlr:Float = 0;\r\n\t\t\tvar otrr:Float = 0;\r\n\t\t\tvar oblr:Float = 0;\r\n\t\t\tvar obrr:Float = 0;\r\n\t\t\tif (xa.hasNode.matrix && xa.node.matrix.hasNode.Matrix)\r\n\t\t\t{\r\n\t\t\t\tvar xm = xa.node.matrix.node.Matrix;\r\n\t\t\t\tif (xa.has.tx)\r\n\t\t\t\t\totx = Std.parseFloat(xm.att.tx);\r\n\t\t\t\tif (xa.has.ty)\r\n\t\t\t\t\toty = Std.parseFloat(xm.att.ty);\r\n\t\t\t}\r\n\t\t\tif (xa.has.objectWidth)\r\n\t\t\t\tow = Std.parseFloat(xa.att.objectWidth);\r\n\t\t\tif (xa.has.objectHeight)\r\n\t\t\t\toh = Std.parseFloat(xa.att.objectHeight);\r\n\t\t\tif (xa.has.x)\r\n\t\t\t\tox = Std.parseFloat(xa.att.x);\r\n\t\t\tif (xa.has.y)\r\n\t\t\t\toy = Std.parseFloat(xa.att.y);\r\n\t\t\tif (xa.has.topLeftRadius)\r\n\t\t\t\totlr = Std.parseFloat(xa.att.topLeftRadius);\r\n\t\t\tif (xa.has.topRightRadius)\r\n\t\t\t\totrr = Std.parseFloat(xa.att.topRightRadius);\r\n\t\t\tif (xa.has.bottomLeftRadius)\r\n\t\t\t\toblr = Std.parseFloat(xa.att.bottomLeftRadius);\r\n\t\t\tif (xa.has.bottomRightRadius)\r\n\t\t\t\tobrr = Std.parseFloat(xa.att.bottomRightRadius);\r\n\t\t\t\t\r\n\t\t\tshapeData.rect = new Rectangle(0, 0, ow, oh);\r\n\t\t\tvar radius:Float = (otlr + otrr + oblr + obrr) / 4;\r\n\t\t\t\r\n\t\t\tif (shapeData.fillList[0] != null)\r\n\t\t\t{\r\n\t\t\t\tshapeData.fillTriangles[0] = new TriangleArray();\r\n\t\t\t\tif (xa.name == FlaElement.SHAPE_RECTANGLE)\r\n\t\t\t\t\tshapeData.fillTriangles[0].addArray(0, Poly.roundedRectangle( otx + ox, oty + oy, ow, oh, radius ) , 0);\r\n\t\t\t\telse if (xa.name == FlaElement.SHAPE_OVAL)\r\n\t\t\t\t\tshapeData.fillTriangles[0].addArray(0, Poly.ellipse( otx+ox +(ow*0.5), oty + oy+(oh*0.5), ow*0.5, oh*0.5) , 0);\r\n\t\t\t}\r\n\t\t\tif (shapeData.SVGPathStrokeStyles[0] != null)\r\n\t\t\t{\r\n\t\t\t\tshapeData.edgeTriangles[0] = new TriangleArray();\t\t\r\n\t\t\t\tif (xa.name == FlaElement.SHAPE_RECTANGLE)\r\n\t\t\t\t\tshapeData.edgeTriangles[0].addArray(0, Poly.roundedRectangleOutline( otx + ox, oty + oy, ow, oh, shapeData.SVGPathStrokeStyles[0].weight, radius ) , 0);\r\n\t\t\t\t//else if (xa.name == FlaElement.SHAPE_OVAL)\r\n\t\t\t\t\t//shapeData.edgeTriangles[0].addArray(0, Poly.ellipse( otx + ox, oty + oy, ow*0.5, oh*0.5) , 0);\r\n\t\t\t}\r\n\t\t\t\t\r\n\t\t\t//if (shapeData.SVGPathStrokeStyles.length==0 || shapeData.SVGPathStrokeStyles[0]==null)\r\n\t\t\t\t//shapeData.fillTriangles[0].addArray(0, Poly.roundedRectangle( otx + ox, oty + oy, ow, oh, radius ) , 0);\r\n\t\t\t//else\r\n\t\t\t\t//shapeData.fillTriangles[0].addArray(0, Poly.roundedRectangleOutline( otx + ox, oty + oy, ow, oh, shapeData.SVGPathStrokeStyles[0].weight, radius ) , 0);\r\n\t\t}\r\n\t\t\r\n\t\tif (xa.name == FlaElement.SHAPE)\r\n\t\t\tShapeRenderer.calculateTestShapes(shapeData);\r\n\t\t//else\r\n\t\t\t//trace(shapeData);\r\n\t\t\t\r\n\t\treturn shapeData;\r\n\t}\t\r\n\t\r\n\tstatic function findDimensions(svgPath:Array<Dynamic>):Rectangle \r\n\t{\r\n\t\tvar r:Rectangle = new Rectangle(99999999,99999999,0,0);\r\n\t\tfor (p in svgPath) \r\n\t\t{\r\n\t\t\tif (p != null)\r\n\t\t\t{\r\n\t\t\t\tif (p.x < r.x)\r\n\t\t\t\t\tr.x = p.x;\r\n\t\t\t\tif (p.y < r.y)\r\n\t\t\t\t\tr.y = p.y;\r\n\t\t\t\tif (p.x > r.width)\r\n\t\t\t\t\tr.width = p.x;\r\n\t\t\t\tif (p.y > r.height)\r\n\t\t\t\t\tr.height = p.y;\r\n\t\t\t}\r\n\t\t}\r\n\t\tr.width = r.width - r.x+1;\r\n\t\tr.height = r.height - r.y+1;\r\n\t\treturn r;\r\n\t}\r\n\t\t\r\n\tprivate static function createSVGPath(edges:String):Array<Dynamic> \r\n\t{\r\n\t\t//Må researche hva disse taggene betyr...\r\n\t\tedges = edges.split(\"S2\").join(\"\");\r\n\t\t\r\n\t\t\r\n\t\tvar edgePoints:Array<String> = edges.split(\"!\");\r\n\t\tif (edgePoints[0] == \"\")\r\n\t\t\tedgePoints.shift();\r\n\t\t\t\r\n\t\tvar scaler:Float = 0.05;\r\n\t\t\t\r\n\t\tvar path:Array<Dynamic> = [];\r\n\t\tfor (i in 0...edgePoints.length) \r\n\t\t{\r\n\t\t\tvar epdStr:Array<String> = edgePoints[i].split(\"|\");\r\n\t\t\tif (epdStr.length == 2)\r\n\t\t\t{\r\n\t\t\t\tvar epdStrA = epdStr[0].split(\" \");\r\n\t\t\t\tvar epdStrB = epdStr[1].split(\" \");\r\n\t\t\t\tpath.push({x:Std.parseFloat(epdStrA[0]) * scaler,y:Std.parseFloat(epdStrA[1]) * scaler});\r\n\t\t\t\tpath.push({x:Std.parseFloat(epdStrA[0]) * scaler,y:Std.parseFloat(epdStrA[1]) * scaler});\r\n\t\t\t\tpath.push({x:Std.parseFloat(epdStrB[0]) * scaler,y:Std.parseFloat(epdStrB[1]) * scaler});\r\n\t\t\t\tpath.push({x:Std.parseFloat(epdStrB[0]) * scaler,y:Std.parseFloat(epdStrB[1]) * scaler});\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn path;\r\n\t}\r\n\t\r\n\t\r\n\tprivate static function createSVGEdge(path:Array<Dynamic>):String\r\n\t{\r\n\t\tvar edgesSVG:String = \"\";\t\r\n\t\tedgesSVG += \"M \" + path[0].x + \" \" +path[0].y + \" \";\r\n\t\tvar p = 1;\r\n\t\twhile (p < path.length) \r\n\t\t{\r\n\t\t\tif (path[p-1].x == path[p].x && path[p-1].y == path[p].y)\r\n\t\t\t{\r\n\t\t\t\t//edgesSVG += \"M \" + path[p-1].x + \" \" +path[p-1].y + \" \";\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tedgesSVG += \"L \" + path[p].x + \" \" +path[p].y + \" \";\r\n\t\t\t}\r\n\t\t\tp++;\r\n\t\t}\r\n\t\tedgesSVG += \"Z\";\r\n\t\treturn edgesSVG;\r\n\t}\r\n\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n}\t\r\n/*                <DOMShape>\r\n                  <fills>\r\n                    <FillStyle index=\"1\">\r\n                      <SolidColor color=\"#000066\"/>\r\n                    </FillStyle>\r\n                  </fills>\r\n                  <edges>\r\n                    <Edge fillStyle1=\"1\" edges=\"!-40 -19|2080 -19!2080 -19|2080 1541!2080 1541|-40 1541!-40 1541|-40 -19\"/>\r\n                  </edges>\r\n                </DOMShape>\t\r\n*/\t\r\n\t\t\r\n\r\n\t\t//trace(edgesSVG);\r\n\t\t//\r\n        //var fillOnly = new FillOnly();\r\n        //drawFill( fillOnly, edgesSVG );\t\t","package trilateral.tri;\nimport trilateral.tri.Triangle;\nimport trilateral.geom.Algebra;\nimport trilateral.geom.Point;\n@:forward\nabstract TriangleArray(Array<Triangle>) from Array<Triangle> to Array<Triangle> {\n    inline public \n    function new( ?t: Array<Triangle> ) {\n        this = ( t == null )? getEmpty(): t;\n    }\n    public inline\n    function changeFillColorByID( id: Int, colorID: Int, ?startID: Int = 0, ?endID: Int = 0 ){\n        var tri: Triangle;\n        if( endID == 0 ) endID = this.length;\n        for( i in startID...endID ){\n            tri = this[ i ];\n            if( tri.id == id ) {\n                tri.colorID = colorID;\n                tri.colorA = colorID;\n                tri.colorB = colorID;\n                tri.colorC = colorID;\n            }\n        }\n    }\n    public inline static \n    function getEmpty(){\n        return new TriangleArray( new Array<Triangle>() );\n    }\n    public inline\n    function clear(){\n        this = new TriangleArray();\n    }\n    public inline\n    function pushPair( tp: TrianglePair ){\n        this[ this.length ] = tp.t0;\n        this[ this.length ] = tp.t1;\n    }\n    public inline\n    function drawTriangle( id: Int, p0: Point, p1: Point, p2: Point, colorID: Int ): Triangle {\n        var tri = new Triangle( id, p0, p1, p2, 0, colorID );\n        this[ this.length ] = tri;\n        return tri;\n    }\n    public inline\n    function add( id: Int, tri: Trilateral, colorID: Int ): Triangle {\n        var tri = Triangle.fromTrilateral( id, tri, 0, colorID );\n        this[ this.length ] = tri;\n        return tri;\n    }\n    public inline\n    function addPair( id: Int, tri: TrilateralPair, colorID: Int ) {\n        var tri0 = Triangle.fromTrilateral( id, tri.t0, 0, colorID );\n        this[ this.length ] = tri0;\n        var tri1 = Triangle.fromTrilateral( id, tri.t1, 0, colorID );\n        this[ this.length ] = tri1;\n        return tri;\n    }\n    public inline\n    function addArray( id: Int, triArr: Array<Trilateral>, colorID: Int ) {\n        var tri: Triangle;\n        for( t in triArr ) {\n            if( t != null ){\n                tri = Triangle.fromTrilateral( id, t, 0, colorID );\n                this[ this.length ] = tri;\n            }\n        }\n        return triArr;\n    }\n    public inline \n    function getTriangles( id: Int ): TriangleArray {\n        var out = new TriangleArray();\n        for( i in 0...this.length ) if( this[ i ].id == id ) out[ out.length ] = this[ i ];\n        return out;\n    }\n    public inline\n    function getHitTriangles( p: Point ): TriangleArray {\n        var out = new TriangleArray();\n        for( i in 0...this.length ) if( this[ i ].hitTest( p ) ) out[ out.length ] = this[ i ];\n        return out;\n    }\n}","package trilateral.tri;\nimport trilateral.tri.Triangle;\nimport trilateral.tri.Trilateral;\nimport trilateral.geom.Algebra;\n@:forward\nabstract TrilateralArray(Array<Trilateral>) from Array<Trilateral> to Array<Trilateral> {\n    inline public \n    function new( ?t: Array<Trilateral> ) {\n        this = ( t == null )? getEmpty(): t;\n    }\n    public inline\n    function reversed(): TrilateralArray {\n        this.reverse();\n        return this;\n    }\n    public inline static \n    function getEmpty(){\n        return new TrilateralArray( new Array<Trilateral>() );\n    }\n    public inline\n    function clear(){\n        this = new TrilateralArray();\n    }\n    public inline\n    function add( tri: Trilateral ){\n        this[ this.length ] = tri;\n    }\n    public inline\n    function addPair( tp: TrilateralPair ){\n        this[ this.length ] = tp.t0;\n        this[ this.length ] = tp.t1;\n    }\n    public inline\n    function addArray( triArr: Array<Trilateral> ) {\n        for( t in triArr ) this[ this.length ] = t;\n        return triArr;\n    }\n}","package trilateral.polys;\nimport trilateral.tri.Trilateral;\nimport trilateral.tri.TrilateralArray;\nimport trilateral.geom.Algebra;\nimport trilateral.pairs.Quad;\nimport trilateral.geom.Point;\nimport trilateral.angle.Angles;\n@:enum\nabstract PolySides( Int ) from Int to Int {\n    var triangle        = 3;\n    var quadrilateral   = 4;\n    var square          = 4;\n    var tetragon        = 4;\n    var pentagon        = 5;\n    var hexagon         = 6;\n    var heptagon        = 7;\n    var septagon        = 7;\n    var octagon         = 8;\n    var nonagon         = 9;\n    var enneagon        = 9;\n    var decagon         = 10;\n    var hendecagon      = 11;\n    var undecagon       = 11;\n    var dodecagon       = 12;\n    var triskaidecagon  = 13;\n    var tetrakaidecagon = 14;\n    var pentadecagon    = 15;\n    var hexakaidecagon  = 16;\n    var heptadecagon    = 17;\n    var octakaidecagon  = 18;\n    var enneadecagon    = 19;\n    var icosagon        = 20;\n    var triacontagon    = 30;\n    var tetracontagon   = 40;\n    var pentacontagon   = 50;\n    var hexacontagon    = 60;\n    var heptacontagon   = 70;\n    var octacontagon    = 80;\n    var enneacontagon   = 90;\n    var hectagon        = 100;\n    var chiliagon       = 1000;\n    var myriagon        = 10000;\n}\nclass Poly {\n    public static inline\n    function circle( ax: Float, ay: Float, radius: Float, ?sides: Int = 36, ?omega: Float = 0. ): TrilateralArray {\n        var out = new TrilateralArray();\n        var pi = Math.PI;\n        var theta = pi/2 + omega;\n        var step = pi*2/sides;\n        var bx: Float;\n        var by: Float;\n        var cx: Float;\n        var cy: Float;\n        for( i in 0...sides ){\n            bx = ax + radius*Math.sin( theta );\n            by = ay + radius*Math.cos( theta );\n            theta += step;\n            cx = ax + radius*Math.sin( theta );\n            cy = ay + radius*Math.cos( theta );\n            out.add( new Trilateral( ax, ay, bx, by, cx, cy ) );\n        }\n        return out;\n    }\n    public static inline \n    function ellipse( ax: Float, ay: Float, rx: Float, ry: Float, sides: Int = 36 ): TrilateralArray {\n        var out = new TrilateralArray();\n        var pi = Math.PI;\n        var theta = pi/2;\n        var step = pi*2/sides;\n        var bx: Float;\n        var by: Float;\n        var cx: Float;\n        var cy: Float;\n        for( i in 0...sides ){\n            bx = ax + rx*Math.sin( theta );\n            by = ay + ry*Math.cos( theta );\n            theta += step;\n            cx = ax + rx*Math.sin( theta );\n            cy = ay + ry*Math.cos( theta );\n            out.add( new Trilateral( ax, ay, bx, by, cx, cy ) );\n        }\n        return out;\n    }\n    /**\n     * When calling Pie you can specify the DifferencePreference of what should be colored in terms of the two angles provided.\n     * For example for drawing a packman shape you would want the use DifferencePreference.LARGE .\n     **/\n    public static inline\n    function pie( ax: Float, ay: Float, radius: Float, beta: Float, gamma: Float, prefer: DifferencePreference, ?mark: Int = 0, ?sides: Int = 36 ): TrilateralArray {\n        // choose a step size based on smoothness ie number of sides expected for a circle\n        var out = new TrilateralArray();\n        var pi = Math.PI;\n        var step = pi*2/sides;\n        var dif = Angles.differencePrefer( beta, gamma, prefer );\n        var positive = ( dif >= 0 );\n        var totalSteps = Math.ceil( Math.abs( dif )/step );\n        // adjust step with smaller value to fit the angle drawn.\n        var step = dif/totalSteps;\n        var angle: Float = beta;\n        var cx: Float;\n        var cy: Float;\n        var bx: Float = 0;\n        var by: Float = 0;\n        for( i in 0...totalSteps+1 ){\n            cx = ax + radius*Math.sin( angle );\n            cy = ay + radius*Math.cos( angle );\n            if( i != 0 ){ // start on second iteration after b is populated.\n                //var t = ( positive )? new Trilateral( ax, ay, bx, by, cx, cy ): new Trilateral( ax, ay, cx, cy, bx, by );\n                var t = new Trilateral( ax, ay, bx, by, cx, cy ); // don't need to reorder corners and Trilateral can do that!\n                out.add( t );\n                if( mark != 0 ) t.mark = mark;\n            }\n            angle = angle + step;\n            bx = cx;\n            by = cy;\n        }\n        return out;\n    }\n    /**\n     * When calling Pie you can specify the DifferencePreference of what should be colored in terms of the two angles provided.\n     * For example for drawing a packman shape you would want the use DifferencePreference.LARGE .\n     *\n          * External edge also added \n     *\n     **/\n    public static inline\n    function pieX( ax: Float, ay: Float, radius: Float, beta: Float, gamma: Float, prefer: DifferencePreference, edgePoly: Array<Float>, ?mark: Int = 0, ?sides: Int = 36 ): TrilateralArray {\n        // choose a step size based on smoothness ie number of sides expected for a circle\n        var out = new TrilateralArray();\n        var pi = Math.PI;\n        var step = pi*2/sides;\n        var dif = Angles.differencePrefer( beta, gamma, prefer );\n        var positive = ( dif >= 0 );\n        var totalSteps = Math.ceil( Math.abs( dif )/step );\n        // adjust step with smaller value to fit the angle drawn.\n        var step = dif/totalSteps;\n        var angle: Float = beta;\n        var cx: Float;\n        var cy: Float;\n        var bx: Float = 0;\n        var by: Float = 0;\n        var p2 = edgePoly.length;\n        for( i in 0...totalSteps+1 ){\n            cx = ax + radius*Math.sin( angle );\n            cy = ay + radius*Math.cos( angle );\n            edgePoly[ p2++ ] = cx;\n            edgePoly[ p2++ ] = cy;\n            if( i != 0 ){ // start on second iteration after b is populated.\n                //var t = ( positive )? new Trilateral( ax, ay, bx, by, cx, cy ): new Trilateral( ax, ay, cx, cy, bx, by );\n                var t = new Trilateral( ax, ay, bx, by, cx, cy ); // don't need to reorder corners and Trilateral can do that!\n                out.add( t );\n                if( mark != 0 ) t.mark = mark;\n            }\n            angle = angle + step;\n            bx = cx;\n            by = cy;\n        }\n        return out;\n    }\n    \n    public static inline\n    function ellpisePie( ax: Float, ay: Float, rx: Float, ry: Float, beta: Float, gamma: Float, prefer: DifferencePreference, ?mark: Int = 0, ?sides: Int = 36 ): TrilateralArray {\n        // choose a step size based on smoothness ie number of sides expected for a circle\n        var out = new TrilateralArray();\n        var pi = Math.PI;\n        var step = pi*2/sides;\n        var dif = Angles.differencePrefer( beta, gamma, prefer );\n        var positive = ( dif >= 0 );\n        var totalSteps = Math.ceil( Math.abs( dif )/step );\n        // adjust step with smaller value to fit the angle drawn.\n        var step = dif/totalSteps;\n        var angle: Float = beta;\n        var cx: Float;\n        var cy: Float;\n        var bx: Float = 0;\n        var by: Float = 0;\n        for( i in 0...totalSteps+1 ){\n            cx = ax + rx*Math.sin( angle );\n            cy = ay + ry*Math.cos( angle );\n            if( i != 0 ){ // start on second iteration after b is populated.\n                //var t = ( positive )? new Trilateral( ax, ay, bx, by, cx, cy ): new Trilateral( ax, ay, cx, cy, bx, by );\n                var t = new Trilateral( ax, ay, bx, by, cx, cy ); // don't need to reorder corners and Trilateral can do that!\n                out.add( t );\n                if( mark != 0 ) t.mark = mark;\n            }\n            angle = angle + step;\n            bx = cx;\n            by = cy;\n        }\n        return out;\n    }\n    /**\n     * Optimized Pie used in Contour, with dif pre-calculated\n     **/\n    public static inline\n    function pieDif( ax: Float, ay: Float, radius: Float, beta: Float, dif: Float, ?mark: Int = 0, ?sides: Int = 36 ): TrilateralArray {\n        // choose a step size based on smoothness ie number of sides expected for a circle\n        var out = new TrilateralArray();\n        var pi = Math.PI;\n        var step = pi*2/sides;\n        var positive = ( dif >= 0 );\n        var totalSteps = Math.ceil( Math.abs( dif )/step );\n        // adjust step with smaller value to fit the angle drawn.\n        var step = dif/totalSteps;\n        var angle: Float = beta;\n        var cx: Float;\n        var cy: Float;\n        var bx: Float = 0;\n        var by: Float = 0;\n        for( i in 0...totalSteps+1 ){\n            cx = ax + radius*Math.sin( angle );\n            cy = ay + radius*Math.cos( angle );\n            if( i != 0 ){ // start on second iteration after b is populated.\n                //var t = ( positive )? new Trilateral( ax, ay, bx, by, cx, cy ): new Trilateral( ax, ay, cx, cy, bx, by );\n                var t = new Trilateral( ax, ay, bx, by, cx, cy ); // don't need to reorder corners and Trilateral can do that!\n                out.add( t );\n                if( mark != 0 ) t.mark = mark;\n            }\n            angle = angle + step;\n            bx = cx;\n            by = cy;\n        }\n        return out;\n    }\n    /**\n     * Optimized Pie used in Contour, with dif pre-calculated\n     * External edge also added\n     **/\n    public static inline\n    function pieDifX( ax: Float, ay: Float, radius: Float, beta: Float, dif: Float, edgePoly: Array<Float>, ?mark: Int = 0, ?sides: Int = 36 ): TrilateralArray {\n        // choose a step size based on smoothness ie number of sides expected for a circle\n        var out = new TrilateralArray();\n        var pi = Math.PI;\n        var step = pi*2/sides;\n        var positive = ( dif >= 0 );\n        var totalSteps = Math.ceil( Math.abs( dif )/step );\n        // adjust step with smaller value to fit the angle drawn.\n        var step = dif/totalSteps;\n        var angle: Float = beta;\n        var cx: Float;\n        var cy: Float;\n        var bx: Float = 0;\n        var by: Float = 0;\n        var p2 = edgePoly.length;\n        //var temp = new Array<Float>();\n        var count = 0;\n        for( i in 0...totalSteps+1 ){\n            cx = ax + radius*Math.sin( angle );\n            cy = ay + radius*Math.cos( angle );\n            \n            if( i != 0 ){ // start on second iteration after b is populated.\n                //var t = ( positive )? new Trilateral( ax, ay, bx, by, cx, cy ): new Trilateral( ax, ay, cx, cy, bx, by );\n                var t = new Trilateral( ax, ay, bx, by, cx, cy ); // don't need to reorder corners and Trilateral can do that!\n                out.add( t );\n                if( mark != 0 ) t.mark = mark;\n                edgePoly[ p2++ ] = cx;\n                edgePoly[ p2++ ] = cy;\n                //temp[ count++ ] = cy;\n                //temp[ count++ ] = cx;\n            }\n            angle = angle + step;\n            bx = cx;\n            by = cy;\n        }\n        /*temp.reverse();\n        for( i in 0...temp.length ){\n            edgePoly[ p2++ ] = temp[ i ];\n        }*/\n        return out;\n    }\n    \n    public static inline\n    function arc( ax: Float, ay: Float, radius: Float, width: Float, beta: Float, gamma: Float, prefer: DifferencePreference, ?mark: Int = 0, ?sides: Int = 36 ): TrilateralArray {\n        // choose a step size based on smoothness ie number of sides expected for a circle\n        var out = new TrilateralArray();\n        var pi = Math.PI;\n        var step = pi*2/sides;\n        var dif = Angles.differencePrefer( beta, gamma, prefer );\n        var positive = ( dif >= 0 );\n        var totalSteps = Math.ceil( Math.abs( dif )/step );\n        // adjust step with smaller value to fit the angle drawn.\n        var step = dif/totalSteps;\n        var angle: Float = beta;\n        var cx: Float;\n        var cy: Float;\n        var bx: Float = 0;\n        var by: Float = 0;\n        var dx: Float = 0;\n        var dy: Float = 0;\n        var ex: Float = 0;\n        var ey: Float = 0;\n        var r2 = radius - width;\n        for( i in 0...totalSteps+1 ){\n            cx = ax + radius*Math.sin( angle );\n            cy = ay + radius*Math.cos( angle );\n            ex = ax + r2*Math.sin( angle );\n            ey = ay + r2*Math.cos( angle );\n            if( i != 0 ){ // start on second iteration after b and d are populated.\n                var t0 = new Trilateral( dx, dy, bx, by, cx, cy );\n                var t1 = new Trilateral( dx, dy, cx, cy, ex, ey );\n                out.add( t0 );\n                out.add( t1 );\n                if( mark != 0 ) {\n                    t0.mark = mark;\n                    t1.mark = mark;\n                }\n            }\n            angle = angle + step;\n            bx = cx;\n            by = cy;\n            dx = ex;\n            dy = ey;\n        }\n        return out;\n    }\n    // useful for debugging\n    public static inline\n    function circleMarked( ax: Float, ay: Float, radius: Float, mark: Int, ?sides: Int = 36 ,?omega: Float = 0. ): TrilateralArray {\n        var out = new TrilateralArray();\n        var pi = Math.PI;\n        var theta = pi/2 + omega;\n        var step = pi*2/sides;\n        var bx: Float;\n        var by: Float;\n        var cx: Float;\n        var cy: Float;\n        for( i in 0...sides ){\n            bx = ax + radius*Math.sin( theta );\n            by = ay + radius*Math.cos( theta );\n            theta += step;\n            cx = ax + radius*Math.sin( theta );\n            cy = ay + radius*Math.cos( theta );\n            var t = new Trilateral( ax, ay, bx, by, cx, cy );\n            out.add( t );\n            t.mark = mark;\n        }\n        return out;\n    }\n    public static inline\n    function circleOnSide( ax: Float, ay: Float, radius: Float, ?sides: Int = 36, ?omega: Float = 0. ): TrilateralArray {\n        var out = new TrilateralArray();\n        var pi = Math.PI;\n        var theta = pi/2;\n        var step = pi*2/sides;\n        theta -= step/2 + omega;\n        var bx: Float;\n        var by: Float;\n        var cx: Float;\n        var cy: Float;\n        for( i in 0...sides ){\n            bx = ax + radius*Math.sin( theta );\n            by = ay + radius*Math.cos( theta );\n            theta += step;\n            cx = ax + radius*Math.sin( theta );\n            cy = ay + radius*Math.cos( theta );\n            out.add( new Trilateral( ax, ay, bx, by, cx, cy ) );\n        }\n        return out;\n    }\n    public static inline \n    function ellipseOnSide( ax: Float, ay: Float, rx: Float, ry: Float, sides: Int = 36 ): TrilateralArray {\n        var out = new TrilateralArray();\n        var pi = Math.PI;\n        var theta = pi/2;\n        var step = pi*2/sides;\n        theta -= step/2;\n        var bx: Float;\n        var by: Float;\n        var cx: Float;\n        var cy: Float;\n        for( i in 0...sides ){\n            bx = ax + rx*Math.sin( theta );\n            by = ay + rx*Math.cos( theta );\n            theta += step;\n            cx = ax + rx*Math.sin( theta );\n            cy = ay + ry*Math.cos( theta );\n            out.add( new Trilateral( ax, ay, bx, by, cx, cy ) );\n        }\n        return out;\n    }\n    public static inline\n    function shape( x: Float, y: Float, radius: Float, p: PolySides, ?omega: Float = 0. ){\n        return if( p & 1 == 0 ){\n            circleOnSide( x, y, radius, p, omega );\n        } else {\n            circle( x, y, radius, p, omega );\n        }\n    }\n    public static inline\n    function roundedRectangle( x: Float, y: Float, width: Float, height: Float, radius: Float ): TrilateralArray {\n        var out = new TrilateralArray();\n        // zero = down\n        // clockwise seems to be wrong way round !\n        // Needs fixing in Contour so can't change yet!\n        // so all the angles are currently wrong!!\n        var pi = Math.PI;\n        var pi_2 = Math.PI/2;\n        var ax = x + radius;\n        var ay = y + radius;\n        var bx = x + width - radius;\n        var by = y + radius;\n        var cx = bx;\n        var cy = y + height - radius;\n        var dx = ax;\n        var dy = cy;\n        out.addPair( Quad.rectangle( ax, y, width - radius*2, height ) );\n        var dimY = height - 2*radius;\n        out.addPair( Quad.rectangle( x,  ay, radius, dimY ) );\n        out.addPair( Quad.rectangle( bx, by, radius, dimY ) );\n        out.addArray( pie( ax, ay, radius, -pi, -pi_2, CLOCKWISE ) );\n        out.addArray( pie( bx, by, radius, pi_2, pi,   CLOCKWISE ) );\n        out.addArray( pie( cx, cy, radius, pi_2, 0, ANTICLOCKWISE ) );\n        out.addArray( pie( dx, dy, radius, 0, -pi_2,ANTICLOCKWISE ) );\n        return out;\n    }\n    public static inline\n    function roundedRectangleOutline( x: Float, y: Float, width: Float, height: Float, thick: Float, radius: Float ): TrilateralArray {\n        var out = new TrilateralArray();\n        // zero = down\n        // clockwise seems to be wrong way round !\n        // Needs fixing in Contour so can't change yet!\n        // so all the angles are currently wrong!!\n        var pi = Math.PI;\n        var pi_2 = Math.PI/2;\n        var ax = x + radius;\n        var ay = y + radius;\n        var bx = x + width - radius;\n        var by = y + radius;\n        var cx = bx;\n        var cy = y + height - radius;\n        var dx = ax;\n        var dy = cy;\n        out.addPair( Quad.rectangle( ax, y, width - radius*2, thick ) );\n        out.addPair( Quad.rectangle( ax, y + height - thick, width - radius*2, thick ) );\n        var dimY = height - 2*radius;\n        out.addPair( Quad.rectangle( x,  ay, thick, dimY ) );\n        out.addPair( Quad.rectangle( x + width - thick, by, thick, dimY ) );\n        out.addArray( arc( ax, ay, radius, thick, -pi, -pi_2, CLOCKWISE ) );\n        out.addArray( arc( bx, by, radius, thick, pi_2, pi,   CLOCKWISE ) );\n        out.addArray( arc( cx, cy, radius, thick, pi_2, 0, ANTICLOCKWISE ) );\n        out.addArray( arc( dx, dy, radius, thick, 0, -pi, ANTICLOCKWISE ) );\n        return out;\n    }\n}","package no.logic.kha.uix.scene.shapes;\r\nimport hxPolyK.PolyK;\r\nimport kha.Color;\r\nimport kha.graphics2.Graphics;\r\nimport no.logic.kha.uix.fla.FlaElement;\r\nimport no.logic.kha.uix.scene.shapes.ShapeData;\r\nimport no.logic.kha.uix.utils.ColorUtils;\r\nimport org.poly2tri.VisiblePolygon;\r\nimport trilateral.justPath.SvgPath;\r\nimport trilateral.justPath.transform.ScaleContext;\r\nimport trilateral.justPath.transform.ScaleTranslateContext;\r\nimport trilateral.path.Base;\r\nimport trilateral.path.Crude;\r\nimport trilateral.path.FillOnly;\r\nimport trilateral.path.Fine;\r\nimport trilateral.path.FineOverlap;\r\nimport trilateral.path.Medium;\r\nimport trilateral.path.MediumOverlap;\r\nimport trilateral.path.RoundEnd;\r\nimport trilateral.tri.Triangle;\r\nimport trilateral.tri.TriangleArray;\r\n\r\nclass ShapeRenderer\r\n{\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\t//\r\n\t//var shape: Array<Float> = [ 55, 55, 145, 55, 235, 100, 325, 55, 415, 55, 415, 145, 370, 235, 415, 320, 415, 410, 325, 410, 235, 365, 145, 410, 55, 410, 55, 320, 105, 235, 55, 145 ];\r\n\t//var shape2: Array<Float> = [115,235,235,355,360,235,235,110];\t\r\n\t//\r\n\t//var appColors = [ Color.Red, Color.Blue, Color.Green, Color.Yellow, Color.Purple, Color.White, Color.Orange ];\r\n    //var triangles = new TriangleArray();\t\r\n\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\r\n\tstatic public function drawTestShape(g2:Graphics, shapeData:ShapeData, tintColor:Color=Color.White, tintMultiplier:Float=0)\r\n\t{\r\n\t\tg2.color = tintColor;\r\n\t\tif (shapeData.type == FlaElement.SHAPE)\r\n\t\t{\r\n\t\t\tfor (i in 0...shapeData.pathData.length) \r\n\t\t\t{\r\n\t\t\t\tif (shapeData.fillTriangles!=null)\r\n\t\t\t\t\trenderTriangles(g2, shapeData.fillTriangles[i], shapeData.fillList,tintColor,tintMultiplier);\t\t\t\r\n\t\t\t}\t\t\r\n\t\t\t\r\n\t\t\tfor (i in 0...shapeData.pathData.length) \r\n\t\t\t{\r\n\t\t\t\tif (shapeData.edgeTriangles!= null && shapeData.edgeTriangles.length>0)\r\n\t\t\t\t\trenderEdges(g2, shapeData.edgeTriangles[i], shapeData.SVGPathStrokeStyles[i],tintColor,tintMultiplier);\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if (shapeData.type == FlaElement.SHAPE_RECTANGLE || shapeData.type == FlaElement.SHAPE_OVAL)\r\n\t\t{\r\n\t\t\tif (shapeData.fillTriangles!=null)\r\n\t\t\t\trenderShape(g2, shapeData.fillTriangles[0], shapeData.fillList[0],tintColor,tintMultiplier);\t\t\t\r\n\t\t\tif (shapeData.edgeTriangles!=null)\r\n\t\t\t\trenderShape(g2, shapeData.edgeTriangles[0], shapeData.SVGPathStrokeStyles[0].color,tintColor,tintMultiplier);\t\t\t\r\n\t\t\t\t\r\n\t\t\t//trace(shapeData.SVGPathStrokeStyles);\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n    static inline function renderShape( g2:Graphics, triangles:TriangleArray, color:Color, tintColor:Color=Color.White, tintMultiplier:Float=0)\r\n\t{\r\n        var tri:Triangle;\r\n        if( triangles.length == 0 ) return;\r\n        var triangles = triangles;\r\n        var s = 1;\r\n        var ox = 1;\r\n        var oy = 1;\r\n\t\tif (tintMultiplier>0)\r\n\t\t\tcolor = ColorUtils.lerpColor(color, tintColor, tintMultiplier);\r\n        for( i in 0...triangles.length ){\r\n            tri = triangles[ i ];\r\n\t\t\tg2.color = color;\r\n            g2.fillTriangle( ox + tri.ax * s, oy + tri.ay * s\r\n                        ,   ox + tri.bx * s, oy + tri.by * s\r\n                        ,   ox + tri.cx * s, oy + tri.cy * s );\r\n        }\r\n    }\t \r\n\t\r\n\tstatic inline function renderTriangles( g2:Graphics, triangles:TriangleArray, colorList:Array<Color>, tintColor:Color=Color.White, tintMultiplier:Float=0 ){\r\n        var tri:Triangle;\r\n        if( triangles.length == 0 ) return;\r\n        var triangles = triangles;\r\n        var s = 1;\r\n        var ox = 1;\r\n        var oy = 1;\r\n        for( i in 0...triangles.length ){\r\n            tri = triangles[ i ];\r\n\t\t\tif (tintMultiplier>0)\r\n\t\t\t\tg2.color = ColorUtils.lerpColor(colorList[tri.colorID], tintColor, tintMultiplier);\r\n\t\t\telse\r\n\t\t\t\tg2.color = colorList[tri.colorID];\r\n            g2.fillTriangle( ox + tri.ax * s, oy + tri.ay * s\r\n                        ,   ox + tri.bx * s, oy + tri.by * s\r\n                        ,   ox + tri.cx * s, oy + tri.cy * s );\r\n        }\r\n    }\t\t\r\n\r\n    static inline function renderEdges( g2:Graphics, triangles:TriangleArray, strokeStyle:StrokeStyle, tintColor:Color=Color.White, tintMultiplier:Float=0 ){\r\n        var tri:Triangle;\r\n        if( triangles.length == 0 ) return;\r\n        var triangles = triangles;\r\n        var s = 1;\r\n        var ox = 1;\r\n        var oy = 1;\r\n\t\tif (strokeStyle != null)\r\n\t\t{\r\n\t\t\tif (tintMultiplier>0)\r\n\t\t\t\tg2.color = ColorUtils.lerpColor(strokeStyle.color, tintColor, tintMultiplier);\r\n\t\t\telse\r\n\t\t\t\tg2.color = strokeStyle.color;\r\n\t\t}\r\n        for( i in 0...triangles.length ){\r\n            tri = triangles[ i ];\r\n            g2.fillTriangle( ox + tri.ax * s, oy + tri.ay * s\r\n                        ,   ox + tri.bx * s, oy + tri.by * s\r\n                        ,   ox + tri.cx * s, oy + tri.cy * s );\r\n        }\r\n    }\t\t\r\n\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\r\n\tstatic public function calculateTestShapes(shapeData:ShapeData)\r\n\t{\r\n        var fillOnly = new FillOnly();\r\n\t\tfor (i in 0...shapeData.pathData.length) \r\n\t\t{\r\n\t\t\tshapeData.fillTriangles[i] = new TriangleArray();\r\n\t\t\tdrawFill( fillOnly, shapeData.pathData[i].edges, shapeData.fillTriangles[i] );\r\n\t\t\t\r\n\t\t\tif (Reflect.hasField(shapeData.pathData[i], \"strokeStyle\"))\r\n\t\t\t{\r\n\t\t\t\tshapeData.edgeTriangles[i] = new TriangleArray();\r\n\t\t\t\tvar ssn:Int = shapeData.pathData[i].strokeStyle-1;\r\n\t\t\t\tif (ssn < shapeData.SVGPathStrokeStyles.length)\r\n\t\t\t\t{\r\n\t\t\t\t\tvar ss:StrokeStyle = shapeData.SVGPathStrokeStyles[ssn];\r\n\t\t\t\t\tcreateLines(i, ss, shapeData.pathData[i].edges, shapeData.edgeTriangles[i]);\r\n\t\t\t\t}\r\n\t\t\t}\t\t\t\r\n\t\t\t\r\n\t\t}\r\n\t}\r\n\t\r\n\tstatic function createLines(id:Int, ss:StrokeStyle, edges:String, triangles:TriangleArray)\r\n\t{\r\n        //var path = new Fine( null, null, null );\r\n        // var path = new FillOnly();\r\n        //var path = new Crude();\r\n        //var path = new Medium();\r\n        //var path = new Fine();\r\n        //var path = new FineOverlap(null, null, both);\r\n\t\t//var path = new MediumOverlap( null, null, both );\r\n\t\tvar path = new RoundEnd(null, null);\r\n        \r\n        path.width = ss.weight;// * 2;\r\n        var scaleContext = new ScaleContext( path, 1.0, 1.0 );\r\n        var p = new SvgPath( scaleContext );\r\n        p.parse( edges );\r\n        triangles.addArray(id, path.trilateralArray, 1);\t\t\r\n\t}\r\n\t\r\n/*\r\n * \t\t//var path = new RoundEnd(); // currently Fine has issues.\r\n        //var path = new MediumOverlap( null, null, both ); // overlap triangles between, and round at \r\n                                                            // beginning posible not at end because need move.\r\n        var path = new Fine( null, null, both );\r\n        // var path = new FillOnly();\r\n        //var path = new Crude();\r\n        //var path = new Medium();\r\n        //var path = new Fine();\r\n        \r\n        path.width = 1;\r\n        var scaleContext = new ScaleContext( path, 1.5, 1.5 );\r\n        var p = new SvgPath( scaleContext );\r\n        p.parse( bird_d );\r\n        triangles.addArray( 6\r\n                        ,   path.trilateralArray\r\n                        ,   appColors.indexOf( White ) );\r\n  */      \t\r\n\t\r\n    static function drawFill( base: Base, d:String, triangles:TriangleArray)\r\n\t{\r\n        var scaleTranslateContext = new ScaleTranslateContext( base, 0, 0, 1, 1 );\r\n        var svg = new SvgPath( scaleTranslateContext );\r\n        svg.parse( d );\r\n        var p = base.points; \r\n        var l = p.length;\r\n        var j = 0;\r\n        for( i in 0...l ){\r\n            if( p[ i ].length != 0 ){ // only try to fill empty arrays\r\n                //if( j == appColors.length - 2 ) j = 0;\r\n                fillPolys( i, p[ i ], j, triangles);\r\n                j++;\r\n            }\r\n        }\r\n    }\t\r\n\t\r\n    static function fillPolys( id: Int, poly: Array<Float>, colorID: Int, triangles:TriangleArray ){\r\n        var tgs = PolyK.triangulate( poly ); \r\n        var triples = new ArrayTriple( tgs );\r\n        var count = 0;\r\n        for( tri in triples ){\r\n            var a: Int = Std.int( tri.a*2 );\r\n            var b: Int = Std.int( tri.b*2 );\r\n            var c: Int = Std.int( tri.c*2 );\r\n            triangles.drawTriangle(  id, { x: poly[ a ], y: poly[ a + 1 ] }\r\n                                      , { x: poly[ b ], y: poly[ b + 1 ] }\r\n                                      , { x: poly[ c ], y: poly[ c + 1 ] }, colorID );\r\n        }\r\n    }\t\r\n\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\t\t\r\n/*    static inline function renderTrianglesColor( g2:Graphics, triangles:TriangleArray ){\r\n        var tri: Triangle;\r\n        if( triangles.length == 0 ) return;\r\n        var triangles = triangles;\r\n        var gameColors = appColors;\r\n        var s = 1;\r\n        var ox = 1;\r\n        var oy = 1;\r\n        for( i in 0...triangles.length ){\r\n            tri = triangles[ i ];\r\n            g2.color = cast( gameColors[ tri.colorID ], kha.Color );\r\n            g2.fillTriangle( ox + tri.ax * s, oy + tri.ay * s\r\n                        ,   ox + tri.bx * s, oy + tri.by * s\r\n                        ,   ox + tri.cx * s, oy + tri.cy * s );\r\n        }\r\n        //System.removeRenderListener( render );\r\n    }\t\t\r\n\t*/\r\n\t\r\n/*\tstatic function fillPoly2trihx( id: Int, points: Array<Array<Float>>, colorID: Int ){\r\n        var vp = new VisiblePolygon();\r\n        var l = points.length;\r\n        var p: Array<Float>;\r\n        for( i in 0...l ){\r\n            p = points[ i ];\r\n            if( p.length != 0 ) {\r\n                var p2t: Array<org.poly2tri.Point> = [];\r\n                var pairs = new ArrayPairs<Float>( p );\r\n                var p0 = pairs[0].x;\r\n                var p1 = pairs[0].y;\r\n                for( pair in pairs ) p2t.push( new org.poly2tri.Point( pair.x, pair.y ) );\r\n                vp.addPolyline( p2t );\r\n            }\r\n        }\r\n        vp.performTriangulationOnce();\r\n        var pt = vp.getVerticesAndTriangles();\r\n        var tri = pt.triangles;\r\n        var vert = pt.vertices;\r\n        var triples = new ArrayTriple( tri );\r\n        var i: Int;\r\n        for( tri in triples ){\r\n            var a: Int = Std.int( tri.a*3 );\r\n            var b: Int = Std.int( tri.b*3 );\r\n            var c: Int = Std.int( tri.c*3 );\r\n            triangles.drawTriangle(  id, { x: vert[ a ], y: vert[ a + 1 ] }\r\n                                       , { x: vert[ b ], y: vert[ b + 1 ] }\r\n                                       , { x: vert[ c ], y: vert[ c + 1 ] }, colorID );\r\n        }\r\n    }\t*/\r\n\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n}\t\r\n","package no.logic.kha.uix.scene.uixcomp;\r\nimport haxe.Constraints.Function;\r\nimport haxe.Timer;\r\nimport no.logic.kha.uix.UIX.UIXEventItem;\r\nimport no.logic.kha.uix.scene.DisplayObject;\r\nimport no.logic.kha.uix.scene.Sprite;\r\nimport no.logic.kha.uix.scene.uixcomp.UIXGComponentManager.UIXComponentEventAction;\r\nimport no.logic.kha.uix.utils.PointUtils.PointOrigin;\r\n\r\n\r\n/**\r\n * ...\r\n * @author Tommy Svensson\r\n */\r\n\r\n@:keep\r\nclass UIXGComponent\r\n{\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\t\r\n\t//===================================================================================\r\n\t// Consts \r\n\t//-----------------------------------------------------------------------------------\r\n\r\n\t//===================================================================================\r\n\t// Properties \r\n\t//-----------------------------------------------------------------------------------\r\n\t\r\n\tpublic var uixgElement\t\t\t\t: UIXGElement;\r\n\tpublic var name\t\t\t\t\t\t: String;\r\n\tpublic var target\t\t\t\t\t: DisplayObject;\r\n\tpublic var targetMC\t\t\t\t\t: Sprite;\r\n\tpublic var targetType\t\t\t\t: String;\r\n\tpublic var targetParent\t\t\t\t: Sprite;\r\n\tpublic var targetText\t\t\t\t: Text;\r\n\tpublic var targetButton\t\t\t\t: SimpleButton;\r\n\t\r\n/*\tpublic var scanner\t\t\t\t\t: UIXScanner;\r\n\tpublic var stage\t\t\t\t\t: Stage;\r\n\tpublic var deltaTime\t\t\t\t: Float\t\t\t\t\t= 1;\r\n\tpublic var scanChildren(default, set) : Bool\t\t\t\t\t= true;*/\r\n\t\t\r\n\tpublic var updateEnabled\t\t\t: Bool\t\t\t\t\t= false;\r\n\tpublic var isDisposed\t\t\t\t: Bool\t\t\t\t\t= false;\r\n\tpublic var origin\t\t\t\t\t: PointOrigin;\r\n\r\n\t//===================================================================================\r\n\t// Declarations \r\n\t//-----------------------------------------------------------------------------------\r\n\r\n\t//===================================================================================\r\n\t// Variables \r\n\t//-----------------------------------------------------------------------------------\t\t\r\n\r\n\tvar declaredVars\t\t\t\t\t: Array<String>;\t\t\r\n/*\tvar previousTime\t\t\t\t\t: Float\t\t\t\t\t= 0;\r\n\tvar uixListeners\t\t\t\t\t: Array<UIXEventItem>;\t\t\r\n\t\r\n\tvar hiddenChildren\t\t\t\t\t: Array<DisplayObject>;\r\n\tvar rasterBitmapData\t\t\t\t: BitmapData;\r\n\tvar rasterBitmap\t\t\t\t\t: Bitmap;\r\n*/\t\r\n\t\r\n\tvar timerList\t\t\t\t\t\t: Array<Timer>;\r\n\tvar uixEvents\t\t\t\t\t\t: Array<UIXEventItem>;\r\n\t//public var childBindingFields\t\t: Dynamic;\r\n\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\t\r\n\tpublic function new(uixgElement:UIXGElement) \r\n\t{\r\n\t\tthis.uixgElement = uixgElement;\r\n\t\tthis.name = uixgElement.name;\r\n/*\t\tthis.scanner = uixgElement.scanner;\r\n\t\tthis.uixgElement.classInstance = this;\r\n*/\t\t\r\n\t\tthis.targetType = uixgElement.targetType;\r\n\t\tthis.target = cast uixgElement.target; \r\n\t\tif (targetType == \"MovieClip\" || targetType == \"Sprite\")\r\n\t\t{\r\n\t\t\ttargetMC = cast(target, Sprite);\t\r\n\t\t\t//if (!this.uixgElement.mouseChildren)\r\n\t\t\t\t//targetMC.mouseChildren = this.uixgElement.mouseChildren;\t\r\n\t\t}\r\n\t\telse if (targetType == \"Text\")\r\n\t\t{\r\n\t\t\ttargetText = cast target;\t\r\n\t\t}\r\n\t\telse if (targetType == \"Button\")\r\n\t\t{\r\n\t\t\ttargetButton = cast target;\t\r\n\t\t}\r\n\t\t\r\n\t\tthis.targetParent = cast(target.parent, Sprite);\r\n\t\t\r\n\t\t//if (!this.uixgElement.mouseEnabled)\r\n\t\t\t//this.target.mouseEnabled = this.uixgElement.mouseEnabled;\r\n\t\t\r\n\t\t//this.stage = App.stage_;\r\n\t\t\r\n\t\t//checkModes();\r\n\t\ttimerList = [];\r\n\t}\r\n\t\r\n\t//===================================================================================\r\n\t// PreCreate\r\n\t//-----------------------------------------------------------------------------------\r\n\r\n\t@:allow(no.logic.kha.uix.scene.uixcomp.UIXGComponentManager)\r\n\tfunction preCreate()\r\n\t{\r\n\t\t//audioTrigger(\"onCreate\");\r\n\t}\r\n\t\r\n\t//===================================================================================\r\n\t// Created\r\n\t//-----------------------------------------------------------------------------------\r\n\r\n\t@:allow(no.logic.kha.uix.scene.uixcomp.UIXGComponentManager)\r\n\tfunction created()\r\n\t{\r\n\t\t//override this\r\n\t}\r\n\t\r\n\t//===================================================================================\r\n\t// Update\r\n\t//-----------------------------------------------------------------------------------\r\n\t\r\n\t@:allow(no.logic.kha.uix.scene.uixcomp.UIXGElement)\r\n\t@:allow(no.logic.kha.uix.scene.uixcomp.UIXGComponentManager)\r\n\tfunction updateFromBindings()\r\n\t{\r\n\t\t//override this\r\n\t}\r\n\t\r\n\t//===================================================================================\r\n\t// Update\r\n\t//-----------------------------------------------------------------------------------\r\n\t\r\n\t@:allow(no.logic.kha.uix.scene.uixcomp.UIXGElement)\r\n\tfunction update()\r\n\t{\r\n\t\t//override this\r\n\t}\r\n\r\n\t@:allow(no.logic.kha.uix.scene.uixcomp.UIXGElement)\r\n\tfunction updateInternal()\r\n\t{\r\n\t}\r\n\t\r\n\t//===================================================================================\r\n\t// Related variables\r\n\t//-----------------------------------------------------------------------------------\r\n\t\r\n\tpublic function getRelatedVariable(bindVariable:String):Any\r\n\t{\r\n\t\tif (this.target != null)\r\n\t\t{\r\n\t\t\tvar systemTarget:DisplayObject = null;\r\n\t\t\tvar preFix:String = \"\";\r\n\t\t\tvar variableName:String = \"\";\r\n\t\t\tvar actionStripped:String = \"\";\r\n\t\t\t\r\n\t\t\tpreFix = \"@class:\";\r\n\t\t\tif (bindVariable.indexOf(preFix) != -1)\r\n\t\t\t{\r\n\t\t\t\tsystemTarget = this.target;\r\n\t\t\t\tvariableName = parseSystemPreString(preFix,bindVariable);\r\n\t\t\t}\r\n\t\t\tpreFix = \"@parentClass:\";\r\n\t\t\tif (bindVariable.indexOf(preFix) != -1)\r\n\t\t\t{\r\n\t\t\t\tif (this.target.parent != null)\r\n\t\t\t\t{\r\n\t\t\t\t\tsystemTarget = this.target.parent;\r\n\t\t\t\t\tvariableName = parseSystemPreString(preFix,bindVariable);\r\n\t\t\t\t}\r\n\t\t\t}\t\t\t\r\n\t\t\tpreFix = \"@parent.parentClass:\";\r\n\t\t\tif (bindVariable.indexOf(preFix) != -1)\r\n\t\t\t{\r\n\t\t\t\tsystemTarget = this.target.parent;\r\n\t\t\t\tif (systemTarget!=null && systemTarget.parent!=null)\r\n\t\t\t\t\tsystemTarget = systemTarget.parent;\r\n\t\t\t\t\t\r\n\t\t\t\tvariableName = parseSystemPreString(preFix,bindVariable);\r\n\t\t\t}\r\n\t\t\tif (variableName != \"\")\r\n\t\t\t{\r\n\t\t\t\tvar uge:UIXGElement = systemTarget.uixElement;\r\n\t\t\t\tif (uge != null && (uge.classInstance != null))\r\n\t\t\t\t{\r\n\t\t\t\t\treturn Reflect.field(uge.classInstance, variableName);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t//trace(variableName, systemTarget.name);\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\t\r\n\tpublic function updateChildBindings() \r\n\t{\r\n\t\tcheckChildObjects(target);\r\n\t}\t\r\n\t\r\n\tfunction checkChildObjects(t:DisplayObject) \r\n\t{\r\n\t\tif (t == null)\r\n\t\t\treturn;\r\n\t\t\t\r\n\t\tfor (c in t.children) \r\n\t\t{\r\n\t\t\tif (c != null)\r\n\t\t\t{\r\n\t\t\t\tcheckChildObject(c);\r\n\t\t\t\tif (t.numChildren > 0)\r\n\t\t\t\t\tcheckChildObject(c);\r\n\t\t\t}\r\n\t\t}\t\r\n\t}\r\n\t\r\n\tfunction checkChildObject(t:DisplayObject) \r\n\t{\r\n\t\tif (t == null)\r\n\t\t\treturn;\r\n\t\t\t\r\n\t\tif (t.uixElement!=null)\r\n\t\t{\r\n\t\t\tif (t.uixElement.classInstance!=null && UIXGComponentManager.hasBindingOfTypeRelated(t.uixElement))\r\n\t\t\t{\r\n\t\t\t\tt.uixElement.classInstance.updateFromBindings();\r\n\t\t\t}\r\n\t\t}\r\n\t}\t\r\n\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\r\n\tfunction dispose() \r\n\t{\r\n\t\t//override this\r\n\t}\t\r\n\r\n\tfunction parseSystemPreString(preFix:String, eventName:String):String \r\n\t{\r\n\t\t//return eventName.split(preFix).join(\"\").split(\";\").join(\"\").split(\" \").join(\"\").split(\"()\").join(\"\");\r\n\t\treturn eventName.split(preFix).join(\"\");\r\n\t}\r\n\r\n\tfunction parseSystemPostString(action:String):String \r\n\t{\r\n\t\treturn action.split(\";\").join(\"\").split(\" \").join(\"\").split(\"()\").join(\"\").split('(\"').join(\"\").split('\")').join(\"\");\r\n\t}\r\n\t\r\n\t//===================================================================================\r\n\t// Declares\r\n\t//-----------------------------------------------------------------------------------\r\n\r\n\tpublic function declare(fieldNames:Array<String>) \r\n\t{\r\n\t\tif (target!=null)\r\n\t\t{\r\n\t\t\tif (declaredVars==null)\r\n\t\t\t\tdeclaredVars = [];\r\n\t\t\t\t\r\n\t\t\tfor (i in 0...fieldNames.length) \r\n\t\t\t{\r\n\t\t\t\tvar fieldName:String = fieldNames[i];\r\n\t\t\t\tif (fieldName!=null)\r\n\t\t\t\t{\r\n\t\t\t\t\tif (Reflect.hasField(target,fieldName) && Reflect.field(target,fieldName)!=null && Reflect.hasField(this,fieldName))\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tReflect.setProperty(this, fieldName, Reflect.field(target, fieldName));\r\n\t\t\t\t\t\tdeclaredVars.push(fieldName);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\tpublic function declareCustom(localTarget:Dynamic,fieldNames:Array<String>) \r\n\t{\r\n\t\tif (localTarget!=null)\r\n\t\t{\r\n\t\t\tif (declaredVars==null)\r\n\t\t\t\tdeclaredVars = [];\r\n\t\t\t\t\r\n\t\t\tfor (i in 0...fieldNames.length) \r\n\t\t\t{\r\n\t\t\t\tvar fieldName:String = fieldNames[i];\r\n\t\t\t\tif (fieldName!=null)\r\n\t\t\t\t{\r\n\t\t\t\t\tif (Reflect.hasField(localTarget,fieldName) && Reflect.field(localTarget,fieldName)!=null && Reflect.hasField(this,fieldName))\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tReflect.setProperty(this, fieldName, Reflect.field(localTarget, fieldName));\r\n\t\t\t\t\t\tdeclaredVars.push(fieldName);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\tpublic function releaseDeclarations()\r\n\t{\r\n\t\tif (declaredVars!=null)\r\n\t\t{\r\n\t\t\tfor (i in 0...declaredVars.length) \r\n\t\t\t{\r\n\t\t\t\tdeclaredVars[i] = null;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\t// Origin ///////////////////////////////////////////////////////////////////////////\r\n\t\r\n\tpublic function getOrigin(storePosition:Bool=true,storeScale:Bool=true,storeDimensions:Bool=false,storeRotation:Bool=false) \r\n\t{\r\n\t\tif (target!=null)\r\n\t\t{\r\n\t\t\torigin = new PointOrigin();\r\n\t\t\t\r\n\t\t\tif (storePosition)\r\n\t\t\t{\r\n\t\t\t\tif (Reflect.hasField(target,\"x\"))\r\n\t\t\t\t\torigin.x = Reflect.field(target, \"x\");\r\n\t\t\t\tif (Reflect.hasField(target,\"y\"))\r\n\t\t\t\t\torigin.y = Reflect.field(target, \"y\");\r\n\t\t\t\t\t\r\n\t\t\t\t//originalScale= new Point();\t\t//legacy!!\r\n\t\t\t\t//if (\"scaleX\" in target)\r\n\t\t\t\t\t//originalScale.x = target.scaleX\r\n\t\t\t\t//if (\"scaleY\" in target)\r\n\t\t\t\t\t//originalScale.y = target.scaleY\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (storeScale)\r\n\t\t\t{\r\n\t\t\t\tif (Reflect.hasField(target,\"scaleX\"))\r\n\t\t\t\t\torigin.scaleX = Reflect.field(target, \"scaleX\");\r\n\t\t\t\tif (Reflect.hasField(target,\"scaleY\"))\r\n\t\t\t\t\torigin.scaleY = Reflect.field(target, \"scaleY\");\r\n\t\t\t}\r\n\t\t\t\t\r\n\t\t\tif (storeDimensions)\r\n\t\t\t{\r\n\t\t\t\tif (Reflect.hasField(target,\"width\"))\r\n\t\t\t\t\torigin.width = Reflect.field(target, \"width\");\r\n\t\t\t\tif (Reflect.hasField(target,\"height\"))\r\n\t\t\t\t\torigin.height = Reflect.field(target, \"height\");\r\n\t\t\t}\r\n\r\n\t\t\tif (storeRotation)\r\n\t\t\t{\r\n\t\t\t\tif (Reflect.hasField(target,\"rotation\"))\r\n\t\t\t\t\torigin.rotation = Reflect.field(target, \"rotation\");\r\n\t\t\t}\r\n\t\t\t\t\r\n\t\t}\r\n\t}\r\n\r\n\t\r\n\t//===================================================================================\r\n\t// UIX stuff\r\n\t//-----------------------------------------------------------------------------------\r\n\r\n\tpublic function debug(value:Dynamic)\r\n\t{\r\n\t\tUIX.c.debug(value);\r\n\t}\r\n\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\t\r\n\tpublic function dispatch(eventName:String, ?properties:Dynamic=null, ?scope:Dynamic=null, ?delay:Float=0):Class<UIX>\r\n\t{\r\n\t\treturn UIX.dispatch(eventName, properties, scope, delay);\r\n\t}\r\n\t\t\t\r\n\tpublic function add(eventName:String, callback:Function, ?properties:Dynamic=null, ?scope:Dynamic=null):UIXEventItem\r\n\t{\r\n\t\tif (uixEvents == null)\r\n\t\t\tuixEvents = [];\r\n\t\t\t\r\n\t\tvar uixei:UIXEventItem = UIX.add(eventName, callback, properties, scope);\r\n\t\tuixEvents.push(uixei);\r\n\t\treturn uixei;\r\n\t}\r\n\t\r\n\tpublic function remove(eventName:String, ?callback:Function, ?scope:Dynamic)\r\n\t{\r\n\t\tUIX.remove(eventName, callback, scope);\r\n\t\tif (uixEvents == null)\r\n\t\t\treturn;\r\n\t\t\t\r\n\t\tfor (i in 0...uixEvents.length) \r\n\t\t{\r\n\t\t\tif (eventName!=null && callback!=null && scope!=null)\r\n\t\t\t{\r\n\t\t\t\tif (uixEvents[i].eventName == eventName && uixEvents[i].callback == callback && uixEvents[i].scope == scope)\r\n\t\t\t\t\tuixEvents[i] = null;\r\n\t\t\t}\r\n\t\t\telse if (eventName!=null && callback!=null)\r\n\t\t\t{\r\n\t\t\t\tif (uixEvents[i].eventName == eventName && uixEvents[i].callback == callback)\r\n\t\t\t\t\tuixEvents[i] = null;\r\n\t\t\t}\r\n\t\t\telse if (eventName!=null)\r\n\t\t\t{\r\n\t\t\t\tif (uixEvents[i].eventName == eventName)\r\n\t\t\t\t\tuixEvents[i] = null;\r\n\t\t\t}\r\n\t\t\telse if (callback!=null)\r\n\t\t\t{\r\n\t\t\t\tif (uixEvents[i].callback == callback)\r\n\t\t\t\t\tuixEvents[i] = null;\r\n\t\t\t}\r\n\t\t}\r\n\t\tfor (i in 0...uixEvents.length) \r\n\t\t{\r\n\t\t\tif (uixEvents[i] == null)\r\n\t\t\t\tuixEvents.splice(i,1);\r\n\t\t}\r\n\t}\r\n\t\r\n\tpublic function removeAllUIX()\r\n\t{\r\n\t\tif (uixEvents == null)\r\n\t\t\treturn;\r\n\t\t\t\r\n\t\tfor (i in 0...uixEvents.length) \r\n\t\t{\r\n\t\t\tif (uixEvents[i]!=null)\r\n\t\t\t\tUIX.remove(uixEvents[i].eventName, uixEvents[i].callback, uixEvents[i].scope);\r\n\t\t}\r\n\t\tuixEvents = [];\r\n\t}\r\n\t\t\r\n\t//===================================================================================\r\n\t// Dispose\r\n\t//-----------------------------------------------------------------------------------\r\n\r\n\r\n\t@:allow(no.logic.kha.uix.scene.uixcomp.UIXGElement)\r\n\tfunction disposeComponent()\r\n\t{\r\n\t\tif (!isDisposed)\r\n\t\t{\r\n\t\t\tUIXGComponentManager.eventCommand(UIXComponentEventAction.onDestroy,uixgElement);\r\n\t\t\tdispose();\r\n\t\t\tisDisposed = true;\r\n\t\t\tremoveAllUIX();\r\n\t\t\t\r\n\t\t\treleaseDeclarations();\r\n\t\t\tdeclaredVars = null;\r\n\t\t\torigin = null;\r\n\t\t\t\t\r\n\t\t\tif (uixgElement != null)\r\n\t\t\t{\r\n\t\t\t\tuixgElement.dispose();\r\n\t\t\t\tuixgElement = null;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (targetParent != null)\r\n\t\t\t\ttargetParent.removeChild(target);\r\n\t\t\t\t\r\n\t\t\tif (targetButton != null)\r\n\t\t\t{\r\n\t\t\t\ttargetButton = null;\r\n\t\t\t}\r\n\r\n\t\t\ttargetParent = null;\r\n\t\t\ttargetMC = null;\r\n\t\t\ttarget = null;\r\n\t\t\ttargetType = null;\r\n\t\t\tname = null;\r\n\t\t\t\r\n\t\t\ttimerList = null;\r\n\t\t\t//childBindingFields = null;\r\n\t\t}\r\n\t}\r\n\t\r\n\t//===================================================================================\r\n\t// Setters / getters\r\n\t//-----------------------------------------------------------------------------------\r\n\t\r\n\t@:isVar public var visible(get, set): Bool;\r\n\tfunction get_visible()\r\n\t{\r\n\t\tif (target == null)\r\n\t\t\treturn false;\r\n\t\t\t\r\n\t\treturn target.visible;\r\n\t}\r\n\tfunction set_visible(value:Bool) \r\n\t{\r\n\t\tif (target == null)\r\n\t\t\treturn false;\r\n\t\ttarget.visible = value;\r\n\t\treturn value;\r\n\t}\r\n\t\r\n\t@:isVar public var x(get, set) \t: Float;\r\n\tfunction get_x()\r\n\t{\r\n\t\t//if (target == null)\r\n\t\t\t//return 0;\r\n\t\t\t\r\n\t\treturn target.x;\r\n\t}\r\n\tfunction set_x(value:Float)\r\n\t{\r\n\t\t//if (target == null)\r\n\t\t\t//return 0;\r\n\t\ttarget.x = value;\r\n\t\treturn value;\r\n\t}\r\n\t\r\n\t@:isVar public var y(get, set) : Float;\r\n\tfunction get_y()\r\n\t{\r\n\t\t//if (target == null)\r\n\t\t\t//return 0;\r\n\t\t\t\r\n\t\treturn target.y;\r\n\t}\r\n\tfunction set_y(value:Float)\r\n\t{\r\n\t\t//if (target == null)\r\n\t\t\t//return 0;\r\n\t\ttarget.y = value;\r\n\t\treturn value;\r\n\t}\r\n\t\r\n\t@:isVar public var alpha(get, set) : Float;\r\n\tfunction get_alpha()\r\n\t{\r\n\t\tif (target == null)\r\n\t\t\treturn 0.0;\r\n\t\t\t\r\n\t\treturn target.alpha;\r\n\t}\r\n\tfunction set_alpha(value:Float)\r\n\t{\r\n\t\tif (target == null)\r\n\t\t\treturn 0.0;\r\n\t\t\t\r\n\t\ttarget.alpha = value;\r\n\t\treturn value;\r\n\t}\t\r\n\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\t\r\n}\t\r\n\r\n\r\n\r\n\r\n\t//===================================================================================\r\n\t// Bind\r\n\t//-----------------------------------------------------------------------------------\r\n/*\t\r\n\tpublic function bindAsset(assetCode:String)\r\n\t{\r\n\t\tif (uixgElement!=null)\r\n\t\t{\r\n\t\t\tuixgElement.assetCode = assetCode;\r\n\t\t\tscanner.trackedAssetCodes.set(uixgElement.uniqueID, uixgElement.assetCode);\r\n\t\t\tupdate();\r\n\t\t}\r\n\t}\r\n\t\r\n\tpublic function bind(bindVariable:String)\r\n\t{\r\n\t\tif (uixgElement!=null)\r\n\t\t{\r\n\t\t\tuixgElement.bindVariable = bindVariable;\r\n\t\t\tscanner.trackedVariables.set(uixgElement.uniqueID, uixgElement.bindVariable);\r\n\t\t\tupdate();\r\n\t\t}\r\n\t}\r\n\r\n\tpublic function getBindValue():Dynamic\r\n\t{\r\n\t\tif (uixgElement!=null && uixgElement.bindVariable!=null)\r\n\t\t{\r\n\t\t\treturn getVar(uixgElement.bindVariable);\r\n\t\t}\r\n\t\telse\r\n\t\t\treturn null;\r\n\t}\r\n\r\n\tpublic function bindValueIsValid():Bool\r\n\t{\r\n\t\tif (uixgElement!=null && uixgElement.bindVariable!=null)\r\n\t\t{\r\n\t\t\treturn hasVar(uixgElement.bindVariable,true);\r\n\t\t}\r\n\t\telse \r\n\t\t\treturn false;\r\n\t}\r\n\t\r\n\tpublic function getRelatedVariable(bindVariable:String):Any\r\n\t{\r\n\t\tif (this.target != null)\r\n\t\t{\r\n\t\t\tvar systemTarget:InteractiveObject = null;\r\n\t\t\tvar preFix:String = \"\";\r\n\t\t\tvar variableName:String = \"\";\r\n\t\t\tvar actionStripped:String = \"\";\r\n\t\t\t\r\n\t\t\t//preFix = \"@class:\";\r\n\t\t\t//if (bindVariable.indexOf(preFix) != -1)\r\n\t\t\t//{\r\n\t\t\t\t//systemTarget = this.classReference;\r\n\t\t\t\t//variableName = parseSystemPreString(preFix,bindVariable);\r\n\t\t\t\t//\r\n\t\t\t\t//if (variableName && systemTarget && (variableName in systemTarget))\r\n\t\t\t\t\t//return systemTarget[variableName]\r\n\t\t\t\t//\r\n\t\t\t//}\r\n\t\t\tpreFix = \"@parentClass:\";\r\n\t\t\tif (bindVariable.indexOf(preFix) != -1)\r\n\t\t\t{\r\n\t\t\t\tif (this.target.parent != null)\r\n\t\t\t\t{\r\n\t\t\t\t\tsystemTarget = this.target.parent;\r\n\t\t\t\t\tvariableName = parseSystemPreString(preFix,bindVariable);\r\n\t\t\t\t\t\r\n\t\t\t\t\tvar parentUixgElement:UIXGElement = UIXScanner.trackedElements.get(scanner.getTCode(systemTarget.name));\r\n\t\t\t\t\tif (parentUixgElement!=null && (parentUixgElement.classInstance!=null) )\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tif (variableName != null && parentUixgElement.classInstance != null)// && Reflect.field(parentUixgElement.classInstance, variableName)!=null)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t//trace(\"Rel:\", parentUixgElement.classInstance, variableName, parentUixgElement.classInstance.getFieldByName(variableName));\r\n\t\t\t\t\t\t\t//trace(\"fff...\", parentUixgElement.classInstance.childBindingFields);\r\n\t\t\t\t\t\t\tvar dd:Dynamic = Reflect.field(childBindingFields, variableName);\r\n\t\t\t\t\t\t\t//trace(\"wtf\", dd);\r\n//\t\t\t\t\t\t\ttry\r\n//\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tif (childBindingFields==null)\r\n\t\t\t\t\t\t\t\t\treturn Reflect.field(parentUixgElement.classInstance, variableName);\r\n\t\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t\t\treturn dd;\r\n}\r\n\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\ttagForUpdate(systemTarget);\r\n\t\t\t\t}\r\n\t\t\t}\t\t\t\r\n\t\t\t//preFix = \"@parent.parentClass:\";\r\n\t\t\t//if (bindVariable.indexOf(preFix) != -1)\r\n\t\t\t//{\r\n\t\t\t\t//systemTarget = this.target.parent;\r\n\t\t\t\t//if ((\"parent\" in systemTarget) && systemTarget.parent)\r\n\t\t\t\t\t//systemTarget = systemTarget.parent\r\n\t\t\t\t\t//\r\n\t\t\t\t//variableName = parseSystemPreString(preFix,bindVariable);\r\n\t\t\t\t//\r\n\t\t\t\t//if (DisplayObject(systemTarget).metaData && (\"uixuid\" in DisplayObject(systemTarget).metaData))\r\n\t\t\t\t//{\r\n\t\t\t\t\t//var parentUixgElement2:UIXGElement = scanner.trackedElements.getItem(DisplayObject(systemTarget).metaData.uixuid);\t\t\t\t\r\n\t\t\t\t\t//if (parentUixgElement2 && (parentUixgElement2.classReference is UIXGInject))\r\n\t\t\t\t\t//{\r\n\t\t\t\t\t\t//if (variableName && parentUixgElement2.classReference && (variableName in parentUixgElement2.classReference))\r\n\t\t\t\t\t\t\t//return parentUixgElement2.classReference[variableName]\r\n\t\t\t\t\t//}\r\n\t\t\t\t//}\r\n\t\t\t//}\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\t\r\n\tprivate function tagForUpdate(systemTarget:InteractiveObject)\r\n\t{\r\n\t\tif (systemTarget.name.indexOf(\"_UIX_\")!=-1)\r\n\t\t{\r\n\t\t\t//cast(systemTarget,MovieClip).meta = {};\r\n\t\t\t//if (!systemTarget.metaData)\r\n\t\t\t\t//systemTarget.metaData = { }\r\n\t\t\t//\r\n\t\t\t//if (!(\"updateChildren\" in systemTarget.metaData))\r\n\t\t\t\t//systemTarget.metaData.updateChildren = [];\r\n\t\t\t\t//\r\n\t\t\t//systemTarget.metaData.updateChildren.push(this);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic function updateChildBindings(fields:Dynamic=null) \r\n\t{\r\n\t\tif (this.target!=null)// && this.target.metaData && (\"updateChildren\" in this.target.metaData))\r\n\t\t{\r\n\t\t\tcheckChildObjects(this.targetMC,fields);\r\n\t\t\t//trace(\"trigger children\", (this.targetMC));\r\n\t\t}\r\n\t}\t\r\n\t\r\n\tfunction checkChildObjects(targetMC:MovieClip,fields:Dynamic=null) \r\n\t{\r\n\t\tif (targetMC == null)\r\n\t\t\treturn;\r\n\t\t\t\r\n\t\tfor (i in 0...targetMC.numChildren) \r\n\t\t{\r\n\t\t\tvar dpx = targetMC.getChildAt(i);\r\n\t\t\tcheckChildObject(dpx,fields);\r\n\t\t\tvar mcc:MovieClip = cast dpx;\r\n\t\t\tif (mcc != null)\r\n\t\t\t\tcheckChildObjects(mcc,fields);\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\tfunction checkChildObject(dpx:DisplayObject,fields:Dynamic=null) \r\n\t{\r\n\t\tif (dpx == null)\r\n\t\t\treturn;\r\n\t\t\t\r\n\t\tif (UIXScanner.i.isUIXComponent(dpx))\r\n\t\t{\r\n\r\n\t\t\tvar uixdata = UIXScanner.i.getUIXElementData(dpx);\r\n\t\t\tif (uixdata == null)\r\n\t\t\t\treturn;\r\n\t\t\t\t\r\n\t\t\tvar uixElement = UIXScanner.i.getUIXElementByUID(uixdata.uniqueID);\r\n\t\t\tif (uixElement == null)\r\n\t\t\t\treturn;\r\n\r\n\t\t\t//trace(\"uuu\",uixdata.name);\r\n\t\t\t\r\n\t\t\t//UIX.c.debug(\"found: \"+ uixElement.bindVariable);\r\n\t\t\t//trace(\"found: \", uixElement.name);\r\n\r\n\t\t\tif (uixElement.classInstance!=null && UIXScanner.i.hasBindingOfTypeRelated(uixElement))\r\n\t\t\t{\r\n\t\t\t\tif (fields!=null)\r\n\t\t\t\t\tuixElement.classInstance.childBindingFields = fields;\r\n\t\t\t\t\t\r\n\t\t\t\t//trace(\"update\", uixElement.classInstance.childBindingFields);\r\n\t\t\t\tuixElement.classInstance.update();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n*/\r\n/*\tpublic function getFieldByName(name:String):Any\r\n\t{\r\n\t\tvar a:Object = cast this;\r\n\t\t//a[name] = \"fish\";\r\n\t\t//var f = Type.getInstanceFields(this);\r\n\t\t//trace(f);\r\n\t\t//trace(Reflect.field(this, name));\r\n\t\t//return Reflect.field(this, name);\r\n\t\treturn a[name];\r\n\t}*/\r\n\t\r\n\t//===================================================================================\r\n\t// Tick\r\n\t//-----------------------------------------------------------------------------------\r\n/*\r\n\tfunction startTick() \r\n\t{\r\n\t\tif (stage!=null && !tickEnabled)\r\n\t\t{\r\n\t\t\tstage.addEventListener(Event.ENTER_FRAME, onFrameTick);\r\n\t\t}\r\n\t}\r\n\t\r\n\tfunction stopTick() \r\n\t{\r\n\t\tif (stage!=null && tickEnabled)\r\n\t\t{\r\n\t\t\tstage.removeEventListener(Event.ENTER_FRAME, onFrameTick);\r\n\t\t}\r\n\t}\r\n\t\r\n\tfunction onFrameTick(e:Event) \r\n\t{\r\n\t\tvar currentTime = Lib.getTimer();\r\n        deltaTime = (currentTime - previousTime) / (1000/Lib.current.stage.frameRate);\r\n        previousTime = currentTime;\r\n\r\n\t\tif (tickEnabled)\r\n\t\t\ttick();\r\n\t}\r\n\t\t\r\n\tfunction tick()\r\n\t{\r\n\t\t//override\r\n\t}\r\n\r\n\tpublic function declare(fieldNames:Array<String>,?localTarget:Dynamic=null) \r\n\t{\r\n\t\tif (target!=null)\r\n\t\t{\r\n\t\t\tif (declaredVars==null)\r\n\t\t\t\tdeclaredVars = [];\r\n\t\t\t\t\r\n\t\t\tfor (i in 0...fieldNames.length)\r\n\t\t\t{\r\n\t\t\t\tif (targetMC != null)\r\n\t\t\t\t{\r\n\t\t\t\t\tvar fieldName:String = fieldNames[i];\r\n\t\t\t\t\tif (fieldName!=null)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tif (localTarget == null)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tvar dp:DisplayObject = targetMC.getChildByName(fieldName);\r\n\t\t\t\t\t\t\tif (dp!=null)\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\ttry\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tReflect.setField(this,fieldName,dp);\r\n\t\t\t\t\t\t\t\t\tdeclaredVars.push(fieldName);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tcatch (e:Error)\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tvar dp:DisplayObject = targetMC.getChildByName(localTarget);\r\n\t\t\t\t\t\t\tif (dp!=null)\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\ttry\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tReflect.setField(this,fieldName,dp);\r\n\t\t\t\t\t\t\t\t\tdeclaredVars.push(fieldName);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tcatch (e:Error)\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\tpublic function releaseDeclarations()\r\n\t{\r\n\t\tif (declaredVars!=null)\r\n\t\t{\r\n\t\t\tfor (i in 0...declaredVars.length)\r\n\t\t\t{\r\n\t\t\t\tdeclaredVars[i] = null;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n*/\t\t\r\n\t//===================================================================================\r\n\t// Run Element Events\r\n\t//-----------------------------------------------------------------------------------\r\n\r\n/*\tpublic function runElementEvent(eventName:String)\r\n\t{\r\n\t\tif (uixgElement != null && uixgElement.events != null)\r\n\t\t{\r\n\t\t\tvar eventCall:String = stripElementEventName(eventName);\r\n\t\t\tif (Reflect.hasField(uixgElement.events, eventCall))\r\n\t\t\t{\r\n\t\t\t\tvar evn = Reflect.field(uixgElement.events, eventCall);\r\n\t\t\t\tif (evn != null)\r\n\t\t\t\t{\r\n\t\t\t\t\tif (isSystemAction(evn))\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\trunSystemAction(evn, uixgElement);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t*/\r\n\t\t\r\n/*\t\tif (uixgElement.events && (!ObjUtils.isEmpty(uixgElement.events)))\r\n\t\t{\r\n\t\t\tvar eventCall:String = UIXGElement.stripElementEventName(eventName);\r\n\t\t\tif((eventCall in uixgElement.events) && uixgElement.events[eventCall])\r\n\t\t\t{\r\n\t\t\t\tif (isSystemAction(uixgElement.events[eventCall]))\r\n\t\t\t\t{\r\n\t\t\t\t\tuixgElement.runSystemAction(uixgElement.events[eventCall],uixgElement);\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\tuixgElement.runElementEvent(uixgElement.events[eventCall]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}*/\r\n\t//}\r\n\t\r\n/*\tfunction stripElementEventName(eventName:String):String \r\n\t{\r\n\t\tvar eventCall:String=null;\r\n\t\tif (eventName!=null)\r\n\t\t{\r\n\t\t\tvar pcInd:Int = eventName.indexOf(\"(\");\r\n\t\t\tif (pcInd != -1)\r\n\t\t\t{\r\n\t\t\t\teventCall = eventName.substr(0, pcInd);\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\teventCall = eventName;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn eventCall;\r\n\t}\r\n\t\t\r\n\tfunction isSystemAction(eventName:String):Bool\r\n\t{\r\n\t\tif (eventName.indexOf(\"@parent:\") != -1)\r\n\t\t\treturn true;\r\n\t\telse if (eventName.indexOf(\"@class:\") != -1)\r\n\t\t\treturn true;\r\n\t\telse if (eventName.indexOf(\"@this:\") != -1)\r\n\t\t\treturn true;\r\n\t\telse if (eventName.indexOf(\"@parent.parent:\") != -1)\r\n\t\t\treturn true;\r\n\t\telse if (eventName.indexOf(\"@parentClass:\") != -1)\r\n\t\t\treturn true;\r\n\t\telse if (eventName.indexOf(\"@parent.parentClass:\") != -1)\r\n\t\t\treturn true;\r\n\t\telse if (eventName.toLowerCase().indexOf(\"@uix\") != -1)\r\n\t\t\treturn true;\r\n\t\telse\r\n\t\t\treturn false;\r\n\t}*/\r\n\t\t\r\n\t//public function runSystemAction(eventName:String, uixgElement:UIXGElement) \r\n\t//{\r\n\t\t//UIX.c.debug(eventName);\r\n\t\t//var systemTarget:Dynamic = null;\r\n\t\t//var preFix:String = \"\";\r\n\t\t//var action:String = \"\";\r\n\t\t//var actionStripped:String = \"\";\r\n\t\t//var df:DynamicFunc;\r\n\t\t\r\n/*\t\tpreFix = \"@parent:\";\r\n\t\tif (eventName.indexOf(preFix) != -1)\r\n\t\t{\r\n\t\t\tsystemTarget = uixgElement.target.parent;\r\n\t\t\taction = parseSystemPreString(preFix,eventName);\r\n\t\t\t//var params:Array = parseSystemPostString(action);\r\n\t\t\t\r\n\t\t\tCONFIG::release\r\n\t\t\t{\r\n\t\t\t\ttry\r\n\t\t\t\t{\r\n\t\t\t\t\tdf = new DynamicFunc(action);\r\n\t\t\t\t\tsystemTarget[df.funcName].apply(null, df.inputs);\r\n\t\t\t\t}\r\n\t\t\t\tcatch (e:Error)\r\n\t\t\t\t{\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tCONFIG::debug\r\n\t\t\t{\r\n\t\t\t\tdf = new DynamicFunc(action);\r\n\t\t\t\tsystemTarget[df.funcName].apply(null, df.inputs);\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\t\tpreFix = \"@this:\";\r\n\t\tif (eventName.indexOf(preFix) != -1)\r\n\t\t{\r\n\t\t\tsystemTarget = uixgElement.target;\r\n\t\t\taction = parseSystemPreString(preFix,eventName);\r\n\t\t\t\r\n\t\t\tCONFIG::release\r\n\t\t\t{\r\n\t\t\t\ttry\r\n\t\t\t\t{\r\n\t\t\t\t\tdf = new DynamicFunc(action);\r\n\t\t\t\t\tsystemTarget[df.funcName].apply(null, df.inputs);\r\n\t\t\t\t}\r\n\t\t\t\tcatch (e:Error)\r\n\t\t\t\t{\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tCONFIG::debug\r\n\t\t\t{\r\n\t\t\t\tdf = new DynamicFunc(action);\r\n\t\t\t\tsystemTarget[df.funcName].apply(null, df.inputs);\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\t\tpreFix = \"@class:\";\r\n\t\tif (eventName.indexOf(preFix) != -1)\r\n\t\t{\r\n\t\t\tsystemTarget = uixgElement.classReference;\r\n\t\t\taction = parseSystemPreString(preFix,eventName);\r\n\t\t\t\r\n\t\t\tCONFIG::release\r\n\t\t\t{\r\n\t\t\t\ttry\r\n\t\t\t\t{\r\n\t\t\t\t\tdf = new DynamicFunc(action);\r\n\t\t\t\t\tsystemTarget[df.funcName].apply(null, df.inputs);\r\n\t\t\t\t}\r\n\t\t\t\tcatch (e:Error)\r\n\t\t\t\t{\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tCONFIG::debug\r\n\t\t\t{\r\n\t\t\t\tdf = new DynamicFunc(action);\r\n\t\t\t\tsystemTarget[df.funcName].apply(null, df.inputs);\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\t\tpreFix = \"@parent.parent:\";\r\n\t\tif (eventName.indexOf(preFix) != -1)\r\n\t\t{\r\n\t\t\tsystemTarget = uixgElement.target.parent;\r\n\t\t\tif ((\"parent\" in systemTarget) && systemTarget.parent)\r\n\t\t\t\tsystemTarget = systemTarget.parent\r\n\t\t\t\t\r\n\t\t\taction = parseSystemPreString(preFix,eventName);\r\n\t\t\t//var params:Array = parseSystemPostString(action);\r\n\t\t\t\r\n\t\t\tCONFIG::release\r\n\t\t\t{\r\n\t\t\t\ttry\r\n\t\t\t\t{\r\n\t\t\t\t\tdf = new DynamicFunc(action);\r\n\t\t\t\t\tsystemTarget[df.funcName].apply(null, df.inputs);\r\n\t\t\t\t}\r\n\t\t\t\tcatch (e:Error)\r\n\t\t\t\t{\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tCONFIG::debug\r\n\t\t\t{\r\n\t\t\t\tdf = new DynamicFunc(action);\r\n\t\t\t\tsystemTarget[df.funcName].apply(null, df.inputs);\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\t\t*/\r\n/*\t\tpreFix = \"@parentClass:\";\r\n\t\tif (eventName.indexOf(preFix) != -1)\r\n\t\t{\r\n\t\t\tif (target.parent != null)\r\n\t\t\t{\r\n\t\t\t\tsystemTarget = uixgElement.target;\r\n\t\t\t\taction = parseSystemPreString(preFix, eventName);\r\n\t\t\t\taction = parseSystemPostString(action);\r\n\t\t\t\t\r\n\t\t\t\tif (DisplayObject(systemTarget).metaData && (\"uixuid\" in DisplayObject(systemTarget).metaData))\r\n\t\t\t\t{\r\n\t\t\t\t\tvar parentUixgElement:UIXGElement = scanner.trackedElements.getItem(DisplayObject(systemTarget).metaData.uixuid);\t\r\n\t\t\t\t\tif (parentUixgElement && (parentUixgElement.classReference is UIXGInject))\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tCONFIG::release\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\ttry\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tparentUixgElement.classReference[df.funcName].apply(null, df.inputs);\t\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tcatch (e:Error)\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tCONFIG::debug\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tparentUixgElement.classReference[df.funcName].apply(null, df.inputs);\t\t\t\t\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}*/\r\n\t\t\r\n/*\t\tpreFix = \"@parent.parentClass:\";\r\n\t\tif (eventName.indexOf(preFix) != -1)\r\n\t\t{\r\n\t\t\tsystemTarget = uixgElement.target.parent;\r\n\t\t\tif ((\"parent\" in systemTarget) && systemTarget.parent)\r\n\t\t\t\tsystemTarget = systemTarget.parent\r\n\t\t\t\t\r\n\t\t\taction = parseSystemPreString(preFix,eventName);\r\n\t\t\tdf = new DynamicFunc(action);\r\n\t\t\t\r\n\t\t\tif (DisplayObject(systemTarget).metaData && (\"uixuid\" in DisplayObject(systemTarget).metaData))\r\n\t\t\t{\r\n\t\t\t\tvar parentUixgElement2:UIXGElement = scanner.trackedElements.getItem(DisplayObject(systemTarget).metaData.uixuid);\t\t\t\t\r\n\t\t\t\tif (parentUixgElement2 && (parentUixgElement2.classReference is UIXGInject))\r\n\t\t\t\t{\r\n\t\t\t\t\tCONFIG::release\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttry\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tparentUixgElement2.classReference[df.funcName].apply(null, df.inputs);\t\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tcatch (e:Error)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tCONFIG::debug\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tparentUixgElement2.classReference[df.funcName].apply(null, df.inputs);\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}*/\r\n/*\t\tpreFix = \"@uix\";\r\n\t\tif (eventName.indexOf(preFix) != -1)\r\n\t\t{\r\n\t\t\tsystemTarget = uixgElement.target;\r\n\t\t\taction = parseSystemPreString(preFix, eventName);\r\n\t\t\taction = parseSystemPostString(action);\r\n\r\n\t\t\tvar cmds:Array<String> = action.split('\"').join(\"\").split(\",\");\r\n\t\t\tif (cmds.length == 1)\r\n\t\t\t{\r\n\t\t\t\tUIX.dispatch(cmds[0]);\r\n\t\t\t}\r\n\t\t\telse if (cmds.length == 2)\r\n\t\t\t{\r\n\t\t\t\tUIX.dispatch(cmds[0],cmds[1]);\r\n\t\t\t}\r\n\t\t\telse if (cmds.length == 3)\r\n\t\t\t{\r\n\t\t\t\tUIX.dispatch(cmds[0],[cmds[1],cmds[2]]);\r\n\t\t\t}\r\n\t\t\telse if (cmds.length == 4)\r\n\t\t\t{\r\n\t\t\t\tUIX.dispatch(cmds[0],[cmds[1],cmds[2],cmds[3]]);\r\n\t\t\t}\r\n\t\t\telse if (cmds.length == 5)\r\n\t\t\t{\r\n\t\t\t\tUIX.dispatch(cmds[0],[cmds[1],cmds[2],cmds[3],cmds[4]]);\r\n\t\t\t}\r\n\t\t\telse if (cmds.length == 6)\r\n\t\t\t{\r\n\t\t\t\tUIX.dispatch(cmds[0],[cmds[1],cmds[2],cmds[3],cmds[4],cmds[5]]);\r\n\t\t\t}*/\r\n/*\t\t\t\r\n\t\t\tif (action.indexOf('\"') >-1)\r\n\t\t\t{\r\n\t\t\t\tvar dispatchAction:String = action.substring(0, action.indexOf('\"'));\r\n\t\t\t\tUIX.dispatch(dispatchAction);\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tUIX.c.debug(\"it is:\" + action);\r\n\t\t\t\tUIX.dispatch(action);\r\n\t\t\t}\r\n*/\t\t\t//UIX.c.debug(\"dispatch:  \"+action);\r\n\t\t\t\r\n/*\t\t\tdf = new DynamicFunc(\"dispatch(\"+action+\")\");\r\n\t\t\t\r\n\t\t\tfor (var i:int = 0; i < df.inputs.length; i++) \r\n\t\t\t{\r\n\t\t\t\tif (df.inputs[i] is String)\r\n\t\t\t\t{\r\n\t\t\t\t\tif ((df.inputs[i].toLowerCase() == \"this\") || (df.inputs[i].toLowerCase() == \"self\"))\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tdf.inputs[i] = uixgElement;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}*/\r\n\t\t\t\r\n/*\t\t\ttry\r\n\t\t\t{\r\n\t\t\t\tUIX.dispatch.apply(null, df.inputs);\t\r\n\t\t\t}\r\n\t\t\tcatch (e:Error)\r\n\t\t\t{\r\n\t\t\t\tUIX.c.warning(\"UIX system call fail: \" + action);\r\n\t\t\t}\r\n\t\t}\t\t\t\r\n*/\r\n\t//}\r\n\r\n/*\tfunction parseSystemPreString(preFix:String, eventName:String):String \r\n\t{\r\n\t\t//return eventName.split(preFix).join(\"\").split(\";\").join(\"\").split(\" \").join(\"\").split(\"()\").join(\"\");\r\n\t\treturn eventName.split(preFix).join(\"\");\r\n\t}\r\n\r\n\tfunction parseSystemPostString(action:String):String \r\n\t{\r\n\t\treturn action.split(\";\").join(\"\").split(\" \").join(\"\").split(\"()\").join(\"\").split('(\"').join(\"\").split('\")').join(\"\");\r\n\t}*/\r\n\t\t\r\n\t//===================================================================================\r\n\t// Child bindings\r\n\t//-----------------------------------------------------------------------------------\r\n\r\n\t//public function updateChildBindings() \r\n\t//{\r\n\t\t//if (this.target && this.target.metaData && (\"updateChildren\" in this.target.metaData))\r\n\t\t//{\r\n\t\t\t//var updateList:Array = this.target.metaData.updateChildren;\r\n\t\t\t//if (updateList)\r\n\t\t\t//{\r\n\t\t\t\t//for (var i:int = 0; i < updateList.length; i++) \r\n\t\t\t\t//{\r\n\t\t\t\t\t//var uixge:UIXGElement = updateList[i];\r\n\t\t\t\t\t//if (uixge && uixge.classReference)\r\n\t\t\t\t\t//{\r\n\t\t\t\t\t\t//uixge.classReference.update();\r\n\t\t\t\t\t//}\r\n\t\t\t\t//}\r\n\t\t\t//}\r\n\t\t//}*/\r\n\t//}\r\n\t\t//\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\t\r\n\t//===================================================================================\r\n\t// Modes\r\n\t//-----------------------------------------------------------------------------------\r\n\r\n/*\tfunction checkModes() \r\n\t{\r\n\t\tif (uixgElement.originalMode==null || uixgElement.originalMode == UIXGElement.ORIGINAL_CONTENT_SHOW)\r\n\t\t{\r\n\t\t}\r\n\t\telse if (targetMC != null && uixgElement.originalMode == UIXGElement.ORIGINAL_CONTENT_REMOVE)\r\n\t\t{\r\n\t\t\ttargetMC.removeChildren();\r\n\t\t}\r\n\t\telse if (targetMC!=null)\r\n\t\t{\r\n\t\t\tfor (i in 0...targetMC.numChildren) \r\n\t\t\t{\r\n\t\t\t\tvar el:InteractiveObject = cast targetMC.getChildAt(i);\r\n\t\t\t\tif (el!=null && uixgElement.originalMode==UIXGElement.ORIGINAL_CONTENT_HIDDEN) \r\n\t\t\t\t{\r\n\t\t\t\t\t//if (Reflect.field(el,\"visible\")!=null)\r\n\t\t\t\t\t\t//el.visible = false;\r\n\t\t\t\t}\r\n\t\t\t\telse if (el!=null && uixgElement.originalMode==UIXGElement.ORIGINAL_CONTENT_ALPHA0) \r\n\t\t\t\t{\r\n\t\t\t\t\t//if (Reflect.field(el,\"alpha\")!=null)\r\n\t\t\t\t\t\t//targetMC.getChildAt(i).alpha = 0;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}*/\r\n\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\t\r\n/*\tfunction timeout(func:Void->Void, time_ms:Int):Timer\r\n\t{\r\n\t\tif (func != null && timerList!=null)\r\n\t\t{\r\n\t\t\tvar nLen = timerList.push(Timer.delay(func, time_ms));\r\n\t\t\treturn timerList[nLen - 1];\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\treturn null;\r\n\t\t}\r\n\t}*/\r\n\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\r\n/*\r\n\tpublic function removeFromStage() \r\n\t{\r\n\t\tif (this.target!=null && this.target.parent!=null)\r\n\t\t\tthis.target.parent.removeChild(this.target);\r\n\t}\r\n\t\t\r\n\tpublic function audioTrigger(triggerName:String)\r\n\t{\r\n\t\tif (uixgElement.audio != null)\r\n\t\t{\r\n\t\t\tif (uixgElement.audio.hasOwnProperty(triggerName))\r\n\t\t\t{\r\n\t\t\t\ttry\r\n\t\t\t\t{\r\n\t\t\t\t\tUIXSound.playID(uixgElement.audio[triggerName]);\r\n\t\t\t\t}\r\n\t\t\t\tcatch (e:Error)\r\n\t\t\t\t{\r\n\t\t\t\t\tUIX.c.error(\"audio playback failed: \" + triggerName);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\tpublic function gotoParentFrame(frame:Dynamic) \r\n\t{\r\n\t\tif (targetParent != null)\r\n\t\t{\r\n\t\t\ttry\r\n\t\t\t{\r\n\t\t\t\ttargetParent.gotoAndStop(frame);\r\n\t\t\t}\r\n\t\t\tcatch (e:Error)\r\n\t\t\t{\r\n\t\t\t\tUIX.c.debug(\"Frame \" + frame+\" not found\");\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tpublic function gotoParentParentFrame(frame:Dynamic) \r\n\t{\r\n\t\tif (targetParent != null && targetParent.parent!=null)\r\n\t\t{\r\n\t\t\tif (Std.is(targetParent.parent, MovieClip))\r\n\t\t\t{\r\n\t\t\t\ttry\r\n\t\t\t\t{\r\n\t\t\t\t\tcast(targetParent.parent,MovieClip).gotoAndStop(frame);\r\n\t\t\t\t}\r\n\t\t\t\tcatch (e:Error)\r\n\t\t\t\t{\r\n\t\t\t\t\tUIX.c.debug(\"Frame \" + frame+\" not found\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\tpublic function gotoAndPlay(frame:Dynamic) \r\n\t{\r\n\t\tif (targetMC != null)\r\n\t\t{\r\n\t\t\ttargetMC.gotoAndPlay(frame);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic function gotoAndStop(frame:Dynamic) \r\n\t{\r\n\t\tif (targetMC != null)\r\n\t\t{\r\n\t\t\ttargetMC.gotoAndStop(frame);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic function play() \r\n\t{\r\n\t\tif (targetMC != null)\r\n\t\t{\r\n\t\t\ttargetMC.play();\r\n\t\t}\r\n\t}\r\n\r\n\tpublic function stop() \r\n\t{\r\n\t\tif (targetMC != null)\r\n\t\t{\r\n\t\t\ttargetMC.stop();\r\n\t\t}\r\n\t}\t\r\n\r\n\tpublic function addChild(child:DisplayObject):DisplayObject\r\n\t{\r\n\t\tif (targetMC != null)\r\n\t\t{\r\n\t\t\treturn targetMC.addChild(child);\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\tpublic function addChildAt(child:DisplayObject,index:Int):DisplayObject\r\n\t{\r\n\t\tif (targetMC != null)\r\n\t\t{\r\n\t\t\treturn targetMC.addChildAt(child,index);\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\tpublic function removeChild(child:DisplayObject):DisplayObject\r\n\t{\r\n\t\tif (targetMC != null)\r\n\t\t{\r\n\t\t\treturn targetMC.removeChild(child);\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\tpublic function removeChildAt(index:Int):DisplayObject\r\n\t{\r\n\t\tif (targetMC != null)\r\n\t\t{\r\n\t\t\treturn targetMC.removeChildAt(index);\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\t\r\n\tpublic function removeChildren(?beginIndex:Int=0,?endIndex:Int=0x7FFFFFFF) \r\n\t{\r\n\t\tif (targetMC != null)\r\n\t\t{\r\n\t\t\ttargetMC.removeChildren(beginIndex,endIndex);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic function setVar(varName:String, value:Dynamic) \r\n\t{\r\n\t\tUIXScanner.variables.setValue(varName, value);\r\n\t}\r\n\t\r\n\tpublic function getVar(varName:String):Dynamic\r\n\t{\r\n\t\treturn UIXScanner.variables.getValue(varName);\r\n\t}\r\n\t\r\n\tpublic function hasVar(varName:String, checkForNull:Bool=false):Bool\r\n\t{\r\n\t\tif (checkForNull)\r\n\t\t\treturn UIXScanner.variables.hasValue(varName) && UIXScanner.variables.getValue(varName) != null;\r\n\t\telse\r\n\t\t\treturn UIXScanner.variables.hasValue(varName);\r\n\t}\r\n\t\r\n\tpublic function getAsset(assetCode:String):Dynamic\r\n\t{\r\n\t\treturn UIXScanner.i.getAsset(assetCode);\r\n\t}\r\n\t\r\n\tpublic function hasAsset(assetCode:String, checkForNull:Bool=false):Bool\r\n\t{\r\n\t\t//if (checkForNull)\r\n\t\t\treturn UIXScanner.i.getAsset(assetCode) != null;\r\n\t}\r\n\t*/\r\n\t//===================================================================================\r\n\t// UIX track\r\n\t//-----------------------------------------------------------------------------------\r\n\r\n/*\tpublic function uixAdd(str:String, callBack:Dynamic->Void) \r\n\t{\r\n\t\tvar uixe:UIXEventItem = UIX.add(str, callBack);\r\n\t\tif (uixListeners == null)\r\n\t\t\tuixListeners = [];\r\n\t\tuixListeners.push(uixe);\r\n\t}\r\n\t\r\n\tpublic function uixRemove(str:String, callBack:Dynamic->Void) \r\n\t{\r\n\t\tif (uixListeners != null)\r\n\t\t{\r\n\t\t\tfor (i in 0...uixListeners.length) \r\n\t\t\t{\r\n\t\t\t\tif (str == uixListeners[i].eventName && callBack == uixListeners[i].callback)\r\n\t\t\t\t\tuixListeners.splice(i, 1);\r\n\t\t\t}\r\n\t\t}\r\n\t\tUIX.remove(str, callBack);\r\n\t}\r\n\t\r\n\tpublic function uixRemoveAll() \r\n\t{\r\n\t\tif (uixListeners != null)\r\n\t\t{\r\n\t\t\tfor (i in 0...uixListeners.length) \r\n\t\t\t{\r\n\t\t\t\tUIX.remove(uixListeners[i].eventName, uixListeners[i].callback);\r\n\t\t\t}\r\n\t\t}\r\n\t\tuixListeners = null;\r\n\t}\r\n*/\r\n\t//===================================================================================\r\n\t// Rasterize\r\n\t//-----------------------------------------------------------------------------------\r\n\r\n/*\tpublic function rasterize(freeeze:Bool=true) \r\n\t{\r\n\t\tvar bounds = target.getBounds(targetParent);\r\n\t\thiddenChildren = [];\r\n\t\t\r\n\t\tif (rasterBitmapData!=null)\r\n\t\t\trasterBitmapData.dispose();\r\n\t\t\t\r\n\t\tvar m = new Matrix();\r\n\t\tm.translate( bounds.x, bounds.y);\r\n\t\trasterBitmapData = new BitmapData(Std.int(bounds.width), Std.int(bounds.height), true, 0);\r\n\t\trasterBitmapData.drawWithQuality(targetMC,null,null,null,null,true,StageQuality.BEST);\r\n\t\t\r\n\t\tif (freeeze)\r\n\t\t{\r\n\t\t\tif (rasterBitmap==null)\r\n\t\t\t\trasterBitmap = new Bitmap(rasterBitmapData, PixelSnapping.NEVER, true);\r\n\t\t\t\t\r\n\t\t\tfor (i in 0...targetMC.numChildren) \r\n\t\t\t{\r\n\t\t\t\tvar cc:DisplayObject = targetMC.getChildAt(i);\r\n\t\t\t\tif (cc != null && cc.visible==true)\r\n\t\t\t\t{\r\n\t\t\t\t\tcc.visible = false;\r\n\t\t\t\t\thiddenChildren.push(cc);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\trasterBitmap.x = bounds.x;\r\n\t\t\trasterBitmap.y = bounds.y;\r\n\t\t\taddChild(rasterBitmap);\r\n\t\t}\r\n\t}\r\n\t\r\n\tpublic function unrasterize() \r\n\t{\r\n\t\tif (rasterBitmap != null)\r\n\t\t{\r\n\t\t\tremoveChild(rasterBitmap);\r\n\t\t\trasterBitmap = null;\r\n\t\t}\r\n\t\t\t\r\n\t\tif (rasterBitmapData != null)\r\n\t\t{\r\n\t\t\trasterBitmapData.dispose();\r\n\t\t\trasterBitmapData = null;\r\n\t\t}\r\n\t\t\r\n\t\tif (hiddenChildren != null)\r\n\t\t{\r\n\t\t\tfor (i in 0...hiddenChildren.length) \r\n\t\t\t{\r\n\t\t\t\tif (hiddenChildren[i]!=null)\r\n\t\t\t\t\thiddenChildren[i].visible = true;\r\n\t\t\t}\r\n\t\t\thiddenChildren = [];\r\n\t\t}\r\n\t}\r\n*/\t\r\n/*\t\r\n\tpublic var g(get, never): Graphics;\r\n\tfunction get_g()\r\n\t{\r\n\t\tif (targetMC == null)\r\n\t\t\treturn null;\r\n\t\t\t\r\n\t\treturn targetMC.graphics;\r\n\t}\r\n\t\r\n\t@:isVar public var visible(get, set): Bool;\r\n\tfunction get_visible()\r\n\t{\r\n\t\tif (target == null)\r\n\t\t\treturn false;\r\n\t\t\t\r\n\t\treturn target.visible;\r\n\t}\r\n\tfunction set_visible(value:Bool) \r\n\t{\r\n\t\tif (target == null)\r\n\t\t\treturn false;\r\n\t\ttarget.visible = value;\r\n\t\treturn value;\r\n\t}\r\n\t\r\n\t@:isVar public var x(get, set) \t: Float;\r\n\tfunction get_x()\r\n\t{\r\n\t\t//if (target == null)\r\n\t\t\t//return 0;\r\n\t\t\t\r\n\t\treturn target.x;\r\n\t}\r\n\tfunction set_x(value:Float)\r\n\t{\r\n\t\t//if (target == null)\r\n\t\t\t//return 0;\r\n\t\ttarget.x = value;\r\n\t\treturn value;\r\n\t}\r\n\t\r\n\t@:isVar public var y(get, set) : Float;\r\n\tfunction get_y()\r\n\t{\r\n\t\t//if (target == null)\r\n\t\t\t//return 0;\r\n\t\t\t\r\n\t\treturn target.y;\r\n\t}\r\n\tfunction set_y(value:Float)\r\n\t{\r\n\t\t//if (target == null)\r\n\t\t\t//return 0;\r\n\t\ttarget.y = value;\r\n\t\treturn value;\r\n\t}\r\n\t\r\n\t@:isVar public var alpha(get, set) : Float;\r\n\tfunction get_alpha()\r\n\t{\r\n\t\tif (target == null)\r\n\t\t\treturn 0.0;\r\n\t\t\t\r\n\t\treturn target.alpha;\r\n\t}\r\n\tfunction set_alpha(value:Float)\r\n\t{\r\n\t\tif (target == null)\r\n\t\t\treturn 0.0;\r\n\t\t\t\r\n\t\ttarget.alpha = value;\r\n\t\treturn value;\r\n\t}\r\n*/\t\r\n\t//===================================================================================\r\n\t// Dispose\r\n\t//-----------------------------------------------------------------------------------\r\n\t\t\r\n\t//public function dispose()\r\n\t//{\r\n\t\t//audioTrigger(\"onDestroy\");\r\n\t\t//uixRemoveAll();\r\n\t\t\r\n/*\t\tfor (i in 0...timerList.length) \r\n\t\t{\r\n\t\t\ttimerList[i].stop();\r\n\t\t\ttimerList[i] = null;\r\n\t\t}\r\n\t\ttimerList = null;*/\r\n\t\t\r\n/*\t\tclearAllTimeouts();\r\n\t\tclearAllIntervals();\r\n\t\t\r\n\t\tif (this.rollOverHandler is Function)\r\n\t\t\tUIX.events.removeRollOver(rollOverActionTarget, onRollOverHandler);\r\n\t\t\t\r\n\t\tif (this.rollOutHandler is Function)\r\n\t\t\tUIX.events.removeRollOut(rollOutActionTarget, onRollOutHandler);\r\n\t\t\t\r\n\t\trollOverActionTarget = null;\r\n\t\tthis.rollOverHandler = null;\r\n\t\t\t\r\n\t\trollOutActionTarget = null;\r\n\t\tthis.rollOutHandler = null;\r\n\t\t\r\n\t\tcheckAudioEvent(\"onDestroy\");\t\t\t\r\n\r\n\t\tif (_sound)\r\n\t\t\t_sound = null;*/\r\n\t\t\t\r\n\t\t//if (targetMC != null)\r\n\t\t//{\r\n\t\t\t//trace(\"hey im on... \", targetMC.currentFrame);\r\n\t\t//}\r\n\t\t\t\r\n/*\t\tif (!disposed)\r\n\t\t{\r\n\t\t\tstopTick();\r\n\t\t\treleaseDeclarations();\t\r\n\t\t\tdeclaredVars = null;\r\n\t\t\t//runElementEvent(\"onDestroy\");\r\n\t\t\t//origin = null;\r\n\t\t\t//originalScale = null;\r\n\t\t\t//releaseDeclarations();\r\n\t\t\t//clearTimeout(delayTimeout1);\r\n\t\t\t//clearTimeout(delayTimeout2);\r\n\t\t\ttarget = null;\r\n\t\t\ttargetParent = null;\r\n\t\t\ttargetText = null;\r\n\t\t\ttargetButton = null;\r\n\t\t\tuixgElement = null;\r\n\t\t\tthis.stage = null;\r\n\t\t\tdisposed = true;\r\n\t\t\tscanner = null;\r\n\t\t}\t*/\t\t\r\n\t//}\r\n\t\r\n/*\t@:isVar var tickEnabled(get, set) : Bool;\r\n\tfunction get_tickEnabled():Bool \r\n\t{\r\n\t\treturn tickEnabled;\r\n\t}\r\n\tfunction set_tickEnabled(value:Bool):Bool \r\n\t{\r\n\t\tif (!tickEnabled && value)\r\n\t\t{\r\n\t\t\tstartTick();\r\n\t\t}\r\n\t\telse if (tickEnabled && !value)\r\n\t\t{\r\n\t\t\tstopTick();\r\n\t\t}\r\n\t\treturn tickEnabled = value;\r\n\t}\r\n\t\t\t\r\n\t@:isVar var interactionEnabled(get, set) : Bool = true;\r\n\tfunction get_interactionEnabled():Bool \r\n\t{\r\n\t\treturn interactionEnabled;\r\n\t}\r\n\tfunction set_interactionEnabled(value:Bool):Bool \r\n\t{\r\n\t\tif (!interactionEnabled && value)\r\n\t\t{\r\n\t\t\ttarget.mouseEnabled = true;\r\n\t\t\tif (targetMC != null)\r\n\t\t\t\ttargetMC.mouseChildren = true;\r\n\t\t}\r\n\t\telse if (interactionEnabled && !value)\r\n\t\t{\r\n\t\t\ttarget.mouseEnabled = false;\r\n\t\t\tif (targetMC != null)\r\n\t\t\t\ttargetMC.mouseChildren = false;\r\n\t\t}\r\n\t\treturn interactionEnabled = value;\r\n\t}\r\n\t\r\n\tfunction set_scanChildren(value:Bool):Bool \r\n\t{\r\n\t\tif (target!=null)\r\n\t\t\tvalue ? target.tabIndex = 0 : target.tabIndex = -99999;\r\n\t\t\t\r\n\t\treturn scanChildren = value;\r\n\t}*/\r\n\t\t\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\t\r\n//}\r\n\r\n","package no.logic.kha.uix.scene.uixcomp;\r\n\r\nimport no.logic.kha.uix.UIX;\r\nimport no.logic.kha.uix.scene.DisplayObject;\r\nimport no.logic.kha.uix.scene.Text;\r\nimport no.logic.kha.uix.scene.uixcomp.UIXGComponent;\r\nimport no.logic.kha.uix.scene.uixcomp.UIXGComponentManager;\r\nimport no.logic.kha.uix.scene.uixcomp.UIXGElement;\r\nimport no.logic.kha.uix.utils.StringUtils;\r\n\r\n/**\r\n * ...\r\n * @author Tommy Svensson\r\n */\r\n\r\nclass UIXGButtonComponent extends UIXGComponent\r\n{\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\t\r\n\t//===================================================================================\r\n\t// Consts \r\n\t//-----------------------------------------------------------------------------------\r\n\r\n\t//===================================================================================\r\n\t// Properties \r\n\t//-----------------------------------------------------------------------------------\r\n\t\r\n\tpublic var textField\t\t\t\t: Text;\r\n\t\t\r\n\t//===================================================================================\r\n\t// Callbacks \r\n\t//-----------------------------------------------------------------------------------\t\t\r\n\t\r\n\t//===================================================================================\r\n\t// Variables \r\n\t//-----------------------------------------------------------------------------------\t\t\r\n\r\n\tprivate var originalText\t\t\t: String;\t\r\n\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\t\r\n\tpublic function new(uixgElement:UIXGElement) \r\n\t{\r\n\t\tsuper(uixgElement);\r\n\t\tinit();\r\n\t}\r\n\t\r\n\tfunction init() \r\n\t{\r\n\t\ttargetButton.mouseEnabled = true;\r\n\t\ttargetButton.onMouseOver = function(t:InteractiveObject) \r\n\t\t{\r\n\t\t\tUIXGComponentManager.eventCommand(UIXComponentEventAction.onRollOver,uixgElement);\r\n\t\t\tonMouseOver();\r\n\t\t}\r\n\t\ttargetButton.onMouseOut = function(t:InteractiveObject)\r\n\t\t{\r\n\t\t\tUIXGComponentManager.eventCommand(UIXComponentEventAction.onRollOut,uixgElement);\r\n\t\t\tonMouseOut();\r\n\t\t}\r\n\t\ttargetButton.onClick = function(t:InteractiveObject)\r\n\t\t{\r\n\t\t\tUIXGComponentManager.eventCommand(UIXComponentEventAction.onClick,uixgElement);\r\n\t\t\tonClick();\r\n\t\t}\r\n\t\ttargetButton.onMouseDown = function(t:InteractiveObject)\r\n\t\t{\r\n\t\t\tUIXGComponentManager.eventCommand(UIXComponentEventAction.onPress,uixgElement);\r\n\t\t\tonMouseDown();\r\n\t\t}\r\n\t\ttargetButton.onMouseUp = function(t:InteractiveObject)\r\n\t\t{\r\n\t\t\tUIXGComponentManager.eventCommand(UIXComponentEventAction.onRelease,uixgElement);\r\n\t\t\tonMouseUp();\r\n\t\t}\r\n\t\ttargetButton.onRightClick = function(t:InteractiveObject)\r\n\t\t{\r\n\t\t\tonRightClick();\r\n\t\t}\r\n\t\ttargetButton.onMiddleClick = function(t:InteractiveObject)\r\n\t\t{\r\n\t\t\tonMiddleClick();\r\n\t\t}\r\n\t}\t\r\n\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\t\r\n\r\n\t\r\n\t//===================================================================================\r\n\t// Mouse Events \r\n\t//-----------------------------------------------------------------------------------\t\t\r\n\t\r\n\t//Override\r\n\t\r\n\tfunction onMouseOver(){};\r\n\tfunction onMouseOut(){};\r\n\tfunction onClick(){};\r\n\tfunction onMouseDown(){};\r\n\tfunction onMouseUp(){};\r\n\tfunction onRightClick(){};\r\n\tfunction onMiddleClick(){};\r\n\t\r\n\t//===================================================================================\r\n\t// Dispose\r\n\t//-----------------------------------------------------------------------------------\r\n\t\r\n\toverride function dispose()\r\n\t{\r\n\t}\r\n\t\t\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\t\r\n\t\r\n}\t\r\n\t\r\n","package no.logic.kha.uix.scene.uixcomp;\r\n\r\nimport haxe.Json;\r\nimport haxe.crypto.Base64;\r\nimport no.logic.kha.uix.scene.DisplayObject;\r\nimport no.logic.kha.uix.types.Object;\r\n\r\n/**\r\n * ...\r\n * @author Tommy Svensson\r\n */\r\n\r\nclass UIXGElement\r\n{\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\t\r\n\t//===================================================================================\r\n\t// Consts \r\n\t//-----------------------------------------------------------------------------------\r\n\r\n\tpublic static inline var TYPE_NONE\t\t\t\t\t\t: String \t= \"none\";\r\n\tpublic static inline var TYPE_SOUND\t\t\t\t\t\t: String \t= \"sound\";\r\n\tpublic static inline var TYPE_IMAGE\t\t\t\t\t\t: String \t= \"image\";\r\n\tpublic static inline var TYPE_VIDEO\t\t\t\t\t\t: String \t= \"video\";\r\n\tpublic static inline var TYPE_TEXT\t\t\t\t\t\t: String \t= \"text\";\r\n\tpublic static inline var TYPE_CUSTOM\t\t\t\t\t: String \t= \"custom\";\r\n\tpublic static inline var TYPE_BUTTON\t\t\t\t\t: String \t= \"button\";\r\n\tpublic static inline var TYPE_COMMAND\t\t\t\t\t: String \t= \"command\";\r\n\tpublic static inline var TYPE_ACTION\t\t\t\t\t: String \t= \"action\";\r\n\t\r\n\tpublic static inline var ORIGINAL_CONTENT_SHOW\t\t\t: String \t= \"show\";\r\n\tpublic static inline var ORIGINAL_CONTENT_ALPHA0\t\t: String \t= \"alpha0\";\r\n\tpublic static inline var ORIGINAL_CONTENT_HIDDEN\t\t: String \t= \"hide\";\r\n\tpublic static inline var ORIGINAL_CONTENT_REMOVE\t\t: String \t= \"remove\";\r\n\t\t\r\n\t//===================================================================================\r\n\t// Properties \r\n\t//-----------------------------------------------------------------------------------\r\n\t\r\n\tpublic var target\t\t\t\t\t: DisplayObject;\r\n\tpublic var type\t\t\t\t\t\t: String;\r\n\tpublic var rawUIXData\t\t\t\t: Object;\r\n\tpublic var targetType\t\t\t\t: String;\r\n\tpublic var name\t\t\t\t\t\t: String;\r\n\tpublic var dispObjName\t\t\t\t: String;\r\n\tpublic var createdTime\t\t\t\t: String;\r\n\tpublic var uniqueID\t\t\t\t\t: String;\r\n\t\r\n\tpublic  var className\t\t\t\t: String;\r\n\tpublic \tvar classDefinition\t\t\t: Class<Dynamic>;\r\n\t//public \tvar classInstance\t\t\t: Dynamic;// UIXGComponent;\r\n\tpublic \tvar classInstance\t\t\t: UIXGComponent;\r\n\tpublic \tvar classProperties\t\t\t: Array<Dynamic>;\r\n\t\r\n\tpublic\tvar\tcentralCode\t\t\t\t: String;\r\n\tpublic\tvar\tmode\t\t\t\t\t: String;\r\n\r\n\tpublic \tvar bindVariable\t\t\t: String;\r\n\tpublic  var binding2Way\t\t\t\t: Bool\t\t\t\t\t= false;\r\n\tpublic  var disposeOnRemove\t\t\t: Bool\t\t\t\t\t= true;\r\n\t\r\n\tpublic\tvar\tsource\t\t\t\t\t: String;\r\n\tpublic\tvar\tscaleMode\t\t\t\t: String;\r\n\tpublic\tvar\tfullscreen\t\t\t\t: Bool\t\t\t\t\t= false;\r\n\tpublic\tvar\tvolume\t\t\t\t\t: Float\t\t\t\t\t= 1;\r\n\tpublic \tvar smooth\t\t\t\t\t: Bool\t\t\t\t\t= true;\r\n\tpublic \tvar clipping\t\t\t\t: Bool\t\t\t\t\t= true;\r\n\tpublic \tvar autoPlay\t\t\t\t: Bool\t\t\t\t\t= true;\r\n\tpublic \tvar loop\t\t\t\t\t: Bool\t\t\t\t\t= false;\r\n\tpublic \tvar repeat\t\t\t\t\t: Int\t\t\t\t\t= 0;\r\n\tpublic \tvar stageVideo\t\t\t\t: Bool\t\t\t\t\t= false;\r\n\tpublic \tvar editable\t\t\t\t: Bool\t\t\t\t\t= false;\r\n\tpublic \tvar upperCase\t\t\t\t: Bool\t\t\t\t\t= false;\r\n\tpublic \tvar upperCaseFirstLetter\t: Bool\t\t\t\t\t= false;\r\n\tpublic \tvar useCache\t\t\t\t: Bool\t\t\t\t\t= false;\r\n\tpublic\tvar\toriginalMode\t\t\t: String\t\t\t\t= ORIGINAL_CONTENT_SHOW;\r\n\tpublic\tvar\tnotes\t\t\t\t\t: String;\r\n\tpublic \tvar triggerOnChange\t\t\t: Bool\t\t\t\t\t= false;\r\n\tpublic \tvar triggerOnPressEnter\t\t: Bool\t\t\t\t\t= true;\r\n\tpublic \tvar triggerOneShot\t\t\t: Bool\t\t\t\t\t= false;\r\n\tpublic \tvar buttonMode\t\t\t\t: Bool\t\t\t\t\t= true;\r\n\tpublic \tvar clickSingleShot\t\t\t: Bool\t\t\t\t\t= false;\r\n\tpublic \tvar bitmapMatrixCache\t\t: Bool\t\t\t\t\t= false;\r\n\tpublic \tvar mouseEnabled\t\t\t: Bool\t\t\t\t\t= true;\r\n\tpublic \tvar mouseChildren\t\t\t: Bool\t\t\t\t\t= true;\r\n\tpublic \tvar events\t\t\t\t\t: Object\t\t\t\t= {};\r\n\tpublic \tvar layout\t\t\t\t\t: Object\t\t\t\t= {};\r\n\tpublic \tvar audio\t\t\t\t\t: Object\t\t\t\t= {};\r\n\tpublic \tvar elementSoundID\t\t\t: String;\r\n\tpublic \tvar elementSoundGroup\t\t: String;\r\n\tpublic \tvar soundStopWhenRemoved\t: Bool\t\t\t\t\t= true;\r\n\tpublic \tvar soundPlayRandom\t\t\t: Bool\t\t\t\t\t= false;\r\n\tpublic \tvar uid\t\t\t\t\t\t: String;\r\n\tpublic \tvar multiLine\t\t\t\t: Bool;\r\n\tpublic \tvar wordWrap\t\t\t\t: Bool;\r\n\tpublic \tvar autoTransition\t\t\t: Bool\t\t\t\t\t= true;\r\n\tpublic \tvar showFirstFrame\t\t\t: Bool\t\t\t\t\t= false;\r\n\tpublic \tvar parseYouTube\t\t\t: Bool\t\t\t\t\t= false;\t\r\n\tpublic \tvar assetCode\t\t\t\t: String;\r\n\tpublic \tvar originalText\t\t\t: String;\r\n\t//public \tvar childBindingList\t\t: Array<InteractiveObject>;\r\n\t\t\r\n\t//===================================================================================\r\n\t// Declarations \r\n\t//-----------------------------------------------------------------------------------\r\n\r\n\t//===================================================================================\r\n\t// Variables \r\n\t//-----------------------------------------------------------------------------------\t\t\r\n\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\t\r\n\tpublic function new(rawUIXData:Object,target:DisplayObject) \r\n\t{\r\n\t\tif (rawUIXData == null)\r\n\t\t\treturn;\r\n\t\t\t\r\n\t\tthis.rawUIXData = rawUIXData;\r\n\t\tthis.target = target;\r\n\t\t\t\r\n\t\tUIXGComponentManager.copyProps(this, target);\r\n\t\tUIXGComponentManager.setupUIXGElement(this);\r\n\t\tUIXGComponentManager.processProperties(this);\r\n\t}\t\r\n\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\t\t\r\n\t\r\n\tpublic function update()\r\n\t{\r\n\t\tif (classInstance != null)\r\n\t\t{\r\n\t\t\tclassInstance.updateInternal();\r\n\t\t\tif (classInstance.updateEnabled && !classInstance.isDisposed)\r\n\t\t\t\tclassInstance.update();\r\n\t\t}\r\n\t}\r\n\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\t\t\r\n\t\r\n\tpublic function dispose() \r\n\t{\r\n\t\tif (classInstance != null)\r\n\t\t\tclassInstance.disposeComponent();\r\n\t\t\t\r\n\t\tdispObjName = null;\r\n\t\tclassInstance = null;\r\n\t\tclassDefinition = null;\r\n\t\tclassProperties = null;\r\n\t\ttarget = null;\r\n\t\ttype = null;\r\n\t\trawUIXData = null;\r\n\t\ttargetType = null;\r\n\t\tname = null;\r\n\t\tcreatedTime = null;\r\n\t\tuniqueID = null;\r\n\t\tcentralCode = null;\r\n\t\tmode = null;\r\n\t\tbindVariable = null;\r\n\t\tsource = null;\r\n\t\tassetCode = null;\r\n\t\tscaleMode = null;\r\n\t\toriginalMode = null;\r\n\t\tnotes = null;\r\n\t\tevents = null;\r\n\t\tlayout = null;\r\n\t\taudio = null;\r\n\t\toriginalText = null;\r\n\t\telementSoundID = null;\r\n\t\telementSoundGroup = null;\r\n\t\tuid = null;\r\n\t}\r\n\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\t\r\n\t\r\n}\r\n\r\n","package no.logic.kha.uix.scene.uixcomp;\r\n\r\nimport no.logic.kha.uix.scene.Bitmap;\r\nimport no.logic.kha.uix.scene.DisplayObject;\r\nimport no.logic.kha.uix.scene.Text;\r\nimport no.logic.kha.uix.scene.uixcomp.UIXGComponent;\r\nimport no.logic.kha.uix.scene.uixcomp.UIXGComponentManager;\r\nimport no.logic.kha.uix.scene.uixcomp.UIXGElement;\r\nimport no.logic.kha.uix.utils.StringUtils;\r\n\r\n/**\r\n * ...\r\n * @author Tommy Svensson\r\n */\r\n\r\nclass UIXGImageComponent extends UIXGComponent\r\n{\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\t\r\n\t//===================================================================================\r\n\t// Consts \r\n\t//-----------------------------------------------------------------------------------\r\n\r\n\t//===================================================================================\r\n\t// Properties \r\n\t//-----------------------------------------------------------------------------------\r\n\t\r\n\tpublic var bitmap\t\t\t\t\t: Bitmap;\r\n\t\t\r\n\t//===================================================================================\r\n\t// Callbacks \r\n\t//-----------------------------------------------------------------------------------\t\t\r\n\t\r\n\t//===================================================================================\r\n\t// Variables \r\n\t//-----------------------------------------------------------------------------------\t\t\r\n\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\t\r\n\tpublic function new(uixgElement:UIXGElement) \r\n\t{\r\n\t\tsuper(uixgElement);\r\n\t\tinit();\r\n\t}\r\n\t\r\n\tfunction init() \r\n\t{\r\n\t\t//target.width = 128;\r\n\t\t//target.height = 256;\r\n\t\tvar scaleMode:ScaleMode = ScaleMode.NONE;\r\n\t\tif (uixgElement.scaleMode != null)\r\n\t\t{\r\n\t\t\tswitch uixgElement.scaleMode \r\n\t\t\t{\r\n\t\t\t\tcase \"strech\":\r\n\t\t\t\t\tscaleMode = ScaleMode.STRETCH;\r\n\t\t\t\tcase \"fit\":\r\n\t\t\t\t\tscaleMode = ScaleMode.FIT;\r\n\t\t\t\tcase \"fill\":\r\n\t\t\t\t\tscaleMode = ScaleMode.FILL;\r\n\t\t\t\tdefault:\r\n\t\t\t}\r\n\t\t}\r\n\t\tbitmap = new Bitmap({isComponentPart:true,source:uixgElement.source, width:1, height:1, clipping:uixgElement.clipping, scaleMode:scaleMode});\r\n\t\ttarget.addChild(bitmap);\r\n\t\t\t//autoLoad:false,\r\n\t\t\t//source:null,\r\n\t\t\t//liveResize:true,\r\n\t\t\t//width:target.width, \r\n\t\t\t//height:target.height, \r\n\t\t\t//parent:target, \r\n\t\t\t//scaleMode:uixgElement.scaleMode\r\n\t\t//});\r\n\t\t\r\n\t\tif (uixgElement!=null)\r\n\t\t\tupdateFromBindings();\r\n\t}\t\r\n\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\t\r\n\t\r\n\toverride function updateInternal()\r\n\t{\r\n\t\tif (bitmap != null)\r\n\t\t{\r\n\t\t\tbitmap.width = @:privateAccess target._width;\r\n\t\t\tbitmap.height = @:privateAccess target._height;\r\n\t\t}\r\n\t}\r\n\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\t\r\n\r\n\tprivate function setSource(path:String)\r\n\t{\r\n\t\tif (bitmap!=null)\r\n\t\t{\r\n\t\t\tif (path != null)\r\n\t\t\t\tbitmap.load(path);\r\n\t\t\telse if (bitmap.image!=null)\r\n\t\t\t\tbitmap.unload();\r\n\t\t}\r\n\t}\r\n\t\r\n\t//===================================================================================\r\n\t// Update from binddings\r\n\t//-----------------------------------------------------------------------------------\r\n\r\n\toverride function updateFromBindings()\r\n\t{\r\n\t\tif (uixgElement.bindVariable!=null)\r\n\t\t{\r\n\t\t\tif (uixgElement.bindVariable.indexOf(\"@\") != -1)\r\n\t\t\t\tsetSource(getRelatedVariable(uixgElement.bindVariable));\r\n\t\t\telse\r\n\t\t\t\tsetSource(UIX.getVar(uixgElement.bindVariable));\r\n\t\t}\r\n\t\telse if (uixgElement.assetCode!=null)\r\n\t\t{\r\n\t\t\tsetSource(UIX.getAsset(uixgElement.assetCode,\"file\"));\r\n\t\t}\r\n\t}\r\n\r\n\t//===================================================================================\r\n\t// Dispose\r\n\t//-----------------------------------------------------------------------------------\r\n\t\r\n\toverride function dispose()\r\n\t{\r\n\t\tif (bitmap != null)\r\n\t\t{\r\n\t\t\tif (bitmap.parent != null)\r\n\t\t\t\tbitmap.parent.removeChild(bitmap);\r\n\t\t\t\t\r\n\t\t\tbitmap.dispose();\r\n\t\t\tbitmap = null;\r\n\t\t}\r\n\t}\r\n\t\t\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\t\r\n\t\r\n}\t\r\n\t\r\n\t\r\n\t\r\n\t\r\n\t\r\n\t\r\n/*\t\r\n\tfunction init() \r\n\t{\r\n\t\tif (uixgElement!=null)\r\n\t\t{\r\n\t\t\ttextField = targetText;\r\n\t\t\t//textField.embedFonts = true;\r\n\t\t\t//textField.antiAliasType = AntiAliasType.ADVANCED;\r\n\t\t\t\r\n\t\t\tif (textField!=null)\r\n\t\t\t{\r\n\t\t\t\t//textField.antiAliasType = AntiAliasType.ADVANCED;\r\n\t\t\t\t//textField.sharpness = 10;\r\n\t\t\t\toriginalText = textField.text;\r\n\r\n\t\t\t\tif (uixgElement.editable)\r\n\t\t\t\t{\r\n\t\t\t\t\ttextField.type = TextFieldType.INPUT;\r\n\t\t\t\t}\r\n\t\t\t\r\n\t\t\t\tsetText(originalText);\r\n\r\n\t\t\t\tif (textField.type == TextFieldType.INPUT)\r\n\t\t\t\t\taddInputListeners();\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tupdate();\r\n\t\t\trunElementEvent(\"onCreate\");\r\n\t\t}\r\n\t}\r\n\t\t\t\r\n\tprivate function addInputListeners() \r\n\t{\r\n\t\ttextField.addEventListener(Event.CHANGE, onTextFieldChange);\r\n\t\ttextField.addEventListener(FocusEvent.FOCUS_IN, onTextFieldFocusIn);\r\n\t\ttextField.addEventListener(FocusEvent.FOCUS_OUT, onTextFieldFocusOut);\r\n\t}\r\n\t\r\n\tprivate function removeInputListeners(txf:TextField=null) \r\n\t{\r\n\t\tif (txf==null)\r\n\t\t\ttxf = textField;\r\n\t\t\r\n\t\tif (txf!=null)\r\n\t\t{\r\n\t\t\ttxf.removeEventListener(Event.CHANGE, onTextFieldChange);\r\n\t\t\ttxf.removeEventListener(FocusEvent.FOCUS_IN, onTextFieldFocusIn);\r\n\t\t\ttxf.removeEventListener(FocusEvent.FOCUS_OUT, onTextFieldFocusOut);\r\n\t\t}\r\n\t}\r\n\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\t\r\n\tprivate function setTextFieldText(newText:String)\r\n\t{\r\n\t\tif (textField!=null)\r\n\t\t{\r\n\t\t\tif (newText!=null)\r\n\t\t\t{\r\n\t\t\t\tif (newText.indexOf(\"@html@\") != -1)\r\n\t\t\t\t{\r\n\t\t\t\t\ttextField.htmlText = newText.split(\"@html@\").join(\"\");\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t\ttextField.text = newText;\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t\ttextField.text = \"\";\r\n\t\t}\r\n\t}\r\n\t\r\n\tpublic function setText(text:Dynamic) \r\n\t{\r\n\t\tif (textField!=null)\r\n\t\t{\r\n\t\t\tif ((text==null) || (text == \"null\") || (text == \"Null\") || (text == \"NULL\"))\r\n\t\t\t\ttext = \"\";\r\n\t\t\t\t\r\n\t\t\tsetTextFieldText(parseText(text));\r\n\t\t}\r\n\t}\r\n\t\t\r\n\tprivate function parseText(text:Dynamic):String \r\n\t{\r\n\t\tvar ptx:String;\r\n\t\tif (Std.is(text,String))\r\n\t\t\tptx = text;\r\n\t\telse\r\n\t\t\tptx = Std.string(text);\r\n\r\n\t\tif (ptx!=null)\r\n\t\t{\r\n\t\t\tif (uixgElement.upperCase)\r\n\t\t\t\tptx = checkTextCodes(ptx).toUpperCase();\r\n\t\t\telse if (uixgElement.upperCaseFirstLetter)\r\n\t\t\t\tptx = checkTextCodes(StringUtils.toFirstCharUppercase(ptx));\r\n\t\t\telse\r\n\t\t\t\tptx = checkTextCodes(ptx);\r\n\t\t}\r\n\t\treturn ptx;\r\n\t}\r\n\t\r\n\t//===================================================================================\r\n\t// Update\r\n\t//-----------------------------------------------------------------------------------\r\n\r\n\toverride public function update()\r\n\t{\r\n\t\tif (uixgElement.bindVariable!=null)\r\n\t\t{\r\n\t\t\tif (uixgElement.bindVariable.indexOf(\"@\") != -1)\r\n\t\t\t\tsetText(getRelatedVariable(uixgElement.bindVariable));\r\n\t\t\telse\r\n\t\t\t\tsetText(UIXScanner.variables.getValue(uixgElement.bindVariable));\r\n\t\t}\r\n\t\telse if (uixgElement.assetCode!=null)\r\n\t\t{\r\n\t\t\t//var atx:String = UIXScanner.assetCodes.getValue(uixgElement.assetCode);\r\n\t\t\t//setText(Utf8.encode(atx));\r\n\t\t\tsetText(UIXScanner.i.getAsset(uixgElement.assetCode));\r\n\t\t}\r\n\t}\r\n\t\r\n\tprivate function checkTextCodes(varText:String):String \r\n\t{\r\n\t\tif (originalText != null && uixgElement.bindVariable!=null && (originalText.indexOf(\"{var}\") != -1))\r\n\t\t{\r\n\t\t\tvar nVar:String = UIXScanner.variables.getValue(uixgElement.bindVariable);\r\n\t\t\tif (nVar != null)\r\n\t\t\t{\r\n\t\t\t\tvarText = StringTools.replace(originalText, \"{var}\", nVar);\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if (originalText != null && uixgElement.assetCode!=null && (originalText.indexOf(\"{var}\") != -1))\r\n\t\t{\r\n\t\t\tvar nVar2:String = UIXScanner.i.getAsset(uixgElement.assetCode);\r\n\t\t\tif (nVar2 != null)\r\n\t\t\t{\r\n\t\t\t\tvarText = StringTools.replace(originalText, \"{var}\", nVar2);\r\n\t\t\t}\r\n\t\t}\r\n\t\t\t\r\n\t\treturn varText;\r\n\t}\r\n\t\r\n\t//===================================================================================\r\n\t// Textfield events\r\n\t//-----------------------------------------------------------------------------------\t\t\r\n\r\n\tprivate function forceTrigger() \r\n\t{\r\n\t\tupdateViaBindings();\r\n\t\t//runElementEvent(\"onChange\");\r\n\t\t\t\r\n\t\tif (uixgElement.triggerOneShot)\r\n\t\t\tremoveInputListeners();\r\n\t}\r\n\t\r\n\tprivate function onTextFieldChange(e:Event) \r\n\t{\r\n\t\tif (uixgElement.triggerOnChange)\r\n\t\t{\r\n\t\t\tupdateViaBindings();\r\n\t\t\trunElementEvent(\"onChange\");\r\n\t\t\t\r\n\t\t\tif (uixgElement.triggerOneShot)\r\n\t\t\t\tremoveInputListeners();\r\n\t\t}\r\n\t}\r\n\t\r\n\tprivate function updateViaBindings() \r\n\t{\r\n\t\tif (uixgElement.bindVariable!=null)\r\n\t\t\tUIXScanner.variables.setValue(uixgElement.bindVariable, textField.text);\r\n\t}\r\n\r\n\tprivate function onTextFieldPressEnter(e:KeyboardEvent) \r\n\t{\r\n\t\tif (e.target == textField)\r\n\t\t{\r\n\t\t\tif (uixgElement.bindVariable!=null)\r\n\t\t\t\tUIXScanner.variables.setValue(uixgElement.bindVariable, textField.text);\r\n\t\t\t\t\r\n\t\t\tif (uixgElement.triggerOnPressEnter)\r\n\t\t\t\trunElementEvent(\"onChange\");\r\n\t\t\t\t\r\n\t\t\tif (uixgElement.triggerOneShot)\r\n\t\t\t\tremoveInputListeners();\r\n\t\t}\r\n\t}\r\n\r\n\tprivate function onTextFieldFocusIn(e:FocusEvent) \r\n\t{\r\n\t\t//UIX.dispatch(MobileApp.SOFTKEYBOARD_OPEN);\r\n\t\ttextField.addEventListener(KeyboardEvent.KEY_UP, onKeyUp);\r\n\t}\r\n\t\r\n\tprivate function onTextFieldFocusOut(e:FocusEvent) \r\n\t{\r\n\t\ttextField.removeEventListener(KeyboardEvent.KEY_UP, onKeyUp);\r\n\t\t\r\n\t\t//if (MobileApp.isSoftKeyBoardVisible)\t\t\t\r\n\t\t\t//UIX.dispatch(MobileApp.SOFTKEYBOARD_CLOSED);\r\n\t}\r\n\r\n\tprivate function onKeyUp(e:KeyboardEvent) \r\n\t{\r\n\t\tif (uixgElement.triggerOnPressEnter)\r\n\t\t{\r\n\t\t\tswitch (e.keyCode) \r\n\t\t\t{\r\n\t\t\t\tcase Keyboard.ENTER:\r\n\t\t\t\t\tonTextFieldPressEnter(e);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\t//===================================================================================\r\n\t// Dispose\r\n\t//-----------------------------------------------------------------------------------\r\n\t\r\n\toverride public function dispose()\r\n\t{\r\n\t\tsuper.dispose();\r\n\t}\r\n\t\t\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\t\r\n}\r\n\r\n*/","package no.logic.kha.uix.scene.uixcomp;\r\n\r\nimport no.logic.kha.uix.scene.DisplayObject;\r\nimport no.logic.kha.uix.scene.Text;\r\nimport no.logic.kha.uix.scene.uixcomp.UIXGComponent;\r\nimport no.logic.kha.uix.scene.uixcomp.UIXGComponentManager;\r\nimport no.logic.kha.uix.scene.uixcomp.UIXGElement;\r\nimport no.logic.kha.uix.utils.StringUtils;\r\n\r\n/**\r\n * ...\r\n * @author Tommy Svensson\r\n */\r\n\r\nclass UIXGTextComponent extends UIXGComponent\r\n{\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\t\r\n\t//===================================================================================\r\n\t// Consts \r\n\t//-----------------------------------------------------------------------------------\r\n\r\n\t//===================================================================================\r\n\t// Properties \r\n\t//-----------------------------------------------------------------------------------\r\n\t\r\n\tpublic var textField\t\t\t\t: Text;\r\n\t\t\r\n\t//===================================================================================\r\n\t// Callbacks \r\n\t//-----------------------------------------------------------------------------------\t\t\r\n\t\r\n\t//===================================================================================\r\n\t// Variables \r\n\t//-----------------------------------------------------------------------------------\t\t\r\n\r\n\tprivate var originalText\t\t\t: String;\t\r\n\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\t\r\n\tpublic function new(uixgElement:UIXGElement) \r\n\t{\r\n\t\tsuper(uixgElement);\r\n\t\tinit();\r\n\t}\r\n\t\r\n\tfunction init() \r\n\t{\r\n\t\tif (uixgElement!=null)\r\n\t\t{\r\n\t\t\ttextField = targetText;\r\n\t\t\t\r\n\t\t\tif (textField!=null)\r\n\t\t\t{\r\n\t\t\t\toriginalText = textField.text;\r\n\r\n\t\t\t\t//if (uixgElement.editable)\r\n\t\t\t\t//{\r\n\t\t\t\t\t//textField.type = TextFieldType.INPUT;\r\n\t\t\t\t//}\r\n\t\t\t\r\n\t\t\t\tsetText(originalText);\r\n\r\n\t\t\t\t//if (textField.type == TextFieldType.INPUT)\r\n\t\t\t\t\t//addInputListeners();\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tupdateFromBindings();\r\n\t\t\t//runElementEvent(\"onCreate\");\r\n\t\t}\r\n\t}\t\r\n\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\t\r\n\r\n\tprivate function setTextFieldText(newText:String)\r\n\t{\r\n\t\tif (textField!=null)\r\n\t\t{\r\n\t\t\tif (newText!=null)\r\n\t\t\t{\r\n/*\t\t\t\tif (newText.indexOf(\"@html@\") != -1)\r\n\t\t\t\t{\r\n\t\t\t\t\ttextField.htmlText = newText.split(\"@html@\").join(\"\");\r\n\t\t\t\t}\r\n\t\t\t\telse*/\r\n\t\t\t\t\ttextField.text = newText;\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t\ttextField.text = \"\";\r\n\t\t}\r\n\t}\r\n\t\r\n\tpublic function setText(text:Dynamic) \r\n\t{\r\n\t\tif (textField!=null)\r\n\t\t{\r\n\t\t\tif ((text==null) || (text == \"null\") || (text == \"Null\") || (text == \"NULL\"))\r\n\t\t\t\ttext = \"\";\r\n\t\t\t\t\r\n\t\t\tsetTextFieldText(parseText(text));\r\n\t\t}\r\n\t}\r\n\t\t\r\n\tprivate function parseText(text:Dynamic):String \r\n\t{\r\n\t\tvar ptx:String;\r\n\t\tif (Std.is(text,String))\r\n\t\t\tptx = text;\r\n\t\telse\r\n\t\t\tptx = Std.string(text);\r\n\r\n\t\tif (ptx!=null)\r\n\t\t{\r\n\t\t\tif (uixgElement.upperCase)\r\n\t\t\t\tptx = checkTextCodes(ptx).toUpperCase();\r\n\t\t\telse if (uixgElement.upperCaseFirstLetter)\r\n\t\t\t\tptx = checkTextCodes(StringUtils.toFirstCharUppercase(ptx));\r\n\t\t\telse\r\n\t\t\t\tptx = checkTextCodes(ptx);\r\n\t\t}\r\n\t\treturn ptx;\r\n\t}\t\r\n\t\r\n\t//===================================================================================\r\n\t// Update from binddings\r\n\t//-----------------------------------------------------------------------------------\r\n\r\n\toverride function updateFromBindings()\r\n\t{\r\n\t\tif (uixgElement.bindVariable!=null)\r\n\t\t{\r\n\t\t\tif (uixgElement.bindVariable.indexOf(\"@\") != -1)\r\n\t\t\t\tsetText(getRelatedVariable(uixgElement.bindVariable));\r\n\t\t\telse\r\n\t\t\tsetText(UIX.getVar(uixgElement.bindVariable));\r\n\t\t}\r\n\t\telse if (uixgElement.assetCode!=null)\r\n\t\t{\r\n\t\t\tsetText(UIX.getText(uixgElement.assetCode));\r\n\t\t}\r\n\t}\r\n\t\r\n\tprivate function checkTextCodes(varText:String):String \r\n\t{\r\n\t\tif (originalText != null && uixgElement.bindVariable!=null && (originalText.indexOf(\"{var}\") != -1))\r\n\t\t{\r\n\t\t\tvar nVar:String = UIX.getVar(uixgElement.bindVariable);\r\n\t\t\tif (nVar != null)\r\n\t\t\t{\r\n\t\t\t\tvarText = StringTools.replace(originalText, \"{var}\", nVar);\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if (originalText != null && uixgElement.assetCode!=null && (originalText.indexOf(\"{text}\") != -1))\r\n\t\t{\r\n\t\t\tvar nVar2:String = UIX.getText(uixgElement.assetCode);\r\n\t\t\tif (nVar2 != null)\r\n\t\t\t{\r\n\t\t\t\tvarText = StringTools.replace(originalText, \"{text}\", nVar2);\r\n\t\t\t}\r\n\t\t}\r\n\t\t\t\r\n\t\treturn varText;\r\n\t}\r\n\t\r\n\t//===================================================================================\r\n\t// Dispose\r\n\t//-----------------------------------------------------------------------------------\r\n\t\r\n\toverride function dispose()\r\n\t{\r\n\t\toriginalText = null;\r\n\t\ttextField = null;\r\n\t}\r\n\t\t\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\t\r\n\t\r\n}\t\r\n\t\r\n\t\r\n\t\r\n\t\r\n\t\r\n\t\r\n/*\t\r\n\tfunction init() \r\n\t{\r\n\t\tif (uixgElement!=null)\r\n\t\t{\r\n\t\t\ttextField = targetText;\r\n\t\t\t//textField.embedFonts = true;\r\n\t\t\t//textField.antiAliasType = AntiAliasType.ADVANCED;\r\n\t\t\t\r\n\t\t\tif (textField!=null)\r\n\t\t\t{\r\n\t\t\t\t//textField.antiAliasType = AntiAliasType.ADVANCED;\r\n\t\t\t\t//textField.sharpness = 10;\r\n\t\t\t\toriginalText = textField.text;\r\n\r\n\t\t\t\tif (uixgElement.editable)\r\n\t\t\t\t{\r\n\t\t\t\t\ttextField.type = TextFieldType.INPUT;\r\n\t\t\t\t}\r\n\t\t\t\r\n\t\t\t\tsetText(originalText);\r\n\r\n\t\t\t\tif (textField.type == TextFieldType.INPUT)\r\n\t\t\t\t\taddInputListeners();\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tupdate();\r\n\t\t\trunElementEvent(\"onCreate\");\r\n\t\t}\r\n\t}\r\n\t\t\t\r\n\tprivate function addInputListeners() \r\n\t{\r\n\t\ttextField.addEventListener(Event.CHANGE, onTextFieldChange);\r\n\t\ttextField.addEventListener(FocusEvent.FOCUS_IN, onTextFieldFocusIn);\r\n\t\ttextField.addEventListener(FocusEvent.FOCUS_OUT, onTextFieldFocusOut);\r\n\t}\r\n\t\r\n\tprivate function removeInputListeners(txf:TextField=null) \r\n\t{\r\n\t\tif (txf==null)\r\n\t\t\ttxf = textField;\r\n\t\t\r\n\t\tif (txf!=null)\r\n\t\t{\r\n\t\t\ttxf.removeEventListener(Event.CHANGE, onTextFieldChange);\r\n\t\t\ttxf.removeEventListener(FocusEvent.FOCUS_IN, onTextFieldFocusIn);\r\n\t\t\ttxf.removeEventListener(FocusEvent.FOCUS_OUT, onTextFieldFocusOut);\r\n\t\t}\r\n\t}\r\n\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\t\r\n\tprivate function setTextFieldText(newText:String)\r\n\t{\r\n\t\tif (textField!=null)\r\n\t\t{\r\n\t\t\tif (newText!=null)\r\n\t\t\t{\r\n\t\t\t\tif (newText.indexOf(\"@html@\") != -1)\r\n\t\t\t\t{\r\n\t\t\t\t\ttextField.htmlText = newText.split(\"@html@\").join(\"\");\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t\ttextField.text = newText;\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t\ttextField.text = \"\";\r\n\t\t}\r\n\t}\r\n\t\r\n\tpublic function setText(text:Dynamic) \r\n\t{\r\n\t\tif (textField!=null)\r\n\t\t{\r\n\t\t\tif ((text==null) || (text == \"null\") || (text == \"Null\") || (text == \"NULL\"))\r\n\t\t\t\ttext = \"\";\r\n\t\t\t\t\r\n\t\t\tsetTextFieldText(parseText(text));\r\n\t\t}\r\n\t}\r\n\t\t\r\n\tprivate function parseText(text:Dynamic):String \r\n\t{\r\n\t\tvar ptx:String;\r\n\t\tif (Std.is(text,String))\r\n\t\t\tptx = text;\r\n\t\telse\r\n\t\t\tptx = Std.string(text);\r\n\r\n\t\tif (ptx!=null)\r\n\t\t{\r\n\t\t\tif (uixgElement.upperCase)\r\n\t\t\t\tptx = checkTextCodes(ptx).toUpperCase();\r\n\t\t\telse if (uixgElement.upperCaseFirstLetter)\r\n\t\t\t\tptx = checkTextCodes(StringUtils.toFirstCharUppercase(ptx));\r\n\t\t\telse\r\n\t\t\t\tptx = checkTextCodes(ptx);\r\n\t\t}\r\n\t\treturn ptx;\r\n\t}\r\n\t\r\n\t//===================================================================================\r\n\t// Update\r\n\t//-----------------------------------------------------------------------------------\r\n\r\n\toverride public function update()\r\n\t{\r\n\t\tif (uixgElement.bindVariable!=null)\r\n\t\t{\r\n\t\t\tif (uixgElement.bindVariable.indexOf(\"@\") != -1)\r\n\t\t\t\tsetText(getRelatedVariable(uixgElement.bindVariable));\r\n\t\t\telse\r\n\t\t\t\tsetText(UIXScanner.variables.getValue(uixgElement.bindVariable));\r\n\t\t}\r\n\t\telse if (uixgElement.assetCode!=null)\r\n\t\t{\r\n\t\t\t//var atx:String = UIXScanner.assetCodes.getValue(uixgElement.assetCode);\r\n\t\t\t//setText(Utf8.encode(atx));\r\n\t\t\tsetText(UIXScanner.i.getAsset(uixgElement.assetCode));\r\n\t\t}\r\n\t}\r\n\t\r\n\tprivate function checkTextCodes(varText:String):String \r\n\t{\r\n\t\tif (originalText != null && uixgElement.bindVariable!=null && (originalText.indexOf(\"{var}\") != -1))\r\n\t\t{\r\n\t\t\tvar nVar:String = UIXScanner.variables.getValue(uixgElement.bindVariable);\r\n\t\t\tif (nVar != null)\r\n\t\t\t{\r\n\t\t\t\tvarText = StringTools.replace(originalText, \"{var}\", nVar);\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if (originalText != null && uixgElement.assetCode!=null && (originalText.indexOf(\"{var}\") != -1))\r\n\t\t{\r\n\t\t\tvar nVar2:String = UIXScanner.i.getAsset(uixgElement.assetCode);\r\n\t\t\tif (nVar2 != null)\r\n\t\t\t{\r\n\t\t\t\tvarText = StringTools.replace(originalText, \"{var}\", nVar2);\r\n\t\t\t}\r\n\t\t}\r\n\t\t\t\r\n\t\treturn varText;\r\n\t}\r\n\t\r\n\t//===================================================================================\r\n\t// Textfield events\r\n\t//-----------------------------------------------------------------------------------\t\t\r\n\r\n\tprivate function forceTrigger() \r\n\t{\r\n\t\tupdateViaBindings();\r\n\t\t//runElementEvent(\"onChange\");\r\n\t\t\t\r\n\t\tif (uixgElement.triggerOneShot)\r\n\t\t\tremoveInputListeners();\r\n\t}\r\n\t\r\n\tprivate function onTextFieldChange(e:Event) \r\n\t{\r\n\t\tif (uixgElement.triggerOnChange)\r\n\t\t{\r\n\t\t\tupdateViaBindings();\r\n\t\t\trunElementEvent(\"onChange\");\r\n\t\t\t\r\n\t\t\tif (uixgElement.triggerOneShot)\r\n\t\t\t\tremoveInputListeners();\r\n\t\t}\r\n\t}\r\n\t\r\n\tprivate function updateViaBindings() \r\n\t{\r\n\t\tif (uixgElement.bindVariable!=null)\r\n\t\t\tUIXScanner.variables.setValue(uixgElement.bindVariable, textField.text);\r\n\t}\r\n\r\n\tprivate function onTextFieldPressEnter(e:KeyboardEvent) \r\n\t{\r\n\t\tif (e.target == textField)\r\n\t\t{\r\n\t\t\tif (uixgElement.bindVariable!=null)\r\n\t\t\t\tUIXScanner.variables.setValue(uixgElement.bindVariable, textField.text);\r\n\t\t\t\t\r\n\t\t\tif (uixgElement.triggerOnPressEnter)\r\n\t\t\t\trunElementEvent(\"onChange\");\r\n\t\t\t\t\r\n\t\t\tif (uixgElement.triggerOneShot)\r\n\t\t\t\tremoveInputListeners();\r\n\t\t}\r\n\t}\r\n\r\n\tprivate function onTextFieldFocusIn(e:FocusEvent) \r\n\t{\r\n\t\t//UIX.dispatch(MobileApp.SOFTKEYBOARD_OPEN);\r\n\t\ttextField.addEventListener(KeyboardEvent.KEY_UP, onKeyUp);\r\n\t}\r\n\t\r\n\tprivate function onTextFieldFocusOut(e:FocusEvent) \r\n\t{\r\n\t\ttextField.removeEventListener(KeyboardEvent.KEY_UP, onKeyUp);\r\n\t\t\r\n\t\t//if (MobileApp.isSoftKeyBoardVisible)\t\t\t\r\n\t\t\t//UIX.dispatch(MobileApp.SOFTKEYBOARD_CLOSED);\r\n\t}\r\n\r\n\tprivate function onKeyUp(e:KeyboardEvent) \r\n\t{\r\n\t\tif (uixgElement.triggerOnPressEnter)\r\n\t\t{\r\n\t\t\tswitch (e.keyCode) \r\n\t\t\t{\r\n\t\t\t\tcase Keyboard.ENTER:\r\n\t\t\t\t\tonTextFieldPressEnter(e);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\t//===================================================================================\r\n\t// Dispose\r\n\t//-----------------------------------------------------------------------------------\r\n\t\r\n\toverride public function dispose()\r\n\t{\r\n\t\tsuper.dispose();\r\n\t}\r\n\t\t\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\t\r\n}\r\n\r\n*/","package no.logic.kha.uix.script;\r\n\r\nimport no.logic.kha.uix.scene.Sprite;\r\n\r\nclass As3Interpreter\r\n{\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\r\n\tstatic public function frameScriptEval(script:String, context:Sprite) \r\n\t{\r\n\t\tif (script == null)\r\n\t\t\treturn;\r\n\t\t\t\r\n\t\tvar cmds:Array<String> = script.split(\";\");\r\n\t\tfor (c in cmds) \r\n\t\t{\r\n\t\t\tif (c != \"\")\r\n\t\t\t{\r\n\t\t\t\tif (c.indexOf(\"(\") !=-1 && c.indexOf(\")\") !=-1)\r\n\t\t\t\t{\r\n\t\t\t\t\tvar cArr:Array<String> = c.split(\"(\");\r\n\t\t\t\t\tif (cArr.length == 2)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tvar command:String = cArr[0];\r\n\t\t\t\t\t\tvar parameter:String = cArr[1].split(\")\")[0];\r\n\t\t\t\t\t\texecuteCmd(command, context, parameter);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (cArr.length == 1)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tvar command:String = cArr[0];\r\n\t\t\t\t\t\texecuteCmd(command, context);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\t\r\n\t\t}\t\r\n\t}\r\n\t\r\n\tstatic function executeCmd(command:String, context:Sprite, ?parameter:String) \r\n\t{\r\n\t\tparameter = parameter.toLowerCase();\r\n\t\tcommand = command.toLowerCase();\r\n\t\tswitch (command) \r\n\t\t{\r\n\t\t\tcase \"stop\":\r\n\t\t\t{\r\n\t\t\t\tcontext.stop();\r\n\t\t\t}\r\n\t\t\tcase \"play\":\r\n\t\t\t{\r\n\t\t\t\tcontext.play();\r\n\t\t\t}\r\n\t\t\tcase \"gotoandplay\":\r\n\t\t\t{\r\n\t\t\t\tif (parameter == \"random\")\r\n\t\t\t\t{\r\n\t\t\t\t\tcontext.gotoAndPlayRandom();\r\n\t\t\t\t}\r\n\t\t\t\telse if (parameter != null)\r\n\t\t\t\t\tcontext.gotoAndPlay(parameter);\r\n\t\t\t}\r\n\t\t\tcase \"gotoandstop\":\r\n\t\t\t{\r\n\t\t\t\tif (parameter == \"random\")\r\n\t\t\t\t\tcontext.gotoAndStopRandom();\r\n\t\t\t\telse if (parameter != null)\r\n\t\t\t\t\tcontext.gotoAndStop(parameter);\r\n\t\t\t}\r\n\t\t\tdefault:\r\n\t\t\t\t\r\n\t\t}\r\n\t}\r\n\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\t\r\n}\r\n","package no.logic.kha.uix.text.bitmapfont;\r\n\r\nimport kha.Color;\r\nimport kha.Image;\r\nimport kha.graphics2.Graphics;\r\nimport no.logic.kha.uix.types.Point.Point2D;\r\n\r\nclass BMFont\r\n{\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\t\r\n\tvar charMap\t\t\t\t\t: Map<String, Point2D>;   \r\n\tvar image\t\t\t\t\t: Image;\r\n\tvar charWidth\t\t\t\t: Int;\r\n\tvar charHeight\t\t\t\t: Int;\r\n\tpublic var charScale\t\t: Float;\r\n\tpublic var upperCaseOnly\t: Bool;\r\n\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\r\n\tpublic function new(chars:String,image:Image,charWidth:Int,charHeight:Int)\r\n\t{\r\n\t\tthis.image = image;\r\n\t\tthis.charWidth = charWidth;\r\n\t\tthis.charHeight = charHeight;\r\n\t\tsetup(chars);\r\n\t}\r\n\t\r\n\tfunction setup(chars:String)\r\n\t{\r\n\t\tcharMap = new Map<String, Point2D>();\r\n\t\tvar cx:Int = 0;\r\n\t\tvar cy:Int = 0;\r\n\t\tfor (c in 0...chars.length) \r\n\t\t{\r\n\t\t\tcharMap.set(chars.charAt(c), {x:cx, y:cy});\r\n\t\t\tcx += charWidth;\r\n\t\t\tif (cx > image.width)\r\n\t\t\t{\r\n\t\t\t\tcx = 0;\r\n\t\t\t\tcy += charHeight;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\t\r\n\tpublic function drawString(g:Graphics,x:Float,y:Float,str:String)\r\n\t{\r\n\t\tif (str==null || g==null)\r\n\t\t\treturn;\r\n\t\t\t\r\n\t\tif (upperCaseOnly)\r\n\t\t\tstr = str.toUpperCase();\r\n\t\t\t\r\n\t\tfor (s in 0...str.length) \r\n\t\t{\r\n\t\t\tvar p = charMap.get(str.charAt(s));\r\n\t\t\tif (p != null)\r\n\t\t\t{\r\n\t\t\t\tg.drawScaledSubImage(image, p.x, p.y, charWidth, charHeight, x+=charWidth*charScale, y, charWidth*charScale, charHeight*charScale);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n}\r\n","package no.logic.kha.uix.types;\r\n\r\nclass HistoryFloat\r\n{\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\t\r\n\tvar history\t\t: Array<Float>;\r\n\tvar length\t\t: Int;\r\n\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\t\r\n\tpublic function new(length:Int=5)\r\n\t{\r\n\t\tthis.length = length;\r\n\t\thistory = [];\r\n\t}\r\n\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\t\r\n\tpublic function set(value:Float):Float\r\n\t{\r\n\t\thistory.insert(0, value);\r\n\t\tif (history.length >= length)\r\n\t\t\thistory.resize(length);\r\n\t\treturn get();\r\n\t}\r\n\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\t\r\n\tpublic function get():Float\r\n\t{\r\n\t\treturn history[history.length - 1];\r\n\t}\r\n\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\t\r\n\tpublic function clear()\r\n\t{\r\n\t\thistory = [];\r\n\t}\r\n\t\r\n\tpublic function dispose()\r\n\t{\r\n\t\thistory = null;\r\n\t}\r\n\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n}","package no.logic.kha.uix.types;\r\n\r\n@:forward() abstract Object(ObjectType) from ObjectType {\r\n\t\r\n\t\r\n\tpublic inline function new () {\r\n\t\t\r\n\t\tthis = { };\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic inline function hasOwnProperty (name:String):Bool {\r\n\t\t\r\n\t\treturn (this != null && Reflect.hasField (this, name));\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic inline function isPrototypeOf (theClass:Class<Dynamic>):Bool {\r\n\t\t\r\n\t\tvar c = Type.getClass (this);\r\n\t\t\r\n\t\twhile (c != null) {\r\n\t\t\t\r\n\t\t\tif (c == theClass) return true;\r\n\t\t\tc = Type.getSuperClass (c);\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\treturn false;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t@:noCompletion @:dox(hide) public function iterator ():Iterator<String> {\r\n\t\t\r\n\t\tvar fields = Reflect.fields (this);\r\n\t\tif (fields == null) fields = [];\r\n\t\treturn fields.iterator ();\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic inline function propertyIsEnumerable (name:String):Bool {\r\n\t\t\r\n\t\treturn (this != null && Reflect.hasField (this, name) && Std.is (Reflect.field (this, name), Iterable_));\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic inline function toLocaleString ():String {\r\n\t\t\r\n\t\treturn Std.string (this);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t@:to public inline function toString ():String {\r\n\t\t\r\n\t\treturn Std.string (this);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic inline function valueOf ():Object {\r\n\t\t\r\n\t\treturn this;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t@:arrayAccess @:noCompletion @:dox(hide) public inline function __get (key:String):Dynamic {\r\n\t\t\r\n\t\treturn Reflect.field (this, key);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t@:arrayAccess @:noCompletion @:dox(hide) public inline function __set (key:String, value:Dynamic):Dynamic {\r\n\t\t\r\n\t\tReflect.setField (this, key, value);\r\n\t\treturn value;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n}\r\n\r\n\r\n#if (!cs || haxe_ver > \"3.3.0\")\r\n\r\n@:keep @:native('haxe.lang.Iterator') private interface Iterator_<T> {\r\n\t\r\n\tpublic function hasNext ():Bool;\r\n\tpublic function next ():T;\r\n\t\r\n}\r\n\r\n\r\n@:keep @:native('haxe.lang.Iterable') private interface Iterable_<T> {\r\n\t\r\n\tpublic function iterator ():Iterator_<T>;\r\n\t\r\n}\r\n\r\n#else\r\ntypedef Iterator_<T> = cs.internal.Iterator<T>;\r\ntypedef Iterable_<T> = cs.internal.Iterator.Iterable<T>;\r\n#end\r\n\r\ntypedef ObjectType = Dynamic;\r\n","package no.logic.kha.uix.types;\r\nimport kha.FastFloat;\r\n\r\nclass Rectangle\r\n{\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\t\r\n\tpublic var x\t\t\t: Null<Float>\t\t= 0;\r\n\tpublic var y\t\t\t: Null<Float>\t\t= 0;\r\n\tpublic var width\t\t: Null<Float>\t\t= 0;\r\n\tpublic var height\t\t: Null<Float>\t\t= 0;\r\n\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\t\r\n\tpublic function new(?x:Null<Float>=0, ?y:Null<Float>=0, ?width:Null<Float>=0, ?height:Null<Float>=0)\r\n\t{\r\n\t\tthis.x = x;\r\n\t\tthis.y = y;\r\n\t\tthis.width = width;\r\n\t\tthis.height = height;\r\n\t}\r\n\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\t\r\n\tpublic function overlap(other:Rectangle):Bool\r\n\t{\r\n\t\tif (x!=null&&y!=null&&width!=null&&height!=null)\r\n\t\t\treturn x <= other.x + other.width && x + width >= other.x && y <= other.y + other.height && y + height >= other.y;\r\n\t\telse\r\n\t\t\treturn false;\r\n\t}\r\n\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\t\r\n}","package no.logic.kha.uix.utils;\r\nimport kha.Color;\r\n\r\nclass ColorUtils \r\n{\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\t\r\n/*\tstatic public function RGBToHex(r:Int, g:Int, b:Int):String\r\n\t{\r\n\t\tvar sr = r.toString(16);\r\n\t\tvar sg = g.toString(16);\r\n\t\tvar sb = b.toString(16);\r\n\r\n\t\tif (sr.length == 1)\r\n\t\t\tsr = \"0\" + r;\r\n\t\tif (sg.length == 1)\r\n\t\t\tsg = \"0\" + g;\r\n\t\tif (sb.length == 1)\r\n\t\t\tsb = \"0\" + b;\r\n\r\n\t\treturn \"#\" + sr + sg + sb;\r\n\t}\r\n\t*/\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\t\r\n\t/**\r\n\t * A linear interpolator for hex colors.\r\n\t *\r\n\t * @param {Number} a  (hex color start val)\r\n\t * @param {Number} b  (hex color end val)\r\n\t * @param {Number} amount  (the amount to fade from a to b)\r\n\t *\r\n\t * @example\r\n\t * // returns 0x7f7f7f\r\n\t * lerpColor(0x000000, 0xffffff, 0.5)\r\n\t *\r\n\t * @returns {Number}\r\n\t */\r\n/*\tstatic public function lerpColorRGB(a:UInt, b:UInt, amount:Float):UInt\r\n\t{\r\n\t\tvar ar:Int = a >> 16;\r\n\t\tvar ag:Int = a >> 8 & 0xff;\r\n\t\tvar ab:Int = a & 0xff;\r\n\r\n\t\tvar br:Int = b >> 16;\r\n\t\tvar bg:Int = b >> 8 & 0xff;\r\n\t\tvar bb:Int = b & 0xff;\r\n\r\n\t\tvar rr:Float = ar + amount * (br - ar);\r\n\t\tvar rg:Float = ag + amount * (bg - ag);\r\n\t\tvar rb:Float = ab + amount * (bb - ab);\r\n\r\n\t\treturn (rr << 16) + (rg << 8) + (rb | 0);\r\n\t}*/\r\n\r\n\tstatic public function lerpColor(a:Color, b:Color, amount:Float, lerpAlpha:Bool=true):Color\r\n\t{\r\n\t\t//var cca:UInt = a.value;\r\n\t\t//var ar = a >> 16,\r\n\t\t//var ag = a >> 8 & 0xff,\r\n\t\t//var ab = a & 0xff,\r\n//\r\n\t\t//var br = b >> 16,\r\n\t\t//var bg = b >> 8 & 0xff,\r\n\t\t//var bb = b & 0xff,\r\n\r\n\t\tvar rr = a.R + amount * (b.R - a.R);\r\n\t\tvar rg = a.G + amount * (b.G - a.G);\r\n\t\tvar rb = a.B + amount * (b.B - a.B);\r\n\t\t\r\n\t\tvar ra = a.A;\r\n\t\tif (lerpAlpha)\r\n\t\t\tra+=(amount*(b.A-a.A));\r\n\r\n\t\treturn Color.fromFloats(rr, rg, rb, ra);\r\n\t}\r\n\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n}\r\n\t","package no.logic.kha.uix.utils;\r\nimport no.logic.kha.uix.utils.StringUtils;\r\n\r\n/**\r\n * ...\r\n * @author Tommy S.\r\n */\r\nclass Convert\r\n{\r\n\r\n\tpublic static function toBool( value:Dynamic ):Bool\r\n\t{\r\n\t\treturn false;\r\n\t\tvar isBoolean:Bool = false;\r\n\t\tvar strVal:String = Std.string(value);\r\n\t\t\r\n\t\t\r\n\t\tswitch ( strVal.toLowerCase() )\r\n\t\t{\r\n\t\t\tcase \"1\":\r\n\t\t\t\tisBoolean = true;\r\n\t\t\tcase \"true\":\r\n\t\t\t\tisBoolean = true;\r\n\t\t\tcase \"yes\":\r\n\t\t\t\tisBoolean = true;\r\n\t\t\tcase \"y\":\r\n\t\t\t\tisBoolean = true;\r\n\t\t\tcase \"on\":\r\n\t\t\t\tisBoolean = true;\r\n\t\t\tcase \"enabled\":\r\n\t\t\t\tisBoolean = true;\r\n\t\t}\r\n\r\n\t\treturn isBoolean;\r\n\t}\r\n/*\t\r\n\tpublic static function toUint( value:* ):uint\r\n\t{\r\n\t\treturn uint(value);\r\n\t}\r\n*/\t\r\n\tpublic static function toString( value:Any ):String\r\n\t{\r\n\t\tif (value == null)\r\n\t\t\treturn \"\";\r\n\t\t\t\r\n\t\tif (Std.is(value, String))\r\n\t\t{\r\n\t\t\tvar valStr:String = cast value;\r\n\t\t\tif (StringUtils.contains(valStr,\"%\"))\r\n\t\t\t{\r\n\t\t\t\tvar ta = valStr.split(\"%\");\r\n\t\t\t\tif (ta!=null)\r\n\t\t\t\t\treturn Std.string(ta[0]);\r\n\t\t\t\telse\r\n\t\t\t\t\treturn \"\";\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\treturn Std.string(value);\r\n\t\t\t}\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\treturn Std.string(value);\r\n\t\t}\r\n\t}\t\r\n\t\r\n\tpublic static function toInt( value:Dynamic ):Int\r\n\t{\r\n\t\tif (value == null)\r\n\t\t\treturn -1;\r\n\t\t\t\r\n\t\tif (Std.is(value, Int))\r\n\t\t{\r\n\t\t\tif (StringUtils.contains(value,\"%\"))\r\n\t\t\t{\r\n\t\t\t\tvar ta = value.split(\"%\");\r\n\t\t\t\tif (ta!=null)\r\n\t\t\t\t\treturn Std.parseInt(ta[0]);\r\n\t\t\t\telse\r\n\t\t\t\t\treturn -1;\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\treturn Std.parseInt(value);\r\n\t\t\t}\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\treturn Std.parseInt(value);\r\n\t\t}\r\n\t}\t\t\r\n\t\r\n\tpublic static function toUInt( value:Dynamic ):UInt\r\n\t{\r\n\t\tif (value == null)\r\n\t\t\treturn 0;\r\n\t\t\t\r\n/*\t\tif (Std.is(value, UInt))\r\n\t\t{\r\n\t\t\tif (StringUtils.contains(value,\"%\"))\r\n\t\t\t{\r\n\t\t\t\tvar ta = value.split(\"%\");\r\n\t\t\t\tif (ta!=null)\r\n\t\t\t\t\treturn cast(ta[0],UInt);\r\n\t\t\t\telse\r\n\t\t\t\t\treturn -1;\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\treturn cast(value,UInt);\r\n\t\t\t}\r\n\t\t}\r\n\t\telse\r\n\t\t{*/\r\n\t\t\treturn cast(value,UInt);\r\n\t\t//}\r\n\t}\t\r\n\t\r\n\tpublic static function toFloat( value:Dynamic, ?percentOfValue:Null<Float> ):Float\r\n\t{\r\n\t\tif (value == null)\r\n\t\t\treturn 0;\r\n\t\t\t\r\n\t\tif (Std.is(value, String))\r\n\t\t{\r\n\t\t\tif (StringUtils.contains(value,\"%\"))\r\n\t\t\t{\r\n\t\t\t\tvar ta = value.split(\"%\");\r\n\t\t\t\tif (ta != null)\r\n\t\t\t\t{\r\n\t\t\t\t\tif (percentOfValue != null)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\treturn Std.parseFloat(Std.string(ta[0]*percentOfValue*0.01));\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\treturn Std.parseFloat(Std.string(ta[0]));\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t\treturn 0;\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\treturn Std.parseFloat(value);\r\n\t\t\t}\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\treturn Std.parseFloat(Std.string(value));\r\n\t\t}\r\n\t\t/*\r\n\t\tif ((String(value).indexOf(\"f\")==-1) && (String(value).indexOf(\"e\")==-1) && (String(value).indexOf(\"d\")==-1) && (String(value).indexOf(\"c\")==-1) && (String(value).indexOf(\"b\")==-1) && (String(value).indexOf(\"a\")==-1))\r\n\t\t\treturn Number(value)\r\n\t\telse if (String(value).indexOf(\"0x\")==-1)\r\n\t\t{\r\n\t\t\treturn Number(uint(\"0x\"+value))\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\treturn Number(uint(value))\r\n\t\t}\r\n\t\t*/\r\n\t}\r\n\t\r\n/*\r\n\tpublic static function toVector3D( value:* ):Vector3D\r\n\t{\r\n\t\tvar rvec:Vector3D = new Vector3D();\r\n\t\tif (value is String)\r\n\t\t{\r\n\t\t\tvalue = toArray(value)\r\n\t\t}\r\n\t\tif ((value is XMLList) || (value is XML))\r\n\t\t{\r\n\t\t\tvalue=toArray(String(value));\r\n\t\t}\r\n\t\t\r\n\t\tif (value is Array)\r\n\t\t{\r\n\t\t\tif ((value as Array).length > 0) rvec.x = toNumber(value[0])\r\n\t\t\tif ((value as Array).length > 1) rvec.y = toNumber(value[1])\r\n\t\t\tif ((value as Array).length > 2) rvec.z = toNumber(value[2])\r\n\t\t\tif ((value as Array).length > 3) rvec.w = toNumber(value[3])\r\n\t\t}\r\n\t\t\r\n\t\treturn rvec;\r\n\t}\r\n\t\r\n\tpublic static function toVector4( value1:*=null, value2:*=null, value3:*=null, value4:*=null ):Vector.<Number>\r\n\t{\r\n\t\tvar ret:Vector.<Number>=Vector.<Number>([0,0,0,0]);\r\n\r\n\t\tif (value1)\r\n\t\t{\r\n\t\t\tif (value1 is String)\r\n\t\t\t\tvalue1 = toNumber(value1)\r\n\t\t\tif (value1 is Number)\r\n\t\t\t\tret[0]=value1;\r\n\t\t}\r\n\t\tif (value2)\r\n\t\t{\r\n\t\t\tif (value2 is String)\r\n\t\t\t\tvalue2 = toNumber(value2)\r\n\t\t\tif (value2 is Number)\r\n\t\t\t\tret[1]=value2;\r\n\t\t}\r\n\t\tif (value3)\r\n\t\t{\r\n\t\t\tif (value3 is String)\r\n\t\t\t\tvalue3 = toNumber(value3)\r\n\t\t\tif (value3 is Number)\r\n\t\t\t\tret[2]=value3;\r\n\t\t}\r\n\t\tif (value4)\r\n\t\t{\r\n\t\t\tif (value4 is String)\r\n\t\t\t\tvalue4 = toNumber(value4)\r\n\t\t\tif (value4 is Number)\r\n\t\t\t\tret[3]=value4;\r\n\t\t}\r\n\t\t\r\n\t\treturn ret;\r\n\t}\t\t\r\n\t\r\n\tstatic private function generic(value:*):* \r\n\t{\r\n\t\tvar nval:*;\r\n\t\treturn nval;\r\n\t}\r\n\t\r\n\tpublic static function toArray( value:* ):Array\r\n\t{\r\n\t\tvar retArr:Array = new Array();\r\n\t\t\r\n\t\tif (value is String)\r\n\t\t{\r\n\t\t\tif (String(value).indexOf(\"0x\") !== -1)\r\n\t\t\t{\r\n\t\t\t\tvalue = hexToObject(value).arraystring;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tvar ast:int = String(value).indexOf(\"[\");\r\n\t\t\tvar aen:int = String(value).indexOf(\"]\");\r\n\t\t\tif (ast !== -1 && aen !== -1)\r\n\t\t\t{\r\n\t\t\t\tretArr = String(value).substr(ast+1, aen-1).split(\",\");\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t\tretArr = String(value).split(\",\");\r\n\t\t}\r\n\t\t\r\n\t\treturn retArr;\r\n\t}\r\n\t\r\n\tstatic private function hexToObject(value:*):Object \r\n\t{\r\n\t\tvar retObj:Object = new Object();\r\n\t\tif (value is String)\r\n\t\t{\r\n\t\t\tvar itA:Array = String(value).split(\"\");\r\n\t\t\tretObj.r = toInt(String(itA[2]) + String(itA[3]));\r\n\t\t\tretObj.g = toInt(String(itA[4]) + String(itA[5]));\r\n\t\t\tretObj.b = toInt(String(itA[6]) + String(itA[7]));\r\n\t\t\tretObj.hex = toInt(String(itA[2]) + String(itA[3]) + String(itA[4]) + String(itA[5]) + String(itA[6]) + String(itA[7]));\r\n\t\t\tretObj.arraystring = String(String(itA[2]) + String(itA[3]) +\",\"+ String(itA[4]) + String(itA[5]) +\",\"+ String(itA[6]) + String(itA[7]));\r\n\t\t\tretObj.org = value;\r\n\t\t}\r\n\t\t\r\n\t\treturn retObj;\r\n\t}\r\n\t\r\n\tpublic static function prosent($prosent:String,$orgverdi:Number):*\r\n\t{\r\n\t\tif ($prosent.indexOf(\"%\") !== -1)\r\n\t\t{\r\n\t\t\tvar vnp:Number = Number($prosent.split(\"%\")[0]);\r\n\t\t\treturn $orgverdi * (vnp * 0.01);\r\n\t\t}\r\n\t\telse\r\n\t\t\treturn null;\r\n\t}\r\n\t\r\n\tpublic static function toDegrees(radians:Number):Number\r\n\t{\r\n\t\treturn radians * 180 / Math.PI;\r\n\t}\r\n\r\n\t//\tDegrees to radians\t\r\n\tpublic static function toRadians(degrees:Number):Number\r\n\t{\r\n\t\treturn degrees * Math.PI / 180;\r\n\t}\t\t\r\n*/\t\r\n}\r\n\r\n","package no.logic.kha.uix.utils;\r\n\r\n/**\r\n * ...\r\n * @author Tommy S.\r\n */\r\nclass DateUtils\r\n{\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\t\r\n\tstatic var days_nb\t\t: Array<String>\t\t= [\"søndag\", \"mandag\", \"tirsdag\", \"onsdag\", \"torsdag\", \"fredag\", \"lørdag\"];\r\n\tstatic var days_en\t\t: Array<String>\t\t= [\"sønday\", \"monday\", \"tuesday\", \"wednesday\", \"tursday\", \"friday\", \"saturday\"];\r\n\tstatic var months_nb\t: Array<String>\t\t= [\"januar\", \"februar\", \"mars\", \"april\", \"mai\", \"juni\", \"juli\", \"august\", \"september\", \"oktober\", \"november\", \"desember\"];\r\n\tstatic var months_nb_s\t: Array<String>\t\t= [\"jan.\", \"feb.\", \"mar.\", \"apr.\", \"mai\", \"jun.\", \"jul.\", \"aug.\", \"sept.\", \"okt.\", \"nov.\", \"des.\"];\r\n\tstatic var months_en\t: Array<String>\t\t= [\"january\", \"february\", \"march\", \"april\", \"may\", \"june\", \"july\", \"august\", \"september\", \"october\", \"november\", \"december\"];\r\n\tstatic var months_en_s\t: Array<String>\t\t= [\"jan.\", \"feb.\", \"mar.\", \"apr.\", \"may\", \"jun.\", \"jul.\", \"aug.\", \"sept.\", \"oct.\", \"nov.\", \"dec.\"];\r\n\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\t\r\n/*\tpublic static function parseUTCDate( str : String ) : Date\r\n\t{\r\n\t\tvar matches : Array = str.match(/^(\\d{4})-?(\\d{2})-?(\\d{2})(?:[T ](\\d{2}):?(\\d{2}):?(\\d{2})?(?:\\.(\\d{3,}))?(?:(Z)|([+\\-])(\\d{2})(?::?(\\d{2}))?))/);\r\n\r\n\t\tvar d : Date = new Date();\r\n\t\t//d.setTime(Date.parse(str));\r\n\r\n\t\td.setUTCFullYear(int(matches[1]), int(matches[2]) - 1, int(matches[3]));\r\n\t\td.setUTCHours(int(matches[4]), int(matches[5]), int(matches[6]), 0);\r\n\t\treturn d;\r\n\t}\t*/\t\r\n\t\r\n\tpublic static function getWeekDayName( date:Date, lang:String=\"nb\"):String\r\n\t{\r\n\t\tvar dayNr:Int = date.getDay();\r\n\t\tif (lang == \"nb\")\r\n\t\t\treturn days_nb[dayNr]\r\n\t\telse if (lang == \"en\")\r\n\t\t\treturn days_en[dayNr]\r\n\t\telse \r\n\t\t\treturn \"\";\r\n\t}\r\n\t\r\n\tpublic static function getMonthName( date:Date, short:Bool=false, lang:String=\"nb\"):String\r\n\t{\r\n\t\tvar monthNr:Int = date.getMonth();\r\n\t\tif (lang == \"nb\" && !short)\r\n\t\t\treturn months_nb[monthNr]\r\n\t\telse if (lang == \"nb\" && short)\r\n\t\t\treturn months_nb_s[monthNr]\r\n\t\telse if (lang == \"en\" && !short)\r\n\t\t\treturn months_en[monthNr]\r\n\t\telse if (lang == \"en\" && short)\r\n\t\t\treturn months_en_s[monthNr]\r\n\t\telse \r\n\t\t\treturn \"\";\r\n\t}\r\n\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\t\r\n\tstatic public function getFormattedDay(date:Date = null):String\r\n\t{\r\n\t\tif (date == null)\r\n\t\t\tdate = Date.now();\r\n\t\t\t\r\n\t\treturn StringUtils.enforceTwoDigitNumberToString(date.getDate()) + \"/\" + StringUtils.enforceTwoDigitNumberToString((date.getMonth() + 1));\r\n\t}\r\n\t\r\n\tstatic public function getFormattedTime(date:Date = null, includeSeconds:Bool=false):String\r\n\t{\r\n\t\tif (date == null)\r\n\t\t\tdate = Date.now();\r\n\t\t\t\r\n\t\tvar t = StringUtils.enforceTwoDigitNumberToString(date.getHours()) + \":\" + StringUtils.enforceTwoDigitNumberToString(date.getMinutes());\r\n\t\tvar t = StringUtils.enforceTwoDigitNumberToString(date.getHours()) + \":\" + StringUtils.enforceTwoDigitNumberToString(date.getMinutes());\r\n\t\tif (includeSeconds)\r\n\t\t\tt += \":\" + date.getSeconds();\r\n\t\t\t\r\n\t\treturn t;\r\n\t}\r\n\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\t\r\n\tpublic static function getWDateString(date:Date=null):String\r\n\t{\r\n\t\tvar correctDate = date;\r\n\t\tif (correctDate == null)\r\n\t\t\tcorrectDate = Date.now();\r\n\t\t\t\r\n\t\tvar ds:String = correctDate.getFullYear() + p2(correctDate.getMonth()+1) + p2(correctDate.getDate()) + p2(correctDate.getHours()) + p2(correctDate.getMinutes()) + p2(correctDate.getSeconds());\r\n\t\treturn ds;\r\n\t}\r\n\t\r\n\tpublic static function getDayDateMonthString(date:Date=null, lang:String=\"nb\", uppercaseFirst:Bool=true):String\r\n\t{\r\n\t\tvar correctDate = date;\r\n\t\tif (correctDate == null)\r\n\t\t\tcorrectDate = Date.now();\r\n\t\t\t\r\n\t\tvar ds:String = getWeekDayName(correctDate, lang) + \" \" + correctDate.getDate() + \" \" + getMonthName(correctDate, lang);\r\n\t\tif (uppercaseFirst)\r\n\t\t\tds = StringUtils.toFirstCharUppercase(ds);\r\n\t\treturn ds;\r\n\t}\r\n\t\r\n\tpublic static function getWDateInt(date:Date=null):Int\r\n\t{\r\n\t\treturn Std.parseInt(getWDateString(date));\r\n\t}\r\n\t\r\n\tprivate static function p2(d:Int):String\r\n\t{\r\n\t\tif (d < 10)\r\n\t\t\treturn \"0\" + Std.string(d);\r\n\t\telse\r\n\t\t\treturn Std.string(d);\r\n\t}\r\n\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n}\r\n","package no.logic.kha.uix.utils;\r\nimport haxe.io.Bytes;\r\nimport kha.Image;\r\nimport kha.graphics4.TextureFormat;\r\n\r\nclass ImageUtils \r\n{\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\t\r\n\tpublic static function imageFromFileBytes(bytes:Bytes,onImageDecoded:(Image)->Void) \r\n\t{\r\n\t\tImage.fromEncodedBytes(bytes, null, function(i:Image)\r\n\t\t{\r\n\t\t\tif (onImageDecoded != null)\r\n\t\t\t\tonImageDecoded(i);\r\n\t\t\t\t\r\n\t\t}, function(error:String)\r\n\t\t{\r\n\t\t\tUIX.c.warning(\"Error decoding image!\");\r\n\t\t\t\r\n\t\t}, false);\r\n\t}\r\n\t\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n}\r\n\t","package no.logic.kha.uix.utils;\r\nimport kha.FastFloat;\r\nimport kha.Scheduler;\r\n\r\nenum SineBase\r\n{\r\n\tZero;\r\n\tPositive;\r\n\tNegative;\r\n}\r\n\r\n/**\r\n * ...\r\n * @author \r\n */\r\nclass MathUtils\r\n{\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\t\r\n\tstatic public function distanceBetweenTwoPoints(x1:Float,y1:Float,x2:Float,y2:Float):Float\r\n\t{\r\n\t\tvar dx:Float = x1 - x2;\r\n\t\tvar dy:Float = y1 - y2;\r\n\t\treturn Math.sqrt(dx * dx + dy * dy);\r\n\t}\r\n\t\r\n\tstatic public function radiansBetweenTwoPoints(x1:Float,y1:Float,x2:Float,y2:Float):Float\r\n\t{\r\n\t\tvar dx:Float = x2 - x1;\r\n\t\tvar dy:Float = y2 - y1;\r\n\t\treturn Math.atan2(dy,dx);\r\n\t}\r\n\t\r\n\tstatic public function angleBetweenTwoPoints(x1:Float,y1:Float,x2:Float,y2:Float,normalized:Bool=false):Float\r\n\t{\r\n\t\tvar dx:Float = x2 - x1;\r\n\t\tvar dy:Float = y2 - y1;\r\n\t\tvar mx = Math.atan2(dy, dx) / Math.PI;\r\n\t\tmx -= 0.5;\r\n\t\tif (mx < 0)\r\n\t\t\tmx += 2;\r\n\t\tif (normalized)\r\n\t\t\treturn (mx * 0.5);\r\n\t\telse\r\n\t\t\treturn (mx * 0.5) * 360;\r\n\t}\r\n\t\r\n\tstatic public function pointInEllipse(pX:Float, pY:Float, centerX:Float, centerY:Float, width:Float, height:Float):Bool\r\n\t{\r\n\t\tvar dx = pX - centerX;\r\n\t\tvar dy = pY - centerY;\r\n\t\treturn ( dx * dx ) / ( width * width ) + ( dy * dy ) / ( height * height ) <= 1;\r\n\t}\r\n\t\r\n\tstatic public function radiansToDegrees(radians:Float):Float\r\n\t{\r\n\t\treturn radians * 180/Math.PI;\r\n\t}\t\r\n\t\r\n\tstatic public function degreesToRadians(degrees:Float):Float \r\n\t{\r\n\t\treturn degrees * Math.PI / 180;\r\n\t}\r\n \r\n\tpublic static function rangeMapper(num:Float, min1:Float, max1:Float, min2:Float, max2:Float, round:Bool = false, constrainMin:Bool = true, constrainMax:Bool = true):Float\r\n\t{\r\n\t\tif (constrainMin && num < min1) return min2;\r\n\t\tif (constrainMax && num > max1) return max2;\r\n\t \r\n\t\tvar num1:Float = (num - min1) / (max1 - min1);\r\n\t\tvar num2:Float = (num1 * (max2 - min2)) + min2;\r\n\t\tif (round) return Math.round(num2);\r\n\t\treturn num2;\r\n\t}\t\r\n\t\r\n\tpublic static function clamp(val:Float, min:Float=0, max:Float=1):Float\r\n\t{\r\n\t\treturn Math.max(min, Math.min(max, val));\r\n\t}\t\r\n\t\r\n\tpublic static function clampInt(val:Float, min:Float=0, max:Float=1):Int\r\n\t{\r\n\t\treturn Math.round(Math.max(min, Math.min(max, val)));\r\n\t}\t\r\n\t\r\n\tstatic public function getRandomIntInRange(minNum:Int, maxNum:Int):Int\r\n\t{\r\n\t\treturn Math.floor( (Math.random() * (maxNum - minNum)) ) + minNum;\r\n\t}\r\n\t\r\n\tstatic public function lerp(a:FastFloat, b:FastFloat, alpha:FastFloat)\r\n\t{\r\n\t\treturn (1 - alpha) * a + alpha * b;\r\n\t}\r\n\t\r\n/*\tstatic public function slerp(start:FVector, end:FVector, percent:Float):FVector\r\n\t{\r\n\t\tvar dot:Float = FVector.DotProduct(start, end);     \r\n\t\tdot = MathUtils.clamp(dot, -1.0, 1.0);\r\n\t\tvar theta:Float  = Math.acos(dot)*percent;\r\n\t\tvar relativeVec:FVector = end - start*dot;\r\n\t\trelativeVec = relativeVec.GetSafeNormal();\r\n\t\treturn ((start*Math.cos(theta)) + (relativeVec*Math.sin(theta)));\r\n\t}\t*/\t\r\n\t\r\n\tstatic public function sineCurve(?amplitude:Float=1.0,?freq:Float=1.0,?offset:Float=0,?time:Float=0,?animated:Bool=true,?curveBase:SineBase=SineBase.Zero):Float\r\n\t{\r\n\t\tvar t = time;\r\n\t\tif (animated)\r\n\t\t\tt = Scheduler.time();\r\n\t\t\t\r\n\t\tvar o = 0.0;\r\n\t\tswitch (curveBase) \r\n\t\t{\r\n\t\t\tcase SineBase.Zero:\r\n\t\t\t{\r\n\t\t\t\to = 0;\r\n\t\t\t}\r\n\t\t\tcase SineBase.Positive:\r\n\t\t\t{\r\n\t\t\t\to = 1;\r\n\t\t\t}\r\n\t\t\tcase SineBase.Negative:\r\n\t\t\t{\r\n\t\t\t\to = -1;\r\n\t\t\t}\r\n\t\t}\r\n\t\t\t\r\n\t\treturn (((Math.sin(t * freq) + o) *0.5) * amplitude)+offset;\r\n\t}\r\n\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\t\r\n\t/**\r\n\t * Returns a random integer between a and b, inclusive. B must be higher than a.\r\n\t * If b is null, returns a random integer between 0 and a.\r\n\t */\r\n\tinline public static function rndInt(a:Int, ?b:Int): Int\r\n\t{ \r\n\t\tif(b == null)\r\n\t\t\treturn rndInt(0, a);\r\n\r\n\t\treturn (Math.floor(Math.random() * (b - a + 1) + a));\r\n\t}\r\n\r\n\t/**\r\n\t * Flips a coin. Returns true on heads, false on tails.\r\n\t * \r\n\t * @param trueChance If supplied, changes the probability of heads (defaults to 0.5/50%)\r\n\t * @returns A random true or false\r\n\t */\r\n\tinline public static function rndBool(trueChance:Float = 0.5): Bool\r\n\t{\r\n\t\treturn (Math.random() < trueChance);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a random float between a and b. B must be higher than a.\r\n\t * If b is null, returns a random float between 0 and a.\r\n\t */\r\n\tinline public static function rnd(a:Float, ?b:Float): Float\r\n\t{\r\n\t\tif(b == null)\r\n\t\t\treturn rnd(0.0, a);\r\n\r\n\t\treturn (Math.random() * (b - a) + a);\r\n\t}\t\r\n\r\n    public static function roundTo(value:Float, precision:Int): Float\r\n    {\r\n        var factor = Math.pow(10, precision);\r\n        return Math.round(value*factor) / factor;\r\n    }\r\n\r\n\tpublic static function sign(v:Float): Int\r\n\t{\r\n\t\tif(v < 0.0)\r\n\t\t\treturn -1;\r\n\t\tif(v > 0.0)\r\n\t\t\treturn 1;\r\n\t\treturn 0;\r\n\t}\r\n\r\n\tpublic static function min<T:Float,Int>(a:T, b:T): T\r\n\t{\r\n\t\treturn (a < b ? a : b);\r\n\t}\r\n\r\n\tpublic static function max<T:Float,Int>(a:T, b:T): T\r\n\t{\r\n\t\treturn (a > b ? a : b);\r\n\t}\r\n\r\n\tpublic static function abs<T:Float,Int>(num:T): T\r\n\t{\r\n\t\treturn (num < 0 ? -num : num);\r\n\t}\r\n\r\n    public static function diff<T:Float,Int>(a:T, b:T): T\r\n    {\r\n        return (a > b ? a - b : b - a);\r\n    }\r\n\r\n    public static function isEven(a:Int): Bool\r\n    {\r\n    \treturn (Math.floor(a/2)*2) == a;\r\n    }\r\n\r\n\t/**\r\n\t * Returns true if both floats match within tolerance decimal places.\r\n\t */\r\n    public static function matches(a:Float, b:Float, tolerance:Int = 0): Bool\r\n    {\r\n        return (roundTo(a, tolerance) == roundTo(b, tolerance));\r\n    }\r\n\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\r\n}","package no.logic.kha.uix.utils;\r\nimport no.logic.kha.uix.types.Object;\r\n\r\n/**\r\n * ...\r\n * @author Tommy S.\r\n */\r\n\r\n class ObjUtils\r\n{\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\t\r\n\tpublic static function toString(obj:Dynamic):String\r\n\t{\r\n\t\tif (obj == null)\r\n\t\t\treturn null;\r\n\t\t\t\r\n\t\tvar retStr = \"\";\r\n\t\tfor (name in Reflect.fields(obj))\r\n\t\t{\t\t\r\n\t\t\tvar val = Reflect.getProperty(obj, name);\r\n\t\t\tretStr += '\"' + name+'\":' + Std.string(val) + \", \";\r\n\t\t}\r\n\t\treturn retStr.substr(0,retStr.length-2);\r\n\t}\r\n\t\r\n\tpublic static function copyProperties(source:Dynamic,dest:Dynamic=null,deepCopy:Bool=true,checkIfHasProperty:Bool=false):Dynamic\r\n\t{\r\n\t\tif (source!=null)\r\n\t\t{\r\n\t\t\tif (dest==null)\r\n\t\t\t\tdest = {};\r\n\t\t\t\r\n\t\t\tvar destFields = Reflect.fields(dest);\r\n\t\t\tfor (name in Reflect.fields(source))\r\n\t\t\t{\r\n\t\t\t\tif (checkIfHasProperty)\r\n\t\t\t\t{\r\n\t\t\t\t\tif (destFields.indexOf(name)!=-1)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tReflect.setProperty(dest, name, Reflect.getProperty(source, name));\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\tReflect.setProperty(dest, name, Reflect.getProperty(source, name));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\treturn dest;\r\n\t}\r\n\t\r\n\tpublic static function getObjLength(obj:Dynamic):Int\r\n\t{\r\n\t\tvar nums:Int = 0;\r\n\t\tif (obj!=null)\r\n\t\t{\r\n\t\t\tfor (name in Reflect.fields(obj))\r\n\t\t\t{\r\n\t\t\t\tnums++;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn nums;\r\n\t}\r\n\t\r\n\tpublic static function isEmpty(obj:Dynamic):Bool\r\n\t{\r\n\t\tif (obj == null)\r\n\t\t\treturn true;\r\n\t\t\t\r\n\t\treturn Reflect.fields(obj).length == 0;\r\n\t}\r\n/*\r\n\tpublic static function clone(reference:*) : Object\r\n\t{\r\n\t\tvar clone:ByteArray = new ByteArray();\r\n\t\tclone.writeObject( reference );\r\n\t\tclone.position = 0;\r\n\r\n\t\treturn clone.readObject();\r\n\t}\r\n\t\r\n\tstatic public function getTypeClassFromTypedArray(source:Object):Class \r\n\t{\r\n\t\tvar returnClass:Class;\r\n\t\tvar desc:XML = describeType(source);\r\n\t\tvar typeName:String = desc.@name;\r\n\t\tvar baseName:String = desc.@base;\r\n\t\tif (baseName && (baseName.indexOf(\"<*>\") != -1))\r\n\t\t{\r\n\t\t\tvar bn2:String = baseName.split(\"*\")[0];\r\n\t\t\tvar typeClassName:String = typeName.split(bn2)[1].slice(0,-1);\r\n\t\t\treturnClass = getDefinitionByName(typeClassName) as Class;\r\n\t\t}\r\n\t\telse\r\n\t\t\treturnClass = Object;\r\n\t\t\r\n\t\treturn returnClass;\r\n\t}\r\n*/\r\n\tpublic static function hasProperty(obj:Dynamic, propertyName:String, checkForNullValue:Bool=true):Bool\r\n\t{\r\n\t\tif (obj!=null && propertyName!=null)\r\n\t\t{\r\n\t\t\tvar keys = Reflect.fields(obj);\r\n\t\t\tif (keys.indexOf(propertyName) !=-1)\r\n\t\t\t{\r\n\t\t\t\tif (checkForNullValue)\r\n\t\t\t\t{\r\n\t\t\t\t\tif (Reflect.getProperty(obj,propertyName) != null)\r\n\t\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\t\r\n\tstatic public function getRandomPropertyName(obj:Dynamic):String \r\n\t{\r\n\t\tif (obj == null)\r\n\t\t\treturn null;\r\n\t\t\t\r\n\t\tvar oLen:Int = getObjLength(obj);\r\n\t\tvar rnd:Int = Std.int(Math.random() * oLen);\r\n\t\tvar cc:Int = 0;\r\n\t\tfor (name in Reflect.fields(obj))\r\n\t\t{\r\n\t\t\tif (cc >= rnd)\r\n\t\t\t{\r\n\t\t\t\treturn name;\r\n\t\t\t}\r\n\t\t\tcc++;\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\t\r\n\tstatic public function toArray(obj:Dynamic):Array<Dynamic> \r\n\t{\r\n\t\tvar retArr:Array<Dynamic> = [];\r\n\t\tif (obj)\r\n\t\t{\r\n\t\t\tfor (name in Reflect.fields(obj))\r\n\t\t\t{\t\t\r\n\t\t\t\tvar val = Reflect.getProperty(obj, name);\r\n\t\t\t\tretArr.push(val);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn retArr;\t\t\t\r\n\t}\r\n\t\r\n\tstatic public function propertyNamesToArray(obj:Dynamic, ?check:Dynamic=null):Array<Dynamic>\r\n\t{\r\n\t\tvar retArr:Array<Dynamic> = [];\r\n\t\tif (obj!=null)\r\n\t\t{\r\n\t\t\tfor (name in Reflect.fields(obj))\r\n\t\t\t{\t\t\r\n\t\t\t\tif (check != null)\r\n\t\t\t\t{\r\n\t\t\t\t\tif (Reflect.getProperty(obj, name) == check)\r\n\t\t\t\t\t\tretArr.push(name);\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t\tretArr.push(name);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn retArr;\t\t\t\r\n\t}\r\n\t\r\n\tstatic public function fromXML(xml:Xml):Object\r\n\t{\r\n\t\tvar o:Object = new Object();\r\n\t\tif (xml != null)\r\n\t\t{\r\n\t\t\titerateXMLNode(o, xml);\r\n\t\t}\r\n\t\treturn o;\r\n\t}\r\n\t\r\n\tstatic private function iterateXMLNode(o:Object, xml:Xml) \r\n\t{\r\n\t\tfor ( node in xml.elements() )\r\n\t\t{\r\n\t\t\tif (node!=null)\r\n\t\t\t{\t\r\n\t\t\t\tvar nodeChildren = 0;\r\n\t\t\t\tfor ( nc in node.elements() )\r\n\t\t\t\t\tnodeChildren++;\r\n\t\t\t\t\t\r\n\t\t\t\tif (nodeChildren>0)\r\n\t\t\t\t{\r\n\t\t\t\t\to[node.nodeName] = new Object();\r\n\t\t\t\t\titerateXMLNode(o[node.nodeName], node);\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t\to[node.nodeName] = StringUtils.returnTyped(Std.string(node.firstChild()));\r\n\t\t\t}\r\n\t\t}\t\t\r\n\t}\r\n\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\t\r\n\tstatic public function getFieldByObjectPath(object:Dynamic, objectPath:String):Dynamic\r\n\t{\r\n\t\tif (object != null && objectPath != null)\r\n\t\t{\r\n\t\t\tvar splitPath:Array<String> = objectPath.split(\".\");\r\n\t\t\tif (splitPath != null)\r\n\t\t\t{\r\n\t\t\t\tvar dItr:Dynamic = object;\r\n\t\t\t\tfor (i in 0...splitPath.length) \r\n\t\t\t\t{\r\n\t\t\t\t\tif (Reflect.hasField(dItr, splitPath[i]))\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tdItr = Reflect.field(dItr, splitPath[i]);\r\n\t\t\t\t\t\tif (dItr == null)\r\n\t\t\t\t\t\t\treturn null;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\treturn null;\r\n\t\t\t\t}\r\n\t\t\t\treturn dItr;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\t\r\n\tstatic public function setFieldByObjectPath(object:Dynamic, objectPath:String, value:Dynamic)\r\n\t{\r\n\t\tif (object != null && objectPath != null)\r\n\t\t{\r\n\t\t\tvar splitPath:Array<String> = objectPath.split(\".\");\r\n\t\t\tif (splitPath != null)\r\n\t\t\t{\r\n\t\t\t\tvar dItr:Dynamic = object;\r\n\t\t\t\tfor (i in 0...splitPath.length-1) \r\n\t\t\t\t{\r\n\t\t\t\t\tif (!Reflect.hasField(dItr, splitPath[i]))\r\n\t\t\t\t\t\tReflect.setField(dItr, splitPath[i], {});\r\n\t\t\t\t\t\t\r\n\t\t\t\t\tdItr = Reflect.field(dItr, splitPath[i]);\r\n\t\t\t\t}\r\n\t\t\t\tif (dItr!=null)\r\n\t\t\t\t\tReflect.setField(dItr, splitPath[splitPath.length-1], value);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n}\r\n","package no.logic.kha.uix.utils;\r\n\r\n\r\ntypedef Point =\r\n{\r\n\tvar x \t: Float;\r\n\tvar\ty\t: Float;\r\n}\r\n\r\nclass PointUtils \r\n{\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n}\r\n\t\r\nclass PointOrigin\r\n{\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\t\r\n\tpublic\tvar\tx \t\t\t: Float\t\t\t= 0;\r\n\tpublic\tvar\ty \t\t\t: Float\t\t\t= 0;\r\n\tpublic\tvar\tz \t\t\t: Float\t\t\t= 0;\r\n\tpublic\tvar\twidth\t\t: Float\t\t\t= 0;\r\n\tpublic\tvar\theight\t\t: Float\t\t\t= 0;\r\n\tpublic\tvar\trotation \t: Float\t\t\t= 0;\r\n\tpublic\tvar\tscale\t \t: Float\t\t\t= 0;\r\n\tpublic\tvar\tscaleX\t \t: Float\t\t\t= 0;\r\n\tpublic\tvar\tscaleY\t \t: Float\t\t\t= 0;\r\n\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\t\r\n\tpublic function new(?props:Dynamic)\r\n\t{\r\n\t\t//if (props != null)\r\n\t\t\t//for (p in props) \r\n \t\t\t\t//Reflect.setField(this,p\r\n\t}\r\n\t\r\n\tpublic function toPoint2D():Point \r\n\t{\r\n\t\treturn {x:this.x, y:this.y};\r\n\t}\r\n\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n}\r\n\t\r\n","package no.logic.kha.uix.utils;\r\nimport kha.FastFloat;\r\n\r\n/**\r\n * ...\r\n * @author Tommy S.\r\n */\r\nclass SmoothFloat\r\n{\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\t\r\n\tprivate var valueList\t\t\t\t: Array<Float>;\r\n\tprivate var numValues\t\t\t\t: Int\t\t\t\t= 0;\r\n\tprivate var vIndex\t\t\t\t\t: Int\t\t\t\t= 0;\r\n\t\r\n\tprivate\tvar smoothing\t\t\t\t: Int \t\t\t\t= 20;\r\n\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\t\r\n\tpublic function new(?smoothFactor:Int=20,?initialVal:Float=0) \r\n\t{\r\n\t\tthis.valueList = [];\r\n\t\tthis.numValues = smoothFactor;\r\n\t\t\r\n\t\tif (smoothFactor < 1)\r\n\t\t\tsmoothFactor = 1;\r\n\t\t\t\r\n\t\tfor (i in 0...smoothFactor) \r\n\t\t{\r\n\t\t\tvalueList.push(initialVal);\r\n\t\t}\r\n\t}\r\n\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\t\r\n\tprivate function getSmoothedValue():Float\r\n\t{\r\n\t\tvar smVal:Float = 0;\r\n\t\tfor (i in 0...numValues) \r\n\t\t{\r\n\t\t\tsmVal += valueList[i];\r\n\t\t}\r\n\t\treturn smVal / numValues;\r\n\t}\r\n\t\r\n\t@:isVar \r\n\tpublic var value(get,null):Float;\r\n\tfunction get_value():Float\r\n\t{\r\n\t\treturn getSmoothedValue();\r\n\t}\r\n\t\r\n\tpublic function add(val:Float):Float\r\n\t{\r\n\t\tvalueList[vIndex] = val;\r\n\t\tvIndex++;\r\n\t\tif (vIndex >= numValues)\r\n\t\t\tvIndex = 0;\r\n\t\t\t\r\n\t\treturn getSmoothedValue();\r\n\t}\r\n\t\r\n\tpublic function setTo(val:Float) \r\n\t{\r\n\t\tfor (i in 0...numValues) \r\n\t\t{\r\n\t\t\tvalueList[i] = val;\r\n\t\t}\r\n\t}\r\n\t\r\n\tpublic function setSmoothing(smoothFactor:Int=20) \r\n\t{\r\n\t\tvar curval = getSmoothedValue();\r\n\t\t\r\n\t\tthis.valueList = [];\r\n\t\tthis.numValues = smoothFactor;\r\n\t\t\r\n\t\tif (smoothFactor < 1)\r\n\t\t\tsmoothFactor = 1;\r\n\t\t\t\r\n\t\tfor (i in 0...smoothFactor) \r\n\t\t{\r\n\t\t\tvalueList.push(curval);\r\n\t\t}\r\n\t\treturn smoothing = smoothFactor;\r\n\t}\r\n\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\t\r\n\tpublic function dispose()\r\n\t{\r\n\t\tthis.valueList = null;\r\n\t}\r\n\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n}\r\n","package no.logic.kha.uix.utils;\r\n\r\n/**\r\n * ...\r\n * @author \r\n */\r\nclass StringUtils\r\n{\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\t\r\n/*\t\tpublic static function searchReplaceBrackets(inputStr:String, searchTerms:Object, outputTarget:*=null):String\r\n\t{\r\n\t\tvar regExp:RegExp=/[{|}]/g;\r\n\t\tvar out:String = inputStr;\r\n\t\tvar matches:Array = inputStr.match(/\\{\\w+\\}/g);\r\n\r\n\t\tfor(var i:int = 0; i < matches.length; i++)\r\n\t\t{\r\n\t\t\tvar nMatch:String = matches[i].replace(regExp, \"\");\t\r\n\t\t\tfor (var name:String in searchTerms) \r\n\t\t\t{\r\n\t\t\t\tif (nMatch == name)\r\n\t\t\t\t\tout = out.replace(\"{\"+nMatch+\"}\", searchTerms[name]);\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (outputTarget)\r\n\t\t\toutputTarget = out;\r\n\t\t\t\r\n\t\treturn out;\r\n\t}\r\n\t\r\n\tpublic static function searchReplaceDoubleBrackets(inputStr:String, searchTerms:Object, outputTarget:*=null):String\r\n\t{\r\n\t\tvar regExp:RegExp=/[{{|}}]/g;\r\n\t\tvar out:String = inputStr;\r\n\t\tvar matches:Array = inputStr.match(/\\{{\\w+\\}}/g);\r\n\r\n\t\tfor(var i:int = 0; i < matches.length; i++)\r\n\t\t{\r\n\t\t\tvar nMatch:String = matches[i].replace(regExp, \"\");\t\r\n\t\t\tfor (var name:String in searchTerms) \r\n\t\t\t{\r\n\t\t\t\tif (nMatch == name)\r\n\t\t\t\t\tout = out.replace(\"{{\"+nMatch+\"}}\", searchTerms[name]);\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (outputTarget)\r\n\t\t\toutputTarget = out;\r\n\t\t\t\r\n\t\treturn out;\r\n\t}\r\n\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\r\n\tstatic public function dottedPriceString(value:Number):String \r\n\t{\r\n\t\tvar sNR:String = value.toString();\r\n\t\tvar fAr:Array=sNR.split(\".\");\r\n\t\tvar reg:RegExp=/\\d{1,3}(?=(\\d{3})+(?!\\d))/;\r\n\r\n\t\twhile (reg.test(fAr[0]))\r\n\t\t{\r\n\t\t\tfAr[0]=fAr[0].replace(reg,\"$&.\");\r\n\t\t}\r\n\t\treturn fAr.join(\".\");\r\n\t}\r\n*/\t\t\r\n\tstatic public function toFirstCharUppercase(str:String):String \r\n\t{\r\n\t\tif (str == null)\r\n\t\t\treturn null;\r\n\t\t\t\r\n\t\tvar converted:String = (str.substr(0,1).toUpperCase() + (str.substr(1,str.length)));\r\n\t\treturn converted;\r\n\t}\r\n\r\n\tstatic public function toUppercase(str:String):String \r\n\t{\r\n\t\tif (str == null)\r\n\t\t\treturn null;\r\n\t\t\t\r\n\t\tvar converted:String = str.toUpperCase();\r\n\t\treturn converted;\r\n\t}\r\n\r\n\tstatic public function enforceTwoDigitNumberToString(num:Dynamic):String \r\n\t{\r\n\t\tvar enf:String = \"\";\r\n\t\tif (num < 10)\r\n\t\t\tenf = \"0\";\r\n\t\tenf += Std.string(num);\r\n\t\treturn enf;\r\n\t}\r\n\r\n\tstatic public function enforceThreeDigitNumberToString(num:Dynamic):String \r\n\t{\r\n\t\tvar enf:String = \"\";\r\n\t\tif (num < 10)\r\n\t\t\tenf = \"00\";\r\n\t\telse if (num < 100)\r\n\t\t\tenf = \"0\";\r\n\t\tenf += Std.string(num);\r\n\t\treturn enf;\r\n\t}\r\n\r\n\tstatic public function enforceFourDigitNumberToString(num:Dynamic):String \r\n\t{\r\n\t\tvar enf:String = \"\";\r\n\t\tif (num < 10)\r\n\t\t\tenf = \"000\";\r\n\t\telse if (num < 100)\r\n\t\t\tenf = \"00\";\r\n\t\telse if (num < 1000)\r\n\t\t\tenf = \"0\";\r\n\t\tenf += Std.string(num);\r\n\t\treturn enf;\r\n\t}\r\n\t\r\n\tstatic public function enforceFiveDigitNumberToString(num:Dynamic):String \r\n\t{\r\n\t\tvar enf:String = \"\";\r\n\t\tif (num < 10)\r\n\t\t\tenf = \"0000\";\r\n\t\telse if (num < 100)\r\n\t\t\tenf = \"000\";\r\n\t\telse if (num < 1000)\r\n\t\t\tenf = \"00\";\r\n\t\telse if (num < 10000)\r\n\t\t\tenf = \"000\";\r\n\t\tenf += Std.string(num);\r\n\t\treturn enf;\r\n\t}\r\n/*\t\t\r\n\tstatic public function numberToStringMedFortegn(numberOrInt:*):String \r\n\t{\r\n\t\tvar val:Number = Convert.toNumber(numberOrInt);\r\n\t\tif (val > 0)\r\n\t\t\treturn \"+\" + Convert.toString(val);\r\n\t\telse\r\n\t\t\treturn Convert.toString(val);\r\n\t}*/\r\n\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\t\r\n/*\t\tpublic static function stripCharactersFromString(inputString:String, charactersToRemove:String):void\r\n\t{\r\n\t\tvar stringToStrip:String = \"(jslkkkdsssd%%M3432B)\";\r\n\t\t//say I want to remove the (, ), M, and % characters.\r\n\t\tvar regExp:RegExp=/[(|)|M|%]/g;\r\n\t\tvar cleanedString:String=stringToStrip.replace(regExp, \"\");\t\t\t\r\n\t}\r\n*/\t\t\r\n\tstatic public function fixUniCodeProblems(inStr:String):String\r\n\t{\r\n\t\tvar mrgStr = \"\";\r\n\t\tfor (c in 0...inStr.length)\r\n\t\t{\r\n\t\t\tvar cCode:Int = StringTools.fastCodeAt(inStr, c);\r\n\t\t\tswitch (cCode) \r\n\t\t\t{\r\n\t\t\t\tcase 229:\r\n\t\t\t\t\tmrgStr += \"å\";\r\n\t\t\t\tcase 197:\r\n\t\t\t\t\tmrgStr += \"Å\";\r\n\t\t\t\tcase 248:\r\n\t\t\t\t\tmrgStr += \"ø\";\r\n\t\t\t\tcase 216:\r\n\t\t\t\t\tmrgStr += \"Ø\";\r\n\t\t\t\tcase 230:\r\n\t\t\t\t\tmrgStr += \"æ\";\r\n\t\t\t\tcase 198:\r\n\t\t\t\t\tmrgStr += \"Æ\";\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tmrgStr += String.fromCharCode(cCode);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn mrgStr;\r\n\t}\t\r\n\t\r\n\tstatic public function contains(inStr:String,match:String):Bool\r\n\t{\r\n\t\tif (inStr == null || match == null)\r\n\t\t\treturn false;\r\n\t\t\t\r\n\t\treturn inStr.indexOf(match) !=-1;\r\n\t}\r\n\t\r\n\tstatic public function returnTyped(d:String):Dynamic\r\n\t{\r\n\t\tif (d == null)\r\n\t\t\treturn d;\r\n\t\t\t\r\n\t\tif (isStringBool(d))\r\n\t\t\treturn Convert.toBool(d);\r\n\t\telse if (isStringInt(d))\r\n\t\t\treturn Std.parseInt(d);\r\n\t\telse if (isStringInt(d))\r\n\t\t\treturn Std.parseFloat(d);\r\n\t\telse\r\n\t\t\treturn Std.string(d);\r\n\t}\r\n\t\r\n\tstatic public function isStringBool(inp:String):Bool\r\n\t{\r\n\t\tif (inp == null)\r\n\t\t\treturn false;\r\n\t\t\t\r\n\t\tinp.split(\" \").join(\"\"); // strip spaces\r\n\t\t\t\r\n\t\tif ((inp.toLowerCase() == \"true\") || (inp.toLowerCase() == \"false\"))\r\n\t\t\treturn true;\r\n\t\telse\r\n\t\t\treturn false;\r\n\t}\r\n\t\r\n\tstatic public function isStringFloat(inp:String):Bool\r\n\t{\r\n\t\tif (inp == null || inp.indexOf(\".\")==-1)\r\n\t\t\treturn false;\r\n\t\t\t\r\n\t\tinp.split(\" \").join(\"\"); // strip spaces\r\n\t\t\r\n\t\tfor (i in 0...inp.length) \r\n\t\t{\r\n\t\t\tif (!isfirstCharNumber(inp.substr(i, 1)))\r\n\t\t\t\treturn false;\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n\t\r\n\tstatic public function isStringInt(inp:String):Bool\r\n\t{\r\n\t\tif (inp == null || inp.indexOf(\".\")!=-1)\r\n\t\t\treturn false;\r\n\t\t\t\r\n\t\tinp.split(\" \").join(\"\"); // strip spaces\r\n\t\tfor (i in 0...inp.length) \r\n\t\t{\r\n\t\t\tif (!isfirstCharNumber(inp.substr(i, 1)))\r\n\t\t\t\treturn false;\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n\t\r\n\tstatic public function isfirstCharNumber(char:String):Bool\r\n\t{\r\n\t\tif (char==null || char.length<1)\r\n\t\t\treturn false;\r\n\t\t\t\r\n\t\tvar isNumber = false;\r\n\t\tvar fc = char.substr(0, 1);\r\n\t\tswitch (fc) \r\n\t\t{\r\n\t\t\tcase \"0\":\r\n\t\t\t\tisNumber = true;\r\n\t\t\tcase \"1\":\r\n\t\t\t\tisNumber = true;\r\n\t\t\tcase \"2\":\r\n\t\t\t\tisNumber = true;\r\n\t\t\tcase \"3\":\r\n\t\t\t\tisNumber = true;\r\n\t\t\tcase \"4\":\r\n\t\t\t\tisNumber = true;\r\n\t\t\tcase \"5\":\r\n\t\t\t\tisNumber = true;\r\n\t\t\tcase \"6\":\r\n\t\t\t\tisNumber = true;\r\n\t\t\tcase \"7\":\r\n\t\t\t\tisNumber = true;\r\n\t\t\tcase \"8\":\r\n\t\t\t\tisNumber = true;\r\n\t\t\tcase \"9\":\r\n\t\t\t\tisNumber = true;\r\n\t\t\tdefault:\r\n\t\t\t\tisNumber = false;\r\n\t\t}\r\n\t\t\r\n\t\treturn isNumber;\r\n\t}\r\n\t\r\n\tstatic public function cleanStringAlphaNumeric(str:String) \r\n\t{\r\n\t\tif (str == null)\r\n\t\t\treturn null;\r\n\t\t\t\r\n\t\tfor (i in 0...str.length) \r\n\t\t{\r\n\t\t\tvar cc:Int = str.charCodeAt(i);\r\n\t\t\t//trace(\"--\", cc);\r\n\t\t}\r\n\t\treturn str;\r\n\t}\r\n\t\r\n\tstatic public function strListToIntArray(strList:String,?delimiter:String=\",\"):Array<Int> \r\n\t{\r\n\t\tvar ra:Array<Int> = [];\r\n\t\tvar r1:Array<String> = strList.split(delimiter);\r\n\t\tfor (i in 0...r1.length) \r\n\t\t{\r\n\t\t\tra.push(Std.parseInt(r1[i]));\r\n\t\t}\r\n\t\treturn ra;\r\n\t}\r\n\t\r\n\tstatic public function floatToString(float:Float,?numDecimals:Int=-1):String \r\n\t{\r\n\t\tif (numDecimals ==-1)\r\n\t\t\treturn Std.string(float);\r\n\t\telse\r\n\t\t{\r\n\t\t\tvar sa = Std.string(float).split(\".\");\r\n\t\t\tif (sa.length == 1)\r\n\t\t\t\treturn sa[0];\r\n\t\t\telse\r\n\t\t\t\treturn sa[0]+\".\"+sa[1].substring(0, numDecimals);\r\n\t\t}\r\n\t}\r\n\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\t\r\n    static public function isNumeric(str:String): Bool\r\n    {\r\n    \tif(str == null)\r\n    \t\treturn false;\r\n\r\n    \treturn (~/^\\d+$/).match(str);\r\n    }\r\n\r\n    static public function isAlpha(str:String): Bool\r\n    {\r\n    \tif(str == null)\r\n    \t\treturn false;\r\n    \t\t\r\n    \treturn (~/^[A-Za-z]$/).match(str);\r\n    }\r\n\r\n    static public function isAlphaNumeric(str:String): Bool\r\n    {\r\n    \treturn isNumeric(str) || isAlpha(str);\r\n    }\r\n\r\n\t/**\r\n\t * Same as String.split but empty strings result in an empty array\r\n\t * Properly handles null weirdness on Flash\r\n\t */\r\n    static public function split(str:String, delim:String): Array<String>\r\n    {\r\n    \tvar arr = new Array<String>();\r\n    \tif(str == null || str.length == 0)\r\n    \t\treturn arr;\r\n    \treturn str.split(delim);\r\n    }\r\n\r\n    static public function toInitCase(str:String): String\r\n    {\r\n        return str.substr(0, 1).toUpperCase() + str.substr(1);\r\n    }\r\n\r\n    static public function formatCommas(num:Int): String\r\n    {\r\n        if(num < 1000)\r\n            return Std.string(num);\r\n\r\n        var tail = Std.string(num % 1000);\r\n        if(tail.length < 3)\r\n            tail = repeat(\"0\", 3 - tail.length) + tail;\r\n        return formatCommas(Std.int(num / 1000)) + \",\" + tail;\r\n    }\r\n\r\n    static public function repeat(toRepeat:String, count:Int): String\r\n    {\r\n        var str:String = \"\";\r\n        for(i in 0...count)\r\n            str += toRepeat;\r\n        return str;\r\n    }\r\n\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\t\r\n\t/**\r\n\t * This method parses a range string into an array of integers. \r\n\t * For example: 2,4-7,9 returns [2,4,5,6,7,9].\r\n\t * However, if an array is passed, this will return that array as-is.\r\n\t * And if an Int is passed, this will return [theInt].\r\n\t */\r\n    public static function parseRange(range:Dynamic):Array<Int>\r\n    {\r\n        if(Std.is(range, Array))\r\n                return cast range;\r\n\r\n        if(Std.is(range, Int))\r\n            return [cast(range, Int)];\r\n\r\n        if(!Std.is(range, String))\r\n            trace(\"Range string must be comma separated values: integers and hyphenated ranges\");\r\n\r\n        // Treat as comma-separated string with hyphenated inclusive ranges\r\n        var result = new Array<Int>();\r\n        var tokens = split(range, \",\");\r\n        for(token in tokens)\r\n        {\r\n            // Single number\r\n            if(token.indexOf(\"-\") == -1)\r\n                result.push(Std.parseInt(token));\r\n\r\n            // Range of numbers min-max\r\n            else\r\n            {\r\n                var parts = split(token, \"-\");\r\n                var i = Std.parseInt(parts[0]);\r\n                var end = Std.parseInt(parts[1]);\r\n                result.push(i); \r\n                while(i != end)\r\n                { \r\n                    i += (end < i ? -1 : 1);\r\n                    result.push(i); \r\n                }\r\n            }\r\n        }\r\n        return result;\r\n    }  \r\n\r\n    inline public static function nonNull(value:Dynamic, nullValue:Dynamic): Dynamic\r\n    {\r\n        return (value == null ? nullValue: value);\r\n    }\r\n\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\r\n}","package no.logic.kha.uix.utils;\r\n\r\nclass TimeUtils \r\n{\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\t\r\n\tpublic static function getFormatedTimeStamp():String \r\n\t{\r\n\t\tvar date:Date = Date.now();\r\n\t\tvar eTime:String = \"\";\r\n\t\tvar eHours:Float = date.getHours();\r\n\t\tvar eMinut:Float = date.getMinutes();\r\n\t\tvar eSecon:Float = date.getSeconds();\r\n\t\teHours < 10 ? eTime+=\"0\"+Std.int(eHours) : eTime+=Std.int(eHours);\r\n\t\teTime+= \":\";\r\n\t\teMinut < 10 ? eTime+=\"0\"+Std.int(eMinut) : eTime+=Std.int(eMinut);\r\n\t\teTime+= \":\";\r\n\t\teSecon < 10 ? eTime+= \"0\" + Std.int(eSecon) : eTime+= Std.int(eSecon);\r\n\t\t\r\n\t\treturn eTime;\r\n\t}\r\n\t\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\t\r\n\tstatic public function convertToHHMMSS(seconds:Float, contractString:Bool=false):String\r\n\t{\r\n\t\tvar s:Int = Math.floor(seconds % 60);\r\n\t\tvar m:Int = Math.floor((seconds % 3600 ) / 60);\r\n\t\tvar h:Int = Math.floor(seconds / (60 * 60));\r\n\t\t \r\n\t\tvar hourStr:String = (h == 0) ? \"\" : doubleDigitFormat(h) + \":\";\r\n\t\tvar minuteStr:String = doubleDigitFormat(m) + \":\";\r\n\t\tvar secondsStr:String = doubleDigitFormat(s);\r\n\t\t \r\n\t\tif (contractString)\r\n\t\t{\r\n\t\t\tif (hourStr == \"00:\")\r\n\t\t\t\thourStr == \"\";\r\n\t\t\tif (minuteStr == \"00:\")\r\n\t\t\t\tminuteStr == \"\";\r\n\t\t}\r\n\t\treturn hourStr + minuteStr + secondsStr;\r\n\t}\r\n\t \r\n\tstatic private function doubleDigitFormat(num:Int):String\r\n\t{\r\n\t\tif (num < 10) \r\n\t\t{\r\n\t\t\treturn \"0\" + num;\r\n\t\t}\r\n\t\treturn Std.string(num);\r\n\t}\r\n\t\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n}\r\n\t","package testcomp;\r\n\r\nimport no.logic.kha.uix.app.App;\r\nimport no.logic.kha.uix.scene.uixcomp.UIXGComponent;\r\nimport no.logic.kha.uix.scene.uixcomp.UIXGElement;\r\nimport no.logic.kha.uix.utils.MathUtils;\r\n\r\n/**\r\n * ...\r\n * @author Tommy S\r\n */\r\n\r\nclass Blurg extends UIXGComponent\r\n{\r\n\t/////////////////////////////////////////////////////////////////////////////////////\t\r\n\t\r\n\tpublic var id\t\t\t: Int;\r\n\tpublic var meta\t\t\t: String;\r\n\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\t\r\n\t\r\n\tpublic function new(uixgElement:UIXGElement) \r\n\t{\r\n\t\tsuper(uixgElement);\r\n\t}\r\n\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\t\r\n\t\r\n\toverride function created()\r\n\t{\r\n\t\tthis.updateEnabled = true;\r\n\t\t//trace(\"created: \", id, meta, uixgElement.rawUIXData);\r\n\t\t\r\n\t\tx = Math.random()*App.appWidth;\r\n\t\ty = Math.random()*App.appHeight;\r\n\t}\r\n\t\r\n\toverride function update() \r\n\t{\r\n\t\talpha = MathUtils.sineCurve(1, 15, null, null, true, SineBase.Positive);\r\n\t}\r\n\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\t\t\r\n\t\r\n\toverride function dispose() \r\n\t{\r\n\t\t//trace(\"disposed!! \");\r\n\t}\r\n\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\t\t\r\n}","package testcomp;\r\n\r\nimport no.logic.kha.uix.app.App;\r\nimport no.logic.kha.uix.scene.uixcomp.UIXGComponent;\r\nimport no.logic.kha.uix.scene.uixcomp.UIXGElement;\r\nimport no.logic.kha.uix.scene.uixcomp.UIXGTextComponent;\r\nimport no.logic.kha.uix.utils.MathUtils;\r\n\r\n/**\r\n * ...\r\n * @author Tommy S\r\n */\r\n\r\nclass TestText extends UIXGTextComponent\r\n{\r\n\t/////////////////////////////////////////////////////////////////////////////////////\t\r\n\t\r\n\tpublic var myValue\t\t\t: String;\r\n\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\t\r\n\t\r\n\tpublic function new(uixgElement:UIXGElement) \r\n\t{\r\n\t\tsuper(uixgElement);\r\n\t}\r\n\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\t\r\n\t\r\n\toverride function created()\r\n\t{\r\n\t\tthis.updateEnabled = true;\r\n\t}\r\n\t\r\n\toverride function update() \r\n\t{\r\n\t\tmyValue = \"Yo \" + Math.random();\r\n\t\tupdateChildBindings();\r\n\t}\r\n\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\t\t\r\n\t\r\n\toverride function dispose() \r\n\t{\r\n\t\tmyValue = null; \r\n\t}\r\n\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\t\t\r\n}","package trilateral.geom;\nimport trilateral.tri.Trilateral;\nimport trilateral.geom.Algebra;\nimport trilateral.tri.TrilateralArray;\nimport trilateral.tri.TrilateralPair;\nimport trilateral.polys.Poly;\nimport trilateral.angle.Pi2pi;\nimport trilateral.angle.Fraction;\n//import trilateral.angle.ZeroTo2pi;\nimport trilateral.angle.Angles;\n#if trilateral_includeSegments\nimport trilateralXtra.segment.SixteenSeg;\nimport trilateralXtra.segment.SevenSeg;\n#end\n@:enum\nabstract EndLineCurve( Int ){\n    var no = 0;\n    var begin = 1;\n    var end = 2;\n    var both = 3;\n}\nclass Contour {\n    // only relevant if debug parameters are set.\n    // public var debugOn:         Bool;\n    public var pointsClock:     Array<Float> = [];\n    public var pointsAnti:      Array<Float> = [];\n    public var penultimateCX:   Float;\n    public var penultimateCY:   Float;\n    public var lastClockX:      Float;\n    public var lastClockY:      Float;\n    public var penultimateAX:   Float;\n    public var penultimateAY:   Float;\n    public var lastAntiX:       Float;\n    public var lastAntiY:       Float; \n    \n    var triArr: TrilateralArray;\n    var endLine: EndLineCurve;\n    var ax: Float; // 0\n    var ay: Float; // 0\n    var bx: Float; // 1\n    var by: Float; // 1\n    var cx: Float; // 2\n    var cy: Float; // 2\n    var dx: Null<Float>; // 3     // computeDE checks null\n    var dy: Null<Float>; // 3\n    var ex: Null<Float>; // 4\n    var ey: Null<Float>; // 4\n    \n    /*var fx: Float; // q0\n    var fy: Float;\n    var gx: Float; // q1\n    var gy: Float;*/\n    \n    var dxPrev: Null<Float>; // computeDE checks null\n    var dyPrev: Null<Float>;\n    var exPrev: Null<Float>;\n    var eyPrev: Null<Float>;\n    var dxOld: Null<Float>;\n    var dyOld: Null<Float>;\n    var exOld: Null<Float>;\n    var eyOld: Null<Float>;\n    var jx: Float;\n    var jy: Float;\n    var lastClock: Bool;\n    var jxOld: Float;\n    var jyOld: Float;\n    \n    var kax: Float;\n    var kay: Float;\n    var kbx: Float;\n    var kby: Float;\n    var kcx: Float;\n    var kcy: Float;\n    var ncx: Float;\n    var ncy: Float;\n    var quadIndex: Int;\n    \n    //var angleD: Float;\n    public var angleA: Float; // smallest angle between lines\n    //var cosA: Float;\n\n    //var clockwiseP2: Bool;\n    \n    public var halfA: Float;\n    public var beta: Float;\n    var r: Float;\n    public var theta: Float;\n    public var angle1: Null<Float>;  // triangleJoin checks null\n    public var angle2: Float;\n    inline static var smallDotScale = 0.07;\n    \n    public function reset(){\n        angleA = 0; //null;\n        count = 0;\n        kax = 0; //null;\n        kay = 0; //null;\n        kbx = 0; //null;\n        kby = 0; //null;\n        kcx = 0; //null; \n        kcy = 0; //null;\n        ncx = 0; //null;\n        ncy = 0; //null;\n        ax = 0; //null;\n        ay = 0; //null;\n        bx = 0; //null;\n        by = 0; //null;\n        cx = 0; //null;\n        cy = 0; //null;\n        \n        dx = null;\n        dy = null;\n        ex = null;\n        ey = null;\n        \n        /*fx = null;\n        fy = null;\n        gx = null;\n        gy = null;*/\n        #if ( haxe_ver < \"4.0.0\" )\n            pointsClock = [];\n            pointsAnti = [];\n        #else\n            pointsClock.resize( 0 );\n            pointsAnti.resize( 0 );\n        #end\n    }\n    //TODO: create lower limit for width   0.00001; ?\n    public var count = 0;\n    public function new( triArr_: TrilateralArray, endLine_: EndLineCurve = no ){\n        triArr = triArr_;\n        endLine = endLine_;\n    }\n    public inline\n    function triangleJoin( ax_: Float, ay_: Float, bx_: Float, by_: Float, width_: Float, curveEnds: Bool = false, overlap: Bool = false ){\n        var oldAngle = ( dx != null )? angle1: null;  // I am not sure I can move this to curveJoins because angle1 is set by computeDE\n        halfA = Math.PI/2;\n        //if( dxOld != null ){  // this makes it a lot faster but a bit of path in some instance disappear needs more thought to remove....\n            // dx dy ex ey\n        //} else {\n            // only calculate p3, p4 if missing - not sure if there are any strange cases this misses, seems to work and reduces calculations\n            ax = bx_;\n            ay = by_;\n            bx = ax_;\n            by = ay_;\n            beta = Math.PI/2 - halfA;           // thickness\n            r = ( width_/2 )*Math.cos( beta );  // thickness\n            computeDE();\n            //}\n        //switch lines round to get other side but make sure you finish on p1 so that p3 and p4 are useful\n        ax = ax_;\n        ay = ay_;\n        bx = bx_;\n        by = by_;\n        computeDE();\n        //if( dxOld != null ){ //dxOld != null\n            var clockWise = isClockwise( bx_, by_ );\n            var theta0: Float;\n            var theta1: Float;\n            if( clockWise ){\n                theta0 = thetaComputeAdj( dxOld, dyOld );\n                theta1 = thetaComputeAdj( exPrev, eyPrev );\n            } else {\n                theta0 = thetaComputeAdj( exOld, eyOld );\n                theta1 = thetaComputeAdj( dxPrev, dyPrev );\n            }\n            var dif = Angles.differencePrefer( theta0, theta1, SMALL );\n            if( !overlap && count != 0 ) computeJ( width_, theta0, dif ); // don't calculate j if your just overlapping quads\n            \n            if( count == 0 && ( endLine == begin || endLine == both ) ) addPieXstart( ax, ay, width_/2, -angle1 - Math.PI/2, -angle1 - Math.PI/2 + Math.PI, SMALL );\n            /*\n            if( curveEnds ){\n                //joinArc\n                if( clockWise ){\n                    addArray( Poly.pieDifX( ax_, ay_, width_/2, theta0, dif, pointsClock ) );\n                } else {\n                    addArray( Poly.pieDifX( ax_, ay_, width_/2, theta0, dif, pointsAnti ) );\n                }\n            } else {\n            // straight line between lines    \n                if( count != 0 ){\n                    if( overlap ){ // just draw down to a as overlapping quads\n                        connectQuadsWhenQuadsOverlay( clockWise, width_ );\n                    } else {\n                        connectQuads( clockWise, width_ );\n                    }\n                }\n            }\n            */\n            if( overlap ){\n                overlapQuad(); // not normal\n            }else {\n                if( count != 0 ) addQuads( clockWise, width_ );\n                addInitialQuads( clockWise, width_ );\n            }\n            \n            if( curveEnds ){\n                //joinArc\n                if( clockWise ){\n                    addArray( Poly.pieDifX( ax_, ay_, width_/2, theta0, dif, pointsClock ) );\n                } else {\n                    addArray( Poly.pieDifX( ax_, ay_, width_/2, theta0, dif, pointsAnti ) );\n                }\n            } else {\n            // straight line between lines    \n                if( count != 0 ){\n                    if( overlap ){ // just draw down to a as overlapping quads\n                        connectQuadsWhenQuadsOverlay( clockWise, width_ );\n                    } else {\n                        connectQuads( clockWise, width_ );\n                    }\n                }\n            }\n            \n            \n            storeLastQuads();\n            \n            \n        if( curveEnds && !overlap && count != 0 ) addSmallTriangles( clockWise, width_ );\n        #if trilateral_includeSegments\n        #if trilateral_debugNumbers\n            addNumbering( jx, jy, counter, width_ );\n            counter++;\n        #end\n        #end\n        \n        \n        jxOld = jx;\n        jyOld = jy;\n        lastClock = clockWise;        \n        count++;\n        return triArr;\n    }\n    inline\n    function overlapQuad(){\n        addTri( dxPrev, dyPrev, dx, dy, ex, ey #if trilateral_debug ,8 #end );\n        addTri( dxPrev, dyPrev, dx, dy, exPrev, eyPrev #if trilateral_debug ,12 #end );\n    }\n    // call to add round end to line\n    public inline\n    function end( width_: Float ){\n        endEdges();\n        if( count != 0 ) addPieX( bx, by, width_/2, -angle1 - Math.PI/2, -angle1 - Math.PI/2 - Math.PI, SMALL );\n    }\n    inline\n    function add( trilateral: Trilateral ){\n        triArr.add( trilateral );\n    }\n    inline\n    function addArray( trilateralArray: TrilateralArray ){\n        triArr.addArray( trilateralArray );\n    }\n    inline \n    function addTri( ax_: Float, ay_: Float, bx_: Float, by_: Float, cx_: Float, cy_: Float, mark_: Int = 0 ){\n        triArr.add( new Trilateral( ax_, ay_, bx_, by_, cx_, cy_, mark_ ) );\n    }\n    inline\n    function addPieXstart( ax: Float, ay: Float, radius: Float, beta: Float, gamma: Float, prefer: DifferencePreference, ?mark: Int = 0, ?sides: Int = 36 ){\n        var temp = new Array<Float>();\n        triArr.addArray( Poly.pieX( ax, ay, radius, beta, gamma, prefer, temp, mark, sides ) );\n        var pA = pointsAnti.length;\n        var len = Std.int( temp.length/2 );\n        var p4 = Std.int( temp.length/4 );\n        for( i in 0...p4 ){\n            pointsAnti[ pA++ ] = temp[ len - 2*i + 1];\n            pointsAnti[ pA++ ] = temp[ len - 2*i ];\n        }\n        var pC = pointsClock.length;\n        for( i in 0...p4 ){\n            pointsClock[ pC++ ] = temp[ i*2 + len + 1];\n            pointsClock[ pC++ ] = temp[ i*2 + len ];\n        }\n    }\n    \n    inline\n    function addPieX( ax: Float, ay: Float, radius: Float, beta: Float, gamma: Float, prefer: DifferencePreference, ?mark: Int = 0, ?sides: Int = 36 ){\n        var temp = new Array<Float>();\n        triArr.addArray( Poly.pieX( ax, ay, radius, beta, gamma, prefer, temp, mark, sides ) );\n        var pA = pointsAnti.length;\n        var len = Std.int( temp.length/2 );\n        for( i in 0...len + 2 ){\n            pointsAnti[ pA++ ] = temp[ i ];\n        }\n        var pC = pointsClock.length;\n        for( i in 1...Std.int( len/2 + 1 ) ){\n            pointsClock[ pC++ ] = temp[ temp.length - 2*i ];\n            pointsClock[ pC++ ] = temp[ temp.length - 2*i - 1 ];\n        }\n    }\n    \n    inline\n    function addPie( ax: Float, ay: Float, radius: Float, beta: Float, gamma: Float, prefer: DifferencePreference, ?mark: Int = 0, ?sides: Int = 36 ){\n        triArr.addArray( Poly.pie( ax, ay, radius, beta, gamma, prefer, mark, sides ) );\n    }\n    inline\n    function computeJ( width_: Float, theta0: Float, dif: Float ){\n        var gamma = Math.abs( dif )/2;\n        var h = ( width_/2 )/Math.cos( gamma );\n        var start: Pi2pi = theta0;\n        var start2: Float = start;\n        var delta = start2 + dif/2 + Math.PI;\n        jx = ax + h * Math.sin( delta );\n        jy = ay + h * Math.cos( delta );\n    }\n    inline \n    function addDot( x: Float, y: Float, color: Int, width_: Float ){\n        var w = width_ * smallDotScale;\n        addArray( Poly.circleMarked( x, y, w, color ) );\n    }\n    #if trilateral_debug\n    inline\n    function addDebugLine( x0: Float, y0: Float, x1: Float, y1: Float, width_: Float, col: Int, colStart: Int = 1 ){\n        var w = width_*smallDotScale/2;\n        var dx = (x1 - x0);\n        var dy = (y1 - y0);\n        var len = Std.int( Math.min( 100, Math.max( dx, dy ) ) );\n        dx = dx/len;\n        dy = dy/len;\n        for( i in 0...len ){\n            if( i < 5 ){\n                addArray( Poly.circleMarked( x0 + dx*i, y0 + dy*i, w*2, colStart ) );\n            } else {\n                addArray( Poly.circleMarked( x0 + dx*i, y0 + dy*i, w, col ) );\n            }\n        }\n    }\n    #end\n    inline\n    function addSmallTriangles( clockWise: Bool, width_: Float ){\n        if( clockWise ){\n            addTri( ax, ay, dxOld,  dyOld,  jx, jy #if trilateral_debug ,1 #end );\n            addTri( ax, ay, exPrev, eyPrev, jx, jy #if trilateral_debug ,3 #end );\n            #if trilateral_debugPoints addTriangleCorners( dxOld, dyOld, exPrev, eyPrev, width_ ); #end\n        } else {\n            addTri( ax, ay, exOld, eyOld, jx, jy #if trilateral_debug ,1 #end );\n            addTri( ax, ay, dxPrev, dyPrev, jx, jy #if trilateral_debug ,3 #end );\n            #if trilateral_debugPoints addTriangleCorners( exOld, eyOld, dxPrev, dyPrev, width_ ); #end\n        }\n    }\n    inline\n    function addTriangleCorners( oldx_: Float, oldy_: Float, prevx_: Float, prevy_: Float, width_: Float ){\n        var w = width_ * smallDotScale;\n        addArray( Poly.circleMarked( oldx_, oldy_, w, 4 ) );\n        addArray( Poly.circleMarked( prevx_, prevy_, w, 3 ) );\n        addArray( Poly.circleMarked( ax, ay, w, 10 ) );\n        addArray( Poly.circleMarked( jx, jy, w, 5 ) );\n    }\n    inline\n    function addTriangleCornersLess( oldx_: Float, oldy_: Float, prevx_: Float, prevy_: Float, width_: Float ){\n        var w = width_ * smallDotScale;\n        addArray( Poly.circleMarked( oldx_, oldy_, w , 4 ) );\n        addArray( Poly.circleMarked( prevx_, prevy_, w, 3 ) );\n        addArray( Poly.circleMarked( jx, jy, w, 5 ) );\n    }\n    // The triangle between quads\n    inline\n    function connectQuadsWhenQuadsOverlay( clockWise: Bool, width_: Float ){\n        if( clockWise ){\n            addTri( dxOld, dyOld, exPrev, eyPrev, ax, ay );\n            #if trilateral_debugPoints addTriangleCornersLess( dxOld, dyOld, exPrev, eyPrev, width_ ); #end\n        } else {\n            addTri( exOld, eyOld, dxPrev, dyPrev, ax, ay );\n            #if trilateral_debugPoints addTriangleCornersLess( exOld, eyOld, dxPrev, dyPrev, width_ ); #end\n        }\n    }\n    // The triangle between quads\n    inline\n    function connectQuads( clockWise: Bool, width_: Float ){\n        if( clockWise ){\n            addTri( dxOld, dyOld, exPrev, eyPrev, jx, jy );\n            #if trilateral_debugPoints addTriangleCornersLess( dxOld, dyOld, exPrev, eyPrev, width_ ); #end\n        } else {\n            addTri( exOld, eyOld, dxPrev, dyPrev, jx, jy );\n            #if trilateral_debugPoints addTriangleCornersLess( exOld, eyOld, dxPrev, dyPrev, width_ ); #end\n        }\n    }\n    // these are Quads that don't use the second inner connection so they overlap at the end\n    // draw these first and replace them?\n    inline \n    function addInitialQuads( clockWise: Bool, width_: Float ){\n        //These get replaced as drawing only to leave the last one\n        quadIndex = triArr.length;\n        if( count == 0 ){ // first line\n            penultimateAX = dxPrev;\n            penultimateAY = dyPrev;\n            lastAntiX     = ex;\n            lastAntiY     = ey; \n            penultimateCX = dx;\n            penultimateCY = dy;\n            lastClockX    = exPrev;\n            lastClockY    = eyPrev;\n            addTri( dxPrev, dyPrev, dx, dy, ex, ey #if trilateral_debug ,8 #end );\n            addTri( dxPrev, dyPrev, dx, dy, exPrev, eyPrev #if trilateral_debug ,12 #end );\n        } else {\n            if( clockWise && !lastClock ){\n                penultimateAX = jx;\n                penultimateAY = jy;\n                lastAntiX     = ex;\n                lastAntiY     = ey;\n                penultimateCX = dx;\n                penultimateCY = dy;\n                lastClockX    = exPrev;\n                lastClockY    = eyPrev;\n                // FIXED\n                addTri( jx, jy, dx, dy, ex, ey #if trilateral_debug ,8 #end );\n                addTri( jx, jy, dx, dy, exPrev, eyPrev #if trilateral_debug ,12 #end );\n            }\n            if( clockWise && lastClock ){\n                penultimateAX = jx;\n                penultimateAY = jy;\n                lastAntiX     = ex;\n                lastAntiY     = ey;\n                penultimateCX = dx;\n                penultimateCY = dy;\n                lastClockX    = exPrev;\n                lastClockY    = eyPrev;\n                // FIXED \n                addTri( jx, jy, dx, dy, ex, ey #if trilateral_debug ,8 #end );\n                addTri( jx, jy, dx, dy, exPrev, eyPrev #if trilateral_debug ,12 #end );\n            }\n            if( !clockWise && !lastClock ){\n                penultimateCX = dx;\n                penultimateCY = dy;\n                lastClockX    = jx;\n                lastClockY    = jy;\n                penultimateAX = dxPrev;\n                penultimateAY = dyPrev;\n                lastAntiX     = ex;\n                lastAntiY     = ey;\n                // FIXED \n                addTri( dxPrev, dyPrev, dx, dy, jx, jy #if trilateral_debug ,8 #end );\n                addTri( dxPrev, dyPrev, dx, dy, ex, ey #if trilateral_debug ,12 #end );\n            }\n            if( !clockWise && lastClock ){                \n                penultimateAX = dxPrev;\n                penultimateAY = dyPrev;\n                lastAntiX     = ex;\n                lastAntiY     = ey;\n                \n                penultimateCX = jx;\n                penultimateCY = jy;\n                lastClockX    = dx;\n                lastClockY    = dy;\n                \n                addTri( jx, jy, dx, dy, ex, ey #if trilateral_debug ,8 #end );\n                addTri( dxPrev, dyPrev, jx, jy, ex, ey #if trilateral_debug ,12 #end );\n            }\n        }\n    }\n    \n    public function endEdges(){\n        var pC = pointsClock.length;\n        var pA = pointsAnti.length;\n        pointsClock[ pC++ ] = penultimateCX;\n        pointsClock[ pC++ ] = penultimateCY;\n        pointsClock[ pC++ ] = lastClockX;\n        pointsClock[ pC++ ] = lastClockY;\n        pointsAnti[  pA++ ] = penultimateAX;\n        pointsAnti[  pA++ ] = penultimateAY;\n        pointsAnti[  pA++ ] = lastAntiX;\n        pointsAnti[  pA++ ] = lastAntiY; \n    }\n    \n    #if trilateral_includeSegments\n    inline\n    function addNumbering( x0: Float, y0: Float, num: Int, width_: Float ){\n        var w = width_*smallDotScale*4;\n        var seven = new SevenSeg( w, (12/8)*w );\n        seven.addNumber( num, x0 - width_/3, y0 );\n        addArray( seven.triArr );\n    }\n    #end\n    var counter = 0;\n    // replace the section quads with quads with both inner points\n    // inline \n    function addQuads( clockWise: Bool, width_: Float ){\n        //return;\n        // 7 = clock side\n        // 6 = antiClock side\n        var pC = 0;\n        var pA = 0;\n        if( clockWise && !lastClock ){\n            if( count == 1 ){ // deals with first case\n                pA = pointsAnti.length;//6\n                pointsAnti[ pA++ ] = kax;\n                pointsAnti[ pA++ ] = kay;\n                pointsAnti[ pA++ ] = jx;\n                pointsAnti[ pA++ ] = jy;\n                pC = pointsClock.length;//7\n                pointsClock[ pC++ ] = kbx;\n                pointsClock[ pC++ ] = kby;\n                pointsClock[ pC++ ] = ncx;\n                pointsClock[ pC++ ] = ncy; \n                triArr[ quadIndex + 1 ] = new Trilateral( kax, kay, kbx, kby, ncx, ncy #if trilateral_debug ,7 #end );\n                // untested\n                // addDebugLine( kbx, kby, ncx, ncy, width_, 3 ); \n            } else {\n                pA = pointsAnti.length;//6\n                pointsAnti[ pA++ ] = kax;\n                pointsAnti[ pA++ ] = kay;\n                pointsAnti[ pA++ ] = jx;\n                pointsAnti[ pA++ ] = jy;\n                pC = pointsClock.length;//7\n                pointsClock[ pC++ ] = jxOld;\n                pointsClock[ pC++ ] = jyOld;\n                pointsClock[ pC++ ] = kbx;\n                pointsClock[ pC++ ] = kby;\n                triArr[ quadIndex + 1 ] = new Trilateral( kax, kay, kbx, kby, jxOld, jyOld #if trilateral_debug ,7 #end );\n                //addDebugLine( kbx, kby,jxOld, jyOld, width_, 3 );\n                //addDebugLine( jxOld, jyOld, kbx, kby, width_, 3 );\n            }\n            triArr[ quadIndex ] = new Trilateral( kax, kay, kbx, kby, jx, jy #if trilateral_debug ,6 #end );\n            //addDebugLine( jx, jy, kax, kay, width_, 4 );\n            //addDebugLine( kax, kay, jx, jy, width_, 4 );\n        }\n        if( clockWise && lastClock ){\n            if( count == 1 ){\n                // to check\n                pA = pointsAnti.length;//6\n                pointsAnti[ pA++ ] = jx;\n                pointsAnti[ pA++ ] = jy;\n                pointsAnti[ pA++ ] = kbx;\n                pointsAnti[ pA++ ] = kby;\n                pC = pointsClock.length;//7\n                pointsClock[ pC++ ] = kax;\n                pointsClock[ pC++ ] = kay;\n                pointsClock[ pC++ ] = kbx;\n                pointsClock[ pC++ ] = kby;\n                triArr[ quadIndex ] = new Trilateral( kax, kay, kbx, kby, jx, jy #if trilateral_debug ,6 #end );\n                // addDebugLine( kbx, kby, jx, jy, width_, 4 ); //NOT USED STILL TO TEST\n                triArr[ quadIndex + 1 ] = new Trilateral( kax, kay, kbx, kby, ncx, ncy #if trilateral_debug ,7 #end );\n            } else {\n                pA = pointsAnti.length;//6\n                pointsAnti[ pA++ ] = jxOld;\n                pointsAnti[ pA++ ] = jyOld;\n                pointsAnti[ pA++ ] = jx;\n                pointsAnti[ pA++ ] = jy;\n                pC = pointsClock.length;//7\n                pointsClock[ pC++ ] = ncx;\n                pointsClock[ pC++ ] = ncy;\n                pointsClock[ pC++ ] = kbx;\n                pointsClock[ pC++ ] = kby;\n                triArr[ quadIndex ] = new Trilateral( jxOld, jyOld, kbx, kby, jx, jy #if trilateral_debug ,6 #end );\n                // used reverse 3,4kax, kay,\n                //addDebugLine( jx, jy, jxOld, jyOld, width_, 4 );\n                triArr[ quadIndex + 1 ] = new Trilateral( jxOld, jyOld, kbx, kby, ncx, ncy #if trilateral_debug ,7 #end );\n                // used reverse 3,4,5 ... does not go right in other direction\n                //addDebugLine( kbx, kby, ncx, ncy , width_, 3 );\n            }\n        }\n        \n        if( !clockWise && !lastClock ){\n            triArr[ quadIndex ] = new Trilateral( kax, kay, jx, jy, kcx, kcy #if trilateral_debug ,6 #end );\n            // used 1,2,3 reverse 1, 2  correct :)\n            //addDebugLine( kax, kay, kcx, kcy, width_, 4 );\n            if( count == 1 ){\n                pA = pointsAnti.length;//6\n                pointsAnti[ pA++ ] = kax;\n                pointsAnti[ pA++ ] = kay;\n                pointsAnti[ pA++ ] = kcx;\n                pointsAnti[ pA++ ] = kcy;\n                pC = pointsClock.length;//7\n                pointsClock[ pC++ ] = ncx;\n                pointsClock[ pC++ ] = ncy;\n                pointsClock[ pC++ ] = jx;\n                pointsClock[ pC++ ] = jy;\n                triArr[ quadIndex + 1 ] = new Trilateral( kax, kay, jx, jy, ncx, ncy #if trilateral_debug ,7 #end );\n                //addDebugLine( ncx, ncy, jx, jy, width_, 3 );\n            } else {\n                pA = pointsAnti.length;//6\n                pointsAnti[ pA++ ] = kax;\n                pointsAnti[ pA++ ] = kay;\n                pointsAnti[ pA++ ] = kcx;\n                pointsAnti[ pA++ ] = kcy;\n                pC = pointsClock.length;//7\n                pointsClock[ pC++ ] = jxOld;\n                pointsClock[ pC++ ] = jyOld;\n                pointsClock[ pC++ ] = jx;\n                pointsClock[ pC++ ] = jy;\n                triArr[ quadIndex + 1 ] = new Trilateral( kax, kay, jx, jy, jxOld, jyOld #if trilateral_debug ,7 #end );\n                //addDebugLine( jxOld, jyOld, jx, jy, width_, 3 );\n            }\n        }\n        // NO IDEA IF THIS ONE WORKS!!!\n        if( !clockWise && lastClock ){\n            if( count == 1 ){\n                pA = pointsAnti.length;//6\n                pointsAnti[ pA++ ] = kay;\n                pointsAnti[ pA++ ] = kax;\n                pointsAnti[ pA++ ] = kcx;\n                pointsAnti[ pA++ ] = kcy;\n                pC = pointsClock.length;//7\n                pointsClock[ pC++ ] = jx;\n                pointsClock[ pC++ ] = jy;\n                pointsClock[ pC++ ] = ncx;\n                pointsClock[ pC++ ] = ncy;\n                triArr[ quadIndex ] = new Trilateral( kax, kay, jx, jy, kcx, kcy #if trilateral_debug ,6 #end );\n                triArr[ quadIndex + 1 ] = new Trilateral( kax, kay, jx, jy, ncx, ncy #if trilateral_debug ,7 #end );\n            } else {\n                pA = pointsAnti.length;//6\n                pointsAnti[ pA++ ] = jxOld;\n                pointsAnti[ pA++ ] = jyOld;\n                pointsAnti[ pA++ ] = kcx;\n                pointsAnti[ pA++ ] = kcy;\n                pC = pointsClock.length;//7\n                pointsClock[ pC++ ] = jx;\n                pointsClock[ pC++ ] = jy;\n                pointsClock[ pC++ ] = ncx;\n                pointsClock[ pC++ ] = ncy;\n                triArr[ quadIndex ] = new Trilateral( jxOld, jyOld, jx, jy, kcx, kcy #if trilateral_debug ,6 #end );\n                triArr[ quadIndex + 1 ] = new Trilateral( jxOld, jyOld, jx, jy, ncx, ncy #if trilateral_debug ,7 #end );\n            }\n        }\n        \n    }\n    inline function storeLastQuads(){\n        kax = dxPrev;\n        kay = dyPrev;\n        kbx = dx;\n        kby = dy;\n        ncx = exPrev;\n        ncy = eyPrev;\n        kcx = ex;\n        kcy = ey;\n    }\n    inline function isClockwise( x: Float, y: Float ): Bool {\n         return dist( dxOld, dyOld, x, y ) > dist( exOld, eyOld, x, y );\n    }\n    public inline \n    function line( ax_: Float, ay_: Float, bx_: Float, by_: Float, width_: Float, ?endLineCurve: EndLineCurve = no ){\n                    // thick\n        ax = bx_;\n        ay = by_;\n        bx = ax_;\n        by = ay_;\n        halfA = Math.PI/2;\n        // thickness\n        beta = Math.PI/2 - halfA;\n        r = ( width_/2 )*Math.cos( beta );\n        // \n        computeDE();\n        var dxPrev_ = dx;\n        var dyPrev_ = dy;\n        var exPrev_ = ex;\n        var eyPrev_ = ey;\n        //switch lines round to get other side but make sure you finish on p1 so that p3 and p4 are useful\n        ax = ax_;\n        ay = ay_;\n        bx = bx_;\n        by = by_;\n        computeDE();\n        switch( endLineCurve ){\n            case EndLineCurve.no: \n                // don't draw ends\n            case EndLineCurve.begin: \n                addPie( ax_, ay_, width_/2, -angle1 - Math.PI/2, -angle1 - Math.PI/2 + Math.PI, SMALL );\n            case EndLineCurve.end:\n                addPie( bx_, by_, width_/2, -angle1 - Math.PI/2, -angle1 - Math.PI/2 - Math.PI, SMALL );\n            case EndLineCurve.both:\n                addPie( ax_, ay_, width_/2, -angle1 - Math.PI/2, -angle1 - Math.PI/2 + Math.PI, SMALL );\n                addPie( bx_, by_, width_/2, -angle1 - Math.PI/2, -angle1 - Math.PI/2 - Math.PI, SMALL );\n        }\n        addTri( dxPrev_, dyPrev_, dx, dy, exPrev_, eyPrev_ );\n        addTri( dxPrev_, dyPrev_, dx, dy, ex, ey );\n    }\n    public inline \n    function computeDE(){\n        anglesCompute();\n        if( dxPrev != null ) dxOld = dxPrev;\n        if( dyPrev != null ) dyOld = dyPrev;\n        if( exPrev != null ) exOld = exPrev;\n        if( eyPrev != null ) eyOld = eyPrev;\n        if( dx != null ) dxPrev = dx;\n        if( dy != null ) dyPrev = dy;\n        if( ex != null ) exPrev = ex;\n        if( ey != null ) eyPrev = ey;\n        dx = bx + r * Math.cos( angle1 );\n        dy = by + r * Math.sin( angle1 );\n        ex = bx + r * Math.cos( angle2 );\n        ey = by + r * Math.sin( angle2 );\n    }\n    inline\n    function anglesCompute(){\n        theta = thetaCompute( ax, ay, bx, by );\n        if( theta > 0 ){\n            if( halfA < 0 ){\n                angle2 = theta + halfA + Math.PI/2;\n                angle1 =  theta - halfA;\n            } else {\n                angle1 =  theta + halfA - Math.PI;\n                angle2 =  theta + halfA;\n            }\n        } else {\n            if( halfA > 0 ){\n                angle1 =  theta + halfA - Math.PI;\n                angle2 =  theta + halfA;\n            } else {\n                angle2 = theta + halfA + Math.PI/2;\n                angle1 =  theta - halfA;\n            }\n        }\n    }\n    inline\n    function thetaComputeAdj( qx: Float, qy: Float ): Float {\n        return -thetaCompute( ax, ay, qx, qy ) - Math.PI/2;\n    }\n    static inline \n    function thetaCompute( px: Float, py: Float, qx: Float, qy: Float ): Float {\n        return Math.atan2( py - qy, px - qx );\n    }\n    static inline \n    function dist( px: Float, py: Float, qx: Float, qy: Float  ): Float {\n        var x = px - qx;\n        var y = py - qy;\n        return x*x + y*y;\n    }\n    \n}","package trilateral.justPath;\n// http://www.petercollingridge.co.uk/blog/finding-angle-around-ellipse\n// http://commons.oreilly.com/wiki/index.php/SVG_Essentials/Paths\n// https://github.com/waldyrious/understand-svg-arcs\ntypedef EllipseArcData = {\n    public var cx:    Float;\n    public var cy:    Float;\n    var rx:    Float;\n    var ry:    Float;\n    var alpha: Float;\n    var omega: Float;\n    var delta: Float;\n    var phi: Float;\n    // pre-calculate to reduce point calculations\n    var phiSin: Float;\n    var phiCos: Float;\n}\n@:forward\nclass EllipseArc{\n    var arc: EllipseArcData;\n    public var x: Float;\n    public var y: Float;\n    public function new( arc_: EllipseArcData ){\n        arc = arc_;\n    }\n    public function alphaPoint(){ // mainly for testing\n        calculatePoint( arc.alpha );\n    }\n    public function omegaPoint(){ // mainly for testing\n        calculatePoint( arc.omega );\n    }\n    public function lineRender( moveTo:  Float->Float->Void, lineTo: Float->Float->Void\n                              , dA: Float, ?renderFirst: Bool = true){\n        var sign = ( arc.delta > 0 )? 1: -1;\n        var totalSteps = Math.ceil( Math.abs( arc.delta )/dA );\n        var theta = arc.alpha;\n        var step = arc.delta/totalSteps;\n        if( renderFirst ){\n            calculatePoint( theta );\n            moveTo( x, y );\n        }\n        for( i in 1...totalSteps ){\n            theta += step;\n            calculatePoint( theta );\n            lineTo( x, y );\n        }\n        calculatePoint( arc.omega );\n        lineTo( x, y );\n    }\n    public inline\n    function calculatePoint( theta: Float ){\n        var px = arc.cx + arc.rx*Math.cos( theta );\n        var py = arc.cy + arc.ry*Math.sin( theta );\n        px -= arc.cx;\n        py -= arc.cy;\n        var dx = px;\n        var dy = py;\n        px = dx*arc.phiCos - dy*arc.phiSin;\n        py = dx*arc.phiSin + dy*arc.phiCos;\n        x = px + arc.cx;\n        y = py + arc.cy;\n        //x = px;\n        //y = py;\n    }\n}\nabstract ConverterArc( EllipseArcData ) from EllipseArcData to EllipseArcData {\n    public inline function new( sx: Float, sy: Float, xr: Float, yr: Float, phi: Float, large: Int, sweep: Int, ex: Float, ey: Float ){\n        // mid point between start and end points.\n        var mx = ( sx - ex )/2;\n        var my = ( sy - ey )/2;\n        // average\n        var ax = ( sx + ex )/2;\n        var ay = ( sy + ey )/2;\n        // convert to radians.\n        // must check that % works with negative.\n        phi %= 360;\n        phi = phi*Math.PI/180;\n        var sin = Math.sin( phi );\n        var cos = Math.cos( phi );\n        // find x1, y1\n        var x1 = mx*cos + my*sin;\n        var y1 = -mx*sin + my*cos;\n        // check radii large enough\n        var rx = Math.abs( xr );\n        var ry = Math.abs( yr );\n        var rxx = rx*rx;\n        var ryy = ry*ry;\n        var xx1 = x1*x1;\n        var yy1 = y1*y1;\n        var check = xx1/rxx + yy1/ryy;\n        if( check > 1 ){\n            rx *= Math.sqrt( check );\n            ry *= Math.sqrt( check );\n            rxx = rx*rx;\n            ryy = ry*ry;\n        }\n        // find cx,cy\n        var sign = ( large == sweep ) ? -1: 1;\n        var sq = (  rxx*ryy - rxx * yy1 - ryy * xx1 ) / ( rxx * yy1 + ryy * xx1 );\n        sq = ( sq < 0 )? 0: sq;\n        var coef = sign * Math.sqrt( sq );\n        var cx1 =  coef * rx * y1 / ry;\n        var cy1 = -coef * ry * x1 / rx;\n        var cx = ax + cx1*cos - cy1*sin;\n        var cy = ay + cx1*sin + cy1*cos;\n        // adjust sx, sy, ex, ey for phi\n        var phiSin = Math.sin( -phi );\n        var phiCos = Math.cos( -phi );\n        sx -= cx;\n        sy -= cy;\n        var dx = sx;\n        var dy = sy;\n        sx = dx*phiCos - dy*phiSin;\n        sy = dx*phiSin + dy*phiCos;\n        sx = sx + cx;\n        sy = sy + cy;\n        ex -= cx;\n        ey -= cy;\n        var dx = ex;\n        var dy = ey;\n        ex = dx*phiCos - dy*phiSin;\n        ey = dx*phiSin + dy*phiCos;\n        ex = ex + cx;\n        ey = ey + cy;\n        // calculate start and end angle taking into acount ellipse angle != eulclid angle.\n        var alpha = Math.atan2( rx*(cy-sy), ry*(cx-sx) ) - Math.PI;\n        var omega = Math.atan2( rx*(cy-ey), ry*(cx-ex) ) - Math.PI;\n        var delta = alpha - omega;\n        // change depending on sweep.\n        if( sweep == 1 && delta > 0) {\n            delta -= 2*Math.PI;\n        } else if( sweep == 0 && delta < 0 ){\n            delta += 2*Math.PI;\n        }\n        this = { cx: cx, cy: cy, rx: rx, ry: ry\n            , alpha: alpha, omega: omega, delta: -delta, phi: phi\n            , phiSin: Math.sin( phi ), phiCos: Math.cos( phi ) }\n    }\n    static inline function zeroto2pi( angle: Float ): Float {\n        return if( angle >= 0 && angle > Math.PI ){\n            angle; // don't really want any maths to touch it if it's within range as it may effect value slightly\n        } else {\n            var a = angle % ( 2 * Math.PI );\n            return ( a >= 0 )? a : ( a + 2 * Math.PI );\n        }\n    }\n}","package trilateral.justPath;\n\nclass StoreF6{\n    var l: Int = 0;\n    public var s0: Null<Float>;\n    public var s1: Null<Float>;\n    public var s2: Null<Float>;\n    public var s3: Null<Float>;\n    public var s4: Null<Float>;\n    public var s5: Null<Float>;\n    public var s6: StoreF6;\n    public function new(){}\n    inline public function clear(){\n        l = 0;\n        s0 = null;\n        s1 = null;\n        s2 = null;\n        s3 = null;\n        s4 = null;\n        s5 = null;\n        s6 = null;\n    }\n    inline public function length(): Int {\n        return l;\n    }\n    inline public function push( v: Null<Float> ){\n        switch( l ){\n            case 0:\n                s0 = v;\n            case 1:\n                s1 = v;\n            case 2:\n                s2 = v;\n            case 3:\n                s3 = v;\n            case 4:\n                s4 = v;\n            case 5: \n                s5 = v;\n            default:\n                if( s6 == null ) s6 = new StoreF6();\n                s6.push( v );\n        }\n        l++;\n    }\n    inline public function pop(){\n        var out: Null<Float> = null;\n        switch( l ){\n            case 0:\n                out = s0;\n                s0 = null;\n            case 1:\n                out = s1;\n                s1 = null;\n            case 2:\n                out = s2;\n                s2 = null;\n            case 3:\n                out = s3;\n                s3 = null;\n            case 4:\n                out = s4;\n                s4 = null;\n            case 5:\n                out = s5; \n                s5 = null;\n            default:\n                if( s6 != null ) s6.pop();\n        }\n        l--;\n        return out;\n    }\n    \n    inline public function unshift( v: Null<Float> ){\n        if( s6 == null ) s6 = new StoreF6();\n        s6.unshift( s5 );\n        s5 = s4;\n        s4 = s3;\n        s3 = s2;\n        s2 = s1;\n        s0 = v;\n        l++;\n    }\n    inline public function shift(): Null<Float>{\n        var out = s0;\n        if( l != 0 ){\n            s0 = s1;\n            s1 = s2;\n            s2 = s3;\n            s3 = s4;\n            s4 = s5;\n            s5 = null;\n            if( s6 != null ) s5 = s6.shift();\n            l--;\n        }\n        return out;\n    }\n    inline public function toString(): String{\n        return if( s6 == null ){\n            '$s0, $s1, $s2, $s3, $s4, $s5';\n        } else {\n            '$s0, $s1, $s2, $s3, $s4, $s5' + s6.toString();\n        }\n    }\n    inline public function populatedToString(): String{\n        var out: String = '';\n        switch( l - 1 ){\n            case 0:\n                out = '$s0';\n            case 1:\n                out = '$s0, $s1';\n            case 2:\n                out = '$s0, $s1, $s2';\n            case 3:\n                out = '$s0, $s1, $s2, $s3';\n            case 4:\n                out = '$s0, $s1, $s2, $s3, $s4';\n            case 5: \n                out = '$s0, $s1, $s2, $s3, $s4, $s5';\n            default:\n                out = '$s0, $s1, $s2, $s3, $s4, $s5';\n                if( s6 != null ){\n                    out = out + s6.populatedToString();\n                } \n        }\n        return out;\n    }\n    var count = 0;\n    inline public function hasNext() {\n          return count < l + 1;\n    }\n    inline public function resetIterator(){\n        count = 0;\n        if( s6 != null ) s6.resetIterator();\n    }\n    inline public function next() {\n        var out: Null<Float> = null;\n        switch( count ){\n            case 0:\n                out = s0;\n            case 1:\n                out = s1;\n            case 2:\n                out = s2;\n            case 3:\n                out = s3;\n            case 4:\n                out = s4;\n            case 5:\n                out = s5; \n            default:\n                out = s6.next();\n        }\n        count++;\n        return out;\n    }\n    inline public function first(): Null<Float>{\n        return s0;\n    }\n    inline public function last(): Null<Float>{\n        var out: Null<Float> = null;\n        switch( l ){\n            case 0:\n                out = s0;\n            case 1:\n                out = s1;\n            case 2:\n                out = s2;\n            case 3:\n                out = s3;\n            case 4:\n                out = s4;\n            case 5:\n                out = s5; \n            default:\n                out = s6.last();\n        }\n        return out;\n    }\n    inline public function penultimate(): Null<Float>{\n        var out: Null<Float> = null;\n        switch( l-1 ){\n            case 0:\n                out = s0;\n            case 1:\n                out = s1;\n            case 2:\n                out = s2;\n            case 3:\n                out = s3;\n            case 4:\n                out = s4;\n            case 5:\n                out = s5; \n            default:\n                out = s6.penultimate();\n        }\n        return out;\n    }\n    inline public function toArray(){\n        var arr = new Array<Null<Float>>();\n        count = 0;\n        // not implemented for s6... not sure on this one... maybe not using.\n        for( i in this ){\n            arr.push( i );\n        }\n    }\n}\n","package trilateral.justPath;\nimport trilateral.justPath.StoreF8;\nimport trilateral.justPath.StoreF6;\nimport trilateral.justPath.EllipseArc;\nimport trilateral.justPath.IPathContext;\nclass SvgPath{\n    var str = '';\n    var pos = 0;\n    var lastX = 0.;\n    var lastY = 0.;\n    var controlX = 0.;\n    var controlY = 0.;\n    var c = 0;\n    var l = 0;\n    var pathContext: IPathContext;\n    var store:       StoreF6;\n    public function new( pathContext_: IPathContext ){\n        pathContext = pathContext_;\n    }\n    function quickTriangle( x0: Float, y0: Float, off: Float ){ // only used for visual debug ie: Ellipse Arc.\n        pathContext.moveTo( x0, y0 - off );\n        pathContext.lineTo( x0 + off, y0 + off );\n        pathContext.lineTo( x0 - off, y0 + off );\n        pathContext.lineTo( x0, y0 - off );\n    }\n    // currently not much protection against malformed, or unusual path data.\n    public function parse( str_: String ): String {\n        str = str_;\n        pos = 0;\n        l = str.length;\n        c = nextChar();\n        var count = 0;\n        store = new StoreF6();\n        while( pos < l ){\n            switch( c ){\n                case 'M'.code:\n                    extractArgs();\n                    if( store.length() == 2 ){ // usual case \n                        lastX = store.s0;\n                        lastY = store.s1;\n                        pathContext.moveTo( lastX, lastY );\n                    } else if( store.length() > 2 ){ // when multiple moves ... these are actually lineTo, weird!\n                            lastX = store.shift();\n                            lastY = store.shift();\n                            pathContext.moveTo( lastX, lastY );\n                        while( store.length() > 1 ) { \n                            lastX = store.shift();\n                            lastY = store.shift();\n                            pathContext.lineTo( lastX, lastY );\n                        }\n                    } // when second parameter missing!\n                case 'm'.code:\n                    extractArgs();\n                    if( store.length() == 2 ){ // usual case\n                        lastX = store.s0 + lastX;\n                        lastY = store.s1 + lastY;\n                        pathContext.moveTo( lastX, lastY );\n                    } else if( store.length() > 2 ){\n                            lastX = store.shift() + lastX;\n                            lastY = store.shift() + lastY;\n                            pathContext.moveTo( lastX, lastY );\n                        while( store.length() > 1 ){\n                            lastX = store.shift() + lastX;\n                            lastY = store.shift() + lastY;\n                            pathContext.lineTo( lastX, lastY );\n                        }\n                    } // when second parameter missing!\n                case 'L'.code:\n                    extractArgs();\n                    if( store.length() == 2 ){\n                        lastX = store.s0;\n                        lastY = store.s1;\n                        pathContext.lineTo( lastX, lastY );\n                    } else if( store.length() > 2 ){\n                        while( store.length() > 1 ){\n                            lastX = store.shift();\n                            lastY = store.shift();\n                            pathContext.lineTo( lastX, lastY );\n                        }\n                    }\n                case 'l'.code:\n                    extractArgs();\n                    if( store.length() == 2 ){\n                        lastX = store.s0 + lastX;\n                        lastY = store.s1 + lastY;\n                        pathContext.lineTo( lastX, lastY );\n                    } else if( store.length() > 2 ){\n                        while( store.length() > 2 ){\n                            lastX = store.shift() + lastX;\n                            lastY = store.shift() + lastY;\n                            pathContext.lineTo( lastX, lastY );\n                        }\n                    }\n                case 'H'.code:\n                    extractArgs( false );\n                    if( store.length() == 1 ){\n                        lastX = store.s0;\n                        pathContext.lineTo( lastX, lastY );\n                    } else if( store.length() > 1 ){\n                        while( store.length() > 0 ){\n                            lastX = store.shift();\n                            pathContext.lineTo( lastX, lastY );\n                        }\n                    }\n                case 'h'.code:\n                    extractArgs( false );\n                    if( store.length() == 1 ){\n                        lastX = lastX + store.s0;\n                        pathContext.lineTo( lastX, lastY );\n                    } else if( store.length() > 1 ){\n                        while( store.length() > 0 ){\n                            lastX = lastX + store.shift();\n                            pathContext.lineTo( lastX, lastY );\n                        }\n                    }\n                case 'V'.code:\n                    extractArgs( false );\n                    if( store.length() == 1 ){\n                        lastY = store.shift();\n                        pathContext.lineTo( lastX, lastY );\n                    } else if( store.length() > 1 ){\n                        while( store.length() > 0 ){\n                            lastY = store.shift();\n                            pathContext.lineTo( lastX, lastY );\n                        }\n                    }\n                case 'v'.code:\n                    extractArgs( false );\n                    if( store.length() == 1 ){\n                        lastY = lastY + store.s0;\n                        pathContext.lineTo( lastX, lastY );\n                    } else if( store.length() > 1 ){\n                        while( store.length() > 0 ){\n                            lastY = lastY + store.shift();\n                            pathContext.lineTo( lastX, lastY );\n                        }\n                    }\n                case 'C'.code:\n                    extractArgs();\n                    if( store.length() == 4 ){\n                        controlX = store.s2;\n                        controlY = store.s3;\n                        lastX = store.s4;\n                        lastY = store.s5;\n                        pathContext.curveTo( store.s0, store.s1\n                                        ,   controlX, controlY\n                                        ,   lastX, lastY );\n                    } else if( store.length() > 4 ){\n                        while( store.length() > 3 ){\n                            var firstX = store.shift();\n                            var firstY = store.shift();\n                            controlX = store.shift();\n                            controlY = store.shift();\n                            lastX = store.shift();\n                            lastY = store.shift();\n                            pathContext.curveTo( firstX, firstY, controlX, controlY, lastX, lastY );\n                        }\n                    }\n                case 'c'.code:\n                    extractArgs();\n                    if( store.length() == 4 ){\n                        var firstX = store.s0 + lastX;\n                        var firstY = store.s1 + lastY;\n                        controlX = store.s2 + lastX;\n                        controlY = store.s3 + lastY;\n                        lastX = store.s4 + lastX;\n                        lastY = store.s5 + lastY;\n                        pathContext.curveTo( firstX, firstY, controlX, controlY, lastX, lastY );\n                    } else if( store.length() > 4 ){\n                        while( store.length() > 3 ){\n                            var firstX = store.shift() + lastX;\n                            var firstY = store.shift() + lastY;\n                            controlX = store.shift() + lastX;\n                            controlY = store.shift() + lastY;\n                            lastX = store.shift() + lastX;\n                            lastY = store.shift() + lastY;\n                            pathContext.curveTo( firstX, firstY, controlX, controlY, lastX, lastY );\n                        }\n                    }\n                case 'S'.code:\n                    // TODO: add code for cases when no last control\n                    extractArgs();\n                    // calculate reflection of previous control points\n                    if( store.length() == 4 ){\n                        var firstX = store.s0;\n                        var firstY = store.s1;\n                        controlX = 2*lastX - controlX;\n                        controlY = 2*lastY - controlY;\n                        var endX = store.s2;\n                        var endY = store.s3;\n                        pathContext.curveTo( controlX, controlY, firstX, firstY, endX, endY );\n                        controlX = store.s0;\n                        controlY = store.s1;\n                        lastX = endX;  // not there but I think it neest to be?\n                        lastY = endY;\n                    } else if( store.length() > 4 ){\n                        while( store.length() > 3 ){\n                            var firstX = store.shift();\n                            var firstY = store.shift();\n                            controlX = 2*lastX - controlX;\n                            controlY = 2*lastY - controlY;\n                            lastX = store.shift();\n                            lastY = store.shift();\n                            pathContext.curveTo( controlX, controlY, firstX, firstY, lastX, lastY );\n                            controlX = firstX;\n                            controlY = firstY;\n                        }\n                    }\n                case 's'.code:\n                    // TODO: add code for cases when no last control\n                    extractArgs();\n                    // calculate reflection of previous control points\n                    if( store.length() == 4 ){\n                        var firstX = store.s0 + lastX;\n                        var firstY = store.s1 + lastY;\n                        controlX = 2*lastX - controlX;\n                        controlY = 2*lastY - controlY;\n                        lastX = store.s2 + lastX;\n                        lastY = store.s3 + lastY;\n                        pathContext.curveTo( controlX, controlY, firstX, firstY, lastX, lastY );\n                        controlX = firstX;\n                        controlY = firstY;\n                    } else if( store.length() > 4 ){\n                        while( store.length() > 3 ){\n                            var firstX = store.shift() + lastX;\n                            var firstY = store.shift() + lastY;\n                            controlX = 2*lastX - controlX;\n                            controlY = 2*lastY - controlY;\n                            lastX = store.shift() + lastX;\n                            lastY = store.shift() + lastY;\n                            pathContext.curveTo( controlX, controlY, firstX, firstY, lastX, lastY );\n                            controlX = firstX;\n                            controlY = firstY;\n                        }\n                    }\n                case 'Q'.code:\n                    extractArgs();\n                    if( store.length() == 4 ) {\n                        controlX = store.s0;\n                        controlY = store.s1;\n                        lastX = store.s2;\n                        lastY = store.s3;\n                        pathContext.quadTo( controlX, controlY\n                                    ,   lastX, lastY );\n                    } else if( store.length() > 4 ){\n                        while( store.length() > 3 ){\n                            controlX = store.shift();\n                            controlY = store.shift();\n                            lastX = store.shift();\n                            lastY = store.shift();\n                            pathContext.quadTo( controlX, controlY, lastX, lastY );\n                        }\n                    }\n                case 'q'.code:\n                    extractArgs();\n                    if( store.length() == 4 ){\n                        controlX = lastX + store.s0;\n                        controlY = lastY + store.s1;\n                        lastX = store.s0 + lastX;\n                        lastY = store.s1 + lastY;\n                        pathContext.quadTo( controlX, controlY, lastX, lastY );\n                    } else if( store.length() > 4 ){\n                        while( store.length() > 3 ){\n                            controlX = lastX + store.shift();\n                            controlY = lastY + store.shift();\n                            lastX = store.shift() + lastX;\n                            lastY = store.shift() + lastY;\n                            pathContext.quadTo( controlX, controlY, lastX, lastY );\n                        }\n                    }\n                case 'T'.code:\n                // TODO: add code for cases when no last control\n                    extractArgs();\n                    // calculate reflection of previous control points\n                    if( store.length() == 2 ){\n                        controlX = 2*lastX  - controlX;\n                        controlY = 2*lastY - controlY;\n                        lastX = store.s0;   \n                        lastY = store.s1;\n                        pathContext.quadTo( controlX, controlY, lastX, lastY );\n                    } else if( store.length() > 2 ){\n                        while( store.length() > 1 ){\n                            controlX = 2*lastX  - controlX;\n                            controlY = 2*lastY - controlY;\n                            lastX = store.shift();   \n                            lastY = store.shift();\n                            pathContext.quadTo( controlX, controlY, lastX, lastY );\n                        }\n                    }\n                case 't'.code:\n                // TODO: add code for cases when no last control\n                    extractArgs();\n                    // calculate reflection of previous control points\n                    if( store.length() == 2 ){\n                        controlX = 2*lastX - controlX;\n                        controlY = 2*lastY - controlY;\n                        lastX = store.s0 + lastY;\n                        lastY = store.s1 + lastX;\n                        pathContext.quadTo( controlX, controlY, lastX, lastY );\n                    } else if( store.length() > 2 ){\n                        while( store.length() > 1 ){\n                            controlX = 2*lastX - controlX;\n                            controlY = 2*lastY - controlY;\n                            lastX = store.shift() + lastY;\n                            lastY = store.shift() + lastX;\n                            pathContext.quadTo( controlX, controlY, lastX, lastY );\n                        }\n                    }\n                case 'A'.code:\n                    extractArgs();\n                    if( store.length() == 7 ){\n                        var sx      = lastX;\n                        var sy      = lastY;\n                        var xr      = store.shift();\n                        var yr      = store.shift();\n                        var phi     = store.shift();\n                        var large   = Std.int( store.shift() );\n                        var sweep   = Std.int( store.shift() );\n                        lastX       = store.shift();\n                        lastY       = store.shift();\n                        var ellipseData: EllipseArcData = new ConverterArc( sx, sy, xr, yr, phi, large, sweep, lastX, lastY );\n                        var ellipse  = new EllipseArc( ellipseData );\n                        ellipse.lineRender( pathContext.moveTo, pathContext.lineTo, Math.PI/18 );\n                    } else if( store.length() > 7 ){\n                        while( store.length() > 6 ){\n                            var sx      = lastX;\n                            var sy      = lastY;\n                            var xr      = store.shift();\n                            var yr      = store.shift();\n                            var phi     = store.shift();\n                            var large   = Std.int( store.shift() );\n                            var sweep   = Std.int( store.shift() );\n                            lastX       = store.shift();\n                            lastY       = store.shift();\n                            var ellipseData: EllipseArcData = new ConverterArc( sx, sy, xr, yr, phi, large, sweep, lastX, lastY );\n                            var ellipse  = new EllipseArc( ellipseData );\n                            ellipse.lineRender( pathContext.moveTo, pathContext.lineTo, Math.PI/18 );\n                        }\n                    }\n                case 'a'.code:\n                extractArgs();\n                if( store.length() == 7 ){\n                    var sx      = lastX;\n                    var sy      = lastY;\n                    var xr      = store.shift();\n                    var yr      = store.shift();\n                    var phi     = store.shift();\n                    var large   = Std.int( store.shift() );\n                    var sweep   = Std.int( store.shift() );\n                    lastX       = store.shift() + lastX;\n                    lastY       = store.shift() + lastY;\n                    var ellipseData: EllipseArcData = new ConverterArc( sx, sy, xr, yr, phi, large, sweep, lastX, lastY );\n                    var ellipse  = new EllipseArc( ellipseData );\n                    ellipse.lineRender( pathContext.moveTo, pathContext.lineTo, Math.PI/18 );\n                } else if( store.length() > 7 ){\n                    while( store.length() > 6 ){\n                        var sx      = lastX;\n                        var sy      = lastY;\n                        var xr      = store.shift();\n                        var yr      = store.shift();\n                        var phi     = store.shift();\n                        var large   = Std.int( store.shift() );\n                        var sweep   = Std.int( store.shift() );\n                        lastX       = store.shift() + lastX;\n                        lastY       = store.shift() + lastY;\n                        var ellipseData: EllipseArcData = new ConverterArc( sx, sy, xr, yr, phi, large, sweep, lastX, lastY );\n                        var ellipse  = new EllipseArc( ellipseData );\n                        ellipse.lineRender( pathContext.moveTo, pathContext.lineTo, Math.PI/18 );\n                    }\n                }\n                case 'Z'.code, 'z'.code: \n                    lastX = 0;\n                    lastY = 0;\n                    //trace( 'closepath' );\n                    //break;\n                case 'B'.code:\n                    trace( 'bearing - not implemented' );\n                    throw( 'bearing not supported please remove' );\n                default:\n                    count++;\n            }\n            c = nextChar();\n        }\n        return str_;\n    }\n    \n    // Extract the args\n    // Assumes all values are float\n    // new lines not yet implemented\n    // scientifc numbers not implemented yet\n    inline function extractArgs( ?process: Bool = true ) {\n        store.clear();\n        //pos++;\n        c = nextChar();\n        var count = 0;\n        var temp: String = '';\n        var exit = false;\n        while( true ) {\n            switch( c ) {\n                case '-'.code:\n                    if( temp != '' ){\n                        //if( temp == '0' ) temp = '0.1';\n                        if( process ){\n                            if( ( store.length() & 1) == 0 ) { // x \n                                store.push( Std.parseFloat( temp ) );\n                            } else { // y\n                                store.push( Std.parseFloat( temp ) );\n                            }\n                        } else {\n                            store.push( Std.parseFloat( temp ) );\n                        }\n                    }\n                    temp = '-';\n                case '.'.code:\n                    temp = temp + '.';\n                case '0'.code:\n                    temp = temp + '0';\n                case '1'.code:\n                    temp = temp + '1';\n                case '2'.code:\n                    temp = temp + '2';\n                case '3'.code:\n                    temp = temp + '3';\n                case '4'.code:\n                    temp = temp + '4';\n                case '5'.code:\n                    temp = temp + '5';\n                case '6'.code:\n                    temp = temp + '6';\n                case '7'.code:\n                    temp = temp + '7';\n                case '8'.code:\n                    temp = temp + '8';\n                case '9'.code:\n                    temp = temp + '9';\n                case ' '.code,','.code:\n                    if( temp != '' ){\n                        //if( temp == '0' ) temp = '0.1';\n                        if( process ){\n                            if( ( store.length() & 1) == 0 ) { // x \n                                store.push( Std.parseFloat( temp ) );\n                            } else { // y\n                                store.push( Std.parseFloat( temp ) );\n                            }\n                        } else { // for special cases V,v,H,h where only one var is stored.\n                            store.push( Std.parseFloat( temp ) );\n                        }\n                        temp = '';\n                    }\n                default:\n                    if( temp != '' ){\n                        //if( temp == '0' ) temp = '0.1';\n                        if( process ){\n                            if( ( store.length() & 1) == 0 ) { // x \n                                store.push( Std.parseFloat( temp ) );\n                            } else { // y\n                                store.push( Std.parseFloat( temp ) );\n                            }\n                        } else { // for special cases V,v,H,h where only one var is stored.\n                            store.push( Std.parseFloat( temp ) );\n                        }\n                        temp = '';\n                    }\n                    // Useful for debug:\n                    //trace(' default ' + store.populatedToString() );\n                    pos--;\n                    exit = true; // break; here causes a throw in older haxe which is not ideal.\n            }\n            if( exit ) break;\n            c = nextChar();\n        }\n    }\n    inline function nextChar() {\n        return StringTools.fastCodeAt( str, pos++ );\n    }\n}\n","package trilateral.justPath.transform;\nimport trilateral.justPath.IPathContext;\nclass ScaleContext implements IPathContext {\n    public var pathContext: IPathContext;\n    public var sx: Float;\n    public var sy: Float;\n    public function new( pathContext_: IPathContext, sx_: Float, sy_: Float ){\n        pathContext = pathContext_;\n        sx = sx_;\n        sy = sy_;\n    }\n    public inline\n    function moveTo( x: Float, y: Float ){\n        pathContext.moveTo( x*sx, y*sy );\n    }\n    public inline\n    function lineTo( x: Float, y: Float ){\n        pathContext.lineTo( x*sx, y*sy );\n    }\n    public inline\n    function quadTo( x1: Float, y1: Float, x2: Float, y2: Float ){\n        pathContext.quadTo( x1*sx, y1*sy, x2*sx, y2*sy );\n    }\n    public inline\n    function curveTo( x1: Float, y1: Float, x2: Float, y2: Float, x3: Float, y3: Float ): Void {\n        pathContext.curveTo( x1*sx, y1*sy, x2*sx, y2*sy, x3*sx, y3*sy );\n    }\n}","package trilateral.justPath.transform;\nimport trilateral.justPath.IPathContext;\nclass ScaleTranslateContext implements IPathContext {\n    public var pathContext: IPathContext;\n    public var dx: Float;\n    public var dy: Float;\n    public var sx: Float;\n    public var sy: Float;\n    public function new( pathContext_: IPathContext, dx_: Float, dy_: Float, sx_: Float, sy_: Float ){\n        pathContext = pathContext_;\n        dx = dx_;\n        dy = dy_;\n        sx = sx_;\n        sy = sy_;\n    }\n    public inline\n    function moveTo( x: Float, y: Float ){\n        pathContext.moveTo( x*sx + dx, y*sy + dy );\n    }\n    public inline\n    function lineTo( x: Float, y: Float ){\n        pathContext.lineTo( x*sx + dx, y*sy + dy );\n    }\n    public inline\n    function quadTo( x1: Float, y1: Float, x2: Float, y2: Float ){\n        pathContext.quadTo( x1*sx + dx, y1*sy + dy, x2*sx + dx, y2*sy + dy );\n    }\n    public inline\n    function curveTo( x1: Float, y1: Float, x2: Float, y2: Float, x3: Float, y3: Float ): Void {\n        pathContext.curveTo( x1*sx + dx, y1*sy + dy, x2*sx + dx, y2*sy + dy, x3*sx + dx, y3*sy + dy );\n    }\n}","package trilateral.path;\nimport trilateral.justPath.IPathContext;\nimport trilateral.tri.TrilateralArray;\nimport trilateral.tri.TrilateralPair;\nimport trilateral.geom.Algebra;\nimport trilateral.geom.Contour;\ntypedef Dim = {\n    var minX: Float;\n    var maxX: Float;\n    var minY: Float;\n    var maxY: Float;\n}\nclass Base implements IPathContext {\n    public var trilateralArray:     TrilateralArray;\n    var x:                          Float = 0.;\n    var y:                          Float = 0.;\n    public var width:               Float = 0.01;\n    public var widthFunction:       Float->Float->Float->Float->Float->Float;\n    var tempArr:                    Array<Float>;\n    public var contour:                    Contour;\n    var endLine:                    EndLineCurve;\n    public var points:              Array<Array<Float>>;\n    public var pointsClock:         Array<Array<Float>>;\n    public var pointsAnti:          Array<Array<Float>>;\n    public var dim:                 Array<Dim>;\n    public function new( ?contour_: Contour, ?trilateralArray_: TrilateralArray, ?endLine_: EndLineCurve = no ){\n        trilateralArray = ( trilateralArray_ == null )? new TrilateralArray(): trilateralArray_;\n        contour = ( contour_ == null )? new Contour( trilateralArray, endLine_ ): contour_;\n        endLine = endLine_;\n        points = [];\n        pointsClock = [];\n        pointsAnti = [];\n        points[0] = new Array<Float>();\n        dim = new Array<Dim>();\n    }\n    public function reset(){\n        trilateralArray = new TrilateralArray();\n        contour = new Contour( trilateralArray, endLine );\n        points = [];\n        pointsClock = [];\n        pointsAnti = [];\n        points[0] = new Array<Float>();\n        dim = new Array<Dim>();\n    }\n    public function pointsNoEndOverlap(): Array<Array<Float>> {\n        var p: Array<Float>;\n        var l: Int;\n        var j = 0;\n        var pointsClean = new Array<Array<Float>>();\n        for( i in 0...points.length ){\n            p = points[ i ];\n            if( p.length > 2 ) pointsClean[ j++ ] = p; // remove empty arrays by only storing full ones.\n        }\n        points = pointsClean;\n        for( i in 0...points.length ){\n            p = points[ i ];\n            l = p.length;\n            var repeat = ( p[ 0 ] == p[ l - 2 ] && p[ 1 ] == p[ l - 1 ] );\n            if( repeat ){\n                points[ i ].pop();\n                points[ i ].pop();\n                l -= 2;\n            }\n            /*  Possible functionality for correcting anti-clockwise \n            var cc = 0.;\n            var k = 0;\n            var x1: Float;\n            var y1: Float;\n            var x2: Float;\n            var y2: Float;\n            var last = l-2;\n            while( k < l ){\n                x1 = p[ k ];\n                y1 = p[ k + 1 ];\n                if( k == last ){\n                    x2 = p[ 0 ];\n                    y2 = p[ 1 ];\n                } else {\n                    x2 = p[ k + 2 ];\n                    y2 = p[ k + 3 ];\n                }\n                cc += ( x2 - x1 ) * ( y2 + y1 ); //(x1 * y2 - x2 * y1)\n                k += 2;\n            }\n            var reverse = cc < 0;\n            trace( ' reverse ' + cc  );\n            if( reverse ){\n                trace( 'reversing points for shape number ' + i  );\n                k = 0;\n                while( k < l ){\n                    x1 = p[ k ];\n                    p[ k ] = p[ k + 1 ];\n                    p[ k + 1 ] = x1;\n                }\n            }*/\n        }\n        return points;\n    }\n    public function pointsRewound(): Array<Array<Float>> {\n        var p: Array<Float>;\n        var l: Int;\n        var j = 0;\n        var pointsClean = new Array<Array<Float>>();\n        for( i in 0...points.length ){\n            p = points[ i ];\n            if( p.length > 2 ) pointsClean[ j++ ] = p; // remove empty arrays by only storing full ones.\n        }\n        points = pointsClean;\n        \n        for( i in 0...points.length ){\n            p = points[ i ];\n            l = p.length;\n            \n            var repeat = ( p[ 0 ] == p[ l - 2 ] && p[ 1 ] == p[ l - 1 ] );\n            if( repeat ){\n                points[ i ].pop();\n                points[ i ].pop();\n                l -= 2;\n            }\n            \n            var cc = 0.;\n            var k = 0;\n            var x1: Float;\n            var y1: Float;\n            var x2: Float;\n            var y2: Float;\n            var last = l-2;\n            while( k < l ){\n                x1 = p[ k ];\n                y1 = p[ k + 1 ];\n                if( k == last ){\n                    x2 = p[ 0 ];\n                    y2 = p[ 1 ];\n                } else {\n                    x2 = p[ k + 2 ];\n                    y2 = p[ k + 3 ];\n                }\n                cc += ( x2 - x1 ) * ( y2 + y1 ); //(x1 * y2 - x2 * y1)\n                k += 2;\n            }\n            var reverse = cc > 0;\n            if( reverse ){\n                k = 0;\n                while( k < l ){\n                    x1 = p[ k ];\n                    p[ k ] = p[ k + 1 ];\n                    p[ k + 1 ] = x1;\n                    k += 2;\n                }\n            }\n            \n            p.reverse();\n            points[ i ] = p;\n        }\n        return points;\n    }\n    \n    inline function initDim(): Dim{\n        return { minX: Math.POSITIVE_INFINITY, maxX: Math.NEGATIVE_INFINITY, minY: Math.POSITIVE_INFINITY, maxY: Math.NEGATIVE_INFINITY };\n    }\n    inline function updateDim( x: Float, y: Float ){\n        var d = dim[ dim.length - 1 ];\n        if( x < d.minX ) d.minX = x;\n        if( x > d.maxX ) d.maxX = x;\n        if( y < d.minY ) d.minY = y;\n        if( y > d.maxY ) d.maxY = y;\n    }\n    public function moveTo( x_: Float, y_: Float ): Void {\n        if( endLine == end || endLine == both ) contour.end( width );\n        x = x_;\n        y = y_;\n        var l = points.length;\n        points[ l ] = new Array<Float>();\n        points[ l ][0] = x_;\n        points[ l ][1] = y_;\n        //if( contour.pointsClock.length != 0 ) {\n            // contour.endEdges();\n            pointsClock[ pointsClock.length ] = contour.pointsClock.copy();\n            pointsAnti[ pointsAnti.length ] = contour.pointsAnti.copy();\n            //}\n        dim[ dim.length ] = initDim();\n        updateDim( x_, y_ );\n        contour.reset(); // TODO: needs improving\n    }\n    public inline\n    function lastClock(){\n        if( contour.pointsClock.length != 0 ) {\n            // contour.endEdges();\n            pointsClock[ pointsClock.length ] = contour.pointsClock.copy();\n            pointsAnti[ pointsAnti.length ] = contour.pointsAnti.copy();\n        }\n        // contour.reset();?\n    }\n    // collates edges\n    public inline\n    function getEdges(): Array<Array<Float>> {\n        var edges = new Array<Array<Float>>();// ideally consider sizing this?\n        var no    = pointsClock.length;\n        if( no > pointsAnti.length ) no = pointsAnti.length;\n        var pClock: Array<Float>;\n        var pAnti:  Array<Float>;\n        var shape:  Array<Float>;\n        for( s in 0...no ){\n            pClock      = pointsClock[ s ];\n            pAnti       = pointsAnti[ s ];\n            var lc      = pClock.length;\n            var la      = pAnti.length;\n            edges[ s ]  = new Array<Float>();// ideally consider sizing this? lc + la\n            shape       = edges[ s ];\n            for( i in 0...lc ) shape[ i ] = pClock[ i ];\n            var j       = shape.length;\n            var l5      = Std.int( la/2 );\n            for( i in 0...l5 ){ // add in reverse order\n                shape[ j + i*2 ]     = pAnti[ la - i*2 - 1 ]; // put x below y\n                shape[ j + i*2 + 1 ] = pAnti[ la - i*2 ];\n            }\n            j = shape.length;\n            shape[ j++ ] = pClock[ 0 ];  // join up would be better to put Anti on front?\n            shape[ j   ] = pClock[ 1 ];\n        }\n        return edges;\n    }\n    public inline \n    function lineTo( x_: Float, y_: Float ): Void{\n        var repeat = ( x == x_ && y == y_ ); // added for poly2tryhx it does not like repeat points!\n        if( !repeat ){ // this does not allow dot's to be created using lineTo can move beyond lineTo if it seems problematic.\n            if( widthFunction != null ) width = widthFunction( width, x, x, x_, y_ );\n            line( x_, y_ ); \n            var l = points.length;\n            var p = points[ l - 1 ];\n            var l2 = p.length;\n            p[ l2 ]     = x_;\n            p[ l2 + 1 ] = y_;\n            updateDim( x_, y_ );\n            x = x_;\n            y = y_;\n        }\n    }\n    function line( x_: Float, y_: Float ) {\n        lineTrace( x_, y_ );\n        // Simplest line not connection no ends.\n        contour.line( x, y, x_, y_, width );\n    }\n    inline function lineTrace( x_: Float, y_: Float ){\n        trace( 'lineTo( $x, $y, $x_, $y_, width )' );\n    }\n    public inline\n    function quadTo( x1: Float, y1: Float, x2: Float, y2: Float ): Void {\n        tempArr = [];\n        Algebra.quadCurve( tempArr, x, y, x1, y1, x2, y2 );\n        plotCoord( tempArr, false );\n        x = x2;\n        y = y2;\n    }\n    // x1,y1 is a point on the curve rather than the control point, taken from my divtatic project.\n    public inline\n    function quadThru( x1: Float, y1: Float, x2: Float, y2: Float ): Void {\n        var newx = 2*x1 - 0.5*( x + x2 );\n        var newy = 2*y1 - 0.5*( y + y2 );\n        return quadTo( newx, newy, x2, y2 );\n    }\n    public inline\n    function curveTo( x1: Float, y1: Float, x2: Float, y2: Float, x3: Float, y3: Float ): Void {\n        tempArr = [];\n        Algebra.cubicCurve( tempArr, x, y, x1, y1, x2, y2, x3, y3 );\n        plotCoord( tempArr, false );\n        x = x3;\n        y = y3;\n    }\n    public inline\n    function plotCoord( arr: Array<Float>, ?withMove: Bool = true ): Void {\n        var l = arr.length;\n        var i = 2;\n        if( withMove ){ // normally when just plotting points you will do it withMove but from a curve not.\n            moveTo( arr[ 0 ], arr[ 1 ] );\n        } else {\n            lineTo( arr[ 0 ], arr[ 1 ] );\n        }\n        while( i < l ){\n            lineTo( arr[ i ], arr[ i + 1 ] );\n            i += 2;\n        }\n    }\n}","package trilateral.geom;\nimport trilateral.tri.Triangle;\nimport trilateral.geom.Point;\nimport trilateral.tri.Trilateral;\nimport trilateral.tri.TrilateralPair;\nimport trilateral.angle.Fraction;\nimport trilateral.angle.Pi2pi;\nimport trilateral.angle.ZeroTo2pi;\ntypedef QuadPoint = { A: Point, B: Point, C: Point, D: Point };\nclass Algebra {\n    public inline static\n    function theta( p0: Point, p1: Point ): Float {\n        var dx: Float = p0.x - p1.x;\n        var dy: Float = p0.y - p1.y;\n        return Math.atan2( dy, dx );\n    }\n    public static inline\n    function dist( p0: Point, p1: Point  ): Float {\n        var dx: Float = p0.x - p1.x;\n        var dy: Float = p0.y - p1.y;\n        return dx*dx + dy*dy;\n    }\n    // A B C, you can find the winding by computing the cross product (B - A) x (C - A)\n    public static inline\n    function adjustWinding( A_: Point, B_: Point, C_: Point ): Bool{\n        var val: Bool = !( cross( subtract( B_, A_ ), subtract( C_, A_ ) ) < 0 );\n        return val;\n    }\n    // subtract\n    public static inline\n    function subtract( p0: Point, p1: Point ) : Point {\n        return { x: p0.x - p1.x, y: p0.y - p1.y };\n    }\n    // to get the cross product\n    public static inline\n    function cross( p0: Point, p1: Point ) : Float {\n        return p0.x*p1.y - p0.y*p1.x;\n    }\n    public static inline\n    function sign( n: Float ): Int {\n        return Std.int( Math.abs( n )/n );\n    }\n    //Bezier\n    public static inline\n    function quadratic ( t: Float, s: Float, c: Float, e: Float ): Float {\n        var u = 1 - t;\n        return Math.pow( u, 2 )*s + 2*u*t*c + Math.pow( t, 2 )*e;\n    }\n    public static inline\n    function cubic( t: Float, s: Float, c1: Float, c2: Float, e: Float ): Float {\n        var u = 1 - t;\n        return  Math.pow( u, 3 )*s + 3*Math.pow( u, 2 )*t*c1 + 3*u*Math.pow( t, 2 )*c2 + Math.pow( t, 3 )*e;\n    }\n    public static\n    var quadStep: Float = 0.03;\n    // Create Quadratic Curve\n    public static inline\n    function quadCurve( p: Array<Float>, ax: Float, ay: Float, bx: Float, by: Float, cx: Float, cy: Float ): Array<Float> {\n        var step = calculateQuadStep( ax, ay, bx, by, cx, cy );\n        var l = p.length;\n        p[ l++ ] = ax;\n        p[ l++ ] = ay;\n        var t = step;\n        while( t < 1. ){\n            p[ l++ ] = quadratic( t, ax, bx, cx );\n            p[ l++ ] = quadratic( t, ay, by, cy );\n            t += step;\n        }\n        p[ l++ ] =  cx;\n        p[ l++ ] =  cy;\n        return p;\n    }\n    public static\n    var cubicStep: Float = 0.03;\n    // Create Cubic Curve\n    public static inline \n    function cubicCurve( p: Array<Float>, ax: Float, ay: Float, bx: Float, by: Float, cx: Float, cy: Float, dx: Float, dy: Float ): Array<Float> {\n        var step = calculateCubicStep( ax, ay, bx, by, cx, cy, dx, dy );\n        var l = p.length;\n        p[ l++ ] = ax;\n        p[ l++ ] = ay;\n        var t = step;\n        while( t < 1. ){\n            p[ l++ ] = cubic( t, ax, bx, cx, dx );\n            p[ l++ ] = cubic( t, ay, by, cy, dy );\n            t += step;\n        }\n        p[ l++ ] =  dx;\n        p[ l++ ] =  dy;\n        return p;\n    }\n    public static inline\n    function calculateQuadStep( ax: Float, ay: Float, bx: Float, by: Float, cx: Float, cy: Float ): Float {\n        var approxDistance = distance( ax, ay, bx, by ) + distance( bx, by, cx, cy );\n        if( approxDistance == 0 ) approxDistance = 0.000001;\n        return Math.min( 1/( approxDistance*0.707 ), quadStep );\n    }\n    public static inline\n    function calculateCubicStep( ax: Float, ay: Float, bx: Float, by: Float, cx: Float, cy: Float, dx: Float, dy: Float ): Float {\n        var approxDistance = distance( ax, ay, bx, by ) + distance( bx, by, cx, cy ) + distance( cx, cy, dx, dy );\n        if( approxDistance == 0 ) approxDistance = 0.000001;\n        return Math.min( 1/( approxDistance*0.707 ), cubicStep );\n    }\n    /* NOT STABLE ENOUGH :(  - may remove soon!\n    public static inline\n    function eggPoints( p: Array<Float>, x: Float, y: Float, width: Float, ?sides: Int = 70 ){\n        var sidesHalf: Int = Std.int( sides/2 ) + 1;\n        var px: Float = 0;\n        var py: Float = 0;\n        var a = 5;\n        var b = 0.7*a;\n        var l = 0;\n        for( i in 0...Std.int( sides/2 ) ){\n            if( i != 0 ){\n                 px = i/5;\n                 py = Math.sqrt( px ) * Math.sqrt( Math.abs(\n                                                     (a-b) -2*px + Math.sqrt( 4*b*px + Math.pow( a-b, 2 ) ) )\n                                                    )/Math.sqrt( 2 );\n                 //py = Math.sqrt( \n                 //    Math.abs( -20*Math.pow( px, 2 ) - px*Math.sqrt( 280*px + 9 ) + 3*px ) \n                 //    )/( 2*Math.sqrt( 5 ) );\n            }\n            p[ Std.int( sides*2 ) - l ] = px*width + x;\n            p[ l ] = px*width + x;\n            l++;\n            p[ Std.int( sides*2 ) - l ] = -py*width + y;\n            p[ l ] = py*width + y;\n            l++;\n        }\n    }\n    */\n    // may not be most optimal\n    public inline static\n    function lineAB( A: Point, B: Point, width: Float ){\n        var dx: Float = A.x - B.x;\n        var dy: Float = A.y - B.y;\n        var P = { x:A.x - width/2, y:A.y };\n        var omega = thetaCheap( dx, dy ); // may need angle correction.\n        var dim: Point = { x: width, y: distCheap( dx, dy ) };\n        return rotateVectorLine( P, dim, omega, A.x + width/2, A.y );\n    }\n    // may not be most optimal\n    public inline static\n    function lineABCoord( ax: Float, ay: Float, bx: Float, by: Float, width: Float ){\n        var dx: Float = ax - bx;\n        var dy: Float = ay - by;\n        var P = { x:ax - width/2, y:ay };\n        var omega = thetaCheap( dx, dy ); // may need angle correction.\n        var dim: Point = { x: width, y: distCheap( dx, dy ) };\n        return rotateVectorLine( P, dim, omega, ax + width/2, ay );\n    }\n    \n    public inline static\n    function rotateVectorLine( pos: Point, dim: Point, omega: Float, pivotX: Float, pivotY: Float ): QuadPoint {\n        //   A   B\n        //   D   C\n        var px = pos.x;\n        var py = pos.y;\n        var dx = dim.x;\n        var dy = dim.y;\n        var A_ = { x: px,            y: py };\n        var B_ = { x: px + dx,   y: py };\n        var C_ = { x: px + dx,   y: py + dy };\n        var D_ = { x: px,            y: py + dy };\n        if( omega != 0. ){\n            var sin = Math.sin( omega );\n            var cos = Math.cos( omega );\n            A_ = Algebra.pivotCheap( A_, sin, cos, pivotX, pivotY );\n            B_ = Algebra.pivotCheap( B_, sin, cos, pivotX, pivotY );\n            C_ = Algebra.pivotCheap( C_, sin, cos, pivotX, pivotY );\n            D_ = Algebra.pivotCheap( D_, sin, cos, pivotX, pivotY );\n        }\n        return { A:A_, B:B_, C:C_, D:D_ };\n    }\n    public inline static\n    function pivotCheap( p: Point, sin: Float, cos: Float, pivotX: Float, pivotY: Float ){\n        var px = p.x - pivotX;\n        var py = p.y - pivotY;\n        var px2 = px * cos - py * sin;\n        py = py * cos + px * sin;\n        return {    x: px2 + pivotX,   y: py + pivotY };\n    }\n    public inline static // not used?\n    function pivot( p: Point, omega: Float, pivotX: Float, pivotY: Float ){\n        var px = p.x - pivotX;\n        var py = p.y - pivotY;\n        var px2 = px * Math.cos( omega ) - py * Math.sin( omega );\n        py = py * Math.cos( omega ) + px * Math.sin( omega );\n        return {    x: px2 + pivotX,   y: py + pivotY };\n    }\n    public inline static\n    function thetaCheap( dx: Float, dy: Float ): Float {\n        return Math.atan2( dy, dx );\n    }\n    public static inline\n    function distCheap( dx: Float, dy: Float  ): Float {\n        return dx*dx + dy*dy;\n    }\n    public static inline\n    function distance(  px: Float, py: Float, qx: Float, qy: Float ): Float {\n        var x = px - qx;\n        var y = py - qy;\n        return Math.sqrt( x*x + y*y );\n    }\n}","package trilateral.path;\nimport trilateral.tri.TrilateralArray;\nimport trilateral.geom.Contour;\nclass FillOnly extends Base {\n    public function new( ?contour_: Contour, ?trilateralArray_: TrilateralArray, ?endLine_: EndLineCurve ){\n        super( contour_, trilateralArray_, endLine_ );\n    }\n    override inline\n    function line( x_: Float, y_: Float ){\n    }\n}","package trilateral.path;\nimport trilateral.tri.TrilateralArray;\nimport trilateral.geom.Contour;\nclass RoundEnd extends Base {\n    public function new( ?contour_: Contour, ?trilateralArray_: TrilateralArray ){\n        super( contour_, trilateralArray_ );\n    }\n    override inline\n    function line( x_: Float, y_: Float ){\n        // lineTrace( x_, y_ );\n        // less than ideal as triangles overlap lots, Fine needs tweaking.\n        contour.line( x, y, x_, y_, width, both );\n    }\n}","package trilateral.tri;\nimport trilateral.geom.Algebra;\n// Triangle coordinates without color.\nclass Trilateral {\n    public var windingAdjusted: Bool;\n    // used to allow trilaterals to be marked for alternate coloring when debugging, normally for colouring use Triangle!\n    public var mark: Int = 0; \n    public var ax: Float;\n    public var bx: Float;\n    public var cx: Float;\n    public var ay: Float;\n    public var by: Float;\n    public var cy: Float;\n    public var x( get, set ): Float;\n    function get_x() {\n        return Math.min( Math.min( ax, bx ), cx );\n    }\n    function set_x( x: Float ): Float {\n        var dx = x - get_x();\n        ax = ax + dx;\n        bx = bx + dx;\n        cx = cx + dx;\n        return x;\n    }\n    public var y( get, set ): Float;   \n    function get_y(): Float {\n        return Math.min( Math.min( ay, by ), cy );\n    }\n    function set_y( y: Float ): Float {\n        var dy = y - get_y();\n        ay = ay + dy;\n        by = by + dy;\n        cy = cy + dy;\n        return y;\n    }\n    public var right( get, never ): Float;\n    public function get_right(): Float {\n        return Math.max( Math.max( ax, bx ), cx );\n    }\n    public var bottom( get, never ): Float;\n    public function get_bottom(): Float {\n        return Math.max( Math.max( ay, by ), cy );\n    }\n    function moveDelta( dx: Float, dy: Float ){\n        ax += dx;\n        ay += dy;\n        bx += dx;\n        by += dy;\n        cx += dx;\n        cy += dy;\n    }\n    public function new( ax_: Float, ay_: Float, bx_: Float, by_: Float, cx_: Float, cy_: Float, ?mark_: Int = 0 ){\n        ax = ax_;\n        ay = ay_;\n        bx = bx_;\n        by = by_;\n        cx = cx_;\n        cy = cy_;\n        windingAdjusted = adjustWinding();\n        if( windingAdjusted ){\n            ax = ax_;\n            ay = ay_;\n            bx = cx_;\n            by = cy_;\n            cx = bx_;\n            cy = by_;\n        }\n        mark = mark_;\n    }\n    // no bounds checking\n    public inline function liteHit( px: Float, py: Float ): Bool {\n        var planeAB = ( ax - px )*( by - py ) - ( bx - px )*( ay - py );\n        var planeBC = ( bx - px )*( cy - py ) - ( cx - px )*( by - py );\n        var planeCA = ( cx - px )*( ay - py ) - ( ax - px )*( cy - py );\n        return Algebra.sign( planeAB ) == Algebra.sign( planeBC ) && Algebra.sign( planeBC ) == Algebra.sign( planeCA );\n    }\n    //http://www.emanueleferonato.com/2012/06/18/algorithm-to-determine-if-a-point-is-inside-a-triangle-with-mathematics-no-hit-test-involved/\n    public function fullHit( px: Float, py: Float ): Bool {\n        if( px > x && px < right && py > y && py < bottom ) return true;\n        return liteHit( px, py );\n    }\n    public function adjustWinding():Bool { // check sign\n        return ( (ax * by - bx * ay) + (bx * cy - cx * by) + (cx * ay - ax * cy) )>0;\n    }\n    public inline \n    function rotate( x: Float, y: Float, theta: Float ){\n        var cos = Math.cos( theta );\n        var sin = Math.sin( theta );\n        rotateTrig( x, y, cos, sin );\n    }\n    public inline \n    function rotateTrig( x: Float, y: Float, cos: Float, sin: Float ){\n        ax -= x;\n        ay -= y;\n        bx -= x;\n        by -= y;\n        cx -= x;\n        cy -= y;\n        var dx: Float;\n        var dy: Float;\n        dx  = ax;\n        dy  = ay;\n        ax  = dx * cos - dy * sin;\n        ay  = dx * sin + dy * cos; \n        dx  = bx;\n        dy  = by;\n        bx  = dx * cos - dy * sin;\n        by  = dx * sin + dy * cos; \n        dx  = cx;\n        dy  = cy;\n        cx  = dx * cos - dy * sin;\n        cy  = dx * sin + dy * cos;\n        ax += x;\n        ay += y;\n        bx += x;\n        by += y;\n        cx += x;\n        cy += y;\n    }\n}","package trilateral.tri;\nimport trilateral.geom.Point;\nimport trilateral.tri.Trilateral;\nclass Triangle extends Trilateral {\n    public var id: Int;\n    public var colorID: Int;\n    public var colorA: Int;\n    public var colorB: Int;\n    public var colorC: Int;\n    public var depth: Float;\n    public var alpha: Float;\n    public function new(  id_: Int\n                        , A: Point, B: Point, C: Point\n                        , depth_: Float\n                        , colorID_: Int\n                        ){\n        id = id_;\n        super( A.x, A.y, B.x, B.y, C.x, C.y );\n        depth = depth_;\n        alpha = 1.;\n        colorID = colorID_;\n        colorA = colorID_;\n        colorB = colorID_;\n        colorC = colorID_;\n    }\n    // allows creation from a trialateral so you can create shapes use and color them later.\n    public static inline\n    function fromTrilateral( id_: Int, tri: Trilateral, depth_: Float, colorID_: Int ): Triangle {\n        var t: Triangle = Type.createEmptyInstance( Triangle );\n        t.id = id_;\n        t.ax = tri.ax;\n        t.ay = tri.ay;\n        t.bx = tri.bx;\n        t.by = tri.by;\n        t.cx = tri.cx;\n        t.cy = tri.cy;\n        t.mark = tri.mark;\n        t.depth = depth_;\n        t.alpha = 1.;\n        t.colorID = colorID_;\n        t.colorA = colorID_;\n        t.colorB = colorID_;\n        t.colorC = colorID_;\n        t.windingAdjusted = tri.windingAdjusted;\n        return t;\n    }\n    public function hitTest( P: Point ): Bool {\n        return fullHit( P.x, P.y );\n    }\n    // draws Triangle with horizontal strips 1px high.\n    public function drawStrips( drawRect: Float->Float->Float->Float->Void ){\n        var xi: Int         = Math.floor( x );\n        var yi: Int         = Math.floor( y );\n        var righti: Int     = Math.ceil( right );\n        var bottomi: Int    = Math.ceil( bottom );\n        var sx: Int = 0;\n        var ex: Int = 0;\n        var sFound: Bool;\n        var eFound: Bool;\n        // need to adjust for negative values thought required.\n        for( y0 in yi...bottomi ){ // loop vertically\n            sFound = false; // could remove if swapped floor and ceil on boundaries?\n            eFound = false; // not needed perhaps just for safety at mo.\n            for( x0 in xi...righti ){\n                if( liteHit( x0, y0 ) ) { // start strip\n                    sx = x0;\n                    sFound = true;\n                    break;\n                }\n            }\n            if( sFound ){\n                for( x0 in sx...righti ){ // end strip\n                    if( !liteHit( x0, y0 ) ){\n                        ex = x0;\n                        eFound = true;\n                        break;\n                    }\n                }\n                if( eFound ) drawRect( sx, y0, ex - sx, 1 );\n            }\n        }\n    }\n}","package zip;\r\n\r\nimport haxe.io.BufferInput;\r\nimport haxe.io.Bytes;\r\nimport haxe.io.BytesInput;\r\nimport haxe.zip.Compress;\r\nimport haxe.zip.InflateImpl;\r\nimport no.logic.kha.uix.UIX;\r\n\r\nimport zip.ZipEntry;\r\n\r\n#if lime\r\n#if (lime >= \"7.0.0\")\r\nimport lime._internal.format.Deflate;\r\n#else\r\nimport lime.utils.compress.Deflate;\r\n#end\r\n#end\r\n\r\n/**\r\n * Taken from the haxe.zip.Reader class\r\n *\r\n * Some small modification includes the ability to get Entry without reading the bytes\r\n * Usefull when you don't want to necessarily have access to each items right away\r\n */\r\nclass Zip\r\n{\r\n\r\n  public static var buf:BufferInput;\r\n  public static var tmp:Bytes;\r\n  \r\n  // No need to instantiate\r\n  private function new() { }\r\n  \r\n  // Get Bytes out of a Zip Entry\r\n  public static function getBytes( f:ZipEntry )\r\n  {\r\n    if ( f.data == null )\r\n    {\r\n      f.input.position = f.position;\r\n\r\n      if ( f.compressed )\r\n      {\r\n        return uncompress(f);\r\n      }\r\n      else\r\n      {\r\n        // Don't save, assume we're gonna cache that value (maybe let the user decide on this...)\r\n        //f.data = f.input.read(f.dataSize);\r\n\r\n        return f.input.read(f.dataSize);\r\n      }\r\n    }\r\n\r\n    return f.data;\r\n  }\r\n\r\n  // Get a string out of a Zip Enry\r\n  public static function getString( f:ZipEntry ):String\r\n  {\r\n    if ( f.data == null )\r\n    {\r\n      f.input.position = f.position;\r\n\r\n      if ( f.compressed )\r\n      {\r\n        return uncompress(f).toString();\r\n      }\r\n      else\r\n      {\r\n        // Shortcut for uncompressed\r\n        return f.input.readString(f.dataSize);\r\n      }\r\n    }\r\n    else\r\n    {\r\n      return f.data.toString();\r\n    }\r\n  }\r\n\r\n  public static inline function rawCompress(bytes:Bytes)\r\n  {\r\n\t#if kha_krom\r\n    var deflateStream = DeflateStream.create(NORMAL);\r\n    deflateStream.write(new BytesInput(bytes));\r\n    \r\n    return deflateStream.finalize();\t\r\n    #elseif js\r\n    // Haxe Deflate is currently unoptimized, use pako instead,\r\n    // didn't want 3rd party library but it works very well so...\r\n    var data = untyped __js__(\"pako.deflateRaw\")(bytes.getData());\r\n    return Bytes.ofData(data);\r\n\r\n    #elseif lime\r\n    return Deflate.compress(bytes);\r\n    \r\n    #elseif (cpp || neko)\r\n    // Is this better than OpenFL CFFI ??? \r\n    // Did not test it but I would assume it's not since OpenFL don't use it...\r\n    var data = Compress.run(bytes, 9);\r\n    return data.sub(2,data.length-6);\r\n    \r\n    #elseif flash\r\n    // Flash Native, maybe DeflateStream using Memory the proper way \r\n    // like it was before I change it to make it cross platform would be?\r\n    var data = bytes.getData();\r\n    data.deflate();\r\n    return Bytes.ofData(data);\r\n    \r\n    #else\r\n    // Pure Haxe, should work everywhere else (VERY UNOPTIMIZED!!!)\r\n    // But allow for step by step compression, could be nice for extremely huge file?\r\n    var deflateStream = DeflateStream.create(NORMAL);\r\n    deflateStream.write(new BytesInput(bytes));\r\n    \r\n    return deflateStream.finalize();\r\n    #end\r\n  }\r\n\r\n  // Compress used in PNG\r\n  public static inline function compress(bytes:Bytes)\r\n  {\r\n    #if js\r\n    // Haxe Deflate is currently unoptimized, use pako instead,\r\n    // didn't want 3rd party library but it works very well so...\r\n    var data = untyped __js__(\"pako.deflate\")(bytes.getData(), {level: 9});\r\n    return Bytes.ofData(data);\r\n\r\n    #elseif openfl\r\n\r\n    return format.tools.Deflate.run(bytes);\r\n    #else\r\n\r\n    return rawCompress(bytes);\r\n    #end\r\n  }\r\n  \r\n  // Get uncompressed bytes\r\n  public static inline function uncompress( f:ZipEntry )\r\n  {\r\n\t#if kha_krom\r\n\treturn rawUncompress_haxe(f.input);\r\n    #elseif (lime || js || flash)\r\n    var b = f.input.read(f.dataSize);\r\n    return rawUncompress(b);\r\n    \r\n    #elseif (cpp || neko)\r\n    var b = f.input.read(f.dataSize);\r\n    var c = new haxe.zip.Uncompress(-15);\r\n    var s = haxe.io.Bytes.alloc(f.fileSize);\r\n    var r = c.execute(b,0,s,0);\r\n    c.close();\r\n    if ( !r.done || r.read != b.length || r.write != f.fileSize )\r\n      throw \"Invalid compressed data for \"+f.fileName;\r\n    return s;\r\n    \r\n    #else\r\n    \r\n    return rawUncompress_haxe(f.input);\r\n    #end\r\n  }\r\n\r\n  public static inline function rawUncompress(bytes:Bytes):Bytes\r\n  {\r\n    #if lime\r\n    return Deflate.decompress(bytes);\r\n    \r\n    #elseif flash\r\n    var data = bytes.getData();\r\n    data.inflate();\r\n    return Bytes.ofData(data);\r\n    \r\n    #elseif js\r\n    return rawUncompress_haxe(new BytesInput(bytes));\r\n    \r\n    #else\r\n    return rawUncompress_haxe(new BytesInput(bytes));\r\n    #end\r\n  }\r\n  \r\n  // Haxe implementation of inflate, nice fallback but doesn't seems as fast as native function...\r\n  public static inline function rawUncompress_haxe(input:BytesInput):Bytes\r\n  {\r\n    var p = input.position;\r\n    \r\n    var bufSize = 65536;\r\n    if ( tmp == null )\r\n      tmp = haxe.io.Bytes.alloc(bufSize);\r\n    var out = new haxe.io.BytesBuffer();\r\n    var z = new InflateImpl(input, false, false);\r\n    while ( true )\r\n    {\r\n      var n = z.readBytes(tmp, 0, bufSize);\r\n      out.addBytes(tmp, 0, n);\r\n      if ( n < bufSize )\r\n        break;\r\n    }\r\n    \r\n    input.position = p;\r\n    \r\n    return out.getBytes();\r\n  }\r\n  \r\n  // Clean zip entry\r\n  public static function cleanZip( f:ZipEntry )\r\n  {\r\n    f.data = null;\r\n    f.fileName = null;\r\n    f.fileTime = null;\r\n    f.input = null;\r\n    f.extraFields = null;\r\n  }\r\n  \r\n  // Clean\r\n  public static function clean()\r\n  {\r\n    buf = null;\r\n    tmp = null;\r\n  }\r\n}","package zip;\r\n\r\nimport haxe.ds.StringMap;\r\nimport haxe.io.BufferInput;\r\nimport haxe.io.Bytes;\r\nimport haxe.io.BytesInput;\r\nimport haxe.zip.InflateImpl;\r\nimport haxe.zip.Reader;\r\n\r\nimport zip.ZipEntry;\r\n\r\nusing StringTools;\r\n\r\n/**\r\n * Read a Zip File\r\n */\r\nclass ZipReader extends Reader\r\n{\r\n  public var bytes:Bytes;\r\n  public var input:BytesInput;\r\n\r\n  public static inline function getEntries(bytes:Bytes) {\r\n    var entries = new StringMap<ZipEntry>();\r\n    var zip = new ZipReader(bytes);\r\n    var entry:ZipEntry;\r\n\r\n    while ( (entry = zip.getNextEntry()) != null )\r\n    {\r\n      entries.set(entry.fileName, entry);\r\n    }\r\n\r\n    return entries;\r\n  }\r\n\r\n  public function new(bytes:Bytes) \r\n  {\r\n    try {\r\n      this.input = new BytesInput(bytes);\r\n      this.bytes = bytes;\r\n    } catch(e:Dynamic) {\r\n      bytes = Bytes.alloc(128);\r\n      this.input = new BytesInput(bytes);\r\n      this.bytes = bytes;\r\n    }\r\n\r\n    super(this.input);\r\n  }\r\n  \r\n  // Clean ZIP\r\n  public function clean()\r\n  {\r\n    i = null;\r\n    bytes = null;\r\n    input = null;\r\n  }\r\n  \r\n  // Get percent\r\n  public function progress()\r\n  {\r\n    return input.position / input.length;\r\n  }\r\n  \r\n  // Extra Fields\r\n  function readExtra(length)\r\n  {\r\n    var fields = new List();\r\n    while ( length > 0 )\r\n    {\r\n      if ( length < 4 ) throw \"Invalid extra fields data\";\r\n      var tag = i.readUInt16();\r\n      var len = i.readUInt16();\r\n      if ( length < len ) throw \"Invalid extra fields data\";\r\n      switch ( tag )\r\n      {\r\n        case 0x7075:\r\n          var version = i.readByte();\r\n          if ( version != 1 )\r\n          {\r\n            var data = new haxe.io.BytesBuffer();\r\n            data.addByte(version);\r\n            data.add(i.read(len-1));\r\n            fields.add(FUnknown(tag,data.getBytes()));\r\n          }\r\n          else\r\n          {\r\n            var crc = i.readInt32();\r\n            var name = i.read(len - 5).toString();\r\n            fields.add(FInfoZipUnicodePath(name,crc));\r\n          }\r\n        default:\r\n          fields.add(FUnknown(tag,i.read(len)));\r\n      }\r\n      length -= 4 + len;\r\n    }\r\n    return fields;\r\n  }\r\n  \r\n  // Did some minor edit to allow reading the zip sequentially\r\n  public function getNextEntry():ZipEntry\r\n  {\r\n    var i = this.input;\r\n    var h = i.readInt32();\r\n    if ( h == 0x02014B50 || h == 0x06054B50 )\r\n      return null;\r\n    if ( h != 0x04034B50 )\r\n      throw \"Invalid Zip Data\";\r\n    var version = i.readUInt16();\r\n    var flags = i.readUInt16();\r\n    var utf8 = flags & 0x800 != 0;\r\n    if ( (flags & 0xF7F1) != 0 )\r\n      throw \"Unsupported flags \"+flags;\r\n    var compression = i.readUInt16();\r\n    var compressed = (compression != 0);\r\n    if ( compressed && compression != 8 )\r\n      throw \"Unsupported compression \"+compression;\r\n    var mtime = readZipDate();\r\n    var crc32 : Null<Int> = i.readInt32();\r\n    var csize = i.readInt32();\r\n    var usize = i.readInt32();\r\n    var fnamelen = i.readInt16();\r\n    var elen = i.readInt16();\r\n    var fname = i.readString(fnamelen);\r\n    var fields = readExtra(elen);\r\n    if ( utf8 )\r\n      fields.push(FUtf8);\r\n    var data = null;\r\n    // we have a data descriptor that store the real crc/sizes\r\n    // after the compressed data, let's wait for it\r\n    if ( (flags & 8) != 0 )\r\n      crc32 = null;\r\n\r\n    var e:ZipEntry = {\r\n      fileName : fname,\r\n      fileSize : usize,\r\n      fileTime : mtime,\r\n      input : i,\r\n      bytes : bytes,\r\n      position : i.position,\r\n      compressed : compressed,\r\n      dataSize : csize,\r\n      data : data,\r\n      crc32 : crc32,\r\n      extraFields : fields,\r\n    };\r\n\r\n    // Data is null, but we need to move position\r\n    // Or if crc32 is null, then read data\r\n    if ( e.crc32 == null )\r\n    {\r\n      trace(\"CRC32 is NULL, this is not optimal, just saying...\");\r\n      \r\n      if ( e.compressed )\r\n      {\r\n        #if neko\r\n        #if true\r\n        trace('Currently broken?');\r\n        #else\r\n        // enter progressive mode : we use a different input which has\r\n        // a temporary buffer, this is necessary since we have to uncompress\r\n        // progressively, and after that we might have pending read data\r\n        // that needs to be processed\r\n        var bufSize = 65536;\r\n        if ( buf == null )\r\n        {\r\n          buf = new haxe.io.BufferInput(i, haxe.io.Bytes.alloc(bufSize));\r\n          tmp = haxe.io.Bytes.alloc(bufSize);\r\n          i = buf;\r\n        }\r\n        var out = new haxe.io.BytesBuffer();\r\n        var z = new neko.zip.Uncompress(-15);\r\n        z.setFlushMode(neko.zip.Flush.SYNC);\r\n        while ( true )\r\n        {\r\n          if ( buf.available == 0 )\r\n            buf.refill();\r\n          var p = bufSize - buf.available;\r\n          if ( p != buf.pos )\r\n          {\r\n            // because of lack of \"srcLen\" in zip api, we need to always be stuck to the buffer end\r\n            buf.buf.blit(p, buf.buf, buf.pos, buf.available);\r\n            buf.pos = p;\r\n          }\r\n          var r = z.execute(buf.buf, buf.pos, tmp, 0);\r\n          out.addBytes(tmp, 0, r.write);\r\n          buf.pos += r.read;\r\n          buf.available -= r.read;\r\n          if ( r.done ) break;\r\n        }\r\n        e.data = out.getBytes();\r\n        #end\r\n        #else\r\n        e.data = Zip.rawUncompress_haxe(i);\r\n        #end\r\n\r\n        // This is the only case where we do read the data anyway...\r\n        // Why would the crc32 be null?\r\n        //trace(\"crc32 is null and compressed!\");\r\n      }\r\n      else\r\n      {\r\n        //trace(\"crc32 is null but uncompressed!\");\r\n        // Keep data null, skip position\r\n        i.position += e.dataSize;\r\n        //e.data = i.read(e.dataSize);\r\n      }\r\n\r\n      e.crc32 = i.readInt32();\r\n      if ( e.crc32 == 0x08074b50 )\r\n        e.crc32 = i.readInt32();\r\n      e.dataSize = i.readInt32();\r\n      e.fileSize = i.readInt32();\r\n      // set data to uncompressed\r\n      e.dataSize = e.fileSize;\r\n      e.compressed = false;\r\n    }\r\n    else\r\n    {\r\n      //trace(\"crc32 is not null!\");\r\n      // Keep data null, skip position\r\n      i.position += e.dataSize;\r\n    }\r\n\r\n    // Skip Folder\r\n    if ( e.fileName.endsWith(\"/\") )\r\n    {\r\n      return getNextEntry();\r\n    }\r\n    \r\n    return e;\r\n  }\r\n}","/*\r\n * Copyright (C)2005-2019 Haxe Foundation\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a\r\n * copy of this software and associated documentation files (the \"Software\"),\r\n * to deal in the Software without restriction, including without limitation\r\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\r\n * and/or sell copies of the Software, and to permit persons to whom the\r\n * Software is furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\r\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\r\n * DEALINGS IN THE SOFTWARE.\r\n */\r\n// Can't enable @:coreApi because some fields are now inline getters\r\n// @:coreApi\r\n@:keepInit\r\nextern class Math {\r\n\tstatic var PI(default, null):Float;\r\n\r\n\tstatic var NEGATIVE_INFINITY(get, null):Float;\r\n\t@:pure private static inline function get_NEGATIVE_INFINITY():Float {\r\n\t\treturn -(untyped __js__(\"Infinity\"));\r\n\t}\r\n\r\n\tstatic var POSITIVE_INFINITY(get, null):Float;\r\n\t@:pure private static inline function get_POSITIVE_INFINITY():Float {\r\n\t\treturn (untyped __js__(\"Infinity\"));\r\n\t}\r\n\r\n\tstatic var NaN(get, null):Float;\r\n\t@:pure private static inline function get_NaN():Float {\r\n\t\treturn (untyped __js__(\"NaN\"));\r\n\t}\r\n\r\n\t@:pure static function abs(v:Float):Float;\r\n\t@:pure static function acos(v:Float):Float;\r\n\t@:pure static function asin(v:Float):Float;\r\n\t@:pure static function atan(v:Float):Float;\r\n\t@:pure static function atan2(y:Float, x:Float):Float;\r\n\t@:pure static function ceil(v:Float):Int;\r\n\t@:pure static function cos(v:Float):Float;\r\n\t@:pure static function exp(v:Float):Float;\r\n\t@:pure static function floor(v:Float):Int;\r\n\t@:pure static function log(v:Float):Float;\r\n\t@:pure static function max(a:Float, b:Float):Float;\r\n\t@:pure static function min(a:Float, b:Float):Float;\r\n\t@:pure static function pow(v:Float, exp:Float):Float;\r\n\tstatic function random():Float;\r\n\t@:pure static function round(v:Float):Int;\r\n\t@:pure static function sin(v:Float):Float;\r\n\t@:pure static function sqrt(v:Float):Float;\r\n\t@:pure static function tan(v:Float):Float;\r\n\r\n\t@:pure static inline function ffloor(v:Float):Float {\r\n\t\treturn floor(v);\r\n\t}\r\n\r\n\t@:pure static inline function fceil(v:Float):Float {\r\n\t\treturn ceil(v);\r\n\t}\r\n\r\n\t@:pure static inline function fround(v:Float):Float {\r\n\t\treturn round(v);\r\n\t}\r\n\r\n\t@:pure static inline function isFinite(f:Float):Bool {\r\n\t\treturn (untyped __js__(\"isFinite\"))(f);\r\n\t}\r\n\r\n\t@:pure static inline function isNaN(f:Float):Bool {\r\n\t\treturn (untyped __js__(\"isNaN\"))(f);\r\n\t}\r\n\r\n\tstatic function __init__():Void {\r\n\t\tuntyped __feature__(\"Type.resolveClass\", $hxClasses[\"Math\"] = Math);\r\n\t}\r\n}\r\n","/*\r\n * Copyright (C)2005-2019 Haxe Foundation\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a\r\n * copy of this software and associated documentation files (the \"Software\"),\r\n * to deal in the Software without restriction, including without limitation\r\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\r\n * and/or sell copies of the Software, and to permit persons to whom the\r\n * Software is furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\r\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\r\n * DEALINGS IN THE SOFTWARE.\r\n */\r\n@:coreApi extern class String {\r\n\tvar length(default, null):Int;\r\n\r\n\t@:pure function new(string:String):Void;\r\n\t@:pure function toUpperCase():String;\r\n\t@:pure function toLowerCase():String;\r\n\t@:pure function charAt(index:Int):String;\r\n\t@:pure function indexOf(str:String, ?startIndex:Int):Int;\r\n\t@:pure function lastIndexOf(str:String, ?startIndex:Int):Int;\r\n\t@:pure function split(delimiter:String):Array<String>;\r\n\t@:pure function toString():String;\r\n\t@:pure function substring(startIndex:Int, ?endIndex:Int):String;\r\n\r\n\t@:pure inline function charCodeAt(index:Int):Null<Int> {\r\n\t\treturn @:privateAccess HxOverrides.cca(this, index);\r\n\t}\r\n\r\n\t@:pure inline function substr(pos:Int, ?len:Int):String {\r\n\t\treturn @:privateAccess HxOverrides.substr(this, pos, len);\r\n\t}\r\n\r\n\t@:pure static inline function fromCharCode(code:Int):String {\r\n\t\treturn untyped __define_feature__('String.fromCharCode', js.Syntax.code(\"String.fromCodePoint({0})\", code));\r\n\t}\r\n\r\n\tstatic function __init__():Void {\r\n\t\tuntyped __feature__('String.fromCharCode',\r\n\t\t\tjs.Syntax.code(\"if( String.fromCodePoint == null ) String.fromCodePoint = function(c) { return c < 0x10000 ? String.fromCharCode(c) : String.fromCharCode((c>>10)+0xD7C0)+String.fromCharCode((c&0x3FF)+0xDC00); }\"));\r\n\t}\r\n}\r\n","package no.logic.kha.uix.assets;\r\n\r\nimport no.logic.kha.uix.types.Object;\r\nimport no.logic.kha.uix.utils.FontUtils;\r\n\r\nclass EmbeddedAssets\r\n{\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\t\r\n\tpublic static var fonts : Object =\r\n\t{\r\n\t\t\"cft\" \t\t\t: FontUtils.fontFromBase64(\"AAEAAAAMAIAAAwBAT1MvMm2BuDYAAAFIAAAAYFZETVhWE12bAACyDAAABeBjbWFw4g0n/wAABZgAAAQYZ2FzcAAXAAkAALH8AAAAEGdseWbBGO55AAAJsAAAm8hoZWFk4/jrbAAAAMwAAAA2aGhlYQoCA30AAAEEAAAAJGhtdHhyAK4AAAABqAAAA/Bsb2NhPtsXIgAApXgAAAH6bWF4cAEbAHkAAAEoAAAAIG5hbWXs3RrCAACndAAABPZwb3N0OBp1oAAArGwAAAWNAAEAAAABAACQdeAsXw889QALCAAAAAAAwKy81QAAAADArOYfAAD/AAOABIAAAAADAAIAAAAAAAAAAQAABQD/AAGAA4AAAAAAA4AAAQAAAAAAAAAAAAAAAAAAAPwAAQAAAPwAeAAeAAAAAAABAAAAAAAAAAAAAAAAAAAAAAACA4ABkAAFAAACvAKKAAAAjwK8AooAAAHFAIACAAAAAgsFCQAAAAIABAAAAAMAAAAAAAAAAAAAAABBTFRTAEAAACEiBAD/AAGABQACgAAAAAFAAAAAAwAEAAAAACAAAAOAAAADgAEAA4ABgAOAAAADgACAA4AAgAOAAIADgACAA4AAgAOAAYADgAEAA4ABAAOAAIADgACAA4ABAAOAAIADgAGAA4ABAAOAAIADgACAA4AAgAOAAIADgACAA4AAgAOAAIADgACAA4AAgAOAAIADgAGAA4ABAAOAAQADgACAA4ABAAOAAIADgACAA4AAgAOAAIADgACAA4AAgAOAAIADgACAA4AAgAOAAIADgAEAA4AAgAOAAIADgACAA4AAgAOAAIADgACAA4AAgAOAAIADgACAA4AAgAOAAIADgACAA4AAgAOAAIADgACAA4AAgAOAAIADgAEAA4ABAAOAAQADgACAA4AAgAOAAQADgACAA4AAgAOAAIADgACAA4AAgAOAAIADgACAA4AAgAOAAQADgACAA4AAgAOAAQADgACAA4AAgAOAAIADgACAA4AAgAOAAIADgACAA4AAgAOAAIADgACAA4AAgAOAAIADgACAA4AAgAOAAIADgAGAA4AAgAOAAIADgACAA4ABgAOAAQADgACAA4AAgAOAAIADgACAA4ABAAOAAIADgACAA4ABAAOAAIADgACAA4ABgAOAAYADgACAA4AAgAOAAQADgAEAA4AAgAOAAIADgACAA4AAgAOAAQADgACAA4ABAAOAAIADgAGAA4AAgAOAAIADgACAA4AAgAOAAYADgAEAA4ABAAOAAIADgAEAA4AAgAOAAIADgAEAA4AAgAOAAIADgAEAA4AAgAOAAQADgAEAA4ABAAOAAIADgACAA4ABgAOAAYADgAEAA4ABAAOAAIADgACAA4AAgAOAAIADgACAA4AAgAOAAIADgACAA4AAgAOAAIADgACAA4AAgAOAAIADgACAA4AAgAOAAIADgACAA4ABAAOAAQADgAEAA4ABAAOAAIADgACAA4AAgAOAAIADgACAA4AAgAOAAIADgACAA4AAAAOAAIADgACAA4AAgAOAAIADgACAA4ABAAOAAIADgACAA4AAgAOAAIADgACAA4AAgAOAAIADgACAA4ABAAOAAIADgACAA4AAgAOAAIADgAEAA4ABAAOAAQADgAEAA4AAgAOAAIADgACAA4AAgAOAAIADgACAA4AAgAOAAIADgACAA4AAgAOAAIADgACAA4AAgAOAAIADgACAA4AAgAOAAQADgAEAA4ABAAOAAQADgAEAA4ABAAOAAQADgAEAA4ABAAOAAQADgAEAA4ABAAOAAQADgAEAA4ABAAOAAQADgAEAA4ABAAOAAQADgAEAA4ABAAOAAQADgAEAA4ABAAOAAQADgAEAA4ABAAOAAQADgAEAA4ABAAOAAQADgAEAA4ABAAAAAAMAAAADAAADHAABAAAAAAAcAAMAAQAAAiAABgIEAAAAAAD9AAEAAAAAAN0A3gDfAOAA4QDiAOMA5ADlAOYA5wDoAOkA6gDrAOwA7QDuAO8A8ADxAPIA8wD0APUA9gD3APgA+QADAAIABAAFAAYABwAIAAkACgALAAwADQAOAA8AEAARABIAEwAUABUAFgAXABgAGQAaABsAHAAdAB4AHwAgACEAIgAjACQAJQAmACcAKAApACoAKwAsAC0ALgAvADAAMQAyADMANAA1ADYANwA4ADkAOgA7ADwAPQA+AD8AQABBAEIAQwBEAEUARgBHAEgASQBKAEsATABNAE4ATwBQAFEAUgBTAFQAVQBWAFcAWABZAFoAWwBcAF0AXgBfAGAAAACfAKAAogCkAKwAsQC3ALwAuwC9AL8AvgDAAMIAxADDAMUAxgDIAMcAyQDKAMwAzgDNAM8A0QDQANUA1ADWANcAZgCLAH0AfgCCAHIAkQC6AIkAhAB2AI8AgwAAAKEAswAAAIwAAAAAAIAAkAAAAAAAAAAAAAAAhQCVAAAAwQDTAJoAfACHAAAAYwAAAAAAhgCWAGUA+wCbAJ4AsABsAHkAcwB0AHAAcQBuAG8A0gAAANoAewAAAH8AawB4AAAAAABnAJIAYgBkAGkAnQClAJwApgCjAKgAqQCqAKcArgCvAAAArQC1ALYAtAAAAGgAdQCKAAAAAAAAAJMABAD8AAAAMAAgAAQAEAAAAB8AIQB+AH8AoAD/AVMBYQF4AX4BkgLGAtwgFCAaIB4gIiAmIDAgOiCsISL//wAAAAAAAQAgACIAfwCgAKEBUgFgAXgBfQGSAsYC3CATIBggHCAgICYgMCA5IKwhIv//AAAA2gAA/+IAAAAA/9sAAAAA/wMAAP7R/aL9meBgAAAAAAAA4D/gOQAA37XfVAABADAAAAAuAAAALgAuAAAALAAuAAAALgAAAAAAAAAAACgALAAwAAAAAAAwAAAAAAAAAAEAAwACAPoA+wBsAHkAagB3AG0AegBuAG8AYgBwAHEAZABmAGcAcgBrAHgABAD8AAAAMAAgAAQAEAAAAB8AIQB+AH8AoAD/AVMBYQF4AX4BkgLGAtwgFCAaIB4gIiAmIDAgOiCsISL//wAAAAAAAQAgACIAfwCgAKEBUgFgAXgBfQGSAsYC3CATIBggHCAgICYgMCA5IKwhIv//AAAA2gAA/+IAAAAA/9sAAAAA/wMAAP7R/aL9meBgAAAAAAAA4D/gOQAA37XfVAABADAAAAAuAAAALgAuAAAALAAuAAAALgAAAAAAAAAAACgALAAwAAAAAAAwAAAAAAAAAAEAAwACAPoA+wBsAHkAagB3AG0AegBuAG8AYgBwAHEAZABmAGcAcgBrAHgADAEAAAACgAOAAAMABwALAA8AEwAXABsAHwAjACcAKwAvAAABNTMVMTUzFTE1MxUBNTMVMTUzFTE1MxUBNTMVMTUzFTE1MxUBNTMVMTUzFTE1MxUBAICAgP6AgICA/oCAgID+gICAgAMAgICAgICA/wCAgICAgID/AICAgICAgP8AgICAgICAAAoBgP+AAoAEAAADAAcACwAPABMAFwAbAB8AIwAnAAABNTMVBzUzFQc1MxUHNTMVBzUzFQc1MxUDNTMVMTUzFQU1MxUxNTMVAYCAgICAgICAgICAgICAgP8AgIADgICAgICAgICAgICAgICAgICA/wCAgICAgICAgIAAAAAMAIADAAMABIAAAwAHAAsADwATABcAGwAfACMAJwArAC8AABM1MxUxNTMVMzUzFTE1MxUFNTMVMTUzFTM1MxUxNTMVBTUzFTE1MxUzNTMVMTUzFYCAgICAgP2AgICAgID9gICAgICABACAgICAgICAgICAgICAgICAgICAgICAgICAgAAaAID/gAOABAAAAwAHAAsADwATABcAGwAfACMAJwArAC8AMwA3ADsAPwBDAEcASwBPAFMAVwBbAF8AYwBnAAABNTMVITUzFQU1MxUhNTMVBTUzFTE1MxUxNTMVMTUzFTE1MxUxNTMVBTUzFSE1MxUFNTMVITUzFQU1MxUhNTMVBTUzFTE1MxUxNTMVMTUzFTE1MxUxNTMVBTUzFSE1MxUFNTMVITUzFQEAgAEAgP4AgAEAgP2AgICAgICA/YCAAQCA/gCAAQCA/gCAAQCA/YCAgICAgID9gIABAID+AIABAIADgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgAASAID/gAMABIAAAwAHAAsADwATABcAGwAfACMAJwArAC8AMwA3ADsAPwBDAEcAAAE1MxUHNTMVBTUzFTE1MxUxNTMVMTUzFQU1Mx0BNTMVMTUzFTE1Mx0BNTMVBzUzFQU1MxUxNTMVMTUzFTE1MxUFNTMVBzUzFQGAgICA/wCAgICA/YCAgICAgICA/YCAgICA/wCAgIAEAICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgAAAAA4AgAAAA4AEAAADAAcACwAPABMAFwAbAB8AIwAnACsALwAzADcAAAE1MxUFNTMVMzUzFSE1MxUFNTMVITUzFQU1MxUFNTMVBTUzFSE1MxUFNTMVITUzFTM1MxUFNTMVAQCA/wCAgIABAID9gIABAID/AID/AID/AIABAID9gIABAICAgP8AgAOAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAAAAAAFACAAAADgAQAAAMABwALAA8AEwAXABsAHwAjACcAKwAvADMANwA7AD8AQwBHAEsATwAAATUzFTE1MxUFNTMVITUzFQU1MxUhNTMVBTUzFTE1MxUhNTMVBTUzFSE1MxUzNTMVBTUzFSE1MxUFNTMVITUzFTM1MxUFNTMVMTUzFSE1MxUBAICA/oCAAQCA/gCAAQCA/oCAgAEAgP0AgAEAgICA/QCAAYCA/YCAAQCAgID9gICAAQCAA4CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgAAAAAAGAYADAAKABIAAAwAHAAsADwATABcAAAE1MxUxNTMVBTUzFTE1MxUFNTMVMTUzFQGAgID/AICA/wCAgAQAgICAgICAgICAgICAgIAACwEA/wACgASAAAMABwALAA8AEwAXABsAHwAjACcAKwAAATUzFQU1MxUHNTMVBTUzFQc1MxUHNTMVBzUzFQc1Mx0BNTMVBzUzHQE1MxUCAID/AICAgP8AgICAgICAgICAgICAgAQAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAAAAsBAP8AAoAEgAADAAcACwAPABMAFwAbAB8AIwAnACsAAAE1Mx0BNTMVBzUzHQE1MxUHNTMVBzUzFQc1MxUHNTMVBTUzFQc1MxUFNTMVAQCAgICAgICAgICAgICA/wCAgID/AIAEAICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAAAALAIAAgAMAAwAAAwAHAAsADwATABcAGwAfACMAJwArAAABNTMVBTUzFTM1MxUzNTMVBTUzFTE1MxUxNTMVBTUzFTM1MxUzNTMVBTUzFQGAgP6AgICAgID+AICAgP4AgICAgID+gIACgICAgICAgICAgICAgICAgICAgICAgICAgICAAAAJAIAAgAMAAwAAAwAHAAsADwATABcAGwAfACMAAAE1MxUHNTMVBTUzFTE1MxUxNTMVMTUzFTE1MxUFNTMVBzUzFQGAgICA/oCAgICAgP6AgICAAoCAgICAgICAgICAgICAgICAgICAgICAAAAIAQD/AAKAAQAAAwAHAAsADwATABcAGwAfAAAlNTMVMTUzFQU1MxUxNTMVBTUzFTE1MxUFNTMVMTUzFQGAgID/AICA/wCAgP6AgICAgICAgICAgICAgICAgICAgICAgAAFAIABgAMAAgAAAwAHAAsADwATAAATNTMVMTUzFTE1MxUxNTMVMTUzFYCAgICAgAGAgICAgICAgICAgAAEAYAAAAKAAQAAAwAHAAsADwAAJTUzFTE1MxUFNTMVMTUzFQGAgID/AICAgICAgICAgICAgAAAAAgBAAAAAwAEAAADAAcACwAPABMAFwAbAB8AAAE1MxUHNTMVBTUzFQc1MxUFNTMVBzUzFQU1MxUHNTMVAoCAgID/AICAgP8AgICA/wCAgIADgICAgICAgICAgICAgICAgICAgICAgICAAAAAABQAgAAAAwAEAAADAAcACwAPABMAFwAbAB8AIwAnACsALwAzADcAOwA/AEMARwBLAE8AAAE1MxUxNTMVMTUzFQU1MxUhNTMVBTUzFSE1MxUFNTMVMzUzFTM1MxUFNTMVMzUzFTM1MxUFNTMVITUzFQU1MxUhNTMVBTUzFTE1MxUxNTMVAQCAgID+AIABgID9gIABgID9gICAgICA/YCAgICAgP2AgAGAgP2AgAGAgP4AgICAA4CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgAAAAAAOAIAAAAMABAAAAwAHAAsADwATABcAGwAfACMAJwArAC8AMwA3AAABNTMVBTUzFTE1MxUFNTMVMzUzFQc1MxUHNTMVBzUzFQc1MxUFNTMVMTUzFTE1MxUxNTMVMTUzFQGAgP8AgID+gICAgICAgICAgICA/oCAgICAgAOAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAAEQCAAAADAAQAAAMABwALAA8AEwAXABsAHwAjACcAKwAvADMANwA7AD8AQwAAATUzFTE1MxUxNTMVBTUzFSE1MxUHNTMVBzUzFQU1MxUxNTMVMTUzFQU1MxUHNTMVBzUzFTE1MxUxNTMVMTUzFTE1MxUBAICAgP4AgAGAgICAgID+AICAgP4AgICAgICAgICAA4CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgAAPAIAAAAMABAAAAwAHAAsADwATABcAGwAfACMAJwArAC8AMwA3ADsAAAE1MxUxNTMVMTUzFQU1MxUhNTMVBzUzFQU1MxUxNTMdATUzFQc1MxUFNTMVITUzFQU1MxUxNTMVMTUzFQEAgICA/gCAAYCAgID+gICAgICA/YCAAYCA/gCAgIADgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAADgCAAAADAAQAAAMABwALAA8AEwAXABsAHwAjACcAKwAvADMANwAAEzUzFQc1MxUHNTMVITUzFQU1MxUhNTMVBTUzFTE1MxUxNTMVMTUzFTE1MxUFNTMVBzUzFQc1MxWAgICAgIABAID+AIABAID+AICAgICA/wCAgICAgAOAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAAAAASAIAAAAMABAAAAwAHAAsADwATABcAGwAfACMAJwArAC8AMwA3ADsAPwBDAEcAABM1MxUxNTMVMTUzFTE1MxUxNTMVBTUzFQc1MxUHNTMVMTUzFTE1MxUxNTMdATUzFQc1MxUFNTMVITUzFQU1MxUxNTMVMTUzFYCAgICAgP2AgICAgICAgICAgID9gIABgID+AICAgAOAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgAAAEwCAAAADAAQAAAMABwALAA8AEwAXABsAHwAjACcAKwAvADMANwA7AD8AQwBHAEsAAAE1MxUxNTMVMTUzFQU1MxUhNTMVBTUzFQc1MxUxNTMVMTUzFTE1MxUFNTMVITUzFQU1MxUhNTMVBTUzFSE1MxUFNTMVMTUzFTE1MxUBAICAgP4AgAGAgP2AgICAgICA/gCAAYCA/YCAAYCA/YCAAYCA/gCAgIADgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgAAADACAAAADAAQAAAMABwALAA8AEwAXABsAHwAjACcAKwAvAAATNTMVMTUzFTE1MxUxNTMVMTUzFQc1MxUHNTMVBTUzFQc1MxUFNTMVBzUzFQc1MxWAgICAgICAgICA/wCAgID/AICAgICAA4CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAAAATAIAAAAMABAAAAwAHAAsADwATABcAGwAfACMAJwArAC8AMwA3ADsAPwBDAEcASwAAATUzFTE1MxUxNTMVBTUzFSE1MxUFNTMVITUzFQU1MxUxNTMVMTUzFQU1MxUhNTMVBTUzFSE1MxUFNTMVITUzFQU1MxUxNTMVMTUzFQEAgICA/gCAAYCA/YCAAYCA/gCAgID+AIABgID9gIABgID9gIABgID+AICAgAOAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAAAAAEwCAAAADAAQAAAMABwALAA8AEwAXABsAHwAjACcAKwAvADMANwA7AD8AQwBHAEsAAAE1MxUxNTMVMTUzFQU1MxUhNTMVBTUzFSE1MxUFNTMVITUzFQU1MxUxNTMVMTUzFTE1MxUHNTMVBTUzFSE1MxUFNTMVMTUzFTE1MxUBAICAgP4AgAGAgP2AgAGAgP2AgAGAgP4AgICAgICA/YCAAYCA/gCAgIADgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgAAACAGAAIACgAMAAAMABwALAA8AEwAXABsAHwAAATUzFTE1MxUFNTMVMTUzFQE1MxUxNTMVBTUzFTE1MxUBgICA/wCAgP8AgID/AICAAoCAgICAgICAgID/AICAgICAgICAgAAAAAwBAP8AAoACgAADAAcACwAPABMAFwAbAB8AIwAnACsALwAAATUzFTE1MxUFNTMVMTUzFQE1MxUxNTMVBTUzFTE1MxUFNTMVMTUzFQU1MxUxNTMVAYCAgP8AgID/AICA/wCAgP8AgID+gICAAgCAgICAgICAgID/AICAgICAgICAgICAgICAgICAgIAABwEAAAADAAOAAAMABwALAA8AEwAXABsAAAE1MxUFNTMVBTUzFQU1Mx0BNTMdATUzHQE1MxUCgID/AID/AID/AICAgIADAICAgICAgICAgICAgICAgICAgICAAAAKAIABAAMAAoAAAwAHAAsADwATABcAGwAfACMAJwAAEzUzFTE1MxUxNTMVMTUzFTE1MxUBNTMVMTUzFTE1MxUxNTMVMTUzFYCAgICAgP2AgICAgIACAICAgICAgICAgID/AICAgICAgICAgIAAAAAABwEAAAADAAOAAAMABwALAA8AEwAXABsAAAE1Mx0BNTMdATUzHQE1MxUFNTMVBTUzFQU1MxUBAICAgID/AID/AID/AIADAICAgICAgICAgICAgICAgICAgICAAAANAID/gAMABAAAAwAHAAsADwATABcAGwAfACMAJwArAC8AMwAAATUzFTE1MxUxNTMVBTUzFSE1MxUHNTMVBTUzFQU1MxUHNTMVAzUzFTE1MxUFNTMVMTUzFQEAgICA/gCAAYCAgID/AID/AICAgICAgP8AgIADgICAgICAgICAgICAgICAgICAgICAgICA/wCAgICAgICAgIAAAAAeAID/gAOABIAAAwAHAAsADwATABcAGwAfACMAJwArAC8AMwA3ADsAPwBDAEcASwBPAFMAVwBbAF8AYwBnAGsAbwBzAHcAAAE1MxUxNTMVMTUzFTE1MxUFNTMVITUzFQU1MxUhNTMVBTUzFTM1MxUxNTMVMzUzFQU1MxUzNTMVMTUzFTM1MxUFNTMVMzUzFTE1MxUzNTMVBTUzFTM1MxUxNTMVMTUzFQU1MxUHNTMdATUzFTE1MxUxNTMVMTUzFQEAgICAgP2AgAIAgP0AgAIAgP0AgICAgICA/QCAgICAgID9AICAgICAgP0AgICAgID9gICAgICAgIAEAICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgAAAAAAUAIAAAAMABAAAAwAHAAsADwATABcAGwAfACMAJwArAC8AMwA3ADsAPwBDAEcASwBPAAABNTMVMTUzFTE1MxUFNTMVITUzFQU1MxUhNTMVBTUzFSE1MxUFNTMVMTUzFTE1MxUxNTMVMTUzFQU1MxUhNTMVBTUzFSE1MxUFNTMVITUzFQEAgICA/gCAAYCA/YCAAYCA/YCAAYCA/YCAgICAgP2AgAGAgP2AgAGAgP2AgAGAgAOAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAAAAAAFQCAAAADAAQAAAMABwALAA8AEwAXABsAHwAjACcAKwAvADMANwA7AD8AQwBHAEsATwBTAAATNTMVMTUzFTE1MxUFNTMVITUzFQU1MxUhNTMVBTUzFTE1MxUxNTMVMTUzFQU1MxUhNTMVBTUzFSE1MxUFNTMVITUzFQU1MxUxNTMVMTUzFTE1MxWAgICA/oCAAQCA/gCAAQCA/gCAgICA/gCAAYCA/YCAAYCA/YCAAYCA/YCAgICAA4CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAAAAOAIAAAAMABAAAAwAHAAsADwATABcAGwAfACMAJwArAC8AMwA3AAABNTMVMTUzFTE1MxUxNTMVBTUzFQc1MxUHNTMVBzUzFQc1MxUHNTMdATUzFTE1MxUxNTMVMTUzFQEAgICAgP2AgICAgICAgICAgICAgICAA4CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgAASAIAAAAMABAAAAwAHAAsADwATABcAGwAfACMAJwArAC8AMwA3ADsAPwBDAEcAABM1MxUxNTMVMTUzFQU1MxUhNTMVBTUzFSE1MxUFNTMVITUzFQU1MxUhNTMVBTUzFSE1MxUFNTMVITUzFQU1MxUxNTMVMTUzFYCAgID+gIABAID+AIABgID9gIABgID9gIABgID9gIABgID9gIABAID+AICAgAOAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgAAAABMAgAAAAwAEAAADAAcACwAPABMAFwAbAB8AIwAnACsALwAzADcAOwA/AEMARwBLAAATNTMVMTUzFTE1MxUxNTMVMTUzFQU1MxUHNTMVBzUzFTE1MxUxNTMVMTUzFQU1MxUHNTMVBzUzFQc1MxUxNTMVMTUzFTE1MxUxNTMVgICAgICA/YCAgICAgICAgP4AgICAgICAgICAgIADgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgAAAAA8AgAAAAwAEAAADAAcACwAPABMAFwAbAB8AIwAnACsALwAzADcAOwAAEzUzFTE1MxUxNTMVMTUzFTE1MxUFNTMVBzUzFQc1MxUxNTMVMTUzFTE1MxUFNTMVBzUzFQc1MxUHNTMVgICAgICA/YCAgICAgICAgP4AgICAgICAgAOAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgAAAABIAgAAAAwAEAAADAAcACwAPABMAFwAbAB8AIwAnACsALwAzADcAOwA/AEMARwAAATUzFTE1MxUxNTMVBTUzFQc1MxUHNTMVITUzFTE1MxUFNTMVITUzFQU1MxUhNTMVBTUzFSE1MxUFNTMVMTUzFTE1MxUxNTMVAQCAgID+AICAgICAAQCAgP2AgAGAgP2AgAGAgP2AgAGAgP4AgICAgAOAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgAAAAAATAIAAAAMABAAAAwAHAAsADwATABcAGwAfACMAJwArAC8AMwA3ADsAPwBDAEcASwAAEzUzFSE1MxUFNTMVITUzFQU1MxUhNTMVBTUzFTE1MxUxNTMVMTUzFTE1MxUFNTMVITUzFQU1MxUhNTMVBTUzFSE1MxUFNTMVITUzFYCAAYCA/YCAAYCA/YCAAYCA/YCAgICAgP2AgAGAgP2AgAGAgP2AgAGAgP2AgAGAgAOAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAAAAAAAwBAAAAAoAEAAADAAcACwAPABMAFwAbAB8AIwAnACsALwAAATUzFTE1MxUxNTMVBTUzFQc1MxUHNTMVBzUzFQc1MxUHNTMVBTUzFTE1MxUxNTMVAQCAgID/AICAgICAgICAgICA/wCAgIADgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAADACAAAACgAQAAAMABwALAA8AEwAXABsAHwAjACcAKwAvAAABNTMVMTUzFTE1MxUHNTMVBzUzFQc1MxUHNTMVBzUzFQc1MxUFNTMVMTUzFTE1MxUBAICAgICAgICAgICAgICAgP4AgICAA4CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAAAAQAIAAAAMABAAAAwAHAAsADwATABcAGwAfACMAJwArAC8AMwA3ADsAPwAAEzUzFSE1MxUFNTMVITUzFQU1MxUzNTMVBTUzFTE1MxUFNTMVMzUzFQU1MxUhNTMVBTUzFSE1MxUFNTMVITUzFYCAAYCA/YCAAQCA/gCAgID+gICA/wCAgID+gIABAID+AIABgID9gIABgIADgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgAAMAIAAAAMABAAAAwAHAAsADwATABcAGwAfACMAJwArAC8AABM1MxUHNTMVBzUzFQc1MxUHNTMVBzUzFQc1MxUHNTMVMTUzFTE1MxUxNTMVMTUzFYCAgICAgICAgICAgICAgICAgICAA4CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAAAAAABUAgAAAAwAEAAADAAcACwAPABMAFwAbAB8AIwAnACsALwAzADcAOwA/AEMARwBLAE8AUwAAEzUzFSE1MxUFNTMVMTUzFTM1MxUxNTMVBTUzFTM1MxUzNTMVBTUzFTM1MxUzNTMVBTUzFTM1MxUzNTMVBTUzFSE1MxUFNTMVITUzFQU1MxUhNTMVgIABgID9gICAgICA/YCAgICAgP2AgICAgID9gICAgICA/YCAAYCA/YCAAYCA/YCAAYCAA4CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAABYAgAAAAwAEAAADAAcACwAPABMAFwAbAB8AIwAnACsALwAzADcAOwA/AEMARwBLAE8AUwBXAAATNTMVITUzFQU1MxUxNTMVITUzFQU1MxUxNTMVITUzFQU1MxUzNTMVMzUzFQU1MxUzNTMVMzUzFQU1MxUhNTMVMTUzFQU1MxUhNTMVMTUzFQU1MxUhNTMVgIABgID9gICAAQCA/YCAgAEAgP2AgICAgID9gICAgICA/YCAAQCAgP2AgAEAgID9gIABgIADgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgAAAABIAgAAAAwAEAAADAAcACwAPABMAFwAbAB8AIwAnACsALwAzADcAOwA/AEMARwAAATUzFTE1MxUxNTMVBTUzFSE1MxUFNTMVITUzFQU1MxUhNTMVBTUzFSE1MxUFNTMVITUzFQU1MxUhNTMVBTUzFTE1MxUxNTMVAQCAgID+AIABgID9gIABgID9gIABgID9gIABgID9gIABgID9gIABgID+AICAgAOAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgAAAEQCAAAADAAQAAAMABwALAA8AEwAXABsAHwAjACcAKwAvADMANwA7AD8AQwAAEzUzFTE1MxUxNTMVMTUzFQU1MxUhNTMVBTUzFSE1MxUFNTMVITUzFQU1MxUxNTMVMTUzFTE1MxUFNTMVBzUzFQc1MxWAgICAgP4AgAGAgP2AgAGAgP2AgAGAgP2AgICAgP4AgICAgIADgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAAAAAABUAgP8AAwAEAAADAAcACwAPABMAFwAbAB8AIwAnACsALwAzADcAOwA/AEMARwBLAE8AUwAAATUzFTE1MxUxNTMVBTUzFSE1MxUFNTMVITUzFQU1MxUhNTMVBTUzFSE1MxUFNTMVITUzFQU1MxUhNTMVBTUzFTE1MxUxNTMVBTUzHQE1MxUxNTMVAQCAgID+AIABgID9gIABgID9gIABgID9gIABgID9gIABgID9gIABgID+AICAgP8AgICAA4CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAAAAASAIAAAAMABAAAAwAHAAsADwATABcAGwAfACMAJwArAC8AMwA3ADsAPwBDAEcAABM1MxUxNTMVMTUzFQU1MxUhNTMVBTUzFSE1MxUFNTMVITUzFQU1MxUxNTMVMTUzFQU1MxUhNTMVBTUzFSE1MxUFNTMVITUzFYCAgID+gIABAID+AIABAID+AIABAID+AICAgP6AgAEAgP4AgAGAgP2AgAGAgAOAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgAAAABAAgAAAAwAEAAADAAcACwAPABMAFwAbAB8AIwAnACsALwAzADcAOwA/AAABNTMVMTUzFTE1MxUxNTMVBTUzFQc1Mx0BNTMVMTUzFTE1Mx0BNTMVBzUzFQc1MxUFNTMVMTUzFTE1MxUxNTMVAQCAgICA/YCAgICAgICAgICAgP2AgICAgAOAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAAAAADACAAAADAAQAAAMABwALAA8AEwAXABsAHwAjACcAKwAvAAATNTMVMTUzFTE1MxUxNTMVMTUzFQU1MxUHNTMVBzUzFQc1MxUHNTMVBzUzFQc1MxWAgICAgID+gICAgICAgICAgICAgIADgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAAAAARAIAAAAMABAAAAwAHAAsADwATABcAGwAfACMAJwArAC8AMwA3ADsAPwBDAAATNTMVITUzFQU1MxUhNTMVBTUzFSE1MxUFNTMVITUzFQU1MxUhNTMVBTUzFSE1MxUFNTMVITUzFQU1MxUxNTMVMTUzFYCAAYCA/YCAAYCA/YCAAYCA/YCAAYCA/YCAAYCA/YCAAYCA/YCAAYCA/gCAgIADgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAAAAOAIAAAAMABAAAAwAHAAsADwATABcAGwAfACMAJwArAC8AMwA3AAATNTMVITUzFQU1MxUhNTMVBTUzFSE1MxUFNTMVMzUzFQU1MxUzNTMVBTUzFTM1MxUFNTMVBzUzFYCAAYCA/YCAAYCA/YCAAYCA/gCAgID+gICAgP6AgICA/wCAgIADgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAAAAAFQCAAAADAAQAAAMABwALAA8AEwAXABsAHwAjACcAKwAvADMANwA7AD8AQwBHAEsATwBTAAATNTMVITUzFQU1MxUhNTMVBTUzFSE1MxUFNTMVMzUzFTM1MxUFNTMVMzUzFTM1MxUFNTMVMzUzFTM1MxUFNTMVMTUzFTM1MxUxNTMVBTUzFSE1MxWAgAGAgP2AgAGAgP2AgAGAgP2AgICAgID9gICAgICA/YCAgICAgP2AgICAgID9gIABgIADgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAADgCAAAADAAQAAAMABwALAA8AEwAXABsAHwAjACcAKwAvADMANwAAEzUzFSE1MxUFNTMVITUzFQU1MxUzNTMVBTUzFQc1MxUFNTMVMzUzFQU1MxUhNTMVBTUzFSE1MxWAgAGAgP2AgAGAgP4AgICA/wCAgID/AICAgP4AgAGAgP2AgAGAgAOAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAAAAwAgAAAAwAEAAADAAcACwAPABMAFwAbAB8AIwAnACsALwAAEzUzFSE1MxUFNTMVITUzFQU1MxUhNTMVBTUzFTM1MxUFNTMVBzUzFQc1MxUHNTMVgIABgID9gIABgID9gIABgID+AICAgP8AgICAgICAgAOAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgAAQAIAAAAMABAAAAwAHAAsADwATABcAGwAfACMAJwArAC8AMwA3ADsAPwAAEzUzFTE1MxUxNTMVMTUzFTE1MxUHNTMVBTUzFQU1MxUFNTMVBTUzFQc1MxUHNTMVMTUzFTE1MxUxNTMVMTUzFYCAgICAgICA/wCA/wCA/wCA/wCAgICAgICAgIADgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgAAAAAAPAQD/AAKABIAAAwAHAAsADwATABcAGwAfACMAJwArAC8AMwA3ADsAAAE1MxUxNTMVMTUzFQU1MxUHNTMVBzUzFQc1MxUHNTMVBzUzFQc1MxUHNTMVBzUzFQc1MxUxNTMVMTUzFQEAgICA/oCAgICAgICAgICAgICAgICAgICAgIAEAICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAACAEAAAADAAQAAAMABwALAA8AEwAXABsAHwAAATUzFQc1Mx0BNTMVBzUzHQE1MxUHNTMdATUzFQc1MxUBAICAgICAgICAgICAgAOAgICAgICAgICAgICAgICAgICAgICAgIAAAA8BAP8AAoAEgAADAAcACwAPABMAFwAbAB8AIwAnACsALwAzADcAOwAAATUzFTE1MxUxNTMVBzUzFQc1MxUHNTMVBzUzFQc1MxUHNTMVBzUzFQc1MxUHNTMVBTUzFTE1MxUxNTMVAQCAgICAgICAgICAgICAgICAgICAgID+gICAgAQAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgAAFAIACgAMABAAAAwAHAAsADwATAAABNTMVBTUzFTM1MxUFNTMVITUzFQGAgP8AgICA/gCAAYCAA4CAgICAgICAgICAgIAAAAAFAIAAAAMAAIAAAwAHAAsADwATAAAzNTMVMTUzFTE1MxUxNTMVMTUzFYCAgICAgICAgICAgICAgIAAAAAGAQADAAMABIAAAwAHAAsADwATABcAAAE1MxUxNTMVBzUzFTE1MxUHNTMVMTUzFQEAgICAgICAgIAEAICAgICAgICAgICAgICAAAAAEACAAAADAAMAAAMABwALAA8AEwAXABsAHwAjACcAKwAvADMANwA7AD8AAAE1MxUxNTMVMTUzHQE1MxUFNTMVMTUzFTE1MxUxNTMVBTUzFSE1MxUFNTMVITUzFQU1MxUxNTMVMTUzFTE1MxUBAICAgID+AICAgID9gIABgID9gIABgID+AICAgIACgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAAAAAAEgCAAAADAAQAAAMABwALAA8AEwAXABsAHwAjACcAKwAvADMANwA7AD8AQwBHAAATNTMVBzUzFQc1MxUxNTMVMTUzFTE1MxUFNTMVITUzFQU1MxUhNTMVBTUzFSE1MxUFNTMVITUzFQU1MxUxNTMVMTUzFTE1MxWAgICAgICAgID+AIABgID9gIABgID9gIABgID9gIABgID9gICAgIADgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAADACAAAADAAMAAAMABwALAA8AEwAXABsAHwAjACcAKwAvAAABNTMVMTUzFTE1MxUxNTMVBTUzFQc1MxUHNTMVBzUzHQE1MxUxNTMVMTUzFTE1MxUBAICAgID9gICAgICAgICAgICAAoCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgAAAABIAgAAAAwAEAAADAAcACwAPABMAFwAbAB8AIwAnACsALwAzADcAOwA/AEMARwAAATUzFQc1MxUFNTMVMTUzFTE1MxUxNTMVBTUzFSE1MxUFNTMVITUzFQU1MxUhNTMVBTUzFSE1MxUFNTMVMTUzFTE1MxUxNTMVAoCAgID+AICAgID9gIABgID9gIABgID9gIABgID9gIABgID+AICAgIADgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAAAAAQAIAAAAMAAwAAAwAHAAsADwATABcAGwAfACMAJwArAC8AMwA3ADsAPwAAATUzFTE1MxUxNTMVBTUzFSE1MxUFNTMVMTUzFTE1MxUxNTMVMTUzFQU1MxUHNTMdATUzFTE1MxUxNTMVMTUzFQEAgICA/gCAAYCA/YCAgICAgP2AgICAgICAgAKAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgAAAAA0AgAAAAwAEAAADAAcACwAPABMAFwAbAB8AIwAnACsALwAzAAABNTMVMTUzFTE1MxUFNTMVBzUzFQU1MxUxNTMVMTUzFTE1MxUFNTMVBzUzFQc1MxUHNTMVAYCAgID+AICAgP8AgICAgP6AgICAgICAgAOAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAAAAAFQCA/wADAAMAAAMABwALAA8AEwAXABsAHwAjACcAKwAvADMANwA7AD8AQwBHAEsATwBTAAABNTMVMTUzFTE1MxUxNTMVBTUzFSE1MxUFNTMVITUzFQU1MxUhNTMVBTUzFSE1MxUFNTMVMTUzFTE1MxUxNTMVBzUzFQU1MxUxNTMVMTUzFTE1MxUBAICAgID9gIABgID9gIABgID9gIABgID9gIABgID+AICAgICAgP2AgICAgAKAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgAAAAAAQAIAAAAMABAAAAwAHAAsADwATABcAGwAfACMAJwArAC8AMwA3ADsAPwAAEzUzFQc1MxUHNTMVMTUzFTE1MxUxNTMVBTUzFSE1MxUFNTMVITUzFQU1MxUhNTMVBTUzFSE1MxUFNTMVITUzFYCAgICAgICAgP4AgAGAgP2AgAGAgP2AgAGAgP2AgAGAgP2AgAGAgAOAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAAAoBAAAAAoAEAAADAAcACwAPABMAFwAbAB8AIwAnAAABNTMVBzUzFQE1MxUxNTMVBzUzFQc1MxUHNTMVBTUzFTE1MxUxNTMVAYCAgID/AICAgICAgICA/wCAgIADgICAgICA/wCAgICAgICAgICAgICAgICAgICAgAAAAAAMAID/AAKABAAAAwAHAAsADwATABcAGwAfACMAJwArAC8AAAE1MxUHNTMVATUzFTE1MxUHNTMVBzUzFQc1MxUHNTMVBzUzFQU1MxUxNTMVMTUzFQIAgICA/wCAgICAgICAgICAgID+AICAgAOAgICAgID/AICAgICAgICAgICAgICAgICAgICAgICAgICAAAAOAIAAAAMABAAAAwAHAAsADwATABcAGwAfACMAJwArAC8AMwA3AAATNTMVBzUzFQc1MxUhNTMVBTUzFTM1MxUFNTMVMTUzFQU1MxUzNTMVBTUzFSE1MxUFNTMVITUzFYCAgICAgAEAgP4AgICA/oCAgP8AgICA/oCAAQCA/gCAAYCAA4CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgAAJAQAAAAKABAAAAwAHAAsADwATABcAGwAfACMAAAE1MxUHNTMVBzUzFQc1MxUHNTMVBzUzFQc1Mx0BNTMVMTUzFQEAgICAgICAgICAgICAgICAA4CAgICAgICAgICAgICAgICAgICAgICAgICAAAAAEACAAAADAAMAAAMABwALAA8AEwAXABsAHwAjACcAKwAvADMANwA7AD8AABM1MxUxNTMVMzUzFQU1MxUzNTMVMzUzFQU1MxUzNTMVMzUzFQU1MxUzNTMVMzUzFQU1MxUhNTMVBTUzFSE1MxWAgICAgP4AgICAgID9gICAgICA/YCAgICAgP2AgAGAgP2AgAGAgAKAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgAAAAAAOAIAAAAMAAwAAAwAHAAsADwATABcAGwAfACMAJwArAC8AMwA3AAATNTMVMTUzFTE1MxUxNTMVBTUzFSE1MxUFNTMVITUzFQU1MxUhNTMVBTUzFSE1MxUFNTMVITUzFYCAgICA/gCAAYCA/YCAAYCA/YCAAYCA/YCAAYCA/YCAAYCAAoCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAAAAAOAIAAAAMAAwAAAwAHAAsADwATABcAGwAfACMAJwArAC8AMwA3AAABNTMVMTUzFTE1MxUFNTMVITUzFQU1MxUhNTMVBTUzFSE1MxUFNTMVITUzFQU1MxUxNTMVMTUzFQEAgICA/gCAAYCA/YCAAYCA/YCAAYCA/YCAAYCA/gCAgIACgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgAAAAAASAID/AAMAAwAAAwAHAAsADwATABcAGwAfACMAJwArAC8AMwA3ADsAPwBDAEcAABM1MxUxNTMVMTUzFTE1MxUFNTMVITUzFQU1MxUhNTMVBTUzFSE1MxUFNTMVITUzFQU1MxUxNTMVMTUzFTE1MxUFNTMVBzUzFYCAgICA/gCAAYCA/YCAAYCA/YCAAYCA/YCAAYCA/YCAgICA/gCAgIACgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAAAAAAEgCA/wADAAMAAAMABwALAA8AEwAXABsAHwAjACcAKwAvADMANwA7AD8AQwBHAAABNTMVMTUzFTE1MxUxNTMVBTUzFSE1MxUFNTMVITUzFQU1MxUhNTMVBTUzFSE1MxUFNTMVMTUzFTE1MxUxNTMVBzUzFQc1MxUBAICAgID9gIABgID9gIABgID9gIABgID9gIABgID+AICAgICAgICAAoCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAAAAAAAoAgAAAAwADAAADAAcACwAPABMAFwAbAB8AIwAnAAATNTMVMzUzFTE1MxUxNTMVBTUzFTE1MxUFNTMVBzUzFQc1MxUHNTMVgICAgICA/YCAgP8AgICAgICAgAKAgICAgICAgICAgICAgICAgICAgICAgICAgAAAAA4AgAAAAwADAAADAAcACwAPABMAFwAbAB8AIwAnACsALwAzADcAAAE1MxUxNTMVMTUzFTE1MxUFNTMdATUzFTE1MxUxNTMdATUzFQc1MxUFNTMVMTUzFTE1MxUxNTMVAQCAgICA/YCAgICAgICA/YCAgICAAoCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAADQCAAAADAAQAAAMABwALAA8AEwAXABsAHwAjACcAKwAvADMAAAE1MxUHNTMVBTUzFTE1MxUxNTMVMTUzFQU1MxUHNTMVBzUzFQc1Mx0BNTMVMTUzFTE1MxUBAICAgP8AgICAgP6AgICAgICAgICAgAOAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAAA0AgAAAAwADAAADAAcACwAPABMAFwAbAB8AIwAnACsALwAzAAATNTMVITUzFQU1MxUhNTMVBTUzFSE1MxUFNTMVITUzFQU1MxUhNTMVBTUzFTE1MxUxNTMVgIABgID9gIABgID9gIABgID9gIABgID9gIABgID+AICAgAKAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgAAAAAAKAIAAAAMAAwAAAwAHAAsADwATABcAGwAfACMAJwAAEzUzFSE1MxUFNTMVITUzFQU1MxUzNTMVBTUzFTM1MxUFNTMVBzUzFYCAAYCA/YCAAYCA/gCAgID+gICAgP8AgICAAoCAgICAgICAgICAgICAgICAgICAgICAgICAAAAAABAAgAAAAwADAAADAAcACwAPABMAFwAbAB8AIwAnACsALwAzADcAOwA/AAATNTMVITUzFQU1MxUhNTMVBTUzFTM1MxUzNTMVBTUzFTM1MxUzNTMVBTUzFTE1MxUzNTMVMTUzFQU1MxUhNTMVgIABgID9gIABgID9gICAgICA/YCAgICAgP2AgICAgID9gIABgIACgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAAAAAACgCAAAADAAMAAAMABwALAA8AEwAXABsAHwAjACcAABM1MxUhNTMVBTUzFTM1MxUFNTMVBzUzFQU1MxUzNTMVBTUzFSE1MxWAgAGAgP4AgICA/wCAgID/AICAgP4AgAGAgAKAgICAgICAgICAgICAgICAgICAgICAgICAgAAAAAATAID/AAMAAwAAAwAHAAsADwATABcAGwAfACMAJwArAC8AMwA3ADsAPwBDAEcASwAAEzUzFSE1MxUFNTMVITUzFQU1MxUhNTMVBTUzFSE1MxUFNTMVITUzFQU1MxUxNTMVMTUzFTE1MxUHNTMVBTUzFTE1MxUxNTMVMTUzFYCAAYCA/YCAAYCA/YCAAYCA/YCAAYCA/YCAAYCA/gCAgICAgID9gICAgIACgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgAAOAIAAAAMAAwAAAwAHAAsADwATABcAGwAfACMAJwArAC8AMwA3AAATNTMVMTUzFTE1MxUxNTMVMTUzFQU1MxUFNTMVBTUzFQU1MxUHNTMVMTUzFTE1MxUxNTMVMTUzFYCAgICAgP8AgP8AgP8AgP8AgICAgICAgAKAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAAAAOAID/AAMABIAAAwAHAAsADwATABcAGwAfACMAJwArAC8AMwA3AAABNTMVMTUzFQU1MxUHNTMVBzUzFQc1MxUFNTMVMTUzHQE1MxUHNTMVBzUzFQc1Mx0BNTMVMTUzFQIAgID+gICAgICAgID+gICAgICAgICAgICABACAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgAAAAAkBgP+AAgAEAAADAAcACwAPABMAFwAbAB8AIwAAATUzFQc1MxUHNTMVBzUzFQc1MxUHNTMVBzUzFQc1MxUHNTMVAYCAgICAgICAgICAgICAgICAgAOAgICAgICAgICAgICAgICAgICAgICAgICAgIAAAAAADgCA/wADAASAAAMABwALAA8AEwAXABsAHwAjACcAKwAvADMANwAAEzUzFTE1Mx0BNTMVBzUzFQc1MxUHNTMdATUzFTE1MxUFNTMVBzUzFQc1MxUHNTMVBTUzFTE1MxWAgICAgICAgICAgID+gICAgICAgID+gICABACAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgAAAAAAKAIABAAOAAwAAAwAHAAsADwATABcAGwAfACMAJwAAATUzFSE1MxUFNTMVMzUzFSE1MxUFNTMVITUzFTM1MxUFNTMVITUzFQEAgAGAgP0AgICAAQCA/QCAAQCAgID9AIABgIACgICAgICAgICAgICAgICAgICAgICAgICAAAAAABQAgAAAA4AEAAADAAcACwAPABMAFwAbAB8AIwAnACsALwAzADcAOwA/AEMARwBLAE8AAAE1MxUxNTMVMTUzFQU1MxUhNTMVBTUzFQU1MxUxNTMVMTUzFTE1MxUFNTMVBTUzFTE1MxUxNTMVMTUzFQU1MxUhNTMVBTUzFTE1MxUxNTMVAYCAgID+AIABgID9gID/AICAgID+gID/AICAgID+gIABgID+AICAgAOAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAAAAAAAwGA/4ACgAEAAAMABwALAAAlNTMVBzUzFQU1MxUCAICAgP8AgICAgICAgICAgAAADQEA/wADAAQAAAMABwALAA8AEwAXABsAHwAjACcAKwAvADMAAAE1MxUxNTMVBTUzFQc1MxUFNTMVMTUzFTE1MxUFNTMVBzUzFQc1MxUHNTMVBzUzFQU1MxUCAICA/oCAgID/AICAgP8AgICAgICAgICA/wCAA4CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgAAABgCA/4ADAAEAAAMABwALAA8AEwAXAAAlNTMVITUzFQU1MxUhNTMVBTUzFSE1MxUBAIABAID+AIABAID9gIABAICAgICAgICAgICAgICAgIAAAAAAAwCAAAADAACAAAMABwALAAAzNTMVMzUzFTM1MxWAgICAgICAgICAgIAAAAAMAIAAAAMABAAAAwAHAAsADwATABcAGwAfACMAJwArAC8AAAE1MxUHNTMVBTUzFTE1MxUxNTMVMTUzFTE1MxUFNTMVBzUzFQc1MxUHNTMVBzUzFQGAgICA/oCAgICAgP6AgICAgICAgICAA4CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAABAAgAAAAwAEAAADAAcACwAPABMAFwAbAB8AIwAnACsALwAzADcAOwA/AAABNTMVBzUzFQU1MxUxNTMVMTUzFTE1MxUxNTMVBTUzFQc1MxUFNTMVMTUzFTE1MxUxNTMVMTUzFQU1MxUHNTMVAYCAgID+gICAgICA/oCAgID+gICAgICA/oCAgIADgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgAAAAAMBAAMAAoAEAAADAAcACwAAATUzFQU1MxUzNTMVAYCA/wCAgIADgICAgICAgIAAABEAgAAAA4ADgAADAAcACwAPABMAFwAbAB8AIwAnACsALwAzADcAOwA/AEMAABM1MxUxNTMVITUzFQU1MxUxNTMVMzUzFQU1MxUFNTMVBTUzHQE1MxUxNTMVMzUzFTE1MxUFNTMVMTUzFTM1MxUxNTMVgICAAQCA/YCAgICA/wCA/wCA/wCAgICAgID9gICAgICAAwCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAAAAAABIAgAAAAwAEgAADAAcACwAPABMAFwAbAB8AIwAnACsALwAzADcAOwA/AEMARwAAATUzFTM1MxUFNTMVATUzFTE1MxUxNTMVBTUzFSE1MxUFNTMVMTUzFTE1Mx0BNTMVMTUzFQU1MxUhNTMVBTUzFTE1MxUxNTMVAQCAgID/AID/AICAgP4AgAGAgP2AgICAgID9gIABgID+AICAgAQAgICAgICAgP8AgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAAAAUBAACAAoADAAADAAcACwAPABMAAAE1MxUFNTMVBTUzHQE1Mx0BNTMVAgCA/wCA/wCAgIACgICAgICAgICAgICAgICAAAAAABcAgAAAA4AEAAADAAcACwAPABMAFwAbAB8AIwAnACsALwAzADcAOwA/AEMARwBLAE8AUwBXAFsAAAE1MxUxNTMVMTUzFTE1MxUxNTMVBTUzFSE1MxUFNTMVITUzFQU1MxUhNTMVMTUzFQU1MxUhNTMVBTUzFSE1MxUFNTMVITUzFQU1MxUxNTMVMTUzFTE1MxUxNTMVAQCAgICAgP0AgAEAgP4AgAEAgP4AgAEAgID9gIABAID+AIABAID+AIABAID+gICAgICAA4CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgAARAIAAAAMABIAAAwAHAAsADwATABcAGwAfACMAJwArAC8AMwA3ADsAPwBDAAABNTMVMzUzFQU1MxUBNTMVMTUzFTE1MxUxNTMVMTUzFQU1MxUFNTMVBTUzFQU1MxUHNTMVMTUzFTE1MxUxNTMVMTUzFQEAgICA/wCA/oCAgICAgP8AgP8AgP8AgP8AgICAgICAgAQAgICAgICAgP8AgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAAAADAYADAAKABIAAAwAHAAsAAAE1MxUFNTMVBzUzFQIAgP8AgICABACAgICAgICAgAADAYADAAKABIAAAwAHAAsAAAE1MxUHNTMVBTUzFQIAgICA/wCABACAgICAgICAgAAGAIADAAMABIAAAwAHAAsADwATABcAAAE1MxUhNTMVBTUzFSE1MxUFNTMVITUzFQEAgAEAgP2AgAEAgP4AgAEAgAQAgICAgICAgICAgICAgIAAAAAGAIADAAMABIAAAwAHAAsADwATABcAAAE1MxUhNTMVBTUzFSE1MxUFNTMVITUzFQEAgAEAgP4AgAEAgP2AgAEAgAQAgICAgICAgICAgICAgIAAAAAMAQABAAMAAwAAAwAHAAsADwATABcAGwAfACMAJwArAC8AAAE1MxUxNTMVBTUzFTE1MxUxNTMVMTUzFQU1MxUxNTMVMTUzFTE1MxUFNTMVMTUzFQGAgID+gICAgID+AICAgID+gICAAoCAgICAgICAgICAgICAgICAgICAgICAgICAgIAAAAAAAwEAAYACgAIAAAMABwALAAABNTMVMTUzFTE1MxUBAICAgAGAgICAgICAAAAGAIABgAOAAgAAAwAHAAsADwATABcAABM1MxUxNTMVMTUzFTE1MxUxNTMVMTUzFYCAgICAgIABgICAgICAgICAgICAgAAAAAAEAIADgAKABIAAAwAHAAsADwAAATUzFTM1MxUFNTMVMzUzFQEAgICA/gCAgIAEAICAgICAgICAgAAAAAAMAIACgAOABAAAAwAHAAsADwATABcAGwAfACMAJwArAC8AABM1MxUxNTMVMTUzFTE1MxUzNTMVBTUzFTM1MxUxNTMVMTUzFQU1MxUzNTMVMzUzFYCAgICAgID9gICAgICA/YCAgICAgAOAgICAgICAgICAgICAgICAgICAgICAgICAgIAAAAAADQCAAAACgAQAAAMABwALAA8AEwAXABsAHwAjACcAKwAvADMAAAE1MxUzNTMVBTUzFQE1MxUxNTMVMTUzFQU1Mx0BNTMVMTUzHQE1MxUFNTMVMTUzFTE1MxUBAICAgP8AgP8AgICA/gCAgICA/gCAgIADgICAgICAgID/AICAgICAgICAgICAgICAgICAgICAgICAgAAAAAAFAQAAgAKAAwAAAwAHAAsADwATAAABNTMdATUzHQE1MxUFNTMVBTUzFQEAgICA/wCA/wCAAoCAgICAgICAgICAgICAgAAAAAAUAIAAAAOAAwAAAwAHAAsADwATABcAGwAfACMAJwArAC8AMwA3ADsAPwBDAEcASwBPAAABNTMVMTUzFTE1MxUxNTMVMTUzFQU1MxUhNTMVMzUzFQU1MxUhNTMVMTUzFTE1MxUFNTMVITUzFQU1MxUhNTMVBTUzFTE1MxUzNTMVMTUzFQEAgICAgID9AIABAICAgP0AgAEAgICA/QCAAQCA/gCAAQCA/oCAgICAgAKAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAAAAAAAwBAAAAAoAEAAADAAcACwAPABMAFwAbAB8AIwAnACsALwAAATUzFTM1MxUFNTMVATUzFTE1MxUxNTMVBzUzFQU1MxUFNTMVBzUzFTE1MxUxNTMVAQCAgID/AID/AICAgICA/wCA/wCAgICAgAOAgICAgICAgP8AgICAgICAgICAgICAgICAgICAgICAgAAAAAwAgAAAAwAEgAADAAcACwAPABMAFwAbAB8AIwAnACsALwAAATUzFTM1MxUBNTMVITUzFQU1MxUhNTMVBTUzFTM1MxUFNTMVBzUzFQc1MxUHNTMVAQCAgID+AIABgID9gIABgID+AICAgP8AgICAgICAgAQAgICAgP8AgICAgICAgICAgICAgICAgICAgICAgICAgIAAAAAACAGAAAACAASAAAMABwALAA8AEwAXABsAHwAAATUzFQc1MxUDNTMVBzUzFQc1MxUHNTMVBzUzFQc1MxUBgICAgICAgICAgICAgICAgAQAgICAgID/AICAgICAgICAgICAgICAgICAAAAOAIAAAAKAA4AAAwAHAAsADwATABcAGwAfACMAJwArAC8AMwA3AAABNTMVBTUzFTE1MxUxNTMVBTUzFTM1MxUFNTMVMzUzFQU1MxUzNTMVBTUzFTE1MxUxNTMVBTUzFQGAgP8AgICA/gCAgID+gICAgP6AgICA/wCAgID/AIADAICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAAABAAgAAAAwAEAAADAAcACwAPABMAFwAbAB8AIwAnACsALwAzADcAOwA/AAABNTMVMTUzFQU1MxUhNTMVBTUzFQU1MxUxNTMVMTUzFQU1MxUHNTMVBTUzFQc1MxUxNTMVMTUzFTE1MxUxNTMVAYCAgP6AgAEAgP4AgP8AgICA/wCAgID/AICAgICAgIADgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgAAAAAAMAIAAgAMAAwAAAwAHAAsADwATABcAGwAfACMAJwArAC8AABM1MxUhNTMVBTUzFTE1MxUxNTMVBTUzFTM1MxUFNTMVMTUzFTE1MxUFNTMVITUzFYCAAYCA/gCAgID+gICAgP6AgICA/gCAAYCAAoCAgICAgICAgICAgICAgICAgICAgICAgICAgICAAA8AgAAAAwAEAAADAAcACwAPABMAFwAbAB8AIwAnACsALwAzADcAOwAAEzUzFSE1MxUFNTMVITUzFQU1MxUzNTMVBTUzFQU1MxUxNTMVMTUzFQU1MxUFNTMVMTUzFTE1MxUFNTMVgIABgID9gIABgID+AICAgP8AgP8AgICA/wCA/wCAgID/AIADgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAABgGAAAACAAQAAAMABwALAA8AEwAXAAABNTMVBzUzFQc1MxUDNTMVBzUzFQc1MxUBgICAgICAgICAgICAA4CAgICAgICAgP6AgICAgICAgIAAAAAAEAEAAAADAASAAAMABwALAA8AEwAXABsAHwAjACcAKwAvADMANwA7AD8AAAE1MxUxNTMVBTUzFSE1MxUFNTMdATUzFTE1MxUFNTMVITUzFQU1MxUxNTMdATUzFQU1MxUhNTMVBTUzFTE1MxUBgICA/oCAAQCA/gCAgID+gIABAID+gICAgP4AgAEAgP6AgIAEAICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAAAAACAQAEAAKABIAAAwAHAAABNTMVMzUzFQEAgICABACAgICAAAAXAIABAAOABIAAAwAHAAsADwATABcAGwAfACMAJwArAC8AMwA3ADsAPwBDAEcASwBPAFMAVwBbAAABNTMVMTUzFTE1MxUxNTMVBTUzFSE1MxUFNTMVMzUzFTE1MxUzNTMVBTUzFTM1MxUhNTMVBTUzFTM1MxUxNTMVMzUzFQU1MxUhNTMVBTUzFTE1MxUxNTMVMTUzFQEAgICAgP2AgAIAgP0AgICAgICA/QCAgIABAID9AICAgICAgP0AgAIAgP2AgICAgAQAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgAALAQACAAMABIAAAwAHAAsADwATABcAGwAfACMAJwArAAABNTMVMTUzHQE1MxUFNTMVMTUzFTE1MxUFNTMVITUzFQU1MxUxNTMVMTUzFQGAgICA/oCAgID+AIABAID+gICAgAQAgICAgICAgICAgICAgICAgICAgICAgICAgIAAAAoAgACAA4ADAAADAAcACwAPABMAFwAbAB8AIwAnAAABNTMVITUzFQU1MxUhNTMVBTUzFSE1MxUFNTMVITUzFQU1MxUhNTMVAYCAAQCA/YCAAQCA/YCAAQCA/oCAAQCA/oCAAQCAAoCAgICAgICAgICAgICAgICAgICAgICAgIAABwCAAYADAAMAAAMABwALAA8AEwAXABsAABM1MxUxNTMVMTUzFTE1MxUxNTMVBzUzFQc1MxWAgICAgICAgICAAoCAgICAgICAgICAgICAgICAAAAAAwEAAYACgAIAAAMABwALAAABNTMVMTUzFTE1MxUBAICAgAGAgICAgICAAAAWAIABAAOABIAAAwAHAAsADwATABcAGwAfACMAJwArAC8AMwA3ADsAPwBDAEcASwBPAFMAVwAAATUzFTE1MxUxNTMVMTUzFQU1MxUhNTMVBTUzFTM1MxUxNTMVMzUzFQU1MxUzNTMVITUzFQU1MxUzNTMVITUzFQU1MxUhNTMVBTUzFTE1MxUxNTMVMTUzFQEAgICAgP2AgAIAgP0AgICAgICA/QCAgIABAID9AICAgAEAgP0AgAIAgP2AgICAgAQAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAABQCABAADAASAAAMABwALAA8AEwAAEzUzFTE1MxUxNTMVMTUzFTE1MxWAgICAgIAEAICAgICAgICAgIAACAEAAoADAASAAAMABwALAA8AEwAXABsAHwAAATUzFTE1MxUFNTMVITUzFQU1MxUhNTMVBTUzFTE1MxUBgICA/oCAAQCA/gCAAQCA/oCAgAQAgICAgICAgICAgICAgICAgICAgAAAAAAOAIAAgAMAA4AAAwAHAAsADwATABcAGwAfACMAJwArAC8AMwA3AAABNTMVBzUzFQU1MxUxNTMVMTUzFTE1MxUxNTMVBTUzFQc1MxUFNTMVMTUzFTE1MxUxNTMVMTUzFQGAgICA/oCAgICAgP6AgICA/oCAgICAgAMAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAAAAIAQACAAKABIAAAwAHAAsADwATABcAGwAfAAABNTMVMTUzHQE1MxUFNTMVBTUzFQc1MxUxNTMVMTUzFQEAgICA/wCA/wCAgICAgAQAgICAgICAgICAgICAgICAgICAgIAAAAAACgEAAgACgASAAAMABwALAA8AEwAXABsAHwAjACcAAAE1MxUxNTMVMTUzFQc1MxUFNTMVMTUzFQc1MxUFNTMVMTUzFTE1MxUBAICAgICA/wCAgICA/oCAgIAEAICAgICAgICAgICAgICAgICAgICAgICAgAADAQADAAKABIAAAwAHAAsAAAE1MxUFNTMVBTUzFQIAgP8AgP8AgAQAgICAgICAgIAAAAAAEACA/wADAAMAAAMABwALAA8AEwAXABsAHwAjACcAKwAvADMANwA7AD8AABM1MxUhNTMVBTUzFSE1MxUFNTMVITUzFQU1MxUhNTMVBTUzFSE1MxUFNTMVMTUzFTE1MxUxNTMVBTUzFQc1MxWAgAGAgP2AgAGAgP2AgAGAgP2AgAGAgP2AgAGAgP2AgICAgP4AgICAAoCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAAAAAAFQCAAAADAAQAAAMABwALAA8AEwAXABsAHwAjACcAKwAvADMANwA7AD8AQwBHAEsATwBTAAATNTMVMTUzFTE1MxUxNTMVMTUzFQU1MxUxNTMVMzUzFQU1MxUxNTMVMzUzFQU1MxUzNTMVBTUzFTM1MxUFNTMVMzUzFQU1MxUzNTMVBTUzFTM1MxWAgICAgID9gICAgID+AICAgID+gICAgP6AgICA/oCAgID+gICAgP6AgICAA4CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAAAQBgAEAAoACAAADAAcACwAPAAABNTMVMTUzFQU1MxUxNTMVAYCAgP8AgIABgICAgICAgICAgAAAAwGA/4ACgAEAAAMABwALAAAlNTMVBzUzFQU1MxUCAICAgP8AgICAgICAgICAgAAACAEAAgACgASAAAMABwALAA8AEwAXABsAHwAAATUzFQU1MxUxNTMVBzUzFQc1MxUFNTMVMTUzFTE1MxUBgID/AICAgICAgP8AgICABACAgICAgICAgICAgICAgICAgICAgAAAAAYBAAKAAoAEgAADAAcACwAPABMAFwAAATUzFQU1MxUzNTMVBTUzFTM1MxUFNTMVAYCA/wCAgID+gICAgP8AgAQAgICAgICAgICAgICAgICAAAAAAAoAgACAA4ADAAADAAcACwAPABMAFwAbAB8AIwAnAAATNTMVITUzFQU1MxUhNTMVBTUzFSE1MxUFNTMVITUzFQU1MxUhNTMVgIABAID+gIABAID+gIABAID9gIABAID9gIABAIACgICAgICAgICAgICAgICAgICAgICAgICAgAAAFQCA/4ADgAQAAAMABwALAA8AEwAXABsAHwAjACcAKwAvADMANwA7AD8AQwBHAEsATwBTAAABNTMVBTUzFTE1MxUHNTMVITUzFQU1MxUhNTMVBTUzFTM1MxUzNTMVBTUzFTM1MxUxNTMVBTUzFTM1MxUzNTMVBTUzFSE1MxUxNTMVMTUzFQc1MxUBAID/AICAgIABgID9gIABAID+AICAgICA/gCAgICA/YCAgICAgP0AgAEAgICAgIADgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAAAAAEgCA/4ADgAQAAAMABwALAA8AEwAXABsAHwAjACcAKwAvADMANwA7AD8AQwBHAAABNTMVBTUzFTE1MxUHNTMVITUzFQU1MxUhNTMVBTUzFTM1MxUFNTMVMzUzFTE1MxUFNTMVITUzFQU1MxUhNTMVBzUzFTE1MxUBAID/AICAgIABgID9gIABAID+AICAgP8AgICAgP2AgAGAgP0AgAGAgICAgAOAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAAAAAXAID/gAOABAAAAwAHAAsADwATABcAGwAfACMAJwArAC8AMwA3ADsAPwBDAEcASwBPAFMAVwBbAAATNTMVMTUzFQc1MxUFNTMVMTUzFSE1MxUFNTMVITUzFQU1MxUxNTMVMzUzFTM1MxUFNTMVMzUzFTE1MxUFNTMVMzUzFTM1MxUFNTMVITUzFTE1MxUxNTMVBzUzFYCAgICA/wCAgAGAgP2AgAEAgP2AgICAgICA/gCAgICA/YCAgICAgP0AgAEAgICAgIADgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgAAACwCA/4ADAAQAAAMABwALAA8AEwAXABsAHwAjACcAKwAAATUzFQc1MxUDNTMVBzUzHQE1Mx0BNTMVBTUzFSE1MxUFNTMVMTUzFTE1MxUBgICAgICAgICAgP2AgAGAgP4AgICAA4CAgICAgP8AgICAgICAgICAgICAgICAgICAgICAgIAAEgCAAAADAASAAAMABwALAA8AEwAXABsAHwAjACcAKwAvADMANwA7AD8AQwBHAAABNTMdATUzFQE1MxUxNTMVMTUzFQU1MxUhNTMVBTUzFSE1MxUFNTMVMTUzFTE1MxUxNTMVMTUzFQU1MxUhNTMVBTUzFSE1MxUBAICA/wCAgID+AIABgID9gIABgID9gICAgICA/YCAAYCA/YCAAYCABACAgICAgP8AgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgAAAABIAgAAAAwAEgAADAAcACwAPABMAFwAbAB8AIwAnACsALwAzADcAOwA/AEMARwAAATUzFQU1MxUBNTMVMTUzFTE1MxUFNTMVITUzFQU1MxUhNTMVBTUzFTE1MxUxNTMVMTUzFTE1MxUFNTMVITUzFQU1MxUhNTMVAgCA/wCA/wCAgID+AIABgID9gIABgID9gICAgICA/YCAAYCA/YCAAYCABACAgICAgP8AgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgAATAIAAAAMABIAAAwAHAAsADwATABcAGwAfACMAJwArAC8AMwA3ADsAPwBDAEcASwAAATUzFQU1MxUzNTMVATUzFTE1MxUxNTMVBTUzFSE1MxUFNTMVITUzFQU1MxUxNTMVMTUzFTE1MxUxNTMVBTUzFSE1MxUFNTMVITUzFQGAgP8AgICA/oCAgID+AIABgID9gIABgID9gICAgICA/YCAAYCA/YCAAYCABACAgICAgICA/wCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAAAAAFACAAAADAASAAAMABwALAA8AEwAXABsAHwAjACcAKwAvADMANwA7AD8AQwBHAEsATwAAATUzFTM1MxUFNTMVMzUzFQE1MxUxNTMVMTUzFQU1MxUhNTMVBTUzFSE1MxUFNTMVMTUzFTE1MxUxNTMVMTUzFQU1MxUhNTMVBTUzFSE1MxUBAICAgP4AgICA/wCAgID+AIABgID9gIABgID9gICAgICA/YCAAYCA/YCAAYCABACAgICAgICAgID/AICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAAFACAAAADAASAAAMABwALAA8AEwAXABsAHwAjACcAKwAvADMANwA7AD8AQwBHAEsATwAAATUzFTM1MxUBNTMVMTUzFTE1MxUFNTMVITUzFQU1MxUhNTMVBTUzFSE1MxUFNTMVMTUzFTE1MxUxNTMVMTUzFQU1MxUhNTMVBTUzFSE1MxUBAICAgP6AgICA/gCAAYCA/YCAAYCA/YCAAYCA/YCAgICAgP2AgAGAgP2AgAGAgAQAgICAgP8AgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAAAAAABQAgAAAAwAEgAADAAcACwAPABMAFwAbAB8AIwAnACsALwAzADcAOwA/AEMARwBLAE8AAAE1MxUFNTMVMzUzFQU1MxUFNTMVMTUzFTE1MxUFNTMVITUzFQU1MxUhNTMVBTUzFTE1MxUxNTMVMTUzFTE1MxUFNTMVITUzFQU1MxUhNTMVAYCA/wCAgID/AID/AICAgP4AgAGAgP2AgAGAgP2AgICAgID9gIABgID9gIABgIAEAICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgAAAAAAYAIAAAAOABAAAAwAHAAsADwATABcAGwAfACMAJwArAC8AMwA3ADsAPwBDAEcASwBPAFMAVwBbAF8AAAE1MxUxNTMVMTUzFTE1MxUxNTMVBTUzFSE1MxUFNTMVITUzFQU1MxUhNTMVBTUzFTE1MxUxNTMVMTUzFTE1MxUFNTMVITUzFQU1MxUhNTMVBTUzFSE1MxUxNTMVMTUzFQEAgICAgID9AIABAID+AIABAID+AIABAID+AICAgICA/YCAAQCA/gCAAQCA/gCAAQCAgIADgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAAAAAAEQCA/wADAAQAAAMABwALAA8AEwAXABsAHwAjACcAKwAvADMANwA7AD8AQwAAATUzFTE1MxUxNTMVMTUzFQU1MxUHNTMVBzUzFQc1MxUHNTMVBzUzHQE1MxUxNTMVMTUzFTE1MxUFNTMVBTUzFTE1MxUBAICAgID9gICAgICAgICAgICAgICAgP6AgP8AgIADgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAAAAAAEwCAAAADAASAAAMABwALAA8AEwAXABsAHwAjACcAKwAvADMANwA7AD8AQwBHAEsAAAE1Mx0BNTMVATUzFTE1MxUxNTMVMTUzFTE1MxUFNTMVBzUzFTE1MxUxNTMVMTUzFQU1MxUHNTMVBzUzFTE1MxUxNTMVMTUzFTE1MxUBAICA/oCAgICAgP2AgICAgICA/gCAgICAgICAgIAEAICAgICA/wCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAAEwCAAAADAASAAAMABwALAA8AEwAXABsAHwAjACcAKwAvADMANwA7AD8AQwBHAEsAAAE1MxUFNTMVATUzFTE1MxUxNTMVMTUzFTE1MxUFNTMVBzUzFTE1MxUxNTMVMTUzFQU1MxUHNTMVBzUzFTE1MxUxNTMVMTUzFTE1MxUCAID/AID+gICAgICA/YCAgICAgID+AICAgICAgICAgAQAgICAgID/AICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgAAAABQAgAAAAwAEgAADAAcACwAPABMAFwAbAB8AIwAnACsALwAzADcAOwA/AEMARwBLAE8AAAE1MxUFNTMVMzUzFQE1MxUxNTMVMTUzFTE1MxUxNTMVBTUzFQc1MxUxNTMVMTUzFTE1MxUFNTMVBzUzFQc1MxUxNTMVMTUzFTE1MxUxNTMVAYCA/wCAgID+AICAgICA/YCAgICAgID+AICAgICAgICAgAQAgICAgICAgP8AgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAABQAgAAAAwAEgAADAAcACwAPABMAFwAbAB8AIwAnACsALwAzADcAOwA/AEMARwBLAE8AAAE1MxUzNTMVATUzFTE1MxUxNTMVMTUzFTE1MxUFNTMVBzUzFQc1MxUxNTMVMTUzFTE1MxUFNTMVBzUzFQc1MxUxNTMVMTUzFTE1MxUxNTMVAQCAgID+AICAgICA/YCAgICAgICAgP4AgICAgICAgICABACAgICA/wCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAAAAwBAAAAAoAEgAADAAcACwAPABMAFwAbAB8AIwAnACsALwAAATUzHQE1MxUBNTMVMTUzFTE1MxUFNTMVBzUzFQc1MxUHNTMVBTUzFTE1MxUxNTMVAQCAgP8AgICA/wCAgICAgICA/wCAgIAEAICAgICA/wCAgICAgICAgICAgICAgICAgICAgICAgICAAAAAAAwBAAAAAoAEgAADAAcACwAPABMAFwAbAB8AIwAnACsALwAAATUzFQU1MxUBNTMVMTUzFTE1MxUFNTMVBzUzFQc1MxUHNTMVBTUzFTE1MxUxNTMVAgCA/wCA/wCAgID/AICAgICAgID/AICAgAQAgICAgID/AICAgICAgICAgICAgICAgICAgICAgICAgIAAAA0BAAAAAoAEgAADAAcACwAPABMAFwAbAB8AIwAnACsALwAzAAABNTMVBTUzFTM1MxUBNTMVMTUzFTE1MxUFNTMVBzUzFQc1MxUHNTMVBTUzFTE1MxUxNTMVAYCA/wCAgID+gICAgP8AgICAgICAgP8AgICABACAgICAgICA/wCAgICAgICAgICAgICAgICAgICAgICAgICAAAAAAA0BAAAAAoAEgAADAAcACwAPABMAFwAbAB8AIwAnACsALwAzAAABNTMVMzUzFQE1MxUxNTMVMTUzFQU1MxUHNTMVBzUzFQc1MxUHNTMVBTUzFTE1MxUxNTMVAQCAgID+gICAgP8AgICAgICAgICA/wCAgIAEAICAgID/AICAgICAgICAgICAgICAgICAgICAgICAgICAgIAAFQCAAAADgAQAAAMABwALAA8AEwAXABsAHwAjACcAKwAvADMANwA7AD8AQwBHAEsATwBTAAABNTMVMTUzFTE1MxUFNTMVITUzFQU1MxUhNTMVBTUzFTE1MxUxNTMVMTUzFTM1MxUFNTMVITUzFQU1MxUhNTMVBTUzFSE1MxUFNTMVMTUzFTE1MxUBAICAgP6AgAEAgP4AgAGAgP0AgICAgICA/YCAAYCA/YCAAYCA/YCAAQCA/gCAgIADgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAAAAAAEwCAAAADAASAAAMABwALAA8AEwAXABsAHwAjACcAKwAvADMANwA7AD8AQwBHAEsAAAE1MxUzNTMVBTUzFTM1MxUBNTMVITUzFQU1MxUxNTMVITUzFQU1MxUzNTMVMzUzFQU1MxUhNTMVMTUzFQU1MxUhNTMVBTUzFSE1MxUBAICAgP4AgICA/oCAAYCA/YCAgAEAgP2AgICAgID9gIABAICA/YCAAYCA/YCAAYCABACAgICAgICAgID/AICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAAAAQAIAAAAMABIAAAwAHAAsADwATABcAGwAfACMAJwArAC8AMwA3ADsAPwAAATUzHQE1MxUBNTMVMTUzFTE1MxUFNTMVITUzFQU1MxUhNTMVBTUzFSE1MxUFNTMVITUzFQU1MxUxNTMVMTUzFQEAgID/AICAgP4AgAGAgP2AgAGAgP2AgAGAgP2AgAGAgP4AgICABACAgICAgP8AgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAABAAgAAAAwAEgAADAAcACwAPABMAFwAbAB8AIwAnACsALwAzADcAOwA/AAABNTMVBTUzFQE1MxUxNTMVMTUzFQU1MxUhNTMVBTUzFSE1MxUFNTMVITUzFQU1MxUhNTMVBTUzFTE1MxUxNTMVAgCA/wCA/wCAgID+AIABgID9gIABgID9gIABgID9gIABgID+AICAgAQAgICAgID/AICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgAAAABEAgAAAAwAEgAADAAcACwAPABMAFwAbAB8AIwAnACsALwAzADcAOwA/AEMAAAE1MxUFNTMVMzUzFQE1MxUxNTMVMTUzFQU1MxUhNTMVBTUzFSE1MxUFNTMVITUzFQU1MxUhNTMVBTUzFTE1MxUxNTMVAYCA/wCAgID+gICAgP4AgAGAgP2AgAGAgP2AgAGAgP2AgAGAgP4AgICABACAgICAgICA/wCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAAEgCAAAADAASAAAMABwALAA8AEwAXABsAHwAjACcAKwAvADMANwA7AD8AQwBHAAABNTMVMzUzFQU1MxUzNTMVATUzFTE1MxUxNTMVBTUzFSE1MxUFNTMVITUzFQU1MxUhNTMVBTUzFSE1MxUFNTMVMTUzFTE1MxUBAICAgP4AgICA/wCAgID+AIABgID9gIABgID9gIABgID9gIABgID+AICAgAQAgICAgICAgICA/wCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAAAAASAIAAAAMABIAAAwAHAAsADwATABcAGwAfACMAJwArAC8AMwA3ADsAPwBDAEcAAAE1MxUzNTMVATUzFTE1MxUxNTMVBTUzFSE1MxUFNTMVITUzFQU1MxUhNTMVBTUzFSE1MxUFNTMVITUzFQU1MxUxNTMVMTUzFQEAgICA/oCAgID+AIABgID9gIABgID9gIABgID9gIABgID9gIABgID+AICAgAQAgICAgP8AgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAAAAkAgACAAwADAAADAAcACwAPABMAFwAbAB8AIwAAEzUzFSE1MxUFNTMVMzUzFQU1MxUFNTMVMzUzFQU1MxUhNTMVgIABgID+AICAgP8AgP8AgICA/gCAAYCAAoCAgICAgICAgICAgICAgICAgICAgICAAAAAFQAAAAADgAOAAAMABwALAA8AEwAXABsAHwAjACcAKwAvADMANwA7AD8AQwBHAEsATwBTAAABNTMVMTUzFTE1MxUzNTMVBTUzFSE1MxUFNTMVITUzFTE1MxUFNTMVMzUzFTM1MxUFNTMVMTUzFSE1MxUFNTMVITUzFQU1MxUzNTMVMTUzFTE1MxUBAICAgICA/QCAAYCA/YCAAQCAgP2AgICAgID9gICAAQCA/YCAAYCA/QCAgICAgAMAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAAAAPAIAAAAMABIAAAwAHAAsADwATABcAGwAfACMAJwArAC8AMwA3ADsAAAE1Mx0BNTMVATUzFSE1MxUFNTMVITUzFQU1MxUhNTMVBTUzFSE1MxUFNTMVITUzFQU1MxUxNTMVMTUzFQEAgID+gIABgID9gIABgID9gIABgID9gIABgID9gIABgID+AICAgAQAgICAgID/AICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAAAAAADwCAAAADAASAAAMABwALAA8AEwAXABsAHwAjACcAKwAvADMANwA7AAABNTMVBTUzFQE1MxUhNTMVBTUzFSE1MxUFNTMVITUzFQU1MxUhNTMVBTUzFSE1MxUFNTMVMTUzFTE1MxUCAID/AID+gIABgID9gIABgID9gIABgID9gIABgID9gIABgID+AICAgAQAgICAgID/AICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAAABAAgAAAAwAEgAADAAcACwAPABMAFwAbAB8AIwAnACsALwAzADcAOwA/AAABNTMVBTUzFTM1MxUBNTMVITUzFQU1MxUhNTMVBTUzFSE1MxUFNTMVITUzFQU1MxUhNTMVBTUzFTE1MxUxNTMVAYCA/wCAgID+AIABgID9gIABgID9gIABgID9gIABgID9gIABgID+AICAgAQAgICAgICAgP8AgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgAAAAAARAIAAAAMABIAAAwAHAAsADwATABcAGwAfACMAJwArAC8AMwA3ADsAPwBDAAABNTMVMzUzFQE1MxUhNTMVBTUzFSE1MxUFNTMVITUzFQU1MxUhNTMVBTUzFSE1MxUFNTMVITUzFQU1MxUxNTMVMTUzFQEAgICA/gCAAYCA/YCAAYCA/YCAAYCA/YCAAYCA/YCAAYCA/YCAAYCA/gCAgIAEAICAgID/AICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgAALAIAAAAMABIAAAwAHAAsADwATABcAGwAfACMAJwArAAABNTMVBTUzFQE1MxUhNTMVBTUzFSE1MxUFNTMVMzUzFQU1MxUHNTMVBzUzFQIAgP8AgP6AgAGAgP2AgAGAgP4AgICA/wCAgICAgAQAgICAgID/AICAgICAgICAgICAgICAgICAgICAgICAAAwBAACAAoAEAAADAAcACwAPABMAFwAbAB8AIwAnACsALwAAATUzFQc1MxUHNTMVMTUzFTE1MxUFNTMVMzUzFQU1MxUxNTMVMTUzFQU1MxUHNTMVAQCAgICAgICA/oCAgID+gICAgP6AgICAA4CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAAEwCA/wADAAQAAAMABwALAA8AEwAXABsAHwAjACcAKwAvADMANwA7AD8AQwBHAEsAAAE1MxUxNTMVBTUzFSE1MxUFNTMVITUzFQU1MxUzNTMVBTUzFSE1MxUFNTMVITUzFQU1MxUhNTMVBTUzFTM1MxUxNTMVBTUzFQc1MxUBAICA/oCAAQCA/gCAAQCA/gCAgID+gIABAID+AIABgID9gIABgID9gICAgID+AICAgAOAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAAAAAAEgCAAAADAASAAAMABwALAA8AEwAXABsAHwAjACcAKwAvADMANwA7AD8AQwBHAAABNTMdATUzFQE1MxUxNTMVMTUzHQE1MxUFNTMVMTUzFTE1MxUxNTMVBTUzFSE1MxUFNTMVITUzFQU1MxUxNTMVMTUzFTE1MxUBAICA/wCAgICA/gCAgICA/YCAAYCA/YCAAYCA/gCAgICABACAgICAgP8AgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgAASAIAAAAMABIAAAwAHAAsADwATABcAGwAfACMAJwArAC8AMwA3ADsAPwBDAEcAAAE1MxUFNTMVATUzFTE1MxUxNTMdATUzFQU1MxUxNTMVMTUzFTE1MxUFNTMVITUzFQU1MxUhNTMVBTUzFTE1MxUxNTMVMTUzFQIAgP8AgP8AgICAgP4AgICAgP2AgAGAgP2AgAGAgP4AgICAgAQAgICAgID/AICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAAAAATAIAAAAMABIAAAwAHAAsADwATABcAGwAfACMAJwArAC8AMwA3ADsAPwBDAEcASwAAATUzFQU1MxUzNTMVATUzFTE1MxUxNTMdATUzFQU1MxUxNTMVMTUzFTE1MxUFNTMVITUzFQU1MxUhNTMVBTUzFTE1MxUxNTMVMTUzFQGAgP8AgICA/oCAgICA/gCAgICA/YCAAYCA/YCAAYCA/gCAgICABACAgICAgICA/wCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAABQAgAAAAwAEgAADAAcACwAPABMAFwAbAB8AIwAnACsALwAzADcAOwA/AEMARwBLAE8AAAE1MxUzNTMVBTUzFTM1MxUBNTMVMTUzFTE1Mx0BNTMVBTUzFTE1MxUxNTMVMTUzFQU1MxUhNTMVBTUzFSE1MxUFNTMVMTUzFTE1MxUxNTMVAQCAgID+AICAgP8AgICAgP4AgICAgP2AgAGAgP2AgAGAgP4AgICAgAQAgICAgICAgICA/wCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAAAAAEgCAAAADAAQAAAMABwALAA8AEwAXABsAHwAjACcAKwAvADMANwA7AD8AQwBHAAABNTMVMzUzFQE1MxUxNTMVMTUzHQE1MxUFNTMVMTUzFTE1MxUxNTMVBTUzFSE1MxUFNTMVITUzFQU1MxUxNTMVMTUzFTE1MxUBAICAgP6AgICAgP4AgICAgP2AgAGAgP2AgAGAgP4AgICAgAOAgICAgP8AgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgAAUAIAAAAMABIAAAwAHAAsADwATABcAGwAfACMAJwArAC8AMwA3ADsAPwBDAEcASwBPAAABNTMVBTUzFTM1MxUFNTMVBTUzFTE1MxUxNTMdATUzFQU1MxUxNTMVMTUzFTE1MxUFNTMVITUzFQU1MxUhNTMVBTUzFTE1MxUxNTMVMTUzFQGAgP8AgICA/wCA/wCAgICA/gCAgICA/YCAAYCA/YCAAYCA/gCAgICABACAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAAABMAgAAAA4ADAAADAAcACwAPABMAFwAbAB8AIwAnACsALwAzADcAOwA/AEMARwBLAAABNTMVMTUzFTM1MxUFNTMVMzUzFQU1MxUxNTMVMTUzFTM1MxUFNTMVITUzFTE1MxUxNTMVBTUzFSE1MxUFNTMVMTUzFTM1MxUxNTMVAQCAgICA/wCAgID9gICAgICA/QCAAQCAgID9AIABAID+gICAgICAAoCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAAAAADQEA/wADAAMAAAMABwALAA8AEwAXABsAHwAjACcAKwAvADMAAAE1MxUxNTMVMTUzFQU1MxUHNTMVBzUzFQc1Mx0BNTMVMTUzFTE1MxUFNTMVBTUzFTE1MxUBgICAgP4AgICAgICAgICAgP8AgP8AgIACgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgAAAAAASAIAAAAMABIAAAwAHAAsADwATABcAGwAfACMAJwArAC8AMwA3ADsAPwBDAEcAAAE1Mx0BNTMVATUzFTE1MxUxNTMVBTUzFSE1MxUFNTMVMTUzFTE1MxUxNTMVMTUzFQU1MxUHNTMdATUzFTE1MxUxNTMVMTUzFQEAgID/AICAgP4AgAGAgP2AgICAgID9gICAgICAgIAEAICAgICA/wCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAAAAAABIAgAAAAwAEgAADAAcACwAPABMAFwAbAB8AIwAnACsALwAzADcAOwA/AEMARwAAATUzFQU1MxUBNTMVMTUzFTE1MxUFNTMVITUzFQU1MxUxNTMVMTUzFTE1MxUxNTMVBTUzFQc1Mx0BNTMVMTUzFTE1MxUxNTMVAgCA/wCA/wCAgID+AIABgID9gICAgICA/YCAgICAgICABACAgICAgP8AgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgAAAEwCAAAADAASAAAMABwALAA8AEwAXABsAHwAjACcAKwAvADMANwA7AD8AQwBHAEsAAAE1MxUFNTMVMzUzFQE1MxUxNTMVMTUzFQU1MxUhNTMVBTUzFTE1MxUxNTMVMTUzFTE1MxUFNTMVBzUzHQE1MxUxNTMVMTUzFTE1MxUBgID/AICAgP6AgICA/gCAAYCA/YCAgICAgP2AgICAgICAgAQAgICAgICAgP8AgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgAAAAAASAIAAAAMABAAAAwAHAAsADwATABcAGwAfACMAJwArAC8AMwA3ADsAPwBDAEcAAAE1MxUzNTMVATUzFTE1MxUxNTMVBTUzFSE1MxUFNTMVMTUzFTE1MxUxNTMVMTUzFQU1MxUHNTMdATUzFTE1MxUxNTMVMTUzFQEAgICA/oCAgID+AIABgID9gICAgICA/YCAgICAgICAA4CAgICA/wCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAAAAAAAoBAAAAAoAEAAADAAcACwAPABMAFwAbAB8AIwAnAAABNTMdATUzFQE1MxUxNTMVBzUzFQc1MxUHNTMVBTUzFTE1MxUxNTMVAQCAgP8AgICAgICAgID/AICAgAOAgICAgID/AICAgICAgICAgICAgICAgICAgICAAAoBAAAAAoAEAAADAAcACwAPABMAFwAbAB8AIwAnAAABNTMVBTUzFQE1MxUxNTMVBzUzFQc1MxUHNTMVBTUzFTE1MxUxNTMVAgCA/wCA/wCAgICAgICAgP8AgICAA4CAgICAgP8AgICAgICAgICAgICAgICAgICAgIAAAAALAQAAAAKABAAAAwAHAAsADwATABcAGwAfACMAJwArAAABNTMVBTUzFTM1MxUBNTMVMTUzFQc1MxUHNTMVBzUzFQU1MxUxNTMVMTUzFQGAgP8AgICA/oCAgICAgICAgP8AgICAA4CAgICAgICA/wCAgICAgICAgICAgICAgICAgICAgAAKAQAAAAKAA4AAAwAHAAsADwATABcAGwAfACMAJwAAATUzFTM1MxUBNTMVMTUzFQc1MxUHNTMVBzUzFQU1MxUxNTMVMTUzFQEAgICA/oCAgICAgICAgP8AgICAAwCAgICA/wCAgICAgICAgICAgICAgICAgICAgAARAIAAAAMABAAAAwAHAAsADwATABcAGwAfACMAJwArAC8AMwA3ADsAPwBDAAABNTMVMzUzFQU1MxUFNTMVMzUzHQE1MxUFNTMVMTUzFTE1MxUxNTMVBTUzFSE1MxUFNTMVITUzFQU1MxUxNTMVMTUzFQEAgICA/wCA/wCAgICA/gCAgICA/YCAAYCA/YCAAYCA/gCAgIADgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAAAAAEACAAAADAAQAAAMABwALAA8AEwAXABsAHwAjACcAKwAvADMANwA7AD8AAAE1MxUzNTMVBTUzFTM1MxUBNTMVMTUzFTE1MxUxNTMVBTUzFSE1MxUFNTMVITUzFQU1MxUhNTMVBTUzFSE1MxUBAICAgP4AgICA/oCAgICA/gCAAYCA/YCAAYCA/YCAAYCA/YCAAYCAA4CAgICAgICAgID/AICAgICAgICAgICAgICAgICAgICAgICAgICAgIAAAAAADgCAAAADAAQAAAMABwALAA8AEwAXABsAHwAjACcAKwAvADMANwAAATUzHQE1MxUBNTMVMTUzFTE1MxUFNTMVITUzFQU1MxUhNTMVBTUzFSE1MxUFNTMVMTUzFTE1MxUBAICA/wCAgID+AIABgID9gIABgID9gIABgID+AICAgAOAgICAgID/AICAgICAgICAgICAgICAgICAgICAgICAgICAgIAAAAAADgCAAAADAAQAAAMABwALAA8AEwAXABsAHwAjACcAKwAvADMANwAAATUzFQU1MxUBNTMVMTUzFTE1MxUFNTMVITUzFQU1MxUhNTMVBTUzFSE1MxUFNTMVMTUzFTE1MxUCAID/AID/AICAgP4AgAGAgP2AgAGAgP2AgAGAgP4AgICAA4CAgICAgP8AgICAgICAgICAgICAgICAgICAgICAgICAgICAgAAADwCAAAADAAQAAAMABwALAA8AEwAXABsAHwAjACcAKwAvADMANwA7AAABNTMVBTUzFTM1MxUBNTMVMTUzFTE1MxUFNTMVITUzFQU1MxUhNTMVBTUzFSE1MxUFNTMVMTUzFTE1MxUBgID/AICAgP6AgICA/gCAAYCA/YCAAYCA/YCAAYCA/gCAgIADgICAgICAgID/AICAgICAgICAgICAgICAgICAgICAgICAgICAgIAAAAAAEACAAAADAAQAAAMABwALAA8AEwAXABsAHwAjACcAKwAvADMANwA7AD8AAAE1MxUzNTMVBTUzFTM1MxUBNTMVMTUzFTE1MxUFNTMVITUzFQU1MxUhNTMVBTUzFSE1MxUFNTMVMTUzFTE1MxUBAICAgP4AgICA/wCAgID+AIABgID9gIABgID9gIABgID+AICAgAOAgICAgICAgICA/wCAgICAgICAgICAgICAgICAgICAgICAgICAgICAAAAOAIAAAAMAA4AAAwAHAAsADwATABcAGwAfACMAJwArAC8AMwA3AAABNTMVMzUzFQE1MxUxNTMVMTUzFQU1MxUhNTMVBTUzFSE1MxUFNTMVITUzFQU1MxUxNTMVMTUzFQEAgICA/oCAgID+AIABgID9gIABgID9gIABgID+AICAgAMAgICAgP8AgICAgICAgICAgICAgICAgICAgICAgICAgICAgAAAAAAHAIAAgAMAAwAAAwAHAAsADwATABcAGwAAATUzFQE1MxUxNTMVMTUzFTE1MxUxNTMVATUzFQGAgP6AgICAgID+gIACgICA/wCAgICAgICAgICA/wCAgAAAEACAAIADgAOAAAMABwALAA8AEwAXABsAHwAjACcAKwAvADMANwA7AD8AAAE1MxUxNTMVMzUzFQU1MxUhNTMVBTUzFTM1MxUxNTMVBTUzFTE1MxUzNTMVBTUzFSE1MxUFNTMVMzUzFTE1MxUBgICAgID9gIABAID+AICAgID+AICAgID+AIABAID9gICAgIADAICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAAAA0AgAAAAwAEAAADAAcACwAPABMAFwAbAB8AIwAnACsALwAzAAABNTMdATUzFQE1MxUhNTMVBTUzFSE1MxUFNTMVITUzFQU1MxUhNTMVBTUzFTE1MxUxNTMVAQCAgP6AgAGAgP2AgAGAgP2AgAGAgP2AgAGAgP4AgICAA4CAgICAgP8AgICAgICAgICAgICAgICAgICAgICAgICAgIAAAAANAIAAAAMABAAAAwAHAAsADwATABcAGwAfACMAJwArAC8AMwAAATUzFQU1MxUBNTMVITUzFQU1MxUhNTMVBTUzFSE1MxUFNTMVITUzFQU1MxUxNTMVMTUzFQIAgP8AgP6AgAGAgP2AgAGAgP2AgAGAgP2AgAGAgP4AgICAA4CAgICAgP8AgICAgICAgICAgICAgICAgICAgICAgICAgIAADgCAAAADAAQAAAMABwALAA8AEwAXABsAHwAjACcAKwAvADMANwAAATUzFQU1MxUzNTMVATUzFSE1MxUFNTMVITUzFQU1MxUhNTMVBTUzFSE1MxUFNTMVMTUzFTE1MxUBgID/AICAgP4AgAGAgP2AgAGAgP2AgAGAgP2AgAGAgP4AgICAA4CAgICAgICA/wCAgICAgICAgICAgICAgICAgICAgICAgICAgAAAAA0AgAAAAwADgAADAAcACwAPABMAFwAbAB8AIwAnACsALwAzAAABNTMVMzUzFQE1MxUhNTMVBTUzFSE1MxUFNTMVITUzFQU1MxUhNTMVBTUzFTE1MxUxNTMVAQCAgID+AIABgID9gIABgID9gIABgID9gIABgID+AICAgAMAgICAgP8AgICAgICAgICAgICAgICAgICAgICAgICAgIAAAAAVAID/AAMABIAAAwAHAAsADwATABcAGwAfACMAJwArAC8AMwA3ADsAPwBDAEcASwBPAFMAAAE1MxUFNTMVATUzFSE1MxUFNTMVITUzFQU1MxUhNTMVBTUzFSE1MxUFNTMVITUzFQU1MxUxNTMVMTUzFTE1MxUHNTMVBTUzFTE1MxUxNTMVMTUzFQIAgP8AgP6AgAGAgP2AgAGAgP2AgAGAgP2AgAGAgP2AgAGAgP4AgICAgICA/YCAgICABACAgICAgP8AgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAAAAAEgCA/4ADAAQAAAMABwALAA8AEwAXABsAHwAjACcAKwAvADMANwA7AD8AQwBHAAATNTMVBzUzFQc1MxUxNTMVMTUzFTE1MxUFNTMVITUzFQU1MxUhNTMVBTUzFSE1MxUFNTMVMTUzFTE1MxUxNTMVBTUzFQc1MxWAgICAgICAgID+AIABgID9gIABgID9gIABgID9gICAgID+AICAgAOAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAAFACA/wADAAQAAAMABwALAA8AEwAXABsAHwAjACcAKwAvADMANwA7AD8AQwBHAEsATwAAATUzFTM1MxUBNTMVITUzFQU1MxUhNTMVBTUzFSE1MxUFNTMVITUzFQU1MxUhNTMVBTUzFTE1MxUxNTMVMTUzFQc1MxUFNTMVMTUzFTE1MxUBAICAgP4AgAGAgP2AgAGAgP2AgAGAgP2AgAGAgP2AgAGAgP4AgICAgICA/gCAgIADgICAgID/AICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAAAAwBAAAAAoADgAADAAcACwAPABMAFwAbAB8AIwAnACsALwAAATUzFTE1MxUxNTMVATUzFTE1MxUxNTMVATUzFTE1MxUxNTMVATUzFTE1MxUxNTMVAQCAgID+gICAgP6AgICA/oCAgIADAICAgICAgP8AgICAgICA/wCAgICAgID/AICAgICAgAAMAQAAAAKAA4AAAwAHAAsADwATABcAGwAfACMAJwArAC8AAAE1MxUxNTMVMTUzFQE1MxUxNTMVMTUzFQE1MxUxNTMVMTUzFQE1MxUxNTMVMTUzFQEAgICA/oCAgID+gICAgP6AgICAAwCAgICAgID/AICAgICAgP8AgICAgICA/wCAgICAgIAADAEAAAACgAOAAAMABwALAA8AEwAXABsAHwAjACcAKwAvAAABNTMVMTUzFTE1MxUBNTMVMTUzFTE1MxUBNTMVMTUzFTE1MxUBNTMVMTUzFTE1MxUBAICAgP6AgICA/oCAgID+gICAgAMAgICAgICA/wCAgICAgID/AICAgICAgP8AgICAgICAAAwBAAAAAoADgAADAAcACwAPABMAFwAbAB8AIwAnACsALwAAATUzFTE1MxUxNTMVATUzFTE1MxUxNTMVATUzFTE1MxUxNTMVATUzFTE1MxUxNTMVAQCAgID+gICAgP6AgICA/oCAgIADAICAgICAgP8AgICAgICA/wCAgICAgID/AICAgICAgAAMAQAAAAKAA4AAAwAHAAsADwATABcAGwAfACMAJwArAC8AAAE1MxUxNTMVMTUzFQE1MxUxNTMVMTUzFQE1MxUxNTMVMTUzFQE1MxUxNTMVMTUzFQEAgICA/oCAgID+gICAgP6AgICAAwCAgICAgID/AICAgICAgP8AgICAgICA/wCAgICAgIAADAEAAAACgAOAAAMABwALAA8AEwAXABsAHwAjACcAKwAvAAABNTMVMTUzFTE1MxUBNTMVMTUzFTE1MxUBNTMVMTUzFTE1MxUBNTMVMTUzFTE1MxUBAICAgP6AgICA/oCAgID+gICAgAMAgICAgICA/wCAgICAgID/AICAgICAgP8AgICAgICAAAwBAAAAAoADgAADAAcACwAPABMAFwAbAB8AIwAnACsALwAAATUzFTE1MxUxNTMVATUzFTE1MxUxNTMVATUzFTE1MxUxNTMVATUzFTE1MxUxNTMVAQCAgID+gICAgP6AgICA/oCAgIADAICAgICAgP8AgICAgICA/wCAgICAgID/AICAgICAgAAMAQAAAAKAA4AAAwAHAAsADwATABcAGwAfACMAJwArAC8AAAE1MxUxNTMVMTUzFQE1MxUxNTMVMTUzFQE1MxUxNTMVMTUzFQE1MxUxNTMVMTUzFQEAgICA/oCAgID+gICAgP6AgICAAwCAgICAgID/AICAgICAgP8AgICAgICA/wCAgICAgIAADAEAAAACgAOAAAMABwALAA8AEwAXABsAHwAjACcAKwAvAAABNTMVMTUzFTE1MxUBNTMVMTUzFTE1MxUBNTMVMTUzFTE1MxUBNTMVMTUzFTE1MxUBAICAgP6AgICA/oCAgID+gICAgAMAgICAgICA/wCAgICAgID/AICAgICAgP8AgICAgICAAAwBAAAAAoADgAADAAcACwAPABMAFwAbAB8AIwAnACsALwAAATUzFTE1MxUxNTMVATUzFTE1MxUxNTMVATUzFTE1MxUxNTMVATUzFTE1MxUxNTMVAQCAgID+gICAgP6AgICA/oCAgIADAICAgICAgP8AgICAgICA/wCAgICAgID/AICAgICAgAAMAQAAAAKAA4AAAwAHAAsADwATABcAGwAfACMAJwArAC8AAAE1MxUxNTMVMTUzFQE1MxUxNTMVMTUzFQE1MxUxNTMVMTUzFQE1MxUxNTMVMTUzFQEAgICA/oCAgID+gICAgP6AgICAAwCAgICAgID/AICAgICAgP8AgICAgICA/wCAgICAgIAADAEAAAACgAOAAAMABwALAA8AEwAXABsAHwAjACcAKwAvAAABNTMVMTUzFTE1MxUBNTMVMTUzFTE1MxUBNTMVMTUzFTE1MxUBNTMVMTUzFTE1MxUBAICAgP6AgICA/oCAgID+gICAgAMAgICAgICA/wCAgICAgID/AICAgICAgP8AgICAgICAAAwBAAAAAoADgAADAAcACwAPABMAFwAbAB8AIwAnACsALwAAATUzFTE1MxUxNTMVATUzFTE1MxUxNTMVATUzFTE1MxUxNTMVATUzFTE1MxUxNTMVAQCAgID+gICAgP6AgICA/oCAgIADAICAgICAgP8AgICAgICA/wCAgICAgID/AICAgICAgAAMAQAAAAKAA4AAAwAHAAsADwATABcAGwAfACMAJwArAC8AAAE1MxUxNTMVMTUzFQE1MxUxNTMVMTUzFQE1MxUxNTMVMTUzFQE1MxUxNTMVMTUzFQEAgICA/oCAgID+gICAgP6AgICAAwCAgICAgID/AICAgICAgP8AgICAgICA/wCAgICAgIAADAEAAAACgAOAAAMABwALAA8AEwAXABsAHwAjACcAKwAvAAABNTMVMTUzFTE1MxUBNTMVMTUzFTE1MxUBNTMVMTUzFTE1MxUBNTMVMTUzFTE1MxUBAICAgP6AgICA/oCAgID+gICAgAMAgICAgICA/wCAgICAgID/AICAgICAgP8AgICAgICAAAwBAAAAAoADgAADAAcACwAPABMAFwAbAB8AIwAnACsALwAAATUzFTE1MxUxNTMVATUzFTE1MxUxNTMVATUzFTE1MxUxNTMVATUzFTE1MxUxNTMVAQCAgID+gICAgP6AgICA/oCAgIADAICAgICAgP8AgICAgICA/wCAgICAgID/AICAgICAgAAMAQAAAAKAA4AAAwAHAAsADwATABcAGwAfACMAJwArAC8AAAE1MxUxNTMVMTUzFQE1MxUxNTMVMTUzFQE1MxUxNTMVMTUzFQE1MxUxNTMVMTUzFQEAgICA/oCAgID+gICAgP6AgICAAwCAgICAgID/AICAgICAgP8AgICAgICA/wCAgICAgIAADAEAAAACgAOAAAMABwALAA8AEwAXABsAHwAjACcAKwAvAAABNTMVMTUzFTE1MxUBNTMVMTUzFTE1MxUBNTMVMTUzFTE1MxUBNTMVMTUzFTE1MxUBAICAgP6AgICA/oCAgID+gICAgAMAgICAgICA/wCAgICAgID/AICAgICAgP8AgICAgICAAAwBAAAAAoADgAADAAcACwAPABMAFwAbAB8AIwAnACsALwAAATUzFTE1MxUxNTMVATUzFTE1MxUxNTMVATUzFTE1MxUxNTMVATUzFTE1MxUxNTMVAQCAgID+gICAgP6AgICA/oCAgIADAICAgICAgP8AgICAgICA/wCAgICAgID/AICAgICAgAAMAQAAAAKAA4AAAwAHAAsADwATABcAGwAfACMAJwArAC8AAAE1MxUxNTMVMTUzFQE1MxUxNTMVMTUzFQE1MxUxNTMVMTUzFQE1MxUxNTMVMTUzFQEAgICA/oCAgID+gICAgP6AgICAAwCAgICAgID/AICAgICAgP8AgICAgICA/wCAgICAgIAADAEAAAACgAOAAAMABwALAA8AEwAXABsAHwAjACcAKwAvAAABNTMVMTUzFTE1MxUBNTMVMTUzFTE1MxUBNTMVMTUzFTE1MxUBNTMVMTUzFTE1MxUBAICAgP6AgICA/oCAgID+gICAgAMAgICAgICA/wCAgICAgID/AICAgICAgP8AgICAgICAAAwBAAAAAoADgAADAAcACwAPABMAFwAbAB8AIwAnACsALwAAATUzFTE1MxUxNTMVATUzFTE1MxUxNTMVATUzFTE1MxUxNTMVATUzFTE1MxUxNTMVAQCAgID+gICAgP6AgICA/oCAgIADAICAgICAgP8AgICAgICA/wCAgICAgID/AICAgICAgAAMAQAAAAKAA4AAAwAHAAsADwATABcAGwAfACMAJwArAC8AAAE1MxUxNTMVMTUzFQE1MxUxNTMVMTUzFQE1MxUxNTMVMTUzFQE1MxUxNTMVMTUzFQEAgICA/oCAgID+gICAgP6AgICAAwCAgICAgID/AICAgICAgP8AgICAgICA/wCAgICAgIAADAEAAAACgAOAAAMABwALAA8AEwAXABsAHwAjACcAKwAvAAABNTMVMTUzFTE1MxUBNTMVMTUzFTE1MxUBNTMVMTUzFTE1MxUBNTMVMTUzFTE1MxUBAICAgP6AgICA/oCAgID+gICAgAMAgICAgICA/wCAgICAgID/AICAgICAgP8AgICAgICAAAwBAAAAAoADgAADAAcACwAPABMAFwAbAB8AIwAnACsALwAAATUzFTE1MxUxNTMVATUzFTE1MxUxNTMVATUzFTE1MxUxNTMVATUzFTE1MxUxNTMVAQCAgID+gICAgP6AgICA/oCAgIADAICAgICAgP8AgICAgICA/wCAgICAgID/AICAgICAgAAMAQAAAAKAA4AAAwAHAAsADwATABcAGwAfACMAJwArAC8AAAE1MxUxNTMVMTUzFQE1MxUxNTMVMTUzFQE1MxUxNTMVMTUzFQE1MxUxNTMVMTUzFQEAgICA/oCAgID+gICAgP6AgICAAwCAgICAgID/AICAgICAgP8AgICAgICA/wCAgICAgIAADAEAAAACgAOAAAMABwALAA8AEwAXABsAHwAjACcAKwAvAAABNTMVMTUzFTE1MxUBNTMVMTUzFTE1MxUBNTMVMTUzFTE1MxUBNTMVMTUzFTE1MxUBAICAgP6AgICA/oCAgID+gICAgAMAgICAgICA/wCAgICAgID/AICAgICAgP8AgICAgICAAAwBAAAAAoADgAADAAcACwAPABMAFwAbAB8AIwAnACsALwAAATUzFTE1MxUxNTMVATUzFTE1MxUxNTMVATUzFTE1MxUxNTMVATUzFTE1MxUxNTMVAQCAgID+gICAgP6AgICA/oCAgIADAICAgICAgP8AgICAgICA/wCAgICAgID/AICAgICAgAAMAQAAAAKAA4AAAwAHAAsADwATABcAGwAfACMAJwArAC8AAAE1MxUxNTMVMTUzFQE1MxUxNTMVMTUzFQE1MxUxNTMVMTUzFQE1MxUxNTMVMTUzFQEAgICA/oCAgID+gICAgP6AgICAAwCAgICAgID/AICAgICAgP8AgICAgICA/wCAgICAgIAADAEAAAACgAOAAAMABwALAA8AEwAXABsAHwAjACcAKwAvAAABNTMVMTUzFTE1MxUBNTMVMTUzFTE1MxUBNTMVMTUzFTE1MxUBNTMVMTUzFTE1MxUBAICAgP6AgICA/oCAgID+gICAgAMAgICAgICA/wCAgICAgID/AICAgICAgP8AgICAgICAAAwBAAAAAoADgAADAAcACwAPABMAFwAbAB8AIwAnACsALwAAATUzFTE1MxUxNTMVATUzFTE1MxUxNTMVATUzFTE1MxUxNTMVATUzFTE1MxUxNTMVAQCAgID+gICAgP6AgICA/oCAgIADAICAgICAgP8AgICAgICA/wCAgICAgID/AICAgICAgAAMAQAAAAKAA4AAAwAHAAsADwATABcAGwAfACMAJwArAC8AAAE1MxUxNTMVMTUzFQE1MxUxNTMVMTUzFQE1MxUxNTMVMTUzFQE1MxUxNTMVMTUzFQEAgICA/oCAgID+gICAgP6AgICAAwCAgICAgID/AICAgICAgP8AgICAgICA/wCAgICAgIAADAEAAAACgAOAAAMABwALAA8AEwAXABsAHwAjACcAKwAvAAABNTMVMTUzFTE1MxUBNTMVMTUzFTE1MxUBNTMVMTUzFTE1MxUBNTMVMTUzFTE1MxUBAICAgP6AgICA/oCAgID+gICAgAMAgICAgICA/wCAgICAgID/AICAgICAgP8AgICAgICAAAAAAABEAIIAggDEAVQBuAIQAoYCrALwAzQDdgOsA9wD+gQWBEwEwAUQBW4FxAYWBngG5AcqB5gIBAg2CHwIqgjiCRAJXgoACnQK6gs4C6IMCAxcDMQNNA16DcAOIA5mDt4PXA/GECgQohEMEWQRqhIQEmYS3hM0E34T2BQuFGAUthTaFPgVHhV4Fd4WIhaKFuIXLhekGAIYQBiIGNwZFBlyGcYaGhqCGuobJhtyG7wcDBxMHKoc6h1WHaQd9h4wHoIewh8yH0ofmB/CH9ggHiB4IJAg8CFWIXoh+iJaInIiiiK0It4jIiM4I1wjeiO+JAokLiSeJOYlMiVmJbgmFCZaJrIm3Cc6J0wnyigKKEoodCiKKQQpIilWKaQp1ioQKioqiir+KxorMitkK44rzixGLLAtMC1yLdouQi6wLyIvljAKMJAw8DFWMb4yKjKWMt4zJjN0M8A0ODSoNQY1ZjXKNjQ2njbYN043qjgGOGg4zjkUOVo5zDowOpY7ADtwO9Q8RDyuPPo9Xj3CPiw+kD7MPwo/TD+IP+pASkCeQPJBTEGqQf5CKkKGQtZDJkN8Q8xERkSsRSBFZEWoRexGMEZ0RrhG/EdAR4RHyEgMSFBIlEjYSRxJYEmkSehKLEpwSrRK+Es8S4BLxEwITExMkEzUTRhNXE2gTeQAAAAAACEBkgAAAAAAAAAAAA4AAAAAAAAAAAABABwADgAAAAAAAAACAA4AKgAAAAAAAAADABwAOAAAAAAAAAAEABwAVAAAAAAAAAAFABQAcAAAAAAAAAAGABwAhAABAAAAAAAAAC4AoAABAAAAAAABAA4AzgABAAAAAAACAAcA3AABAAAAAAADABoA4wABAAAAAAAEAA4A/QABAAAAAAAFACIBCwABAAAAAAAGAA4BLQABAAAAAAAHACYBOwABAAAAAAAIAAQBYQABAAAAAAAJAAQBZQABAAAAAAAQAA4BaQABAAAAAAARAAcBdwABAAAAAAASAA4BfgADAAEECQAAAFwBjAADAAEECQABABwB6AADAAEECQACAA4CBAADAAEECQADADQCEgADAAEECQAEABwCRgADAAEECQAFAEQCYgADAAEECQAGABwCpgADAAEECQAHAEwCwgADAAEECQAIAAgDDgADAAEECQAJAAgDFgADAAEECQAQABwDHgADAAEECQARAA4DOgADAAEECQASABwDSABiAHkAIAB0AG8AYgBpAEMAbwBkAGkAbgBnAEYAbwBuAHQAVABvAGIAaQBSAGUAZwB1AGwAYQByAEMAbwBkAGkAbgBnAEYAbwBuAHQAVABvAGIAaQBDAG8AZABpAG4AZwBGAG8AbgB0AFQAbwBiAGkAMgAwADAANgAvADAANgAvADAANwBDAG8AZABpAG4AZwBGAG8AbgB0AFQAbwBiAGlDb3B5cmlnaHQgKGMpIHRvYmksIDIwMDYuIEFsbCByaWdodHMgcmVzZXJ2ZWQuQ29kaW5nRm9udFRvYmlSZWd1bGFydG9iaTogQ29kaW5nRm9udFRvYmk6IDIwMDZDb2RpbmdGb250VG9iaVZlcnNpb24gMS4wMDAgMjAwNiBpbml0aWFsIHJlbGVhc2VDb2RpbmdGb250VG9iaUNvZGluZ0ZvbnRUb2JpIGlzIGEgdHJhZGVtYXJrIG9mIHRvYmkudG9iaXRvYmlDb2RpbmdGb250VG9iaVJlZ3VsYXJDb2RpbmdGb250VG9iaQBDAG8AcAB5AHIAaQBnAGgAdAAgACgAYwApACAAdABvAGIAaQAsACAAMgAwADAANgAuACAAQQBsAGwAIAByAGkAZwBoAHQAcwAgAHIAZQBzAGUAcgB2AGUAZAAuAEMAbwBkAGkAbgBnAEYAbwBuAHQAVABvAGIAaQBSAGUAZwB1AGwAYQByAHQAbwBiAGkAOgAgAEMAbwBkAGkAbgBnAEYAbwBuAHQAVABvAGIAaQA6ACAAMgAwADAANgBDAG8AZABpAG4AZwBGAG8AbgB0AFQAbwBiAGkAVgBlAHIAcwBpAG8AbgAgADEALgAwADAAMAAgADIAMAAwADYAIABpAG4AaQB0AGkAYQBsACAAcgBlAGwAZQBhAHMAZQBDAG8AZABpAG4AZwBGAG8AbgB0AFQAbwBiAGkAQwBvAGQAaQBuAGcARgBvAG4AdABUAG8AYgBpACAAaQBzACAAYQAgAHQAcgBhAGQAZQBtAGEAcgBrACAAbwBmACAAdABvAGIAaQAuAHQAbwBiAGkAdABvAGIAaQBDAG8AZABpAG4AZwBGAG8AbgB0AFQAbwBiAGkAUgBlAGcAdQBsAGEAcgBDAG8AZABpAG4AZwBGAG8AbgB0AFQAbwBiAGkAAAACAAAAAAAA/sAAgAAAAAEAAAAAAAAAAAAAAAAAAAAAAPwAAAECAAQAAwAFAAYABwAIAAkACgALAAwADQAOAA8AEAARABIAEwAUABUAFgAXABgAGQAaABsAHAAdAB4AHwAgACEAIgAjACQAJQAmACcAKAApACoAKwAsAC0ALgAvADAAMQAyADMANAA1ADYANwA4ADkAOgA7ADwAPQA+AD8AQABBAEIAQwBEAEUARgBHAEgASQBKAEsATABNAE4ATwBQAFEAUgBTAFQAVQBWAFcAWABZAFoAWwBcAF0AXgBfAGAAYQEDAQQBBQEGAQcBCAEJAQoBCwEMAQ0BDgEPARABEQESARMBFAEVARYBFwEYARkBGgEbARwBHQCjAIQAhQC9AJYA6ACGAI4AiwCdAKkApADvAIoA2gCDAJMA8gDzAI0AlwCIAMMA3gDxAJ4AqgD1APQA9gCiAK0AyQDHAK4AYgBjAJAAZADLAGUAyADKAM8AzADNAM4A6QBmANMA0ADRAK8AZwDwAJEA1gDUANUAaADrAO0AiQBqAGkAawBtAGwAbgCgAG8AcQBwAHIAcwB1AHQAdgB3AOoAeAB6AHkAewB9AHwAuAChAH8AfgCAAIEA7ADuALoBHgEfASABIQEiASMBJAElASYBJwEoASkBKgErASwBLQEuAS8BMAExATIBMwE0ATUBNgE3ATgBOQE6ATsBPAE9AKwFLm51bGwOdW5pY29kZSMweDAwODAOdW5pY29kZSMweDAwODIOdW5pY29kZSMweDAwODMOdW5pY29kZSMweDAwODQOdW5pY29kZSMweDAwODUOdW5pY29kZSMweDAwODYOdW5pY29kZSMweDAwODcOdW5pY29kZSMweDAwODgOdW5pY29kZSMweDAwODkOdW5pY29kZSMweDAwOGEOdW5pY29kZSMweDAwOGIOdW5pY29kZSMweDAwOGMOdW5pY29kZSMweDAwOGUOdW5pY29kZSMweDAwOTEOdW5pY29kZSMweDAwOTIOdW5pY29kZSMweDAwOTMOdW5pY29kZSMweDAwOTQOdW5pY29kZSMweDAwOTUOdW5pY29kZSMweDAwOTYOdW5pY29kZSMweDAwOTcOdW5pY29kZSMweDAwOTgOdW5pY29kZSMweDAwOTkOdW5pY29kZSMweDAwOWEOdW5pY29kZSMweDAwOWIOdW5pY29kZSMweDAwOWMOdW5pY29kZSMweDAwOWUOdW5pY29kZSMweDAwOWYOdW5pY29kZSMweDAwMDEOdW5pY29kZSMweDAwMDIOdW5pY29kZSMweDAwMDMOdW5pY29kZSMweDAwMDQOdW5pY29kZSMweDAwMDUOdW5pY29kZSMweDAwMDYOdW5pY29kZSMweDAwMDcOdW5pY29kZSMweDAwMDgOdW5pY29kZSMweDAwMDkOdW5pY29kZSMweDAwMGEOdW5pY29kZSMweDAwMGIOdW5pY29kZSMweDAwMGMOdW5pY29kZSMweDAwMGQOdW5pY29kZSMweDAwMGUOdW5pY29kZSMweDAwMGYOdW5pY29kZSMweDAwMTAOdW5pY29kZSMweDAwMTEOdW5pY29kZSMweDAwMTIOdW5pY29kZSMweDAwMTMOdW5pY29kZSMweDAwMTQOdW5pY29kZSMweDAwMTUOdW5pY29kZSMweDAwMTYOdW5pY29kZSMweDAwMTcOdW5pY29kZSMweDAwMTgOdW5pY29kZSMweDAwMTkOdW5pY29kZSMweDAwMWEOdW5pY29kZSMweDAwMWIOdW5pY29kZSMweDAwMWMOdW5pY29kZSMweDAwMWQOdW5pY29kZSMweDAwMWUOdW5pY29kZSMweDAwMWYGZGVsZXRlAAAAAAAAAwAIAAIAEAAB//8AAwAAAAEAAQEBAQEADAD4CP8ACAAF//0ACQAG//0ACgAH//wACwAH//wADAAI//wADQAJ//sADgAJ//sADwAK//sAEAAK//sAEQAL//oAEgAM//oAEwAM//oAFAAN//kAFQAO//kAFgAO//kAFwAP//gAGAAP//gAGQAQ//gAGgAR//cAGwAR//cAHAAS//cAHQAT//YAHgAT//YAHwAU//YAIAAU//YAIQAV//UAIgAW//UAIwAW//UAJAAX//QAJQAY//QAJgAY//QAJwAZ//MAKAAZ//MAKQAa//MAKgAb//IAKwAb//IALAAc//IALQAd//EALgAd//EALwAe//EAMAAe//EAMQAf//AAMgAg//AAMwAg//AANAAh/+8ANQAi/+8ANgAi/+8ANwAj/+4AOAAj/+4AOQAk/+4AOgAl/+0AOwAl/+0APAAm/+0APQAn/+wAPgAn/+wAPwAo/+wAQAAo/+wAQQAp/+sAQgAq/+sAQwAq/+sARAAr/+oARQAs/+oARgAs/+oARwAt/+kASAAt/+kASQAu/+kASgAv/+gASwAv/+gATAAw/+gATQAx/+cATgAx/+cATwAy/+cAUAAy/+cAUQAz/+YAUgA0/+YAUwA0/+YAVAA1/+UAVQA2/+UAVgA2/+UAVwA3/+QAWAA3/+QAWQA4/+QAWgA5/+MAWwA5/+MAXAA6/+MAXQA7/+IAXgA7/+IAXwA8/+IAYAA8/+IAYQA9/+EAYgA+/+EAYwA+/+EAZAA//+AAZQBA/+AAZgBA/+AAZwBB/98AaABB/98AaQBC/98AagBD/94AawBD/94AbABE/94AbQBF/90AbgBF/90AbwBG/90AcABG/90AcQBH/9wAcgBI/9wAcwBI/9wAdABJ/9sAdQBK/9sAdgBK/9sAdwBL/9oAeABL/9oAeQBM/9oAegBN/9kAewBN/9kAfABO/9kAfQBP/9gAfgBP/9gAfwBQ/9gAgABQ/9gAgQBR/9cAggBS/9cAgwBS/9cAhABT/9YAhQBU/9YAhgBU/9YAhwBV/9UAiABV/9UAiQBW/9UAigBX/9QAiwBX/9QAjABY/9QAjQBZ/9MAjgBZ/9MAjwBa/9MAkABa/9MAkQBb/9IAkgBc/9IAkwBc/9IAlABd/9EAlQBe/9EAlgBe/9EAlwBf/9AAmABf/9AAmQBg/9AAmgBh/88AmwBh/88AnABi/88AnQBj/84AngBj/84AnwBk/84AoABk/84AoQBl/80AogBm/80AowBm/80ApABn/8wApQBo/8wApgBo/8wApwBp/8sAqABp/8sAqQBq/8sAqgBr/8oAqwBr/8oArABs/8oArQBt/8kArgBt/8kArwBu/8kAsABu/8kAsQBv/8gAsgBw/8gAswBw/8gAtABx/8cAtQBy/8cAtgBy/8cAtwBz/8YAuABz/8YAuQB0/8YAugB1/8UAuwB1/8UAvAB2/8UAvQB3/8QAvgB3/8QAvwB4/8QAwAB4/8QAwQB5/8MAwgB6/8MAwwB6/8MAxAB7/8IAxQB8/8IAxgB8/8IAxwB9/8EAyAB9/8EAyQB+/8EAygB//8AAywB//8AAzACA/8AAzQCB/78AzgCB/78AzwCC/78A0ACC/78A0QCD/74A0gCE/74A0wCE/74A1ACF/70A1QCG/70A1gCG/70A1wCH/7wA2ACH/7wA2QCI/7wA2gCJ/7sA2wCJ/7sA3ACK/7sA3QCL/7oA3gCL/7oA3wCM/7oA4ACM/7oA4QCN/7kA4gCO/7kA4wCO/7kA5ACP/7gA5QCQ/7gA5gCQ/7gA5wCR/7cA6ACR/7cA6QCS/7cA6gCT/7YA6wCT/7YA7ACU/7YA7QCV/7UA7gCV/7UA7wCW/7UA8ACW/7UA8QCX/7QA8gCY/7QA8wCY/7QA9ACZ/7MA9QCa/7MA9gCa/7MA9wCb/7IA+ACb/7IA+QCc/7IA+gCd/7EA+wCd/7EA/ACe/7EA/QCf/7AA/gCf/7AA/wCg/7A=\"),\r\n\t\t\r\n\t}\r\n\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n}\r\n","package no.logic.kha.uix.scene.styles;\r\n\r\nimport kha.Color;\r\nimport kha.Font;\r\nimport no.logic.kha.uix.assets.EmbeddedAssets;\r\n\r\nclass Styles\r\n{\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\t\r\n\tstatic public var defaultFont\t\t: Font \t\t\t\t\t\t= EmbeddedAssets.fonts.cft;\r\n\tstatic public var defaultFontSize\t: Int \t\t\t\t\t\t= 16;\r\n\tstatic public var fontStyles\t\t: Map<String,FontStyle>\t\t= new Map<String, FontStyle>();\r\n\t\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n}\r\n\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\r\n\ttypedef FontStyle =\r\n\t{\r\n\t\tvar ?font\t\t: Font;\r\n\t\tvar ?fontSize\t: Int;\r\n\t\tvar ?color\t\t: Color;\r\n\t\tvar ?alpha\t\t: Float;\r\n\t}\r\n\r\n\t/////////////////////////////////////////////////////////////////////////////////////\r\n\t"],
"names":[],
"mappings":"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AAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GCzJI,YDyJJ;AAAA,GCvJI,UDuJJ;AAAA,GCtJI,UDsJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GCjJI,YDiJJ;AAAA,GChJI,cDgJJ;AAAA,GC/II,cD+IJ;AAAA;AAF8D,EAE9D;AAF8D,EAE9D;AAF8D,EAE9D;AAF8D,EAE9D,sBAA8B,KAA9B;AAF8D,EAE9D,UAA8B,KAA9B;AAF8D,EAE9D,QCpIS,KDoIT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GC5HI,YD4HJ;AAAA,GC1HI,UD0HJ;AAAA,GCzHI,UDyHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GCnHI,YDmHJ;AAAA,GCjHI,UDiHJ;AAAA,GChHI,UDgHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GC1GI,YD0GJ;AAAA,GCxGI,UDwGJ;AAAA,GCvGI,UDuGJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GCjGI,aDiGJ;AAAA,GChGI,YDgGJ;AAAA,GC9FI,YD8FJ;AAAA;AAF8D,EAE9D;AAF8D,EAE9D;AAF8D,EAE9D;AAF8D,EAE9D,wBAA8B,KAA9B;AAF8D,EAE9D,UAA8B,KAA9B;AAF8D,EAE9D,QCpIS,KDoIT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GC5HI,YD4HJ;AAAA,GC1HI,UD0HJ;AAAA,GCzHI,UDyHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GCnHI,YDmHJ;AAAA,GCjHI,UDiHJ;AAAA,GChHI,UDgHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GC1GI,YD0GJ;AAAA,GCxGI,UDwGJ;AAAA,GCvGI,UDuGJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GCjGI,aDiGJ;AAAA,GChGI,aDgGJ;AAAA,GC9FI,YD8FJ;AAAA;AAF8D,EAE9D;AAF8D,EAE9D;AAF8D,EAE9D;AAF8D,EAE9D,wBAA8B,KAA9B;AAF8D,EAE9D,UAA8B,KAA9B;AAF8D,EAE9D,QCpIS,KDoIT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GC5HI,YD4HJ;AAAA,GC1HI,UD0HJ;AAAA,GCzHI,UDyHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GCnHI,YDmHJ;AAAA,GCjHI,UDiHJ;AAAA,GChHI,UDgHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GC1GI,YD0GJ;AAAA,GCxGI,UDwGJ;AAAA,GCvGI,UDuGJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GCjGI,aDiGJ;AAAA,GChGI,aDgGJ;AAAA,GC9FI,YD8FJ;AAAA;AAF8D,EAE9D;AAF8D,EAE9D;AAF8D,EAE9D;AAF8D,EAE9D,wBAA8B,KAA9B;AAF8D,EAE9D,UAA8B,KAA9B;AAF8D,EAE9D,QCpIS,KDoIT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GC5HI,YD4HJ;AAAA,GC1HI,UD0HJ;AAAA,GCzHI,UDyHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GCnHI,YDmHJ;AAAA,GCjHI,UDiHJ;AAAA,GChHI,UDgHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GC1GI,YD0GJ;AAAA,GCxGI,UDwGJ;AAAA,GCvGI,UDuGJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GCjGI,aDiGJ;AAAA,GChGI,aDgGJ;AAAA,GC9FI,YD8FJ;AAAA;AAF8D,EAE9D;AAF8D,EAE9D;AAF8D,EAE9D;AAAA,WCzWA;ADyWA,YAA8B,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aCrWI;ADqWJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAA8B,KAA9B;AAAA,YCpIS,KDoIT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KC5HI,YD4HJ;AAAA,KC1HI,UD0HJ;AAAA,KCzHI,UDyHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KCnHI,YDmHJ;AAAA,KCjHI,UDiHJ;AAAA,KChHI,UDgHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KC1GI,YD0GJ;AAAA,KCxGI,UDwGJ;AAAA,KCvGI,UDuGJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KCjGI,aDiGJ;AAAA,KChGI,aDgGJ;AAAA,KC9FI,YD8FJ;AAAA;AAAA;AAAA;AAF8D,EAE9D;AAF8D,EAE9D;AAF8D,EAE9D;AAAA,YChWA;ADgWA,aAA8B,KAA9B;AAAA;AAAA;AAAA,cAA8B,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA,WCvVa,IDuVb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YC5ES,KD4ET;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KCpEI,MDoEJ;AAAA,KCnEI,ODmEJ;AAAA;AAAA;AAAA;AAAA;AAAA,KC7DI,MD6DJ;AAAA,KC5DI,OD4DJ;AAAA;AAAA;AAAA;AAAA;AAAA,KCtDI,MDsDJ;AAAA,KCrDI,ODqDJ;AAAA;AAAA;AAAA;AAAA;AAAA,KC/CI,cD+CJ;AAAA,KC9CI,cD8CJ;AAAA;AAAA,ICrVQ,YDqVR;AAAA,ICpVQ,UDoVR;AAAA;AAAA;AAF8D,EAE9D;AAF8D,EAE9D,YAA8B,KAA9B;AAF8D,EAE9D;AAF8D,EAE9D,gCAA8B,KAA9B;AAF8D,EAE9D;AAAA;AAAA;AAAA;AAAA;AAAA,GCMI,KDNJ;AAAA,GCOI,KDPJ;AAAA;AAAA;AAAA,GCYI,KDZJ;AAAA,GCaI,KDbJ;AAAA;AAAA;AAAA,GCiBI,KDjBJ;AAAA,GCkBI,KDlBJ;AAAA;AAAA;AAAA;AAAA;AAAA,GC0BI,KD1BJ;AAAA,GC2BI,KD3BJ;AAAA,GC4BI,OD5BJ;AAAA;AAAA,GC+BI,KD/BJ;AAAA,GCgCI,KDhCJ;AAAA,GCiCI,ODjCJ;AAAA;AAAA;AAAA;AAAA,GCwCI,KDxCJ;AAAA,GCyCI,KDzCJ;AAAA,GC0CI,OD1CJ;AAAA;AAAA,GC6CI,KD7CJ;AAAA,GC8CI,KD9CJ;AAAA,GC+CI,OD/CJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GCnCA,MDmCA;AAAA,GClCA,MDkCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GClBA,MDkBA;AAAA,GCjBA,MDiBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GCnCA,MDmCA;AAAA,GClCA,MDkCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GClBA,MDkBA;AAAA,GCjBA,MDiBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GCuDI,WDvDJ;AAAA;AAF8D,EAE9D;AAF8D,EAE9D;AAF8D,EAE9D;AAF8D,EAE9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GCnTQ,KDmTR;AAAA;AAAA;AAAA;AAAA;AAAA,GC7SQ,aD6SR;AAAA,GC5SQ,aD4SR;AAAA,GC3SQ,YD2SR;AAAA;AAF8D,EAE9D;AAF8D,EAE9D;AAF8D,EAE9D;AAF8D,EAE9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GC5QQ,MD4QR;AAAA,GC3QQ,MD2QR;AAAA,GCzQQ,KDyQR;AAAA,GCxQQ,KDwQR;AAAA,GCtQQ,KDsQR;AAAA,GCrQQ,KDqQR;AAAA;AAAA;AAAA;AAAA;AAAA,GC9PQ,WD8PR;AAAA,GC7PQ,YD6PR;AAAA,GC5PQ,YD4PR;AAAA;AAF8D,EAE9D;AAF8D,EAE9D;AAF8D,EAE9D;AAF8D,EAE9D;AAF8D,EAE9D;AAF8D,EAE9D,eAA8B,IAA9B;AAF8D,EAE9D;AAAA;AAAA;AAAA,GAAsB,OAAtB;AAAA,GAAsB,OAAtB;AAAA,GAAsB,OAAtB;AAAA,GAAsB,OAAtB;AAAA;AAAA;AAAA,GAAsB,OAAtB;AAAA,GAAsB,OAAtB;AAAA,GAAsB,OAAtB;AAAA,GAAsB,OAAtB;AAAA,GCtNQ,KDsNR;AAAA,GCrNQ,KDqNR;AAAA,GAAsB,OAAtB;AAAA,GAAsB,OAAtB;AAAA,GAAsB,OAAtB;AAAA,GAAsB,OAAtB;AAAA,GC9MQ,KD8MR;AA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AAuC;AAAvC,KAAuC;AAAvC,KAAuC;AAAvC,KAAuC;AAAvC,KAAuC;AAAvC,KAAuC;AAAvC,KAAuC,eAAmD;AAA1F,KAAuC;AAAvC,KAAuC;AAAvC,KAAuC;AAAvC,KAAuC;AAAvC,KAAuC;AAAvC,KAAuC;AAAvC,KAAuC;AAAvC,KAAuC;AAAvC,KAAuC;AAAvC,KAAuC;AAAvC,KAAuC;AAAvC,KAAuC;AAAvC,KAAuC;AAAvC,KAAuC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QE1NpC,SF0NoC;AAAA;AAAA,QE1NpC,SF0NoC;AAAA;AAAA,OE1NpC,SF0NoC;AAAA;AAAA,OE1NpC,SF0NoC;AAAA;AAAA,ME1NpC,SF0NoC;AAAA;AAAA,ME1NpC,SF0NoC;AAAA;AAAvC,KAAuC;AAAvC,KAAuC;AAAvC,KAAuC;AAAvC,KAAuC;AAAvC,KAAuvC,KAAuC;AAAvC,KAAuC;AAAvC,KAAuC;AAAvC,KAAuC;AAAvC,KAAuC;AAAvC,KAAuC;AAAvC,KAAuC;AAAvC,KAAuC;AAAvC,KAAuC;AAAvC,KAAuC;AAAvC,KAAuC;AAAA,cG1HpC;AH0HoC,MGzHhC,MHyHgC,KAAmD,SAAnD;AAAA,MGxHhC,MHwHgC,KAAmD,SAAnD;AAAA;AAAA;AAAA;AAAA;AAAA,MGjHhC,SHiHgC;AAAA,MGhHhC,MHgHgC;AAAA,MG/GhC,MH+GgC;AAAA;AAAvC,KAAuC;AAAvC,KAAuC;AAAvC,KAAuC;AAAA;AAAA,QEhMpC;AFgMoC;AAAA;AAAvC,KAAuC;AAAvC,KAAuC;AAAvC,KAAuC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QE1NpC,SF0NoC;AAAA;AAAA,QE1NpC,SF0NoC;AAAA;AAAA,OE1NpC,SF0NoC;AAAA;AAAA,OE1NpC,SF0NoC;AAAA;AAAA,ME1NpC,SF0NoC;AAAA;AAAA,ME1NpC,SF0NoC;AAAA;AAAvC,KAAuC;AAAvC,KAAuC;AAAvC,KAAuC;AAAvC,KAAuC;AAAvC,KAAuvC,KAAuC;AAAvC,KAAuC;AAAvC,KAAuC;AAAvC,KAAuC;AAAvC,KAAuC;AAAvC,KAAuC;AAAvC,KAAuC;AAAvC,KAAuC;AAAvC,KAAuC;AAAvC,KAAuC;AAAvC,KAAuC;AAAA,eG1HpC;AH0HoC,MGzHhC,MHyHgC,KAAmD,SAAnD;AAAA,MGxHhC,MHwHgC,KAAmD,SAAnD;AAAA;AAAA;AAAA;AAAA;AAAA,MGjHhC,UHiHgC;AAAA,MGhHhC,MHgHgC;AAAA,MG/GhC,MH+GgC;AAAA;AAAvC,KAAuC;AAAvC,KAAuC;AAAvC,KAAuC;AAAA;AAAA,QEhMpC;AFgMoC;AAAA;AAAvC,KAAuC;AAAvC,KAAuC;AAAvC,KAAuC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QE1NpC,SF0NoC;AAAA;AAAA,QE1NpC,SF0NoC;AAAA;AAAA,OE1NpC,SF0NoC;AAAA;AAAA,OE1NpC,SF0NoC;AAAA;AAAA,ME1NpC,SF0NoC;AAAA;AAAA,ME1NpC,SF0NoC;AAAA;AAAvC,KAAuC;AAAvC,KAAuC;AAAvC,KAAuC;AAAvC,KAAuC;AAAvC,KAAuvC,KAAuC;AAAvC,KAAuC;AAAvC,KAAuC;AAAvC,KAAuC;AAAvC,KAAuC;AAAvC,KAAuC;AAAvC,KAAuC;AAAvC,KAAuC;AAAvC,KAAuC;AAAvC,KAAuC;AAAvC,KAAuC;AAAA,eG1HpC;AH0HoC,MGzHhC,MHyHgC,KAAmD,SAAnD;AAAA,MGxHhC,MHwHgC,KAAmD,SAAnD;AAAA;AAAA;AAAA;AAAA;AAAA,MGjHhC,UHiHgC;AAAA,MGhHhC,MHgHgC;AAAA,MG/GhC,MH+GgC;AAAA;AAAvC,KAAuC;AAAvC,KAAuC;AAAvC,KAAuC;AAAA;AAAA,QEhMpC;AFgMoC;AAAA;AAAvC,KAAuC;AAAvC,KAAuC;AAAvC,KAAuC;AAAvC,KAAuC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QE1NpC,SF0NoC;AAAA;AAAA,QE1NpC,SF0NoC;AAAA;AAAA,OE1NpC,SF0NoC;AAAA;AAAA,OE1NpC,SF0NoC;AAAA;AAAA,ME1NpC,SF0NoC;AAAA;AAAA,ME1NpC,SF0NoC;AAAA;AAAvC,KAAuC;AAAvC,KAAuC;AAAvC,KAAuC;AAAvC,KAAuC;AAAvC,KAAuvC,KA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;AAAvC,KAAuC;AAAvC,KAAuC;AAAvC,KAAuC,YAAsD,KAAtD,IAAmG;AAA1I,KAAuC;AAAvC,KAAuC;AAAvC,KAAuC;AAAvC,KAAuC;AAAvC,KAAuC;AAAvC,KAAuC;AAAvC,KAAuC;AAAvC,KAAuC;AAAvC,KAAuC;AAAvC,KAAuC;AAAvC,KAAuC;AAAvC,KAAuC;AAAvC,KAAuC,cAAkD,KAAlD;AAAvC,KAAuC;AAAvC,KAAuC;AAAvC,KAAuC;AAAvC,KAAuC;AAAvC,KAAuC;AAAvC,KAAuC;AAAvC,KAAuC;AAAvC,KAAuC;AAAvC,KAAuC;AAAvC,KAAuC;AAAvC,KAAuC;AAAvC,KAAuC;AAAvC,KAAuC;AAAvC,KAAuC;AAAvC,KAAuC;AAAvC,KAAuC;AAAvC,KAAuC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QElOpC,SFkOoC;AAAA;AAAA,QElOpC,SFkOoC;AAAA;AAAA,OElOpC,SFkOoC;AAAA;AAAA,OElOpC,SFkOoC;AAAA;AAAA,MElOpC,SFkOoC;AAAA;AAAA,MElOpC,SFkOoC;AAAA;AAAvC,KAAuC;AAAvC,KAAuC;AAAvC,KAAuC;AAAvC,KAAuC;AAAvC,KAAuC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAvC,KAAuC;AAAvC,KAAuC;AAAvC,KAAuC;AAAvC,KAAuC;AAAvC,KAAuC;AAAvC,KAAuC;AAAvC,KAAuC;AAAvC,KAAuC;AAAvC,KAAuC;AAAvC,KAAuC;AAAvC,KAAuC;AAAvC,KAAuC;AAAvC,KAAuC,SAAmG,SAAnG;AAAvC,KAAuC;AAAvC,KAAuC;AAAvC,KAAuC;AAAA,eG2DpC;AH3DoC,MG4DhC,OH5DgC,MAAmG,SAAnG;AAAA,MG6DhC,OH7DgC,MAAmG,SAAnG;AAAA,MG8DhC,KH9DgC;AAAA,MG+DhC,KH/DgC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MG0EhC,UH1EgC;AAAA,MG2EhC,OH3EgC;AAAA,MG4EhC,OH5EgC;AAAA,MG6EhC,MH7EgC;AAAA,MG8EhC,MH9EgC;AAAA;AAAvC,KAAuC;AAAvC,KAAuC;AAAvC,KAAuC;AAAA;AAAA,QExMpC;AFwMoC;AAAA;AAAvC,KAAuC;AAAvC,KAAuC;AAAvC,KAAuC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QElOpC,SFkOoC;AAAA;AAAA,QElOpC,SFkOoC;AAAA;AAAA,OElOpC,SFkOoC;AAAA;AAAA,OElOpC,SFkOoC;AAAA;AAAA,MElOpC,SFkOoC;AAAA;AAAA,MElOpC,SFkOoC;AAAA;AAAvC,KAAuC;AAAvC,KAAuC;AAAvC,KAAuC;AAAvC,KAAuC;AAAvC,KAAuvC,KAAuC;AAAvC,KAAuC;AAAvC,KAAuC;AAAvC,KAAuC;AAAvC,KAAuC;AAAvC,KAAuC;AAAvC,KAAuC;AAAvC,KAAuC;AAAvC,KAAuC;AAAvC,KAAuC;AAAvC,KAAuC;AAAvC,KAAuC;AAAvC,KAAuC,UAAmG,SAAnG;AAAvC,KAAuC;AAAvC,KAAuC;AAAvC,KAAuC;AAAA,eG2DpC;AH3DoC,MG4DhC,OH5DgC,MAAmG,SAAnG;AAAA,MG6DhC,OH7DgC,MAAmG,SAAnG;AAAA,MG8DhC,MH9DgC;AAAA,MG+DhC,MH/DgC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MG0EhC,UH1EgC;AAAA,MG2EhC,OH3EgC;AAAA,MG4EhC,OH5EgC;AAAA,MG6EhC,OH7EgC;AAAA,MG8EhC,OH9EgC;AAAA;AAAvC,KAAuC;AAAvC,KAAuC;AAAvC,KAAuC;AAAA;AAAA,QExMpC;AFwMoC;AAAA;AAAvC,KAAuC;AAAvC,KAAuC;AAAvC,KAAuC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QElOpC,SFkOoC;AAAA;AAAA,QElOpC,SFkOoC;AAAA;AAAA,OElOpC,SFkOoC;AAAA;AAAA,OElOpC,SFkOoC;AAAA;AAAA,MElOpC,SFkOoC;AAAA;AAAA,MElOpC,SFkOoC;AAAA;AAAvC,KAAuC;AAAvC,KAAuC;AAAvC,KAAuC;AAAvC,KAAuC;AAAvC,KAAuvC,KAAuC;AAAvC,KAAuC;AAAvC,KAAuC;AAAvC,KAAuC;AAAvC,KAAuC;AAAvC,KAAuC;AAAvC,KAAuC;AAAvC,KAAuC;AAAvC,KAAuC;AAAvC,KAAuC;AAAvC,KAAuC;AAAvC,KAAuC;AAAvC,KAAuC,UAAmG,SAAnG;AAAvC,KAAuC;AAAvC,KAAuC;AAAvC,KAAuC;AAAA,eG2DpC;AH3DoC,MG4DhC,OH5DgC,MAAmG,SAAnG;AAAA,MG6DhC,OH7DgC,MAAmG,SAAnG;AAAA,MG8DhC,MH9DgC;AAAA,MG+DhC,MH/DgC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MG0EhC,UH1EgC;AAAA,MG2EhC,OH3EgC;AAAA,MG4EhC,OH5EgC;AAAA,MG6EhC,OH7EgC;AAAA,MG8EhC,OH9EgC;AAAA;AAAvC,KAAuC;AAAvC,KAAuC;AAAvC,KAAuC;AAAA;AAAA,QExMpC;AFwMoC;AAAA;AAAvC,KAAuC;AAAvC,KAAuC;AAAvC,KAAuC;AAAvC,KAAuC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QElOpC,UFkOoC;AAAA;AAAA,QElOpC,UFkOoC;AAAA;AAAA,OElOpC,UFkOoC;AAAA;AAAA,OElOpC,UFkOoC;AAAA;AAAA,MElOpC,UFkOoC;AAAA;AAAA,MElOpC,UFkOoC;AAAA;AAAvC,KAAuC;AAAvC,KAAuC;AAAvC,KAAuC;AAAvC,KAAuC;AAAvC,KAAuvC,KAAuC;AAAvC,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8OA;AA9OA,IA8OA;AA9OA,IA8OA;AA9OA,IA8OA;AA9OA,IA8OA;AA9OA,IA8OA;AA9OA,IA8OA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OA+KI,QA/KJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA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A;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IjC8EsI,SiC9EtI;AAAA;AAAA;AAAA,IjC8EqH,QiC9ErH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KlCHA,SkCGA;AAAA;AAAA,KlCHA,SkCGA;AAAA;AAAA,IlCHA,SkCGA;AAAA;AAAA,IlCHA,SkajC6FA;AiC7FA,IjC8FI,MiC9FJ,AAAoB,KAApB;AAAA,IjC+FI,MiC/FJ,AAAwB,KAAxB;AAAA;AAAA,4CAAoB,GAAI,GAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IjCsGI,UiCtGJ;AAAA,IjCuGI,MiCvGJ;AAAA,IjCwGI,MiCxGJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MlCuBA;AkCvBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IjC8EsI,SiC9EtI;AAAA;AAAA;AAAA,IjC8EqH,QiC9ErH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KlCHA,SkCGA;AAAA;AAAA,KlCHA,SkCGA;AAAA;AAAA,IlCHA,SkCGA;AAAA;AAAA,IlCHA,SkajC6FA;AiC7FA,IjC8FI,MiC9FJ;AAAA,IjC+FI,MiC/FJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IjCsGI,UiCtGJ;AAAA,IjCuGI,MiCvGJ;AAAA,IjCwGI,MiCxGJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MlCuBA;AkCvBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IjC8EsI,SiC9EtI;AAAA;AAAA;AAAA,IjC8EqH,QiC9ErH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KlCHA,SkCGA;AAAA;AAAA,KlCHA,SkCGA;AAAA;AAAA,IlCHA,SkCGA;AAAA;AAAA,IlCHA,SkajC6FA;AiC7FA,IjC8FI,MiC9FJ,AAAoB,KAApB;AAAA,IjC+FI,MiC/FJ,AAAwB,KAAxB;AAAA;AAAA,6CAAoB,GAAI,GAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IjCsGI,U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"
}