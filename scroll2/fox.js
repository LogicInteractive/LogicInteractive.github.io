// Generated by Haxe 4.1.1+7f7bb7018
(function ($hx_exports, $global) { "use strict";
$hx_exports["kha"] = $hx_exports["kha"] || {};
$hx_exports["kha"]["input"] = $hx_exports["kha"]["input"] || {};
var $hxClasses = {},$estr = function() { return js_Boot.__string_rec(this,''); },$hxEnums = $hxEnums || {},$_;
function $extend(from, fields) {
	var proto = Object.create(from);
	for (var name in fields) proto[name] = fields[name];
	if( fields.toString !== Object.prototype.toString ) proto.toString = fields.toString;
	return proto;
}
var EReg = function(r,opt) {
	this.r = new RegExp(r,opt.split("u").join(""));
};
$hxClasses["EReg"] = EReg;
EReg.__name__ = "EReg";
EReg.prototype = {
	r: null
	,match: function(s) {
		if(this.r.global) {
			this.r.lastIndex = 0;
		}
		this.r.m = this.r.exec(s);
		this.r.s = s;
		return this.r.m != null;
	}
	,matched: function(n) {
		if(this.r.m != null && n >= 0 && n < this.r.m.length) {
			return this.r.m[n];
		} else {
			throw haxe_Exception.thrown("EReg::matched");
		}
	}
	,__class__: EReg
};
var HxOverrides = function() { };
$hxClasses["HxOverrides"] = HxOverrides;
HxOverrides.__name__ = "HxOverrides";
HxOverrides.strDate = function(s) {
	switch(s.length) {
	case 8:
		var k = s.split(":");
		var d = new Date();
		d["setTime"](0);
		d["setUTCHours"](k[0]);
		d["setUTCMinutes"](k[1]);
		d["setUTCSeconds"](k[2]);
		return d;
	case 10:
		var k = s.split("-");
		return new Date(k[0],k[1] - 1,k[2],0,0,0);
	case 19:
		var k = s.split(" ");
		var y = k[0].split("-");
		var t = k[1].split(":");
		return new Date(y[0],y[1] - 1,y[2],t[0],t[1],t[2]);
	default:
		throw haxe_Exception.thrown("Invalid date format : " + s);
	}
};
HxOverrides.cca = function(s,index) {
	var x = s.charCodeAt(index);
	if(x != x) {
		return undefined;
	}
	return x;
};
HxOverrides.substr = function(s,pos,len) {
	if(len == null) {
		len = s.length;
	} else if(len < 0) {
		if(pos == 0) {
			len = s.length + len;
		} else {
			return "";
		}
	}
	return s.substr(pos,len);
};
HxOverrides.remove = function(a,obj) {
	var i = a.indexOf(obj);
	if(i == -1) {
		return false;
	}
	a.splice(i,1);
	return true;
};
HxOverrides.now = function() {
	return Date.now();
};
var no_logic_kha_fox_application_preloader_PreloaderBase = function(onComplete) {
	if(onComplete != null) {
		this.onComplete = onComplete;
	}
	kha_System.notifyOnFrames($bind(this,this.frameListener));
	this.info = { totalProgress : 0, downloadSpeed : 0, currentFile : "", currentFileType : "", filesLoaded : 0, filesLeft : 0, filesProgress : 0, totalFiles : 0, bytesLoaded : 0, totalBytes : 0};
};
$hxClasses["no.logic.kha.fox.application.preloader.PreloaderBase"] = no_logic_kha_fox_application_preloader_PreloaderBase;
no_logic_kha_fox_application_preloader_PreloaderBase.__name__ = "no.logic.kha.fox.application.preloader.PreloaderBase";
no_logic_kha_fox_application_preloader_PreloaderBase.prototype = {
	filter: null
	,uncompressSoundsFilter: null
	,lists: null
	,listInstances: null
	,info: null
	,onComplete: null
	,dispose: function() {
		kha_System.removeFramesListener($bind(this,this.frameListener));
	}
	,onAllCompleted: function() {
		if(this.onComplete != null) {
			this.onComplete();
		}
	}
	,frameListener: function(fbs) {
	}
	,onFileLoadStart: function(file) {
	}
	,onFileLoadComplete: function(file) {
	}
	,onFileLoadError: function(e) {
	}
	,loadAssets: function() {
		this.lists = kha_Assets.getLists();
		this.listInstances = [kha_Assets.images,kha_Assets.sounds,kha_Assets.blobs,kha_Assets.fonts];
		var _g = 0;
		var _g1 = this.lists;
		while(_g < _g1.length) {
			var _g2 = 0;
			var _g3 = Type.getInstanceFields(_g1[_g++]);
			while(_g2 < _g3.length) if(StringTools.endsWith(_g3[_g2++],"Description")) {
				this.info.totalFiles++;
			}
		}
		this.info.filesLeft = this.info.totalFiles;
		if(this.info.filesLeft == 0) {
			this.onAllCompleted();
			return;
		}
		var _g = 0;
		var _g1 = this.lists.length;
		while(_g < _g1) {
			var i = _g++;
			var listInstance = this.listInstances[i];
			var _g2 = 0;
			var _g3 = Type.getInstanceFields(this.lists[i]);
			while(_g2 < _g3.length) {
				var field = _g3[_g2];
				++_g2;
				if(!StringTools.endsWith(field,"Description")) {
					continue;
				}
				var desc = Reflect.field(listInstance,field);
				if(this.filter == null || this.filter(desc)) {
					this.loadFunc(desc,$bind(this,this.onFileLoaded),$bind(this,this.onError));
				} else {
					this.onFileLoaded("");
				}
			}
		}
	}
	,loadFunc: function(desc,done,failure) {
		var _gthis = this;
		var name = desc.name;
		switch(desc.type) {
		case "blob":
			this.setupFile(desc);
			break;
		case "font":
			this.setupFile(desc);
			break;
		case "image":
			this.setupFile(desc);
			break;
		case "sound":
			this.setupFile(desc);
			break;
		}
		switch(desc.type) {
		case "blob":
			kha_Assets.loadBlob(name,function(blob) {
				done(name);
			},failure,{ fileName : "no/logic/kha/fox/application/preloader/PreloaderBase.hx", lineNumber : 143, className : "no.logic.kha.fox.application.preloader.PreloaderBase", methodName : "loadFunc"});
			break;
		case "font":
			kha_Assets.loadFont(name,function(font) {
				done(name);
			},failure,{ fileName : "no/logic/kha/fox/application/preloader/PreloaderBase.hx", lineNumber : 145, className : "no.logic.kha.fox.application.preloader.PreloaderBase", methodName : "loadFunc"});
			break;
		case "image":
			kha_Assets.loadImage(name,function(image) {
				done(name);
			},failure,{ fileName : "no/logic/kha/fox/application/preloader/PreloaderBase.hx", lineNumber : 129, className : "no.logic.kha.fox.application.preloader.PreloaderBase", methodName : "loadFunc"});
			break;
		case "sound":
			kha_Assets.loadSound(name,function(sound) {
				if(_gthis.uncompressSoundsFilter == null || _gthis.uncompressSoundsFilter(desc)) {
					sound.uncompress(function() {
						done(name);
					});
				} else {
					done(name);
				}
			},failure,{ fileName : "no/logic/kha/fox/application/preloader/PreloaderBase.hx", lineNumber : 132, className : "no.logic.kha.fox.application.preloader.PreloaderBase", methodName : "loadFunc"});
			break;
		}
	}
	,onFileLoaded: function(name) {
		this.info.filesLeft--;
		this.info.filesLoaded++;
		this.info.filesProgress = 1 - this.info.filesLeft / this.info.totalFiles;
		this.info.totalProgress = this.info.filesProgress;
		this.onFileLoadComplete(name);
		if(this.info.filesLeft == 0) {
			this.onAllCompleted();
		}
	}
	,onError: function(err) {
		this.onFileLoadError(err);
		this.onFileLoaded(err.url);
	}
	,setupFile: function(desc) {
		this.info.currentFile = desc.name;
		this.info.currentFileType = desc.type;
		this.onFileLoadStart(this.info.currentFile);
	}
	,__class__: no_logic_kha_fox_application_preloader_PreloaderBase
};
var no_logic_kha_fox_application_preloader_StandardPreloader = function(onComplete) {
	no_logic_kha_fox_application_preloader_PreloaderBase.call(this,onComplete);
};
$hxClasses["no.logic.kha.fox.application.preloader.StandardPreloader"] = no_logic_kha_fox_application_preloader_StandardPreloader;
no_logic_kha_fox_application_preloader_StandardPreloader.__name__ = "no.logic.kha.fox.application.preloader.StandardPreloader";
no_logic_kha_fox_application_preloader_StandardPreloader.__super__ = no_logic_kha_fox_application_preloader_PreloaderBase;
no_logic_kha_fox_application_preloader_StandardPreloader.prototype = $extend(no_logic_kha_fox_application_preloader_PreloaderBase.prototype,{
	dispose: function() {
		no_logic_kha_fox_application_preloader_PreloaderBase.prototype.dispose.call(this);
	}
	,onFileLoadStart: function(file) {
	}
	,onFileLoadComplete: function(file) {
	}
	,onFileLoadError: function(e) {
	}
	,onAllCompleted: function() {
		no_logic_kha_fox_application_preloader_PreloaderBase.prototype.onAllCompleted.call(this);
	}
	,frameListener: function(fbs) {
		var g2 = fbs[0].get_g2();
		var mw = Math.round(kha_System.windowWidth() * 0.5);
		var mh = Math.round(kha_System.windowHeight() * 0.5);
		g2.begin(true,-16777216);
		g2.set_color(-1);
		g2.pushTranslation(mw,mh);
		g2.set_opacity(0.25);
		kha_graphics2_GraphicsExtension.drawArc(g2,0,0,20,(0 - 90) * Math.PI / 180,(360 - 90) * Math.PI / 180,6,false,64);
		g2.set_opacity(0.9);
		var endAngle = this.info.totalProgress * 359;
		if(endAngle == null) {
			endAngle = 90;
		}
		kha_graphics2_GraphicsExtension.drawArc(g2,0,0,20,(0 - 90) * Math.PI / 180,(endAngle - 90) * Math.PI / 180,6,false,0);
		var t = "Loading " + no_logic_fox_utils_StringUtils.floatToString(this.info.totalProgress * 100,1) + "%";
		g2.set_opacity(1.0);
		g2.set_fontSize(12);
		g2.set_font(no_logic_kha_fox_assets_EmbeddedAssets.fonts.cft);
		g2.drawString(t,0 - g2.get_font().width(g2.get_fontSize(),t) * 0.5,50 - g2.get_font().height(g2.get_fontSize()) * 0.5);
		g2.popTransformation();
		g2.end();
	}
	,__class__: no_logic_kha_fox_application_preloader_StandardPreloader
});
var no_logic_kha_fox_displaylist_DisplayListRenderMode = $hxEnums["no.logic.kha.fox.displaylist.DisplayListRenderMode"] = { __ename__ : true, __constructs__ : ["Frontbuffer","Backbuffer"]
	,Frontbuffer: {_hx_index:0,__enum__:"no.logic.kha.fox.displaylist.DisplayListRenderMode",toString:$estr}
	,Backbuffer: {_hx_index:1,__enum__:"no.logic.kha.fox.displaylist.DisplayListRenderMode",toString:$estr}
};
var no_logic_kha_fox_displaylist_effects_postprocessing_PostProcess_$GradingFilter = function() {
	this.ppCopyString = "";
	this.showDebugUI = false;
	this.filmGrainSpeed = 1.0;
	this.filmGrain = 0.0;
	this.rgbAdjust = new kha_math_FastVector3(1.0,1.0,1.0);
	this.chromaticAberrationCenter = new kha_math_FastVector2(0.5,0.5);
	this.chromaticAberration = 0.0;
	this.vignetteExtend = 0.05;
	this.vignetteBrightness = 15.0;
	this.vignetteStrength = 0.0;
	this.saturation = 1.0;
	this.sharpenSize = 1.0;
	this.sharpen = 0.0;
	this.gamma = 1.0;
	this.brightness = 0.0;
	this.contrast = 1.0;
	this.initialized = false;
	this.enabled = true;
};
$hxClasses["no.logic.kha.fox.displaylist.effects.postprocessing.PostProcess_GradingFilter"] = no_logic_kha_fox_displaylist_effects_postprocessing_PostProcess_$GradingFilter;
no_logic_kha_fox_displaylist_effects_postprocessing_PostProcess_$GradingFilter.__name__ = "no.logic.kha.fox.displaylist.effects.postprocessing.PostProcess_GradingFilter";
no_logic_kha_fox_displaylist_effects_postprocessing_PostProcess_$GradingFilter.createPipeline = function(fragmentShader,vertexShader) {
	var pipeline = new kha_graphics4_PipelineState();
	var structure = new kha_graphics4_VertexStructure();
	structure.add("vertexPosition",2);
	structure.add("texPosition",1);
	structure.add("vertexColor",3);
	pipeline.inputLayout = [structure];
	pipeline.vertexShader = vertexShader == null ? kha_Shaders.painter_image_vert : vertexShader;
	pipeline.fragmentShader = fragmentShader == null ? kha_Shaders.painter_image_frag : fragmentShader;
	pipeline.blendSource = 1;
	pipeline.blendDestination = 5;
	pipeline.alphaBlendSource = 1;
	pipeline.alphaBlendDestination = 5;
	pipeline.compile();
	return pipeline;
};
no_logic_kha_fox_displaylist_effects_postprocessing_PostProcess_$GradingFilter.prototype = {
	enabled: null
	,initialized: null
	,contrast: null
	,brightness: null
	,gamma: null
	,sharpen: null
	,sharpenSize: null
	,saturation: null
	,vignetteStrength: null
	,vignetteBrightness: null
	,vignetteExtend: null
	,chromaticAberration: null
	,chromaticAberrationCenter: null
	,rgbAdjust: null
	,filmGrain: null
	,filmGrainSpeed: null
	,mBuffer: null
	,showDebugUI: null
	,ui: null
	,ppCopyString: null
	,init: function() {
		if(this.initialized) {
			return;
		}
		if(no_logic_kha_fox_displaylist_effects_postprocessing_PostProcess_$GradingFilter.pipelinePass1 == null) {
			no_logic_kha_fox_displaylist_effects_postprocessing_PostProcess_$GradingFilter.pipelinePass1 = no_logic_kha_fox_displaylist_effects_postprocessing_PostProcess_$GradingFilter.createPipeline(kha_Shaders.genericPostprocess_frag,null);
			no_logic_kha_fox_displaylist_effects_postprocessing_PostProcess_$GradingFilter.p1iTime = no_logic_kha_fox_displaylist_effects_postprocessing_PostProcess_$GradingFilter.pipelinePass1.getConstantLocation("iTime");
			no_logic_kha_fox_displaylist_effects_postprocessing_PostProcess_$GradingFilter.p1iResolution = no_logic_kha_fox_displaylist_effects_postprocessing_PostProcess_$GradingFilter.pipelinePass1.getConstantLocation("iResolution");
			no_logic_kha_fox_displaylist_effects_postprocessing_PostProcess_$GradingFilter.pipelinePass2 = no_logic_kha_fox_displaylist_effects_postprocessing_PostProcess_$GradingFilter.createPipeline(kha_Shaders.genericPostprocessPass2_frag,null);
			no_logic_kha_fox_displaylist_effects_postprocessing_PostProcess_$GradingFilter.p2iTime = no_logic_kha_fox_displaylist_effects_postprocessing_PostProcess_$GradingFilter.pipelinePass2.getConstantLocation("iTime");
			no_logic_kha_fox_displaylist_effects_postprocessing_PostProcess_$GradingFilter.p2iResolution = no_logic_kha_fox_displaylist_effects_postprocessing_PostProcess_$GradingFilter.pipelinePass2.getConstantLocation("iResolution");
			no_logic_kha_fox_displaylist_effects_postprocessing_PostProcess_$GradingFilter.u_contrast = no_logic_kha_fox_displaylist_effects_postprocessing_PostProcess_$GradingFilter.pipelinePass1.getConstantLocation("u_contrast");
			no_logic_kha_fox_displaylist_effects_postprocessing_PostProcess_$GradingFilter.u_brightness = no_logic_kha_fox_displaylist_effects_postprocessing_PostProcess_$GradingFilter.pipelinePass1.getConstantLocation("u_brightness");
			no_logic_kha_fox_displaylist_effects_postprocessing_PostProcess_$GradingFilter.u_gamma = no_logic_kha_fox_displaylist_effects_postprocessing_PostProcess_$GradingFilter.pipelinePass1.getConstantLocation("u_gamma");
			no_logic_kha_fox_displaylist_effects_postprocessing_PostProcess_$GradingFilter.u_sharpen = no_logic_kha_fox_displaylist_effects_postprocessing_PostProcess_$GradingFilter.pipelinePass1.getConstantLocation("u_sharpen");
			no_logic_kha_fox_displaylist_effects_postprocessing_PostProcess_$GradingFilter.u_sharpen_size = no_logic_kha_fox_displaylist_effects_postprocessing_PostProcess_$GradingFilter.pipelinePass1.getConstantLocation("u_sharpen_size");
			no_logic_kha_fox_displaylist_effects_postprocessing_PostProcess_$GradingFilter.u_saturation = no_logic_kha_fox_displaylist_effects_postprocessing_PostProcess_$GradingFilter.pipelinePass1.getConstantLocation("u_saturation");
			no_logic_kha_fox_displaylist_effects_postprocessing_PostProcess_$GradingFilter.u_vignette_brightness = no_logic_kha_fox_displaylist_effects_postprocessing_PostProcess_$GradingFilter.pipelinePass1.getConstantLocation("u_vignette_brightness");
			no_logic_kha_fox_displaylist_effects_postprocessing_PostProcess_$GradingFilter.u_vignette_strength = no_logic_kha_fox_displaylist_effects_postprocessing_PostProcess_$GradingFilter.pipelinePass1.getConstantLocation("u_vignette_strength");
			no_logic_kha_fox_displaylist_effects_postprocessing_PostProcess_$GradingFilter.u_vignette_extend = no_logic_kha_fox_displaylist_effects_postprocessing_PostProcess_$GradingFilter.pipelinePass1.getConstantLocation("u_vignette_extend");
			no_logic_kha_fox_displaylist_effects_postprocessing_PostProcess_$GradingFilter.u_rgb_adjust = no_logic_kha_fox_displaylist_effects_postprocessing_PostProcess_$GradingFilter.pipelinePass1.getConstantLocation("u_rgb_adjust");
			no_logic_kha_fox_displaylist_effects_postprocessing_PostProcess_$GradingFilter.u_filmgrain = no_logic_kha_fox_displaylist_effects_postprocessing_PostProcess_$GradingFilter.pipelinePass1.getConstantLocation("u_filmgrain");
			no_logic_kha_fox_displaylist_effects_postprocessing_PostProcess_$GradingFilter.u_filmgrain_speed = no_logic_kha_fox_displaylist_effects_postprocessing_PostProcess_$GradingFilter.pipelinePass1.getConstantLocation("u_filmgrain_speed");
			no_logic_kha_fox_displaylist_effects_postprocessing_PostProcess_$GradingFilter.u_chromabbr_amount = no_logic_kha_fox_displaylist_effects_postprocessing_PostProcess_$GradingFilter.pipelinePass2.getConstantLocation("u_chromabbr_amount");
			no_logic_kha_fox_displaylist_effects_postprocessing_PostProcess_$GradingFilter.u_chromabbr_center = no_logic_kha_fox_displaylist_effects_postprocessing_PostProcess_$GradingFilter.pipelinePass2.getConstantLocation("u_chromabbr_center");
		}
		if(this.showDebugUI) {
			this.ui = new zui_Zui({ font : no_logic_kha_fox_assets_EmbeddedAssets.fonts.cft});
		}
		this.initialized = true;
	}
	,render: function(targetBuffer,sourceBuffer) {
		if(!this.enabled || !this.isPass1Needed() && !this.isPass2Needed(sourceBuffer)) {
			return sourceBuffer;
		}
		var g2 = targetBuffer.get_g2();
		var g4 = targetBuffer.get_g4();
		var g2Pipeline = g2.get_pipeline();
		if(!this.isPass1Needed()) {
			if(this.isPass2Needed(sourceBuffer)) {
				var g21 = targetBuffer.get_g2();
				var g41 = targetBuffer.get_g4();
				var op = g21.get_pipeline();
				var p = no_logic_kha_fox_displaylist_effects_postprocessing_PostProcess_$GradingFilter.pipelinePass2;
				g21.begin(false);
				g21.set_imageScaleQuality(1);
				g21.set_color(-1);
				g21.set_opacity(1.0);
				g41.setPipeline(p);
				g21.set_pipeline(p);
				g41.setFloat(no_logic_kha_fox_displaylist_effects_postprocessing_PostProcess_$GradingFilter.p2iTime,no_logic_kha_fox_application_App.system.time);
				g41.setFloat2(no_logic_kha_fox_displaylist_effects_postprocessing_PostProcess_$GradingFilter.p2iResolution,targetBuffer.get_width(),targetBuffer.get_height());
				g41.setFloat(no_logic_kha_fox_displaylist_effects_postprocessing_PostProcess_$GradingFilter.u_chromabbr_amount,this.chromaticAberration);
				g41.setFloat2(no_logic_kha_fox_displaylist_effects_postprocessing_PostProcess_$GradingFilter.u_chromabbr_center,this.chromaticAberrationCenter.x,this.chromaticAberrationCenter.y);
				g21.drawImage(sourceBuffer,0,0);
				g21.set_pipeline(op);
				if(op != null) {
					g41.setPipeline(op);
				}
				g21.end();
			}
		} else if(this.isPass2Needed(sourceBuffer)) {
			var targetBuffer1 = this.mBuffer;
			var g21 = targetBuffer1.get_g2();
			var g41 = targetBuffer1.get_g4();
			var op = g21.get_pipeline();
			var p = no_logic_kha_fox_displaylist_effects_postprocessing_PostProcess_$GradingFilter.pipelinePass1;
			g21.begin(false);
			g21.set_imageScaleQuality(1);
			g21.set_color(-1);
			g21.set_opacity(1.0);
			g41.setPipeline(p);
			g21.set_pipeline(p);
			g41.setFloat(no_logic_kha_fox_displaylist_effects_postprocessing_PostProcess_$GradingFilter.p1iTime,no_logic_kha_fox_application_App.system.time);
			g41.setFloat2(no_logic_kha_fox_displaylist_effects_postprocessing_PostProcess_$GradingFilter.p1iResolution,sourceBuffer.get_width(),sourceBuffer.get_height());
			g41.setFloat(no_logic_kha_fox_displaylist_effects_postprocessing_PostProcess_$GradingFilter.u_contrast,this.contrast);
			g41.setFloat(no_logic_kha_fox_displaylist_effects_postprocessing_PostProcess_$GradingFilter.u_brightness,this.brightness);
			g41.setFloat(no_logic_kha_fox_displaylist_effects_postprocessing_PostProcess_$GradingFilter.u_gamma,this.gamma);
			g41.setFloat(no_logic_kha_fox_displaylist_effects_postprocessing_PostProcess_$GradingFilter.u_sharpen,this.sharpen);
			g41.setFloat(no_logic_kha_fox_displaylist_effects_postprocessing_PostProcess_$GradingFilter.u_sharpen_size,this.sharpenSize);
			g41.setFloat(no_logic_kha_fox_displaylist_effects_postprocessing_PostProcess_$GradingFilter.u_saturation,this.saturation);
			g41.setFloat(no_logic_kha_fox_displaylist_effects_postprocessing_PostProcess_$GradingFilter.u_vignette_brightness,this.vignetteBrightness);
			g41.setVector3(no_logic_kha_fox_displaylist_effects_postprocessing_PostProcess_$GradingFilter.u_rgb_adjust,this.rgbAdjust);
			g41.setFloat(no_logic_kha_fox_displaylist_effects_postprocessing_PostProcess_$GradingFilter.u_vignette_strength,this.vignetteStrength);
			g41.setFloat(no_logic_kha_fox_displaylist_effects_postprocessing_PostProcess_$GradingFilter.u_vignette_extend,this.vignetteExtend);
			g41.setFloat(no_logic_kha_fox_displaylist_effects_postprocessing_PostProcess_$GradingFilter.u_filmgrain,this.filmGrain);
			g41.setFloat(no_logic_kha_fox_displaylist_effects_postprocessing_PostProcess_$GradingFilter.u_filmgrain_speed,this.filmGrainSpeed);
			g21.drawImage(sourceBuffer,0,0);
			g21.set_pipeline(op);
			if(op != null) {
				g41.setPipeline(op);
			}
			g21.end();
			var sourceBuffer1 = this.mBuffer;
			var g21 = targetBuffer.get_g2();
			var g41 = targetBuffer.get_g4();
			var op = g21.get_pipeline();
			var p = no_logic_kha_fox_displaylist_effects_postprocessing_PostProcess_$GradingFilter.pipelinePass2;
			g21.begin(false);
			g21.set_imageScaleQuality(1);
			g21.set_color(-1);
			g21.set_opacity(1.0);
			g41.setPipeline(p);
			g21.set_pipeline(p);
			g41.setFloat(no_logic_kha_fox_displaylist_effects_postprocessing_PostProcess_$GradingFilter.p2iTime,no_logic_kha_fox_application_App.system.time);
			g41.setFloat2(no_logic_kha_fox_displaylist_effects_postprocessing_PostProcess_$GradingFilter.p2iResolution,targetBuffer.get_width(),targetBuffer.get_height());
			g41.setFloat(no_logic_kha_fox_displaylist_effects_postprocessing_PostProcess_$GradingFilter.u_chromabbr_amount,this.chromaticAberration);
			g41.setFloat2(no_logic_kha_fox_displaylist_effects_postprocessing_PostProcess_$GradingFilter.u_chromabbr_center,this.chromaticAberrationCenter.x,this.chromaticAberrationCenter.y);
			g21.drawImage(sourceBuffer1,0,0);
			g21.set_pipeline(op);
			if(op != null) {
				g41.setPipeline(op);
			}
			g21.end();
		} else {
			var g21 = targetBuffer.get_g2();
			var g41 = targetBuffer.get_g4();
			var op = g21.get_pipeline();
			var p = no_logic_kha_fox_displaylist_effects_postprocessing_PostProcess_$GradingFilter.pipelinePass1;
			g21.begin(false);
			g21.set_imageScaleQuality(1);
			g21.set_color(-1);
			g21.set_opacity(1.0);
			g41.setPipeline(p);
			g21.set_pipeline(p);
			g41.setFloat(no_logic_kha_fox_displaylist_effects_postprocessing_PostProcess_$GradingFilter.p1iTime,no_logic_kha_fox_application_App.system.time);
			g41.setFloat2(no_logic_kha_fox_displaylist_effects_postprocessing_PostProcess_$GradingFilter.p1iResolution,sourceBuffer.get_width(),sourceBuffer.get_height());
			g41.setFloat(no_logic_kha_fox_displaylist_effects_postprocessing_PostProcess_$GradingFilter.u_contrast,this.contrast);
			g41.setFloat(no_logic_kha_fox_displaylist_effects_postprocessing_PostProcess_$GradingFilter.u_brightness,this.brightness);
			g41.setFloat(no_logic_kha_fox_displaylist_effects_postprocessing_PostProcess_$GradingFilter.u_gamma,this.gamma);
			g41.setFloat(no_logic_kha_fox_displaylist_effects_postprocessing_PostProcess_$GradingFilter.u_sharpen,this.sharpen);
			g41.setFloat(no_logic_kha_fox_displaylist_effects_postprocessing_PostProcess_$GradingFilter.u_sharpen_size,this.sharpenSize);
			g41.setFloat(no_logic_kha_fox_displaylist_effects_postprocessing_PostProcess_$GradingFilter.u_saturation,this.saturation);
			g41.setFloat(no_logic_kha_fox_displaylist_effects_postprocessing_PostProcess_$GradingFilter.u_vignette_brightness,this.vignetteBrightness);
			g41.setVector3(no_logic_kha_fox_displaylist_effects_postprocessing_PostProcess_$GradingFilter.u_rgb_adjust,this.rgbAdjust);
			g41.setFloat(no_logic_kha_fox_displaylist_effects_postprocessing_PostProcess_$GradingFilter.u_vignette_strength,this.vignetteStrength);
			g41.setFloat(no_logic_kha_fox_displaylist_effects_postprocessing_PostProcess_$GradingFilter.u_vignette_extend,this.vignetteExtend);
			g41.setFloat(no_logic_kha_fox_displaylist_effects_postprocessing_PostProcess_$GradingFilter.u_filmgrain,this.filmGrain);
			g41.setFloat(no_logic_kha_fox_displaylist_effects_postprocessing_PostProcess_$GradingFilter.u_filmgrain_speed,this.filmGrainSpeed);
			g21.drawImage(sourceBuffer,0,0);
			g21.set_pipeline(op);
			if(op != null) {
				g41.setPipeline(op);
			}
			g21.end();
		}
		g2.set_pipeline(g2Pipeline);
		if(g2Pipeline != null) {
			g4.setPipeline(g2Pipeline);
		}
		return targetBuffer;
	}
	,isPass1Needed: function() {
		if(!(this.brightness != 0.0 || this.contrast != 1.0 || this.gamma != 1.0 || this.sharpen > 0.0 || this.saturation != 1.0 || this.filmGrain > 0.0 || this.rgbAdjust.x != 1.0 || this.rgbAdjust.y != 1.0 || this.rgbAdjust.z != 1.0)) {
			return this.vignetteStrength > 0.0;
		} else {
			return true;
		}
	}
	,isPass2Needed: function(source) {
		var needP2 = this.chromaticAberration != 0.0;
		if(needP2 && source != null) {
			if(this.mBuffer == null || this.mBuffer.get_width() != source.get_width() || this.mBuffer.get_height() != source.get_height()) {
				if(this.mBuffer != null) {
					this.mBuffer.unload();
				}
				this.mBuffer = no_logic_kha_fox_application_App.system.createRTMatchingBuffer(source);
			}
		}
		return needP2;
	}
	,grabSettings: function() {
		var ppgs = { };
		if(this.brightness != 0.0) {
			ppgs.brightness = this.brightness;
		}
		if(this.contrast != 1.0) {
			ppgs.contrast = this.contrast;
		}
		if(this.gamma != 1.0) {
			ppgs.gamma = this.gamma;
		}
		if(this.sharpen != 0.0) {
			ppgs.sharpen = this.sharpen;
		}
		if(this.sharpenSize != 1.0) {
			ppgs.sharpenSize = this.sharpenSize;
		}
		if(this.saturation != 1.0) {
			ppgs.saturation = this.saturation;
		}
		if(this.vignetteStrength != 0.0) {
			ppgs.vignetteStrength = this.vignetteStrength;
		}
		if(this.vignetteBrightness != 15.0) {
			ppgs.vignetteBrightness = this.vignetteBrightness;
		}
		if(this.vignetteExtend != 0.05) {
			ppgs.vignetteExtend = this.vignetteExtend;
		}
		if(this.chromaticAberration != 0.0) {
			ppgs.chromaticAberration = this.chromaticAberration;
		}
		if(this.filmGrain != 0.0) {
			ppgs.filmGrain = this.filmGrain;
		}
		if(this.filmGrainSpeed != 1.0) {
			ppgs.filmGrainSpeed = this.filmGrainSpeed;
		}
		if(this.rgbAdjust.x != 1.0 || this.rgbAdjust.y != 1.0 || this.rgbAdjust.z != 1.0) {
			ppgs.rgbAdjust = { };
		}
		if(this.rgbAdjust.x != 1.0) {
			ppgs.rgbAdjust.r = this.rgbAdjust.x;
		}
		if(this.rgbAdjust.y != 1.0) {
			ppgs.rgbAdjust.g = this.rgbAdjust.y;
		}
		if(this.rgbAdjust.z != 1.0) {
			ppgs.rgbAdjust.b = this.rgbAdjust.z;
		}
		return ppgs;
	}
	,applySettings: function(settings) {
		if(settings == null) {
			return;
		}
		try {
			if(Object.prototype.hasOwnProperty.call(settings,"rgbAdjust")) {
				if(Object.prototype.hasOwnProperty.call(settings.rgbAdjust,"r")) {
					this.rgbAdjust.x = settings.rgbAdjust.r;
				}
				if(Object.prototype.hasOwnProperty.call(settings.rgbAdjust,"g")) {
					this.rgbAdjust.y = settings.rgbAdjust.g;
				}
				if(Object.prototype.hasOwnProperty.call(settings.rgbAdjust,"b")) {
					this.rgbAdjust.z = settings.rgbAdjust.b;
				}
				Reflect.deleteField(settings,"rgbAdjust");
			}
			var _g = 0;
			var _g1 = Reflect.fields(settings);
			while(_g < _g1.length) {
				var sname = _g1[_g];
				++_g;
				this[sname] = Reflect.field(settings,sname);
			}
		} catch( _g ) {
			haxe_Log.trace("Error in applying postprocess settings...",{ fileName : "no/logic/kha/fox/displaylist/effects/postprocessing/PostProcess_GradingFilter.hx", lineNumber : 350, className : "no.logic.kha.fox.displaylist.effects.postprocessing.PostProcess_GradingFilter", methodName : "applySettings"});
		}
	}
	,reset: function() {
		this.contrast = 1.0;
		this.brightness = 0.0;
		this.gamma = 1.0;
		this.sharpen = 0.0;
		this.sharpenSize = 1.0;
		this.saturation = 1.0;
		this.vignetteStrength = 0.0;
		this.vignetteBrightness = 15.0;
		this.vignetteExtend = 0.05;
		this.chromaticAberration = 0.0;
		this.chromaticAberrationCenter.x = 0.5;
		this.chromaticAberrationCenter.y = 0.5;
		this.rgbAdjust.x = 1.0;
		this.rgbAdjust.y = 1.0;
		this.rgbAdjust.z = 1.0;
		this.filmGrain = 0.0;
		this.filmGrainSpeed = 1.0;
	}
	,renderDebugUI: function(g2) {
		if(!this.showDebugUI) {
			return;
		}
		if(this.ui == null) {
			this.ui = new zui_Zui({ font : no_logic_kha_fox_assets_EmbeddedAssets.fonts.cft});
		}
		this.ui.begin(g2);
		this.ui.alwaysRedraw = true;
		if(this.ui.window(zui_Handle.global.nest(0,null),10,10,240,600,false)) {
			if(this.ui.panel(zui_Handle.global.nest(1,{ selected : true}),"PostProcess Effects")) {
				if(this.ui.button("Reset")) {
					this.reset();
					this.ui.end();
					return;
				}
				if(this.ui.button("Copy settings")) {
					this.ppCopyString = JSON.stringify(this.grabSettings());
				}
				if(this.ppCopyString != null && this.ppCopyString != "") {
					zui_Ext.textArea(this.ui,zui_Handle.global.nest(2,{ text : this.ppCopyString}));
				}
				this.brightness = this.ui.slider(zui_Handle.global.nest(3,{ value : this.brightness}),"Brightness",-1.0,1.0,true);
				this.contrast = this.ui.slider(zui_Handle.global.nest(4,{ value : this.contrast}),"Contrast",0.0,2.0,true);
				this.gamma = this.ui.slider(zui_Handle.global.nest(5,{ value : this.gamma}),"Gamma",0.1,5.0,true);
				this.sharpen = this.ui.slider(zui_Handle.global.nest(6,{ value : this.sharpen}),"Sharpen",0.0,25.0,true);
				this.sharpenSize = this.ui.slider(zui_Handle.global.nest(7,{ value : this.sharpenSize}),"Sharpen Size",0.0,4.0,true);
				this.saturation = this.ui.slider(zui_Handle.global.nest(8,{ value : this.saturation}),"Saturation",0.0,4.0,true);
				this.vignetteStrength = this.ui.slider(zui_Handle.global.nest(9,{ value : this.vignetteStrength}),"Vignette Strength",0.0,1.0,true);
				this.vignetteBrightness = this.ui.slider(zui_Handle.global.nest(10,{ value : this.vignetteBrightness}),"Vignette Brightness",0.0,100.0,true);
				this.vignetteExtend = this.ui.slider(zui_Handle.global.nest(11,{ value : this.vignetteExtend}),"Vignette Extend",0.0,2.0,true);
				this.chromaticAberration = this.ui.slider(zui_Handle.global.nest(12,{ value : this.chromaticAberration}),"Chromatic Aberration",-10.0,10.0,true);
				this.filmGrain = this.ui.slider(zui_Handle.global.nest(13,{ value : this.filmGrain}),"FilmGrain",0.0,1.0,true);
				this.filmGrainSpeed = this.ui.slider(zui_Handle.global.nest(14,{ value : this.filmGrainSpeed}),"filmGrain Speed",0.0,1.0,true);
				if(this.ui.panel(zui_Handle.global.nest(15,{ selected : true}),"RGB adjustment")) {
					var tmp = this.ui;
					var tmp1 = zui_Handle.global.nest(16,{ value : this.rgbAdjust.x});
					this.rgbAdjust.x = tmp.slider(tmp1,"R",0.0,2.0,true);
					var tmp = this.ui;
					var tmp1 = zui_Handle.global.nest(17,{ value : this.rgbAdjust.y});
					this.rgbAdjust.y = tmp.slider(tmp1,"G",0.0,2.0,true);
					var tmp = this.ui;
					var tmp1 = zui_Handle.global.nest(18,{ value : this.rgbAdjust.z});
					this.rgbAdjust.z = tmp.slider(tmp1,"B",0.0,2.0,true);
				}
			}
		}
		this.ui.end();
	}
	,applySettingsJSONString: function(JSONinput) {
		var jsetting = null;
		try {
			jsetting = JSON.parse(JSONinput);
		} catch( _g ) {
			haxe_Log.trace("Error in postprocess settings JSON string",{ fileName : "no/logic/kha/fox/displaylist/effects/postprocessing/PostProcess_GradingFilter.hx", lineNumber : 478, className : "no.logic.kha.fox.displaylist.effects.postprocessing.PostProcess_GradingFilter", methodName : "applySettingsJSONString"});
		}
		if(jsetting != null) {
			this.applySettings(jsetting);
		}
	}
	,__class__: no_logic_kha_fox_displaylist_effects_postprocessing_PostProcess_$GradingFilter
};
var kha_Display = function() {
};
$hxClasses["kha.Display"] = kha_Display;
kha_Display.__name__ = "kha.Display";
kha_Display.__properties__ = {get_primary:"get_primary"};
kha_Display.get_primary = function() {
	return kha_Display.instance;
};
kha_Display.prototype = {
	get_frequency: function() {
		return kha_SystemImpl.estimatedRefreshRate;
	}
	,get_pixelsPerInch: function() {
		var dpiElement = window.document.createElement("div");
		dpiElement.style.position = "absolute";
		dpiElement.style.width = "1in";
		dpiElement.style.height = "1in";
		dpiElement.style.left = "-100%";
		dpiElement.style.top = "-100%";
		window.document.body.appendChild(dpiElement);
		var dpi = dpiElement.offsetHeight;
		dpiElement.remove();
		return dpi;
	}
	,__class__: kha_Display
	,__properties__: {get_pixelsPerInch:"get_pixelsPerInch",get_frequency:"get_frequency"}
};
var no_logic_kha_fox_application_AppSystem = function() {
	this.RTBufferAA = 0;
	this.time = 0;
	this.deltaTime = 0;
	this.lastTime = 0;
};
$hxClasses["no.logic.kha.fox.application.AppSystem"] = no_logic_kha_fox_application_AppSystem;
no_logic_kha_fox_application_AppSystem.__name__ = "no.logic.kha.fox.application.AppSystem";
no_logic_kha_fox_application_AppSystem.prototype = {
	lastTime: null
	,deltaTime: null
	,time: null
	,RTBufferAA: null
	,restart: function() {
		location.reload();
	}
	,exit: function(errorCode) {
		if(errorCode == null) {
			errorCode = 0;
		}
		kha_System.stop();
		location='exit';
	}
	,showMouse: function(show) {
		if(show == null) {
			show = true;
		}
		no_logic_kha_fox_application_App.settings.showMouse = show;
		if(no_logic_kha_fox_application_App.settings.showMouse) {
			kha_input_Mouse.get().showSystemCursor();
		} else {
			kha_input_Mouse.get().hideSystemCursor();
		}
	}
	,setFullscreen: function(fullscreen) {
		if(fullscreen == null) {
			fullscreen = true;
		}
		no_logic_kha_fox_application_App.settings.fullscreen = fullscreen;
		this.setWindowMode(null,no_logic_kha_fox_application_App.settings.fullscreen ? 1 : 0);
	}
	,setWindowMode: function(id,value) {
		if(id == null) {
			id = 0;
		}
		if(kha_Window.get(0) != null) {
			kha_Window.get(0).set_mode(value);
		}
		return value;
	}
	,createRTBuffer: function(width,height) {
		return kha_Image.createRenderTarget(width,height,0,2,this.RTBufferAA);
	}
	,createRTMatchingBuffer: function(otherBuffer) {
		if(otherBuffer != null) {
			return kha_Image.createRenderTarget(otherBuffer.get_width(),otherBuffer.get_height(),0,2,this.RTBufferAA);
		} else {
			return kha_Image.createRenderTarget(1,1,0,2,this.RTBufferAA);
		}
	}
	,__class__: no_logic_kha_fox_application_AppSystem
};
var no_logic_kha_fox_application_App = function() {
	this.height = 0;
	this.width = 0;
	var _gthis = this;
	no_logic_kha_fox_application_App.i = this;
	no_logic_kha_fox_application_system_AppHandler.appCreated(this);
	kha_Scheduler.addTimeTask(function() {
		no_logic_kha_fox_application_App.settings.windowWidth = kha_System.windowWidth();
		no_logic_kha_fox_application_App.settings.windowHeight = kha_System.windowHeight();
		if(no_logic_kha_fox_application_App.settings.screenSizeAdaptToWindow) {
			no_logic_kha_fox_application_App.settings.width = no_logic_kha_fox_application_App.settings.windowWidth;
			no_logic_kha_fox_application_App.settings.height = no_logic_kha_fox_application_App.settings.windowHeight;
		}
		var time = kha_System.get_time();
		if(no_logic_kha_fox_application_App.i.stage != null) {
			no_logic_kha_fox_application_App.i.stage.set_width(no_logic_kha_fox_application_App.settings.width);
			no_logic_kha_fox_application_App.i.stage.set_height(no_logic_kha_fox_application_App.settings.height);
			no_logic_kha_fox_application_App.i.stage.update();
		}
		no_logic_kha_fox_application_App.i.width = no_logic_kha_fox_application_App.i.stage.width | 0;
		no_logic_kha_fox_application_App.i.height = no_logic_kha_fox_application_App.i.stage.height | 0;
		_gthis.update();
		tween_utils_Stopwatch.delta = kha_Scheduler.realTime() - tween_utils_Stopwatch.sample;
		tween_utils_Stopwatch.time += tween_utils_Stopwatch.delta;
		tween_Delta.defaultChannel.step(tween_utils_Stopwatch.delta);
		tween_utils_Stopwatch.sample = kha_Scheduler.realTime();
		no_logic_kha_fox_debug_Debug.updateTime = kha_System.get_time() - time;
		no_logic_kha_fox_debug_Debug.update();
		_gthis.afterUpdate();
	},0,1 / no_logic_kha_fox_application_App.settings.render.fps);
	kha_System.notifyOnFrames(function(framebuffers) {
		no_logic_kha_fox_application_App.system.time = kha_System.get_time();
		no_logic_kha_fox_application_App.system.deltaTime = no_logic_kha_fox_application_App.system.time - no_logic_kha_fox_application_App.system.lastTime;
		no_logic_kha_fox_application_App.system.lastTime = no_logic_kha_fox_application_App.system.time;
		var time = kha_System.get_time();
		if(no_logic_kha_fox_application_App.i.stage != null) {
			no_logic_kha_fox_application_App.i.stage.render(framebuffers[0]);
		}
		_gthis.render(framebuffers[0]);
		no_logic_kha_fox_debug_Debug.renderTime = kha_System.get_time() - time;
		no_logic_kha_fox_debug_Debug.render(framebuffers[0]);
		_gthis.afterRender(framebuffers[0]);
	});
	this.run();
	no_logic_kha_fox_application_App.settings.windowWidth = kha_System.windowWidth();
	no_logic_kha_fox_application_App.settings.windowHeight = kha_System.windowHeight();
	if(no_logic_kha_fox_application_App.settings.screenSizeAdaptToWindow) {
		no_logic_kha_fox_application_App.settings.width = no_logic_kha_fox_application_App.settings.windowWidth;
		no_logic_kha_fox_application_App.settings.height = no_logic_kha_fox_application_App.settings.windowHeight;
	}
	var time = kha_System.get_time();
	if(no_logic_kha_fox_application_App.i.stage != null) {
		no_logic_kha_fox_application_App.i.stage.set_width(no_logic_kha_fox_application_App.settings.width);
		no_logic_kha_fox_application_App.i.stage.set_height(no_logic_kha_fox_application_App.settings.height);
		no_logic_kha_fox_application_App.i.stage.update();
	}
	no_logic_kha_fox_application_App.i.width = no_logic_kha_fox_application_App.i.stage.width | 0;
	no_logic_kha_fox_application_App.i.height = no_logic_kha_fox_application_App.i.stage.height | 0;
	this.update();
	tween_utils_Stopwatch.delta = kha_Scheduler.realTime() - tween_utils_Stopwatch.sample;
	tween_utils_Stopwatch.time += tween_utils_Stopwatch.delta;
	tween_Delta.defaultChannel.step(tween_utils_Stopwatch.delta);
	tween_utils_Stopwatch.sample = kha_Scheduler.realTime();
	no_logic_kha_fox_debug_Debug.updateTime = kha_System.get_time() - time;
	no_logic_kha_fox_debug_Debug.update();
	this.afterUpdate();
};
$hxClasses["no.logic.kha.fox.application.App"] = no_logic_kha_fox_application_App;
no_logic_kha_fox_application_App.__name__ = "no.logic.kha.fox.application.App";
no_logic_kha_fox_application_App.start = function(baseClass,waitForKontentum,createDisplayList) {
	if(createDisplayList == null) {
		createDisplayList = true;
	}
	if(waitForKontentum == null) {
		waitForKontentum = false;
	}
	no_logic_kha_fox_application_App.settings.system.baseClass = baseClass;
	no_logic_kha_fox_application_App.settings.system.waitForKontentum = waitForKontentum;
	no_logic_kha_fox_application_App.settings.system.createDisplayList = createDisplayList;
	no_logic_kha_fox_application_system_AppHandler.init(no_logic_kha_fox_application_App.onAppInitReady);
};
no_logic_kha_fox_application_App.onAppInitReady = function() {
	if(no_logic_kha_fox_application_App.settings.config.kontentum.token == null || !no_logic_kha_fox_application_App.settings.system.waitForKontentum) {
		no_logic_kha_fox_application_App.entry();
	} else {
		var callback = no_logic_kha_fox_application_App.entry;
		no_logic_fox_kontentum_Kontentum.onComplete = callback;
		no_logic_fox_kontentum_Kontentum.onFail = function(status) {
			no_logic_fox_Fox.get_c().error("Connection to Kontentum failed.",true);
			no_logic_fox_Fox.get_c().error(status);
			callback();
		};
		no_logic_fox_kontentum_Kontentum.connect(no_logic_kha_fox_application_App.settings.config.kontentum.token,no_logic_kha_fox_application_App.settings.config.kontentum.ip,no_logic_kha_fox_application_App.settings.config.kontentum.localFiles,true,no_logic_kha_fox_application_App.settings.config.kontentum.preloadImages);
	}
};
no_logic_kha_fox_application_App.entry = function() {
	if(no_logic_kha_fox_application_App.settings.system.baseClass != null) {
		no_logic_kha_fox_application_App.settings.system.baseApp = Type.createInstance(no_logic_kha_fox_application_App.settings.system.baseClass,[]);
	}
	no_logic_kha_fox_input_KhaInput.init();
};
no_logic_kha_fox_application_App.createDefaultSettings = function() {
	var appSettings = { name : "Fox", x : 0, y : 0, width : 0, height : 0, screenSizeAdaptToWindow : false, fullscreen : null, visible : true, windowFeatures : 1 | 4 | 2, windowWidth : 0, windowHeight : 0, displayNr : -1, bgColor : -16777216, showMouse : true, scaleToFit : false, clipToBounds : false, preloader : no_logic_kha_fox_application_preloader_StandardPreloader, inputParams : new haxe_ds_StringMap(), debug : { enabled : false, showFPS : true, showStatisics : true, showBounds : false, boundsColor : -1, enableConsole : true}, render : { renderMode : no_logic_kha_fox_displaylist_DisplayListRenderMode.Frontbuffer, samplesPrPixel : 2, displayBackbuffer : true, vSync : true, fps : 60, dpi : 72, postprocessing : { enabled : false, gradingFilter : new no_logic_kha_fox_displaylist_effects_postprocessing_PostProcess_$GradingFilter(), preGradingPostFXFilters : [], postGradingPostFXFilters : []}}, system : { baseClass : null, baseApp : null, waitForKontentum : false, createDisplayList : true}, config : { kontentum : { }, debug : null}};
	if(kha_Display.get_primary() != null) {
		appSettings.render.dpi = kha_Display.get_primary().get_pixelsPerInch();
		if(kha_Display.get_primary().get_frequency() != null) {
			appSettings.render.fps = kha_Display.get_primary().get_frequency();
		}
	}
	return appSettings;
};
no_logic_kha_fox_application_App.prototype = {
	stage: null
	,width: null
	,height: null
	,run: function() {
	}
	,update: function() {
	}
	,render: function(cv) {
	}
	,afterUpdate: function() {
	}
	,afterRender: function(cv) {
	}
	,addChild: function(displayObject,name) {
		if(this.stage != null) {
			return this.stage.addChild(displayObject,name);
		} else {
			return null;
		}
	}
	,addChildAt: function(displayObject,index,name) {
		if(index == null) {
			index = 0;
		}
		if(this.stage != null) {
			return this.stage.addChildAt(displayObject,index,name);
		} else {
			return null;
		}
	}
	,removeChild: function(displayObject) {
		if(this.stage != null) {
			return this.stage.removeChild(displayObject);
		} else {
			return false;
		}
	}
	,getVar: function(varCode) {
		return no_logic_fox_Fox.getVar(varCode);
	}
	,getAsset: function(varCode) {
		return no_logic_fox_Fox.getAsset(varCode);
	}
	,setVar: function(varCode,value) {
		no_logic_fox_Fox.setVar(varCode,value);
	}
	,hasVar: function(varCode) {
		return no_logic_fox_Fox.hasVar(varCode);
	}
	,debug: function(value) {
		no_logic_fox_Fox.debug(value);
	}
	,log: function(value) {
		no_logic_fox_Fox.log(value);
	}
	,warn: function(value) {
		no_logic_fox_Fox.warn(value);
	}
	,__class__: no_logic_kha_fox_application_App
};
var Main = function() {
	no_logic_kha_fox_application_App.call(this);
	this.addChild(new app_Intro());
};
$hxClasses["Main"] = Main;
Main.__name__ = "Main";
Main.main = function() {
	no_logic_kha_fox_application_App.settings.name = "Modplayer.hx";
	no_logic_kha_fox_application_App.settings.width = 1920;
	no_logic_kha_fox_application_App.settings.height = 1080;
	no_logic_kha_fox_application_App.settings.bgColor = -16777216;
	no_logic_kha_fox_application_App.settings.showMouse = true;
	no_logic_kha_fox_application_App.settings.render.samplesPrPixel = 2;
	no_logic_kha_fox_application_App.settings.debug.enabled = false;
	no_logic_kha_fox_application_App.settings.debug.showFPS = true;
	no_logic_kha_fox_application_App.settings.debug.showStatisics = true;
	no_logic_kha_fox_application_App.settings.debug.showBounds = false;
	no_logic_kha_fox_application_App.settings.clipToBounds = true;
	no_logic_kha_fox_application_App.settings.scaleToFit = true;
	no_logic_kha_fox_application_App.settings.render.renderMode = no_logic_kha_fox_displaylist_DisplayListRenderMode.Backbuffer;
	no_logic_kha_fox_application_App.settings.render.postprocessing.enabled = true;
	no_logic_kha_fox_application_App.start(Main);
};
Main.__super__ = no_logic_kha_fox_application_App;
Main.prototype = $extend(no_logic_kha_fox_application_App.prototype,{
	__class__: Main
});
Math.__name__ = "Math";
var Reflect = function() { };
$hxClasses["Reflect"] = Reflect;
Reflect.__name__ = "Reflect";
Reflect.field = function(o,field) {
	try {
		return o[field];
	} catch( _g ) {
		return null;
	}
};
Reflect.getProperty = function(o,field) {
	var tmp;
	if(o == null) {
		return null;
	} else {
		var tmp1;
		if(o.__properties__) {
			tmp = o.__properties__["get_" + field];
			tmp1 = tmp;
		} else {
			tmp1 = false;
		}
		if(tmp1) {
			return o[tmp]();
		} else {
			return o[field];
		}
	}
};
Reflect.setProperty = function(o,field,value) {
	var tmp;
	var tmp1;
	if(o.__properties__) {
		tmp = o.__properties__["set_" + field];
		tmp1 = tmp;
	} else {
		tmp1 = false;
	}
	if(tmp1) {
		o[tmp](value);
	} else {
		o[field] = value;
	}
};
Reflect.fields = function(o) {
	var a = [];
	if(o != null) {
		var hasOwnProperty = Object.prototype.hasOwnProperty;
		for( var f in o ) {
		if(f != "__id__" && f != "hx__closures__" && hasOwnProperty.call(o,f)) {
			a.push(f);
		}
		}
	}
	return a;
};
Reflect.isFunction = function(f) {
	if(typeof(f) == "function") {
		return !(f.__name__ || f.__ename__);
	} else {
		return false;
	}
};
Reflect.deleteField = function(o,field) {
	if(!Object.prototype.hasOwnProperty.call(o,field)) {
		return false;
	}
	delete(o[field]);
	return true;
};
var Std = function() { };
$hxClasses["Std"] = Std;
Std.__name__ = "Std";
Std.string = function(s) {
	return js_Boot.__string_rec(s,"");
};
Std.parseInt = function(x) {
	if(x != null) {
		var _g = 0;
		var _g1 = x.length;
		while(_g < _g1) {
			var i = _g++;
			var c = x.charCodeAt(i);
			if(c <= 8 || c >= 14 && c != 32 && c != 45) {
				var nc = x.charCodeAt(i + 1);
				var v = parseInt(x,nc == 120 || nc == 88 ? 16 : 10);
				if(isNaN(v)) {
					return null;
				} else {
					return v;
				}
			}
		}
	}
	return null;
};
var StringBuf = function() {
	this.b = "";
};
$hxClasses["StringBuf"] = StringBuf;
StringBuf.__name__ = "StringBuf";
StringBuf.prototype = {
	b: null
	,__class__: StringBuf
};
var StringTools = function() { };
$hxClasses["StringTools"] = StringTools;
StringTools.__name__ = "StringTools";
StringTools.htmlEscape = function(s,quotes) {
	var buf_b = "";
	var _g_offset = 0;
	var _g_s = s;
	while(_g_offset < _g_s.length) {
		var s = _g_s;
		var index = _g_offset++;
		var c = s.charCodeAt(index);
		if(c >= 55296 && c <= 56319) {
			c = c - 55232 << 10 | s.charCodeAt(index + 1) & 1023;
		}
		var c1 = c;
		if(c1 >= 65536) {
			++_g_offset;
		}
		var code = c1;
		switch(code) {
		case 34:
			if(quotes) {
				buf_b += "&quot;";
			} else {
				buf_b += String.fromCodePoint(code);
			}
			break;
		case 38:
			buf_b += "&amp;";
			break;
		case 39:
			if(quotes) {
				buf_b += "&#039;";
			} else {
				buf_b += String.fromCodePoint(code);
			}
			break;
		case 60:
			buf_b += "&lt;";
			break;
		case 62:
			buf_b += "&gt;";
			break;
		default:
			buf_b += String.fromCodePoint(code);
		}
	}
	return buf_b;
};
StringTools.endsWith = function(s,end) {
	var elen = end.length;
	var slen = s.length;
	if(slen >= elen) {
		return s.indexOf(end,slen - elen) == slen - elen;
	} else {
		return false;
	}
};
StringTools.isSpace = function(s,pos) {
	var c = HxOverrides.cca(s,pos);
	if(!(c > 8 && c < 14)) {
		return c == 32;
	} else {
		return true;
	}
};
StringTools.ltrim = function(s) {
	var l = s.length;
	var r = 0;
	while(r < l && StringTools.isSpace(s,r)) ++r;
	if(r > 0) {
		return HxOverrides.substr(s,r,l - r);
	} else {
		return s;
	}
};
StringTools.rtrim = function(s) {
	var l = s.length;
	var r = 0;
	while(r < l && StringTools.isSpace(s,l - r - 1)) ++r;
	if(r > 0) {
		return HxOverrides.substr(s,0,l - r);
	} else {
		return s;
	}
};
StringTools.trim = function(s) {
	return StringTools.ltrim(StringTools.rtrim(s));
};
StringTools.replace = function(s,sub,by) {
	return s.split(sub).join(by);
};
var Type = function() { };
$hxClasses["Type"] = Type;
Type.__name__ = "Type";
Type.createInstance = function(cl,args) {
	return new (Function.prototype.bind.apply(cl,[null].concat(args)));
};
Type.createEnum = function(e,constr,params) {
	var f = Reflect.field(e,constr);
	if(f == null) {
		throw haxe_Exception.thrown("No such constructor " + constr);
	}
	if(Reflect.isFunction(f)) {
		if(params == null) {
			throw haxe_Exception.thrown("Constructor " + constr + " need parameters");
		}
		return f.apply(e,params);
	}
	if(params != null && params.length != 0) {
		throw haxe_Exception.thrown("Constructor " + constr + " does not need parameters");
	}
	return f;
};
Type.getInstanceFields = function(c) {
	var a = [];
	for(var i in c.prototype) a.push(i);
	HxOverrides.remove(a,"__class__");
	HxOverrides.remove(a,"__properties__");
	return a;
};
var UInt = {};
UInt.gt = function(a,b) {
	var aNeg = a < 0;
	if(aNeg != b < 0) {
		return aNeg;
	} else {
		return a > b;
	}
};
UInt.gte = function(a,b) {
	var aNeg = a < 0;
	if(aNeg != b < 0) {
		return aNeg;
	} else {
		return a >= b;
	}
};
UInt.toFloat = function(this1) {
	if(this1 < 0) {
		return 4294967296.0 + this1;
	} else {
		return this1 + 0.0;
	}
};
var XmlType = {};
XmlType.toString = function(this1) {
	switch(this1) {
	case 0:
		return "Element";
	case 1:
		return "PCData";
	case 2:
		return "CData";
	case 3:
		return "Comment";
	case 4:
		return "DocType";
	case 5:
		return "ProcessingInstruction";
	case 6:
		return "Document";
	}
};
var Xml = function(nodeType) {
	this.nodeType = nodeType;
	this.children = [];
	this.attributeMap = new haxe_ds_StringMap();
};
$hxClasses["Xml"] = Xml;
Xml.__name__ = "Xml";
Xml.parse = function(str) {
	return haxe_xml_Parser.parse(str);
};
Xml.createElement = function(name) {
	var xml = new Xml(Xml.Element);
	if(xml.nodeType != Xml.Element) {
		throw haxe_Exception.thrown("Bad node type, expected Element but found " + (xml.nodeType == null ? "null" : XmlType.toString(xml.nodeType)));
	}
	xml.nodeName = name;
	return xml;
};
Xml.createPCData = function(data) {
	var xml = new Xml(Xml.PCData);
	if(xml.nodeType == Xml.Document || xml.nodeType == Xml.Element) {
		throw haxe_Exception.thrown("Bad node type, unexpected " + (xml.nodeType == null ? "null" : XmlType.toString(xml.nodeType)));
	}
	xml.nodeValue = data;
	return xml;
};
Xml.createCData = function(data) {
	var xml = new Xml(Xml.CData);
	if(xml.nodeType == Xml.Document || xml.nodeType == Xml.Element) {
		throw haxe_Exception.thrown("Bad node type, unexpected " + (xml.nodeType == null ? "null" : XmlType.toString(xml.nodeType)));
	}
	xml.nodeValue = data;
	return xml;
};
Xml.createComment = function(data) {
	var xml = new Xml(Xml.Comment);
	if(xml.nodeType == Xml.Document || xml.nodeType == Xml.Element) {
		throw haxe_Exception.thrown("Bad node type, unexpected " + (xml.nodeType == null ? "null" : XmlType.toString(xml.nodeType)));
	}
	xml.nodeValue = data;
	return xml;
};
Xml.createDocType = function(data) {
	var xml = new Xml(Xml.DocType);
	if(xml.nodeType == Xml.Document || xml.nodeType == Xml.Element) {
		throw haxe_Exception.thrown("Bad node type, unexpected " + (xml.nodeType == null ? "null" : XmlType.toString(xml.nodeType)));
	}
	xml.nodeValue = data;
	return xml;
};
Xml.createProcessingInstruction = function(data) {
	var xml = new Xml(Xml.ProcessingInstruction);
	if(xml.nodeType == Xml.Document || xml.nodeType == Xml.Element) {
		throw haxe_Exception.thrown("Bad node type, unexpected " + (xml.nodeType == null ? "null" : XmlType.toString(xml.nodeType)));
	}
	xml.nodeValue = data;
	return xml;
};
Xml.createDocument = function() {
	return new Xml(Xml.Document);
};
Xml.prototype = {
	nodeType: null
	,nodeName: null
	,nodeValue: null
	,parent: null
	,children: null
	,attributeMap: null
	,get: function(att) {
		if(this.nodeType != Xml.Element) {
			throw haxe_Exception.thrown("Bad node type, expected Element but found " + (this.nodeType == null ? "null" : XmlType.toString(this.nodeType)));
		}
		return this.attributeMap.h[att];
	}
	,set: function(att,value) {
		if(this.nodeType != Xml.Element) {
			throw haxe_Exception.thrown("Bad node type, expected Element but found " + (this.nodeType == null ? "null" : XmlType.toString(this.nodeType)));
		}
		this.attributeMap.h[att] = value;
	}
	,exists: function(att) {
		if(this.nodeType != Xml.Element) {
			throw haxe_Exception.thrown("Bad node type, expected Element but found " + (this.nodeType == null ? "null" : XmlType.toString(this.nodeType)));
		}
		return Object.prototype.hasOwnProperty.call(this.attributeMap.h,att);
	}
	,attributes: function() {
		if(this.nodeType != Xml.Element) {
			throw haxe_Exception.thrown("Bad node type, expected Element but found " + (this.nodeType == null ? "null" : XmlType.toString(this.nodeType)));
		}
		return haxe_ds_StringMap.keysIterator(this.attributeMap.h);
	}
	,elements: function() {
		if(this.nodeType != Xml.Document && this.nodeType != Xml.Element) {
			throw haxe_Exception.thrown("Bad node type, expected Element or Document but found " + (this.nodeType == null ? "null" : XmlType.toString(this.nodeType)));
		}
		var _g = [];
		var _g1 = 0;
		var _g2 = this.children;
		while(_g1 < _g2.length) {
			var child = _g2[_g1];
			++_g1;
			if(child.nodeType == Xml.Element) {
				_g.push(child);
			}
		}
		return new haxe_iterators_ArrayIterator(_g);
	}
	,elementsNamed: function(name) {
		if(this.nodeType != Xml.Document && this.nodeType != Xml.Element) {
			throw haxe_Exception.thrown("Bad node type, expected Element or Document but found " + (this.nodeType == null ? "null" : XmlType.toString(this.nodeType)));
		}
		var _g = [];
		var _g1 = 0;
		var _g2 = this.children;
		while(_g1 < _g2.length) {
			var child = _g2[_g1];
			++_g1;
			var tmp;
			if(child.nodeType == Xml.Element) {
				if(child.nodeType != Xml.Element) {
					throw haxe_Exception.thrown("Bad node type, expected Element but found " + (child.nodeType == null ? "null" : XmlType.toString(child.nodeType)));
				}
				tmp = child.nodeName == name;
			} else {
				tmp = false;
			}
			if(tmp) {
				_g.push(child);
			}
		}
		return new haxe_iterators_ArrayIterator(_g);
	}
	,firstElement: function() {
		if(this.nodeType != Xml.Document && this.nodeType != Xml.Element) {
			throw haxe_Exception.thrown("Bad node type, expected Element or Document but found " + (this.nodeType == null ? "null" : XmlType.toString(this.nodeType)));
		}
		var _g = 0;
		var _g1 = this.children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(child.nodeType == Xml.Element) {
				return child;
			}
		}
		return null;
	}
	,addChild: function(x) {
		if(this.nodeType != Xml.Document && this.nodeType != Xml.Element) {
			throw haxe_Exception.thrown("Bad node type, expected Element or Document but found " + (this.nodeType == null ? "null" : XmlType.toString(this.nodeType)));
		}
		if(x.parent != null) {
			x.parent.removeChild(x);
		}
		this.children.push(x);
		x.parent = this;
	}
	,removeChild: function(x) {
		if(this.nodeType != Xml.Document && this.nodeType != Xml.Element) {
			throw haxe_Exception.thrown("Bad node type, expected Element or Document but found " + (this.nodeType == null ? "null" : XmlType.toString(this.nodeType)));
		}
		if(HxOverrides.remove(this.children,x)) {
			x.parent = null;
			return true;
		}
		return false;
	}
	,toString: function() {
		return haxe_xml_Printer.print(this);
	}
	,__class__: Xml
};
var no_logic_kha_fox_displaylist_DisplayObject = function(data) {
	this.isComponentPart = false;
	this.data = { };
	this.globalAlpha = 1;
	this.filterPadding = 0;
	this.bitmapCacheHeight = 0;
	this.bitmapCacheWidth = 0;
	this.cacheAsBitmap = false;
	this.autoCleanUpDisplayObjects = true;
	this.centerOffsetY = 0;
	this.centerOffsetX = 0;
	this.isDropTarget = false;
	this.useCustomRender = false;
	this.zindex = -1;
	this.sizeToParent = false;
	this.isInDisplayList = false;
	this.isDisposed = false;
	this.disposeOnRemove = true;
	this.children = [];
	this.align = no_logic_kha_fox_displaylist_layout_Align.left;
	this.color = -1;
	this.clipping = false;
	this.visible = true;
	this.size = new kha_math_FastVector2();
	this.lockCenter = false;
	this.center = false;
	this.centerY = 0;
	this.centerX = 0;
	this.rotation = 0;
	this.interactAlpha = 1;
	this.alpha = 1;
	this.invScaleY = 1;
	this.invScaleX = 1;
	this.globalScaleY = 1;
	this.globalScaleX = 1;
	this.scaleY = 1;
	this.scaleX = 1;
	this.scale = 1;
	this.hitBounds = new no_logic_fox_types_Rectangle();
	this.globalBounds = new no_logic_fox_types_Rectangle();
	this.bounds = new no_logic_fox_types_Rectangle();
	this.flags = [0];
	this.globalY = 0;
	this.globalX = 0;
	this.y = 0;
	this.x = 0;
	this.objecttype = no_logic_kha_fox_displaylist_DisplayObjectType.object;
	this.preOk = false;
	if(js_Boot.getClass(this) != no_logic_kha_fox_displaylist_Stage) {
		no_logic_kha_fox_displaylist_DisplayObject.liveInstances++;
	}
	if(no_logic_kha_fox_application_App.i != null && no_logic_kha_fox_application_App.i.stage != null) {
		this.stage = no_logic_kha_fox_application_App.i.stage;
	}
	if(data != null) {
		data.objecttype = no_logic_kha_fox_displaylist_DisplayObjectType.object;
		this.setPropsFromData(data);
	}
	this.objecttype = no_logic_kha_fox_displaylist_DisplayObjectType.object;
	if(this.name == null) {
		this.set_name("displayObject" + no_logic_kha_fox_displaylist_DisplayObject.instanceCounter++);
	}
	this.created();
	no_logic_fox_utils_Bits.set(this.flags,5);
};
$hxClasses["no.logic.kha.fox.displaylist.DisplayObject"] = no_logic_kha_fox_displaylist_DisplayObject;
no_logic_kha_fox_displaylist_DisplayObject.__name__ = "no.logic.kha.fox.displaylist.DisplayObject";
no_logic_kha_fox_displaylist_DisplayObject.prototype = {
	preOk: null
	,objecttype: null
	,type: null
	,stage: null
	,uuid: null
	,name: null
	,x: null
	,y: null
	,globalX: null
	,globalY: null
	,width: null
	,height: null
	,flags: null
	,bounds: null
	,globalBounds: null
	,hitBounds: null
	,scale: null
	,scaleX: null
	,scaleY: null
	,globalScaleX: null
	,globalScaleY: null
	,invScaleX: null
	,invScaleY: null
	,alpha: null
	,interactAlpha: null
	,rotation: null
	,centerX: null
	,centerY: null
	,center: null
	,lockCenter: null
	,size: null
	,visible: null
	,clipping: null
	,color: null
	,align: null
	,numChildren: null
	,children: null
	,parent: null
	,disposeOnRemove: null
	,isDisposed: null
	,isInDisplayList: null
	,variable: null
	,asset: null
	,sizeToParent: null
	,zindex: null
	,useCustomRender: null
	,isDropTarget: null
	,centerOffsetX: null
	,centerOffsetY: null
	,shader: null
	,transition: null
	,autoCleanUpDisplayObjects: null
	,cacheAsBitmap: null
	,bitmapCache: null
	,bitmapCacheWidth: null
	,bitmapCacheHeight: null
	,filterCache: null
	,filterPadding: null
	,globalAlpha: null
	,filters: null
	,uixData: null
	,uixElement: null
	,data: null
	,isComponentPart: null
	,libraryItemName: null
	,layout: null
	,timeouts: null
	,created: function() {
		if(this.uuid == null) {
			this.uuid = Std.string(no_logic_kha_fox_displaylist_DisplayObject.instanceCounter - 1);
		}
	}
	,addChild: function(displayObject,name) {
		if(displayObject == null || this.isDisposed) {
			return null;
		}
		if(name != null) {
			displayObject.set_name(name);
		}
		if(displayObject.parent != this) {
			if(displayObject.stage == null) {
				displayObject.stage = this.stage;
			}
			if(this.children.indexOf(displayObject) != -1) {
				HxOverrides.remove(this.children,displayObject);
			}
			this.children.push(displayObject);
			displayObject.zindex = this.children.length - 1;
			displayObject.set_parent(this);
		}
		if(!displayObject.preOk) {
			no_logic_kha_fox_displaylist_DisplayList.calculateLayout(displayObject);
			displayObject.update();
		}
		no_logic_fox_utils_Bits.set(this.flags,6);
		return displayObject;
	}
	,addChildAt: function(displayObject,index,name) {
		if(index == null) {
			index = 0;
		}
		if(displayObject == null || this.isDisposed) {
			return null;
		}
		if(name != null) {
			displayObject.set_name(name);
		}
		if(displayObject.parent != this) {
			if(displayObject.stage == null) {
				displayObject.stage = this.stage;
			}
			if(this.children.indexOf(displayObject) != -1) {
				HxOverrides.remove(this.children,displayObject);
			}
			this.children.splice(index,0,displayObject);
			displayObject.zindex = index;
			displayObject.set_parent(this);
		}
		no_logic_fox_utils_Bits.set(this.flags,6);
		return displayObject;
	}
	,removeChild: function(displayObject) {
		var removed = true;
		if(this.children != null && displayObject != null) {
			removed = HxOverrides.remove(this.children,displayObject);
		}
		if(removed && displayObject != null) {
			displayObject.set_parent(null);
			if(displayObject.disposeOnRemove) {
				displayObject.dispose();
				displayObject = null;
			} else {
				displayObject.onRemovedFromStage();
			}
		}
		no_logic_fox_utils_Bits.set(this.flags,6);
		return removed;
	}
	,removeChildByUUID: function(uuid) {
		if(uuid == null) {
			return false;
		}
		var _g = 0;
		var _g1 = this.children;
		while(_g < _g1.length) {
			var c = _g1[_g];
			++_g;
			if(c != null && c.uuid == uuid) {
				var removed = HxOverrides.remove(this.children,c);
				if(removed) {
					c.set_parent(null);
					if(c.disposeOnRemove) {
						c.dispose();
						c = null;
					} else {
						c.onRemovedFromStage();
					}
				}
				return removed;
			}
		}
		no_logic_fox_utils_Bits.set(this.flags,6);
		return false;
	}
	,getChildByName: function(childName,recursive) {
		if(recursive == null) {
			recursive = false;
		}
		var _g = 0;
		var _g1 = this.children;
		while(_g < _g1.length) {
			var c = _g1[_g];
			++_g;
			if(c.name == childName) {
				return c;
			}
		}
		if(recursive) {
			var _g = 0;
			var _g1 = this.children;
			while(_g < _g1.length) {
				var fd = this.getCBNR(childName,_g1[_g++]);
				if(fd != null) {
					return fd;
				}
			}
		}
		return null;
	}
	,getChildByUUID: function(uuid,recursive) {
		if(recursive == null) {
			recursive = false;
		}
		var _g = 0;
		var _g1 = this.children;
		while(_g < _g1.length) {
			var c = _g1[_g];
			++_g;
			if(c.uuid == uuid) {
				return c;
			}
		}
		return null;
	}
	,getCBNR: function(childName,child) {
		var _g = 0;
		var _g1 = child.children;
		while(_g < _g1.length) {
			var c = _g1[_g];
			++_g;
			if(childName == c.name) {
				return c;
			}
			var fd = this.getCBNR(childName,c);
			if(fd != null) {
				return fd;
			}
		}
		return null;
	}
	,setCenter: function(centerX,centerY,lock) {
		if(lock == null) {
			lock = false;
		}
		if(centerY == null) {
			centerY = 0.5;
		}
		if(centerX == null) {
			centerX = 0.5;
		}
		this.set_centerX(centerX);
		this.set_centerY(centerY);
		if(lock) {
			this.set_lockCenter(true);
		}
		no_logic_fox_utils_Bits.set(this.flags,6);
		return this;
	}
	,setScalarPos: function(scalarX,scalarY,offsetX,offsetY) {
		if(offsetY == null) {
			offsetY = 0.0;
		}
		if(offsetX == null) {
			offsetX = 0.0;
		}
		if(this.parent == null) {
			return this;
		}
		var widthScalar = scalarX;
		if(scalarX == null) {
			widthScalar = 0.5;
		}
		this.set_x(this.parent.width * widthScalar + offsetX);
		var heightScalar = scalarY;
		if(scalarY == null) {
			heightScalar = 0.5;
		}
		this.set_y(this.parent.height * heightScalar + offsetY);
		no_logic_kha_fox_displaylist_DisplayList.calculateLayout(this);
		this.updateLayout();
		return this;
	}
	,setScalarPosSize: function(scalarX,scalarY,scalarWidth,scalarHeight) {
		if(this.parent == null) {
			return this;
		}
		var widthScalar = scalarX;
		if(scalarX == null) {
			widthScalar = 0.5;
		}
		this.set_x(this.parent.width * widthScalar);
		var heightScalar = scalarY;
		if(scalarY == null) {
			heightScalar = 0.5;
		}
		this.set_y(this.parent.height * heightScalar);
		var widthScalar = scalarWidth;
		if(scalarWidth == null) {
			widthScalar = 0.5;
		}
		this.set_width(this.parent.width * widthScalar);
		var heightScalar = scalarHeight;
		if(scalarHeight == null) {
			heightScalar = 0.5;
		}
		this.set_height(this.parent.height * heightScalar);
		no_logic_kha_fox_displaylist_DisplayList.calculateLayout(this);
		this.updateLayout();
		return this;
	}
	,update: function() {
		this.updateLayout();
		if(this.sizeToParent) {
			this.reSizetoParent();
		}
		if(this.uixElement != null) {
			this.uixElement.update();
		}
		if(this.transition != null) {
			this.transition.update();
		}
		if(this.filters != null && this.filters.length > 0 && !this.cacheAsBitmap) {
			this.set_cacheAsBitmap(true);
		} else if((this.filters == null || this.filters.length == 0) && this.cacheAsBitmap) {
			this.set_cacheAsBitmap(false);
		}
	}
	,updateLayout: function() {
		var xmin = 0;
		var _g = 0;
		var _g1 = this.children;
		while(_g < _g1.length) {
			var ch = _g1[_g];
			++_g;
			if(ch.x < xmin) {
				xmin = ch.x;
			}
		}
		var xMin = xmin;
		var ymin = 0;
		var _g = 0;
		var _g1 = this.children;
		while(_g < _g1.length) {
			var ch = _g1[_g];
			++_g;
			if(ch.y < ymin) {
				ymin = ch.y;
			}
		}
		var yMin = ymin;
		var nWidth = this.getNestedWidth() - xMin;
		var nHeight = this.getNestedHeight() - yMin;
		if(this.width == null || nWidth > this.width && !no_logic_fox_utils_Bits.isSet(this.flags,2)) {
			this.width = this.getNestedWidth() - xMin;
		}
		if(this.height == null || nHeight > this.height && !no_logic_fox_utils_Bits.isSet(this.flags,3)) {
			this.height = this.getNestedHeight() - yMin;
		}
		this.size.x = this.width;
		this.size.y = this.height;
		var sf = this.stage.displayList.scaleFactor;
		this.bounds.x = this.x;
		this.bounds.y = this.y;
		this.bounds.width = this.width;
		this.bounds.height = this.height;
		this.globalBounds.x = this.globalX + this.centerOffsetX * Math.abs(this.globalScaleX);
		this.globalBounds.y = this.globalY + this.centerOffsetY * Math.abs(this.globalScaleY);
		this.globalBounds.width = Math.abs(this.bounds.width * this.globalScaleX);
		this.globalBounds.height = Math.abs(this.bounds.height * this.globalScaleY);
		this.hitBounds = this.globalBounds.clone();
		this.hitBounds.x *= 1 / sf;
		this.hitBounds.y *= 1 / sf;
		this.hitBounds.x += xMin * Math.abs(this.globalScaleX);
		this.hitBounds.y += yMin * Math.abs(this.globalScaleY);
		var _g = this;
		_g.set_rotation(_g.rotation % 360);
		if(this.lockCenter) {
			this.setCenter();
		}
		if(this.layout != null) {
			this.layout.update();
		}
	}
	,getNestedWidth: function() {
		if(this.children.length == 0) {
			return this.width;
		}
		var widthMax = 0;
		var _g = 0;
		var _g1 = this.children;
		while(_g < _g1.length) {
			var ch = _g1[_g];
			++_g;
			if(ch.x + ch.width * ch.scaleX > widthMax) {
				widthMax = ch.x + ch.width * ch.scaleX;
			}
		}
		return widthMax;
	}
	,getNestedHeight: function() {
		if(this.children.length == 0) {
			return this.height;
		}
		var heightMax = 0;
		var _g = 0;
		var _g1 = this.children;
		while(_g < _g1.length) {
			var ch = _g1[_g];
			++_g;
			if(ch.y + ch.height * ch.scaleY > heightMax) {
				heightMax = ch.y + ch.height * ch.scaleY;
			}
		}
		return heightMax;
	}
	,onBindAsset: function(value) {
	}
	,onBindVar: function(value) {
	}
	,getAsset: function(varCode) {
		return no_logic_fox_Fox.getAsset(varCode);
	}
	,get_numChildren: function() {
		return this.children.length;
	}
	,set_asset: function(bindCode) {
		if(bindCode != null) {
			no_logic_fox_Fox.bindAsset(bindCode,$bind(this,this.onBindAsset));
			this.onBindAsset(no_logic_fox_Fox.getAsset(bindCode));
		}
		return this.asset = bindCode;
	}
	,set_variable: function(bindCode) {
		if(bindCode != null) {
			no_logic_fox_Fox.bindVar(bindCode,$bind(this,this.onBindVar));
			this.onBindVar(no_logic_fox_Fox.getVar(bindCode));
		}
		return this.variable = bindCode;
	}
	,onAddedToStage: function() {
		if(this.uixData != null && this.uixElement == null) {
			this.uixElement = new no_logic_kha_fox_displaylist_uixcomp_UIXGElement(this.uixData,this);
			if(this.uixElement.classInstance != null) {
				this.uixElement.classInstance.updateChildBindings();
			}
		}
		if(this.objecttype == no_logic_kha_fox_displaylist_DisplayObjectType.sprite || this.objecttype == no_logic_kha_fox_displaylist_DisplayObjectType.object) {
			this.reSizetoParent(false);
		}
		no_logic_kha_fox_displaylist_DisplayList.calculateScale(this);
		no_logic_kha_fox_displaylist_DisplayList.calculateLayout(this);
		no_logic_kha_fox_displaylist_transitions_Transition.construct(this);
		this.isInDisplayList = true;
		this.onAddedToDisplayList();
		if(this.uixElement != null) {
			this.uixElement.classInstance.created();
			no_logic_kha_fox_displaylist_uixcomp_UIXGComponentManager.eventCommand(no_logic_kha_fox_displaylist_uixcomp_UIXComponentEventAction.onCreate,this.uixElement);
		}
	}
	,onRemovedFromStage: function() {
		if(this.disposeOnRemove) {
			this.dispose();
		}
		this.isInDisplayList = false;
		this.onRemovedFromDisplayList();
	}
	,set_transition: function(tr) {
		return this.transition = tr;
	}
	,timeout: function(timeInSeconds,callback) {
		if(timeInSeconds == null) {
			timeInSeconds = 0.0;
		}
		if(this.timeouts == null) {
			this.timeouts = [];
		}
		this.timeouts.push(haxe_Timer.delay(callback,timeInSeconds * 1000 | 0));
		return this.timeouts.length - 1;
	}
	,clearTimeout: function(id) {
		if(this.timeouts != null && id < this.timeouts.length && this.timeouts[id] != null) {
			this.timeouts[id].stop();
			this.timeouts[id] = null;
			return true;
		} else {
			return false;
		}
	}
	,clearAllTimeouts: function() {
		if(this.timeouts == null) {
			return;
		}
		var _g = 0;
		var _g1 = this.timeouts.length;
		while(_g < _g1) {
			var i = _g++;
			if(this.timeouts[i] != null) {
				this.timeouts[i].stop();
				this.timeouts[i] = null;
			}
		}
		this.timeouts = null;
	}
	,setPropsFromData: function(data) {
		if(data != null) {
			data.objecttype = this.objecttype;
		}
		no_logic_fox_utils_ObjUtils.copyProperties(data,this);
		if(Object.prototype.hasOwnProperty.call(data,"x")) {
			no_logic_fox_utils_Bits.unset(this.flags,0);
		}
		if(Object.prototype.hasOwnProperty.call(data,"y")) {
			no_logic_fox_utils_Bits.unset(this.flags,1);
		}
	}
	,set_center: function(value) {
		this.setCenter();
		return this.center = value;
	}
	,set_lockCenter: function(value) {
		this.setCenter();
		return this.lockCenter = value;
	}
	,set_name: function(value) {
		return this.name = value;
	}
	,set_scale: function(value) {
		this.invScaleX = 1 / value;
		this.invScaleY = 1 / value;
		this.set_scaleX(value);
		this.set_scaleY(value);
		return this.scale = value;
	}
	,set_filters: function(value) {
		return this.filters = value;
	}
	,set_color: function(value) {
		if(value != this.color) {
			no_logic_fox_utils_Bits.set(this.flags,6);
		}
		return this.color = value;
	}
	,set_visible: function(value) {
		if(value != this.visible) {
			no_logic_fox_utils_Bits.set(this.flags,6);
		}
		return this.visible = value;
	}
	,set_clipping: function(value) {
		if(value != this.clipping) {
			no_logic_fox_utils_Bits.set(this.flags,6);
		}
		return this.clipping = value;
	}
	,set_centerX: function(value) {
		if(value != this.centerX) {
			no_logic_fox_utils_Bits.set(this.flags,6);
		}
		return this.centerX = value;
	}
	,set_centerY: function(value) {
		if(value != this.centerY) {
			no_logic_fox_utils_Bits.set(this.flags,6);
		}
		return this.centerY = value;
	}
	,set_rotation: function(value) {
		if(value != this.rotation) {
			no_logic_fox_utils_Bits.set(this.flags,6);
		}
		return this.rotation = value;
	}
	,set_alpha: function(value) {
		if(value != this.alpha) {
			no_logic_fox_utils_Bits.set(this.flags,6);
		}
		return this.alpha = value;
	}
	,set_x: function(value) {
		if(value != this.x) {
			no_logic_fox_utils_Bits.set(this.flags,6);
		}
		return this.x = value;
	}
	,set_y: function(value) {
		if(value != this.y) {
			no_logic_fox_utils_Bits.set(this.flags,6);
		}
		return this.y = value;
	}
	,set_scaleX: function(value) {
		this.invScaleX = 1 / value;
		if(value != this.scaleX) {
			no_logic_fox_utils_Bits.set(this.flags,6);
		}
		return this.scaleX = value;
	}
	,set_scaleY: function(value) {
		this.invScaleY = 1 / value;
		if(value != this.scaleY) {
			no_logic_fox_utils_Bits.set(this.flags,6);
		}
		return this.scaleY = value;
	}
	,set_width: function(value) {
		no_logic_fox_utils_Bits.set(this.flags,2);
		if(value != this.width) {
			no_logic_fox_utils_Bits.set(this.flags,6);
		}
		return this.width = value;
	}
	,set_height: function(value) {
		no_logic_fox_utils_Bits.set(this.flags,3);
		if(value != this.height) {
			no_logic_fox_utils_Bits.set(this.flags,6);
		}
		return this.height = value;
	}
	,set_parent: function(value) {
		if(value != this.parent) {
			no_logic_fox_utils_Bits.set(this.flags,6);
			if(value == null) {
				if(this.parent != null) {
					if(this.parent.children != null && this.parent.children.indexOf(this) != -1) {
						HxOverrides.remove(this.parent.children,this);
					}
					this.parent = null;
					this.onRemovedFromStage();
				}
			} else {
				this.parent = value;
				if(this.parent.children == null) {
					this.parent.children = [];
				}
				if(this.parent.children.indexOf(this) == -1) {
					this.parent.children.push(this);
					this.zindex = this.parent.children.length - 1;
				}
				this.onAddedToStage();
			}
		}
		return this.parent;
	}
	,set_libraryItemName: function(value) {
		return this.libraryItemName = value;
	}
	,set_cacheAsBitmap: function(value) {
		return this.cacheAsBitmap = value;
	}
	,didSizeToCacheChange: function() {
		if(this.bitmapCache == null || this.bitmapCacheWidth != this.width || this.bitmapCacheHeight != this.height) {
			this.reinitBitmapCache();
			return true;
		} else {
			return false;
		}
	}
	,reinitBitmapCache: function() {
		if(this.width <= 0 || this.height <= 0 || this.width == null || this.height == null) {
			if(this.bitmapCache != null) {
				this.bitmapCache.unload();
				this.bitmapCache = null;
			}
			return;
		} else {
			if(this.bitmapCache != null) {
				this.bitmapCache.unload();
			}
			this.bitmapCache = no_logic_kha_fox_application_App.system.createRTBuffer(this.width | 0,this.height | 0);
			this.bitmapCacheWidth = this.width;
			this.bitmapCacheHeight = this.height;
			no_logic_fox_utils_Bits.set(this.flags,5);
		}
	}
	,cleanupDisplayObjects: function() {
		var _g = 0;
		var _g1 = Reflect.fields(this);
		while(_g < _g1.length) {
			var d = _g1[_g];
			++_g;
			var f = Reflect.field(this,d);
			if(f != null && ((f) instanceof no_logic_kha_fox_displaylist_DisplayObject) && !((f) instanceof no_logic_kha_fox_displaylist_Stage) && d != "parent") {
				if(f != null) {
					f.dispose();
					this[d] = null;
				}
			}
		}
	}
	,reSizetoParent: function(force) {
		if(force == null) {
			force = true;
		}
		var didResize = false;
		if(this.parent != null) {
			if(force && (this.width != this.parent.width || this.height != this.parent.height)) {
				this.set_width(this.parent.width);
				this.set_height(this.parent.height);
				didResize = true;
			} else {
				if(!no_logic_fox_utils_Bits.isSet(this.flags,2) && this.width != this.parent.width) {
					this.set_width(this.parent.width);
					didResize = true;
				}
				if(!no_logic_fox_utils_Bits.isSet(this.flags,3) && this.height != this.parent.height) {
					this.set_height(this.parent.height);
					didResize = true;
				}
			}
		}
		return didResize;
	}
	,onAddedToDisplayList: function() {
	}
	,onRemovedFromDisplayList: function() {
	}
	,render: function(cv) {
	}
	,customRender: function(cv) {
	}
	,preRender: function(cv) {
		this.stage.displayList.g2.preDraw = true;
		this.render(cv);
		this.stage.displayList.g2.preDraw = false;
	}
	,renderBitmapCache: function(cv,g) {
		if(this.filterCache != null && this.filters != null && this.filters.length > 0) {
			g.color = -1;
			g.drawScaledImage(this.filterCache,-this.filterPadding,-this.filterPadding,this.width + this.filterPadding * 2,this.height + this.filterPadding * 2);
		} else if(this.bitmapCache != null) {
			g.color = -1;
			g.drawScaledImage(this.bitmapCache,0,0,this.width,this.height);
		} else {
			this.render(cv);
		}
	}
	,dispose: function() {
		if(!this.isDisposed) {
			this.isDisposed = true;
			this.isInDisplayList = false;
			this.clearAllTimeouts();
			if(this.filters != null) {
				var _g = 0;
				var _g1 = this.filters.length;
				while(_g < _g1) {
					var i = _g++;
					var f = this.filters[i];
					if(f != null) {
						f.dispose();
						this.filters[i] = null;
					}
				}
				this.set_filters(null);
			}
			if(this.bitmapCache != null) {
				this.bitmapCache.unload();
				this.bitmapCache = null;
			}
			if(this.filterCache != null) {
				this.filterCache.unload();
				this.filterCache = null;
			}
			if(this.transition != null) {
				this.transition.dispose();
				this.set_transition(null);
			}
			if(this.uixElement != null) {
				this.uixElement.dispose();
				this.uixElement = null;
			}
			this.uixData = null;
			if(this.children != null) {
				var tc = this.children;
				this.children = null;
				var _g = 0;
				while(_g < tc.length) tc[_g++].dispose();
				var _g = 0;
				var _g1 = tc.length;
				while(_g < _g1) tc[_g++] = null;
			}
			if(this.autoCleanUpDisplayObjects) {
				this.cleanupDisplayObjects();
			}
			if(this.parent != null) {
				this.parent.removeChild(this);
				this.set_parent(null);
			}
			this.objecttype = null;
			this.stage = null;
			this.size = null;
			this.align = null;
			this.uuid = null;
			this.set_name(null);
			this.globalBounds = null;
			this.hitBounds = null;
			this.bounds = null;
			this.set_libraryItemName(null);
			this.data = null;
			if(this.shader != null) {
				this.shader.dispose();
				this.shader = null;
			}
			if(this.transition != null) {
				this.transition.dispose();
				this.set_transition(null);
			}
			if(this.variable != null) {
				no_logic_fox_Fox.removeBindVar(this.variable);
				this.set_variable(null);
			}
			if(this.asset != null) {
				no_logic_fox_Fox.removeBindAsset(this.asset);
				this.set_asset(null);
			}
			if(js_Boot.getClass(this) != no_logic_kha_fox_displaylist_Stage) {
				no_logic_kha_fox_displaylist_DisplayObject.liveInstances--;
			}
		}
	}
	,__class__: no_logic_kha_fox_displaylist_DisplayObject
	,__properties__: {set_libraryItemName:"set_libraryItemName",set_filters:"set_filters",set_cacheAsBitmap:"set_cacheAsBitmap",set_transition:"set_transition",set_asset:"set_asset",set_variable:"set_variable",set_parent:"set_parent",get_numChildren:"get_numChildren",set_color:"set_color",set_clipping:"set_clipping",set_visible:"set_visible",set_lockCenter:"set_lockCenter",set_center:"set_center",set_centerY:"set_centerY",set_centerX:"set_centerX",set_rotation:"set_rotation",set_alpha:"set_alpha",set_scaleY:"set_scaleY",set_scaleX:"set_scaleX",set_scale:"set_scale",set_height:"set_height",set_width:"set_width",set_y:"set_y",set_x:"set_x",set_name:"set_name"}
};
var no_logic_kha_fox_displaylist_InteractiveObject = function(data) {
	this.isPressed = false;
	this.isMouseInBounds = false;
	this.isMouseOver = false;
	this.wasMouseOverLastFrame = false;
	this.wasMousePressedLastFrame = false;
	this.numTimesClicked = 0;
	this.clickReplies = 0;
	this.dragDy = 0;
	this.dragDx = 0;
	this.prevUnscaledMouseY = 0;
	this.prevUnscaledMouseX = 0;
	this.unscaledMouseY = 0;
	this.unscaledMouseX = 0;
	this.prevMouseY = 0;
	this.prevMouseX = 0;
	this.mouseY = 0;
	this.mouseX = 0;
	this.canDragY = true;
	this.canDragX = true;
	this.dragLockCenter = false;
	this.dragEnabled = false;
	this.isDragging = false;
	this.buttonAlphaMode = false;
	this.buttonMode = false;
	this.mouseEnabled = false;
	no_logic_kha_fox_displaylist_DisplayObject.call(this,data);
	if(this.name == null) {
		this.set_name("interactiveobject" + (no_logic_kha_fox_displaylist_DisplayObject.instanceCounter - 1));
	}
};
$hxClasses["no.logic.kha.fox.displaylist.InteractiveObject"] = no_logic_kha_fox_displaylist_InteractiveObject;
no_logic_kha_fox_displaylist_InteractiveObject.__name__ = "no.logic.kha.fox.displaylist.InteractiveObject";
no_logic_kha_fox_displaylist_InteractiveObject.__super__ = no_logic_kha_fox_displaylist_DisplayObject;
no_logic_kha_fox_displaylist_InteractiveObject.prototype = $extend(no_logic_kha_fox_displaylist_DisplayObject.prototype,{
	mouseEnabled: null
	,buttonMode: null
	,buttonAlphaMode: null
	,isDragging: null
	,dragEnabled: null
	,dragLockCenter: null
	,canDragX: null
	,canDragY: null
	,mouseX: null
	,mouseY: null
	,prevMouseX: null
	,prevMouseY: null
	,unscaledMouseX: null
	,unscaledMouseY: null
	,prevUnscaledMouseX: null
	,prevUnscaledMouseY: null
	,dragDx: null
	,dragDy: null
	,clickReplies: null
	,numTimesClicked: null
	,dragBounds: null
	,activeDropTarget: null
	,hitBoxWidth: null
	,hitBoxHeight: null
	,wasMousePressedLastFrame: null
	,wasMouseOverLastFrame: null
	,isMouseOver: null
	,isMouseInBounds: null
	,isPressed: null
	,dragOffsetX: null
	,dragOffsetY: null
	,onMouseMoveOver: null
	,onMouseUpdateOver: null
	,onMouseOver: null
	,onMouseOut: null
	,onMouseDown: null
	,onMouseUp: null
	,onClick: null
	,onRightClick: null
	,onMiddleClick: null
	,onStartDrag: null
	,onStopDrag: null
	,onDragging: null
	,onOverDropTarget: null
	,onDropTargetAccepted: null
	,_mouseMoveOver: function() {
		if(this.buttonMode && this.mouseEnabled) {
			no_logic_kha_fox_input_KhaInput.setCursorType(kha_input_MouseCursor.Pointer);
		} else {
			no_logic_kha_fox_input_KhaInput.setCursorType(kha_input_MouseCursor.Default);
		}
		if(this.onMouseMoveOver != null) {
			this.onMouseMoveOver(this);
		}
	}
	,_mouseUpdateOver: function() {
		if(this.onMouseUpdateOver != null) {
			this.onMouseUpdateOver(this);
		}
	}
	,_mouseOver: function() {
		if(this.buttonMode && this.mouseEnabled) {
			no_logic_kha_fox_input_KhaInput.setCursorType(kha_input_MouseCursor.Pointer);
		} else {
			no_logic_kha_fox_input_KhaInput.setCursorType(kha_input_MouseCursor.Default);
		}
		if(this.onMouseOver != null) {
			this.onMouseOver(this);
		}
	}
	,_mouseOut: function() {
		if(this.isDragging) {
			return;
		}
		if(this.isPressed) {
			this._mouseUp();
		}
		if(this.buttonMode && this.mouseEnabled) {
			no_logic_kha_fox_input_KhaInput.setCursorType(kha_input_MouseCursor.Pointer);
		} else {
			no_logic_kha_fox_input_KhaInput.setCursorType(kha_input_MouseCursor.Default);
		}
		if(this.onMouseOut != null) {
			this.onMouseOut(this);
		}
	}
	,_click: function() {
		if(this.onClick != null) {
			if(this.clickReplies == 0) {
				this.onClick(this);
				this.numTimesClicked++;
			} else if(this.numTimesClicked < this.clickReplies) {
				this.onClick(this);
				this.numTimesClicked++;
			}
		}
	}
	,_mouseDown: function() {
		this.isPressed = true;
		if(this.dragEnabled) {
			this.startDrag();
		}
		if(this.onMouseDown != null) {
			this.onMouseDown(this);
		}
	}
	,_mouseUp: function() {
		this.isPressed = false;
		if(this.dragEnabled) {
			this.stopDrag();
		}
		if(this.onMouseUp != null) {
			this.onMouseUp(this);
		}
	}
	,set_mouseEnabled: function(value) {
		return this.mouseEnabled = value;
	}
	,startDrag: function(lockCenter,left,top,right,bottom) {
		if((left != null || top != null || right != null || bottom != null) && this.dragBounds == null) {
			this.dragBounds = new no_logic_fox_types_Rectangle(left,top,right,bottom);
		} else {
			if(left != null) {
				this.dragBounds.x = left;
			}
			if(top != null) {
				this.dragBounds.y = top;
			}
			if(right != null) {
				this.dragBounds.width = right;
			}
			if(bottom != null) {
				this.dragBounds.height = bottom;
			}
		}
		if(lockCenter != null) {
			this.dragLockCenter = lockCenter;
		} else {
			this.dragOffsetX = this.mouseX;
			this.dragOffsetY = this.mouseY;
		}
		this.dragDx = 0;
		this.dragDy = 0;
		this.dragEnabled = true;
		this.set_mouseEnabled(true);
		this.isDragging = true;
		if(this.onStartDrag != null) {
			this.onStartDrag(this);
		}
	}
	,stopDrag: function() {
		this.isDragging = false;
		if(this.activeDropTarget != null) {
			if(this.onDropTargetAccepted != null) {
				this.onDropTargetAccepted(this.activeDropTarget);
			}
			this.activeDropTarget = null;
		}
		if(this.onStopDrag != null) {
			this.onStopDrag(this);
		}
	}
	,_whileDragging: function() {
		if(this.isDragging) {
			var pIntObj = this.parent;
			if(pIntObj != null) {
				var oldx = this.x;
				var oldy = this.y;
				if(this.canDragX) {
					this.set_x(pIntObj.mouseX);
				}
				if(this.canDragY) {
					this.set_y(pIntObj.mouseY);
				}
				if(!this.dragLockCenter) {
					if(this.canDragX) {
						var _g = this;
						_g.set_x(_g.x - this.dragOffsetX);
					}
					if(this.canDragY) {
						var _g = this;
						_g.set_y(_g.y - this.dragOffsetY);
					}
				}
				this.dragDx = this.x - oldx;
				this.dragDy = this.y - oldy;
				var foundDropTarget = this.stage.getDropTargetAtPos(this.stage.mouseX,this.stage.mouseY);
				if(foundDropTarget != null && this.onOverDropTarget != null) {
					if(this.onOverDropTarget(foundDropTarget)) {
						this.activeDropTarget = foundDropTarget;
					}
				}
			}
			if(this.onDragging != null) {
				this.onDragging(this);
			}
		}
	}
	,update: function() {
		no_logic_kha_fox_displaylist_DisplayObject.prototype.update.call(this);
		this.prevMouseX = this.mouseX;
		this.prevMouseY = this.mouseY;
		this.unscaledMouseX = no_logic_kha_fox_input_KhaInput.mouseX - Math.round(this.globalX);
		this.unscaledMouseY = no_logic_kha_fox_input_KhaInput.mouseY - Math.round(this.globalY);
		this.mouseX = this.unscaledMouseX / this.globalScaleX;
		this.mouseY = this.unscaledMouseY / this.globalScaleY;
		if(this.mouseEnabled) {
			no_logic_kha_fox_displaylist_functional_InteractiveFunc.checkMouse(this);
		}
	}
	,dispose: function() {
		if(!this.isDisposed) {
			if(this.isMouseOver) {
				no_logic_kha_fox_input_KhaInput.setCursorType(kha_input_MouseCursor.Default);
			}
			this.set_mouseEnabled(false);
			this.dragBounds = null;
			this.onMouseMoveOver = null;
			this.onMouseOver = null;
			this.onMouseOut = null;
			this.onMouseDown = null;
			this.onMouseUp = null;
			this.onClick = null;
			this.onRightClick = null;
			this.onMiddleClick = null;
			this.onStartDrag = null;
			this.onStopDrag = null;
			this.onDragging = null;
			this.onOverDropTarget = null;
			this.onDropTargetAccepted = null;
			this.hitBoxWidth = null;
			this.hitBoxHeight = null;
			this.activeDropTarget = null;
			no_logic_kha_fox_displaylist_DisplayObject.prototype.dispose.call(this);
		}
	}
	,__class__: no_logic_kha_fox_displaylist_InteractiveObject
	,__properties__: $extend(no_logic_kha_fox_displaylist_DisplayObject.prototype.__properties__,{set_mouseEnabled:"set_mouseEnabled"})
});
var no_logic_kha_fox_displaylist_Shape = function(data) {
	this.fillColor = -1;
	if(data != null) {
		data.objecttype = no_logic_kha_fox_displaylist_DisplayObjectType.shape;
	}
	no_logic_kha_fox_displaylist_InteractiveObject.call(this,data);
	this.objecttype = no_logic_kha_fox_displaylist_DisplayObjectType.shape;
	if(this.name == null) {
		this.set_name("shape" + (no_logic_kha_fox_displaylist_DisplayObject.instanceCounter - 1));
	}
};
$hxClasses["no.logic.kha.fox.displaylist.Shape"] = no_logic_kha_fox_displaylist_Shape;
no_logic_kha_fox_displaylist_Shape.__name__ = "no.logic.kha.fox.displaylist.Shape";
no_logic_kha_fox_displaylist_Shape.__super__ = no_logic_kha_fox_displaylist_InteractiveObject;
no_logic_kha_fox_displaylist_Shape.prototype = $extend(no_logic_kha_fox_displaylist_InteractiveObject.prototype,{
	fillColor: null
	,shapeData: null
	,update: function() {
		if(this.shapeData != null) {
			if(!no_logic_fox_utils_Bits.isSet(this.flags,0)) {
				this.x = this.shapeData.x;
			}
			if(!no_logic_fox_utils_Bits.isSet(this.flags,1)) {
				this.y = this.shapeData.y;
			}
			if(!no_logic_fox_utils_Bits.isSet(this.flags,2)) {
				this.width = this.shapeData.width;
			}
			if(!no_logic_fox_utils_Bits.isSet(this.flags,3)) {
				this.height = this.shapeData.height;
			}
		}
		no_logic_kha_fox_displaylist_InteractiveObject.prototype.update.call(this);
	}
	,render: function(cv) {
		no_logic_kha_fox_displaylist_functional_ShapeFunc.render(cv,this);
	}
	,dispose: function() {
		if(!this.isDisposed) {
			no_logic_kha_fox_displaylist_InteractiveObject.prototype.dispose.call(this);
		}
	}
	,__class__: no_logic_kha_fox_displaylist_Shape
});
var no_logic_kha_fox_displaylist_Sprite = function(data) {
	this.currentFrame = 1;
	if(data != null) {
		data.objecttype = no_logic_kha_fox_displaylist_DisplayObjectType.sprite;
	}
	no_logic_kha_fox_displaylist_Shape.call(this,data);
	this.objecttype = no_logic_kha_fox_displaylist_DisplayObjectType.sprite;
	this.timeline = new no_logic_kha_fox_fla_frames_Timeline(this);
	if(this.name == null) {
		this.set_name("sprite" + (no_logic_kha_fox_displaylist_DisplayObject.instanceCounter - 1));
	}
};
$hxClasses["no.logic.kha.fox.displaylist.Sprite"] = no_logic_kha_fox_displaylist_Sprite;
no_logic_kha_fox_displaylist_Sprite.__name__ = "no.logic.kha.fox.displaylist.Sprite";
no_logic_kha_fox_displaylist_Sprite.__super__ = no_logic_kha_fox_displaylist_Shape;
no_logic_kha_fox_displaylist_Sprite.prototype = $extend(no_logic_kha_fox_displaylist_Shape.prototype,{
	timeline: null
	,frameRate: null
	,numFrames: null
	,currentFrame: null
	,setTimelineDataFromFLA: function(flaTimeline) {
		this.timeline.setFLAtimelineData(flaTimeline);
	}
	,update: function() {
		no_logic_kha_fox_displaylist_Shape.prototype.update.call(this);
		if(this.timeline != null) {
			this.timeline.update();
		}
	}
	,nextFrame: function() {
		if(this.timeline != null) {
			this.timeline.nextFrame();
		}
	}
	,previousFrame: function() {
		if(this.timeline != null) {
			this.timeline.previousFrame();
		}
	}
	,play: function(delay) {
		if(delay == null) {
			delay = 0.0;
		}
		if(this.timeline == null) {
			return;
		}
		if(delay == 0) {
			this.timeline.play();
		} else {
			this.timeout(delay,$bind(this,this.play));
		}
	}
	,stop: function(delay) {
		if(delay == null) {
			delay = 0.0;
		}
		if(this.timeline == null) {
			return;
		}
		if(delay == 0) {
			this.timeline.stop();
		} else {
			this.timeout(delay,$bind(this,this.stop));
		}
	}
	,gotoAndStop: function(frameNrOrLabel,delay) {
		if(delay == null) {
			delay = 0.0;
		}
		var _gthis = this;
		if(this.timeline == null) {
			return;
		}
		if(delay == 0) {
			this.timeline.gotoAndStop(frameNrOrLabel);
		} else {
			this.timeout(delay,function() {
				_gthis.gotoAndStop(frameNrOrLabel);
			});
		}
	}
	,gotoAndPlay: function(frameNrOrLabel,delay) {
		if(delay == null) {
			delay = 0.0;
		}
		var _gthis = this;
		if(this.timeline == null) {
			return;
		}
		if(delay == 0) {
			this.timeline.gotoAndPlay(frameNrOrLabel);
		} else {
			this.timeout(delay,function() {
				_gthis.gotoAndPlay(frameNrOrLabel);
			});
		}
	}
	,gotoAndPlayRandom: function(delay) {
		if(delay == null) {
			delay = 0.0;
		}
		if(this.timeline == null) {
			return;
		}
		if(delay == 0) {
			this.timeline.gotoAndPlayRandom();
		} else {
			this.timeout(delay,$bind(this,this.gotoAndPlayRandom));
		}
	}
	,gotoAndStopRandom: function(delay) {
		if(delay == null) {
			delay = 0.0;
		}
		if(this.timeline == null) {
			return;
		}
		if(delay == 0) {
			this.timeline.gotoAndStopRandom();
		} else {
			this.timeout(delay,$bind(this,this.gotoAndStopRandom));
		}
	}
	,get_numFrames: function() {
		if(this.timeline == null) {
			return 0;
		} else {
			return this.timeline.numFrames;
		}
	}
	,get_currentFrame: function() {
		if(this.timeline == null) {
			return 0;
		} else {
			return this.timeline.currentFrame;
		}
	}
	,set_currentFrame: function(value) {
		if(this.timeline == null) {
			return this.currentFrame = 0;
		} else {
			this.timeline.set_currentFrame(value);
			return this.currentFrame = value;
		}
	}
	,dispose: function() {
		if(!this.isDisposed) {
			if(this.timeline != null) {
				this.timeline.dispose();
				this.timeline = null;
			}
			no_logic_kha_fox_displaylist_Shape.prototype.dispose.call(this);
		}
	}
	,__class__: no_logic_kha_fox_displaylist_Sprite
	,__properties__: $extend(no_logic_kha_fox_displaylist_Shape.prototype.__properties__,{set_currentFrame:"set_currentFrame",get_currentFrame:"get_currentFrame",get_numFrames:"get_numFrames"})
});
var app_Intro = function() {
	no_logic_kha_fox_displaylist_Sprite.call(this);
};
$hxClasses["app.Intro"] = app_Intro;
app_Intro.__name__ = "app.Intro";
app_Intro.__super__ = no_logic_kha_fox_displaylist_Sprite;
app_Intro.prototype = $extend(no_logic_kha_fox_displaylist_Sprite.prototype,{
	tekst: null
	,modPlayer: null
	,onAddedToDisplayList: function() {
		this.modPlayer = new hxmod_ModPlayer();
		this.modPlayer.load("mod.overload");
		this.sizeToParent = true;
		this.reSizetoParent();
		this.buttonMode = true;
		no_logic_kha_fox_input_KhaInput.addOnMouseLeftDown($bind(this,this.onClicked),1);
		this.tekst = this.addChild(no_logic_kha_fox_displaylist_Text.from({ text : "CLICK : LOAD \"INTRO\",8,1", color : kha_Color._new(-7820545), textAlign : no_logic_kha_fox_displaylist_layout_Align.center}));
		this.tekst.setCenter();
		this.tekst.setScalarPos(0.5,0.5);
		this.stage.bgColor = kha_Color._new(-16772824);
		this.stage.settings.render.postprocessing.postGradingPostFXFilters.push(new no_logic_kha_fox_displaylist_effects_postprocessing_PostFxFilter(kha_Shaders.postprocess_frag));
		this.stage.settings.render.postprocessing.gradingFilter.applySettingsJSONString("{\"brightness\":0.01,\"contrast\":1.02,\"gamma\":0.74,\"vignetteStrength\":0.44,\"vignetteBrightness\":11.34,\"filmGrain\":0.15,\"rgbAdjust\":{\"r\":0.83,\"b\":1.61}}");
	}
	,onClicked: function() {
		this.buttonMode = false;
		this.tekst.set_visible(false);
		this.modPlayer.play();
		this.addChild(new app_StarLayer());
		var t1 = this.addChild(no_logic_kha_fox_displaylist_Text.from({ text : "MODPLAYER.HX", color : kha_Color._new(-7820545), textAlign : no_logic_kha_fox_displaylist_layout_Align.center, fontSize : 28}));
		var t2 = this.addChild(no_logic_kha_fox_displaylist_Text.from({ text : "A mod / s3m player written in Haxe", color : kha_Color._new(-7820545), fontSize : 24, textAlign : no_logic_kha_fox_displaylist_layout_Align.center}));
		var t3 = this.addChild(no_logic_kha_fox_displaylist_Text.from({ text : "Work in progress  |  No audio on iOS mobile yet?..", color : kha_Color._new(-7820545), fontSize : 20, textAlign : no_logic_kha_fox_displaylist_layout_Align.center}));
		var t4 = this.addChild(no_logic_kha_fox_displaylist_Text.from({ text : "Module : \"mod.overload\" (Tip/Mantronix)", color : kha_Color._new(-7820545), fontSize : 24, textAlign : no_logic_kha_fox_displaylist_layout_Align.center}));
		t1.setCenter();
		t2.setCenter();
		t3.setCenter();
		t4.setCenter();
		t1.setScalarPos(0.5,0.19);
		t2.setScalarPos(0.5,0.25);
		t3.setScalarPos(0.5,0.29);
		t4.setScalarPos(0.5,0.8);
		this.addChild(new app_ScrollLayer());
	}
	,dispose: function() {
		no_logic_kha_fox_displaylist_Sprite.prototype.dispose.call(this);
	}
	,__class__: app_Intro
});
var app_StarLayer = function() {
	no_logic_kha_fox_displaylist_Sprite.call(this);
};
$hxClasses["app.StarLayer"] = app_StarLayer;
app_StarLayer.__name__ = "app.StarLayer";
app_StarLayer.__super__ = no_logic_kha_fox_displaylist_Sprite;
app_StarLayer.prototype = $extend(no_logic_kha_fox_displaylist_Sprite.prototype,{
	stars: null
	,onAddedToDisplayList: function() {
		this.useCustomRender = true;
		this.sizeToParent = true;
		this.addStars();
	}
	,update: function() {
		no_logic_kha_fox_displaylist_Sprite.prototype.update.call(this);
	}
	,addStars: function() {
		this.stars = [];
		var _g = 0;
		while(_g < 1000) {
			++_g;
			var tmp = this.stars;
			var a = 0;
			var b = this.width;
			var tmp1 = b == null ? Math.random() * a : Math.random() * (b - a) + a;
			var a1 = 0;
			var b1 = this.height;
			tmp.push({ x : tmp1, y : b1 == null ? Math.random() * a1 : Math.random() * (b1 - a1) + a1, distance : Math.random() * 0.75 + 0.25});
		}
	}
	,customRender: function(cv) {
		var g = cv.get_g2();
		g.set_color(-1);
		var speed = 5;
		var edge = this.width;
		no_logic_kha_fox_utils_SimpleDraw.g = g;
		if(this.stars != null) {
			var _g = 0;
			var _g1 = this.stars;
			while(_g < _g1.length) {
				var s = _g1[_g];
				++_g;
				var cx = s.x = (s.x + s.distance * speed) % edge;
				var cy = s.y;
				var radius = s.distance * 2;
				var opacity = s.distance;
				if(opacity == null) {
					opacity = 1;
				}
				no_logic_kha_fox_utils_SimpleDraw.g.set_opacity(opacity);
				kha_graphics2_GraphicsExtension.fillCircle(no_logic_kha_fox_utils_SimpleDraw.g,cx,cy,radius,4);
			}
		}
	}
	,__class__: app_StarLayer
});
var app_ScrollLayer = function() {
	this.charScale = 4;
	this.fi = 0;
	this.letterW = 0;
	no_logic_kha_fox_displaylist_Sprite.call(this);
};
$hxClasses["app.ScrollLayer"] = app_ScrollLayer;
app_ScrollLayer.__name__ = "app.ScrollLayer";
app_ScrollLayer.__super__ = no_logic_kha_fox_displaylist_Sprite;
app_ScrollLayer.prototype = $extend(no_logic_kha_fox_displaylist_Sprite.prototype,{
	scrollText: null
	,sca: null
	,letterW: null
	,fi: null
	,bmFont: null
	,numLetters: null
	,charScale: null
	,rt: null
	,pipeline: null
	,onAddedToDisplayList: function() {
		this.bmFont = new no_logic_kha_fox_effects_text_BMFont(" !\"    '()  ,-. 0123456789:    ? ABCDEFGHIJKLMNOPQRSTUVWXYZ",kha_Assets.images.bmfont3,32,32);
		this.bmFont.charScale = this.charScale;
		this.bmFont.upperCaseOnly = true;
		this.numLetters = Math.ceil(this.width / (32 * this.charScale)) + 2;
		this.scrollText = "                       RETRO IS THE WAY. WELL, ATLEAST SINESCROLLERS ARE. OH, AND THE MOD PLAYING RIGHT NOW IS \"OVERLOAD\" BY TIP / MANTRONIX. AWESOME TUNE!                          ";
		this.sca = kha_StringExtensions.toCharArray(this.scrollText);
		this.resizeScroll();
		this.pipeline = no_logic_kha_fox_gl_PipelineTools.createPipeline(kha_Shaders.sinescroll_frag,null);
		no_logic_kha_fox_gl_PipelineTools.setBlendmode(no_logic_kha_fox_gl_Blendmode.Multiply,this.pipeline);
		this.useCustomRender = true;
	}
	,update: function() {
		no_logic_kha_fox_displaylist_Sprite.prototype.update.call(this);
	}
	,resizeScroll: function() {
		if(this.rt != null) {
			this.rt.unload();
		}
		this.rt = kha_Image.createRenderTarget(this.width | 0,32 * this.charScale);
		this.numLetters = Math.ceil(this.width / (32 * this.charScale)) + 2;
	}
	,nextScrollLetter: function() {
		this.fi++;
		if(this.fi + this.numLetters >= this.scrollText.length) {
			this.fi = 0;
		}
		this.letterW = 32 * this.charScale;
	}
	,customRender: function(cv) {
		var g2 = cv.get_g2();
		var g4 = cv.get_g4();
		g2.get_pipeline();
		g2.disableScissor();
		g2.end();
		var gRT = this.rt.get_g2();
		gRT.begin();
		gRT.set_pipeline(null);
		if(this.letterW < 6.4) {
			this.nextScrollLetter();
		} else {
			this.letterW -= 6.4;
		}
		gRT.set_opacity(1);
		if(this.bmFont != null) {
			this.bmFont.drawString(gRT,-256 + this.letterW,0,this.scrollText.substring(this.fi,this.fi + this.numLetters));
		}
		gRT.end();
		g4.setPipeline(this.pipeline);
		g4.setFloat(this.pipeline.getConstantLocation("time"),kha_Scheduler.time());
		g4.setFloat(this.pipeline.getConstantLocation("amplitude"),no_logic_fox_utils_MathUtils.sineCurve(3,0.5,0.5,0,true,no_logic_fox_utils_SineBase.Zero));
		g4.setFloat(this.pipeline.getConstantLocation("frequency"),no_logic_fox_utils_MathUtils.sineCurve(4,1,0,0,true,no_logic_fox_utils_SineBase.Zero) * 3);
		g4.setVector2(this.pipeline.getConstantLocation("resolution"),new kha_math_FastVector2(this.width,this.height));
		g4.setVector2(this.pipeline.getConstantLocation("scrollRes"),new kha_math_FastVector2(this.rt.get_width(),this.rt.get_height()));
		g2.set_pipeline(this.pipeline);
		g2.begin(false);
		g2.set_opacity(1);
		g2.set_color(-1);
		g2.drawScaledImage(this.rt,this.x,this.y,this.width,this.height);
		g2.set_pipeline(null);
	}
	,__class__: app_ScrollLayer
});
var haxe_IMap = function() { };
$hxClasses["haxe.IMap"] = haxe_IMap;
haxe_IMap.__name__ = "haxe.IMap";
haxe_IMap.__isInterface__ = true;
var haxe_Exception = function(message,previous,native) {
	Error.call(this,message);
	this.message = message;
	this.__previousException = previous;
	this.__nativeException = native != null ? native : this;
};
$hxClasses["haxe.Exception"] = haxe_Exception;
haxe_Exception.__name__ = "haxe.Exception";
haxe_Exception.caught = function(value) {
	if(((value) instanceof haxe_Exception)) {
		return value;
	} else if(((value) instanceof Error)) {
		return new haxe_Exception(value.message,null,value);
	} else {
		return new haxe_ValueException(value,null,value);
	}
};
haxe_Exception.thrown = function(value) {
	if(((value) instanceof haxe_Exception)) {
		return value.get_native();
	} else if(((value) instanceof Error)) {
		return value;
	} else {
		var e = new haxe_ValueException(value);
		return e;
	}
};
haxe_Exception.__super__ = Error;
haxe_Exception.prototype = $extend(Error.prototype,{
	__skipStack: null
	,__nativeException: null
	,__previousException: null
	,unwrap: function() {
		return this.__nativeException;
	}
	,get_native: function() {
		return this.__nativeException;
	}
	,__class__: haxe_Exception
	,__properties__: {get_native:"get_native"}
});
var haxe_Log = function() { };
$hxClasses["haxe.Log"] = haxe_Log;
haxe_Log.__name__ = "haxe.Log";
haxe_Log.formatOutput = function(v,infos) {
	var str = Std.string(v);
	if(infos == null) {
		return str;
	}
	var pstr = infos.fileName + ":" + infos.lineNumber;
	if(infos.customParams != null) {
		var _g = 0;
		var _g1 = infos.customParams;
		while(_g < _g1.length) str += ", " + Std.string(_g1[_g++]);
	}
	return pstr + ": " + str;
};
haxe_Log.trace = function(v,infos) {
	var str = haxe_Log.formatOutput(v,infos);
	if(typeof(console) != "undefined" && console.log != null) {
		console.log(str);
	}
};
var haxe_Resource = function() { };
$hxClasses["haxe.Resource"] = haxe_Resource;
haxe_Resource.__name__ = "haxe.Resource";
haxe_Resource.getBytes = function(name) {
	var _g = 0;
	var _g1 = haxe_Resource.content;
	while(_g < _g1.length) {
		var x = _g1[_g];
		++_g;
		if(x.name == name) {
			if(x.str != null) {
				return haxe_io_Bytes.ofString(x.str);
			}
			return haxe_crypto_Base64.decode(x.data);
		}
	}
	return null;
};
var haxe_Timer = function(time_ms) {
	var me = this;
	this.id = kha_Scheduler.addTimeTask(function() {
		me.run();
	},time_ms / 1000,time_ms / 1000);
};
$hxClasses["haxe.Timer"] = haxe_Timer;
haxe_Timer.__name__ = "haxe.Timer";
haxe_Timer.delay = function(f,time_ms) {
	var t = new haxe_Timer(time_ms);
	t.run = function() {
		t.stop();
		f();
	};
	return t;
};
haxe_Timer.prototype = {
	id: null
	,stop: function() {
		if(this.id == null) {
			return;
		}
		kha_Scheduler.removeTimeTask(this.id);
		this.id = null;
	}
	,run: function() {
	}
	,__class__: haxe_Timer
};
var haxe__$Unserializer_DefaultResolver = function() {
};
$hxClasses["haxe._Unserializer.DefaultResolver"] = haxe__$Unserializer_DefaultResolver;
haxe__$Unserializer_DefaultResolver.__name__ = "haxe._Unserializer.DefaultResolver";
haxe__$Unserializer_DefaultResolver.prototype = {
	resolveClass: function(name) {
		return $hxClasses[name];
	}
	,resolveEnum: function(name) {
		return $hxEnums[name];
	}
	,__class__: haxe__$Unserializer_DefaultResolver
};
var haxe_Unserializer = function(buf) {
	this.buf = buf;
	this.length = buf.length;
	this.pos = 0;
	this.scache = [];
	this.cache = [];
	var r = haxe_Unserializer.DEFAULT_RESOLVER;
	if(r == null) {
		r = new haxe__$Unserializer_DefaultResolver();
		haxe_Unserializer.DEFAULT_RESOLVER = r;
	}
	this.resolver = r;
};
$hxClasses["haxe.Unserializer"] = haxe_Unserializer;
haxe_Unserializer.__name__ = "haxe.Unserializer";
haxe_Unserializer.initCodes = function() {
	var codes = [];
	var _g = 0;
	var _g1 = haxe_Unserializer.BASE64.length;
	while(_g < _g1) {
		var i = _g++;
		codes[haxe_Unserializer.BASE64.charCodeAt(i)] = i;
	}
	return codes;
};
haxe_Unserializer.run = function(v) {
	return new haxe_Unserializer(v).unserialize();
};
haxe_Unserializer.prototype = {
	buf: null
	,pos: null
	,length: null
	,cache: null
	,scache: null
	,resolver: null
	,readDigits: function() {
		var k = 0;
		var s = false;
		var fpos = this.pos;
		while(true) {
			var c = this.buf.charCodeAt(this.pos);
			if(c != c) {
				break;
			}
			if(c == 45) {
				if(this.pos != fpos) {
					break;
				}
				s = true;
				this.pos++;
				continue;
			}
			if(c < 48 || c > 57) {
				break;
			}
			k = k * 10 + (c - 48);
			this.pos++;
		}
		if(s) {
			k *= -1;
		}
		return k;
	}
	,readFloat: function() {
		var p1 = this.pos;
		while(true) {
			var c = this.buf.charCodeAt(this.pos);
			if(c != c) {
				break;
			}
			if(c >= 43 && c < 58 || c == 101 || c == 69) {
				this.pos++;
			} else {
				break;
			}
		}
		return parseFloat(HxOverrides.substr(this.buf,p1,this.pos - p1));
	}
	,unserializeObject: function(o) {
		while(true) {
			if(this.pos >= this.length) {
				throw haxe_Exception.thrown("Invalid object");
			}
			if(this.buf.charCodeAt(this.pos) == 103) {
				break;
			}
			var k = this.unserialize();
			if(typeof(k) != "string") {
				throw haxe_Exception.thrown("Invalid object key");
			}
			o[k] = this.unserialize();
		}
		this.pos++;
	}
	,unserializeEnum: function(edecl,tag) {
		if(this.buf.charCodeAt(this.pos++) != 58) {
			throw haxe_Exception.thrown("Invalid enum format");
		}
		var nargs = this.readDigits();
		if(nargs == 0) {
			return Type.createEnum(edecl,tag);
		}
		var args = [];
		while(nargs-- > 0) args.push(this.unserialize());
		return Type.createEnum(edecl,tag,args);
	}
	,unserialize: function() {
		switch(this.buf.charCodeAt(this.pos++)) {
		case 65:
			var name = this.unserialize();
			var cl = this.resolver.resolveClass(name);
			if(cl == null) {
				throw haxe_Exception.thrown("Class not found " + name);
			}
			return cl;
		case 66:
			var name = this.unserialize();
			var e = this.resolver.resolveEnum(name);
			if(e == null) {
				throw haxe_Exception.thrown("Enum not found " + name);
			}
			return e;
		case 67:
			var name = this.unserialize();
			var cl = this.resolver.resolveClass(name);
			if(cl == null) {
				throw haxe_Exception.thrown("Class not found " + name);
			}
			var o = Object.create(cl.prototype);
			this.cache.push(o);
			o.hxUnserialize(this);
			if(this.buf.charCodeAt(this.pos++) != 103) {
				throw haxe_Exception.thrown("Invalid custom data");
			}
			return o;
		case 77:
			var h = new haxe_ds_ObjectMap();
			this.cache.push(h);
			while(this.buf.charCodeAt(this.pos) != 104) h.set(this.unserialize(),this.unserialize());
			this.pos++;
			return h;
		case 82:
			var n = this.readDigits();
			if(n < 0 || n >= this.scache.length) {
				throw haxe_Exception.thrown("Invalid string reference");
			}
			return this.scache[n];
		case 97:
			var a = [];
			this.cache.push(a);
			while(true) {
				var c = this.buf.charCodeAt(this.pos);
				if(c == 104) {
					this.pos++;
					break;
				}
				if(c == 117) {
					this.pos++;
					var n = this.readDigits();
					a[a.length + n - 1] = null;
				} else {
					a.push(this.unserialize());
				}
			}
			return a;
		case 98:
			var h = new haxe_ds_StringMap();
			this.cache.push(h);
			while(this.buf.charCodeAt(this.pos) != 104) {
				var s = this.unserialize();
				var value = this.unserialize();
				h.h[s] = value;
			}
			this.pos++;
			return h;
		case 99:
			var name = this.unserialize();
			var cl = this.resolver.resolveClass(name);
			if(cl == null) {
				throw haxe_Exception.thrown("Class not found " + name);
			}
			var o = Object.create(cl.prototype);
			this.cache.push(o);
			this.unserializeObject(o);
			return o;
		case 100:
			return this.readFloat();
		case 102:
			return false;
		case 105:
			return this.readDigits();
		case 106:
			var name = this.unserialize();
			var edecl = this.resolver.resolveEnum(name);
			if(edecl == null) {
				throw haxe_Exception.thrown("Enum not found " + name);
			}
			this.pos++;
			var index = this.readDigits();
			var tag = edecl.__constructs__.slice()[index];
			if(tag == null) {
				throw haxe_Exception.thrown("Unknown enum index " + name + "@" + index);
			}
			var e = this.unserializeEnum(edecl,tag);
			this.cache.push(e);
			return e;
		case 107:
			return NaN;
		case 108:
			var l = new haxe_ds_List();
			this.cache.push(l);
			while(this.buf.charCodeAt(this.pos) != 104) l.add(this.unserialize());
			this.pos++;
			return l;
		case 109:
			return -Infinity;
		case 110:
			return null;
		case 111:
			var o = { };
			this.cache.push(o);
			this.unserializeObject(o);
			return o;
		case 112:
			return Infinity;
		case 113:
			var h = new haxe_ds_IntMap();
			this.cache.push(h);
			var c = this.buf.charCodeAt(this.pos++);
			while(c == 58) {
				var i = this.readDigits();
				var value = this.unserialize();
				h.h[i] = value;
				c = this.buf.charCodeAt(this.pos++);
			}
			if(c != 104) {
				throw haxe_Exception.thrown("Invalid IntMap format");
			}
			return h;
		case 114:
			var n = this.readDigits();
			if(n < 0 || n >= this.cache.length) {
				throw haxe_Exception.thrown("Invalid reference");
			}
			return this.cache[n];
		case 115:
			var len = this.readDigits();
			var buf = this.buf;
			if(this.buf.charCodeAt(this.pos++) != 58 || this.length - this.pos < len) {
				throw haxe_Exception.thrown("Invalid bytes length");
			}
			var codes = haxe_Unserializer.CODES;
			if(codes == null) {
				codes = haxe_Unserializer.initCodes();
				haxe_Unserializer.CODES = codes;
			}
			var i = this.pos;
			var rest = len & 3;
			var max = i + (len - rest);
			var bytes = new haxe_io_Bytes(new ArrayBuffer((len >> 2) * 3 + (rest >= 2 ? rest - 1 : 0)));
			var bpos = 0;
			while(i < max) {
				var c1 = codes[buf.charCodeAt(i++)];
				var c2 = codes[buf.charCodeAt(i++)];
				bytes.b[bpos++] = c1 << 2 | c2 >> 4;
				var c3 = codes[buf.charCodeAt(i++)];
				bytes.b[bpos++] = c2 << 4 | c3 >> 2;
				var c4 = codes[buf.charCodeAt(i++)];
				bytes.b[bpos++] = c3 << 6 | c4;
			}
			if(rest >= 2) {
				var c1 = codes[buf.charCodeAt(i++)];
				var c2 = codes[buf.charCodeAt(i++)];
				bytes.b[bpos++] = c1 << 2 | c2 >> 4;
				if(rest == 3) {
					var c3 = codes[buf.charCodeAt(i++)];
					bytes.b[bpos++] = c2 << 4 | c3 >> 2;
				}
			}
			this.pos += len;
			this.cache.push(bytes);
			return bytes;
		case 116:
			return true;
		case 118:
			var d;
			if(this.buf.charCodeAt(this.pos) >= 48 && this.buf.charCodeAt(this.pos) <= 57 && this.buf.charCodeAt(this.pos + 1) >= 48 && this.buf.charCodeAt(this.pos + 1) <= 57 && this.buf.charCodeAt(this.pos + 2) >= 48 && this.buf.charCodeAt(this.pos + 2) <= 57 && this.buf.charCodeAt(this.pos + 3) >= 48 && this.buf.charCodeAt(this.pos + 3) <= 57 && this.buf.charCodeAt(this.pos + 4) == 45) {
				d = HxOverrides.strDate(HxOverrides.substr(this.buf,this.pos,19));
				this.pos += 19;
			} else {
				d = new Date(this.readFloat());
			}
			this.cache.push(d);
			return d;
		case 119:
			var name = this.unserialize();
			var edecl = this.resolver.resolveEnum(name);
			if(edecl == null) {
				throw haxe_Exception.thrown("Enum not found " + name);
			}
			var e = this.unserializeEnum(edecl,this.unserialize());
			this.cache.push(e);
			return e;
		case 120:
			throw haxe_Exception.thrown(this.unserialize());
		case 121:
			var len = this.readDigits();
			if(this.buf.charCodeAt(this.pos++) != 58 || this.length - this.pos < len) {
				throw haxe_Exception.thrown("Invalid string length");
			}
			var s = HxOverrides.substr(this.buf,this.pos,len);
			this.pos += len;
			s = decodeURIComponent(s.split("+").join(" "));
			this.scache.push(s);
			return s;
		case 122:
			return 0;
		default:
		}
		this.pos--;
		throw haxe_Exception.thrown("Invalid char " + this.buf.charAt(this.pos) + " at position " + this.pos);
	}
	,__class__: haxe_Unserializer
};
var haxe_ValueException = function(value,previous,native) {
	haxe_Exception.call(this,String(value),previous,native);
	this.value = value;
};
$hxClasses["haxe.ValueException"] = haxe_ValueException;
haxe_ValueException.__name__ = "haxe.ValueException";
haxe_ValueException.__super__ = haxe_Exception;
haxe_ValueException.prototype = $extend(haxe_Exception.prototype,{
	value: null
	,unwrap: function() {
		return this.value;
	}
	,__class__: haxe_ValueException
});
var haxe_crypto_Adler32 = function() {
	this.a1 = 1;
	this.a2 = 0;
};
$hxClasses["haxe.crypto.Adler32"] = haxe_crypto_Adler32;
haxe_crypto_Adler32.__name__ = "haxe.crypto.Adler32";
haxe_crypto_Adler32.read = function(i) {
	var a = new haxe_crypto_Adler32();
	var a2a = i.readByte();
	var a2b = i.readByte();
	a.a1 = i.readByte() << 8 | i.readByte();
	a.a2 = a2a << 8 | a2b;
	return a;
};
haxe_crypto_Adler32.prototype = {
	a1: null
	,a2: null
	,update: function(b,pos,len) {
		var a1 = this.a1;
		var a2 = this.a2;
		var _g = pos;
		var _g1 = pos + len;
		while(_g < _g1) {
			a1 = (a1 + b.b[_g++]) % 65521;
			a2 = (a2 + a1) % 65521;
		}
		this.a1 = a1;
		this.a2 = a2;
	}
	,equals: function(a) {
		if(a.a1 == this.a1) {
			return a.a2 == this.a2;
		} else {
			return false;
		}
	}
	,__class__: haxe_crypto_Adler32
};
var haxe_io_Bytes = function(data) {
	this.length = data.byteLength;
	this.b = new Uint8Array(data);
	this.b.bufferValue = data;
	data.hxBytes = this;
	data.bytes = this.b;
};
$hxClasses["haxe.io.Bytes"] = haxe_io_Bytes;
haxe_io_Bytes.__name__ = "haxe.io.Bytes";
haxe_io_Bytes.ofString = function(s,encoding) {
	if(encoding == haxe_io_Encoding.RawNative) {
		var buf = new Uint8Array(s.length << 1);
		var _g = 0;
		var _g1 = s.length;
		while(_g < _g1) {
			var i = _g++;
			var c = s.charCodeAt(i);
			buf[i << 1] = c & 255;
			buf[i << 1 | 1] = c >> 8;
		}
		return new haxe_io_Bytes(buf.buffer);
	}
	var a = [];
	var i = 0;
	while(i < s.length) {
		var c = s.charCodeAt(i++);
		if(55296 <= c && c <= 56319) {
			c = c - 55232 << 10 | s.charCodeAt(i++) & 1023;
		}
		if(c <= 127) {
			a.push(c);
		} else if(c <= 2047) {
			a.push(192 | c >> 6);
			a.push(128 | c & 63);
		} else if(c <= 65535) {
			a.push(224 | c >> 12);
			a.push(128 | c >> 6 & 63);
			a.push(128 | c & 63);
		} else {
			a.push(240 | c >> 18);
			a.push(128 | c >> 12 & 63);
			a.push(128 | c >> 6 & 63);
			a.push(128 | c & 63);
		}
	}
	return new haxe_io_Bytes(new Uint8Array(a).buffer);
};
haxe_io_Bytes.ofData = function(b) {
	var hb = b.hxBytes;
	if(hb != null) {
		return hb;
	}
	return new haxe_io_Bytes(b);
};
haxe_io_Bytes.prototype = {
	length: null
	,b: null
	,data: null
	,blit: function(pos,src,srcpos,len) {
		if(pos < 0 || srcpos < 0 || len < 0 || pos + len > this.length || srcpos + len > src.length) {
			throw haxe_Exception.thrown(haxe_io_Error.OutsideBounds);
		}
		if(srcpos == 0 && len == src.b.byteLength) {
			this.b.set(src.b,pos);
		} else {
			this.b.set(src.b.subarray(srcpos,srcpos + len),pos);
		}
	}
	,sub: function(pos,len) {
		if(pos < 0 || len < 0 || pos + len > this.length) {
			throw haxe_Exception.thrown(haxe_io_Error.OutsideBounds);
		}
		return new haxe_io_Bytes(this.b.buffer.slice(pos + this.b.byteOffset,pos + this.b.byteOffset + len));
	}
	,getFloat: function(pos) {
		if(this.data == null) {
			this.data = new DataView(this.b.buffer,this.b.byteOffset,this.b.byteLength);
		}
		return this.data.getFloat32(pos,true);
	}
	,getInt32: function(pos) {
		if(this.data == null) {
			this.data = new DataView(this.b.buffer,this.b.byteOffset,this.b.byteLength);
		}
		return this.data.getInt32(pos,true);
	}
	,setInt32: function(pos,v) {
		if(this.data == null) {
			this.data = new DataView(this.b.buffer,this.b.byteOffset,this.b.byteLength);
		}
		this.data.setInt32(pos,v,true);
	}
	,getString: function(pos,len,encoding) {
		if(pos < 0 || len < 0 || pos + len > this.length) {
			throw haxe_Exception.thrown(haxe_io_Error.OutsideBounds);
		}
		if(encoding == null) {
			encoding = haxe_io_Encoding.UTF8;
		}
		var s = "";
		var b = this.b;
		var i = pos;
		var max = pos + len;
		switch(encoding._hx_index) {
		case 0:
			while(i < max) {
				var c = b[i++];
				if(c < 128) {
					if(c == 0) {
						break;
					}
					s += String.fromCodePoint(c);
				} else if(c < 224) {
					var code = (c & 63) << 6 | b[i++] & 127;
					s += String.fromCodePoint(code);
				} else if(c < 240) {
					var code1 = (c & 31) << 12 | (b[i++] & 127) << 6 | b[i++] & 127;
					s += String.fromCodePoint(code1);
				} else {
					var u = (c & 15) << 18 | (b[i++] & 127) << 12 | (b[i++] & 127) << 6 | b[i++] & 127;
					s += String.fromCodePoint(u);
				}
			}
			break;
		case 1:
			while(i < max) {
				var c = b[i++] | b[i++] << 8;
				s += String.fromCodePoint(c);
			}
			break;
		}
		return s;
	}
	,toString: function() {
		return this.getString(0,this.length);
	}
	,__class__: haxe_io_Bytes
};
var haxe_io_Encoding = $hxEnums["haxe.io.Encoding"] = { __ename__ : true, __constructs__ : ["UTF8","RawNative"]
	,UTF8: {_hx_index:0,__enum__:"haxe.io.Encoding",toString:$estr}
	,RawNative: {_hx_index:1,__enum__:"haxe.io.Encoding",toString:$estr}
};
var haxe_crypto_Base64 = function() { };
$hxClasses["haxe.crypto.Base64"] = haxe_crypto_Base64;
haxe_crypto_Base64.__name__ = "haxe.crypto.Base64";
haxe_crypto_Base64.encode = function(bytes,complement) {
	if(complement == null) {
		complement = true;
	}
	var str = new haxe_crypto_BaseCode(haxe_crypto_Base64.BYTES).encodeBytes(bytes).toString();
	if(complement) {
		switch(bytes.length % 3) {
		case 1:
			str += "==";
			break;
		case 2:
			str += "=";
			break;
		default:
		}
	}
	return str;
};
haxe_crypto_Base64.decode = function(str,complement) {
	if(complement == null) {
		complement = true;
	}
	if(complement) {
		while(HxOverrides.cca(str,str.length - 1) == 61) str = HxOverrides.substr(str,0,-1);
	}
	return new haxe_crypto_BaseCode(haxe_crypto_Base64.BYTES).decodeBytes(haxe_io_Bytes.ofString(str));
};
var haxe_crypto_BaseCode = function(base) {
	var len = base.length;
	var nbits = 1;
	while(len > 1 << nbits) ++nbits;
	if(nbits > 8 || len != 1 << nbits) {
		throw haxe_Exception.thrown("BaseCode : base length must be a power of two.");
	}
	this.base = base;
	this.nbits = nbits;
};
$hxClasses["haxe.crypto.BaseCode"] = haxe_crypto_BaseCode;
haxe_crypto_BaseCode.__name__ = "haxe.crypto.BaseCode";
haxe_crypto_BaseCode.prototype = {
	base: null
	,nbits: null
	,tbl: null
	,encodeBytes: function(b) {
		var nbits = this.nbits;
		var base = this.base;
		var size = b.length * 8 / nbits | 0;
		var out = new haxe_io_Bytes(new ArrayBuffer(size + (b.length * 8 % nbits == 0 ? 0 : 1)));
		var buf = 0;
		var curbits = 0;
		var mask = (1 << nbits) - 1;
		var pin = 0;
		var pout = 0;
		while(pout < size) {
			while(curbits < nbits) {
				curbits += 8;
				buf <<= 8;
				buf |= b.b[pin++];
			}
			curbits -= nbits;
			out.b[pout++] = base.b[buf >> curbits & mask];
		}
		if(curbits > 0) {
			out.b[pout++] = base.b[buf << nbits - curbits & mask];
		}
		return out;
	}
	,initTable: function() {
		var tbl = [];
		var _g = 0;
		while(_g < 256) tbl[_g++] = -1;
		var _g = 0;
		var _g1 = this.base.length;
		while(_g < _g1) {
			var i = _g++;
			tbl[this.base.b[i]] = i;
		}
		this.tbl = tbl;
	}
	,decodeBytes: function(b) {
		var nbits = this.nbits;
		if(this.tbl == null) {
			this.initTable();
		}
		var tbl = this.tbl;
		var size = b.length * nbits >> 3;
		var out = new haxe_io_Bytes(new ArrayBuffer(size));
		var buf = 0;
		var curbits = 0;
		var pin = 0;
		var pout = 0;
		while(pout < size) {
			while(curbits < 8) {
				curbits += nbits;
				buf <<= nbits;
				var i = tbl[b.b[pin++]];
				if(i == -1) {
					throw haxe_Exception.thrown("BaseCode : invalid encoded char");
				}
				buf |= i;
			}
			curbits -= 8;
			out.b[pout++] = buf >> curbits & 255;
		}
		return out;
	}
	,__class__: haxe_crypto_BaseCode
};
var haxe_ds_ArraySort = function() { };
$hxClasses["haxe.ds.ArraySort"] = haxe_ds_ArraySort;
haxe_ds_ArraySort.__name__ = "haxe.ds.ArraySort";
haxe_ds_ArraySort.sort = function(a,cmp) {
	haxe_ds_ArraySort.rec(a,cmp,0,a.length);
};
haxe_ds_ArraySort.rec = function(a,cmp,from,to) {
	var middle = from + to >> 1;
	if(to - from < 12) {
		if(to <= from) {
			return;
		}
		var _g = from + 1;
		while(_g < to) {
			var j = _g++;
			while(j > from) {
				if(cmp(a[j],a[j - 1]) < 0) {
					haxe_ds_ArraySort.swap(a,j - 1,j);
				} else {
					break;
				}
				--j;
			}
		}
		return;
	}
	haxe_ds_ArraySort.rec(a,cmp,from,middle);
	haxe_ds_ArraySort.rec(a,cmp,middle,to);
	haxe_ds_ArraySort.doMerge(a,cmp,from,middle,to,middle - from,to - middle);
};
haxe_ds_ArraySort.doMerge = function(a,cmp,from,pivot,to,len1,len2) {
	while(true) {
		var first_cut;
		var second_cut;
		var len11;
		var len22;
		if(len1 == 0 || len2 == 0) {
			return;
		}
		if(len1 + len2 == 2) {
			if(cmp(a[pivot],a[from]) < 0) {
				haxe_ds_ArraySort.swap(a,pivot,from);
			}
			return;
		}
		if(len1 > len2) {
			len11 = len1 >> 1;
			first_cut = from + len11;
			second_cut = haxe_ds_ArraySort.lower(a,cmp,pivot,to,first_cut);
			len22 = second_cut - pivot;
		} else {
			len22 = len2 >> 1;
			second_cut = pivot + len22;
			first_cut = haxe_ds_ArraySort.upper(a,cmp,from,pivot,second_cut);
			len11 = first_cut - from;
		}
		haxe_ds_ArraySort.rotate(a,cmp,first_cut,pivot,second_cut);
		var new_mid = first_cut + len22;
		haxe_ds_ArraySort.doMerge(a,cmp,from,first_cut,new_mid,len11,len22);
		from = new_mid;
		pivot = second_cut;
		len1 -= len11;
		len2 -= len22;
	}
};
haxe_ds_ArraySort.rotate = function(a,cmp,from,mid,to) {
	if(from == mid || mid == to) {
		return;
	}
	var n = haxe_ds_ArraySort.gcd(to - from,mid - from);
	while(n-- != 0) {
		var val = a[from + n];
		var shift = mid - from;
		var p1 = from + n;
		var p2 = from + n + shift;
		while(p2 != from + n) {
			a[p1] = a[p2];
			p1 = p2;
			if(to - p2 > shift) {
				p2 += shift;
			} else {
				p2 = from + (shift - (to - p2));
			}
		}
		a[p1] = val;
	}
};
haxe_ds_ArraySort.gcd = function(m,n) {
	while(n != 0) {
		var t = m % n;
		m = n;
		n = t;
	}
	return m;
};
haxe_ds_ArraySort.upper = function(a,cmp,from,to,val) {
	var len = to - from;
	var half;
	var mid;
	while(len > 0) {
		half = len >> 1;
		mid = from + half;
		if(cmp(a[val],a[mid]) < 0) {
			len = half;
		} else {
			from = mid + 1;
			len = len - half - 1;
		}
	}
	return from;
};
haxe_ds_ArraySort.lower = function(a,cmp,from,to,val) {
	var len = to - from;
	var half;
	var mid;
	while(len > 0) {
		half = len >> 1;
		mid = from + half;
		if(cmp(a[mid],a[val]) < 0) {
			from = mid + 1;
			len = len - half - 1;
		} else {
			len = half;
		}
	}
	return from;
};
haxe_ds_ArraySort.swap = function(a,i,j) {
	var tmp = a[i];
	a[i] = a[j];
	a[j] = tmp;
};
var haxe_ds_IntMap = function() {
	this.h = { };
};
$hxClasses["haxe.ds.IntMap"] = haxe_ds_IntMap;
haxe_ds_IntMap.__name__ = "haxe.ds.IntMap";
haxe_ds_IntMap.__interfaces__ = [haxe_IMap];
haxe_ds_IntMap.prototype = {
	h: null
	,remove: function(key) {
		if(!this.h.hasOwnProperty(key)) {
			return false;
		}
		delete(this.h[key]);
		return true;
	}
	,keys: function() {
		var a = [];
		for( var key in this.h ) if(this.h.hasOwnProperty(key)) a.push(key | 0);
		return new haxe_iterators_ArrayIterator(a);
	}
	,__class__: haxe_ds_IntMap
};
var haxe_ds_List = function() {
	this.length = 0;
};
$hxClasses["haxe.ds.List"] = haxe_ds_List;
haxe_ds_List.__name__ = "haxe.ds.List";
haxe_ds_List.prototype = {
	h: null
	,q: null
	,length: null
	,add: function(item) {
		var x = new haxe_ds__$List_ListNode(item,null);
		if(this.h == null) {
			this.h = x;
		} else {
			this.q.next = x;
		}
		this.q = x;
		this.length++;
	}
	,push: function(item) {
		var x = new haxe_ds__$List_ListNode(item,this.h);
		this.h = x;
		if(this.q == null) {
			this.q = x;
		}
		this.length++;
	}
	,__class__: haxe_ds_List
};
var haxe_ds__$List_ListNode = function(item,next) {
	this.item = item;
	this.next = next;
};
$hxClasses["haxe.ds._List.ListNode"] = haxe_ds__$List_ListNode;
haxe_ds__$List_ListNode.__name__ = "haxe.ds._List.ListNode";
haxe_ds__$List_ListNode.prototype = {
	item: null
	,next: null
	,__class__: haxe_ds__$List_ListNode
};
var haxe_ds_ObjectMap = function() {
	this.h = { __keys__ : { }};
};
$hxClasses["haxe.ds.ObjectMap"] = haxe_ds_ObjectMap;
haxe_ds_ObjectMap.__name__ = "haxe.ds.ObjectMap";
haxe_ds_ObjectMap.__interfaces__ = [haxe_IMap];
haxe_ds_ObjectMap.prototype = {
	h: null
	,set: function(key,value) {
		var id = key.__id__;
		if(id == null) {
			id = (key.__id__ = $global.$haxeUID++);
		}
		this.h[id] = value;
		this.h.__keys__[id] = key;
	}
	,__class__: haxe_ds_ObjectMap
};
var haxe_ds_StringMap = function() {
	this.h = Object.create(null);
};
$hxClasses["haxe.ds.StringMap"] = haxe_ds_StringMap;
haxe_ds_StringMap.__name__ = "haxe.ds.StringMap";
haxe_ds_StringMap.__interfaces__ = [haxe_IMap];
haxe_ds_StringMap.keysIterator = function(h) {
	var keys = Object.keys(h);
	var len = keys.length;
	var idx = 0;
	return { hasNext : function() {
		return idx < len;
	}, next : function() {
		idx += 1;
		return keys[idx - 1];
	}};
};
haxe_ds_StringMap.valueIterator = function(h) {
	var keys = Object.keys(h);
	var len = keys.length;
	var idx = 0;
	return { hasNext : function() {
		return idx < len;
	}, next : function() {
		idx += 1;
		return h[keys[idx - 1]];
	}};
};
haxe_ds_StringMap.prototype = {
	h: null
	,__class__: haxe_ds_StringMap
};
var haxe_io_Input = function() { };
$hxClasses["haxe.io.Input"] = haxe_io_Input;
haxe_io_Input.__name__ = "haxe.io.Input";
haxe_io_Input.prototype = {
	bigEndian: null
	,readByte: function() {
		throw haxe_Exception.thrown("Not implemented");
	}
	,readBytes: function(s,pos,len) {
		var k = len;
		var b = s.b;
		if(pos < 0 || len < 0 || pos + len > s.length) {
			throw haxe_Exception.thrown(haxe_io_Error.OutsideBounds);
		}
		try {
			while(k > 0) {
				b[pos] = this.readByte();
				++pos;
				--k;
			}
		} catch( _g ) {
			if(!((haxe_Exception.caught(_g).unwrap()) instanceof haxe_io_Eof)) {
				throw _g;
			}
		}
		return len - k;
	}
	,readFullBytes: function(s,pos,len) {
		while(len > 0) {
			var k = this.readBytes(s,pos,len);
			if(k == 0) {
				throw haxe_Exception.thrown(haxe_io_Error.Blocked);
			}
			pos += k;
			len -= k;
		}
	}
	,read: function(nbytes) {
		var s = new haxe_io_Bytes(new ArrayBuffer(nbytes));
		var p = 0;
		while(nbytes > 0) {
			var k = this.readBytes(s,p,nbytes);
			if(k == 0) {
				throw haxe_Exception.thrown(haxe_io_Error.Blocked);
			}
			p += k;
			nbytes -= k;
		}
		return s;
	}
	,readInt16: function() {
		var ch1 = this.readByte();
		var ch2 = this.readByte();
		var n = this.bigEndian ? ch2 | ch1 << 8 : ch1 | ch2 << 8;
		if((n & 32768) != 0) {
			return n - 65536;
		}
		return n;
	}
	,readUInt16: function() {
		var ch1 = this.readByte();
		var ch2 = this.readByte();
		if(this.bigEndian) {
			return ch2 | ch1 << 8;
		} else {
			return ch1 | ch2 << 8;
		}
	}
	,readInt32: function() {
		var ch1 = this.readByte();
		var ch2 = this.readByte();
		var ch3 = this.readByte();
		var ch4 = this.readByte();
		if(this.bigEndian) {
			return ch4 | ch3 << 8 | ch2 << 16 | ch1 << 24;
		} else {
			return ch1 | ch2 << 8 | ch3 << 16 | ch4 << 24;
		}
	}
	,readString: function(len,encoding) {
		var b = new haxe_io_Bytes(new ArrayBuffer(len));
		this.readFullBytes(b,0,len);
		return b.getString(0,len,encoding);
	}
	,__class__: haxe_io_Input
};
var haxe_io_BytesBuffer = function() {
	this.pos = 0;
	this.size = 0;
};
$hxClasses["haxe.io.BytesBuffer"] = haxe_io_BytesBuffer;
haxe_io_BytesBuffer.__name__ = "haxe.io.BytesBuffer";
haxe_io_BytesBuffer.prototype = {
	buffer: null
	,view: null
	,u8: null
	,pos: null
	,size: null
	,addByte: function(byte) {
		if(this.pos == this.size) {
			this.grow(1);
		}
		this.view.setUint8(this.pos++,byte);
	}
	,add: function(src) {
		if(this.pos + src.length > this.size) {
			this.grow(src.length);
		}
		if(this.size == 0) {
			return;
		}
		this.u8.set(new Uint8Array(src.b.buffer,src.b.byteOffset,src.length),this.pos);
		this.pos += src.length;
	}
	,addBytes: function(src,pos,len) {
		if(pos < 0 || len < 0 || pos + len > src.length) {
			throw haxe_Exception.thrown(haxe_io_Error.OutsideBounds);
		}
		if(this.pos + len > this.size) {
			this.grow(len);
		}
		if(this.size == 0) {
			return;
		}
		this.u8.set(new Uint8Array(src.b.buffer,src.b.byteOffset + pos,len),this.pos);
		this.pos += len;
	}
	,grow: function(delta) {
		var req = this.pos + delta;
		var nsize = this.size == 0 ? 16 : this.size;
		while(nsize < req) nsize = nsize * 3 >> 1;
		var nbuf = new ArrayBuffer(nsize);
		var nu8 = new Uint8Array(nbuf);
		if(this.size > 0) {
			nu8.set(this.u8);
		}
		this.size = nsize;
		this.buffer = nbuf;
		this.u8 = nu8;
		this.view = new DataView(this.buffer);
	}
	,getBytes: function() {
		if(this.size == 0) {
			return new haxe_io_Bytes(new ArrayBuffer(0));
		}
		var b = new haxe_io_Bytes(this.buffer);
		b.length = this.pos;
		return b;
	}
	,__class__: haxe_io_BytesBuffer
};
var haxe_io_BytesInput = function(b,pos,len) {
	if(pos == null) {
		pos = 0;
	}
	if(len == null) {
		len = b.length - pos;
	}
	if(pos < 0 || len < 0 || pos + len > b.length) {
		throw haxe_Exception.thrown(haxe_io_Error.OutsideBounds);
	}
	this.b = b.b;
	this.pos = pos;
	this.len = len;
	this.totlen = len;
};
$hxClasses["haxe.io.BytesInput"] = haxe_io_BytesInput;
haxe_io_BytesInput.__name__ = "haxe.io.BytesInput";
haxe_io_BytesInput.__super__ = haxe_io_Input;
haxe_io_BytesInput.prototype = $extend(haxe_io_Input.prototype,{
	b: null
	,pos: null
	,len: null
	,totlen: null
	,set_position: function(p) {
		if(p < 0) {
			p = 0;
		} else if(p > this.totlen) {
			p = this.totlen;
		}
		this.len = this.totlen - p;
		return this.pos = p;
	}
	,readByte: function() {
		if(this.len == 0) {
			throw haxe_Exception.thrown(new haxe_io_Eof());
		}
		this.len--;
		return this.b[this.pos++];
	}
	,readBytes: function(buf,pos,len) {
		if(pos < 0 || len < 0 || pos + len > buf.length) {
			throw haxe_Exception.thrown(haxe_io_Error.OutsideBounds);
		}
		if(this.len == 0 && len > 0) {
			throw haxe_Exception.thrown(new haxe_io_Eof());
		}
		if(this.len < len) {
			len = this.len;
		}
		var b1 = this.b;
		var b2 = buf.b;
		var _g = 0;
		var _g1 = len;
		while(_g < _g1) {
			var i = _g++;
			b2[pos + i] = b1[this.pos + i];
		}
		this.pos += len;
		this.len -= len;
		return len;
	}
	,__class__: haxe_io_BytesInput
	,__properties__: {set_position:"set_position"}
});
var haxe_io_Output = function() { };
$hxClasses["haxe.io.Output"] = haxe_io_Output;
haxe_io_Output.__name__ = "haxe.io.Output";
haxe_io_Output.prototype = {
	bigEndian: null
	,writeByte: function(c) {
		throw haxe_Exception.thrown("Not implemented");
	}
	,writeBytes: function(s,pos,len) {
		if(pos < 0 || len < 0 || pos + len > s.length) {
			throw haxe_Exception.thrown(haxe_io_Error.OutsideBounds);
		}
		var b = s.b;
		var k = len;
		while(k > 0) {
			this.writeByte(b[pos]);
			++pos;
			--k;
		}
		return len;
	}
	,write: function(s) {
		var l = s.length;
		var p = 0;
		while(l > 0) {
			var k = this.writeBytes(s,p,l);
			if(k == 0) {
				throw haxe_Exception.thrown(haxe_io_Error.Blocked);
			}
			p += k;
			l -= k;
		}
	}
	,writeFloat: function(x) {
		this.writeInt32(haxe_io_FPHelper.floatToI32(x));
	}
	,writeInt32: function(x) {
		if(this.bigEndian) {
			this.writeByte(x >>> 24);
			this.writeByte(x >> 16 & 255);
			this.writeByte(x >> 8 & 255);
			this.writeByte(x & 255);
		} else {
			this.writeByte(x & 255);
			this.writeByte(x >> 8 & 255);
			this.writeByte(x >> 16 & 255);
			this.writeByte(x >>> 24);
		}
	}
	,__class__: haxe_io_Output
};
var haxe_io_BytesOutput = function() {
	this.b = new haxe_io_BytesBuffer();
};
$hxClasses["haxe.io.BytesOutput"] = haxe_io_BytesOutput;
haxe_io_BytesOutput.__name__ = "haxe.io.BytesOutput";
haxe_io_BytesOutput.__super__ = haxe_io_Output;
haxe_io_BytesOutput.prototype = $extend(haxe_io_Output.prototype,{
	b: null
	,writeByte: function(c) {
		this.b.addByte(c);
	}
	,writeBytes: function(buf,pos,len) {
		this.b.addBytes(buf,pos,len);
		return len;
	}
	,getBytes: function() {
		return this.b.getBytes();
	}
	,__class__: haxe_io_BytesOutput
});
var haxe_io_Eof = function() {
};
$hxClasses["haxe.io.Eof"] = haxe_io_Eof;
haxe_io_Eof.__name__ = "haxe.io.Eof";
haxe_io_Eof.prototype = {
	toString: function() {
		return "Eof";
	}
	,__class__: haxe_io_Eof
};
var haxe_io_Error = $hxEnums["haxe.io.Error"] = { __ename__ : true, __constructs__ : ["Blocked","Overflow","OutsideBounds","Custom"]
	,Blocked: {_hx_index:0,__enum__:"haxe.io.Error",toString:$estr}
	,Overflow: {_hx_index:1,__enum__:"haxe.io.Error",toString:$estr}
	,OutsideBounds: {_hx_index:2,__enum__:"haxe.io.Error",toString:$estr}
	,Custom: ($_=function(e) { return {_hx_index:3,e:e,__enum__:"haxe.io.Error",toString:$estr}; },$_.__params__ = ["e"],$_)
};
var haxe_io_FPHelper = function() { };
$hxClasses["haxe.io.FPHelper"] = haxe_io_FPHelper;
haxe_io_FPHelper.__name__ = "haxe.io.FPHelper";
haxe_io_FPHelper.floatToI32 = function(f) {
	haxe_io_FPHelper.helper.setFloat32(0,f,true);
	return haxe_io_FPHelper.helper.getInt32(0,true);
};
var haxe_io_UInt8Array = {};
haxe_io_UInt8Array.fromBytes = function(bytes,bytePos,length) {
	if(bytePos == null) {
		bytePos = 0;
	}
	if(length == null) {
		length = bytes.length - bytePos;
	}
	return new Uint8Array(bytes.b.bufferValue,bytePos,length);
};
var haxe_iterators_ArrayIterator = function(array) {
	this.current = 0;
	this.array = array;
};
$hxClasses["haxe.iterators.ArrayIterator"] = haxe_iterators_ArrayIterator;
haxe_iterators_ArrayIterator.__name__ = "haxe.iterators.ArrayIterator";
haxe_iterators_ArrayIterator.prototype = {
	array: null
	,current: null
	,hasNext: function() {
		return this.current < this.array.length;
	}
	,next: function() {
		return this.array[this.current++];
	}
	,__class__: haxe_iterators_ArrayIterator
};
var haxe_xml__$Access_NodeAccess = {};
haxe_xml__$Access_NodeAccess.resolve = function(this1,name) {
	var x = this1.elementsNamed(name).next();
	if(x == null) {
		var xname;
		if(this1.nodeType == Xml.Document) {
			xname = "Document";
		} else {
			if(this1.nodeType != Xml.Element) {
				throw haxe_Exception.thrown("Bad node type, expected Element but found " + (this1.nodeType == null ? "null" : XmlType.toString(this1.nodeType)));
			}
			xname = this1.nodeName;
		}
		throw haxe_Exception.thrown(xname + " is missing element " + name);
	}
	if(x.nodeType != Xml.Document && x.nodeType != Xml.Element) {
		throw haxe_Exception.thrown("Invalid nodeType " + (x.nodeType == null ? "null" : XmlType.toString(x.nodeType)));
	}
	return x;
};
var haxe_xml__$Access_AttribAccess = {};
haxe_xml__$Access_AttribAccess.resolve = function(this1,name) {
	if(this1.nodeType == Xml.Document) {
		throw haxe_Exception.thrown("Cannot access document attribute " + name);
	}
	var v = this1.get(name);
	if(v == null) {
		if(this1.nodeType != Xml.Element) {
			throw haxe_Exception.thrown("Bad node type, expected Element but found " + (this1.nodeType == null ? "null" : XmlType.toString(this1.nodeType)));
		}
		throw haxe_Exception.thrown(this1.nodeName + " is missing attribute " + name);
	}
	return v;
};
var haxe_xml__$Access_HasAttribAccess = {};
haxe_xml__$Access_HasAttribAccess.resolve = function(this1,name) {
	if(this1.nodeType == Xml.Document) {
		throw haxe_Exception.thrown("Cannot access document attribute " + name);
	}
	return this1.exists(name);
};
var haxe_xml__$Access_HasNodeAccess = {};
haxe_xml__$Access_HasNodeAccess.resolve = function(this1,name) {
	return this1.elementsNamed(name).hasNext();
};
var haxe_xml__$Access_NodeListAccess = {};
haxe_xml__$Access_NodeListAccess.resolve = function(this1,name) {
	var l = [];
	var x = this1.elementsNamed(name);
	while(x.hasNext()) {
		var x1 = x.next();
		if(x1.nodeType != Xml.Document && x1.nodeType != Xml.Element) {
			throw haxe_Exception.thrown("Invalid nodeType " + (x1.nodeType == null ? "null" : XmlType.toString(x1.nodeType)));
		}
		l.push(x1);
	}
	return l;
};
var haxe_xml_Access = {};
haxe_xml_Access.__properties__ = {get_innerData:"get_innerData"};
haxe_xml_Access.get_innerData = function(this1) {
	if(this1.nodeType != Xml.Document && this1.nodeType != Xml.Element) {
		throw haxe_Exception.thrown("Bad node type, expected Element or Document but found " + (this1.nodeType == null ? "null" : XmlType.toString(this1.nodeType)));
	}
	var it = new haxe_iterators_ArrayIterator(this1.children);
	if(!it.hasNext()) {
		var tmp;
		if(this1.nodeType == Xml.Document) {
			tmp = "Document";
		} else {
			if(this1.nodeType != Xml.Element) {
				throw haxe_Exception.thrown("Bad node type, expected Element but found " + (this1.nodeType == null ? "null" : XmlType.toString(this1.nodeType)));
			}
			tmp = this1.nodeName;
		}
		throw haxe_Exception.thrown(tmp + " does not have data");
	}
	var v = it.next();
	if(it.hasNext()) {
		var n = it.next();
		var tmp;
		if(v.nodeType == Xml.PCData && n.nodeType == Xml.CData) {
			if(v.nodeType == Xml.Document || v.nodeType == Xml.Element) {
				throw haxe_Exception.thrown("Bad node type, unexpected " + (v.nodeType == null ? "null" : XmlType.toString(v.nodeType)));
			}
			tmp = StringTools.trim(v.nodeValue) == "";
		} else {
			tmp = false;
		}
		if(tmp) {
			if(!it.hasNext()) {
				if(n.nodeType == Xml.Document || n.nodeType == Xml.Element) {
					throw haxe_Exception.thrown("Bad node type, unexpected " + (n.nodeType == null ? "null" : XmlType.toString(n.nodeType)));
				}
				return n.nodeValue;
			}
			var n2 = it.next();
			var tmp;
			if(n2.nodeType == Xml.PCData) {
				if(n2.nodeType == Xml.Document || n2.nodeType == Xml.Element) {
					throw haxe_Exception.thrown("Bad node type, unexpected " + (n2.nodeType == null ? "null" : XmlType.toString(n2.nodeType)));
				}
				tmp = StringTools.trim(n2.nodeValue) == "";
			} else {
				tmp = false;
			}
			if(tmp && !it.hasNext()) {
				if(n.nodeType == Xml.Document || n.nodeType == Xml.Element) {
					throw haxe_Exception.thrown("Bad node type, unexpected " + (n.nodeType == null ? "null" : XmlType.toString(n.nodeType)));
				}
				return n.nodeValue;
			}
		}
		var tmp;
		if(this1.nodeType == Xml.Document) {
			tmp = "Document";
		} else {
			if(this1.nodeType != Xml.Element) {
				throw haxe_Exception.thrown("Bad node type, expected Element but found " + (this1.nodeType == null ? "null" : XmlType.toString(this1.nodeType)));
			}
			tmp = this1.nodeName;
		}
		throw haxe_Exception.thrown(tmp + " does not only have data");
	}
	if(v.nodeType != Xml.PCData && v.nodeType != Xml.CData) {
		var tmp;
		if(this1.nodeType == Xml.Document) {
			tmp = "Document";
		} else {
			if(this1.nodeType != Xml.Element) {
				throw haxe_Exception.thrown("Bad node type, expected Element but found " + (this1.nodeType == null ? "null" : XmlType.toString(this1.nodeType)));
			}
			tmp = this1.nodeName;
		}
		throw haxe_Exception.thrown(tmp + " does not have data");
	}
	if(v.nodeType == Xml.Document || v.nodeType == Xml.Element) {
		throw haxe_Exception.thrown("Bad node type, unexpected " + (v.nodeType == null ? "null" : XmlType.toString(v.nodeType)));
	}
	return v.nodeValue;
};
var haxe_xml_XmlParserException = function(message,xml,position) {
	this.xml = xml;
	this.message = message;
	this.position = position;
	this.lineNumber = 1;
	this.positionAtLine = 0;
	var _g = 0;
	while(_g < position) {
		var c = xml.charCodeAt(_g++);
		if(c == 10) {
			this.lineNumber++;
			this.positionAtLine = 0;
		} else if(c != 13) {
			this.positionAtLine++;
		}
	}
};
$hxClasses["haxe.xml.XmlParserException"] = haxe_xml_XmlParserException;
haxe_xml_XmlParserException.__name__ = "haxe.xml.XmlParserException";
haxe_xml_XmlParserException.prototype = {
	message: null
	,lineNumber: null
	,positionAtLine: null
	,position: null
	,xml: null
	,toString: function() {
		var c = js_Boot.getClass(this);
		return c.__name__ + ": " + this.message + " at line " + this.lineNumber + " char " + this.positionAtLine;
	}
	,__class__: haxe_xml_XmlParserException
};
var haxe_xml_Parser = function() { };
$hxClasses["haxe.xml.Parser"] = haxe_xml_Parser;
haxe_xml_Parser.__name__ = "haxe.xml.Parser";
haxe_xml_Parser.parse = function(str,strict) {
	if(strict == null) {
		strict = false;
	}
	var doc = Xml.createDocument();
	haxe_xml_Parser.doParse(str,strict,0,doc);
	return doc;
};
haxe_xml_Parser.doParse = function(str,strict,p,parent) {
	if(p == null) {
		p = 0;
	}
	var xml = null;
	var state = 1;
	var next = 1;
	var aname = null;
	var start = 0;
	var nsubs = 0;
	var nbrackets = 0;
	var c = str.charCodeAt(p);
	var buf = new StringBuf();
	var escapeNext = 1;
	var attrValQuote = -1;
	while(c == c) {
		switch(state) {
		case 0:
			switch(c) {
			case 9:case 10:case 13:case 32:
				break;
			default:
				state = next;
				continue;
			}
			break;
		case 1:
			if(c == 60) {
				state = 0;
				next = 2;
			} else {
				start = p;
				state = 13;
				continue;
			}
			break;
		case 2:
			switch(c) {
			case 33:
				if(str.charCodeAt(p + 1) == 91) {
					p += 2;
					if(HxOverrides.substr(str,p,6).toUpperCase() != "CDATA[") {
						throw haxe_Exception.thrown(new haxe_xml_XmlParserException("Expected <![CDATA[",str,p));
					}
					p += 5;
					state = 17;
					start = p + 1;
				} else if(str.charCodeAt(p + 1) == 68 || str.charCodeAt(p + 1) == 100) {
					if(HxOverrides.substr(str,p + 2,6).toUpperCase() != "OCTYPE") {
						throw haxe_Exception.thrown(new haxe_xml_XmlParserException("Expected <!DOCTYPE",str,p));
					}
					p += 8;
					state = 16;
					start = p + 1;
				} else if(str.charCodeAt(p + 1) != 45 || str.charCodeAt(p + 2) != 45) {
					throw haxe_Exception.thrown(new haxe_xml_XmlParserException("Expected <!--",str,p));
				} else {
					p += 2;
					state = 15;
					start = p + 1;
				}
				break;
			case 47:
				if(parent == null) {
					throw haxe_Exception.thrown(new haxe_xml_XmlParserException("Expected node name",str,p));
				}
				start = p + 1;
				state = 0;
				next = 10;
				break;
			case 63:
				state = 14;
				start = p;
				break;
			default:
				state = 3;
				start = p;
				continue;
			}
			break;
		case 3:
			if(!(c >= 97 && c <= 122 || c >= 65 && c <= 90 || c >= 48 && c <= 57 || c == 58 || c == 46 || c == 95 || c == 45)) {
				if(p == start) {
					throw haxe_Exception.thrown(new haxe_xml_XmlParserException("Expected node name",str,p));
				}
				xml = Xml.createElement(HxOverrides.substr(str,start,p - start));
				parent.addChild(xml);
				++nsubs;
				state = 0;
				next = 4;
				continue;
			}
			break;
		case 4:
			switch(c) {
			case 47:
				state = 11;
				break;
			case 62:
				state = 9;
				break;
			default:
				state = 5;
				start = p;
				continue;
			}
			break;
		case 5:
			if(!(c >= 97 && c <= 122 || c >= 65 && c <= 90 || c >= 48 && c <= 57 || c == 58 || c == 46 || c == 95 || c == 45)) {
				if(start == p) {
					throw haxe_Exception.thrown(new haxe_xml_XmlParserException("Expected attribute name",str,p));
				}
				aname = HxOverrides.substr(str,start,p - start);
				if(xml.exists(aname)) {
					throw haxe_Exception.thrown(new haxe_xml_XmlParserException("Duplicate attribute [" + aname + "]",str,p));
				}
				state = 0;
				next = 6;
				continue;
			}
			break;
		case 6:
			if(c == 61) {
				state = 0;
				next = 7;
			} else {
				throw haxe_Exception.thrown(new haxe_xml_XmlParserException("Expected =",str,p));
			}
			break;
		case 7:
			switch(c) {
			case 34:case 39:
				buf = new StringBuf();
				state = 8;
				start = p + 1;
				attrValQuote = c;
				break;
			default:
				throw haxe_Exception.thrown(new haxe_xml_XmlParserException("Expected \"",str,p));
			}
			break;
		case 8:
			switch(c) {
			case 38:
				var len = p - start;
				buf.b += len == null ? HxOverrides.substr(str,start,null) : HxOverrides.substr(str,start,len);
				state = 18;
				escapeNext = 8;
				start = p + 1;
				break;
			case 60:case 62:
				if(strict) {
					throw haxe_Exception.thrown(new haxe_xml_XmlParserException("Invalid unescaped " + String.fromCodePoint(c) + " in attribute value",str,p));
				} else if(c == attrValQuote) {
					var len1 = p - start;
					buf.b += len1 == null ? HxOverrides.substr(str,start,null) : HxOverrides.substr(str,start,len1);
					var val = buf.b;
					buf = new StringBuf();
					xml.set(aname,val);
					state = 0;
					next = 4;
				}
				break;
			default:
				if(c == attrValQuote) {
					var len2 = p - start;
					buf.b += len2 == null ? HxOverrides.substr(str,start,null) : HxOverrides.substr(str,start,len2);
					var val1 = buf.b;
					buf = new StringBuf();
					xml.set(aname,val1);
					state = 0;
					next = 4;
				}
			}
			break;
		case 9:
			p = haxe_xml_Parser.doParse(str,strict,p,xml);
			start = p;
			state = 1;
			break;
		case 10:
			if(!(c >= 97 && c <= 122 || c >= 65 && c <= 90 || c >= 48 && c <= 57 || c == 58 || c == 46 || c == 95 || c == 45)) {
				if(start == p) {
					throw haxe_Exception.thrown(new haxe_xml_XmlParserException("Expected node name",str,p));
				}
				var v = HxOverrides.substr(str,start,p - start);
				if(parent == null || parent.nodeType != 0) {
					throw haxe_Exception.thrown(new haxe_xml_XmlParserException("Unexpected </" + v + ">, tag is not open",str,p));
				}
				if(parent.nodeType != Xml.Element) {
					throw haxe_Exception.thrown("Bad node type, expected Element but found " + (parent.nodeType == null ? "null" : XmlType.toString(parent.nodeType)));
				}
				if(v != parent.nodeName) {
					if(parent.nodeType != Xml.Element) {
						throw haxe_Exception.thrown("Bad node type, expected Element but found " + (parent.nodeType == null ? "null" : XmlType.toString(parent.nodeType)));
					}
					throw haxe_Exception.thrown(new haxe_xml_XmlParserException("Expected </" + parent.nodeName + ">",str,p));
				}
				state = 0;
				next = 12;
				continue;
			}
			break;
		case 11:
			if(c == 62) {
				state = 1;
			} else {
				throw haxe_Exception.thrown(new haxe_xml_XmlParserException("Expected >",str,p));
			}
			break;
		case 12:
			if(c == 62) {
				if(nsubs == 0) {
					parent.addChild(Xml.createPCData(""));
				}
				return p;
			} else {
				throw haxe_Exception.thrown(new haxe_xml_XmlParserException("Expected >",str,p));
			}
			break;
		case 13:
			if(c == 60) {
				var len3 = p - start;
				buf.b += len3 == null ? HxOverrides.substr(str,start,null) : HxOverrides.substr(str,start,len3);
				var child = Xml.createPCData(buf.b);
				buf = new StringBuf();
				parent.addChild(child);
				++nsubs;
				state = 0;
				next = 2;
			} else if(c == 38) {
				var len4 = p - start;
				buf.b += len4 == null ? HxOverrides.substr(str,start,null) : HxOverrides.substr(str,start,len4);
				state = 18;
				escapeNext = 13;
				start = p + 1;
			}
			break;
		case 14:
			if(c == 63 && str.charCodeAt(p + 1) == 62) {
				++p;
				parent.addChild(Xml.createProcessingInstruction(HxOverrides.substr(str,start + 1,p - start - 2)));
				++nsubs;
				state = 1;
			}
			break;
		case 15:
			if(c == 45 && str.charCodeAt(p + 1) == 45 && str.charCodeAt(p + 2) == 62) {
				parent.addChild(Xml.createComment(HxOverrides.substr(str,start,p - start)));
				++nsubs;
				p += 2;
				state = 1;
			}
			break;
		case 16:
			if(c == 91) {
				++nbrackets;
			} else if(c == 93) {
				--nbrackets;
			} else if(c == 62 && nbrackets == 0) {
				parent.addChild(Xml.createDocType(HxOverrides.substr(str,start,p - start)));
				++nsubs;
				state = 1;
			}
			break;
		case 17:
			if(c == 93 && str.charCodeAt(p + 1) == 93 && str.charCodeAt(p + 2) == 62) {
				parent.addChild(Xml.createCData(HxOverrides.substr(str,start,p - start)));
				++nsubs;
				p += 2;
				state = 1;
			}
			break;
		case 18:
			if(c == 59) {
				var s = HxOverrides.substr(str,start,p - start);
				if(s.charCodeAt(0) == 35) {
					var c1 = s.charCodeAt(1) == 120 ? Std.parseInt("0" + HxOverrides.substr(s,1,s.length - 1)) : Std.parseInt(HxOverrides.substr(s,1,s.length - 1));
					buf.b += String.fromCodePoint(c1);
				} else if(!Object.prototype.hasOwnProperty.call(haxe_xml_Parser.escapes.h,s)) {
					if(strict) {
						throw haxe_Exception.thrown(new haxe_xml_XmlParserException("Undefined entity: " + s,str,p));
					}
					buf.b += Std.string("&" + s + ";");
				} else {
					buf.b += Std.string(haxe_xml_Parser.escapes.h[s]);
				}
				start = p + 1;
				state = escapeNext;
			} else if(!(c >= 97 && c <= 122 || c >= 65 && c <= 90 || c >= 48 && c <= 57 || c == 58 || c == 46 || c == 95 || c == 45) && c != 35) {
				if(strict) {
					throw haxe_Exception.thrown(new haxe_xml_XmlParserException("Invalid character in entity: " + String.fromCodePoint(c),str,p));
				}
				buf.b += String.fromCodePoint(38);
				var len5 = p - start;
				buf.b += len5 == null ? HxOverrides.substr(str,start,null) : HxOverrides.substr(str,start,len5);
				--p;
				start = p + 1;
				state = escapeNext;
			}
			break;
		}
		c = str.charCodeAt(++p);
	}
	if(state == 1) {
		start = p;
		state = 13;
	}
	if(state == 13) {
		if(parent.nodeType == 0) {
			if(parent.nodeType != Xml.Element) {
				throw haxe_Exception.thrown("Bad node type, expected Element but found " + (parent.nodeType == null ? "null" : XmlType.toString(parent.nodeType)));
			}
			throw haxe_Exception.thrown(new haxe_xml_XmlParserException("Unclosed node <" + parent.nodeName + ">",str,p));
		}
		if(p != start || nsubs == 0) {
			var len = p - start;
			buf.b += len == null ? HxOverrides.substr(str,start,null) : HxOverrides.substr(str,start,len);
			parent.addChild(Xml.createPCData(buf.b));
			++nsubs;
		}
		return p;
	}
	if(!strict && state == 18 && escapeNext == 13) {
		buf.b += String.fromCodePoint(38);
		var len = p - start;
		buf.b += len == null ? HxOverrides.substr(str,start,null) : HxOverrides.substr(str,start,len);
		parent.addChild(Xml.createPCData(buf.b));
		++nsubs;
		return p;
	}
	throw haxe_Exception.thrown(new haxe_xml_XmlParserException("Unexpected end",str,p));
};
var haxe_xml_Printer = function(pretty) {
	this.output = new StringBuf();
	this.pretty = pretty;
};
$hxClasses["haxe.xml.Printer"] = haxe_xml_Printer;
haxe_xml_Printer.__name__ = "haxe.xml.Printer";
haxe_xml_Printer.print = function(xml,pretty) {
	if(pretty == null) {
		pretty = false;
	}
	var printer = new haxe_xml_Printer(pretty);
	printer.writeNode(xml,"");
	return printer.output.b;
};
haxe_xml_Printer.prototype = {
	output: null
	,pretty: null
	,writeNode: function(value,tabs) {
		switch(value.nodeType) {
		case 0:
			this.output.b += Std.string(tabs + "<");
			if(value.nodeType != Xml.Element) {
				throw haxe_Exception.thrown("Bad node type, expected Element but found " + (value.nodeType == null ? "null" : XmlType.toString(value.nodeType)));
			}
			this.output.b += Std.string(value.nodeName);
			var attribute = value.attributes();
			while(attribute.hasNext()) {
				var attribute1 = attribute.next();
				this.output.b += Std.string(" " + attribute1 + "=\"");
				var input = StringTools.htmlEscape(value.get(attribute1),true);
				this.output.b += Std.string(input);
				this.output.b += "\"";
			}
			if(this.hasChildren(value)) {
				this.output.b += ">";
				if(this.pretty) {
					this.output.b += "\n";
				}
				if(value.nodeType != Xml.Document && value.nodeType != Xml.Element) {
					throw haxe_Exception.thrown("Bad node type, expected Element or Document but found " + (value.nodeType == null ? "null" : XmlType.toString(value.nodeType)));
				}
				var _this = value.children;
				var _g_current = 0;
				while(_g_current < _this.length) this.writeNode(_this[_g_current++],this.pretty ? tabs + "\t" : tabs);
				this.output.b += Std.string(tabs + "</");
				if(value.nodeType != Xml.Element) {
					throw haxe_Exception.thrown("Bad node type, expected Element but found " + (value.nodeType == null ? "null" : XmlType.toString(value.nodeType)));
				}
				this.output.b += Std.string(value.nodeName);
				this.output.b += ">";
				if(this.pretty) {
					this.output.b += "\n";
				}
			} else {
				this.output.b += "/>";
				if(this.pretty) {
					this.output.b += "\n";
				}
			}
			break;
		case 1:
			if(value.nodeType == Xml.Document || value.nodeType == Xml.Element) {
				throw haxe_Exception.thrown("Bad node type, unexpected " + (value.nodeType == null ? "null" : XmlType.toString(value.nodeType)));
			}
			var nodeValue = value.nodeValue;
			if(nodeValue.length != 0) {
				var input = tabs + StringTools.htmlEscape(nodeValue);
				this.output.b += Std.string(input);
				if(this.pretty) {
					this.output.b += "\n";
				}
			}
			break;
		case 2:
			this.output.b += Std.string(tabs + "<![CDATA[");
			if(value.nodeType == Xml.Document || value.nodeType == Xml.Element) {
				throw haxe_Exception.thrown("Bad node type, unexpected " + (value.nodeType == null ? "null" : XmlType.toString(value.nodeType)));
			}
			this.output.b += Std.string(value.nodeValue);
			this.output.b += "]]>";
			if(this.pretty) {
				this.output.b += "\n";
			}
			break;
		case 3:
			if(value.nodeType == Xml.Document || value.nodeType == Xml.Element) {
				throw haxe_Exception.thrown("Bad node type, unexpected " + (value.nodeType == null ? "null" : XmlType.toString(value.nodeType)));
			}
			var commentContent = value.nodeValue;
			var _this_r = new RegExp("[\n\r\t]+","g".split("u").join(""));
			commentContent = commentContent.replace(_this_r,"");
			commentContent = "<!--" + commentContent + "-->";
			this.output.b += tabs == null ? "null" : "" + tabs;
			this.output.b += Std.string(StringTools.trim(commentContent));
			if(this.pretty) {
				this.output.b += "\n";
			}
			break;
		case 4:
			if(value.nodeType == Xml.Document || value.nodeType == Xml.Element) {
				throw haxe_Exception.thrown("Bad node type, unexpected " + (value.nodeType == null ? "null" : XmlType.toString(value.nodeType)));
			}
			this.output.b += Std.string("<!DOCTYPE " + value.nodeValue + ">");
			if(this.pretty) {
				this.output.b += "\n";
			}
			break;
		case 5:
			if(value.nodeType == Xml.Document || value.nodeType == Xml.Element) {
				throw haxe_Exception.thrown("Bad node type, unexpected " + (value.nodeType == null ? "null" : XmlType.toString(value.nodeType)));
			}
			this.output.b += Std.string("<?" + value.nodeValue + "?>");
			if(this.pretty) {
				this.output.b += "\n";
			}
			break;
		case 6:
			if(value.nodeType != Xml.Document && value.nodeType != Xml.Element) {
				throw haxe_Exception.thrown("Bad node type, expected Element or Document but found " + (value.nodeType == null ? "null" : XmlType.toString(value.nodeType)));
			}
			var _this = value.children;
			var _g_current = 0;
			while(_g_current < _this.length) this.writeNode(_this[_g_current++],tabs);
			break;
		}
	}
	,hasChildren: function(value) {
		if(value.nodeType != Xml.Document && value.nodeType != Xml.Element) {
			throw haxe_Exception.thrown("Bad node type, expected Element or Document but found " + (value.nodeType == null ? "null" : XmlType.toString(value.nodeType)));
		}
		var _this = value.children;
		var _g_current = 0;
		while(_g_current < _this.length) {
			var child = _this[_g_current++];
			switch(child.nodeType) {
			case 0:case 1:
				return true;
			case 2:case 3:
				if(child.nodeType == Xml.Document || child.nodeType == Xml.Element) {
					throw haxe_Exception.thrown("Bad node type, unexpected " + (child.nodeType == null ? "null" : XmlType.toString(child.nodeType)));
				}
				if(StringTools.ltrim(child.nodeValue).length != 0) {
					return true;
				}
				break;
			default:
			}
		}
		return false;
	}
	,__class__: haxe_xml_Printer
};
var haxe_zip_Huffman = $hxEnums["haxe.zip.Huffman"] = { __ename__ : true, __constructs__ : ["Found","NeedBit","NeedBits"]
	,Found: ($_=function(i) { return {_hx_index:0,i:i,__enum__:"haxe.zip.Huffman",toString:$estr}; },$_.__params__ = ["i"],$_)
	,NeedBit: ($_=function(left,right) { return {_hx_index:1,left:left,right:right,__enum__:"haxe.zip.Huffman",toString:$estr}; },$_.__params__ = ["left","right"],$_)
	,NeedBits: ($_=function(n,table) { return {_hx_index:2,n:n,table:table,__enum__:"haxe.zip.Huffman",toString:$estr}; },$_.__params__ = ["n","table"],$_)
};
var haxe_zip_HuffTools = function() {
};
$hxClasses["haxe.zip.HuffTools"] = haxe_zip_HuffTools;
haxe_zip_HuffTools.__name__ = "haxe.zip.HuffTools";
haxe_zip_HuffTools.prototype = {
	treeDepth: function(t) {
		switch(t._hx_index) {
		case 0:
			return 0;
		case 1:
			var da = this.treeDepth(t.left);
			var db = this.treeDepth(t.right);
			return 1 + (da < db ? da : db);
		case 2:
			throw haxe_Exception.thrown("assert");
		}
	}
	,treeCompress: function(t) {
		var d = this.treeDepth(t);
		if(d == 0) {
			return t;
		}
		if(d == 1) {
			if(t._hx_index == 1) {
				return haxe_zip_Huffman.NeedBit(this.treeCompress(t.left),this.treeCompress(t.right));
			} else {
				throw haxe_Exception.thrown("assert");
			}
		}
		var size = 1 << d;
		var table = [];
		var _g = 0;
		while(_g < size) {
			++_g;
			table.push(haxe_zip_Huffman.Found(-1));
		}
		this.treeWalk(table,0,0,d,t);
		return haxe_zip_Huffman.NeedBits(d,table);
	}
	,treeWalk: function(table,p,cd,d,t) {
		if(t._hx_index == 1) {
			if(d > 0) {
				this.treeWalk(table,p,cd + 1,d - 1,t.left);
				this.treeWalk(table,p | 1 << cd,cd + 1,d - 1,t.right);
			} else {
				table[p] = this.treeCompress(t);
			}
		} else {
			table[p] = this.treeCompress(t);
		}
	}
	,treeMake: function(bits,maxbits,v,len) {
		if(len > maxbits) {
			throw haxe_Exception.thrown("Invalid huffman");
		}
		var idx = v << 5 | len;
		if(bits.h.hasOwnProperty(idx)) {
			return haxe_zip_Huffman.Found(bits.h[idx]);
		}
		v <<= 1;
		++len;
		return haxe_zip_Huffman.NeedBit(this.treeMake(bits,maxbits,v,len),this.treeMake(bits,maxbits,v | 1,len));
	}
	,make: function(lengths,pos,nlengths,maxbits) {
		if(nlengths == 1) {
			return haxe_zip_Huffman.NeedBit(haxe_zip_Huffman.Found(0),haxe_zip_Huffman.Found(0));
		}
		var counts = [];
		var tmp = [];
		if(maxbits > 32) {
			throw haxe_Exception.thrown("Invalid huffman");
		}
		var _g = 0;
		while(_g < maxbits) {
			++_g;
			counts.push(0);
			tmp.push(0);
		}
		var _g = 0;
		while(_g < nlengths) {
			var p = lengths[_g++ + pos];
			if(p >= maxbits) {
				throw haxe_Exception.thrown("Invalid huffman");
			}
			counts[p]++;
		}
		var code = 0;
		var _g = 1;
		var _g1 = maxbits - 1;
		while(_g < _g1) {
			var i = _g++;
			code = code + counts[i] << 1;
			tmp[i] = code;
		}
		var bits = new haxe_ds_IntMap();
		var _g = 0;
		while(_g < nlengths) {
			var i = _g++;
			var l = lengths[i + pos];
			if(l != 0) {
				var n = tmp[l - 1];
				tmp[l - 1] = n + 1;
				bits.h[n << 5 | l] = i;
			}
		}
		return this.treeCompress(haxe_zip_Huffman.NeedBit(this.treeMake(bits,maxbits,0,1),this.treeMake(bits,maxbits,1,1)));
	}
	,__class__: haxe_zip_HuffTools
};
var haxe_zip__$InflateImpl_Window = function(hasCrc) {
	this.buffer = new haxe_io_Bytes(new ArrayBuffer(65536));
	this.pos = 0;
	if(hasCrc) {
		this.crc = new haxe_crypto_Adler32();
	}
};
$hxClasses["haxe.zip._InflateImpl.Window"] = haxe_zip__$InflateImpl_Window;
haxe_zip__$InflateImpl_Window.__name__ = "haxe.zip._InflateImpl.Window";
haxe_zip__$InflateImpl_Window.prototype = {
	buffer: null
	,pos: null
	,crc: null
	,slide: function() {
		if(this.crc != null) {
			this.crc.update(this.buffer,0,32768);
		}
		var b = new haxe_io_Bytes(new ArrayBuffer(65536));
		this.pos -= 32768;
		b.blit(0,this.buffer,32768,this.pos);
		this.buffer = b;
	}
	,addBytes: function(b,p,len) {
		if(this.pos + len > 65536) {
			this.slide();
		}
		this.buffer.blit(this.pos,b,p,len);
		this.pos += len;
	}
	,addByte: function(c) {
		if(this.pos == 65536) {
			this.slide();
		}
		this.buffer.b[this.pos] = c;
		this.pos++;
	}
	,getLastChar: function() {
		return this.buffer.b[this.pos - 1];
	}
	,available: function() {
		return this.pos;
	}
	,checksum: function() {
		if(this.crc != null) {
			this.crc.update(this.buffer,0,this.pos);
		}
		return this.crc;
	}
	,__class__: haxe_zip__$InflateImpl_Window
};
var haxe_zip__$InflateImpl_State = $hxEnums["haxe.zip._InflateImpl.State"] = { __ename__ : true, __constructs__ : ["Head","Block","CData","Flat","Crc","Dist","DistOne","Done"]
	,Head: {_hx_index:0,__enum__:"haxe.zip._InflateImpl.State",toString:$estr}
	,Block: {_hx_index:1,__enum__:"haxe.zip._InflateImpl.State",toString:$estr}
	,CData: {_hx_index:2,__enum__:"haxe.zip._InflateImpl.State",toString:$estr}
	,Flat: {_hx_index:3,__enum__:"haxe.zip._InflateImpl.State",toString:$estr}
	,Crc: {_hx_index:4,__enum__:"haxe.zip._InflateImpl.State",toString:$estr}
	,Dist: {_hx_index:5,__enum__:"haxe.zip._InflateImpl.State",toString:$estr}
	,DistOne: {_hx_index:6,__enum__:"haxe.zip._InflateImpl.State",toString:$estr}
	,Done: {_hx_index:7,__enum__:"haxe.zip._InflateImpl.State",toString:$estr}
};
var haxe_zip_InflateImpl = function(i,header,crc) {
	if(crc == null) {
		crc = true;
	}
	if(header == null) {
		header = true;
	}
	this.isFinal = false;
	this.htools = new haxe_zip_HuffTools();
	this.huffman = this.buildFixedHuffman();
	this.huffdist = null;
	this.len = 0;
	this.dist = 0;
	this.state = header ? haxe_zip__$InflateImpl_State.Head : haxe_zip__$InflateImpl_State.Block;
	this.input = i;
	this.bits = 0;
	this.nbits = 0;
	this.needed = 0;
	this.output = null;
	this.outpos = 0;
	this.lengths = [];
	this.lengths.push(-1);
	this.lengths.push(-1);
	this.lengths.push(-1);
	this.lengths.push(-1);
	this.lengths.push(-1);
	this.lengths.push(-1);
	this.lengths.push(-1);
	this.lengths.push(-1);
	this.lengths.push(-1);
	this.lengths.push(-1);
	this.lengths.push(-1);
	this.lengths.push(-1);
	this.lengths.push(-1);
	this.lengths.push(-1);
	this.lengths.push(-1);
	this.lengths.push(-1);
	this.lengths.push(-1);
	this.lengths.push(-1);
	this.lengths.push(-1);
	this.window = new haxe_zip__$InflateImpl_Window(crc);
};
$hxClasses["haxe.zip.InflateImpl"] = haxe_zip_InflateImpl;
haxe_zip_InflateImpl.__name__ = "haxe.zip.InflateImpl";
haxe_zip_InflateImpl.prototype = {
	nbits: null
	,bits: null
	,state: null
	,isFinal: null
	,huffman: null
	,huffdist: null
	,htools: null
	,len: null
	,dist: null
	,needed: null
	,output: null
	,outpos: null
	,input: null
	,lengths: null
	,window: null
	,buildFixedHuffman: function() {
		if(haxe_zip_InflateImpl.FIXED_HUFFMAN != null) {
			return haxe_zip_InflateImpl.FIXED_HUFFMAN;
		}
		var a = [];
		var _g = 0;
		while(_g < 288) {
			var n = _g++;
			a.push(n <= 143 ? 8 : n <= 255 ? 9 : n <= 279 ? 7 : 8);
		}
		haxe_zip_InflateImpl.FIXED_HUFFMAN = this.htools.make(a,0,288,10);
		return haxe_zip_InflateImpl.FIXED_HUFFMAN;
	}
	,readBytes: function(b,pos,len) {
		this.needed = len;
		this.outpos = pos;
		this.output = b;
		if(len > 0) {
			while(this.inflateLoop()) {
			}
		}
		return len - this.needed;
	}
	,getBits: function(n) {
		while(this.nbits < n) {
			this.bits |= this.input.readByte() << this.nbits;
			this.nbits += 8;
		}
		var b = this.bits & (1 << n) - 1;
		this.nbits -= n;
		this.bits >>= n;
		return b;
	}
	,getBit: function() {
		if(this.nbits == 0) {
			this.nbits = 8;
			this.bits = this.input.readByte();
		}
		var b = (this.bits & 1) == 1;
		this.nbits--;
		this.bits >>= 1;
		return b;
	}
	,getRevBits: function(n) {
		if(n == 0) {
			return 0;
		} else if(this.getBit()) {
			return 1 << n - 1 | this.getRevBits(n - 1);
		} else {
			return this.getRevBits(n - 1);
		}
	}
	,resetBits: function() {
		this.bits = 0;
		this.nbits = 0;
	}
	,addBytes: function(b,p,len) {
		this.window.addBytes(b,p,len);
		this.output.blit(this.outpos,b,p,len);
		this.needed -= len;
		this.outpos += len;
	}
	,addByte: function(b) {
		this.window.addByte(b);
		this.output.b[this.outpos] = b;
		this.needed--;
		this.outpos++;
	}
	,addDistOne: function(n) {
		var c = this.window.getLastChar();
		var _g = 0;
		while(_g < n) {
			++_g;
			this.addByte(c);
		}
	}
	,addDist: function(d,len) {
		this.addBytes(this.window.buffer,this.window.pos - d,len);
	}
	,applyHuffman: function(h) {
		switch(h._hx_index) {
		case 0:
			return h.i;
		case 1:
			return this.applyHuffman(this.getBit() ? h.right : h.left);
		case 2:
			return this.applyHuffman(h.table[this.getBits(h.n)]);
		}
	}
	,inflateLengths: function(a,max) {
		var i = 0;
		var prev = 0;
		while(i < max) {
			var n = this.applyHuffman(this.huffman);
			switch(n) {
			case 0:case 1:case 2:case 3:case 4:case 5:case 6:case 7:case 8:case 9:case 10:case 11:case 12:case 13:case 14:case 15:
				prev = n;
				a[i] = n;
				++i;
				break;
			case 16:
				var end = i + 3 + this.getBits(2);
				if(end > max) {
					throw haxe_Exception.thrown("Invalid data");
				}
				while(i < end) {
					a[i] = prev;
					++i;
				}
				break;
			case 17:
				i += 3 + this.getBits(3);
				if(i > max) {
					throw haxe_Exception.thrown("Invalid data");
				}
				break;
			case 18:
				i += 11 + this.getBits(7);
				if(i > max) {
					throw haxe_Exception.thrown("Invalid data");
				}
				break;
			default:
				throw haxe_Exception.thrown("Invalid data");
			}
		}
	}
	,inflateLoop: function() {
		switch(this.state._hx_index) {
		case 0:
			var cmf = this.input.readByte();
			if((cmf & 15) != 8) {
				throw haxe_Exception.thrown("Invalid data");
			}
			var flg = this.input.readByte();
			if(((cmf << 8) + flg) % 31 != 0) {
				throw haxe_Exception.thrown("Invalid data");
			}
			if((flg & 32) != 0) {
				throw haxe_Exception.thrown("Unsupported dictionary");
			}
			this.state = haxe_zip__$InflateImpl_State.Block;
			return true;
		case 1:
			this.isFinal = this.getBit();
			switch(this.getBits(2)) {
			case 0:
				this.len = this.input.readUInt16();
				if(this.input.readUInt16() != 65535 - this.len) {
					throw haxe_Exception.thrown("Invalid data");
				}
				this.state = haxe_zip__$InflateImpl_State.Flat;
				var r = this.inflateLoop();
				this.resetBits();
				return r;
			case 1:
				this.huffman = this.buildFixedHuffman();
				this.huffdist = null;
				this.state = haxe_zip__$InflateImpl_State.CData;
				return true;
			case 2:
				var hlit = this.getBits(5) + 257;
				var hdist = this.getBits(5) + 1;
				var hclen = this.getBits(4) + 4;
				var _g = 0;
				while(_g < hclen) this.lengths[haxe_zip_InflateImpl.CODE_LENGTHS_POS[_g++]] = this.getBits(3);
				var _g = hclen;
				while(_g < 19) this.lengths[haxe_zip_InflateImpl.CODE_LENGTHS_POS[_g++]] = 0;
				this.huffman = this.htools.make(this.lengths,0,19,8);
				var lengths = [];
				var _g = 0;
				var _g1 = hlit + hdist;
				while(_g < _g1) {
					++_g;
					lengths.push(0);
				}
				this.inflateLengths(lengths,hlit + hdist);
				this.huffdist = this.htools.make(lengths,hlit,hdist,16);
				this.huffman = this.htools.make(lengths,0,hlit,16);
				this.state = haxe_zip__$InflateImpl_State.CData;
				return true;
			default:
				throw haxe_Exception.thrown("Invalid data");
			}
			break;
		case 2:
			var n = this.applyHuffman(this.huffman);
			if(n < 256) {
				this.addByte(n);
				return this.needed > 0;
			} else if(n == 256) {
				this.state = this.isFinal ? haxe_zip__$InflateImpl_State.Crc : haxe_zip__$InflateImpl_State.Block;
				return true;
			} else {
				n -= 257;
				var extra_bits = haxe_zip_InflateImpl.LEN_EXTRA_BITS_TBL[n];
				if(extra_bits == -1) {
					throw haxe_Exception.thrown("Invalid data");
				}
				this.len = haxe_zip_InflateImpl.LEN_BASE_VAL_TBL[n] + this.getBits(extra_bits);
				var dist_code = this.huffdist == null ? this.getRevBits(5) : this.applyHuffman(this.huffdist);
				extra_bits = haxe_zip_InflateImpl.DIST_EXTRA_BITS_TBL[dist_code];
				if(extra_bits == -1) {
					throw haxe_Exception.thrown("Invalid data");
				}
				this.dist = haxe_zip_InflateImpl.DIST_BASE_VAL_TBL[dist_code] + this.getBits(extra_bits);
				if(this.dist > this.window.available()) {
					throw haxe_Exception.thrown("Invalid data");
				}
				this.state = this.dist == 1 ? haxe_zip__$InflateImpl_State.DistOne : haxe_zip__$InflateImpl_State.Dist;
				return true;
			}
			break;
		case 3:
			var rlen = this.len < this.needed ? this.len : this.needed;
			var bytes = this.input.read(rlen);
			this.len -= rlen;
			this.addBytes(bytes,0,rlen);
			if(this.len == 0) {
				this.state = this.isFinal ? haxe_zip__$InflateImpl_State.Crc : haxe_zip__$InflateImpl_State.Block;
			}
			return this.needed > 0;
		case 4:
			var calc = this.window.checksum();
			if(calc == null) {
				this.state = haxe_zip__$InflateImpl_State.Done;
				return true;
			}
			if(!calc.equals(haxe_crypto_Adler32.read(this.input))) {
				throw haxe_Exception.thrown("Invalid CRC");
			}
			this.state = haxe_zip__$InflateImpl_State.Done;
			return true;
		case 5:
			while(this.len > 0 && this.needed > 0) {
				var rdist = this.len < this.dist ? this.len : this.dist;
				var rlen = this.needed < rdist ? this.needed : rdist;
				this.addDist(this.dist,rlen);
				this.len -= rlen;
			}
			if(this.len == 0) {
				this.state = haxe_zip__$InflateImpl_State.CData;
			}
			return this.needed > 0;
		case 6:
			var rlen = this.len < this.needed ? this.len : this.needed;
			this.addDistOne(rlen);
			this.len -= rlen;
			if(this.len == 0) {
				this.state = haxe_zip__$InflateImpl_State.CData;
			}
			return this.needed > 0;
		case 7:
			return false;
		}
	}
	,__class__: haxe_zip_InflateImpl
};
var haxe_zip_Reader = function(i) {
	this.i = i;
};
$hxClasses["haxe.zip.Reader"] = haxe_zip_Reader;
haxe_zip_Reader.__name__ = "haxe.zip.Reader";
haxe_zip_Reader.prototype = {
	i: null
	,readZipDate: function() {
		var t = this.i.readUInt16();
		var d = this.i.readUInt16();
		return new Date((d >> 9) + 1980,(d >> 5 & 15) - 1,d & 31,t >> 11 & 31,t >> 5 & 63,(t & 31) << 1);
	}
	,__class__: haxe_zip_Reader
};
var hxmod_ModPlayer = function() {
	this.chvu = new Float32Array(32);
	this.samplenames = [];
	this.patterns = 0;
	this.channels = 0;
	this.songlen = 0;
	this.signature = "....";
	this.title = "";
	this.player = null;
	this.bufferlen = 4096;
	this.samplerate = 44100;
	this.delayload = 0;
	this.delayfirst = 0;
	this.bufferstodelay = 4;
	this.autostart = false;
	this.endofsong = false;
	this.filter = false;
	this.amiga500 = false;
	this.mixval = 8.0;
	this.separation = 1;
	this.repeat = false;
	this.paused = false;
	this.playing = false;
	this.loading = false;
	this.state = "initializing..";
	this.format = "s3m";
	this.url = "";
	this.supportedformats = ["mod","s3m","xm"];
};
$hxClasses["hxmod.ModPlayer"] = hxmod_ModPlayer;
hxmod_ModPlayer.__name__ = "hxmod.ModPlayer";
hxmod_ModPlayer.prototype = {
	supportedformats: null
	,url: null
	,format: null
	,state: null
	,loading: null
	,playing: null
	,paused: null
	,repeat: null
	,separation: null
	,mixval: null
	,amiga500: null
	,filter: null
	,endofsong: null
	,autostart: null
	,bufferstodelay: null
	,delayfirst: null
	,delayload: null
	,mixerNode: null
	,context: null
	,samplerate: null
	,bufferlen: null
	,row: null
	,player: null
	,title: null
	,signature: null
	,songlen: null
	,channels: null
	,patterns: null
	,samplenames: null
	,lowpassNode: null
	,filterNode: null
	,position: null
	,speed: null
	,bpm: null
	,chvu: null
	,onReady: null
	,onPlay: null
	,onStop: null
	,load: function(url) {
		var _gthis = this;
		this.url = url;
		var ext = StringTools.trim(url.split(".").pop().toLowerCase());
		if(this.supportedformats.indexOf(ext) == -1) {
			ext = StringTools.trim(url.split("/").pop().split(".").shift().toLowerCase());
			if(this.supportedformats.indexOf(ext) == -1) {
				return false;
			}
		}
		this.format = ext;
		if(ext == "mod") {
			this.player = new hxmod_Protracker();
		}
		this.set_state("loading..");
		var request = new XMLHttpRequest();
		request.open("GET",url,true);
		request.responseType = "arraybuffer";
		this.loading = true;
		request.onprogress = function(oe) {
			_gthis.set_state("loading (" + Math.floor(100 * oe.loaded / oe.total) + "%)..");
		};
		request.onload = function() {
			var elements = request.response;
			var this1;
			if(elements != null) {
				this1 = new Uint8Array(elements);
			} else {
				this1 = null;
			}
			_gthis.set_state("parsing..");
			if(_gthis.player.parse(this1)) {
				_gthis.title = _gthis.player.title;
				_gthis.signature = _gthis.player.signature;
				_gthis.songlen = _gthis.player.songlen;
				_gthis.channels = _gthis.player.channels;
				_gthis.patterns = _gthis.player.patterns;
				_gthis.filter = _gthis.player.filter;
				if(_gthis.context != null) {
					_gthis.setfilter(_gthis.filter);
				}
				_gthis.mixval = _gthis.player.mixval;
				_gthis.samplenames.length = 32;
				_gthis.samplenames[0] = "";
				_gthis.samplenames[1] = "";
				_gthis.samplenames[2] = "";
				_gthis.samplenames[3] = "";
				_gthis.samplenames[4] = "";
				_gthis.samplenames[5] = "";
				_gthis.samplenames[6] = "";
				_gthis.samplenames[7] = "";
				_gthis.samplenames[8] = "";
				_gthis.samplenames[9] = "";
				_gthis.samplenames[10] = "";
				_gthis.samplenames[11] = "";
				_gthis.samplenames[12] = "";
				_gthis.samplenames[13] = "";
				_gthis.samplenames[14] = "";
				_gthis.samplenames[15] = "";
				_gthis.samplenames[16] = "";
				_gthis.samplenames[17] = "";
				_gthis.samplenames[18] = "";
				_gthis.samplenames[19] = "";
				_gthis.samplenames[20] = "";
				_gthis.samplenames[21] = "";
				_gthis.samplenames[22] = "";
				_gthis.samplenames[23] = "";
				_gthis.samplenames[24] = "";
				_gthis.samplenames[25] = "";
				_gthis.samplenames[26] = "";
				_gthis.samplenames[27] = "";
				_gthis.samplenames[28] = "";
				_gthis.samplenames[29] = "";
				_gthis.samplenames[30] = "";
				_gthis.samplenames[31] = "";
				var _g = 0;
				while(_g < 32) {
					var i = _g++;
					if(!(_gthis.format == "xm" || _gthis.format == "it")) {
						var _g1 = 0;
						var _g2 = _gthis.player.sample.length;
						while(_g1 < _g2) {
							var p = _g1++;
							if(_gthis.player.sample[i] != null) {
								_gthis.samplenames[p] = _gthis.player.sample[i].name;
							}
						}
					}
				}
				_gthis.set_state("ready.");
				_gthis.loading = false;
				if(_gthis.onReady != null) {
					_gthis.onReady();
				}
				if(_gthis.autostart) {
					_gthis.play();
				}
			} else {
				_gthis.set_state("error!");
				_gthis.loading = false;
			}
		};
		request.send();
		return true;
	}
	,play: function() {
		if(this.loading) {
			return false;
		}
		if(this.player != null) {
			if(this.context == null) {
				this.createContext();
			}
			this.player.samplerate = this.samplerate;
			if(this.context != null) {
				this.setfilter(this.player.filter);
			}
			if(this.player.paused) {
				this.player.paused = false;
				return true;
			}
			this.endofsong = false;
			this.player.endofsong = false;
			this.player.paused = false;
			this.player.initialize();
			this.player.flags = 3;
			this.player.playing = true;
			this.playing = true;
			var elements = this.player.channels;
			var this1;
			if(elements != null) {
				this1 = new Float32Array(elements);
			} else {
				this1 = null;
			}
			this.chvu = this1;
			var _g = 0;
			var _g1 = this.player.channels;
			while(_g < _g1) this.chvu[_g++] = 0.0;
			if(this.onPlay != null) {
				this.onPlay();
			}
			this.player.delayfirst = this.bufferstodelay;
			return true;
		} else {
			return false;
		}
	}
	,stop: function() {
		this.paused = false;
		this.playing = false;
		if(this.player != null) {
			this.player.paused = false;
			this.player.playing = false;
			this.player.delayload = 1;
		}
		if(this.onStop != null) {
			this.onStop();
		}
	}
	,setfilter: function(f) {
		if(f) {
			this.lowpassNode.frequency.value = 3275;
		} else {
			this.lowpassNode.frequency.value = 24000;
		}
		this.filter = f;
		if(this.player != null) {
			this.player.filter = f;
		}
	}
	,createContext: function() {
		this.context = new AudioContext();
		this.samplerate = this.context.sampleRate;
		this.bufferlen = this.samplerate > 44100 ? 4096 : 2048;
		this.filterNode = this.context.createBiquadFilter();
		if(this.amiga500) {
			this.filterNode.frequency.value = 6000;
		} else {
			this.filterNode.frequency.value = 22050;
		}
		this.lowpassNode = this.context.createBiquadFilter();
		this.setfilter(this.filter);
		this.mixerNode = this.context.createScriptProcessor(this.bufferlen,1,2);
		this.mixerNode.module = this;
		this.mixerNode.onaudioprocess = $bind(this,this.mix);
		this.mixerNode.connect(this.filterNode);
		this.filterNode.connect(this.lowpassNode);
		this.lowpassNode.connect(this.context.destination);
		this.mixerNode.onaudioprocess = $bind(this,this.mix);
	}
	,mix: function(ape) {
		var mod = null;
		if(ape.srcElement) {
			mod = ape.srcElement.module;
		}
		if(mod.player != null && mod.delayfirst == 0) {
			mod.player.repeat = mod.repeat;
			var bufs = [ape.outputBuffer.getChannelData(0),ape.outputBuffer.getChannelData(1)];
			var buflen = ape.outputBuffer.length;
			mod.player.mix(mod.player,bufs,buflen);
			var array = null;
			var view = null;
			var buffer = null;
			var len = null;
			var this1 = new Float32Array(2);
			var outp = this1;
			var _g = 0;
			var _g1 = buflen;
			while(_g < _g1) {
				var s = _g++;
				outp[0] = bufs[0][s];
				outp[1] = bufs[1][s];
				if(mod.separation) {
					var t = outp[0];
					if(mod.separation == 2) {
						outp[0] = outp[0] * 0.5 + outp[1] * 0.5;
						outp[1] = outp[1] * 0.5 + t * 0.5;
					} else {
						outp[0] = outp[0] * 0.65 + outp[1] * 0.35;
						outp[1] = outp[1] * 0.65 + t * 0.35;
					}
				}
				outp[0] /= mod.mixval;
				outp[0] = 0.5 * (Math.abs(outp[0] + 0.975) - Math.abs(outp[0] - 0.975));
				outp[1] /= mod.mixval;
				outp[1] = 0.5 * (Math.abs(outp[1] + 0.975) - Math.abs(outp[1] - 0.975));
				bufs[0][s] = outp[0];
				bufs[1][s] = outp[1];
			}
			mod.row = mod.player.row;
			mod.position = mod.player.position;
			mod.speed = mod.player.speed;
			mod.bpm = mod.player.bpm;
			mod.endofsong = mod.player.endofsong;
			if(mod.player.filter != mod.filter) {
				mod.setfilter(mod.player.filter);
			}
			if(mod.endofsong && mod.playing) {
				mod.stop();
			}
			if(mod.delayfirst > 0) {
				mod.delayfirst--;
			}
			mod.delayload = 0;
			var _g = 0;
			var _g1 = mod.player.channels;
			while(_g < _g1) {
				var i = _g++;
				mod.chvu[i] = mod.chvu[i] * 0.25 + mod.player.chvu[i] * 0.75;
				mod.player.chvu[i] = 0.0;
			}
		}
	}
	,set_state: function(value) {
		haxe_Log.trace(value,{ fileName : "hxmod/ModPlayer.hx", lineNumber : 635, className : "hxmod.ModPlayer", methodName : "set_state"});
		return this.state = value;
	}
	,__class__: hxmod_ModPlayer
	,__properties__: {set_state:"set_state"}
};
var hxmod_Protracker = function() {
	this.patterntable = new ArrayBuffer(128);
	this.vibratotable = [];
	this.finetunetable = new Float32Array(16);
	var array = [856,808,762,720,678,640,604,570,538,508,480,453,428,404,381,360,339,320,302,285,269,254,240,226,214,202,190,180,170,160,151,143,135,127,120,113];
	var this1;
	if(array != null) {
		this1 = new Float32Array(array);
	} else {
		this1 = null;
	}
	this.baseperiodtable = this1;
	this.samplerate = 44100;
	this.syncqueue = [];
	this.mixval = 4.0;
	this.filter = false;
	this.repeat = false;
	this.paused = false;
	this.playing = false;
	this.effects_t0 = [$bind(this,this.effect_t0_0),$bind(this,this.effect_t0_1),$bind(this,this.effect_t0_2),$bind(this,this.effect_t0_3),$bind(this,this.effect_t0_4),$bind(this,this.effect_t0_5),$bind(this,this.effect_t0_6),$bind(this,this.effect_t0_7),$bind(this,this.effect_t0_8),$bind(this,this.effect_t0_9),$bind(this,this.effect_t0_a),$bind(this,this.effect_t0_b),$bind(this,this.effect_t0_c),$bind(this,this.effect_t0_d),$bind(this,this.effect_t0_e),$bind(this,this.effect_t0_f)];
	this.effects_t0_e = [$bind(this,this.effect_t0_e0),$bind(this,this.effect_t0_e1),$bind(this,this.effect_t0_e2),$bind(this,this.effect_t0_e3),$bind(this,this.effect_t0_e4),$bind(this,this.effect_t0_e5),$bind(this,this.effect_t0_e6),$bind(this,this.effect_t0_e7),$bind(this,this.effect_t0_e8),$bind(this,this.effect_t0_e9),$bind(this,this.effect_t0_ea),$bind(this,this.effect_t0_eb),$bind(this,this.effect_t0_ec),$bind(this,this.effect_t0_ed),$bind(this,this.effect_t0_ee),$bind(this,this.effect_t0_ef)];
	this.effects_t1 = [$bind(this,this.effect_t1_0),$bind(this,this.effect_t1_1),$bind(this,this.effect_t1_2),$bind(this,this.effect_t1_3),$bind(this,this.effect_t1_4),$bind(this,this.effect_t1_5),$bind(this,this.effect_t1_6),$bind(this,this.effect_t1_7),$bind(this,this.effect_t1_8),$bind(this,this.effect_t1_9),$bind(this,this.effect_t1_a),$bind(this,this.effect_t1_b),$bind(this,this.effect_t1_c),$bind(this,this.effect_t1_d),$bind(this,this.effect_t1_e),$bind(this,this.effect_t1_f)];
	this.effects_t1_e = [$bind(this,this.effect_t1_e0),$bind(this,this.effect_t1_e1),$bind(this,this.effect_t1_e2),$bind(this,this.effect_t1_e3),$bind(this,this.effect_t1_e4),$bind(this,this.effect_t1_e5),$bind(this,this.effect_t1_e6),$bind(this,this.effect_t1_e7),$bind(this,this.effect_t1_e8),$bind(this,this.effect_t1_e9),$bind(this,this.effect_t1_ea),$bind(this,this.effect_t1_eb),$bind(this,this.effect_t1_ec),$bind(this,this.effect_t1_ed),$bind(this,this.effect_t1_ee),$bind(this,this.effect_t1_ef)];
	this.clearsong();
	this.initialize();
	var _g = 0;
	while(_g < 16) {
		var t = _g++;
		this.finetunetable[t] = Math.pow(2,(t - 8) / 12 / 8);
	}
	var _g = 0;
	while(_g < 4) {
		var t = _g++;
		this.vibratotable[t] = new Float32Array(64);
		var _g1 = 0;
		while(_g1 < 64) {
			var i = _g1++;
			switch(t) {
			case 0:
				this.vibratotable[t][i] = 127 * Math.sin(Math.PI * 2 * (i / 64));
				break;
			case 1:
				this.vibratotable[t][i] = 127 - 4 * i;
				break;
			case 2:
				this.vibratotable[t][i] = i < 32 ? 127 : -127;
				break;
			case 3:
				this.vibratotable[t][i] = (1 - 2 * Math.random()) * 127;
				break;
			default:
			}
		}
	}
};
$hxClasses["hxmod.Protracker"] = hxmod_Protracker;
hxmod_Protracker.__name__ = "hxmod.Protracker";
hxmod_Protracker.prototype = {
	playing: null
	,paused: null
	,repeat: null
	,filter: null
	,mixval: null
	,syncqueue: null
	,samplerate: null
	,delayfirst: null
	,delayload: null
	,baseperiodtable: null
	,finetunetable: null
	,vibratotable: null
	,effects_t0: null
	,effects_t0_e: null
	,effects_t1: null
	,effects_t1_e: null
	,title: null
	,signature: null
	,songlen: null
	,repeatpos: null
	,patterntable: null
	,channels: null
	,sample: null
	,patterns: null
	,pattern: null
	,pattern_unpack: null
	,tick: null
	,position: null
	,row: null
	,flags: null
	,speed: null
	,bpm: null
	,endofsong: null
	,channel: null
	,chvu: null
	,context: null
	,lowpassNode: null
	,samples: null
	,note: null
	,looprow: null
	,loopstart: null
	,loopcount: null
	,patterndelay: null
	,patternwait: null
	,offset: null
	,breakrow: null
	,patternjump: null
	,clearsong: function() {
		this.title = "";
		this.signature = "";
		this.songlen = 1;
		this.repeatpos = 0;
		this.patterntable = new ArrayBuffer(128);
		var _g = 0;
		while(_g < 128) this.patterntable[_g++] = 0;
		this.channels = 4;
		this.sample = [];
		this.samples = 31;
		var _g = 0;
		while(_g < 31) {
			var i = _g++;
			this.sample[i] = { };
			this.sample[i].name = "";
			this.sample[i].length = 0;
			this.sample[i].finetune = 0;
			this.sample[i].volume = 64;
			this.sample[i].loopstart = 0;
			this.sample[i].looplength = 0;
			this.sample[i].data = 0;
		}
		this.patterns = 0;
		this.pattern = [];
		this.note = [];
		this.pattern_unpack = [];
		this.looprow = 0;
		this.loopstart = 0;
		this.loopcount = 0;
		this.patterndelay = 0;
		this.patternwait = 0;
	}
	,initialize: function() {
		this.syncqueue = [];
		this.tick = 0;
		this.position = 0;
		this.row = 0;
		this.offset = 0;
		this.flags = 0;
		this.speed = 6;
		this.bpm = 125;
		this.breakrow = 0;
		this.patternjump = 0;
		this.patterndelay = 0;
		this.patternwait = 0;
		this.endofsong = false;
		this.channel = [];
		var _g = 0;
		var _g1 = this.channels;
		while(_g < _g1) this.channel[_g++] = { sample : 0, period : 214, voiceperiod : 214, note : 24, volume : 64, command : 0, data : 0, samplepos : 0, samplespeed : 0, flags : 0, noteon : 0, slidespeed : 0, slideto : 214, slidetospeed : 0, arpeggio : 0, semitone : 12, vibratospeed : 0, vibratodepth : 0, vibratopos : 0, vibratowave : 0, instrument : 0};
	}
	,parse: function(buffer) {
		var j;
		var c;
		this.signature += String.fromCodePoint(buffer[1080]);
		this.signature += String.fromCodePoint(buffer[1081]);
		this.signature += String.fromCodePoint(buffer[1082]);
		this.signature += String.fromCodePoint(buffer[1083]);
		switch(this.signature) {
		case "28CH":
			this.channels = 28;
			break;
		case "6CHN":
			this.channels = 6;
			break;
		case "4CHN":case "FLT4":case "M!K!":case "M.K.":
			break;
		case "8CHN":case "FLT8":
			this.channels = 8;
			break;
		default:
			return false;
		}
		this.chvu = new Float32Array(128);
		var _g = 0;
		var _g1 = this.channels;
		while(_g < _g1) this.chvu[_g++] = 0.0;
		var i = 0;
		while(buffer[i] != null && i < 20) {
			var code = buffer[i++];
			this.title += String.fromCodePoint(code);
		}
		var _g = 0;
		var _g1 = this.samples;
		while(_g < _g1) {
			var i = _g++;
			var st = 20 + i * 30;
			j = 0;
			while(buffer[st + j] != null && j < 22) {
				this.sample[i].name += UInt.gt(buffer[st + j],31) && UInt.gt(127,buffer[st + j]) ? String.fromCodePoint(buffer[st + j]) : " ";
				++j;
			}
			this.sample[i].length = 2 * (buffer[st + 22] * 256 + buffer[st + 23]);
			this.sample[i].finetune = buffer[st + 24];
			if(this.sample[i].finetune > 7) {
				this.sample[i].finetune -= 16;
			}
			this.sample[i].volume = buffer[st + 25];
			this.sample[i].loopstart = 2 * (buffer[st + 26] * 256 + buffer[st + 27]);
			this.sample[i].looplength = 2 * (buffer[st + 28] * 256 + buffer[st + 29]);
			if(this.sample[i].looplength == 2) {
				this.sample[i].looplength = 0;
			}
			if(this.sample[i].loopstart > this.sample[i].length) {
				this.sample[i].loopstart = 0;
				this.sample[i].looplength = 0;
			}
		}
		this.songlen = buffer[950];
		if(buffer[951] != 127) {
			this.repeatpos = buffer[951];
		}
		var _g = 0;
		while(_g < 128) {
			var i = _g++;
			this.patterntable[i] = buffer[952 + i];
			if(this.patterntable[i] > this.patterns) {
				this.patterns = this.patterntable[i];
			}
		}
		this.patterns += 1;
		var patlen = 256 * this.channels;
		this.pattern = [];
		this.note = [];
		this.pattern_unpack = [];
		var _g = 0;
		var _g1 = this.patterns;
		while(_g < _g1) {
			var i = _g++;
			var array = null;
			var view = null;
			var buffer1 = null;
			var len = null;
			var this1;
			if(patlen != null) {
				this1 = new Uint8Array(patlen);
			} else if(array != null) {
				this1 = new Uint8Array(array);
			} else if(view != null) {
				this1 = new Uint8Array(view);
			} else if(buffer1 != null) {
				if(len == null) {
					this1 = new Uint8Array(buffer1,0);
				} else {
					this1 = new Uint8Array(buffer1,0,len);
				}
			} else {
				this1 = null;
			}
			this.pattern[i] = this1;
			var elements = this.channels * 64;
			var array1 = null;
			var view1 = null;
			var buffer2 = null;
			var len1 = null;
			var this2;
			if(elements != null) {
				this2 = new Uint8Array(elements);
			} else if(array1 != null) {
				this2 = new Uint8Array(array1);
			} else if(view1 != null) {
				this2 = new Uint8Array(view1);
			} else if(buffer2 != null) {
				if(len1 == null) {
					this2 = new Uint8Array(buffer2,0);
				} else {
					this2 = new Uint8Array(buffer2,0,len1);
				}
			} else {
				this2 = null;
			}
			this.note[i] = this2;
			var elements1 = this.channels * 64 * 5;
			var array2 = null;
			var view2 = null;
			var buffer3 = null;
			var len2 = null;
			var this3;
			if(elements1 != null) {
				this3 = new Uint8Array(elements1);
			} else if(array2 != null) {
				this3 = new Uint8Array(array2);
			} else if(view2 != null) {
				this3 = new Uint8Array(view2);
			} else if(buffer3 != null) {
				if(len2 == null) {
					this3 = new Uint8Array(buffer3,0);
				} else {
					this3 = new Uint8Array(buffer3,0,len2);
				}
			} else {
				this3 = null;
			}
			this.pattern_unpack[i] = this3;
			var _g2 = 0;
			var _g3 = patlen;
			while(_g2 < _g3) {
				var j = _g2++;
				this.pattern[i][j] = buffer[1084 + i * patlen + j];
			}
			var _g4 = 0;
			while(_g4 < 64) {
				var j1 = _g4++;
				var _g5 = 0;
				var _g6 = this.channels;
				while(_g5 < _g6) {
					var c = _g5++;
					this.note[i][j1 * this.channels + c] = 0;
					var n = (this.pattern[i][j1 * 4 * this.channels + c * 4] & 15) << 8 | this.pattern[i][j1 * 4 * this.channels + c * 4 + 1];
					var _g7 = 0;
					var _g8 = this.baseperiodtable.length;
					while(_g7 < _g8) {
						var np = _g7++;
						if(n == this.baseperiodtable[np]) {
							this.note[i][j1 * this.channels + c] = np;
						}
					}
				}
			}
			var _g9 = 0;
			while(_g9 < 64) {
				var j2 = _g9++;
				var _g10 = 0;
				var _g11 = this.channels;
				while(_g10 < _g11) {
					var c1 = _g10++;
					var pp = j2 * 4 * this.channels + c1 * 4;
					var ppu = j2 * 5 * this.channels + c1 * 5;
					var n1 = (this.pattern[i][pp] & 15) << 8 | this.pattern[i][pp + 1];
					if(n1 != null) {
						n1 = this.note[i][j2 * this.channels + c1];
						n1 = n1 % 12 | Math.floor(n1 / 12) + 2 << 4;
					}
					this.pattern_unpack[i][ppu] = n1 != null ? n1 : 255;
					this.pattern_unpack[i][ppu + 1] = this.pattern[i][pp] & 240 | this.pattern[i][pp + 2] >> 4;
					this.pattern_unpack[i][ppu + 2] = 255;
					this.pattern_unpack[i][ppu + 3] = this.pattern[i][pp + 2] & 15;
					this.pattern_unpack[i][ppu + 4] = this.pattern[i][pp + 3];
				}
			}
		}
		var sst = 1084 + this.patterns * patlen;
		var _g = 0;
		var _g1 = this.samples;
		while(_g < _g1) {
			var i = _g++;
			var elements = this.sample[i].length;
			var array = null;
			var view = null;
			var buffer1 = null;
			var len = null;
			var this1;
			if(elements != null) {
				this1 = new Float32Array(elements);
			} else if(array != null) {
				this1 = new Float32Array(array);
			} else if(view != null) {
				this1 = new Float32Array(view);
			} else if(buffer1 != null) {
				if(len == null) {
					this1 = new Float32Array(buffer1,0);
				} else {
					this1 = new Float32Array(buffer1,0,len);
				}
			} else {
				this1 = null;
			}
			this.sample[i].data = this1;
			var _g2 = 0;
			var _g3 = this.sample[i].length;
			while(_g2 < _g3) {
				var j = _g2++;
				var q = UInt.toFloat(buffer[sst + j]);
				if(q < 128) {
					q /= 128.0;
				} else {
					q = (q - 128) / 128.0 - 1.0;
				}
				this.sample[i].data[j] = q;
			}
			sst += this.sample[i].length;
		}
		this.filter = false;
		var _g = 0;
		var _g1 = this.channels;
		while(_g < _g1) {
			var p = this.patterntable[0];
			var pp = _g++ * 4;
			var data = this.pattern[p][pp + 3];
			if((this.pattern[p][pp + 2] & 15) == 14 && (data & 240) == 0) {
				if((data & 1) == null) {
					this.filter = true;
				} else {
					this.filter = false;
				}
			}
		}
		if(this.context != null) {
			if(this.filter != null) {
				this.lowpassNode.frequency.value = 3275;
			} else {
				this.lowpassNode.frequency.value = 28867;
			}
		}
		var elements = this.channels;
		var array = null;
		var view = null;
		var buffer = null;
		var len = null;
		var this1;
		if(elements != null) {
			this1 = new Float32Array(elements);
		} else if(array != null) {
			this1 = new Float32Array(array);
		} else if(view != null) {
			this1 = new Float32Array(view);
		} else if(buffer != null) {
			if(len == null) {
				this1 = new Float32Array(buffer,0);
			} else {
				this1 = new Float32Array(buffer,0,len);
			}
		} else {
			this1 = null;
		}
		this.chvu = this1;
		var _g = 0;
		var _g1 = this.channels;
		while(_g < _g1) this.chvu[_g++] = 0.0;
		return true;
	}
	,advance: function(mod) {
		if(mod.offset > mod.samplerate * 60 / mod.bpm / 4 / 6) {
			mod.tick++;
			mod.offset = 0;
			mod.flags |= 1;
		}
		if(mod.tick >= mod.speed) {
			if(mod.patterndelay) {
				if(mod.tick < (mod.patternwait + 1) * mod.speed) {
					mod.patternwait++;
				} else {
					mod.row++;
					mod.tick = 0;
					mod.flags |= 2;
					mod.patterndelay = 0;
				}
			} else if(mod.flags & 112) {
				if(mod.flags & 64) {
					mod.row = mod.looprow;
					mod.flags = (mod.flags &= 161) | 2;
				} else if(mod.flags & 16) {
					mod.position = mod.patternjump;
					mod.row = mod.breakrow;
					mod.patternjump = 0;
					mod.breakrow = 0;
					mod.flags = (mod.flags &= 225) | 2;
				}
				mod.tick = 0;
			} else {
				mod.row++;
				mod.tick = 0;
				mod.flags |= 2;
			}
		}
		if(mod.row >= 64) {
			mod.position++;
			mod.row = 0;
			mod.flags |= 4;
		}
		if(mod.position >= mod.songlen) {
			if(mod.repeat) {
				mod.position = 0;
			} else {
				this.endofsong = true;
			}
			return;
		}
	}
	,mix: function(mod,bufs,buflen) {
		var f;
		var p;
		var pp;
		var n;
		var nn;
		var array = null;
		var view = null;
		var buffer = null;
		var len = null;
		var this1 = new Float32Array(2);
		var outp = this1;
		var _g = 0;
		var _g1 = buflen;
		while(_g < _g1) {
			var s = _g++;
			outp[0] = 0.0;
			outp[1] = 0.0;
			if(!mod.paused && !mod.endofsong && mod.playing) {
				mod.advance(mod);
				var och = 0;
				var _g2 = 0;
				var _g3 = mod.channels;
				while(_g2 < _g3) {
					var ch = _g2++;
					p = mod.patterntable[mod.position];
					pp = mod.row * 4 * mod.channels + ch * 4;
					if(mod.flags & 2) {
						mod.channel[ch].command = mod.pattern[p][pp + 2] & 15;
						mod.channel[ch].data = mod.pattern[p][pp + 3];
						if(!(mod.channel[ch].command == 14 && (mod.channel[ch].data & 240) == 208)) {
							n = (mod.pattern[p][pp] & 15) << 8 | mod.pattern[p][pp + 1];
							if(n) {
								if(mod.channel[ch].command != 3 && mod.channel[ch].command != 5) {
									mod.channel[ch].period = n;
									mod.channel[ch].samplepos = 0;
									if(mod.channel[ch].vibratowave > 3) {
										mod.channel[ch].vibratopos = 0;
									}
									mod.channel[ch].flags |= 3;
									mod.channel[ch].noteon = 1;
								}
								mod.channel[ch].slideto = n;
							}
							nn = mod.pattern[p][pp] & 240 | mod.pattern[p][pp + 2] >> 4;
							if(nn) {
								mod.channel[ch].sample = nn - 1;
								mod.channel[ch].volume = mod.sample[nn - 1].volume;
								if(n && mod.channel[ch].samplepos > mod.sample[nn - 1].length) {
									mod.channel[ch].samplepos = 0;
								}
							}
						}
					}
					mod.channel[ch].voiceperiod = mod.channel[ch].period;
					if(!mod.sample[mod.channel[ch].sample].length) {
						mod.channel[ch].noteon = 0;
					}
					if(mod.flags & 1) {
						if(!mod.tick) {
							mod.effects_t0[mod.channel[ch].command](mod,ch);
						} else {
							mod.effects_t1[mod.channel[ch].command](mod,ch);
						}
					}
					if(mod.channel[ch].flags & 2) {
						var _g4 = 0;
						var _g5 = mod.baseperiodtable.length;
						while(_g4 < _g5) {
							var np = _g4++;
							if(mod.baseperiodtable[np] >= mod.channel[ch].period) {
								mod.channel[ch].note = np;
							}
						}
						mod.channel[ch].semitone = 7;
						if(mod.channel[ch].period >= 120) {
							mod.channel[ch].semitone = mod.baseperiodtable[mod.channel[ch].note] - mod.baseperiodtable[mod.channel[ch].note + 1];
						}
					}
					if((mod.channel[ch].flags & 1 || mod.flags & 2) && mod.channel[ch].voiceperiod) {
						mod.channel[ch].samplespeed = 7093789.2 / (mod.channel[ch].voiceperiod * 2) * mod.finetunetable[mod.sample[mod.channel[ch].sample].finetune + 8] / mod.samplerate;
					}
					if(mod.flags & 1) {
						mod.channel[ch].vibratopos += mod.channel[ch].vibratospeed;
						mod.channel[ch].vibratopos &= 63;
					}
					och ^= ch & 1;
					f = 0.0;
					if(mod.channel[ch].noteon) {
						if(mod.sample[mod.channel[ch].sample] && mod.sample[mod.channel[ch].sample].length > mod.channel[ch].samplepos) {
							f = mod.sample[mod.channel[ch].sample].data[Math.floor(mod.channel[ch].samplepos)] * mod.channel[ch].volume / 64.0;
						}
						outp[och] += f;
						mod.channel[ch].samplepos += mod.channel[ch].samplespeed;
					}
					mod.chvu[ch] = Math.max(mod.chvu[ch],Math.abs(f));
					if(mod.channel[ch].noteon) {
						if(mod.sample[mod.channel[ch].sample].loopstart || mod.sample[mod.channel[ch].sample].looplength) {
							if(mod.channel[ch].samplepos >= mod.sample[mod.channel[ch].sample].loopstart + mod.sample[mod.channel[ch].sample].looplength) {
								mod.channel[ch].samplepos -= mod.sample[mod.channel[ch].sample].looplength;
							}
						} else if(mod.channel[ch].samplepos >= mod.sample[mod.channel[ch].sample].length) {
							mod.channel[ch].noteon = 0;
						}
					}
					mod.channel[ch].flags = 0;
				}
				mod.offset++;
				mod.flags &= 112;
			}
			bufs[0][s] = outp[0];
			bufs[1][s] = outp[1];
		}
	}
	,effect_t0_0: function(mod,ch) {
		mod.channel[ch].arpeggio = mod.channel[ch].data;
	}
	,effect_t0_1: function(mod,ch) {
		if(mod.channel[ch].data) {
			mod.channel[ch].slidespeed = mod.channel[ch].data;
		}
	}
	,effect_t0_2: function(mod,ch) {
		if(mod.channel[ch].data) {
			mod.channel[ch].slidespeed = mod.channel[ch].data;
		}
	}
	,effect_t0_3: function(mod,ch) {
		if(mod.channel[ch].data) {
			mod.channel[ch].slidetospeed = mod.channel[ch].data;
		}
	}
	,effect_t0_4: function(mod,ch) {
		if(mod.channel[ch].data & 15 && mod.channel[ch].data & 240) {
			mod.channel[ch].vibratodepth = mod.channel[ch].data & 15;
			mod.channel[ch].vibratospeed = (mod.channel[ch].data & 240) >> 4;
		}
		mod.effects_t1[4](mod,ch);
	}
	,effect_t0_5: function(mod,ch) {
	}
	,effect_t0_6: function(mod,ch) {
	}
	,effect_t0_7: function(mod,ch) {
	}
	,effect_t0_8: function(mod,ch) {
		mod.syncqueue.unshift(mod.channel[ch].data & 15);
	}
	,effect_t0_9: function(mod,ch) {
		mod.channel[ch].samplepos = mod.channel[ch].data * 256;
	}
	,effect_t0_a: function(mod,ch) {
	}
	,effect_t0_b: function(mod,ch) {
		mod.breakrow = 0;
		mod.patternjump = mod.channel[ch].data;
		mod.flags |= 16;
	}
	,effect_t0_c: function(mod,ch) {
		mod.channel[ch].volume = mod.channel[ch].data;
	}
	,effect_t0_d: function(mod,ch) {
		mod.breakrow = ((mod.channel[ch].data & 240) >> 4) * 10 + (mod.channel[ch].data & 15);
		if(!(mod.flags & 16)) {
			mod.patternjump = mod.position + 1;
		}
		mod.flags |= 16;
	}
	,effect_t0_e: function(mod,ch) {
		mod.effects_t0_e[(mod.channel[ch].data & 240) >> 4](mod,ch);
	}
	,effect_t0_f: function(mod,ch) {
		if(mod.channel[ch].data > 32) {
			mod.bpm = mod.channel[ch].data;
		} else if(mod.channel[ch].data) {
			mod.speed = mod.channel[ch].data;
		}
	}
	,effect_t0_e0: function(mod,ch) {
		if(mod.channels > 4) {
			return;
		}
		if(mod.channel[ch].data & 1) {
			mod.filter = false;
		} else {
			mod.filter = true;
		}
	}
	,effect_t0_e1: function(mod,ch) {
		mod.channel[ch].period -= mod.channel[ch].data & 15;
		if(mod.channel[ch].period < 113) {
			mod.channel[ch].period = 113;
		}
	}
	,effect_t0_e2: function(mod,ch) {
		mod.channel[ch].period += mod.channel[ch].data & 15;
		if(mod.channel[ch].period > 856) {
			mod.channel[ch].period = 856;
		}
		mod.channel[ch].flags |= 1;
	}
	,effect_t0_e3: function(mod,ch) {
	}
	,effect_t0_e4: function(mod,ch) {
		mod.channel[ch].vibratowave = mod.channel[ch].data & 7;
	}
	,effect_t0_e5: function(mod,ch) {
	}
	,effect_t0_e6: function(mod,ch) {
		if(mod.channel[ch].data & 15) {
			if(mod.loopcount != null) {
				mod.loopcount--;
			} else {
				mod.loopcount = mod.channel[ch].data & 15;
			}
			if(mod.loopcount != null) {
				mod.flags |= 64;
			}
		} else {
			mod.looprow = mod.row;
		}
	}
	,effect_t0_e7: function(mod,ch) {
	}
	,effect_t0_e8: function(mod,ch) {
		mod.syncqueue.unshift(mod.channel[ch].data & 15);
	}
	,effect_t0_e9: function(mod,ch) {
	}
	,effect_t0_ea: function(mod,ch) {
		mod.channel[ch].volume += mod.channel[ch].data & 15;
		if(mod.channel[ch].volume > 64) {
			mod.channel[ch].volume = 64;
		}
	}
	,effect_t0_eb: function(mod,ch) {
		mod.channel[ch].volume -= mod.channel[ch].data & 15;
		if(mod.channel[ch].volume < 0) {
			mod.channel[ch].volume = 0;
		}
	}
	,effect_t0_ec: function(mod,ch) {
	}
	,effect_t0_ed: function(mod,ch) {
		if(mod.tick == (mod.channel[ch].data & 15)) {
			var p = mod.patterntable[mod.position];
			var pp = mod.row * 4 * mod.channels + ch * 4;
			var n = (mod.pattern[p][pp] & 15) << 8 | mod.pattern[p][pp + 1];
			if(n) {
				mod.channel[ch].period = n;
				mod.channel[ch].voiceperiod = mod.channel[ch].period;
				mod.channel[ch].samplepos = 0;
				if(mod.channel[ch].vibratowave > 3) {
					mod.channel[ch].vibratopos = 0;
				}
				mod.channel[ch].flags |= 3;
				mod.channel[ch].noteon = 1;
			}
			n = mod.pattern[p][pp] & 240 | mod.pattern[p][pp + 2] >> 4;
			if(n) {
				mod.channel[ch].sample = n - 1;
				mod.channel[ch].volume = mod.sample[n - 1].volume;
			}
		}
	}
	,effect_t0_ee: function(mod,ch) {
		mod.patterndelay = mod.channel[ch].data & 15;
		mod.patternwait = 0;
	}
	,effect_t0_ef: function(mod,ch) {
	}
	,effect_t1_0: function(mod,ch) {
		if(mod.channel[ch].data) {
			var apn = mod.channel[ch].note;
			if(mod.tick % 3 == 1) {
				apn += mod.channel[ch].arpeggio >> 4;
			}
			if(mod.tick % 3 == 2) {
				apn += mod.channel[ch].arpeggio & 15;
			}
			if(apn >= 0 && apn <= mod.baseperiodtable.length) {
				mod.channel[ch].voiceperiod = mod.baseperiodtable[apn];
			}
			mod.channel[ch].flags |= 1;
		}
	}
	,effect_t1_1: function(mod,ch) {
		mod.channel[ch].period -= mod.channel[ch].slidespeed;
		if(mod.channel[ch].period < 113) {
			mod.channel[ch].period = 113;
		}
		mod.channel[ch].flags |= 3;
	}
	,effect_t1_2: function(mod,ch) {
		mod.channel[ch].period += mod.channel[ch].slidespeed;
		if(mod.channel[ch].period > 856) {
			mod.channel[ch].period = 856;
		}
		mod.channel[ch].flags |= 3;
	}
	,effect_t1_3: function(mod,ch) {
		if(mod.channel[ch].period < mod.channel[ch].slideto) {
			mod.channel[ch].period += mod.channel[ch].slidetospeed;
			if(mod.channel[ch].period > mod.channel[ch].slideto) {
				mod.channel[ch].period = mod.channel[ch].slideto;
			}
		}
		if(mod.channel[ch].period > mod.channel[ch].slideto) {
			mod.channel[ch].period -= mod.channel[ch].slidetospeed;
			if(mod.channel[ch].period < mod.channel[ch].slideto) {
				mod.channel[ch].period = mod.channel[ch].slideto;
			}
		}
		mod.channel[ch].flags |= 3;
	}
	,effect_t1_4: function(mod,ch) {
		mod.channel[ch].voiceperiod += mod.channel[ch].vibratodepth * (mod.vibratotable[mod.channel[ch].vibratowave & 3][mod.channel[ch].vibratopos] / 63.0);
		mod.channel[ch].flags |= 1;
	}
	,effect_t1_5: function(mod,ch) {
		mod.effect_t1_3(mod,ch);
		mod.effect_t1_a(mod,ch);
	}
	,effect_t1_6: function(mod,ch) {
		mod.effect_t1_4(mod,ch);
		mod.effect_t1_a(mod,ch);
	}
	,effect_t1_7: function(mod,ch) {
	}
	,effect_t1_8: function(mod,ch) {
	}
	,effect_t1_9: function(mod,ch) {
	}
	,effect_t1_a: function(mod,ch) {
		if(!(mod.channel[ch].data & 15)) {
			mod.channel[ch].volume += mod.channel[ch].data >> 4;
			if(mod.channel[ch].volume > 64) {
				mod.channel[ch].volume = 64;
			}
		}
		if(!(mod.channel[ch].data & 240)) {
			mod.channel[ch].volume -= mod.channel[ch].data & 15;
			if(mod.channel[ch].volume < 0) {
				mod.channel[ch].volume = 0;
			}
		}
	}
	,effect_t1_b: function(mod,ch) {
	}
	,effect_t1_c: function(mod,ch) {
	}
	,effect_t1_d: function(mod,ch) {
	}
	,effect_t1_e: function(mod,ch) {
		mod.effects_t1_e[(mod.channel[ch].data & 240) >> 4](mod,ch);
	}
	,effect_t1_f: function(mod,ch) {
	}
	,effect_t1_e0: function(mod,ch) {
	}
	,effect_t1_e1: function(mod,ch) {
	}
	,effect_t1_e2: function(mod,ch) {
	}
	,effect_t1_e3: function(mod,ch) {
	}
	,effect_t1_e4: function(mod,ch) {
	}
	,effect_t1_e5: function(mod,ch) {
	}
	,effect_t1_e6: function(mod,ch) {
	}
	,effect_t1_e7: function(mod,ch) {
	}
	,effect_t1_e8: function(mod,ch) {
	}
	,effect_t1_e9: function(mod,ch) {
		if(mod.tick % (mod.channel[ch].data & 15) == 0) {
			mod.channel[ch].samplepos = 0;
		}
	}
	,effect_t1_ea: function(mod,ch) {
	}
	,effect_t1_eb: function(mod,ch) {
	}
	,effect_t1_ec: function(mod,ch) {
		if(mod.tick == (mod.channel[ch].data & 15)) {
			mod.channel[ch].volume = 0;
		}
	}
	,effect_t1_ed: function(mod,ch) {
		mod.effect_t0_ed(mod,ch);
	}
	,effect_t1_ee: function(mod,ch) {
	}
	,effect_t1_ef: function(mod,ch) {
	}
	,__class__: hxmod_Protracker
};
var js_Boot = function() { };
$hxClasses["js.Boot"] = js_Boot;
js_Boot.__name__ = "js.Boot";
js_Boot.getClass = function(o) {
	if(o == null) {
		return null;
	} else if(((o) instanceof Array)) {
		return Array;
	} else {
		var cl = o.__class__;
		if(cl != null) {
			return cl;
		}
		var name = js_Boot.__nativeClassName(o);
		if(name != null) {
			return js_Boot.__resolveNativeClass(name);
		}
		return null;
	}
};
js_Boot.__string_rec = function(o,s) {
	if(o == null) {
		return "null";
	}
	if(s.length >= 5) {
		return "<...>";
	}
	var t = typeof(o);
	if(t == "function" && (o.__name__ || o.__ename__)) {
		t = "object";
	}
	switch(t) {
	case "function":
		return "<function>";
	case "object":
		if(o.__enum__) {
			var e = $hxEnums[o.__enum__];
			var n = e.__constructs__[o._hx_index];
			var con = e[n];
			if(con.__params__) {
				s = s + "\t";
				return n + "(" + ((function($this) {
					var $r;
					var _g = [];
					{
						var _g1 = 0;
						var _g2 = con.__params__;
						while(true) {
							if(!(_g1 < _g2.length)) {
								break;
							}
							var p = _g2[_g1];
							_g1 = _g1 + 1;
							_g.push(js_Boot.__string_rec(o[p],s));
						}
					}
					$r = _g;
					return $r;
				}(this))).join(",") + ")";
			} else {
				return n;
			}
		}
		if(((o) instanceof Array)) {
			var str = "[";
			s += "\t";
			var _g = 0;
			var _g1 = o.length;
			while(_g < _g1) {
				var i = _g++;
				str += (i > 0 ? "," : "") + js_Boot.__string_rec(o[i],s);
			}
			str += "]";
			return str;
		}
		var tostr;
		try {
			tostr = o.toString;
		} catch( _g ) {
			return "???";
		}
		if(tostr != null && tostr != Object.toString && typeof(tostr) == "function") {
			var s2 = o.toString();
			if(s2 != "[object Object]") {
				return s2;
			}
		}
		var str = "{\n";
		s += "\t";
		var hasp = o.hasOwnProperty != null;
		var k = null;
		for( k in o ) {
		if(hasp && !o.hasOwnProperty(k)) {
			continue;
		}
		if(k == "prototype" || k == "__class__" || k == "__super__" || k == "__interfaces__" || k == "__properties__") {
			continue;
		}
		if(str.length != 2) {
			str += ", \n";
		}
		str += s + k + " : " + js_Boot.__string_rec(o[k],s);
		}
		s = s.substring(1);
		str += "\n" + s + "}";
		return str;
	case "string":
		return o;
	default:
		return String(o);
	}
};
js_Boot.__interfLoop = function(cc,cl) {
	while(true) {
		if(cc == null) {
			return false;
		}
		if(cc == cl) {
			return true;
		}
		var intf = cc.__interfaces__;
		if(intf != null) {
			var _g = 0;
			var _g1 = intf.length;
			while(_g < _g1) {
				var i = intf[_g++];
				if(i == cl || js_Boot.__interfLoop(i,cl)) {
					return true;
				}
			}
		}
		cc = cc.__super__;
	}
};
js_Boot.__instanceof = function(o,cl) {
	if(cl == null) {
		return false;
	}
	switch(cl) {
	case Array:
		return ((o) instanceof Array);
	case Bool:
		return typeof(o) == "boolean";
	case Dynamic:
		return o != null;
	case Float:
		return typeof(o) == "number";
	case Int:
		if(typeof(o) == "number") {
			return ((o | 0) === o);
		} else {
			return false;
		}
		break;
	case String:
		return typeof(o) == "string";
	default:
		if(o != null) {
			if(typeof(cl) == "function") {
				if(js_Boot.__downcastCheck(o,cl)) {
					return true;
				}
			} else if(typeof(cl) == "object" && js_Boot.__isNativeObj(cl)) {
				if(((o) instanceof cl)) {
					return true;
				}
			}
		} else {
			return false;
		}
		if(cl == Class ? o.__name__ != null : false) {
			return true;
		}
		if(cl == Enum ? o.__ename__ != null : false) {
			return true;
		}
		return o.__enum__ != null ? $hxEnums[o.__enum__] == cl : false;
	}
};
js_Boot.__downcastCheck = function(o,cl) {
	if(!((o) instanceof cl)) {
		if(cl.__isInterface__) {
			return js_Boot.__interfLoop(js_Boot.getClass(o),cl);
		} else {
			return false;
		}
	} else {
		return true;
	}
};
js_Boot.__cast = function(o,t) {
	if(o == null || js_Boot.__instanceof(o,t)) {
		return o;
	} else {
		throw haxe_Exception.thrown("Cannot cast " + Std.string(o) + " to " + Std.string(t));
	}
};
js_Boot.__nativeClassName = function(o) {
	var name = js_Boot.__toStr.call(o).slice(8,-1);
	if(name == "Object" || name == "Function" || name == "Math" || name == "JSON") {
		return null;
	}
	return name;
};
js_Boot.__isNativeObj = function(o) {
	return js_Boot.__nativeClassName(o) != null;
};
js_Boot.__resolveNativeClass = function(name) {
	return $global[name];
};
var js_lib__$ArrayBuffer_ArrayBufferCompat = function() { };
$hxClasses["js.lib._ArrayBuffer.ArrayBufferCompat"] = js_lib__$ArrayBuffer_ArrayBufferCompat;
js_lib__$ArrayBuffer_ArrayBufferCompat.__name__ = "js.lib._ArrayBuffer.ArrayBufferCompat";
js_lib__$ArrayBuffer_ArrayBufferCompat.sliceImpl = function(begin,end) {
	var u = new Uint8Array(this,begin,end == null ? null : end - begin);
	var resultArray = new Uint8Array(u.byteLength);
	resultArray.set(u);
	return resultArray.buffer;
};
var kha__$Assets_ImageList = function() {
	this.topxDescription = { name : "topx", original_height : 1080, file_sizes : [2346960], original_width : 1920, files : ["topx.png"], type : "image"};
	this.topx = null;
	this.snowpile2Description = { name : "snowpile2", original_height : 72, file_sizes : [709], original_width : 544, files : ["snowpile2.png"], type : "image"};
	this.snowpile2 = null;
	this.snowpile1Description = { name : "snowpile1", original_height : 48, file_sizes : [521], original_width : 384, files : ["snowpile1.png"], type : "image"};
	this.snowpile1 = null;
	this.snowfontDescription = { name : "snowfont", original_height : 192, file_sizes : [58431], original_width : 318, files : ["snowfont.png"], type : "image"};
	this.snowfont = null;
	this.snow1Description = { name : "snow1", original_height : 64, file_sizes : [2445], original_width : 64, files : ["snow1.png"], type : "image"};
	this.snow1 = null;
	this.snowDescription = { name : "snow", original_height : 36, file_sizes : [307], original_width : 32, files : ["snow.png"], type : "image"};
	this.snow = null;
	this.rudolf_2Description = { name : "rudolf_2", original_height : 410, file_sizes : [2647], original_width : 270, files : ["rudolf_2.png"], type : "image"};
	this.rudolf_2 = null;
	this.rudolf_1Description = { name : "rudolf_1", original_height : 410, file_sizes : [2660], original_width : 270, files : ["rudolf_1.png"], type : "image"};
	this.rudolf_1 = null;
	this.rectxDescription = { name : "rectx", original_height : 256, file_sizes : [867], original_width : 256, files : ["rectx.png"], type : "image"};
	this.rectx = null;
	this.playbuttonDescription = { name : "playbutton", original_height : 97, file_sizes : [3423], original_width : 97, files : ["playbutton.png"], type : "image"};
	this.playbutton = null;
	this.nisse_2Description = { name : "nisse_2", original_height : 400, file_sizes : [1887], original_width : 180, files : ["nisse_2.png"], type : "image"};
	this.nisse_2 = null;
	this.nisse_1Description = { name : "nisse_1", original_height : 400, file_sizes : [1902], original_width : 180, files : ["nisse_1.png"], type : "image"};
	this.nisse_1 = null;
	this.logo_del2Description = { name : "logo_del2", original_height : 50, file_sizes : [14143], original_width : 758, files : ["logo_del2.png"], type : "image"};
	this.logo_del2 = null;
	this.logo_del1Description = { name : "logo_del1", original_height : 514, file_sizes : [236353], original_width : 1007, files : ["logo_del1.png"], type : "image"};
	this.logo_del1 = null;
	this.introtekstDescription = { name : "introtekst", original_height : 24, file_sizes : [933], original_width : 862, files : ["introtekst.png"], type : "image"};
	this.introtekst = null;
	this.intro_tingDescription = { name : "intro_ting", original_height : 285, file_sizes : [3223], original_width : 486, files : ["intro_ting.png"], type : "image"};
	this.intro_ting = null;
	this.intro1Description = { name : "intro1", original_height : 1080, file_sizes : [606163], original_width : 1920, files : ["intro1.jpg"], type : "image"};
	this.intro1 = null;
	this.ice_2Description = { name : "ice_2", original_height : 80, file_sizes : [666], original_width : 150, files : ["ice_2.png"], type : "image"};
	this.ice_2 = null;
	this.ice_1Description = { name : "ice_1", original_height : 130, file_sizes : [1624], original_width : 530, files : ["ice_1.png"], type : "image"};
	this.ice_1 = null;
	this.bmfont3Description = { name : "bmfont3", original_height : 192, file_sizes : [23363], original_width : 318, files : ["bmfont3.png"], type : "image"};
	this.bmfont3 = null;
	this.bmfontDescription = { name : "bmfont", original_height : 192, file_sizes : [12473], original_width : 318, files : ["bmfont.png"], type : "image"};
	this.bmfont = null;
	this.background1Description = { name : "background1", original_height : 1080, file_sizes : [303667], original_width : 1920, files : ["background1.jpg"], type : "image"};
	this.background1 = null;
};
$hxClasses["kha._Assets.ImageList"] = kha__$Assets_ImageList;
kha__$Assets_ImageList.__name__ = "kha._Assets.ImageList";
kha__$Assets_ImageList.prototype = {
	background1: null
	,background1Description: null
	,bmfont: null
	,bmfontDescription: null
	,bmfont3: null
	,bmfont3Description: null
	,ice_1: null
	,ice_1Description: null
	,ice_2: null
	,ice_2Description: null
	,intro1: null
	,intro1Description: null
	,intro_ting: null
	,intro_tingDescription: null
	,introtekst: null
	,introtekstDescription: null
	,logo_del1: null
	,logo_del1Description: null
	,logo_del2: null
	,logo_del2Description: null
	,nisse_1: null
	,nisse_1Description: null
	,nisse_2: null
	,nisse_2Description: null
	,playbutton: null
	,playbuttonDescription: null
	,rectx: null
	,rectxDescription: null
	,rudolf_1: null
	,rudolf_1Description: null
	,rudolf_2: null
	,rudolf_2Description: null
	,snow: null
	,snowDescription: null
	,snow1: null
	,snow1Description: null
	,snowfont: null
	,snowfontDescription: null
	,snowpile1: null
	,snowpile1Description: null
	,snowpile2: null
	,snowpile2Description: null
	,topx: null
	,topxDescription: null
	,__class__: kha__$Assets_ImageList
};
var kha__$Assets_SoundList = function() {
};
$hxClasses["kha._Assets.SoundList"] = kha__$Assets_SoundList;
kha__$Assets_SoundList.__name__ = "kha._Assets.SoundList";
kha__$Assets_SoundList.prototype = {
	__class__: kha__$Assets_SoundList
};
var kha__$Assets_BlobList = function() {
};
$hxClasses["kha._Assets.BlobList"] = kha__$Assets_BlobList;
kha__$Assets_BlobList.__name__ = "kha._Assets.BlobList";
kha__$Assets_BlobList.prototype = {
	__class__: kha__$Assets_BlobList
};
var kha__$Assets_FontList = function() {
	this.names = [];
};
$hxClasses["kha._Assets.FontList"] = kha__$Assets_FontList;
kha__$Assets_FontList.__name__ = "kha._Assets.FontList";
kha__$Assets_FontList.prototype = {
	get: function(name) {
		return Reflect.field(this,name);
	}
	,names: null
	,__class__: kha__$Assets_FontList
};
var kha__$Assets_VideoList = function() { };
$hxClasses["kha._Assets.VideoList"] = kha__$Assets_VideoList;
kha__$Assets_VideoList.__name__ = "kha._Assets.VideoList";
var kha_Assets = function() { };
$hxClasses["kha.Assets"] = kha_Assets;
kha_Assets.__name__ = "kha.Assets";
kha_Assets.getLists = function() {
	return [kha__$Assets_ImageList,kha__$Assets_SoundList,kha__$Assets_BlobList,kha__$Assets_FontList,kha__$Assets_VideoList];
};
kha_Assets.loadImage = function(name,done,failed,pos) {
	kha_LoaderImpl.loadImageFromDescription(Reflect.field(kha_Assets.images,name + "Description"),function(image) {
		kha_Assets.images[name] = image;
		done(image);
	},kha_Assets.reporter(failed,pos));
};
kha_Assets.loadImageFromPath = function(path,readable,done,failed,pos) {
	var tmp = kha_Assets.reporter(failed,pos);
	kha_LoaderImpl.loadImageFromDescription({ files : [path], readable : readable},done,tmp);
};
kha_Assets.loadBlob = function(name,done,failed,pos) {
	kha_LoaderImpl.loadBlobFromDescription(Reflect.field(kha_Assets.blobs,name + "Description"),function(blob) {
		kha_Assets.blobs[name] = blob;
		done(blob);
	},kha_Assets.reporter(failed,pos));
};
kha_Assets.loadBlobFromPath = function(path,done,failed,pos) {
	var tmp = kha_Assets.reporter(failed,pos);
	kha_LoaderImpl.loadBlobFromDescription({ files : [path]},done,tmp);
};
kha_Assets.loadSound = function(name,done,failed,pos) {
	kha_LoaderImpl.loadSoundFromDescription(Reflect.field(kha_Assets.sounds,name + "Description"),function(sound) {
		kha_Assets.sounds[name] = sound;
		done(sound);
	},kha_Assets.reporter(failed,pos));
};
kha_Assets.loadFont = function(name,done,failed,pos) {
	kha_LoaderImpl.loadFontFromDescription(Reflect.field(kha_Assets.fonts,name + "Description"),function(font) {
		kha_Assets.fonts[name] = font;
		done(font);
	},kha_Assets.reporter(failed,pos));
};
kha_Assets.loadVideoFromPath = function(path,done,failed,pos) {
	var tmp = kha_Assets.reporter(failed,pos);
	kha_LoaderImpl.loadVideoFromDescription({ files : [path]},done,tmp);
};
kha_Assets.reporter = function(custom,pos) {
	if(custom != null) {
		return custom;
	} else {
		var _g = haxe_Log.trace;
		var infos = pos;
		return function(v) {
			_g(v,infos);
		};
	}
};
var kha_Canvas = function() { };
$hxClasses["kha.Canvas"] = kha_Canvas;
kha_Canvas.__name__ = "kha.Canvas";
kha_Canvas.__isInterface__ = true;
kha_Canvas.prototype = {
	get_width: null
	,get_height: null
	,get_g2: null
	,get_g4: null
	,width: null
	,height: null
	,g2: null
	,g4: null
	,__class__: kha_Canvas
	,__properties__: {get_g4:"get_g4",get_g2:"get_g2",get_height:"get_height",get_width:"get_width"}
};
var kha_Resource = function() { };
$hxClasses["kha.Resource"] = kha_Resource;
kha_Resource.__name__ = "kha.Resource";
kha_Resource.__isInterface__ = true;
var kha_Image = function() { };
$hxClasses["kha.Image"] = kha_Image;
kha_Image.__name__ = "kha.Image";
kha_Image.__interfaces__ = [kha_Resource,kha_Canvas];
kha_Image.__properties__ = {get_nonPow2Supported:"get_nonPow2Supported"};
kha_Image.create = function(width,height,format,usage) {
	if(format == null) {
		format = 0;
	}
	if(usage == null) {
		usage = 0;
	}
	if(kha_SystemImpl.gl == null) {
		return new kha_CanvasImage(width,height,format,false);
	} else {
		return new kha_WebGLImage(width,height,format,false,0,1);
	}
};
kha_Image.createRenderTarget = function(width,height,format,depthStencil,antiAliasingSamples,contextId) {
	if(contextId == null) {
		contextId = 0;
	}
	if(antiAliasingSamples == null) {
		antiAliasingSamples = 1;
	}
	if(depthStencil == null) {
		depthStencil = 0;
	}
	if(format == null) {
		format = 0;
	}
	if(kha_SystemImpl.gl == null) {
		return new kha_CanvasImage(width,height,format,true);
	} else {
		return new kha_WebGLImage(width,height,format,true,depthStencil,antiAliasingSamples);
	}
};
kha_Image.fromImage = function(image,readable) {
	if(kha_SystemImpl.gl == null) {
		var img = new kha_CanvasImage(image.width,image.height,0,false);
		img.image = image;
		img.createTexture();
		return img;
	} else {
		var img = new kha_WebGLImage(image.width,image.height,0,false,0,1);
		img.image = image;
		img.createTexture();
		return img;
	}
};
kha_Image.fromBytes = function(bytes,width,height,format,usage) {
	if(format == null) {
		format = 0;
	}
	if(usage == null) {
		usage = 0;
	}
	if(kha_SystemImpl.gl != null) {
		var img = new kha_WebGLImage(width,height,format,false,0,1);
		img.image = img.bytesToArray(bytes);
		img.createTexture();
		return img;
	}
	var img = new kha_CanvasImage(width,height,format,false);
	img.get_g2().canvas.putImageData(new ImageData(new Uint8ClampedArray(bytes.b.bufferValue),width,height),0,0);
	return img;
};
kha_Image.fromEncodedBytes = function(bytes,fileExtention,doneCallback,errorCallback,readable) {
	if(readable == null) {
		readable = false;
	}
	var dataUrl = "data:image;base64," + haxe_crypto_Base64.encode(bytes);
	var imageElement = js_Boot.__cast(window.document.createElement("img") , HTMLImageElement);
	imageElement.onload = function() {
		doneCallback(kha_Image.fromImage(imageElement,readable));
	};
	imageElement.onerror = function() {
		errorCallback("Image was not created");
	};
	imageElement.src = dataUrl;
};
kha_Image.fromVideo = function(video) {
	if(kha_SystemImpl.gl == null) {
		var img = new kha_CanvasImage(video.element.videoWidth,video.element.videoHeight,0,false);
		img.video = video.element;
		img.createTexture();
		return img;
	} else {
		var img = new kha_WebGLImage(video.element.videoWidth,video.element.videoHeight,0,false,0,1);
		img.video = video.element;
		img.createTexture();
		return img;
	}
};
kha_Image.get_nonPow2Supported = function() {
	return kha_SystemImpl.gl != null;
};
kha_Image.renderTargetsInvertedY = function() {
	return true;
};
kha_Image.prototype = {
	unload: function() {
	}
	,lock: function(level) {
		if(level == null) {
			level = 0;
		}
		return null;
	}
	,unlock: function() {
	}
	,get_width: function() {
		return 0;
	}
	,get_height: function() {
		return 0;
	}
	,get_realWidth: function() {
		return 0;
	}
	,get_realHeight: function() {
		return 0;
	}
	,get_g2: function() {
		return null;
	}
	,get_g4: function() {
		return null;
	}
	,__class__: kha_Image
	,__properties__: {get_g4:"get_g4",get_g2:"get_g2",get_realHeight:"get_realHeight",get_realWidth:"get_realWidth",get_height:"get_height",get_width:"get_width"}
};
var kha_CanvasImage = function(width,height,format,renderTarget) {
	this.g2canvas = null;
	this.myWidth = width;
	this.myHeight = height;
	this.myFormat = format;
	this.renderTarget = renderTarget;
	this.image = null;
	this.video = null;
	if(renderTarget) {
		this.createTexture();
	}
};
$hxClasses["kha.CanvasImage"] = kha_CanvasImage;
kha_CanvasImage.__name__ = "kha.CanvasImage";
kha_CanvasImage.init = function() {
	var canvas = window.document.createElement("canvas");
	if(canvas != null) {
		kha_CanvasImage.context = canvas.getContext("2d");
		canvas.width = 2048;
		canvas.height = 2048;
		kha_CanvasImage.context.globalCompositeOperation = "copy";
	}
};
kha_CanvasImage.__super__ = kha_Image;
kha_CanvasImage.prototype = $extend(kha_Image.prototype,{
	image: null
	,video: null
	,data: null
	,myWidth: null
	,myHeight: null
	,myFormat: null
	,renderTarget: null
	,frameBuffer: null
	,g2canvas: null
	,get_g2: function() {
		if(this.g2canvas == null) {
			var canvas = window.document.createElement("canvas");
			this.image = canvas;
			var context = canvas.getContext("2d");
			canvas.width = this.get_width();
			canvas.height = this.get_height();
			this.g2canvas = new kha_js_CanvasGraphics(context);
		}
		return this.g2canvas;
	}
	,get_g4: function() {
		return null;
	}
	,get_width: function() {
		return this.myWidth;
	}
	,get_height: function() {
		return this.myHeight;
	}
	,get_realWidth: function() {
		return this.myWidth;
	}
	,get_realHeight: function() {
		return this.myHeight;
	}
	,texture: null
	,createTexture: function() {
		if(kha_SystemImpl.gl == null) {
			return;
		}
		this.texture = kha_SystemImpl.gl.createTexture();
		kha_SystemImpl.gl.bindTexture(3553,this.texture);
		kha_SystemImpl.gl.texParameteri(3553,10240,9729);
		kha_SystemImpl.gl.texParameteri(3553,10241,9729);
		kha_SystemImpl.gl.texParameteri(3553,10242,33071);
		kha_SystemImpl.gl.texParameteri(3553,10243,33071);
		if(this.renderTarget) {
			this.frameBuffer = kha_SystemImpl.gl.createFramebuffer();
			kha_SystemImpl.gl.bindFramebuffer(36160,this.frameBuffer);
			kha_SystemImpl.gl.texImage2D(3553,0,6408,this.get_realWidth(),this.get_realHeight(),0,6408,5121,null);
			kha_SystemImpl.gl.framebufferTexture2D(36160,36064,3553,this.texture,0);
			kha_SystemImpl.gl.bindFramebuffer(36160,null);
		} else if(this.video != null) {
			kha_SystemImpl.gl.texImage2D(3553,0,6408,6408,5121,this.video);
		} else {
			kha_SystemImpl.gl.texImage2D(3553,0,6408,6408,5121,this.image);
		}
		kha_SystemImpl.gl.bindTexture(3553,null);
	}
	,bytes: null
	,lock: function(level) {
		if(level == null) {
			level = 0;
		}
		this.bytes = new haxe_io_Bytes(new ArrayBuffer(this.myFormat == 0 ? 4 * this.get_width() * this.get_height() : this.get_width() * this.get_height()));
		return this.bytes;
	}
	,unlock: function() {
		if(kha_SystemImpl.gl != null) {
			this.texture = kha_SystemImpl.gl.createTexture();
			kha_SystemImpl.gl.bindTexture(3553,this.texture);
			kha_SystemImpl.gl.texParameteri(3553,10240,9729);
			kha_SystemImpl.gl.texParameteri(3553,10241,9729);
			kha_SystemImpl.gl.texParameteri(3553,10242,33071);
			kha_SystemImpl.gl.texParameteri(3553,10243,33071);
			kha_SystemImpl.gl.texImage2D(3553,0,6409,this.get_width(),this.get_height(),0,6409,5121,new Uint8Array(this.bytes.b.bufferValue));
			if(kha_SystemImpl.gl.getError() == 1282) {
				var rgbaBytes = new haxe_io_Bytes(new ArrayBuffer(this.get_width() * this.get_height() * 4));
				var _g = 0;
				var _g1 = this.get_height();
				while(_g < _g1) {
					var y = _g++;
					var _g2 = 0;
					var _g3 = this.get_width();
					while(_g2 < _g3) {
						var x = _g2++;
						var _this = this.bytes;
						var pos = y * this.get_width() + x;
						var value = _this.b[pos];
						var pos1 = y * this.get_width() * 4 + x * 4;
						rgbaBytes.b[pos1] = value;
						var pos2 = y * this.get_width() * 4 + x * 4 + 1;
						rgbaBytes.b[pos2] = value;
						var pos3 = y * this.get_width() * 4 + x * 4 + 2;
						rgbaBytes.b[pos3] = value;
						var pos4 = y * this.get_width() * 4 + x * 4 + 3;
						rgbaBytes.b[pos4] = 255;
					}
				}
				kha_SystemImpl.gl.texImage2D(3553,0,6408,this.get_width(),this.get_height(),0,6408,5121,new Uint8Array(rgbaBytes.b.bufferValue));
			}
			kha_SystemImpl.gl.bindTexture(3553,null);
			this.bytes = null;
		}
	}
	,unload: function() {
		this.image = null;
		this.video = null;
		this.data = null;
	}
	,__class__: kha_CanvasImage
});
var kha_Color = {};
kha_Color.fromBytes = function(r,g,b,a) {
	if(a == null) {
		a = 255;
	}
	return kha_Color._new(a << 24 | r << 16 | g << 8 | b);
};
kha_Color.fromFloats = function(r,g,b,a) {
	if(a == null) {
		a = 1;
	}
	return kha_Color._new((a * 255 | 0) << 24 | (r * 255 | 0) << 16 | (g * 255 | 0) << 8 | (b * 255 | 0));
};
kha_Color.fromString = function(value) {
	if((value.length == 7 || value.length == 9) && value.charCodeAt(0) == 35) {
		var colorValue = Std.parseInt("0x" + HxOverrides.substr(value,1,null));
		if(value.length == 7) {
			colorValue += -16777216;
		}
		return kha_Color._new(colorValue | 0);
	} else {
		throw haxe_Exception.thrown("Invalid Color string: '" + value + "'");
	}
};
kha_Color._new = function(value) {
	return value;
};
var kha_Framebuffer = function($window,g1,g2,g4) {
	this.window = $window;
	this.graphics1 = g1;
	this.graphics2 = g2;
	this.graphics4 = g4;
};
$hxClasses["kha.Framebuffer"] = kha_Framebuffer;
kha_Framebuffer.__name__ = "kha.Framebuffer";
kha_Framebuffer.__interfaces__ = [kha_Canvas];
kha_Framebuffer.prototype = {
	window: null
	,graphics1: null
	,graphics2: null
	,graphics4: null
	,init: function(g1,g2,g4) {
		this.graphics1 = g1;
		this.graphics2 = g2;
		this.graphics4 = g4;
	}
	,get_g2: function() {
		return this.graphics2;
	}
	,get_g4: function() {
		return this.graphics4;
	}
	,width: null
	,get_width: function() {
		return kha_System.windowWidth(this.window);
	}
	,height: null
	,get_height: function() {
		return kha_System.windowHeight(this.window);
	}
	,__class__: kha_Framebuffer
	,__properties__: {get_height:"get_height",get_width:"get_width",get_g4:"get_g4",get_g2:"get_g2"}
};
var kha_FramebufferOptions = function(frequency,verticalSync,colorBufferBits,depthBufferBits,stencilBufferBits,samplesPerPixel) {
	if(samplesPerPixel == null) {
		samplesPerPixel = 1;
	}
	if(stencilBufferBits == null) {
		stencilBufferBits = 8;
	}
	if(depthBufferBits == null) {
		depthBufferBits = 16;
	}
	if(colorBufferBits == null) {
		colorBufferBits = 32;
	}
	if(verticalSync == null) {
		verticalSync = true;
	}
	if(frequency == null) {
		frequency = 60;
	}
	this.samplesPerPixel = 1;
	this.stencilBufferBits = 8;
	this.depthBufferBits = 16;
	this.colorBufferBits = 32;
	this.verticalSync = true;
	this.frequency = 60;
	this.frequency = frequency;
	this.verticalSync = verticalSync;
	this.colorBufferBits = colorBufferBits;
	this.depthBufferBits = depthBufferBits;
	this.stencilBufferBits = stencilBufferBits;
	this.samplesPerPixel = samplesPerPixel;
};
$hxClasses["kha.FramebufferOptions"] = kha_FramebufferOptions;
kha_FramebufferOptions.__name__ = "kha.FramebufferOptions";
kha_FramebufferOptions.prototype = {
	frequency: null
	,verticalSync: null
	,colorBufferBits: null
	,depthBufferBits: null
	,stencilBufferBits: null
	,samplesPerPixel: null
	,__class__: kha_FramebufferOptions
};
var kha_AlignedQuad = function() {
};
$hxClasses["kha.AlignedQuad"] = kha_AlignedQuad;
kha_AlignedQuad.__name__ = "kha.AlignedQuad";
kha_AlignedQuad.prototype = {
	x0: null
	,y0: null
	,s0: null
	,t0: null
	,x1: null
	,y1: null
	,s1: null
	,t1: null
	,xadvance: null
	,__class__: kha_AlignedQuad
};
var kha_KravurImage = function(size,ascent,descent,lineGap,width,height,chars,pixels) {
	this.mySize = size;
	this.width = width;
	this.height = height;
	this.chars = chars;
	this.baseline = ascent;
	var _g = 0;
	while(_g < chars.length) chars[_g++].yoff += this.baseline;
	this.texture = kha_Image.create(width,height,1);
	var bytes = this.texture.lock();
	var pos = 0;
	var _g = 0;
	while(_g < height) {
		++_g;
		var _g1 = 0;
		while(_g1 < width) {
			++_g1;
			var v = pixels.readU8(pos);
			bytes.b[pos] = v;
			++pos;
		}
	}
	this.texture.unlock();
};
$hxClasses["kha.KravurImage"] = kha_KravurImage;
kha_KravurImage.__name__ = "kha.KravurImage";
kha_KravurImage.prototype = {
	mySize: null
	,chars: null
	,texture: null
	,width: null
	,height: null
	,baseline: null
	,getTexture: function() {
		return this.texture;
	}
	,getBakedQuad: function(q,char_index,xpos,ypos) {
		if(char_index >= this.chars.length) {
			return null;
		}
		var ipw = 1.0 / this.width;
		var iph = 1.0 / this.height;
		var b = this.chars[char_index];
		if(b == null) {
			return null;
		}
		var round_x = Math.round(xpos + b.xoff);
		var round_y = Math.round(ypos + b.yoff);
		q.x0 = round_x;
		q.y0 = round_y;
		q.x1 = round_x + b.x1 - b.x0;
		q.y1 = round_y + b.y1 - b.y0;
		q.s0 = b.x0 * ipw;
		q.t0 = b.y0 * iph;
		q.s1 = b.x1 * ipw;
		q.t1 = b.y1 * iph;
		q.xadvance = b.xadvance;
		return q;
	}
	,getCharWidth: function(charIndex) {
		if(this.chars.length == 0) {
			return 0;
		}
		var offset = kha_KravurImage.charBlocks[0];
		if(charIndex < offset) {
			return this.chars[0].xadvance;
		}
		var _g = 1;
		var _g1 = kha_KravurImage.charBlocks.length / 2 | 0;
		while(_g < _g1) {
			var i = _g++;
			var start = kha_KravurImage.charBlocks[i * 2];
			if(charIndex > start - 1) {
				offset += start - 1 - kha_KravurImage.charBlocks[i * 2 - 1];
			}
		}
		if(charIndex - offset >= this.chars.length) {
			return this.chars[0].xadvance;
		}
		return this.chars[charIndex - offset].xadvance;
	}
	,getHeight: function() {
		return this.mySize;
	}
	,stringWidth: function(str) {
		var width = 0;
		var _g = 0;
		var _g1 = str.length;
		while(_g < _g1) width += this.getCharWidth(HxOverrides.cca(str,_g++));
		return width;
	}
	,__class__: kha_KravurImage
};
var kha_Kravur = function(blob,fontIndex) {
	if(fontIndex == null) {
		fontIndex = 0;
	}
	this.images = new haxe_ds_IntMap();
	this.blob = blob;
	this.fontIndex = fontIndex;
};
$hxClasses["kha.Kravur"] = kha_Kravur;
kha_Kravur.__name__ = "kha.Kravur";
kha_Kravur.__interfaces__ = [kha_Resource];
kha_Kravur.prototype = {
	oldGlyphs: null
	,blob: null
	,images: null
	,fontIndex: null
	,_get: function(fontSize) {
		var glyphs = kha_graphics2_Graphics.fontGlyphs;
		if(glyphs != this.oldGlyphs) {
			this.oldGlyphs = glyphs;
			kha_KravurImage.charBlocks = [glyphs[0]];
			var nextChar = kha_KravurImage.charBlocks[0] + 1;
			var _g = 1;
			var _g1 = glyphs.length;
			while(_g < _g1) {
				var i = _g++;
				if(glyphs[i] != nextChar) {
					kha_KravurImage.charBlocks.push(glyphs[i - 1]);
					kha_KravurImage.charBlocks.push(glyphs[i]);
					nextChar = glyphs[i] + 1;
				} else {
					++nextChar;
				}
			}
			kha_KravurImage.charBlocks.push(glyphs[glyphs.length - 1]);
		}
		var imageIndex = this.fontIndex * 10000000 + fontSize * 10000 + glyphs.length;
		if(!this.images.h.hasOwnProperty(imageIndex)) {
			var width = 64;
			var height = 32;
			var baked = new Array(glyphs.length);
			var _g = 0;
			var _g1 = baked.length;
			while(_g < _g1) baked[_g++] = new kha_graphics2_truetype_Stbtt_$bakedchar();
			var pixels = null;
			var offset = kha_graphics2_truetype_StbTruetype.stbtt_GetFontOffsetForIndex(this.blob,this.fontIndex);
			if(offset == -1) {
				offset = kha_graphics2_truetype_StbTruetype.stbtt_GetFontOffsetForIndex(this.blob,0);
			}
			var status = -1;
			while(status <= 0) {
				if(height < width) {
					height *= 2;
				} else {
					width *= 2;
				}
				pixels = kha_internal_BytesBlob.alloc(width * height);
				status = kha_graphics2_truetype_StbTruetype.stbtt_BakeFontBitmap(this.blob,offset,fontSize,pixels,width,height,glyphs,baked);
			}
			var info = new kha_graphics2_truetype_Stbtt_$fontinfo();
			kha_graphics2_truetype_StbTruetype.stbtt_InitFont(info,this.blob,offset);
			var metrics = kha_graphics2_truetype_StbTruetype.stbtt_GetFontVMetrics(info);
			var scale = kha_graphics2_truetype_StbTruetype.stbtt_ScaleForPixelHeight(info,fontSize);
			var image = new kha_KravurImage(fontSize | 0,Math.round(metrics.ascent * scale),Math.round(metrics.descent * scale),Math.round(metrics.lineGap * scale),width,height,baked,pixels);
			this.images.h[imageIndex] = image;
			return image;
		}
		return this.images.h[imageIndex];
	}
	,height: function(fontSize) {
		return this._get(fontSize).getHeight();
	}
	,width: function(fontSize,str) {
		return this._get(fontSize).stringWidth(str);
	}
	,__class__: kha_Kravur
};
var kha_LoaderImpl = function() { };
$hxClasses["kha.LoaderImpl"] = kha_LoaderImpl;
kha_LoaderImpl.__name__ = "kha.LoaderImpl";
kha_LoaderImpl.loadImageFromDescription = function(desc,done,failed) {
	var readable = Object.prototype.hasOwnProperty.call(desc,"readable") && desc.readable;
	if(StringTools.endsWith(desc.files[0],".hdr")) {
		kha_LoaderImpl.loadBlobFromDescription(desc,function(blob) {
			var hdrImage = kha_internal_HdrFormat.parse(blob.toBytes());
			done(kha_Image.fromBytes(haxe_io_Bytes.ofData(hdrImage.data.buffer),hdrImage.width,hdrImage.height,2,readable ? 1 : 0));
		},failed);
	} else {
		var img = window.document.createElement("img");
		img.onerror = function(event) {
			failed({ url : desc.files[0], error : event});
		};
		img.onload = function(event) {
			done(kha_Image.fromImage(img,readable));
		};
		img.crossOrigin = "";
		img.src = desc.files[0];
	}
};
kha_LoaderImpl.loadSoundFromDescription = function(desc,done,failed) {
	if(kha_SystemImpl._hasWebAudio) {
		var element = window.document.createElement("audio");
		if(element.canPlayType("audio/mp4") != "") {
			var _g = 0;
			var _g1 = desc.files.length;
			while(_g < _g1) {
				var file = desc.files[_g++];
				if(StringTools.endsWith(file,".mp4")) {
					new kha_js_WebAudioSound(file,done,failed);
					return;
				}
			}
		}
		if(element.canPlayType("audio/mp3") != "") {
			var _g = 0;
			var _g1 = desc.files.length;
			while(_g < _g1) {
				var file = desc.files[_g++];
				if(StringTools.endsWith(file,".mp3")) {
					new kha_js_WebAudioSound(file,done,failed);
					return;
				}
			}
		}
		if(element.canPlayType("audio/wav") != "") {
			var _g = 0;
			var _g1 = desc.files.length;
			while(_g < _g1) {
				var file = desc.files[_g++];
				if(StringTools.endsWith(file,".wav")) {
					new kha_js_WebAudioSound(file,done,failed);
					return;
				}
			}
		}
		var _g = 0;
		var _g1 = desc.files.length;
		while(_g < _g1) {
			var file = desc.files[_g++];
			if(StringTools.endsWith(file,".ogg")) {
				new kha_js_WebAudioSound(file,done,failed);
				return;
			}
		}
		failed({ url : desc.files.join(","), error : "Unable to find sound files with supported audio formats"});
	} else if(kha_SystemImpl.mobile) {
		var element = window.document.createElement("audio");
		if(element.canPlayType("audio/mp4") != "") {
			var _g = 0;
			var _g1 = desc.files.length;
			while(_g < _g1) {
				var file = desc.files[_g++];
				if(StringTools.endsWith(file,".mp4")) {
					new kha_js_MobileWebAudioSound(file,done,failed);
					return;
				}
			}
		}
		if(element.canPlayType("audio/mp3") != "") {
			var _g = 0;
			var _g1 = desc.files.length;
			while(_g < _g1) {
				var file = desc.files[_g++];
				if(StringTools.endsWith(file,".mp3")) {
					new kha_js_MobileWebAudioSound(file,done,failed);
					return;
				}
			}
		}
		if(element.canPlayType("audio/wav") != "") {
			var _g = 0;
			var _g1 = desc.files.length;
			while(_g < _g1) {
				var file = desc.files[_g++];
				if(StringTools.endsWith(file,".wav")) {
					new kha_js_MobileWebAudioSound(file,done,failed);
					return;
				}
			}
		}
		var _g = 0;
		var _g1 = desc.files.length;
		while(_g < _g1) {
			var file = desc.files[_g++];
			if(StringTools.endsWith(file,".ogg")) {
				new kha_js_MobileWebAudioSound(file,done,failed);
				return;
			}
		}
		failed({ url : desc.files.join(","), error : "Unable to find sound files with supported audio formats"});
	} else {
		new kha_js_Sound(desc.files,done,failed);
	}
};
kha_LoaderImpl.loadVideoFromDescription = function(desc,done,failed) {
	kha_js_Video.fromFile(desc.files,done);
};
kha_LoaderImpl.loadRemote = function(desc,done,failed) {
	var request = new XMLHttpRequest();
	request.open("GET",desc.files[0],true);
	request.responseType = "arraybuffer";
	request.onreadystatechange = function() {
		if(request.readyState != 4) {
			return;
		}
		if(request.status >= 200 && request.status < 400 || request.status == 0 && request.statusText == "") {
			var bytes = null;
			var arrayBuffer = request.response;
			if(arrayBuffer != null) {
				var byteArray = new Uint8Array(arrayBuffer);
				bytes = haxe_io_Bytes.ofData(byteArray);
			} else if(request.responseBody != null) {
				var data = VBArray(request.responseBody).toArray();
				bytes = new haxe_io_Bytes(new ArrayBuffer(data.length));
				var _g = 0;
				var _g1 = data.length;
				while(_g < _g1) {
					var i = _g++;
					bytes.b[i] = data[i];
				}
			} else {
				failed({ url : desc.files[0]});
				return;
			}
			done(new kha_internal_BytesBlob(bytes));
		} else {
			failed({ url : desc.files[0]});
		}
	};
	request.send(null);
};
kha_LoaderImpl.loadBlobFromDescription = function(desc,done,failed) {
	kha_LoaderImpl.loadRemote(desc,done,failed);
};
kha_LoaderImpl.loadFontFromDescription = function(desc,done,failed) {
	kha_LoaderImpl.loadBlobFromDescription(desc,function(blob) {
		done(new kha_Kravur(blob));
	},failed);
};
var kha_TargetRectangle = function(x,y,w,h,s,r) {
	this.x = x;
	this.y = y;
	this.width = w;
	this.height = h;
	this.scaleFactor = s;
	this.rotation = r;
};
$hxClasses["kha.TargetRectangle"] = kha_TargetRectangle;
kha_TargetRectangle.__name__ = "kha.TargetRectangle";
kha_TargetRectangle.prototype = {
	x: null
	,y: null
	,width: null
	,height: null
	,scaleFactor: null
	,rotation: null
	,__class__: kha_TargetRectangle
};
var kha_Scaler = function() { };
$hxClasses["kha.Scaler"] = kha_Scaler;
kha_Scaler.__name__ = "kha.Scaler";
kha_Scaler.targetRect = function(width,height,destinationWidth,destinationHeight,rotation) {
	var scalex;
	var scaley;
	var scalew;
	var scaleh;
	var scale;
	switch(rotation) {
	case 0:
		if(width / height > destinationWidth / destinationHeight) {
			scale = destinationWidth / width;
			scalew = width * scale;
			scaleh = height * scale;
			scalex = 0;
			scaley = (destinationHeight - scaleh) * 0.5;
		} else {
			scale = destinationHeight / height;
			scalew = width * scale;
			scaleh = height * scale;
			scalex = (destinationWidth - scalew) * 0.5;
			scaley = 0;
		}
		break;
	case 90:
		if(width / height > destinationHeight / destinationWidth) {
			scale = destinationHeight / width;
			scalew = width * scale;
			scaleh = height * scale;
			scalex = (destinationWidth - scaleh) * 0.5 + scaleh;
			scaley = 0;
		} else {
			scale = destinationWidth / height;
			scalew = width * scale;
			scaleh = height * scale;
			scalex = scaleh;
			scaley = (destinationHeight - scalew) * 0.5;
		}
		break;
	case 180:
		if(width / height > destinationWidth / destinationHeight) {
			scale = destinationWidth / width;
			scalew = width * scale;
			scaleh = height * scale;
			scalex = scalew;
			scaley = (destinationHeight - scaleh) * 0.5 + scaleh;
		} else {
			scale = destinationHeight / height;
			scalew = width * scale;
			scaleh = height * scale;
			scalex = (destinationWidth - scalew) * 0.5 + scalew;
			scaley = scaleh;
		}
		break;
	case 270:
		if(width / height > destinationHeight / destinationWidth) {
			scale = destinationHeight / width;
			scalew = width * scale;
			scaleh = height * scale;
			scalex = (destinationWidth - scaleh) * 0.5;
			scaley = scalew;
		} else {
			scale = destinationWidth / height;
			scalew = width * scale;
			scaleh = height * scale;
			scalex = 0;
			scaley = (destinationHeight - scalew) * 0.5 + scalew;
		}
		break;
	}
	return new kha_TargetRectangle(scalex,scaley,scalew,scaleh,scale,rotation);
};
kha_Scaler.transformXDirectly = function(x,y,sourceWidth,sourceHeight,destinationWidth,destinationHeight,rotation) {
	var targetRect = kha_Scaler.targetRect(sourceWidth,sourceHeight,destinationWidth,destinationHeight,rotation);
	switch(targetRect.rotation) {
	case 0:
		return (x - targetRect.x) / targetRect.scaleFactor | 0;
	case 90:
		return (y - targetRect.y) / targetRect.scaleFactor | 0;
	case 180:
		return (targetRect.x - x) / targetRect.scaleFactor | 0;
	case 270:
		return (targetRect.y - y) / targetRect.scaleFactor | 0;
	}
};
kha_Scaler.transformYDirectly = function(x,y,sourceWidth,sourceHeight,destinationWidth,destinationHeight,rotation) {
	var targetRect = kha_Scaler.targetRect(sourceWidth,sourceHeight,destinationWidth,destinationHeight,rotation);
	switch(targetRect.rotation) {
	case 0:
		return (y - targetRect.y) / targetRect.scaleFactor | 0;
	case 90:
		return (targetRect.x - x) / targetRect.scaleFactor | 0;
	case 180:
		return (targetRect.y - y) / targetRect.scaleFactor | 0;
	case 270:
		return (x - targetRect.x) / targetRect.scaleFactor | 0;
	}
};
kha_Scaler.scale = function(source,destination,rotation) {
	var g = destination.get_g2();
	var trans = kha_Scaler.getScaledTransformation(source.get_width(),source.get_height(),destination.get_width(),destination.get_height(),rotation);
	g.transformationIndex++;
	if(g.transformationIndex == g.transformations.length) {
		g.transformations.push(new kha_math_FastMatrix3(1,0,0,0,1,0,0,0,1));
	}
	var _this = g.transformations[g.transformationIndex];
	_this._00 = trans._00;
	_this._10 = trans._10;
	_this._20 = trans._20;
	_this._01 = trans._01;
	_this._11 = trans._11;
	_this._21 = trans._21;
	_this._02 = trans._02;
	_this._12 = trans._12;
	_this._22 = trans._22;
	g.setTransformation(g.transformations[g.transformationIndex]);
	g.set_color(-1);
	g.set_opacity(1);
	g.drawImage(source,0,0);
	g.popTransformation();
};
kha_Scaler.getScaledTransformation = function(width,height,destinationWidth,destinationHeight,rotation) {
	var rect = kha_Scaler.targetRect(width,height,destinationWidth,destinationHeight,rotation);
	var sf = rect.scaleFactor;
	var transformation = new kha_math_FastMatrix3(sf,0,rect.x,0,sf,rect.y,0,0,1);
	switch(rotation) {
	case 0:
		break;
	case 90:
		var alpha = Math.PI / 2;
		var _00 = Math.cos(alpha);
		var _10 = -Math.sin(alpha);
		var _01 = Math.sin(alpha);
		var _11 = Math.cos(alpha);
		var m__20 = 0;
		var m__21 = 0;
		var m__02 = 0;
		var m__12 = 0;
		var m__22 = 1;
		transformation = new kha_math_FastMatrix3(transformation._00 * _00 + transformation._10 * _01 + transformation._20 * m__02,transformation._00 * _10 + transformation._10 * _11 + transformation._20 * m__12,transformation._00 * m__20 + transformation._10 * m__21 + transformation._20 * m__22,transformation._01 * _00 + transformation._11 * _01 + transformation._21 * m__02,transformation._01 * _10 + transformation._11 * _11 + transformation._21 * m__12,transformation._01 * m__20 + transformation._11 * m__21 + transformation._21 * m__22,transformation._02 * _00 + transformation._12 * _01 + transformation._22 * m__02,transformation._02 * _10 + transformation._12 * _11 + transformation._22 * m__12,transformation._02 * m__20 + transformation._12 * m__21 + transformation._22 * m__22);
		break;
	case 180:
		var alpha = Math.PI;
		var _00 = Math.cos(alpha);
		var _10 = -Math.sin(alpha);
		var _01 = Math.sin(alpha);
		var _11 = Math.cos(alpha);
		var m__20 = 0;
		var m__21 = 0;
		var m__02 = 0;
		var m__12 = 0;
		var m__22 = 1;
		transformation = new kha_math_FastMatrix3(transformation._00 * _00 + transformation._10 * _01 + transformation._20 * m__02,transformation._00 * _10 + transformation._10 * _11 + transformation._20 * m__12,transformation._00 * m__20 + transformation._10 * m__21 + transformation._20 * m__22,transformation._01 * _00 + transformation._11 * _01 + transformation._21 * m__02,transformation._01 * _10 + transformation._11 * _11 + transformation._21 * m__12,transformation._01 * m__20 + transformation._11 * m__21 + transformation._21 * m__22,transformation._02 * _00 + transformation._12 * _01 + transformation._22 * m__02,transformation._02 * _10 + transformation._12 * _11 + transformation._22 * m__12,transformation._02 * m__20 + transformation._12 * m__21 + transformation._22 * m__22);
		break;
	case 270:
		var alpha = Math.PI * 3 / 2;
		var _00 = Math.cos(alpha);
		var _10 = -Math.sin(alpha);
		var _01 = Math.sin(alpha);
		var _11 = Math.cos(alpha);
		var m__20 = 0;
		var m__21 = 0;
		var m__02 = 0;
		var m__12 = 0;
		var m__22 = 1;
		transformation = new kha_math_FastMatrix3(transformation._00 * _00 + transformation._10 * _01 + transformation._20 * m__02,transformation._00 * _10 + transformation._10 * _11 + transformation._20 * m__12,transformation._00 * m__20 + transformation._10 * m__21 + transformation._20 * m__22,transformation._01 * _00 + transformation._11 * _01 + transformation._21 * m__02,transformation._01 * _10 + transformation._11 * _11 + transformation._21 * m__12,transformation._01 * m__20 + transformation._11 * m__21 + transformation._21 * m__22,transformation._02 * _00 + transformation._12 * _01 + transformation._22 * m__02,transformation._02 * _10 + transformation._12 * _11 + transformation._22 * m__12,transformation._02 * m__20 + transformation._12 * m__21 + transformation._22 * m__22);
		break;
	}
	return transformation;
};
var kha_TimeTask = function() {
};
$hxClasses["kha.TimeTask"] = kha_TimeTask;
kha_TimeTask.__name__ = "kha.TimeTask";
kha_TimeTask.prototype = {
	task: null
	,start: null
	,period: null
	,duration: null
	,next: null
	,id: null
	,groupId: null
	,active: null
	,paused: null
	,__class__: kha_TimeTask
};
var kha_FrameTask = function(task,priority,id) {
	this.task = task;
	this.priority = priority;
	this.id = id;
	this.active = true;
	this.paused = false;
};
$hxClasses["kha.FrameTask"] = kha_FrameTask;
kha_FrameTask.__name__ = "kha.FrameTask";
kha_FrameTask.prototype = {
	task: null
	,priority: null
	,id: null
	,active: null
	,paused: null
	,__class__: kha_FrameTask
};
var kha_Scheduler = function() { };
$hxClasses["kha.Scheduler"] = kha_Scheduler;
kha_Scheduler.__name__ = "kha.Scheduler";
kha_Scheduler.init = function() {
	kha_Scheduler.deltas = [];
	var _g = 0;
	var _g1 = kha_Scheduler.DIF_COUNT;
	while(_g < _g1) kha_Scheduler.deltas[_g++] = 0;
	kha_Scheduler.stopped = true;
	kha_Scheduler.frame_tasks_sorted = true;
	kha_Scheduler.current = kha_Scheduler.lastTime = kha_Scheduler.lastFrameEnd = kha_Scheduler.realTime();
	kha_Scheduler.currentFrameTaskId = 0;
	kha_Scheduler.currentTimeTaskId = 0;
	kha_Scheduler.currentGroupId = 0;
	kha_Scheduler.timeTasks = [];
	kha_Scheduler.pausedTimeTasks = [];
	kha_Scheduler.outdatedTimeTasks = [];
	kha_Scheduler.timeTasksScratchpad = [];
	kha_Scheduler.frameTasks = [];
	kha_Scheduler.toDeleteFrame = [];
};
kha_Scheduler.start = function(restartTimers) {
	if(restartTimers == null) {
		restartTimers = false;
	}
	kha_Scheduler.vsync = kha_Window.get(0).get_vSynced();
	var hz = kha_Display.get_primary().get_frequency();
	if(hz >= 57 && hz <= 63) {
		hz = 60;
	}
	kha_Scheduler.onedifhz = 1.0 / hz;
	kha_Scheduler.stopped = false;
	kha_Scheduler.resetTime();
	kha_Scheduler.lastTime = kha_Scheduler.realTime() - kha_Scheduler.startTime;
	var _g = 0;
	var _g1 = kha_Scheduler.DIF_COUNT;
	while(_g < _g1) kha_Scheduler.deltas[_g++] = 0;
	if(restartTimers) {
		var _g = 0;
		var _g1 = kha_Scheduler.timeTasks;
		while(_g < _g1.length) _g1[_g++].paused = false;
		var _g = 0;
		var _g1 = kha_Scheduler.frameTasks;
		while(_g < _g1.length) _g1[_g++].paused = false;
	}
};
kha_Scheduler.executeFrame = function() {
	var real = kha_Scheduler.realTime();
	var now = real - kha_Scheduler.startTime;
	var delta = now - kha_Scheduler.lastTime;
	var frameEnd = kha_Scheduler.lastFrameEnd;
	if(delta >= 0) {
		if(kha_netsync_Session.the() == null) {
			if(delta > kha_Scheduler.maxframetime) {
				kha_Scheduler.startTime += delta - kha_Scheduler.maxframetime;
				now = real - kha_Scheduler.startTime;
				delta = kha_Scheduler.maxframetime;
				frameEnd += delta;
			} else if(kha_Scheduler.vsync) {
				var frames = Math.round(delta / kha_Scheduler.onedifhz);
				if(frames < 1) {
					return;
				}
				var realdif = frames * kha_Scheduler.onedifhz;
				delta = realdif;
				var _g = 0;
				var _g1 = kha_Scheduler.DIF_COUNT - 2;
				while(_g < _g1) {
					var i = _g++;
					delta += kha_Scheduler.deltas[i];
					kha_Scheduler.deltas[i] = kha_Scheduler.deltas[i + 1];
				}
				delta += kha_Scheduler.deltas[kha_Scheduler.DIF_COUNT - 2];
				delta /= kha_Scheduler.DIF_COUNT;
				kha_Scheduler.deltas[kha_Scheduler.DIF_COUNT - 2] = realdif;
				frameEnd += delta;
			} else {
				var _g = 0;
				var _g1 = kha_Scheduler.DIF_COUNT - 1;
				while(_g < _g1) {
					var i = _g++;
					kha_Scheduler.deltas[i] = kha_Scheduler.deltas[i + 1];
				}
				kha_Scheduler.deltas[kha_Scheduler.DIF_COUNT - 1] = delta;
				var next = 0;
				var _g = 0;
				var _g1 = kha_Scheduler.DIF_COUNT;
				while(_g < _g1) next += kha_Scheduler.deltas[_g++];
				next /= kha_Scheduler.DIF_COUNT;
				frameEnd += next;
			}
		} else {
			frameEnd += delta;
		}
		kha_Scheduler.lastTime = now;
		if(!kha_Scheduler.stopped) {
			kha_Scheduler.lastFrameEnd = frameEnd;
		}
		var _g = 0;
		var _g1 = kha_Scheduler.pausedTimeTasks;
		while(_g < _g1.length) _g1[_g++].next += delta;
		if(kha_Scheduler.stopped) {
			var _g = 0;
			var _g1 = kha_Scheduler.timeTasks;
			while(_g < _g1.length) _g1[_g++].next += delta;
		}
		kha_Scheduler.executeTimeTasks(frameEnd);
		var _g = 0;
		var _g1 = kha_Scheduler.outdatedTimeTasks;
		while(_g < _g1.length) {
			var task = _g1[_g];
			++_g;
			if(task.next < frameEnd - 10.0) {
				kha_Scheduler.timeTasksScratchpad.push(task);
			}
		}
		var _g = 0;
		var _g1 = kha_Scheduler.timeTasksScratchpad;
		while(_g < _g1.length) HxOverrides.remove(kha_Scheduler.outdatedTimeTasks,_g1[_g++]);
		while(kha_Scheduler.timeTasksScratchpad.length > 0) HxOverrides.remove(kha_Scheduler.timeTasksScratchpad,kha_Scheduler.timeTasksScratchpad[0]);
	}
	kha_Scheduler.current = frameEnd;
	kha_Scheduler.sortFrameTasks();
	var _g = 0;
	var _g1 = kha_Scheduler.frameTasks;
	while(_g < _g1.length) {
		var frameTask = _g1[_g];
		++_g;
		if(!kha_Scheduler.stopped && !frameTask.paused && frameTask.active) {
			if(!frameTask.task()) {
				frameTask.active = false;
			}
		}
	}
	var _g = 0;
	var _g1 = kha_Scheduler.frameTasks;
	while(_g < _g1.length) {
		var frameTask = _g1[_g];
		++_g;
		if(!frameTask.active) {
			kha_Scheduler.toDeleteFrame.push(frameTask);
		}
	}
	while(kha_Scheduler.toDeleteFrame.length > 0) HxOverrides.remove(kha_Scheduler.frameTasks,kha_Scheduler.toDeleteFrame.pop());
};
kha_Scheduler.executeTimeTasks = function(until) {
	while(kha_Scheduler.timeTasks.length > 0) {
		kha_Scheduler.activeTimeTask = kha_Scheduler.timeTasks[0];
		if(kha_Scheduler.activeTimeTask.next <= until) {
			kha_Scheduler.current = kha_Scheduler.activeTimeTask.next;
			kha_Scheduler.activeTimeTask.next += kha_Scheduler.activeTimeTask.period;
			HxOverrides.remove(kha_Scheduler.timeTasks,kha_Scheduler.activeTimeTask);
			if(kha_Scheduler.activeTimeTask.active && kha_Scheduler.activeTimeTask.task()) {
				if(kha_Scheduler.activeTimeTask.period > 0 && (kha_Scheduler.activeTimeTask.duration == 0 || kha_Scheduler.activeTimeTask.duration >= kha_Scheduler.activeTimeTask.start + kha_Scheduler.activeTimeTask.next)) {
					kha_Scheduler.insertSorted(kha_Scheduler.timeTasks,kha_Scheduler.activeTimeTask);
				}
			} else {
				kha_Scheduler.activeTimeTask.active = false;
			}
		} else {
			break;
		}
	}
	kha_Scheduler.activeTimeTask = null;
};
kha_Scheduler.time = function() {
	return kha_Scheduler.current;
};
kha_Scheduler.realTime = function() {
	return kha_System.get_time();
};
kha_Scheduler.resetTime = function() {
	var now = kha_System.get_time();
	var dif = now - kha_Scheduler.startTime;
	kha_Scheduler.startTime = now;
	var _g = 0;
	var _g1 = kha_Scheduler.timeTasks;
	while(_g < _g1.length) {
		var timeTask = _g1[_g];
		++_g;
		timeTask.start -= dif;
		timeTask.next -= dif;
	}
	var _g = 0;
	var _g1 = kha_Scheduler.DIF_COUNT;
	while(_g < _g1) kha_Scheduler.deltas[_g++] = 0;
	kha_Scheduler.current = 0;
	kha_Scheduler.lastTime = 0;
	kha_Scheduler.lastFrameEnd = 0;
};
kha_Scheduler.addBreakableTimeTaskToGroup = function(groupId,task,start,period,duration) {
	if(duration == null) {
		duration = 0;
	}
	if(period == null) {
		period = 0;
	}
	var t = new kha_TimeTask();
	t.active = true;
	t.task = task;
	t.id = ++kha_Scheduler.currentTimeTaskId;
	t.groupId = groupId;
	t.start = kha_Scheduler.current + start;
	t.period = 0;
	if(period != 0) {
		t.period = period;
	}
	t.duration = 0;
	if(duration != 0) {
		t.duration = t.start + duration;
	}
	t.next = t.start;
	kha_Scheduler.insertSorted(kha_Scheduler.timeTasks,t);
	return t.id;
};
kha_Scheduler.addTimeTaskToGroup = function(groupId,task,start,period,duration) {
	if(duration == null) {
		duration = 0;
	}
	if(period == null) {
		period = 0;
	}
	return kha_Scheduler.addBreakableTimeTaskToGroup(groupId,function() {
		task();
		return true;
	},start,period,duration);
};
kha_Scheduler.addTimeTask = function(task,start,period,duration) {
	if(duration == null) {
		duration = 0;
	}
	if(period == null) {
		period = 0;
	}
	return kha_Scheduler.addTimeTaskToGroup(0,task,start,period,duration);
};
kha_Scheduler.getTimeTask = function(id) {
	if(kha_Scheduler.activeTimeTask != null && kha_Scheduler.activeTimeTask.id == id) {
		return kha_Scheduler.activeTimeTask;
	}
	var _g = 0;
	var _g1 = kha_Scheduler.timeTasks;
	while(_g < _g1.length) {
		var timeTask = _g1[_g];
		++_g;
		if(timeTask.id == id) {
			return timeTask;
		}
	}
	var _g = 0;
	var _g1 = kha_Scheduler.pausedTimeTasks;
	while(_g < _g1.length) {
		var timeTask = _g1[_g];
		++_g;
		if(timeTask.id == id) {
			return timeTask;
		}
	}
	return null;
};
kha_Scheduler.removeTimeTask = function(id) {
	var timeTask = kha_Scheduler.getTimeTask(id);
	if(timeTask != null) {
		timeTask.active = false;
		HxOverrides.remove(kha_Scheduler.timeTasks,timeTask);
	}
};
kha_Scheduler.insertSorted = function(list,task) {
	var _g = 0;
	var _g1 = list.length;
	while(_g < _g1) {
		var i = _g++;
		if(list[i].next > task.next) {
			list.splice(i,0,task);
			return;
		}
	}
	list.push(task);
};
kha_Scheduler.sortFrameTasks = function() {
	if(kha_Scheduler.frame_tasks_sorted) {
		return;
	}
	kha_Scheduler.frameTasks.sort(function(a,b) {
		if(a.priority > b.priority) {
			return 1;
		} else if(a.priority < b.priority) {
			return -1;
		} else {
			return 0;
		}
	});
	kha_Scheduler.frame_tasks_sorted = true;
};
var kha_Shaders = function() { };
$hxClasses["kha.Shaders"] = kha_Shaders;
kha_Shaders.__name__ = "kha.Shaders";
kha_Shaders.init = function() {
	var blobs = [];
	blobs.push(kha_internal_BytesBlob.fromBytes(haxe_Unserializer.run(Reflect.field(kha_Shaders,"badTV_fragData" + 0))));
	blobs.push(kha_internal_BytesBlob.fromBytes(haxe_Unserializer.run(Reflect.field(kha_Shaders,"badTV_fragData" + 1))));
	blobs.push(kha_internal_BytesBlob.fromBytes(haxe_Unserializer.run(Reflect.field(kha_Shaders,"badTV_fragData" + 2))));
	kha_Shaders.badTV_frag = new kha_graphics4_FragmentShader(blobs,["badTV.frag.essl","badTV-webgl2.frag.essl","badTV-relaxed.frag.essl"]);
	var blobs = [];
	blobs.push(kha_internal_BytesBlob.fromBytes(haxe_Unserializer.run(Reflect.field(kha_Shaders,"blurFilter_fragData" + 0))));
	blobs.push(kha_internal_BytesBlob.fromBytes(haxe_Unserializer.run(Reflect.field(kha_Shaders,"blurFilter_fragData" + 1))));
	blobs.push(kha_internal_BytesBlob.fromBytes(haxe_Unserializer.run(Reflect.field(kha_Shaders,"blurFilter_fragData" + 2))));
	kha_Shaders.blurFilter_frag = new kha_graphics4_FragmentShader(blobs,["blurFilter.frag.essl","blurFilter-webgl2.frag.essl","blurFilter-relaxed.frag.essl"]);
	var blobs = [];
	blobs.push(kha_internal_BytesBlob.fromBytes(haxe_Unserializer.run(Reflect.field(kha_Shaders,"genericPostprocessPass2_fragData" + 0))));
	blobs.push(kha_internal_BytesBlob.fromBytes(haxe_Unserializer.run(Reflect.field(kha_Shaders,"genericPostprocessPass2_fragData" + 1))));
	blobs.push(kha_internal_BytesBlob.fromBytes(haxe_Unserializer.run(Reflect.field(kha_Shaders,"genericPostprocessPass2_fragData" + 2))));
	kha_Shaders.genericPostprocessPass2_frag = new kha_graphics4_FragmentShader(blobs,["genericPostprocessPass2.frag.essl","genericPostprocessPass2-webgl2.frag.essl","genericPostprocessPass2-relaxed.frag.essl"]);
	var blobs = [];
	blobs.push(kha_internal_BytesBlob.fromBytes(haxe_Unserializer.run(Reflect.field(kha_Shaders,"genericPostprocess_fragData" + 0))));
	blobs.push(kha_internal_BytesBlob.fromBytes(haxe_Unserializer.run(Reflect.field(kha_Shaders,"genericPostprocess_fragData" + 1))));
	blobs.push(kha_internal_BytesBlob.fromBytes(haxe_Unserializer.run(Reflect.field(kha_Shaders,"genericPostprocess_fragData" + 2))));
	kha_Shaders.genericPostprocess_frag = new kha_graphics4_FragmentShader(blobs,["genericPostprocess.frag.essl","genericPostprocess-webgl2.frag.essl","genericPostprocess-relaxed.frag.essl"]);
	var blobs = [];
	blobs.push(kha_internal_BytesBlob.fromBytes(haxe_Unserializer.run(Reflect.field(kha_Shaders,"halftone1_fragData" + 0))));
	blobs.push(kha_internal_BytesBlob.fromBytes(haxe_Unserializer.run(Reflect.field(kha_Shaders,"halftone1_fragData" + 1))));
	blobs.push(kha_internal_BytesBlob.fromBytes(haxe_Unserializer.run(Reflect.field(kha_Shaders,"halftone1_fragData" + 2))));
	kha_Shaders.halftone1_frag = new kha_graphics4_FragmentShader(blobs,["halftone1.frag.essl","halftone1-webgl2.frag.essl","halftone1-relaxed.frag.essl"]);
	var blobs = [];
	blobs.push(kha_internal_BytesBlob.fromBytes(haxe_Unserializer.run(Reflect.field(kha_Shaders,"painter_colored_fragData" + 0))));
	blobs.push(kha_internal_BytesBlob.fromBytes(haxe_Unserializer.run(Reflect.field(kha_Shaders,"painter_colored_fragData" + 1))));
	blobs.push(kha_internal_BytesBlob.fromBytes(haxe_Unserializer.run(Reflect.field(kha_Shaders,"painter_colored_fragData" + 2))));
	kha_Shaders.painter_colored_frag = new kha_graphics4_FragmentShader(blobs,["painter-colored.frag.essl","painter-colored-webgl2.frag.essl","painter-colored-relaxed.frag.essl"]);
	var blobs = [];
	blobs.push(kha_internal_BytesBlob.fromBytes(haxe_Unserializer.run(Reflect.field(kha_Shaders,"painter_colored_vertData" + 0))));
	blobs.push(kha_internal_BytesBlob.fromBytes(haxe_Unserializer.run(Reflect.field(kha_Shaders,"painter_colored_vertData" + 1))));
	blobs.push(kha_internal_BytesBlob.fromBytes(haxe_Unserializer.run(Reflect.field(kha_Shaders,"painter_colored_vertData" + 2))));
	kha_Shaders.painter_colored_vert = new kha_graphics4_VertexShader(blobs,["painter-colored.vert.essl","painter-colored-webgl2.vert.essl","painter-colored-relaxed.vert.essl"]);
	var blobs = [];
	blobs.push(kha_internal_BytesBlob.fromBytes(haxe_Unserializer.run(Reflect.field(kha_Shaders,"painter_image_fragData" + 0))));
	blobs.push(kha_internal_BytesBlob.fromBytes(haxe_Unserializer.run(Reflect.field(kha_Shaders,"painter_image_fragData" + 1))));
	blobs.push(kha_internal_BytesBlob.fromBytes(haxe_Unserializer.run(Reflect.field(kha_Shaders,"painter_image_fragData" + 2))));
	kha_Shaders.painter_image_frag = new kha_graphics4_FragmentShader(blobs,["painter-image.frag.essl","painter-image-webgl2.frag.essl","painter-image-relaxed.frag.essl"]);
	var blobs = [];
	blobs.push(kha_internal_BytesBlob.fromBytes(haxe_Unserializer.run(Reflect.field(kha_Shaders,"painter_image_vertData" + 0))));
	blobs.push(kha_internal_BytesBlob.fromBytes(haxe_Unserializer.run(Reflect.field(kha_Shaders,"painter_image_vertData" + 1))));
	blobs.push(kha_internal_BytesBlob.fromBytes(haxe_Unserializer.run(Reflect.field(kha_Shaders,"painter_image_vertData" + 2))));
	kha_Shaders.painter_image_vert = new kha_graphics4_VertexShader(blobs,["painter-image.vert.essl","painter-image-webgl2.vert.essl","painter-image-relaxed.vert.essl"]);
	var blobs = [];
	blobs.push(kha_internal_BytesBlob.fromBytes(haxe_Unserializer.run(Reflect.field(kha_Shaders,"painter_text_fragData" + 0))));
	blobs.push(kha_internal_BytesBlob.fromBytes(haxe_Unserializer.run(Reflect.field(kha_Shaders,"painter_text_fragData" + 1))));
	blobs.push(kha_internal_BytesBlob.fromBytes(haxe_Unserializer.run(Reflect.field(kha_Shaders,"painter_text_fragData" + 2))));
	kha_Shaders.painter_text_frag = new kha_graphics4_FragmentShader(blobs,["painter-text.frag.essl","painter-text-webgl2.frag.essl","painter-text-relaxed.frag.essl"]);
	var blobs = [];
	blobs.push(kha_internal_BytesBlob.fromBytes(haxe_Unserializer.run(Reflect.field(kha_Shaders,"painter_text_vertData" + 0))));
	blobs.push(kha_internal_BytesBlob.fromBytes(haxe_Unserializer.run(Reflect.field(kha_Shaders,"painter_text_vertData" + 1))));
	blobs.push(kha_internal_BytesBlob.fromBytes(haxe_Unserializer.run(Reflect.field(kha_Shaders,"painter_text_vertData" + 2))));
	kha_Shaders.painter_text_vert = new kha_graphics4_VertexShader(blobs,["painter-text.vert.essl","painter-text-webgl2.vert.essl","painter-text-relaxed.vert.essl"]);
	var blobs = [];
	blobs.push(kha_internal_BytesBlob.fromBytes(haxe_Unserializer.run(Reflect.field(kha_Shaders,"painter_video_fragData" + 0))));
	blobs.push(kha_internal_BytesBlob.fromBytes(haxe_Unserializer.run(Reflect.field(kha_Shaders,"painter_video_fragData" + 1))));
	blobs.push(kha_internal_BytesBlob.fromBytes(haxe_Unserializer.run(Reflect.field(kha_Shaders,"painter_video_fragData" + 2))));
	kha_Shaders.painter_video_frag = new kha_graphics4_FragmentShader(blobs,["painter-video.frag.essl","painter-video-webgl2.frag.essl","painter-video-relaxed.frag.essl"]);
	var blobs = [];
	blobs.push(kha_internal_BytesBlob.fromBytes(haxe_Unserializer.run(Reflect.field(kha_Shaders,"painter_video_vertData" + 0))));
	blobs.push(kha_internal_BytesBlob.fromBytes(haxe_Unserializer.run(Reflect.field(kha_Shaders,"painter_video_vertData" + 1))));
	blobs.push(kha_internal_BytesBlob.fromBytes(haxe_Unserializer.run(Reflect.field(kha_Shaders,"painter_video_vertData" + 2))));
	kha_Shaders.painter_video_vert = new kha_graphics4_VertexShader(blobs,["painter-video.vert.essl","painter-video-webgl2.vert.essl","painter-video-relaxed.vert.essl"]);
	var blobs = [];
	blobs.push(kha_internal_BytesBlob.fromBytes(haxe_Unserializer.run(Reflect.field(kha_Shaders,"postprocess_fragData" + 0))));
	blobs.push(kha_internal_BytesBlob.fromBytes(haxe_Unserializer.run(Reflect.field(kha_Shaders,"postprocess_fragData" + 1))));
	blobs.push(kha_internal_BytesBlob.fromBytes(haxe_Unserializer.run(Reflect.field(kha_Shaders,"postprocess_fragData" + 2))));
	kha_Shaders.postprocess_frag = new kha_graphics4_FragmentShader(blobs,["postprocess.frag.essl","postprocess-webgl2.frag.essl","postprocess-relaxed.frag.essl"]);
	var blobs = [];
	blobs.push(kha_internal_BytesBlob.fromBytes(haxe_Unserializer.run(Reflect.field(kha_Shaders,"quad_vertData" + 0))));
	blobs.push(kha_internal_BytesBlob.fromBytes(haxe_Unserializer.run(Reflect.field(kha_Shaders,"quad_vertData" + 1))));
	blobs.push(kha_internal_BytesBlob.fromBytes(haxe_Unserializer.run(Reflect.field(kha_Shaders,"quad_vertData" + 2))));
	kha_Shaders.quad_vert = new kha_graphics4_VertexShader(blobs,["quad.vert.essl","quad-webgl2.vert.essl","quad-relaxed.vert.essl"]);
	var blobs = [];
	blobs.push(kha_internal_BytesBlob.fromBytes(haxe_Unserializer.run(Reflect.field(kha_Shaders,"screenfilter_fragData" + 0))));
	blobs.push(kha_internal_BytesBlob.fromBytes(haxe_Unserializer.run(Reflect.field(kha_Shaders,"screenfilter_fragData" + 1))));
	blobs.push(kha_internal_BytesBlob.fromBytes(haxe_Unserializer.run(Reflect.field(kha_Shaders,"screenfilter_fragData" + 2))));
	kha_Shaders.screenfilter_frag = new kha_graphics4_FragmentShader(blobs,["screenfilter.frag.essl","screenfilter-webgl2.frag.essl","screenfilter-relaxed.frag.essl"]);
	var blobs = [];
	blobs.push(kha_internal_BytesBlob.fromBytes(haxe_Unserializer.run(Reflect.field(kha_Shaders,"sh_fragData" + 0))));
	blobs.push(kha_internal_BytesBlob.fromBytes(haxe_Unserializer.run(Reflect.field(kha_Shaders,"sh_fragData" + 1))));
	blobs.push(kha_internal_BytesBlob.fromBytes(haxe_Unserializer.run(Reflect.field(kha_Shaders,"sh_fragData" + 2))));
	kha_Shaders.sh_frag = new kha_graphics4_FragmentShader(blobs,["sh.frag.essl","sh-webgl2.frag.essl","sh-relaxed.frag.essl"]);
	var blobs = [];
	blobs.push(kha_internal_BytesBlob.fromBytes(haxe_Unserializer.run(Reflect.field(kha_Shaders,"sh_vertData" + 0))));
	blobs.push(kha_internal_BytesBlob.fromBytes(haxe_Unserializer.run(Reflect.field(kha_Shaders,"sh_vertData" + 1))));
	blobs.push(kha_internal_BytesBlob.fromBytes(haxe_Unserializer.run(Reflect.field(kha_Shaders,"sh_vertData" + 2))));
	kha_Shaders.sh_vert = new kha_graphics4_VertexShader(blobs,["sh.vert.essl","sh-webgl2.vert.essl","sh-relaxed.vert.essl"]);
	var blobs = [];
	blobs.push(kha_internal_BytesBlob.fromBytes(haxe_Unserializer.run(Reflect.field(kha_Shaders,"simple_fragData" + 0))));
	blobs.push(kha_internal_BytesBlob.fromBytes(haxe_Unserializer.run(Reflect.field(kha_Shaders,"simple_fragData" + 1))));
	blobs.push(kha_internal_BytesBlob.fromBytes(haxe_Unserializer.run(Reflect.field(kha_Shaders,"simple_fragData" + 2))));
	kha_Shaders.simple_frag = new kha_graphics4_FragmentShader(blobs,["simple.frag.essl","simple-webgl2.frag.essl","simple-relaxed.frag.essl"]);
	var blobs = [];
	blobs.push(kha_internal_BytesBlob.fromBytes(haxe_Unserializer.run(Reflect.field(kha_Shaders,"simple_vertData" + 0))));
	blobs.push(kha_internal_BytesBlob.fromBytes(haxe_Unserializer.run(Reflect.field(kha_Shaders,"simple_vertData" + 1))));
	blobs.push(kha_internal_BytesBlob.fromBytes(haxe_Unserializer.run(Reflect.field(kha_Shaders,"simple_vertData" + 2))));
	kha_Shaders.simple_vert = new kha_graphics4_VertexShader(blobs,["simple.vert.essl","simple-webgl2.vert.essl","simple-relaxed.vert.essl"]);
	var blobs = [];
	blobs.push(kha_internal_BytesBlob.fromBytes(haxe_Unserializer.run(Reflect.field(kha_Shaders,"sinescroll_fragData" + 0))));
	blobs.push(kha_internal_BytesBlob.fromBytes(haxe_Unserializer.run(Reflect.field(kha_Shaders,"sinescroll_fragData" + 1))));
	blobs.push(kha_internal_BytesBlob.fromBytes(haxe_Unserializer.run(Reflect.field(kha_Shaders,"sinescroll_fragData" + 2))));
	kha_Shaders.sinescroll_frag = new kha_graphics4_FragmentShader(blobs,["sinescroll.frag.essl","sinescroll-webgl2.frag.essl","sinescroll-relaxed.frag.essl"]);
	var blobs = [];
	blobs.push(kha_internal_BytesBlob.fromBytes(haxe_Unserializer.run(Reflect.field(kha_Shaders,"standard_fragData" + 0))));
	blobs.push(kha_internal_BytesBlob.fromBytes(haxe_Unserializer.run(Reflect.field(kha_Shaders,"standard_fragData" + 1))));
	blobs.push(kha_internal_BytesBlob.fromBytes(haxe_Unserializer.run(Reflect.field(kha_Shaders,"standard_fragData" + 2))));
	kha_Shaders.standard_frag = new kha_graphics4_FragmentShader(blobs,["standard.frag.essl","standard-webgl2.frag.essl","standard-relaxed.frag.essl"]);
	var blobs = [];
	blobs.push(kha_internal_BytesBlob.fromBytes(haxe_Unserializer.run(Reflect.field(kha_Shaders,"test2_fragData" + 0))));
	blobs.push(kha_internal_BytesBlob.fromBytes(haxe_Unserializer.run(Reflect.field(kha_Shaders,"test2_fragData" + 1))));
	blobs.push(kha_internal_BytesBlob.fromBytes(haxe_Unserializer.run(Reflect.field(kha_Shaders,"test2_fragData" + 2))));
	kha_Shaders.test2_frag = new kha_graphics4_FragmentShader(blobs,["test2.frag.essl","test2-webgl2.frag.essl","test2-relaxed.frag.essl"]);
	var blobs = [];
	blobs.push(kha_internal_BytesBlob.fromBytes(haxe_Unserializer.run(Reflect.field(kha_Shaders,"test_fragData" + 0))));
	blobs.push(kha_internal_BytesBlob.fromBytes(haxe_Unserializer.run(Reflect.field(kha_Shaders,"test_fragData" + 1))));
	blobs.push(kha_internal_BytesBlob.fromBytes(haxe_Unserializer.run(Reflect.field(kha_Shaders,"test_fragData" + 2))));
	kha_Shaders.test_frag = new kha_graphics4_FragmentShader(blobs,["test.frag.essl","test-webgl2.frag.essl","test-relaxed.frag.essl"]);
	var blobs = [];
	blobs.push(kha_internal_BytesBlob.fromBytes(haxe_Unserializer.run(Reflect.field(kha_Shaders,"vlcvideo_fragData" + 0))));
	blobs.push(kha_internal_BytesBlob.fromBytes(haxe_Unserializer.run(Reflect.field(kha_Shaders,"vlcvideo_fragData" + 1))));
	blobs.push(kha_internal_BytesBlob.fromBytes(haxe_Unserializer.run(Reflect.field(kha_Shaders,"vlcvideo_fragData" + 2))));
	kha_Shaders.vlcvideo_frag = new kha_graphics4_FragmentShader(blobs,["vlcvideo.frag.essl","vlcvideo-webgl2.frag.essl","vlcvideo-relaxed.frag.essl"]);
};
var kha_Sound = function() {
	this.sampleRate = 0;
	this.channels = 0;
	this.length = 0;
};
$hxClasses["kha.Sound"] = kha_Sound;
kha_Sound.__name__ = "kha.Sound";
kha_Sound.__interfaces__ = [kha_Resource];
kha_Sound.prototype = {
	compressedData: null
	,uncompressedData: null
	,length: null
	,channels: null
	,sampleRate: null
	,uncompress: function(done) {
		if(this.uncompressedData != null) {
			done();
			return;
		}
		var output = new haxe_io_BytesOutput();
		var header = kha_audio2_ogg_vorbis_Reader.readAll(this.compressedData,output,true);
		var soundBytes = output.getBytes();
		var count = soundBytes.length / 4 | 0;
		if(header.channel == 1) {
			this.length = count / kha_audio2_Audio.samplesPerSecond;
			this.uncompressedData = kha_arrays_Float32Array._new(count * 2);
			var _g = 0;
			while(_g < count) {
				var i = _g++;
				kha_arrays_Float32Array.set(this.uncompressedData,i * 2,soundBytes.getFloat(i * 4));
				kha_arrays_Float32Array.set(this.uncompressedData,i * 2 + 1,soundBytes.getFloat(i * 4));
			}
		} else {
			this.length = count / 2 / kha_audio2_Audio.samplesPerSecond;
			this.uncompressedData = kha_arrays_Float32Array._new(count);
			var _g = 0;
			while(_g < count) {
				var i = _g++;
				kha_arrays_Float32Array.set(this.uncompressedData,i,soundBytes.getFloat(i * 4));
			}
		}
		this.channels = header.channel;
		this.sampleRate = header.sampleRate;
		this.compressedData = null;
		done();
	}
	,__class__: kha_Sound
};
var kha_StringExtensions = function() { };
$hxClasses["kha.StringExtensions"] = kha_StringExtensions;
kha_StringExtensions.__name__ = "kha.StringExtensions";
kha_StringExtensions.toCharArray = function(s) {
	var results = [];
	var _g = 0;
	var _g1 = s.length;
	while(_g < _g1) results.push(HxOverrides.cca(s,_g++));
	return results;
};
var kha_SystemOptions = function(title,width,height,$window,framebuffer) {
	if(height == null) {
		height = -1;
	}
	if(width == null) {
		width = -1;
	}
	if(title == null) {
		title = "Kha";
	}
	this.framebuffer = null;
	this.window = null;
	this.height = -1;
	this.width = -1;
	this.title = "Kha";
	this.title = title;
	this.window = $window == null ? new kha_WindowOptions(null,-1,-1,800,600,-1,true,null,0) : $window;
	if(width > 0) {
		this.window.width = width;
		this.width = width;
	} else {
		this.width = this.window.width;
	}
	if(height > 0) {
		this.window.height = height;
		this.height = height;
	} else {
		this.height = this.window.height;
	}
	if(this.window.title == null) {
		this.window.title = title;
	}
	this.framebuffer = framebuffer == null ? new kha_FramebufferOptions(60,true,32,16,8,1) : framebuffer;
};
$hxClasses["kha.SystemOptions"] = kha_SystemOptions;
kha_SystemOptions.__name__ = "kha.SystemOptions";
kha_SystemOptions.prototype = {
	title: null
	,width: null
	,height: null
	,window: null
	,framebuffer: null
	,__class__: kha_SystemOptions
};
var kha_System = function() { };
$hxClasses["kha.System"] = kha_System;
kha_System.__name__ = "kha.System";
kha_System.__properties__ = {get_screenRotation:"get_screenRotation",get_time:"get_time"};
kha_System.start = function(options,callback) {
	kha_System.theTitle = options.title;
	kha_SystemImpl.init(options,callback);
};
kha_System.notifyOnFrames = function(listener) {
	kha_System.renderListeners.push(listener);
};
kha_System.removeFramesListener = function(listener) {
	HxOverrides.remove(kha_System.renderListeners,listener);
};
kha_System.notifyOnApplicationState = function(foregroundListener,resumeListener,pauseListener,backgroundListener,shutdownListener) {
	if(foregroundListener != null) {
		kha_System.foregroundListeners.push(foregroundListener);
	}
	if(resumeListener != null) {
		kha_System.resumeListeners.push(resumeListener);
	}
	if(pauseListener != null) {
		kha_System.pauseListeners.push(pauseListener);
	}
	if(backgroundListener != null) {
		kha_System.backgroundListeners.push(backgroundListener);
	}
	if(shutdownListener != null) {
		kha_System.shutdownListeners.push(shutdownListener);
	}
};
kha_System.notifyOnCutCopyPaste = function(cutListener,copyListener,pasteListener) {
	kha_System.cutListener = cutListener;
	kha_System.copyListener = copyListener;
	kha_System.pasteListener = pasteListener;
};
kha_System.render = function(framebuffers) {
	var _g = 0;
	var _g1 = kha_System.renderListeners;
	while(_g < _g1.length) _g1[_g++](framebuffers);
};
kha_System.foreground = function() {
	var _g = 0;
	var _g1 = kha_System.foregroundListeners;
	while(_g < _g1.length) _g1[_g++]();
};
kha_System.background = function() {
	var _g = 0;
	var _g1 = kha_System.backgroundListeners;
	while(_g < _g1.length) _g1[_g++]();
};
kha_System.shutdown = function() {
	var _g = 0;
	var _g1 = kha_System.shutdownListeners;
	while(_g < _g1.length) _g1[_g++]();
};
kha_System.get_time = function() {
	return kha_SystemImpl.getTime();
};
kha_System.windowWidth = function($window) {
	if($window == null) {
		$window = 0;
	}
	return kha_Window.get($window).get_width();
};
kha_System.windowHeight = function($window) {
	if($window == null) {
		$window = 0;
	}
	return kha_Window.get_all()[$window].get_height();
};
kha_System.get_screenRotation = function() {
	return 0;
};
kha_System.stop = function() {
	return kha_SystemImpl.requestShutdown();
};
var kha_GamepadStates = function() {
	this.axes = [];
	this.buttons = [];
};
$hxClasses["kha.GamepadStates"] = kha_GamepadStates;
kha_GamepadStates.__name__ = "kha.GamepadStates";
kha_GamepadStates.prototype = {
	axes: null
	,buttons: null
	,__class__: kha_GamepadStates
};
var kha_SystemImpl = function() { };
$hxClasses["kha.SystemImpl"] = kha_SystemImpl;
kha_SystemImpl.__name__ = "kha.SystemImpl";
kha_SystemImpl.init = function(options,callback) {
	kha_SystemImpl.options = options;
	kha_SystemImpl.mobile = kha_SystemImpl.isMobile();
	kha_SystemImpl.ios = kha_SystemImpl.isIOS();
	kha_SystemImpl.chrome = kha_SystemImpl.isChrome();
	kha_SystemImpl.firefox = kha_SystemImpl.isFirefox();
	kha_SystemImpl.ie = kha_SystemImpl.isIE();
	kha_SystemImpl.mobileAudioPlaying = !kha_SystemImpl.mobile && !kha_SystemImpl.chrome && !kha_SystemImpl.firefox;
	kha_SystemImpl.initSecondStep(callback);
};
kha_SystemImpl.initSecondStep = function(callback) {
	kha_SystemImpl.init2(kha_SystemImpl.options.window.width,kha_SystemImpl.options.window.height);
	kha_SystemImpl.initAnimate(callback);
};
kha_SystemImpl.isMobile = function() {
	var agent = $global.navigator.userAgent;
	if(agent.indexOf("Android") >= 0 || agent.indexOf("webOS") >= 0 || agent.indexOf("BlackBerry") >= 0 || agent.indexOf("Windows Phone") >= 0) {
		return true;
	}
	if(kha_SystemImpl.isIOS()) {
		return true;
	}
	return false;
};
kha_SystemImpl.isIOS = function() {
	var agent = $global.navigator.userAgent;
	if(agent.indexOf("iPhone") >= 0 || agent.indexOf("iPad") >= 0 || agent.indexOf("iPod") >= 0) {
		return true;
	}
	return false;
};
kha_SystemImpl.isChrome = function() {
	if($global.navigator.userAgent.indexOf("Chrome") >= 0) {
		return true;
	}
	return false;
};
kha_SystemImpl.isFirefox = function() {
	if($global.navigator.userAgent.indexOf("Firefox") >= 0) {
		return true;
	}
	return false;
};
kha_SystemImpl.isIE = function() {
	var agent = $global.navigator.userAgent;
	if(agent.indexOf("MSIE ") >= 0 || agent.indexOf("Trident/") >= 0) {
		return true;
	}
	return false;
};
kha_SystemImpl.setCanvas = function(canvas) {
	kha_SystemImpl.khanvas = canvas;
};
kha_SystemImpl.getTime = function() {
	return (window.performance != null ? window.performance.now() : Date.now()) / 1000;
};
kha_SystemImpl.requestShutdown = function() {
	window.close();
	return true;
};
kha_SystemImpl.init2 = function(defaultWidth,defaultHeight,backbufferFormat) {
	kha_SystemImpl.keyboard = new kha_input_Keyboard();
	kha_SystemImpl.mouse = new kha_input_MouseImpl();
	kha_SystemImpl.surface = new kha_input_Surface();
	kha_SystemImpl.gamepads = [];
	kha_SystemImpl.gamepadStates = [];
	kha_SystemImpl.gamepads[0] = new kha_input_Gamepad(0);
	kha_SystemImpl.gamepadStates[0] = new kha_GamepadStates();
	kha_SystemImpl.gamepads[1] = new kha_input_Gamepad(1);
	kha_SystemImpl.gamepadStates[1] = new kha_GamepadStates();
	kha_SystemImpl.gamepads[2] = new kha_input_Gamepad(2);
	kha_SystemImpl.gamepadStates[2] = new kha_GamepadStates();
	kha_SystemImpl.gamepads[3] = new kha_input_Gamepad(3);
	kha_SystemImpl.gamepadStates[3] = new kha_GamepadStates();
	window.addEventListener("gamepadconnected",function(e) {
		kha_input_Gamepad.sendConnectEvent(e.gamepad.index);
	});
	window.addEventListener("gamepaddisconnected",function(e) {
		kha_input_Gamepad.sendDisconnectEvent(e.gamepad.index);
	});
	var sysGamepads = kha_SystemImpl.getGamepads();
	if(sysGamepads != null) {
		var _g = 0;
		var _g1 = sysGamepads.length;
		while(_g < _g1) {
			var pad = sysGamepads[_g++];
			if(pad != null) {
				kha_SystemImpl.gamepads[pad.index].connected = true;
			}
		}
	}
	if(kha_SystemImpl.ie) {
		kha_SystemImpl.pressedKeys = [];
		var _g = 0;
		while(_g < 256) {
			++_g;
			kha_SystemImpl.pressedKeys.push(false);
		}
		var _g = 0;
		while(_g < 256) {
			++_g;
			kha_SystemImpl.pressedKeys.push(null);
		}
	}
	var onCopy = function(e) {
		if(kha_System.copyListener != null) {
			var data = kha_System.copyListener();
			if(data != null) {
				e.clipboardData.setData("text/plain",data);
			}
			e.preventDefault();
		}
	};
	var onCut = function(e) {
		if(kha_System.cutListener != null) {
			var data = kha_System.cutListener();
			if(data != null) {
				e.clipboardData.setData("text/plain",data);
			}
			e.preventDefault();
		}
	};
	var onPaste = function(e) {
		if(kha_System.pasteListener != null) {
			var onPaste = e.clipboardData.getData("text/plain");
			kha_System.pasteListener(onPaste);
			e.preventDefault();
		}
	};
	var document = window.document;
	document.addEventListener("copy",onCopy);
	document.addEventListener("cut",onCut);
	document.addEventListener("paste",onPaste);
	document.title = kha_SystemImpl.options.title;
	kha_CanvasImage.init();
	kha_Scheduler.init();
	kha_SystemImpl.loadFinished(defaultWidth,defaultHeight);
};
kha_SystemImpl.getMouse = function(num) {
	if(num != 0) {
		return null;
	}
	return kha_SystemImpl.mouse;
};
kha_SystemImpl.getKeyboard = function(num) {
	if(num != 0) {
		return null;
	}
	return kha_SystemImpl.keyboard;
};
kha_SystemImpl.checkGamepad = function(pad) {
	var _g = 0;
	var _g1 = pad.axes.length;
	while(_g < _g1) {
		var i = _g++;
		if(pad.axes[i] != null) {
			var axis = pad.axes[i];
			if(kha_SystemImpl.gamepadStates[pad.index].axes[i] != axis) {
				kha_SystemImpl.gamepadStates[pad.index].axes[i] = axis;
				kha_SystemImpl.gamepads[pad.index].sendAxisEvent(i,axis);
			}
		}
	}
	var _g = 0;
	var _g1 = pad.buttons.length;
	while(_g < _g1) {
		var i = _g++;
		if(pad.buttons[i] != null) {
			if(kha_SystemImpl.gamepadStates[pad.index].buttons[i] != pad.buttons[i].value) {
				kha_SystemImpl.gamepadStates[pad.index].buttons[i] = pad.buttons[i].value;
				kha_SystemImpl.gamepads[pad.index].sendButtonEvent(i,pad.buttons[i].value);
			}
		}
	}
	if(pad.axes.length <= 4 && pad.buttons.length > 7) {
		kha_SystemImpl.gamepadStates[pad.index].axes[4] = pad.buttons[6].value;
		kha_SystemImpl.gamepads[pad.index].sendAxisEvent(4,pad.buttons[6].value);
		kha_SystemImpl.gamepadStates[pad.index].axes[5] = pad.buttons[7].value;
		kha_SystemImpl.gamepads[pad.index].sendAxisEvent(5,pad.buttons[7].value);
	}
};
kha_SystemImpl.getCanvasElement = function() {
	if(kha_SystemImpl.khanvas != null) {
		return kha_SystemImpl.khanvas;
	}
	return window.document.getElementById("fox");
};
kha_SystemImpl.loadFinished = function(defaultWidth,defaultHeight) {
	var canvas = kha_SystemImpl.getCanvasElement();
	canvas.style.cursor = "default";
	var gl = false;
	try {
		kha_SystemImpl.gl = canvas.getContext("webgl2",{ alpha : false, antialias : kha_SystemImpl.options.framebuffer.samplesPerPixel > 1, stencil : true});
		kha_SystemImpl.gl.pixelStorei(37441,1);
		kha_SystemImpl.halfFloat = { HALF_FLOAT_OES : 5131};
		kha_SystemImpl.depthTexture = { UNSIGNED_INT_24_8_WEBGL : 34042};
		kha_SystemImpl.drawBuffers = { COLOR_ATTACHMENT0_WEBGL : 36064};
		kha_SystemImpl.elementIndexUint = true;
		kha_SystemImpl.gl.getExtension("EXT_color_buffer_float");
		kha_SystemImpl.gl.getExtension("OES_texture_float_linear");
		kha_SystemImpl.gl.getExtension("OES_texture_half_float_linear");
		kha_SystemImpl.anisotropicFilter = kha_SystemImpl.gl.getExtension("EXT_texture_filter_anisotropic");
		if(kha_SystemImpl.anisotropicFilter == null) {
			kha_SystemImpl.anisotropicFilter = kha_SystemImpl.gl.getExtension("WEBKIT_EXT_texture_filter_anisotropic");
		}
		gl = true;
		kha_SystemImpl.gl2 = true;
		kha_Shaders.init();
	} catch( _g ) {
		haxe_Log.trace("Could not initialize WebGL 2, falling back to WebGL.",{ fileName : "kha/SystemImpl.hx", lineNumber : 392, className : "kha.SystemImpl", methodName : "loadFinished"});
	}
	if(!kha_SystemImpl.gl2) {
		try {
			kha_SystemImpl.gl = canvas.getContext("experimental-webgl",{ alpha : false, antialias : kha_SystemImpl.options.framebuffer.samplesPerPixel > 1, stencil : true});
			kha_SystemImpl.gl.pixelStorei(37441,1);
			kha_SystemImpl.gl.getExtension("OES_texture_float");
			kha_SystemImpl.gl.getExtension("OES_texture_float_linear");
			kha_SystemImpl.halfFloat = kha_SystemImpl.gl.getExtension("OES_texture_half_float");
			kha_SystemImpl.gl.getExtension("OES_texture_half_float_linear");
			kha_SystemImpl.depthTexture = kha_SystemImpl.gl.getExtension("WEBGL_depth_texture");
			kha_SystemImpl.gl.getExtension("EXT_shader_texture_lod");
			kha_SystemImpl.gl.getExtension("OES_standard_derivatives");
			kha_SystemImpl.anisotropicFilter = kha_SystemImpl.gl.getExtension("EXT_texture_filter_anisotropic");
			if(kha_SystemImpl.anisotropicFilter == null) {
				kha_SystemImpl.anisotropicFilter = kha_SystemImpl.gl.getExtension("WEBKIT_EXT_texture_filter_anisotropic");
			}
			kha_SystemImpl.drawBuffers = kha_SystemImpl.gl.getExtension("WEBGL_draw_buffers");
			kha_SystemImpl.elementIndexUint = kha_SystemImpl.gl.getExtension("OES_element_index_uint");
			gl = true;
			kha_Shaders.init();
		} catch( _g ) {
			haxe_Log.trace("Could not initialize WebGL, falling back to <canvas>.",{ fileName : "kha/SystemImpl.hx", lineNumber : 420, className : "kha.SystemImpl", methodName : "loadFinished"});
		}
	}
	kha_SystemImpl.setCanvas(canvas);
	kha_SystemImpl.window = new kha_Window(0,defaultWidth,defaultHeight,canvas);
	if(gl) {
		var g4 = new kha_js_graphics4_Graphics();
		kha_SystemImpl.frame = new kha_Framebuffer(0,null,null,g4);
		kha_SystemImpl.frame.init(new kha_graphics2_Graphics1(kha_SystemImpl.frame),new kha_js_graphics4_Graphics2(kha_SystemImpl.frame),g4);
	} else {
		kha_js_Font.Kravur = kha_Kravur; kha_Kravur = kha_js_Font;
		var g2 = new kha_js_CanvasGraphics(canvas.getContext("2d"));
		kha_SystemImpl.frame = new kha_Framebuffer(0,null,g2,null);
		kha_SystemImpl.frame.init(new kha_graphics2_Graphics1(kha_SystemImpl.frame),g2,null);
	}
	if(!kha_SystemImpl.mobile && kha_audio2_Audio._init()) {
		kha_SystemImpl._hasWebAudio = true;
		kha_audio2_Audio1._init();
	} else if(kha_SystemImpl.mobile) {
		kha_SystemImpl._hasWebAudio = false;
		kha_js_MobileWebAudio._init();
		kha_audio2_Audio1 = kha_js_MobileWebAudio;
	} else {
		kha_SystemImpl._hasWebAudio = false;
		kha_audio2_Audio1 = kha_js_AudioElementAudio;
	}
	kha_vr_VrInterface.instance = new kha_js_vr_VrInterface();
	canvas.focus();
	canvas.oncontextmenu = function(event) {
		event.stopPropagation();
		event.preventDefault();
	};
	canvas.onmousedown = kha_SystemImpl.mouseDown;
	canvas.onmousemove = kha_SystemImpl.mouseMove;
	if(kha_SystemImpl.keyboard != null) {
		canvas.onkeydown = kha_SystemImpl.keyDown;
		canvas.onkeyup = kha_SystemImpl.keyUp;
		canvas.onkeypress = kha_SystemImpl.keyPress;
	}
	canvas.onblur = kha_SystemImpl.onBlur;
	canvas.onfocus = kha_SystemImpl.onFocus;
	canvas.onmousewheel = canvas.onwheel = kha_SystemImpl.mouseWheel;
	canvas.onmouseleave = kha_SystemImpl.mouseLeave;
	canvas.addEventListener("wheel mousewheel",kha_SystemImpl.mouseWheel,false);
	canvas.addEventListener("touchstart",kha_SystemImpl.touchDown,false);
	canvas.addEventListener("touchend",kha_SystemImpl.touchUp,false);
	canvas.addEventListener("touchmove",kha_SystemImpl.touchMove,false);
	canvas.addEventListener("touchcancel",kha_SystemImpl.touchCancel,false);
	window.addEventListener("unload",function() {
		kha_System.shutdown();
	});
};
kha_SystemImpl.initAnimate = function(callback) {
	var canvas = kha_SystemImpl.getCanvasElement();
	var $window = window;
	var requestAnimationFrame = $window.requestAnimationFrame;
	if(requestAnimationFrame == null) {
		requestAnimationFrame = $window.mozRequestAnimationFrame;
	}
	if(requestAnimationFrame == null) {
		requestAnimationFrame = $window.webkitRequestAnimationFrame;
	}
	if(requestAnimationFrame == null) {
		requestAnimationFrame = $window.msRequestAnimationFrame;
	}
	var animate = null;
	animate = function(timestamp) {
		var $window = window;
		if(requestAnimationFrame == null) {
			$window.setTimeout(animate,16.666666666666668);
		} else {
			requestAnimationFrame(animate);
		}
		var sysGamepads = kha_SystemImpl.getGamepads();
		if(sysGamepads != null) {
			var _g = 0;
			var _g1 = sysGamepads.length;
			while(_g < _g1) {
				var pad = sysGamepads[_g++];
				if(pad != null) {
					kha_SystemImpl.checkGamepad(pad);
				}
			}
		}
		kha_Scheduler.executeFrame();
		if(canvas.getContext != null) {
			var displayWidth = canvas.clientWidth;
			var displayHeight = canvas.clientHeight;
			if(canvas.width != displayWidth || canvas.height != displayHeight) {
				canvas.width = displayWidth;
				canvas.height = displayHeight;
			}
			kha_System.render([kha_SystemImpl.frame]);
			if(kha_SystemImpl.gl != null) {
				kha_SystemImpl.gl.clearColor(1,1,1,1);
				kha_SystemImpl.gl.colorMask(false,false,false,true);
				kha_SystemImpl.gl.clear(16384);
				kha_SystemImpl.gl.colorMask(true,true,true,true);
			}
		}
	};
	var initialTimestamp = 0;
	var prevTimestamp = 0;
	var currentSamples = 0;
	var timeDiffs = [];
	var SAMPLE_COUNT = 90;
	var MEAN_TRUNCATION_CUTOFF = 0.33333333333333331;
	var roundToKnownRefreshRate = function(hz) {
		var rates = [{ low : 27, high : 33, target : 30},{ low : 57, high : 63, target : 60},{ low : 72, high : 78, target : 75},{ low : 87, high : 93, target : 90},{ low : 117, high : 123, target : 120},{ low : 141, high : 147, target : 144},{ low : 237, high : 243, target : 240},{ low : 337, high : 343, target : 340},{ low : 357, high : 363, target : 360}];
		var nearestHz = hz;
		var _g = 0;
		while(_g < rates.length) {
			var rate = rates[_g];
			++_g;
			if(hz >= rate.low && hz <= rate.high) {
				nearestHz = rate.target;
			}
		}
		return nearestHz;
	};
	var detectRefreshRate = null;
	detectRefreshRate = function(timestamp) {
		var $window = window;
		if(initialTimestamp == 0) {
			initialTimestamp = timestamp;
		}
		var timeDifferential = timestamp - prevTimestamp - initialTimestamp;
		prevTimestamp = timestamp - initialTimestamp;
		if(timeDifferential != 0) {
			timeDiffs.push(timeDifferential);
		}
		if(currentSamples < SAMPLE_COUNT) {
			currentSamples += 1;
			if(requestAnimationFrame == null) {
				$window.setTimeout(detectRefreshRate,16.666666666666668);
			} else {
				requestAnimationFrame(detectRefreshRate);
			}
		} else {
			haxe_ds_ArraySort.sort(timeDiffs,function(a,b) {
				return a - b;
			});
			var truncatedTimeDiffs = [];
			var cutoff = Math.round(timeDiffs.length * MEAN_TRUNCATION_CUTOFF);
			var _g = cutoff;
			var _g1 = timeDiffs.length - cutoff;
			while(_g < _g1) truncatedTimeDiffs.push(timeDiffs[_g++]);
			var total = 0;
			var _g = 0;
			while(_g < truncatedTimeDiffs.length) total += truncatedTimeDiffs[_g++];
			kha_SystemImpl.estimatedRefreshRate = roundToKnownRefreshRate(Math.round(1000 / (total / truncatedTimeDiffs.length)));
			kha_Scheduler.start();
			if(requestAnimationFrame == null) {
				$window.setTimeout(animate,16.666666666666668);
			} else {
				requestAnimationFrame(animate);
			}
			callback(kha_SystemImpl.window);
		}
	};
	if(requestAnimationFrame == null) {
		$window.setTimeout(detectRefreshRate,16.666666666666668);
	} else {
		requestAnimationFrame(detectRefreshRate);
	}
};
kha_SystemImpl.lockMouse = function() {
	if(($_=kha_SystemImpl.khanvas,$bind($_,$_.requestPointerLock))) {
		kha_SystemImpl.khanvas.requestPointerLock();
	} else if(kha_SystemImpl.khanvas.mozRequestPointerLock) {
		kha_SystemImpl.khanvas.mozRequestPointerLock();
	} else if(kha_SystemImpl.khanvas.webkitRequestPointerLock) {
		kha_SystemImpl.khanvas.webkitRequestPointerLock();
	}
};
kha_SystemImpl.unlockMouse = function() {
	if(document.exitPointerLock) {
		document.exitPointerLock();
	} else if(document.mozExitPointerLock) {
		document.mozExitPointerLock();
	} else if(document.webkitExitPointerLock) {
		document.webkitExitPointerLock();
	}
};
kha_SystemImpl.canLockMouse = function() {
	return 'pointerLockElement' in document ||
		'mozPointerLockElement' in document ||
		'webkitPointerLockElement' in document;
};
kha_SystemImpl.isMouseLocked = function() {
	return document.pointerLockElement === kha_SystemImpl.khanvas ||
			document.mozPointerLockElement === kha_SystemImpl.khanvas ||
			document.webkitPointerLockElement === kha_SystemImpl.khanvas;
};
kha_SystemImpl.notifyOfMouseLockChange = function(func,error) {
	window.document.addEventListener("pointerlockchange",func,false);
	window.document.addEventListener("mozpointerlockchange",func,false);
	window.document.addEventListener("webkitpointerlockchange",func,false);
	window.document.addEventListener("pointerlockerror",error,false);
	window.document.addEventListener("mozpointerlockerror",error,false);
	window.document.addEventListener("webkitpointerlockerror",error,false);
};
kha_SystemImpl.removeFromMouseLockChange = function(func,error) {
	window.document.removeEventListener("pointerlockchange",func,false);
	window.document.removeEventListener("mozpointerlockchange",func,false);
	window.document.removeEventListener("webkitpointerlockchange",func,false);
	window.document.removeEventListener("pointerlockerror",error,false);
	window.document.removeEventListener("mozpointerlockerror",error,false);
	window.document.removeEventListener("webkitpointerlockerror",error,false);
};
kha_SystemImpl.setMouseXY = function(event) {
	var rect = kha_SystemImpl.khanvas.getBoundingClientRect();
	var borderWidth = kha_SystemImpl.khanvas.clientLeft;
	var borderHeight = kha_SystemImpl.khanvas.clientTop;
	kha_SystemImpl.mouseX = (event.clientX - rect.left - borderWidth) * kha_SystemImpl.khanvas.width / (rect.width - 2 * borderWidth) | 0;
	kha_SystemImpl.mouseY = (event.clientY - rect.top - borderHeight) * kha_SystemImpl.khanvas.height / (rect.height - 2 * borderHeight) | 0;
};
kha_SystemImpl.unlockiOSSound = function() {
	if(!kha_SystemImpl.ios || kha_SystemImpl.iosSoundEnabled) {
		return;
	}
	var buffer = kha_js_MobileWebAudio._context.createBuffer(1,1,22050);
	var source = kha_js_MobileWebAudio._context.createBufferSource();
	source.buffer = buffer;
	source.connect(kha_js_MobileWebAudio._context.destination);
	source.start();
	source.stop();
	kha_SystemImpl.iosSoundEnabled = true;
};
kha_SystemImpl.unlockSound = function() {
	if(!kha_SystemImpl.soundEnabled) {
		var context = kha_audio2_Audio._context;
		if(context == null) {
			context = kha_audio2_Audio1._context;
		}
		if(context != null) {
			context.resume().then(function(c) {
				kha_SystemImpl.soundEnabled = true;
			}).catch(function(err) {
				haxe_Log.trace(err,{ fileName : "kha/SystemImpl.hx", lineNumber : 759, className : "kha.SystemImpl", methodName : "unlockSound"});
			});
		}
		kha_audio2_Audio.wakeChannels();
	}
	kha_SystemImpl.unlockiOSSound();
};
kha_SystemImpl.mouseLeave = function() {
	kha_SystemImpl.mouse.sendLeaveEvent(0);
};
kha_SystemImpl.mouseWheel = function(event) {
	kha_SystemImpl.unlockSound();
	kha_SystemImpl.insideInputEvent = true;
	var _g = kha_input_Mouse.wheelEventBlockBehavior;
	switch(_g._hx_index) {
	case 0:
		event.preventDefault();
		break;
	case 1:
		break;
	case 2:
		if(_g.func(event)) {
			event.preventDefault();
		}
		break;
	}
	if(event.deltaMode == 0) {
		if(event.deltaY < 0) {
			kha_SystemImpl.mouse.sendWheelEvent(0,-1);
		} else if(event.deltaY > 0) {
			kha_SystemImpl.mouse.sendWheelEvent(0,1);
		}
		kha_SystemImpl.insideInputEvent = false;
		return;
	}
	if(event.deltaMode == 1) {
		kha_SystemImpl.minimumScroll = Math.min(kha_SystemImpl.minimumScroll,Math.abs(event.deltaY)) | 0;
		kha_SystemImpl.mouse.sendWheelEvent(0,event.deltaY / kha_SystemImpl.minimumScroll | 0);
		kha_SystemImpl.insideInputEvent = false;
		return;
	}
	kha_SystemImpl.insideInputEvent = false;
};
kha_SystemImpl.mouseDown = function(event) {
	kha_SystemImpl.insideInputEvent = true;
	kha_SystemImpl.unlockSound();
	kha_SystemImpl.setMouseXY(event);
	if(event.which == 1) {
		kha_SystemImpl.mouse.sendDownEvent(0,0,kha_SystemImpl.mouseX,kha_SystemImpl.mouseY);
		if(kha_SystemImpl.khanvas.setCapture != null) {
			kha_SystemImpl.khanvas.setCapture();
		} else {
			kha_SystemImpl.khanvas.ownerDocument.addEventListener("mousemove",kha_SystemImpl.documentMouseMove,true);
		}
		kha_SystemImpl.khanvas.ownerDocument.addEventListener("mouseup",kha_SystemImpl.mouseLeftUp);
	} else if(event.which == 2) {
		kha_SystemImpl.mouse.sendDownEvent(0,2,kha_SystemImpl.mouseX,kha_SystemImpl.mouseY);
		kha_SystemImpl.khanvas.ownerDocument.addEventListener("mouseup",kha_SystemImpl.mouseMiddleUp);
	} else if(event.which == 3) {
		kha_SystemImpl.mouse.sendDownEvent(0,1,kha_SystemImpl.mouseX,kha_SystemImpl.mouseY);
		kha_SystemImpl.khanvas.ownerDocument.addEventListener("mouseup",kha_SystemImpl.mouseRightUp);
	} else if(event.which == 4) {
		kha_SystemImpl.mouse.sendDownEvent(0,3,kha_SystemImpl.mouseX,kha_SystemImpl.mouseY);
		kha_SystemImpl.khanvas.ownerDocument.addEventListener("mouseup",kha_SystemImpl.mouseBackUp);
	} else if(event.which == 5) {
		kha_SystemImpl.mouse.sendDownEvent(0,4,kha_SystemImpl.mouseX,kha_SystemImpl.mouseY);
		kha_SystemImpl.khanvas.ownerDocument.addEventListener("mouseup",kha_SystemImpl.mouseForwardUp);
	}
	kha_SystemImpl.insideInputEvent = false;
};
kha_SystemImpl.mouseLeftUp = function(event) {
	kha_SystemImpl.unlockSound();
	if(event.which != 1) {
		return;
	}
	kha_SystemImpl.insideInputEvent = true;
	kha_SystemImpl.khanvas.ownerDocument.removeEventListener("mouseup",kha_SystemImpl.mouseLeftUp);
	if(kha_SystemImpl.khanvas.releaseCapture != null) {
		kha_SystemImpl.khanvas.ownerDocument.releaseCapture();
	} else {
		kha_SystemImpl.khanvas.ownerDocument.removeEventListener("mousemove",kha_SystemImpl.documentMouseMove,true);
	}
	kha_SystemImpl.mouse.sendUpEvent(0,0,kha_SystemImpl.mouseX,kha_SystemImpl.mouseY);
	kha_SystemImpl.insideInputEvent = false;
};
kha_SystemImpl.mouseMiddleUp = function(event) {
	kha_SystemImpl.unlockSound();
	if(event.which != 2) {
		return;
	}
	kha_SystemImpl.insideInputEvent = true;
	kha_SystemImpl.khanvas.ownerDocument.removeEventListener("mouseup",kha_SystemImpl.mouseMiddleUp);
	kha_SystemImpl.mouse.sendUpEvent(0,2,kha_SystemImpl.mouseX,kha_SystemImpl.mouseY);
	kha_SystemImpl.insideInputEvent = false;
};
kha_SystemImpl.mouseRightUp = function(event) {
	kha_SystemImpl.unlockSound();
	if(event.which != 3) {
		return;
	}
	kha_SystemImpl.insideInputEvent = true;
	kha_SystemImpl.khanvas.ownerDocument.removeEventListener("mouseup",kha_SystemImpl.mouseRightUp);
	kha_SystemImpl.mouse.sendUpEvent(0,1,kha_SystemImpl.mouseX,kha_SystemImpl.mouseY);
	kha_SystemImpl.insideInputEvent = false;
};
kha_SystemImpl.mouseBackUp = function(event) {
	kha_SystemImpl.unlockSound();
	if(event.which != 4) {
		return;
	}
	kha_SystemImpl.insideInputEvent = true;
	kha_SystemImpl.khanvas.ownerDocument.removeEventListener("mouseup",kha_SystemImpl.mouseBackUp);
	kha_SystemImpl.mouse.sendUpEvent(0,3,kha_SystemImpl.mouseX,kha_SystemImpl.mouseY);
	kha_SystemImpl.insideInputEvent = false;
};
kha_SystemImpl.mouseForwardUp = function(event) {
	kha_SystemImpl.unlockSound();
	if(event.which != 5) {
		return;
	}
	kha_SystemImpl.insideInputEvent = true;
	kha_SystemImpl.khanvas.ownerDocument.removeEventListener("mouseup",kha_SystemImpl.mouseForwardUp);
	kha_SystemImpl.mouse.sendUpEvent(0,4,kha_SystemImpl.mouseX,kha_SystemImpl.mouseY);
	kha_SystemImpl.insideInputEvent = false;
};
kha_SystemImpl.documentMouseMove = function(event) {
	event.stopPropagation();
	kha_SystemImpl.mouseMove(event);
};
kha_SystemImpl.mouseMove = function(event) {
	kha_SystemImpl.insideInputEvent = true;
	var lastMouseX = kha_SystemImpl.mouseX;
	var lastMouseY = kha_SystemImpl.mouseY;
	kha_SystemImpl.setMouseXY(event);
	var movementX = event.movementX;
	var movementY = event.movementY;
	if(event.movementX == null) {
		movementX = event.mozMovementX != null ? event.mozMovementX : event.webkitMovementX != null ? event.webkitMovementX : kha_SystemImpl.mouseX - lastMouseX;
		movementY = event.mozMovementY != null ? event.mozMovementY : event.webkitMovementY != null ? event.webkitMovementY : kha_SystemImpl.mouseY - lastMouseY;
	}
	if(kha_SystemImpl.firefox) {
		movementX = movementX * window.devicePixelRatio | 0;
		movementY = movementY * window.devicePixelRatio | 0;
	}
	kha_SystemImpl.mouse.sendMoveEvent(0,kha_SystemImpl.mouseX,kha_SystemImpl.mouseY,movementX,movementY);
	kha_SystemImpl.insideInputEvent = false;
};
kha_SystemImpl.setTouchXY = function(touch) {
	var rect = kha_SystemImpl.khanvas.getBoundingClientRect();
	var borderWidth = kha_SystemImpl.khanvas.clientLeft;
	var borderHeight = kha_SystemImpl.khanvas.clientTop;
	kha_SystemImpl.touchX = (touch.clientX - rect.left - borderWidth) * kha_SystemImpl.khanvas.width / (rect.width - 2 * borderWidth) | 0;
	kha_SystemImpl.touchY = (touch.clientY - rect.top - borderHeight) * kha_SystemImpl.khanvas.height / (rect.height - 2 * borderHeight) | 0;
};
kha_SystemImpl.touchDown = function(event) {
	kha_SystemImpl.insideInputEvent = true;
	kha_SystemImpl.unlockSound();
	event.stopPropagation();
	var _g = kha_input_Surface.touchDownEventBlockBehavior;
	switch(_g._hx_index) {
	case 0:
		event.preventDefault();
		break;
	case 1:
		break;
	case 2:
		if(_g.func(event)) {
			event.preventDefault();
		}
		break;
	}
	var index = 0;
	var _g = 0;
	var _g1 = event.changedTouches;
	while(_g < _g1.length) {
		var touch = _g1[_g];
		++_g;
		var id = touch.identifier;
		if(kha_SystemImpl.ios) {
			id = kha_SystemImpl.iosTouchs.indexOf(-1);
			if(id == -1) {
				id = kha_SystemImpl.iosTouchs.length;
			}
			kha_SystemImpl.iosTouchs[id] = touch.identifier;
		}
		kha_SystemImpl.setTouchXY(touch);
		kha_SystemImpl.mouse.sendDownEvent(0,0,kha_SystemImpl.touchX,kha_SystemImpl.touchY);
		kha_SystemImpl.surface.sendTouchStartEvent(id,kha_SystemImpl.touchX,kha_SystemImpl.touchY);
		if(index == 0) {
			kha_SystemImpl.lastFirstTouchX = kha_SystemImpl.touchX;
			kha_SystemImpl.lastFirstTouchY = kha_SystemImpl.touchY;
		}
		++index;
	}
	kha_SystemImpl.insideInputEvent = false;
};
kha_SystemImpl.touchUp = function(event) {
	kha_SystemImpl.insideInputEvent = true;
	kha_SystemImpl.unlockSound();
	var _g = 0;
	var _g1 = event.changedTouches;
	while(_g < _g1.length) {
		var touch = _g1[_g];
		++_g;
		var id = touch.identifier;
		if(kha_SystemImpl.ios) {
			id = kha_SystemImpl.iosTouchs.indexOf(id);
			kha_SystemImpl.iosTouchs[id] = -1;
		}
		kha_SystemImpl.setTouchXY(touch);
		kha_SystemImpl.mouse.sendUpEvent(0,0,kha_SystemImpl.touchX,kha_SystemImpl.touchY);
		kha_SystemImpl.surface.sendTouchEndEvent(id,kha_SystemImpl.touchX,kha_SystemImpl.touchY);
	}
	kha_SystemImpl.insideInputEvent = false;
};
kha_SystemImpl.touchMove = function(event) {
	kha_SystemImpl.insideInputEvent = true;
	kha_SystemImpl.unlockSound();
	var index = 0;
	var _g = 0;
	var _g1 = event.changedTouches;
	while(_g < _g1.length) {
		var touch = _g1[_g];
		++_g;
		kha_SystemImpl.setTouchXY(touch);
		if(index == 0) {
			var movementX = kha_SystemImpl.touchX - kha_SystemImpl.lastFirstTouchX;
			var movementY = kha_SystemImpl.touchY - kha_SystemImpl.lastFirstTouchY;
			kha_SystemImpl.lastFirstTouchX = kha_SystemImpl.touchX;
			kha_SystemImpl.lastFirstTouchY = kha_SystemImpl.touchY;
			kha_SystemImpl.mouse.sendMoveEvent(0,kha_SystemImpl.touchX,kha_SystemImpl.touchY,movementX,movementY);
		}
		var id = touch.identifier;
		if(kha_SystemImpl.ios) {
			id = kha_SystemImpl.iosTouchs.indexOf(id);
		}
		kha_SystemImpl.surface.sendMoveEvent(id,kha_SystemImpl.touchX,kha_SystemImpl.touchY);
		++index;
	}
	kha_SystemImpl.insideInputEvent = false;
};
kha_SystemImpl.touchCancel = function(event) {
	kha_SystemImpl.insideInputEvent = true;
	kha_SystemImpl.unlockSound();
	var _g = 0;
	var _g1 = event.changedTouches;
	while(_g < _g1.length) {
		var touch = _g1[_g];
		++_g;
		var id = touch.identifier;
		if(kha_SystemImpl.ios) {
			id = kha_SystemImpl.iosTouchs.indexOf(id);
		}
		kha_SystemImpl.setTouchXY(touch);
		kha_SystemImpl.mouse.sendUpEvent(0,0,kha_SystemImpl.touchX,kha_SystemImpl.touchY);
		kha_SystemImpl.surface.sendTouchEndEvent(id,kha_SystemImpl.touchX,kha_SystemImpl.touchY);
	}
	kha_SystemImpl.iosTouchs = [];
	kha_SystemImpl.insideInputEvent = false;
};
kha_SystemImpl.onBlur = function() {
	kha_System.background();
};
kha_SystemImpl.onFocus = function() {
	kha_System.foreground();
};
kha_SystemImpl.keyDown = function(event) {
	kha_SystemImpl.insideInputEvent = true;
	kha_SystemImpl.unlockSound();
	var _g = kha_input_Keyboard.keyBehavior;
	switch(_g._hx_index) {
	case 0:
		kha_SystemImpl.defaultKeyBlock(event);
		break;
	case 1:
		event.preventDefault();
		break;
	case 2:
		break;
	case 3:
		if(_g.func(event.keyCode)) {
			event.preventDefault();
		}
		break;
	}
	event.stopPropagation();
	if(kha_SystemImpl.ie) {
		if(kha_SystemImpl.pressedKeys[event.keyCode]) {
			event.preventDefault();
			return;
		}
		kha_SystemImpl.pressedKeys[event.keyCode] = true;
	} else if(event.repeat) {
		event.preventDefault();
		return;
	}
	kha_SystemImpl.keyboard.sendDownEvent(kha_SystemImpl.fixedKeyCode(event));
	kha_SystemImpl.insideInputEvent = false;
};
kha_SystemImpl.fixedKeyCode = function(event) {
	switch(event.keyCode) {
	case 91:case 93:
		return 224;
	case 186:
		return 59;
	case 187:
		return 61;
	case 189:
		return 173;
	default:
		return event.keyCode;
	}
};
kha_SystemImpl.defaultKeyBlock = function(e) {
	if(e.ctrlKey || e.metaKey) {
		if(e.keyCode == 67 || e.keyCode == 88 || e.keyCode == 86) {
			return;
		}
		if(e.metaKey && e.keyCode == 81) {
			return;
		}
		e.preventDefault();
		return;
	}
	if(e.keyCode >= 112 && e.keyCode <= 123) {
		return;
	}
	if(e.key == null || e.key.length == 1) {
		return;
	}
	e.preventDefault();
};
kha_SystemImpl.keyUp = function(event) {
	kha_SystemImpl.insideInputEvent = true;
	kha_SystemImpl.unlockSound();
	event.preventDefault();
	event.stopPropagation();
	if(kha_SystemImpl.ie) {
		kha_SystemImpl.pressedKeys[event.keyCode] = false;
	}
	kha_SystemImpl.keyboard.sendUpEvent(kha_SystemImpl.fixedKeyCode(event));
	kha_SystemImpl.insideInputEvent = false;
};
kha_SystemImpl.keyPress = function(event) {
	kha_SystemImpl.insideInputEvent = true;
	kha_SystemImpl.unlockSound();
	if(event.which == 0) {
		return;
	}
	event.preventDefault();
	event.stopPropagation();
	var code = event.which;
	kha_SystemImpl.keyboard.sendPressEvent(String.fromCodePoint(code));
	kha_SystemImpl.insideInputEvent = false;
};
kha_SystemImpl.getGamepadId = function(index) {
	var sysGamepads = kha_SystemImpl.getGamepads();
	if(sysGamepads != null && sysGamepads[index]) {
		return sysGamepads[index].id;
	}
	return "unknown";
};
kha_SystemImpl.getGamepadVendor = function(index) {
	return "unknown";
};
kha_SystemImpl.getGamepads = function() {
	if(kha_SystemImpl.chrome && kha_vr_VrInterface.instance != null && kha_vr_VrInterface.instance.IsVrEnabled()) {
		return null;
	}
	if(navigator.getGamepads) {
		return $global.navigator.getGamepads();
	} else {
		return null;
	}
};
var kha_Video = function() {
};
$hxClasses["kha.Video"] = kha_Video;
kha_Video.__name__ = "kha.Video";
kha_Video.__interfaces__ = [kha_Resource];
kha_Video.prototype = {
	width: function() {
		return 100;
	}
	,height: function() {
		return 100;
	}
	,play: function(loop) {
		if(loop == null) {
			loop = false;
		}
	}
	,pause: function() {
	}
	,stop: function() {
	}
	,getLength: function() {
		return 0;
	}
	,getCurrentPos: function() {
		return 0;
	}
	,set_position: function(value) {
		return 0;
	}
	,setVolume: function(volume) {
	}
	,isFinished: function() {
		return this.getCurrentPos() >= this.getLength();
	}
	,unload: function() {
	}
	,__class__: kha_Video
	,__properties__: {set_position:"set_position"}
};
var kha_WebGLImage = function(width,height,format,renderTarget,depthStencilFormat,samples) {
	this.MSAAFrameBuffer = null;
	this.depthTexture = null;
	this.texture = null;
	this.renderBuffer = null;
	this.frameBuffer = null;
	this.myWidth = width;
	this.myHeight = height;
	this.myFormat = format;
	this.renderTarget = renderTarget;
	this.samples = samples;
	this.image = null;
	this.video = null;
	this.depthStencilFormat = depthStencilFormat;
	kha_WebGLImage.init();
	if(renderTarget) {
		this.createTexture();
	}
};
$hxClasses["kha.WebGLImage"] = kha_WebGLImage;
kha_WebGLImage.__name__ = "kha.WebGLImage";
kha_WebGLImage.init = function() {
	if(kha_WebGLImage.context == null) {
		kha_WebGLImage.canvas = window.document.createElement("canvas");
		if(kha_WebGLImage.canvas != null) {
			kha_WebGLImage.context = kha_WebGLImage.canvas.getContext("2d");
			kha_WebGLImage.canvas.width = 4096;
			kha_WebGLImage.canvas.height = 4096;
			kha_WebGLImage.context.globalCompositeOperation = "copy";
		}
	}
};
kha_WebGLImage.formatByteSize = function(format) {
	switch(format) {
	case 0:
		return 4;
	case 1:
		return 1;
	case 2:
		return 16;
	case 3:
		return 2;
	case 4:
		return 8;
	case 5:
		return 4;
	case 6:
		return 2;
	default:
		return 4;
	}
};
kha_WebGLImage.__super__ = kha_Image;
kha_WebGLImage.prototype = $extend(kha_Image.prototype,{
	image: null
	,video: null
	,myWidth: null
	,myHeight: null
	,myFormat: null
	,renderTarget: null
	,samples: null
	,frameBuffer: null
	,renderBuffer: null
	,texture: null
	,depthTexture: null
	,MSAAFrameBuffer: null
	,MSAAColorBuffer: null
	,MSAADepthBuffer: null
	,graphics2: null
	,graphics4: null
	,depthStencilFormat: null
	,get_g2: function() {
		if(this.graphics2 == null) {
			this.graphics2 = new kha_js_graphics4_Graphics2(this);
		}
		return this.graphics2;
	}
	,get_g4: function() {
		if(this.graphics4 == null) {
			this.graphics4 = new kha_js_graphics4_Graphics(this);
		}
		return this.graphics4;
	}
	,get_width: function() {
		return this.myWidth;
	}
	,get_height: function() {
		return this.myHeight;
	}
	,get_realWidth: function() {
		return this.myWidth;
	}
	,get_realHeight: function() {
		return this.myHeight;
	}
	,createTexture: function() {
		if(kha_SystemImpl.gl == null) {
			return;
		}
		this.texture = kha_SystemImpl.gl.createTexture();
		kha_SystemImpl.gl.bindTexture(3553,this.texture);
		kha_SystemImpl.gl.texParameteri(3553,10240,9729);
		kha_SystemImpl.gl.texParameteri(3553,10241,9729);
		kha_SystemImpl.gl.texParameteri(3553,10242,33071);
		kha_SystemImpl.gl.texParameteri(3553,10243,33071);
		if(this.renderTarget) {
			this.frameBuffer = kha_SystemImpl.gl.createFramebuffer();
			kha_SystemImpl.gl.bindFramebuffer(36160,this.frameBuffer);
			switch(this.myFormat) {
			case 0:
				kha_SystemImpl.gl.texImage2D(3553,0,6408,this.get_realWidth(),this.get_realHeight(),0,6408,5121,null);
				break;
			case 2:
				kha_SystemImpl.gl.texImage2D(3553,0,kha_SystemImpl.gl2 ? 34836 : 6408,this.get_realWidth(),this.get_realHeight(),0,6408,5126,null);
				break;
			case 3:
				kha_SystemImpl.gl.texImage2D(3553,0,kha_SystemImpl.gl2 ? 33189 : 6402,this.get_realWidth(),this.get_realHeight(),0,6402,5123,null);
				break;
			case 4:
				kha_SystemImpl.gl.texImage2D(3553,0,kha_SystemImpl.gl2 ? 34842 : 6408,this.get_realWidth(),this.get_realHeight(),0,6408,kha_SystemImpl.halfFloat.HALF_FLOAT_OES,null);
				break;
			case 5:
				kha_SystemImpl.gl.texImage2D(3553,0,kha_SystemImpl.gl2 ? 33326 : 6406,this.get_realWidth(),this.get_realHeight(),0,kha_SystemImpl.gl2 ? 6403 : 6406,5126,null);
				break;
			case 6:
				kha_SystemImpl.gl.texImage2D(3553,0,kha_SystemImpl.gl2 ? 33325 : 6406,this.get_realWidth(),this.get_realHeight(),0,kha_SystemImpl.gl2 ? 6403 : 6406,kha_SystemImpl.halfFloat.HALF_FLOAT_OES,null);
				break;
			default:
				kha_SystemImpl.gl.texImage2D(3553,0,6408,this.get_realWidth(),this.get_realHeight(),0,6408,5121,null);
			}
			if(this.myFormat == 3) {
				kha_SystemImpl.gl.texParameteri(3553,10240,9728);
				kha_SystemImpl.gl.texParameteri(3553,10241,9728);
				kha_SystemImpl.gl.framebufferTexture2D(36160,36096,3553,this.texture,0);
				if(!kha_SystemImpl.gl2) {
					var colortex = kha_SystemImpl.gl.createTexture();
					kha_SystemImpl.gl.bindTexture(3553,colortex);
					kha_SystemImpl.gl.texImage2D(3553,0,6408,this.get_realWidth(),this.get_realHeight(),0,6408,5121,null);
					kha_SystemImpl.gl.framebufferTexture2D(36160,36064,3553,colortex,0);
					kha_SystemImpl.gl.bindTexture(3553,this.texture);
				}
			} else {
				if(this.samples > 1 && kha_SystemImpl.gl2) {
					this.MSAAFrameBuffer = kha_SystemImpl.gl.createFramebuffer();
					this.MSAAColorBuffer = kha_SystemImpl.gl.createRenderbuffer();
					kha_SystemImpl.gl.bindRenderbuffer(36161,this.MSAAColorBuffer);
					var MSAAFormat;
					switch(this.myFormat) {
					case 0:
						MSAAFormat = kha_SystemImpl.gl.RGBA8;
						break;
					case 2:
						MSAAFormat = kha_SystemImpl.gl.RGBA32F;
						break;
					case 4:
						MSAAFormat = kha_SystemImpl.gl.RGBA16F;
						break;
					case 5:
						MSAAFormat = 33326;
						break;
					case 6:
						MSAAFormat = 33325;
						break;
					default:
						MSAAFormat = kha_SystemImpl.gl.RGBA8;
					}
					kha_SystemImpl.gl.renderbufferStorageMultisample(36161,this.samples,MSAAFormat,this.get_realWidth(),this.get_realHeight());
					kha_SystemImpl.gl.bindFramebuffer(36160,this.frameBuffer);
					kha_SystemImpl.gl.framebufferRenderbuffer(36160,36064,36161,this.MSAAColorBuffer);
					kha_SystemImpl.gl.bindFramebuffer(36160,this.MSAAFrameBuffer);
				}
				kha_SystemImpl.gl.framebufferTexture2D(36160,36064,3553,this.texture,0);
				kha_SystemImpl.gl.bindFramebuffer(36160,null);
			}
			this.initDepthStencilBuffer(this.depthStencilFormat);
			var e = kha_SystemImpl.gl.checkFramebufferStatus(36160);
			if(e != 36053) {
				haxe_Log.trace("checkframebufferStatus error " + e,{ fileName : "kha/WebGLImage.hx", lineNumber : 270, className : "kha.WebGLImage", methodName : "createTexture"});
			}
			kha_SystemImpl.gl.bindRenderbuffer(36161,null);
			kha_SystemImpl.gl.bindFramebuffer(36160,null);
		} else if(this.video != null) {
			kha_SystemImpl.gl.texImage2D(3553,0,6408,6408,5121,this.video);
		} else {
			switch(this.myFormat) {
			case 0:
				if(((this.image) instanceof Uint8Array)) {
					kha_SystemImpl.gl.texImage2D(3553,0,6408,this.myWidth,this.myHeight,0,6408,5121,this.image);
				} else {
					kha_SystemImpl.gl.texImage2D(3553,0,6408,6408,5121,this.image);
				}
				break;
			case 1:
				kha_SystemImpl.gl.texImage2D(3553,0,6409,this.myWidth,this.myHeight,0,6409,5121,this.image);
				break;
			case 2:
				kha_SystemImpl.gl.texImage2D(3553,0,kha_SystemImpl.gl2 ? 34836 : 6408,this.myWidth,this.myHeight,0,6408,5126,this.image);
				break;
			case 4:
				kha_SystemImpl.gl.texImage2D(3553,0,kha_SystemImpl.gl2 ? 34842 : 6408,this.myWidth,this.myHeight,0,6408,kha_SystemImpl.halfFloat.HALF_FLOAT_OES,this.image);
				break;
			case 5:
				kha_SystemImpl.gl.texImage2D(3553,0,kha_SystemImpl.gl2 ? 33326 : 6406,this.myWidth,this.myHeight,0,kha_SystemImpl.gl2 ? 6403 : 6406,5126,this.image);
				break;
			case 6:
				kha_SystemImpl.gl.texImage2D(3553,0,kha_SystemImpl.gl2 ? 33325 : 6406,this.myWidth,this.myHeight,0,kha_SystemImpl.gl2 ? 6403 : 6406,kha_SystemImpl.halfFloat.HALF_FLOAT_OES,this.image);
				break;
			default:
				kha_SystemImpl.gl.texImage2D(3553,0,6408,6408,5121,this.image);
			}
		}
		kha_SystemImpl.gl.bindTexture(3553,null);
	}
	,initDepthStencilBuffer: function(depthStencilFormat) {
		switch(depthStencilFormat) {
		case 0:
			break;
		case 1:case 5:
			if(kha_SystemImpl.depthTexture == null) {
				this.renderBuffer = kha_SystemImpl.gl.createRenderbuffer();
				kha_SystemImpl.gl.bindRenderbuffer(36161,this.renderBuffer);
				kha_SystemImpl.gl.renderbufferStorage(36161,33189,this.get_realWidth(),this.get_realHeight());
				kha_SystemImpl.gl.framebufferRenderbuffer(36160,36096,36161,this.renderBuffer);
			} else {
				this.depthTexture = kha_SystemImpl.gl.createTexture();
				kha_SystemImpl.gl.bindTexture(3553,this.depthTexture);
				if(depthStencilFormat == 1) {
					kha_SystemImpl.gl.texImage2D(3553,0,kha_SystemImpl.gl2 ? 33190 : 6402,this.get_realWidth(),this.get_realHeight(),0,6402,5125,null);
				} else {
					kha_SystemImpl.gl.texImage2D(3553,0,kha_SystemImpl.gl2 ? 33189 : 6402,this.get_realWidth(),this.get_realHeight(),0,6402,5123,null);
				}
				kha_SystemImpl.gl.texParameteri(3553,10240,9728);
				kha_SystemImpl.gl.texParameteri(3553,10241,9728);
				kha_SystemImpl.gl.texParameteri(3553,10242,33071);
				kha_SystemImpl.gl.texParameteri(3553,10243,33071);
				kha_SystemImpl.gl.bindFramebuffer(36160,this.frameBuffer);
				if(this.samples > 1 && kha_SystemImpl.gl2) {
					this.MSAADepthBuffer = kha_SystemImpl.gl.createRenderbuffer();
					kha_SystemImpl.gl.bindRenderbuffer(36161,this.MSAADepthBuffer);
					if(depthStencilFormat == 1) {
						kha_SystemImpl.gl.renderbufferStorageMultisample(36161,this.samples,33190,this.get_realWidth(),this.get_realHeight());
					} else {
						kha_SystemImpl.gl.renderbufferStorageMultisample(36161,this.samples,33189,this.get_realWidth(),this.get_realHeight());
					}
					kha_SystemImpl.gl.bindFramebuffer(36160,this.frameBuffer);
					kha_SystemImpl.gl.framebufferRenderbuffer(36160,36096,36161,this.MSAADepthBuffer);
					kha_SystemImpl.gl.bindFramebuffer(36160,this.MSAAFrameBuffer);
				}
				kha_SystemImpl.gl.framebufferTexture2D(36160,36096,3553,this.depthTexture,0);
				kha_SystemImpl.gl.bindFramebuffer(36160,null);
			}
			break;
		case 2:case 3:case 4:
			if(kha_SystemImpl.depthTexture == null) {
				this.renderBuffer = kha_SystemImpl.gl.createRenderbuffer();
				kha_SystemImpl.gl.bindRenderbuffer(36161,this.renderBuffer);
				kha_SystemImpl.gl.renderbufferStorage(36161,34041,this.get_realWidth(),this.get_realHeight());
				kha_SystemImpl.gl.framebufferRenderbuffer(36160,33306,36161,this.renderBuffer);
			} else {
				this.depthTexture = kha_SystemImpl.gl.createTexture();
				kha_SystemImpl.gl.bindTexture(3553,this.depthTexture);
				kha_SystemImpl.gl.texImage2D(3553,0,kha_SystemImpl.gl2 ? 35056 : 34041,this.get_realWidth(),this.get_realHeight(),0,34041,kha_SystemImpl.depthTexture.UNSIGNED_INT_24_8_WEBGL,null);
				kha_SystemImpl.gl.texParameteri(3553,10240,9728);
				kha_SystemImpl.gl.texParameteri(3553,10241,9728);
				kha_SystemImpl.gl.texParameteri(3553,10242,33071);
				kha_SystemImpl.gl.texParameteri(3553,10243,33071);
				kha_SystemImpl.gl.bindFramebuffer(36160,this.frameBuffer);
				if(this.samples > 1 && kha_SystemImpl.gl2) {
					this.MSAADepthBuffer = kha_SystemImpl.gl.createRenderbuffer();
					kha_SystemImpl.gl.bindRenderbuffer(36161,this.MSAADepthBuffer);
					kha_SystemImpl.gl.renderbufferStorageMultisample(36161,this.samples,35056,this.get_realWidth(),this.get_realHeight());
					kha_SystemImpl.gl.bindFramebuffer(36160,this.frameBuffer);
					kha_SystemImpl.gl.framebufferRenderbuffer(36160,33306,36161,this.MSAADepthBuffer);
					kha_SystemImpl.gl.bindFramebuffer(36160,this.MSAAFrameBuffer);
				}
				kha_SystemImpl.gl.framebufferTexture2D(36160,33306,3553,this.depthTexture,0);
			}
			break;
		}
	}
	,set: function(stage) {
		kha_SystemImpl.gl.activeTexture(33984 + stage);
		kha_SystemImpl.gl.bindTexture(3553,this.texture);
		if(this.video != null) {
			kha_SystemImpl.gl.texImage2D(3553,0,6408,6408,5121,this.video);
		}
	}
	,bytesToArray: function(bytes) {
		switch(this.myFormat) {
		case 0:case 1:
			return new Uint8Array(bytes.b.bufferValue);
		case 2:case 4:case 5:case 6:
			return new Float32Array(bytes.b.bufferValue);
		default:
			return new Uint8Array(bytes.b.bufferValue);
		}
	}
	,bytes: null
	,lock: function(level) {
		if(level == null) {
			level = 0;
		}
		this.bytes = new haxe_io_Bytes(new ArrayBuffer(kha_WebGLImage.formatByteSize(this.myFormat) * this.get_width() * this.get_height()));
		return this.bytes;
	}
	,unlock: function() {
		if(kha_SystemImpl.gl != null) {
			this.texture = kha_SystemImpl.gl.createTexture();
			kha_SystemImpl.gl.bindTexture(3553,this.texture);
			kha_SystemImpl.gl.texParameteri(3553,10240,9729);
			kha_SystemImpl.gl.texParameteri(3553,10241,9729);
			kha_SystemImpl.gl.texParameteri(3553,10242,33071);
			kha_SystemImpl.gl.texParameteri(3553,10243,33071);
			switch(this.myFormat) {
			case 0:
				kha_SystemImpl.gl.texImage2D(3553,0,6408,this.get_width(),this.get_height(),0,6408,5121,this.bytesToArray(this.bytes));
				break;
			case 1:
				kha_SystemImpl.gl.texImage2D(3553,0,6409,this.get_width(),this.get_height(),0,6409,5121,this.bytesToArray(this.bytes));
				if(kha_SystemImpl.gl.getError() == 1282) {
					var rgbaBytes = new haxe_io_Bytes(new ArrayBuffer(this.get_width() * this.get_height() * 4));
					var _g = 0;
					var _g1 = this.get_height();
					while(_g < _g1) {
						var y = _g++;
						var _g2 = 0;
						var _g3 = this.get_width();
						while(_g2 < _g3) {
							var x = _g2++;
							var _this = this.bytes;
							var pos = y * this.get_width() + x;
							var value = _this.b[pos];
							var pos1 = y * this.get_width() * 4 + x * 4;
							rgbaBytes.b[pos1] = value;
							var pos2 = y * this.get_width() * 4 + x * 4 + 1;
							rgbaBytes.b[pos2] = value;
							var pos3 = y * this.get_width() * 4 + x * 4 + 2;
							rgbaBytes.b[pos3] = value;
							var pos4 = y * this.get_width() * 4 + x * 4 + 3;
							rgbaBytes.b[pos4] = 255;
						}
					}
					kha_SystemImpl.gl.texImage2D(3553,0,6408,this.get_width(),this.get_height(),0,6408,5121,this.bytesToArray(rgbaBytes));
				}
				break;
			case 2:
				kha_SystemImpl.gl.texImage2D(3553,0,kha_SystemImpl.gl2 ? 34836 : 6408,this.get_width(),this.get_height(),0,6408,5126,this.bytesToArray(this.bytes));
				break;
			case 4:
				kha_SystemImpl.gl.texImage2D(3553,0,kha_SystemImpl.gl2 ? 34842 : 6408,this.get_width(),this.get_height(),0,6408,kha_SystemImpl.halfFloat.HALF_FLOAT_OES,this.bytesToArray(this.bytes));
				break;
			case 5:
				kha_SystemImpl.gl.texImage2D(3553,0,kha_SystemImpl.gl2 ? 33326 : 6406,this.get_width(),this.get_height(),0,kha_SystemImpl.gl2 ? 6403 : 6406,5126,this.bytesToArray(this.bytes));
				break;
			case 6:
				kha_SystemImpl.gl.texImage2D(3553,0,kha_SystemImpl.gl2 ? 33325 : 6406,this.get_width(),this.get_height(),0,kha_SystemImpl.gl2 ? 6403 : 6406,kha_SystemImpl.halfFloat.HALF_FLOAT_OES,this.bytesToArray(this.bytes));
				break;
			default:
				kha_SystemImpl.gl.texImage2D(3553,0,6408,this.get_width(),this.get_height(),0,6408,5121,this.bytesToArray(this.bytes));
			}
			kha_SystemImpl.gl.bindTexture(3553,null);
			this.bytes = null;
		}
	}
	,unload: function() {
		if(this.texture != null) {
			kha_SystemImpl.gl.deleteTexture(this.texture);
		}
		if(this.depthTexture != null) {
			kha_SystemImpl.gl.deleteTexture(this.depthTexture);
		}
		if(this.frameBuffer != null) {
			kha_SystemImpl.gl.deleteFramebuffer(this.frameBuffer);
		}
		if(this.renderBuffer != null) {
			kha_SystemImpl.gl.deleteRenderbuffer(this.renderBuffer);
		}
		if(this.MSAAFrameBuffer != null) {
			kha_SystemImpl.gl.deleteFramebuffer(this.MSAAFrameBuffer);
		}
		if(this.MSAAColorBuffer != null) {
			kha_SystemImpl.gl.deleteRenderbuffer(this.MSAAColorBuffer);
		}
		if(this.MSAADepthBuffer != null) {
			kha_SystemImpl.gl.deleteRenderbuffer(this.MSAADepthBuffer);
		}
	}
	,__class__: kha_WebGLImage
});
var kha_Window = function(num,defaultWidth,defaultHeight,canvas) {
	var _gthis = this;
	this.num = num;
	this.canvas = canvas;
	this.defaultWidth = defaultWidth;
	this.defaultHeight = defaultHeight;
	kha_Window.windows.push(this);
	kha_Window.resizeCallbacks[num] = [];
	kha_Window.windows.push(this);
	new MutationObserver(function(mutations,observer) {
		var isResize = false;
		var _g = 0;
		while(_g < mutations.length) {
			var mutation = mutations[_g];
			++_g;
			if(mutation.attributeName == "width" || mutation.attributeName == "height") {
				isResize = true;
				break;
			}
		}
		if(isResize) {
			_gthis.resize(canvas.clientWidth,canvas.clientHeight);
		}
	}).observe(canvas,{ attributes : true});
};
$hxClasses["kha.Window"] = kha_Window;
kha_Window.__name__ = "kha.Window";
kha_Window.__properties__ = {get_all:"get_all"};
kha_Window.get = function(index) {
	return kha_Window.windows[index];
};
kha_Window.get_all = function() {
	return kha_Window.windows;
};
kha_Window.prototype = {
	num: null
	,canvas: null
	,defaultWidth: null
	,defaultHeight: null
	,resize: function(width,height) {
		var _g = 0;
		var _g1 = kha_Window.resizeCallbacks[this.num];
		while(_g < _g1.length) _g1[_g++](width,height);
	}
	,get_width: function() {
		if(this.canvas.clientWidth == 0) {
			return this.defaultWidth;
		} else {
			return this.canvas.clientWidth;
		}
	}
	,get_height: function() {
		if(this.canvas.clientHeight == 0) {
			return this.defaultHeight;
		} else {
			return this.canvas.clientHeight;
		}
	}
	,set_mode: function(mode) {
		if(mode == 1 || mode == 2) {
			if(!this.isFullscreen()) {
				this.requestFullscreen();
			}
		} else if(this.isFullscreen()) {
			this.exitFullscreen();
		}
		return mode;
	}
	,isFullscreen: function() {
		return document.fullscreenElement === this.canvas ||
			document.mozFullScreenElement === this.canvas ||
			document.webkitFullscreenElement === this.canvas ||
			document.msFullscreenElement === this.canvas ;
	}
	,requestFullscreen: function() {
		if(($_=this.canvas,$bind($_,$_.requestFullscreen))) {
			var c = this.canvas;
			c.requestFullscreen({ navigationUI : "hide"});
		} else if(this.canvas.msRequestFullscreen) {
			this.canvas.msRequestFullscreen();
		} else if(this.canvas.mozRequestFullScreen) {
			this.canvas.mozRequestFullScreen();
		} else if(this.canvas.webkitRequestFullscreen) {
			this.canvas.webkitRequestFullscreen();
		}
	}
	,exitFullscreen: function() {
		if(document.exitFullscreen) {
			document.exitFullscreen();
		} else if(document.msExitFullscreen) {
			document.msExitFullscreen();
		} else if(document.mozCancelFullScreen) {
			document.mozCancelFullScreen();
		} else if(document.webkitExitFullscreen) {
			document.webkitExitFullscreen();
		}
	}
	,get_vSynced: function() {
		return true;
	}
	,__class__: kha_Window
	,__properties__: {get_vSynced:"get_vSynced",set_mode:"set_mode",get_height:"get_height",get_width:"get_width"}
};
var kha_WindowOptions = function(title,x,y,width,height,display,visible,windowFeatures,mode) {
	if(mode == null) {
		mode = 0;
	}
	if(visible == null) {
		visible = true;
	}
	if(display == null) {
		display = -1;
	}
	if(height == null) {
		height = 600;
	}
	if(width == null) {
		width = 800;
	}
	if(y == null) {
		y = -1;
	}
	if(x == null) {
		x = -1;
	}
	this.mode = 0;
	this.windowFeatures = 1 | 4 | 2;
	this.visible = true;
	this.display = -1;
	this.height = 600;
	this.width = 800;
	this.y = -1;
	this.x = -1;
	this.title = null;
	this.title = title;
	this.x = x;
	this.y = y;
	this.width = width;
	this.height = height;
	this.display = display;
	this.visible = visible;
	this.windowFeatures = windowFeatures == null ? 1 | 4 | 2 : windowFeatures;
	this.mode = mode;
};
$hxClasses["kha.WindowOptions"] = kha_WindowOptions;
kha_WindowOptions.__name__ = "kha.WindowOptions";
kha_WindowOptions.prototype = {
	title: null
	,x: null
	,y: null
	,width: null
	,height: null
	,display: null
	,visible: null
	,windowFeatures: null
	,mode: null
	,__class__: kha_WindowOptions
};
var kha_arrays_ByteArray = {};
kha_arrays_ByteArray.__properties__ = {get_buffer:"get_buffer"};
kha_arrays_ByteArray.get_buffer = function(this1) {
	return this1.buffer;
};
kha_arrays_ByteArray._new = function(buffer,byteOffset,byteLength) {
	return new DataView(buffer,byteOffset,byteLength);
};
kha_arrays_ByteArray.make = function(byteLength) {
	return kha_arrays_ByteArray._new(kha_arrays_ByteBuffer._new(byteLength));
};
kha_arrays_ByteArray.getUint32 = function(this1,byteOffset) {
	return this1.getUint32(byteOffset,kha_arrays_ByteArray.LITTLE_ENDIAN);
};
kha_arrays_ByteArray.getFloat32 = function(this1,byteOffset) {
	return this1.getFloat32(byteOffset,kha_arrays_ByteArray.LITTLE_ENDIAN);
};
kha_arrays_ByteArray.setUint32 = function(this1,byteOffset,value) {
	this1.setUint32(byteOffset,value,kha_arrays_ByteArray.LITTLE_ENDIAN);
};
kha_arrays_ByteArray.setFloat32 = function(this1,byteOffset,value) {
	this1.setFloat32(byteOffset,value,kha_arrays_ByteArray.LITTLE_ENDIAN);
};
kha_arrays_ByteArray.subarray = function(this1,start,end) {
	return kha_arrays_ByteArray._new(kha_arrays_ByteArray.get_buffer(this1),start,end != null ? end - start : null);
};
var kha_arrays_ByteBuffer = {};
kha_arrays_ByteBuffer._new = function(length) {
	return new ArrayBuffer(length);
};
var kha_arrays_Float32Array = {};
kha_arrays_Float32Array.__properties__ = {get_length:"get_length"};
kha_arrays_Float32Array.get_length = function(this1) {
	return this1.byteLength >> 2;
};
kha_arrays_Float32Array._new = function(elements) {
	return kha_arrays_ByteArray.make(elements * 4);
};
kha_arrays_Float32Array.get = function(this1,k) {
	return kha_arrays_ByteArray.getFloat32(this1,k * 4);
};
kha_arrays_Float32Array.set = function(this1,k,v) {
	kha_arrays_ByteArray.setFloat32(this1,k * 4,v);
	return v;
};
var kha_arrays_Uint32Array = {};
kha_arrays_Uint32Array._new = function(elements) {
	return kha_arrays_ByteArray.make(elements * 4);
};
kha_arrays_Uint32Array.get = function(this1,k) {
	return kha_arrays_ByteArray.getUint32(this1,k * 4);
};
kha_arrays_Uint32Array.set = function(this1,k,v) {
	kha_arrays_ByteArray.setUint32(this1,k * 4,v);
	return kha_arrays_Uint32Array.get(this1,k);
};
kha_arrays_Uint32Array.subarray = function(this1,start,end) {
	return kha_arrays_ByteArray.subarray(this1,start * 4,end != null ? end * 4 : null);
};
var kha_audio1_AudioChannel = function() { };
$hxClasses["kha.audio1.AudioChannel"] = kha_audio1_AudioChannel;
kha_audio1_AudioChannel.__name__ = "kha.audio1.AudioChannel";
kha_audio1_AudioChannel.__isInterface__ = true;
var kha_internal_IntBox = function(value) {
	this.value = value;
};
$hxClasses["kha.internal.IntBox"] = kha_internal_IntBox;
kha_internal_IntBox.__name__ = "kha.internal.IntBox";
kha_internal_IntBox.prototype = {
	value: null
	,__class__: kha_internal_IntBox
};
var kha_audio2_Audio = function() { };
$hxClasses["kha.audio2.Audio"] = kha_audio2_Audio;
kha_audio2_Audio.__name__ = "kha.audio2.Audio";
kha_audio2_Audio.initContext = function() {
	try {
		kha_audio2_Audio._context = new AudioContext();
		return;
	} catch( _g ) {
	}
	try {
		this._context = new webkitAudioContext();
		return;
	} catch( _g ) {
	}
};
kha_audio2_Audio._init = function() {
	kha_audio2_Audio.initContext();
	if(kha_audio2_Audio._context == null) {
		return false;
	}
	kha_audio2_Audio.samplesPerSecond = Math.round(kha_audio2_Audio._context.sampleRate);
	kha_audio2_Audio.buffer = new kha_audio2_Buffer(8192,2,kha_audio2_Audio._context.sampleRate | 0);
	kha_audio2_Audio.processingNode = kha_audio2_Audio._context.createScriptProcessor(2048,0,2);
	kha_audio2_Audio.processingNode.onaudioprocess = function(e) {
		var output1 = e.outputBuffer.getChannelData(0);
		var output2 = e.outputBuffer.getChannelData(1);
		if(kha_audio2_Audio.audioCallback != null) {
			kha_audio2_Audio.intBox.value = e.outputBuffer.length * 2;
			kha_audio2_Audio.audioCallback(kha_audio2_Audio.intBox,kha_audio2_Audio.buffer);
			var _g = 0;
			var _g1 = e.outputBuffer.length;
			while(_g < _g1) {
				var i = _g++;
				output1[i] = kha_arrays_Float32Array.get(kha_audio2_Audio.buffer.data,kha_audio2_Audio.buffer.readLocation);
				kha_audio2_Audio.buffer.readLocation += 1;
				output2[i] = kha_arrays_Float32Array.get(kha_audio2_Audio.buffer.data,kha_audio2_Audio.buffer.readLocation);
				kha_audio2_Audio.buffer.readLocation += 1;
				if(kha_audio2_Audio.buffer.readLocation >= kha_audio2_Audio.buffer.size) {
					kha_audio2_Audio.buffer.readLocation = 0;
				}
			}
		} else {
			var _g = 0;
			var _g1 = e.outputBuffer.length;
			while(_g < _g1) {
				var i = _g++;
				output1[i] = 0;
				output2[i] = 0;
			}
		}
	};
	kha_audio2_Audio.processingNode.connect(kha_audio2_Audio._context.destination);
	return true;
};
kha_audio2_Audio.wakeChannels = function() {
	kha_SystemImpl.mobileAudioPlaying = true;
	var _g = 0;
	var _g1 = kha_audio2_Audio.virtualChannels;
	while(_g < _g1.length) _g1[_g++].wake();
};
var kha_audio2_Audio1 = function() { };
$hxClasses["kha.audio2.Audio1"] = kha_audio2_Audio1;
kha_audio2_Audio1.__name__ = "kha.audio2.Audio1";
kha_audio2_Audio1._init = function() {
	kha_audio2_Audio1.soundChannels = new Array(32);
	kha_audio2_Audio1.streamChannels = new Array(32);
	kha_audio2_Audio1.internalSoundChannels = new Array(32);
	kha_audio2_Audio1.internalStreamChannels = new Array(32);
	kha_audio2_Audio1.sampleCache1 = kha_arrays_Float32Array._new(512);
	kha_audio2_Audio1.sampleCache2 = kha_arrays_Float32Array._new(512);
	kha_audio2_Audio1.lastAllocationCount = 0;
	kha_audio2_Audio.audioCallback = kha_audio2_Audio1.mix;
};
kha_audio2_Audio1.mix = function(samplesBox,buffer) {
	var samples = samplesBox.value;
	if(kha_arrays_Float32Array.get_length(kha_audio2_Audio1.sampleCache1) < samples) {
		if(kha_audio2_Audio.disableGcInteractions) {
			haxe_Log.trace("Unexpected allocation request in audio thread.",{ fileName : "kha/audio2/Audio1.hx", lineNumber : 50, className : "kha.audio2.Audio1", methodName : "mix"});
			var _g = 0;
			while(_g < samples) {
				++_g;
				kha_arrays_Float32Array.set(buffer.data,buffer.writeLocation,0);
				buffer.writeLocation += 1;
				if(buffer.writeLocation >= buffer.size) {
					buffer.writeLocation = 0;
				}
			}
			kha_audio2_Audio1.lastAllocationCount = 0;
			kha_audio2_Audio.disableGcInteractions = false;
			return;
		}
		kha_audio2_Audio1.sampleCache1 = kha_arrays_Float32Array._new(samples * 2);
		kha_audio2_Audio1.sampleCache2 = kha_arrays_Float32Array._new(samples * 2);
		kha_audio2_Audio1.lastAllocationCount = 0;
	} else if(kha_audio2_Audio1.lastAllocationCount > 100) {
		kha_audio2_Audio.disableGcInteractions = true;
	} else {
		kha_audio2_Audio1.lastAllocationCount += 1;
	}
	var _g = 0;
	while(_g < samples) kha_arrays_Float32Array.set(kha_audio2_Audio1.sampleCache2,_g++,0);
	var _g = 0;
	while(_g < 32) {
		var i = _g++;
		kha_audio2_Audio1.internalSoundChannels[i] = kha_audio2_Audio1.soundChannels[i];
	}
	var _g = 0;
	while(_g < 32) {
		var i = _g++;
		kha_audio2_Audio1.internalStreamChannels[i] = kha_audio2_Audio1.streamChannels[i];
	}
	var _g = 0;
	var _g1 = kha_audio2_Audio1.internalSoundChannels;
	while(_g < _g1.length) {
		var channel = _g1[_g];
		++_g;
		if(channel == null || channel.get_finished()) {
			continue;
		}
		channel.nextSamples(kha_audio2_Audio1.sampleCache1,samples,buffer.samplesPerSecond);
		var _g2 = 0;
		while(_g2 < samples) {
			var i = _g2++;
			var _g3 = kha_audio2_Audio1.sampleCache2;
			kha_arrays_Float32Array.set(_g3,i,kha_arrays_Float32Array.get(_g3,i) + kha_arrays_Float32Array.get(kha_audio2_Audio1.sampleCache1,i) * channel.get_volume());
		}
	}
	var _g = 0;
	var _g1 = kha_audio2_Audio1.internalStreamChannels;
	while(_g < _g1.length) {
		var channel = _g1[_g];
		++_g;
		if(channel == null || channel.get_finished()) {
			continue;
		}
		channel.nextSamples(kha_audio2_Audio1.sampleCache1,samples,buffer.samplesPerSecond);
		var _g2 = 0;
		while(_g2 < samples) {
			var i = _g2++;
			var _g3 = kha_audio2_Audio1.sampleCache2;
			kha_arrays_Float32Array.set(_g3,i,kha_arrays_Float32Array.get(_g3,i) + kha_arrays_Float32Array.get(kha_audio2_Audio1.sampleCache1,i) * channel.get_volume());
		}
	}
	var _g = 0;
	while(_g < samples) {
		var buffer1 = buffer.data;
		var buffer2 = buffer.writeLocation;
		var a = kha_arrays_Float32Array.get(kha_audio2_Audio1.sampleCache2,_g++);
		var a1 = a < 1.0 ? a : 1.0;
		kha_arrays_Float32Array.set(buffer1,buffer2,a1 > -1.0 ? a1 : -1.0);
		buffer.writeLocation += 1;
		if(buffer.writeLocation >= buffer.size) {
			buffer.writeLocation = 0;
		}
	}
};
var kha_audio2_AudioChannel = function(looping) {
	this.looping = false;
	this.stopped = false;
	this.paused = false;
	this.myPosition = 0;
	this.myVolume = 1;
	this.data = null;
	this.looping = looping;
};
$hxClasses["kha.audio2.AudioChannel"] = kha_audio2_AudioChannel;
kha_audio2_AudioChannel.__name__ = "kha.audio2.AudioChannel";
kha_audio2_AudioChannel.__interfaces__ = [kha_audio1_AudioChannel];
kha_audio2_AudioChannel.prototype = {
	data: null
	,myVolume: null
	,myPosition: null
	,paused: null
	,stopped: null
	,looping: null
	,nextSamples: function(requestedSamples,requestedLength,sampleRate) {
		if(this.paused || this.stopped) {
			var _g = 0;
			while(_g < requestedLength) kha_arrays_Float32Array.set(requestedSamples,_g++,0);
			return;
		}
		var requestedSamplesIndex = 0;
		while(requestedSamplesIndex < requestedLength) {
			var _g = 0;
			var a = kha_arrays_Float32Array.get_length(this.data) - this.myPosition;
			var b = requestedLength - requestedSamplesIndex;
			var _g1 = a < b ? a : b;
			while(_g < _g1) {
				++_g;
				kha_arrays_Float32Array.set(requestedSamples,requestedSamplesIndex++,kha_arrays_Float32Array.get(this.data,this.myPosition++));
			}
			if(this.myPosition >= kha_arrays_Float32Array.get_length(this.data)) {
				this.myPosition = 0;
				if(!this.looping) {
					this.stopped = true;
					break;
				}
			}
		}
		while(requestedSamplesIndex < requestedLength) kha_arrays_Float32Array.set(requestedSamples,requestedSamplesIndex++,0);
	}
	,get_volume: function() {
		return this.myVolume;
	}
	,finished: null
	,get_finished: function() {
		return this.stopped;
	}
	,__class__: kha_audio2_AudioChannel
	,__properties__: {get_finished:"get_finished",get_volume:"get_volume"}
};
var kha_audio2_Buffer = function(size,channels,samplesPerSecond) {
	this.size = size;
	this.data = kha_arrays_Float32Array._new(size);
	this.channels = channels;
	this.samplesPerSecond = samplesPerSecond;
	this.readLocation = 0;
	this.writeLocation = 0;
};
$hxClasses["kha.audio2.Buffer"] = kha_audio2_Buffer;
kha_audio2_Buffer.__name__ = "kha.audio2.Buffer";
kha_audio2_Buffer.prototype = {
	channels: null
	,samplesPerSecond: null
	,data: null
	,size: null
	,readLocation: null
	,writeLocation: null
	,__class__: kha_audio2_Buffer
};
var kha_audio2_StreamChannel = function(data,loop) {
	this.paused = false;
	this.atend = false;
	this.myVolume = 1;
	this.loop = loop;
	this.reader = kha_audio2_ogg_vorbis_Reader.openFromBytes(data);
};
$hxClasses["kha.audio2.StreamChannel"] = kha_audio2_StreamChannel;
kha_audio2_StreamChannel.__name__ = "kha.audio2.StreamChannel";
kha_audio2_StreamChannel.__interfaces__ = [kha_audio1_AudioChannel];
kha_audio2_StreamChannel.prototype = {
	reader: null
	,atend: null
	,loop: null
	,myVolume: null
	,paused: null
	,nextSamples: function(samples,length,sampleRate) {
		if(this.paused) {
			var _g = 0;
			while(_g < length) kha_arrays_Float32Array.set(samples,_g++,0);
			return;
		}
		var count = this.reader.read(samples,length / 2 | 0,2,sampleRate,true) * 2;
		if(count < length) {
			if(this.loop) {
				this.reader.set_currentMillisecond(0);
			} else {
				this.atend = true;
			}
			var _g = count;
			while(_g < length) kha_arrays_Float32Array.set(samples,_g++,0);
		}
	}
	,get_volume: function() {
		return this.myVolume;
	}
	,finished: null
	,get_finished: function() {
		return this.atend;
	}
	,__class__: kha_audio2_StreamChannel
	,__properties__: {get_finished:"get_finished",get_volume:"get_volume"}
};
var kha_audio2_VirtualStreamChannel = function(aeChannel,looping) {
	this.mode = 2;
	this.aeChannel = aeChannel;
	this.looping = looping;
	this.lastTickTime = kha_Scheduler.realTime();
	this.lastPosition = 0;
};
$hxClasses["kha.audio2.VirtualStreamChannel"] = kha_audio2_VirtualStreamChannel;
kha_audio2_VirtualStreamChannel.__name__ = "kha.audio2.VirtualStreamChannel";
kha_audio2_VirtualStreamChannel.__interfaces__ = [kha_audio1_AudioChannel];
kha_audio2_VirtualStreamChannel.prototype = {
	aeChannel: null
	,mode: null
	,lastTickTime: null
	,lastPosition: null
	,looping: null
	,wake: function() {
		this.updatePosition();
		this.aeChannel.set_position(this.lastPosition);
		this.aeChannel.play();
	}
	,updatePosition: function() {
		var now = kha_Scheduler.realTime();
		switch(this.mode) {
		case 0:
			this.lastPosition = 0;
			break;
		case 1:
			break;
		case 2:
			this.lastPosition += now - this.lastTickTime;
			while(this.lastPosition > this.get_length()) this.lastPosition -= this.get_length();
			break;
		}
		this.lastTickTime = now;
	}
	,get_length: function() {
		return this.aeChannel.get_length();
	}
	,__class__: kha_audio2_VirtualStreamChannel
	,__properties__: {get_length:"get_length"}
};
var kha_audio2_ogg_tools_Crc32 = function() { };
$hxClasses["kha.audio2.ogg.tools.Crc32"] = kha_audio2_ogg_tools_Crc32;
kha_audio2_ogg_tools_Crc32.__name__ = "kha.audio2.ogg.tools.Crc32";
kha_audio2_ogg_tools_Crc32.init = function() {
	if(kha_audio2_ogg_tools_Crc32.table != null) {
		return;
	}
	kha_audio2_ogg_tools_Crc32.table = new Array(256);
	var _g = 0;
	while(_g < 256) {
		var i = _g++;
		var s = i << 24;
		s = s << 1 ^ (UInt.gte(s,1 << 31) ? 79764919 : 0);
		s = s << 1 ^ (UInt.gte(s,1 << 31) ? 79764919 : 0);
		s = s << 1 ^ (UInt.gte(s,1 << 31) ? 79764919 : 0);
		s = s << 1 ^ (UInt.gte(s,1 << 31) ? 79764919 : 0);
		s = s << 1 ^ (UInt.gte(s,1 << 31) ? 79764919 : 0);
		s = s << 1 ^ (UInt.gte(s,1 << 31) ? 79764919 : 0);
		s = s << 1 ^ (UInt.gte(s,1 << 31) ? 79764919 : 0);
		s = s << 1 ^ (UInt.gte(s,1 << 31) ? 79764919 : 0);
		kha_audio2_ogg_tools_Crc32.table[i] = s;
	}
};
var kha_audio2_ogg_vorbis_Reader = function(input,seekFunc,inputLength) {
	this.seekFunc = seekFunc;
	this.inputLength = inputLength;
	this.decoder = kha_audio2_ogg_vorbis_VorbisDecoder.start(input);
	this.decoder.setupSampleNumber(seekFunc,inputLength);
	this.loopStart = this.get_header().comment.get_loopStart();
	this.loopLength = this.get_header().comment.get_loopLength();
};
$hxClasses["kha.audio2.ogg.vorbis.Reader"] = kha_audio2_ogg_vorbis_Reader;
kha_audio2_ogg_vorbis_Reader.__name__ = "kha.audio2.ogg.vorbis.Reader";
kha_audio2_ogg_vorbis_Reader.openFromBytes = function(bytes) {
	var input = new haxe_io_BytesInput(bytes);
	var bytes1 = input;
	return new kha_audio2_ogg_vorbis_Reader(input,function(pos) {
		kha_audio2_ogg_vorbis_Reader.seekBytes(bytes1,pos);
	},bytes.length);
};
kha_audio2_ogg_vorbis_Reader.seekBytes = function(bytes,pos) {
	bytes.set_position(pos);
};
kha_audio2_ogg_vorbis_Reader.readAll = function(bytes,output,useFloat) {
	if(useFloat == null) {
		useFloat = false;
	}
	var input = new haxe_io_BytesInput(bytes);
	var decoder = kha_audio2_ogg_vorbis_VorbisDecoder.start(input);
	var bytes1 = input;
	decoder.setupSampleNumber(function(pos) {
		kha_audio2_ogg_vorbis_Reader.seekBytes(bytes1,pos);
	},bytes.length);
	var header = decoder.header;
	var buffer = kha_arrays_Float32Array._new(4096 * header.channel);
	while(true) {
		var n = decoder.read(buffer,4096,header.channel,header.sampleRate,useFloat);
		var _g = 0;
		var _g1 = n * header.channel;
		while(_g < _g1) output.writeFloat(kha_arrays_Float32Array.get(buffer,_g++));
		if(n == 0) {
			break;
		}
	}
	return decoder.header;
};
kha_audio2_ogg_vorbis_Reader.prototype = {
	decoder: null
	,get_header: function() {
		return this.decoder.header;
	}
	,get_currentSample: function() {
		return this.decoder.currentSample;
	}
	,set_currentSample: function(value) {
		this.decoder.seek(this.seekFunc,this.inputLength,value);
		return this.decoder.currentSample;
	}
	,get_currentMillisecond: function() {
		var samples = this.get_currentSample();
		var b = this.get_header().sampleRate;
		return UInt.toFloat(samples) / UInt.toFloat(b) * 1000;
	}
	,set_currentMillisecond: function(value) {
		this.set_currentSample(Math.floor(UInt.toFloat(this.get_header().sampleRate) * (value / 1000)));
		return this.get_currentMillisecond();
	}
	,loopStart: null
	,loopLength: null
	,seekFunc: null
	,inputLength: null
	,read: function(output,samples,channels,sampleRate,useFloat) {
		if(useFloat == null) {
			useFloat = false;
		}
		this.decoder.ensurePosition(this.seekFunc);
		if(samples == null) {
			samples = this.decoder.totalSample;
		}
		if(channels == null) {
			channels = this.get_header().channel;
		}
		if(sampleRate == null) {
			sampleRate = this.get_header().sampleRate;
		}
		return this.decoder.read(output,samples,channels,sampleRate,useFloat);
	}
	,__class__: kha_audio2_ogg_vorbis_Reader
	,__properties__: {set_currentMillisecond:"set_currentMillisecond",get_currentMillisecond:"get_currentMillisecond",set_currentSample:"set_currentSample",get_currentSample:"get_currentSample",get_header:"get_header"}
};
var kha_audio2_ogg_vorbis_VorbisDecodeState = function(input) {
	this.nextSeg = 0;
	this.firstDecode = false;
	this.bytesInSeg = 0;
	this.validBits = 0;
	this.input = input;
	this.inputPosition = 0;
	this.page = new kha_audio2_ogg_vorbis_data_Page();
	kha_audio2_ogg_tools_Crc32.init();
};
$hxClasses["kha.audio2.ogg.vorbis.VorbisDecodeState"] = kha_audio2_ogg_vorbis_VorbisDecodeState;
kha_audio2_ogg_vorbis_VorbisDecodeState.__name__ = "kha.audio2.ogg.vorbis.VorbisDecodeState";
kha_audio2_ogg_vorbis_VorbisDecodeState.prototype = {
	page: null
	,eof: null
	,pFirst: null
	,pLast: null
	,validBits: null
	,inputPosition: null
	,input: null
	,discardSamplesDeferred: null
	,segments: null
	,bytesInSeg: null
	,firstDecode: null
	,nextSeg: null
	,acc: null
	,lastSeg: null
	,lastSegWhich: null
	,endSegWithKnownLoc: null
	,knownLocForPacket: null
	,error: null
	,currentLoc: null
	,currentLocValid: null
	,firstAudioPageOffset: null
	,setup: function(loc0,loc1) {
		this.inputPosition += 1;
		var segmentCount = this.input.readByte();
		this.inputPosition += segmentCount;
		var vec = new Array(segmentCount);
		var _g = 0;
		while(_g < segmentCount) vec[_g++] = this.input.readByte();
		this.segments = vec;
		this.endSegWithKnownLoc = -2;
		if(loc0 != -1 || loc1 != -1) {
			var i = segmentCount - 1;
			while(i >= 0) {
				if(this.segments[i] < 255) {
					break;
				}
				if(i >= 0) {
					this.endSegWithKnownLoc = i;
					this.knownLocForPacket = loc0;
				}
				--i;
			}
		}
		if(this.firstDecode) {
			var len = 0;
			var p = new kha_audio2_ogg_vorbis_data_ProbedPage();
			var _g = 0;
			while(_g < segmentCount) len += this.segments[_g++];
			len += 27 + segmentCount;
			p.pageStart = this.firstAudioPageOffset;
			p.pageEnd = p.pageStart + len;
			p.firstDecodedSample = 0;
			p.lastDecodedSample = loc0;
			this.pFirst = p;
		}
		this.nextSeg = 0;
	}
	,clone: function(seekFunc) {
		var state = Object.create(kha_audio2_ogg_vorbis_VorbisDecodeState.prototype);
		seekFunc(this.inputPosition);
		state.input = this.input;
		state.eof = this.eof;
		state.validBits = this.validBits;
		state.discardSamplesDeferred = this.discardSamplesDeferred;
		state.firstDecode = this.firstDecode;
		state.nextSeg = this.nextSeg;
		state.bytesInSeg = this.bytesInSeg;
		state.acc = state.acc;
		state.lastSeg = this.lastSeg;
		state.lastSegWhich = this.lastSegWhich;
		state.currentLoc = this.currentLoc;
		state.currentLocValid = this.currentLocValid;
		state.inputPosition = this.inputPosition;
		state.firstAudioPageOffset = this.firstAudioPageOffset;
		state.error = this.error;
		state.segments = this.segments;
		state.pFirst = this.pFirst;
		state.pLast = this.pLast;
		state.page = this.page.clone();
		return state;
	}
	,next: function() {
		if(this.lastSeg) {
			return 0;
		}
		if(this.nextSeg == -1) {
			this.lastSegWhich = this.segments.length - 1;
			try {
				this.page.start(this);
			} catch( _g ) {
				var _g1 = haxe_Exception.caught(_g).unwrap();
				if(((_g1) instanceof kha_audio2_ogg_vorbis_data_ReaderError)) {
					this.lastSeg = true;
					this.error = _g1;
					return 0;
				} else {
					throw _g;
				}
			}
			if((this.page.flag & 1) == 0) {
				throw haxe_Exception.thrown(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.CONTINUED_PACKET_FLAG_INVALID,null,{ fileName : "kha/audio2/ogg/vorbis/VorbisDecodeState.hx", lineNumber : 171, className : "kha.audio2.ogg.vorbis.VorbisDecodeState", methodName : "next"}));
			}
		}
		var len = this.segments[this.nextSeg++];
		if(len < 255) {
			this.lastSeg = true;
			this.lastSegWhich = this.nextSeg - 1;
		}
		if(this.nextSeg >= this.segments.length) {
			this.nextSeg = -1;
		}
		this.bytesInSeg = len;
		return len;
	}
	,startPacket: function() {
		while(this.nextSeg == -1) {
			this.page.start(this);
			if((this.page.flag & 1) != 0) {
				throw haxe_Exception.thrown(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.MISSING_CAPTURE_PATTERN,null,{ fileName : "kha/audio2/ogg/vorbis/VorbisDecodeState.hx", lineNumber : 193, className : "kha.audio2.ogg.vorbis.VorbisDecodeState", methodName : "startPacket"}));
			}
		}
		this.lastSeg = false;
		this.validBits = 0;
		this.bytesInSeg = 0;
	}
	,maybeStartPacket: function() {
		if(this.nextSeg == -1) {
			var eof = false;
			var x;
			try {
				this.inputPosition += 1;
				x = this.input.readByte();
			} catch( _g ) {
				if(((haxe_Exception.caught(_g).unwrap()) instanceof haxe_io_Eof)) {
					eof = true;
					x = 0;
				} else {
					throw _g;
				}
			}
			if(eof) {
				return false;
			}
			var tmp;
			var tmp1;
			var tmp2;
			if(x == 79) {
				this.inputPosition += 1;
				tmp2 = this.input.readByte() != 103;
			} else {
				tmp2 = true;
			}
			if(!tmp2) {
				this.inputPosition += 1;
				tmp1 = this.input.readByte() != 103;
			} else {
				tmp1 = true;
			}
			if(!tmp1) {
				this.inputPosition += 1;
				tmp = this.input.readByte() != 83;
			} else {
				tmp = true;
			}
			if(tmp) {
				throw haxe_Exception.thrown(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.MISSING_CAPTURE_PATTERN,null,{ fileName : "kha/audio2/ogg/vorbis/VorbisDecodeState.hx", lineNumber : 218, className : "kha.audio2.ogg.vorbis.VorbisDecodeState", methodName : "maybeStartPacket"}));
			}
			this.page.startWithoutCapturePattern(this);
		}
		this.startPacket();
		return true;
	}
	,readBits: function(n) {
		if(this.validBits < 0) {
			return 0;
		} else if(this.validBits < n) {
			if(n > 24) {
				return this.readBits(24) + (this.readBits(n - 24) << 24);
			} else {
				if(this.validBits == 0) {
					this.acc = 0;
				}
				while(true) {
					if(this.bytesInSeg == 0 && (this.lastSeg || this.next() == 0)) {
						this.validBits = -1;
						break;
					} else {
						this.bytesInSeg--;
						this.inputPosition += 1;
						this.acc = this.acc + (this.input.readByte() << this.validBits);
						this.validBits += 8;
					}
					if(!(this.validBits < n)) {
						break;
					}
				}
				if(this.validBits < 0) {
					return 0;
				} else {
					var z = this.acc & (1 << n) - 1;
					this.acc = this.acc >>> n;
					this.validBits -= n;
					return z;
				}
			}
		} else {
			var z = this.acc & (1 << n) - 1;
			this.acc = this.acc >>> n;
			this.validBits -= n;
			return z;
		}
	}
	,firstPageValidate: function() {
		if(this.segments.length != 1) {
			throw haxe_Exception.thrown(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_FIRST_PAGE,"segmentCount",{ fileName : "kha/audio2/ogg/vorbis/VorbisDecodeState.hx", lineNumber : 308, className : "kha.audio2.ogg.vorbis.VorbisDecodeState", methodName : "firstPageValidate"}));
		}
		if(this.segments[0] != 30) {
			throw haxe_Exception.thrown(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_FIRST_PAGE,"decodeState head",{ fileName : "kha/audio2/ogg/vorbis/VorbisDecodeState.hx", lineNumber : 311, className : "kha.audio2.ogg.vorbis.VorbisDecodeState", methodName : "firstPageValidate"}));
		}
	}
	,startFirstDecode: function() {
		this.firstAudioPageOffset = this.inputPosition;
		this.firstDecode = true;
	}
	,prepHuffman: function() {
		if(this.validBits <= 24) {
			if(this.validBits == 0) {
				this.acc = 0;
			}
			while(true) {
				if(this.bytesInSeg == 0 && (this.lastSeg || this.next() == 0)) {
					return;
				} else {
					this.bytesInSeg--;
					this.inputPosition += 1;
					this.acc = this.acc + (this.input.readByte() << this.validBits);
					this.validBits += 8;
				}
				if(!(this.validBits <= 24)) {
					break;
				}
			}
		}
	}
	,finishDecodePacket: function(previousLength,n,r) {
		var left = r.left.start;
		var currentLocValid = false;
		var n2 = n >> 1;
		if(this.firstDecode) {
			this.currentLoc = -n2;
			this.discardSamplesDeferred = n - r.right.end;
			currentLocValid = true;
			this.firstDecode = false;
		} else if(this.discardSamplesDeferred != 0) {
			r.left.start += this.discardSamplesDeferred;
			left = r.left.start;
			this.discardSamplesDeferred = 0;
		}
		if(this.lastSegWhich == this.endSegWithKnownLoc) {
			if(currentLocValid && (this.page.flag & 4) != 0) {
				var currentEnd = this.knownLocForPacket - (n - r.right.end);
				if(currentEnd < this.currentLoc + r.right.end) {
					var len = currentEnd < this.currentLoc ? 0 : currentEnd - this.currentLoc;
					len += r.left.start;
					this.currentLoc += len;
					return { len : len, left : left, right : r.right.start};
				}
			}
			this.currentLoc = this.knownLocForPacket - (n2 - r.left.start);
			currentLocValid = true;
		}
		if(currentLocValid) {
			this.currentLoc += r.right.start - r.left.start;
		}
		return { len : r.right.end, left : left, right : r.right.start};
	}
	,getSampleNumber: function(seekFunc,inputLength) {
		var restoreOffset = this.inputPosition;
		var previousSafe = UInt.gte(inputLength,65536) && UInt.gte(inputLength - 65536,this.firstAudioPageOffset) ? inputLength - 65536 : this.firstAudioPageOffset;
		seekFunc(this.inputPosition = previousSafe);
		var end = 0;
		var last = false;
		var _g = this.findPage(seekFunc,inputLength);
		switch(_g._hx_index) {
		case 0:
			end = _g.end;
			last = _g.last;
			break;
		case 1:
			throw haxe_Exception.thrown(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.CANT_FIND_LAST_PAGE,null,{ fileName : "kha/audio2/ogg/vorbis/VorbisDecodeState.hx", lineNumber : 519, className : "kha.audio2.ogg.vorbis.VorbisDecodeState", methodName : "getSampleNumber"}));
		}
		var lastPageLoc = this.inputPosition;
		_hx_loop1: while(!last) {
			seekFunc(this.inputPosition = end);
			var _g = this.findPage(seekFunc,inputLength);
			switch(_g._hx_index) {
			case 0:
				end = _g.end;
				last = _g.last;
				break;
			case 1:
				break _hx_loop1;
			}
			previousSafe = lastPageLoc + 1;
			lastPageLoc = this.inputPosition;
		}
		seekFunc(this.inputPosition = lastPageLoc);
		this.inputPosition += 6;
		var vec = new Array(6);
		var _g = 0;
		while(_g < 6) vec[_g++] = this.input.readByte();
		this.inputPosition += 4;
		var lo = this.input.readInt32();
		this.inputPosition += 4;
		var hi = this.input.readInt32();
		if(lo == -1 && hi == -1 || hi > 0) {
			throw haxe_Exception.thrown(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.CANT_FIND_LAST_PAGE,null,{ fileName : "kha/audio2/ogg/vorbis/VorbisDecodeState.hx", lineNumber : 553, className : "kha.audio2.ogg.vorbis.VorbisDecodeState", methodName : "getSampleNumber"}));
		}
		this.pLast = new kha_audio2_ogg_vorbis_data_ProbedPage();
		this.pLast.pageStart = lastPageLoc;
		this.pLast.pageEnd = end;
		this.pLast.lastDecodedSample = lo;
		this.pLast.firstDecodedSample = null;
		this.pLast.afterPreviousPageStart = previousSafe;
		seekFunc(this.inputPosition = restoreOffset);
		return lo;
	}
	,findPage: function(seekFunc,inputLength) {
		try {
			while(true) {
				this.inputPosition += 1;
				if(this.input.readByte() == 79) {
					var retryLoc = this.inputPosition;
					if(retryLoc - 25 > inputLength) {
						return kha_audio2_ogg_vorbis__$VorbisDecodeState_FindPageResult.NotFound;
					}
					var tmp;
					var tmp1;
					this.inputPosition += 1;
					if(this.input.readByte() == 103) {
						this.inputPosition += 1;
						tmp1 = this.input.readByte() != 103;
					} else {
						tmp1 = true;
					}
					if(!tmp1) {
						this.inputPosition += 1;
						tmp = this.input.readByte() != 83;
					} else {
						tmp = true;
					}
					if(tmp) {
						continue;
					}
					var header = new Array(27);
					header[0] = 79;
					header[1] = 103;
					header[2] = 103;
					header[3] = 83;
					this.inputPosition += 1;
					header[4] = this.input.readByte();
					this.inputPosition += 1;
					header[5] = this.input.readByte();
					this.inputPosition += 1;
					header[6] = this.input.readByte();
					this.inputPosition += 1;
					header[7] = this.input.readByte();
					this.inputPosition += 1;
					header[8] = this.input.readByte();
					this.inputPosition += 1;
					header[9] = this.input.readByte();
					this.inputPosition += 1;
					header[10] = this.input.readByte();
					this.inputPosition += 1;
					header[11] = this.input.readByte();
					this.inputPosition += 1;
					header[12] = this.input.readByte();
					this.inputPosition += 1;
					header[13] = this.input.readByte();
					this.inputPosition += 1;
					header[14] = this.input.readByte();
					this.inputPosition += 1;
					header[15] = this.input.readByte();
					this.inputPosition += 1;
					header[16] = this.input.readByte();
					this.inputPosition += 1;
					header[17] = this.input.readByte();
					this.inputPosition += 1;
					header[18] = this.input.readByte();
					this.inputPosition += 1;
					header[19] = this.input.readByte();
					this.inputPosition += 1;
					header[20] = this.input.readByte();
					this.inputPosition += 1;
					header[21] = this.input.readByte();
					this.inputPosition += 1;
					header[22] = this.input.readByte();
					this.inputPosition += 1;
					header[23] = this.input.readByte();
					this.inputPosition += 1;
					header[24] = this.input.readByte();
					this.inputPosition += 1;
					header[25] = this.input.readByte();
					this.inputPosition += 1;
					header[26] = this.input.readByte();
					if(header[4] != 0) {
						seekFunc(this.inputPosition = retryLoc);
						continue;
					}
					var goal = header[22] + (header[23] << 8) + (header[24] << 16) + (header[25] << 24);
					header[22] = 0;
					header[23] = 0;
					header[24] = 0;
					header[25] = 0;
					var crc = 0;
					var _g = 0;
					while(_g < 27) crc = crc << 8 ^ kha_audio2_ogg_tools_Crc32.table[header[_g++] ^ crc >>> 24];
					var len = 0;
					try {
						var _g1 = 0;
						var _g2 = header[26];
						while(_g1 < _g2) {
							++_g1;
							this.inputPosition += 1;
							var s = this.input.readByte();
							crc = crc << 8 ^ kha_audio2_ogg_tools_Crc32.table[s ^ crc >>> 24];
							len += s;
						}
						var _g3 = 0;
						var _g4 = len;
						while(_g3 < _g4) {
							++_g3;
							this.inputPosition += 1;
							var byte = this.input.readByte();
							crc = crc << 8 ^ kha_audio2_ogg_tools_Crc32.table[byte ^ crc >>> 24];
						}
					} catch( _g5 ) {
						if(((haxe_Exception.caught(_g5).unwrap()) instanceof haxe_io_Eof)) {
							return kha_audio2_ogg_vorbis__$VorbisDecodeState_FindPageResult.NotFound;
						} else {
							throw _g5;
						}
					}
					if(crc == goal) {
						var end = this.inputPosition;
						seekFunc(this.inputPosition = retryLoc - 1);
						return kha_audio2_ogg_vorbis__$VorbisDecodeState_FindPageResult.Found(end,(header[5] & 4) != 0);
					}
				}
			}
		} catch( _g ) {
			if(((haxe_Exception.caught(_g).unwrap()) instanceof haxe_io_Eof)) {
				return kha_audio2_ogg_vorbis__$VorbisDecodeState_FindPageResult.NotFound;
			} else {
				throw _g;
			}
		}
	}
	,analyzePage: function(seekFunc,h) {
		var z = new kha_audio2_ogg_vorbis_data_ProbedPage();
		var packetType = new Array(255);
		z.pageStart = this.inputPosition;
		this.inputPosition += 27;
		var vec = new Array(27);
		var _g = 0;
		while(_g < 27) vec[_g++] = this.input.readByte();
		var n = vec[26];
		this.inputPosition += n;
		var vec1 = new Array(n);
		var _g = 0;
		while(_g < n) vec1[_g++] = this.input.readByte();
		var len = 0;
		var _g = 0;
		var _g1 = vec[26];
		while(_g < _g1) len += vec1[_g++];
		z.pageEnd = z.pageStart + 27 + vec[26] + len;
		z.lastDecodedSample = vec[6] + (vec[7] << 8) + (vec[8] << 16) + (vec[9] << 16);
		if((vec[5] & 4) != 0) {
			z.firstDecodedSample = null;
			seekFunc(this.inputPosition = z.pageStart);
			return z;
		}
		var numPacket = 0;
		var packetStart = (vec[5] & 1) == 0;
		var modeCount = h.modes.length;
		var _g = 0;
		var _g1 = vec[26];
		while(_g < _g1) {
			var i = _g++;
			if(packetStart) {
				if(vec1[i] == 0) {
					seekFunc(this.inputPosition = z.pageStart);
					return null;
				}
				this.inputPosition += 1;
				var n = this.input.readByte();
				if((n & 1) != 0) {
					seekFunc(this.inputPosition = z.pageStart);
					return null;
				}
				n >>= 1;
				var n1 = modeCount - 1;
				var log2_4 = [0,1,2,2,3,3,3,3,4,4,4,4,4,4,4,4];
				n &= (1 << (n1 < 16384 ? n1 < 16 ? log2_4[n1] : n1 < 512 ? 5 + log2_4[n1 >> 5] : 10 + log2_4[n1 >> 10] : n1 < 16777216 ? n1 < 524288 ? 15 + log2_4[n1 >> 15] : 20 + log2_4[n1 >> 20] : n1 < 536870912 ? 25 + log2_4[n1 >> 25] : n1 < -2147483648 ? 30 + log2_4[n1 >> 30] : 0)) - 1;
				if(n >= modeCount) {
					seekFunc(this.inputPosition = z.pageStart);
					return null;
				}
				packetType[numPacket++] = h.modes[n].blockflag;
				var len = vec1[i] - 1;
				this.inputPosition += len;
				var vec = new Array(len);
				var _g2 = 0;
				while(_g2 < len) vec[_g2++] = this.input.readByte();
			} else {
				var len1 = vec1[i];
				this.inputPosition += len1;
				var vec2 = new Array(len1);
				var _g3 = 0;
				while(_g3 < len1) vec2[_g3++] = this.input.readByte();
			}
			packetStart = vec1[i] < 255;
		}
		var samples = 0;
		if(numPacket > 1) {
			samples = packetType[numPacket - 1] ? h.blocksize1 : h.blocksize0;
		}
		var i = numPacket - 2;
		while(i >= 1) {
			--i;
			if(packetType[i]) {
				if(packetType[i + 1]) {
					samples += h.blocksize1 >> 1;
				} else {
					samples += (h.blocksize1 - h.blocksize0 >> 2) + (h.blocksize0 >> 1);
				}
			} else {
				samples += h.blocksize0 >> 1;
			}
			--i;
		}
		z.firstDecodedSample = z.lastDecodedSample - samples;
		seekFunc(this.inputPosition = z.pageStart);
		return z;
	}
	,decodeScalarRaw: function(c) {
		this.prepHuffman();
		var codewordLengths = c.codewordLengths;
		var codewords = c.codewords;
		var sortedCodewords = c.sortedCodewords;
		if(c.entries > 8 ? sortedCodewords != null : codewords != null) {
			var n = this.acc;
			n = (n & -1431655766) >>> 1 | (n & 1431655765) << 1;
			n = (n & -858993460) >>> 2 | (n & 858993459) << 2;
			n = (n & -252645136) >>> 4 | (n & 252645135) << 4;
			n = (n & -16711936) >>> 8 | (n & 16711935) << 8;
			var code = n >>> 16 | n << 16;
			var x = 0;
			var n = c.sortedEntries;
			while(n > 1) {
				var m = x + (n >> 1);
				if(UInt.gte(code,sortedCodewords[m])) {
					x = m;
					n -= n >> 1;
				} else {
					n >>= 1;
				}
			}
			if(!c.sparse) {
				x = c.sortedValues[x];
			}
			var len = codewordLengths[x];
			if(this.validBits >= len) {
				this.acc = this.acc >>> len;
				this.validBits -= len;
				return x;
			}
			this.validBits = 0;
			return -1;
		}
		var _g = 0;
		var _g1 = c.entries;
		while(_g < _g1) {
			var i = _g++;
			var cl = codewordLengths[i];
			if(cl == 255) {
				continue;
			}
			if(codewords[i] == (this.acc & (1 << cl) - 1)) {
				if(this.validBits >= cl) {
					this.acc = this.acc >>> cl;
					this.validBits -= cl;
					return i;
				}
				this.validBits = 0;
				return -1;
			}
		}
		this.error = new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_STREAM,null,{ fileName : "kha/audio2/ogg/vorbis/VorbisDecodeState.hx", lineNumber : 847, className : "kha.audio2.ogg.vorbis.VorbisDecodeState", methodName : "decodeScalarRaw"});
		this.validBits = 0;
		return -1;
	}
	,__class__: kha_audio2_ogg_vorbis_VorbisDecodeState
};
var kha_audio2_ogg_vorbis__$VorbisDecodeState_FindPageResult = $hxEnums["kha.audio2.ogg.vorbis._VorbisDecodeState.FindPageResult"] = { __ename__ : true, __constructs__ : ["Found","NotFound"]
	,Found: ($_=function(end,last) { return {_hx_index:0,end:end,last:last,__enum__:"kha.audio2.ogg.vorbis._VorbisDecodeState.FindPageResult",toString:$estr}; },$_.__params__ = ["end","last"],$_)
	,NotFound: {_hx_index:1,__enum__:"kha.audio2.ogg.vorbis._VorbisDecodeState.FindPageResult",toString:$estr}
};
var kha_audio2_ogg_vorbis_VorbisDecoder = function(header,decodeState) {
	this.header = header;
	this.decodeState = decodeState;
	this.totalSample = null;
	this.currentSample = 0;
	this.previousLength = 0;
	this.channelBuffers = new Array(header.channel);
	this.previousWindow = new Array(header.channel);
	this.finalY = new Array(header.channel);
	var _g = 0;
	var _g1 = header.channel;
	while(_g < _g1) {
		var i = _g++;
		this.channelBuffers[i] = new Array(header.blocksize1);
		this.previousWindow[i] = new Array(header.blocksize1 / 2 | 0);
		this.finalY[i] = [];
	}
	this.a = new Array(2);
	this.b = new Array(2);
	this.c = new Array(2);
	this.window = new Array(2);
	this.bitReverseData = new Array(2);
	this.initBlocksize(0,header.blocksize0);
	this.initBlocksize(1,header.blocksize1);
};
$hxClasses["kha.audio2.ogg.vorbis.VorbisDecoder"] = kha_audio2_ogg_vorbis_VorbisDecoder;
kha_audio2_ogg_vorbis_VorbisDecoder.__name__ = "kha.audio2.ogg.vorbis.VorbisDecoder";
kha_audio2_ogg_vorbis_VorbisDecoder.start = function(input) {
	var decodeState = new kha_audio2_ogg_vorbis_VorbisDecodeState(input);
	var decoder = new kha_audio2_ogg_vorbis_VorbisDecoder(kha_audio2_ogg_vorbis_data_Header.read(decodeState),decodeState);
	decodeState.startFirstDecode();
	decoder.pumpFirstFrame();
	return decoder;
};
kha_audio2_ogg_vorbis_VorbisDecoder.prototype = {
	previousWindow: null
	,previousLength: null
	,finalY: null
	,a: null
	,b: null
	,c: null
	,window: null
	,bitReverseData: null
	,channelBuffers: null
	,channelBufferStart: null
	,channelBufferEnd: null
	,header: null
	,currentSample: null
	,totalSample: null
	,decodeState: null
	,read: function(output,samples,channels,sampleRate,useFloat) {
		if((UInt.toFloat(sampleRate) % UInt.toFloat(this.header.sampleRate) | 0) != 0) {
			throw haxe_Exception.thrown("Unsupported sampleRate : can't convert " + (this.header.sampleRate == null ? "null" : Std.string(UInt.toFloat(this.header.sampleRate))) + " to " + sampleRate);
		}
		if(channels % this.header.channel != 0) {
			throw haxe_Exception.thrown("Unsupported channels : can't convert " + this.header.channel + " to " + channels);
		}
		var sampleRepeat = UInt.toFloat(sampleRate) / UInt.toFloat(this.header.sampleRate) | 0;
		var channelRepeat = channels / this.header.channel | 0;
		var n = 0;
		var len = Math.floor(samples / sampleRepeat);
		if(this.totalSample != null && len > this.totalSample - this.currentSample) {
			len = this.totalSample - this.currentSample;
		}
		var index = 0;
		while(n < len) {
			var k = this.channelBufferEnd - this.channelBufferStart;
			if(k >= len - n) {
				k = len - n;
			}
			var _g = this.channelBufferStart;
			var _g1 = this.channelBufferStart + k;
			while(_g < _g1) {
				var j = _g++;
				var _g2 = 0;
				while(_g2 < sampleRepeat) {
					++_g2;
					var _g3 = 0;
					var _g4 = this.header.channel;
					while(_g3 < _g4) {
						var i = _g3++;
						var _g5 = 0;
						while(_g5 < channelRepeat) {
							++_g5;
							var value = this.channelBuffers[i][j];
							if(value > 1) {
								value = 1;
							} else if(value < -1) {
								value = -1;
							}
							if(useFloat) {
								kha_arrays_Float32Array.set(output,index,value);
								++index;
							}
						}
					}
				}
			}
			n += k;
			this.channelBufferStart += k;
			if(n == len || this.getFrameFloat() == 0) {
				break;
			}
		}
		var _g = n;
		var _g1 = len;
		while(_g < _g1) {
			++_g;
			var _g2 = 0;
			while(_g2 < sampleRepeat) {
				++_g2;
				var _g3 = 0;
				var _g4 = this.header.channel;
				while(_g3 < _g4) {
					++_g3;
					var _g5 = 0;
					while(_g5 < channelRepeat) {
						++_g5;
						if(useFloat) {
							kha_arrays_Float32Array.set(output,index,0);
							++index;
						}
					}
				}
			}
		}
		this.currentSample += len;
		return len * sampleRepeat;
	}
	,skipSamples: function(len) {
		var n = 0;
		if(this.totalSample != null && len > this.totalSample - this.currentSample) {
			len = this.totalSample - this.currentSample;
		}
		while(n < len) {
			var k = this.channelBufferEnd - this.channelBufferStart;
			if(k >= len - n) {
				k = len - n;
			}
			n += k;
			this.channelBufferStart += k;
			if(n == len || this.getFrameFloat() == 0) {
				break;
			}
		}
		this.currentSample += len;
		return len;
	}
	,setupSampleNumber: function(seekFunc,inputLength) {
		if(this.totalSample == null) {
			this.totalSample = this.decodeState.getSampleNumber(seekFunc,inputLength);
		}
	}
	,seek: function(seekFunc,inputLength,sampleNumber) {
		if(this.currentSample == sampleNumber) {
			return;
		}
		if(this.totalSample == null) {
			this.setupSampleNumber(seekFunc,inputLength);
			if(this.totalSample == 0) {
				throw haxe_Exception.thrown(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.CANT_FIND_LAST_PAGE,null,{ fileName : "kha/audio2/ogg/vorbis/VorbisDecoder.hx", lineNumber : 187, className : "kha.audio2.ogg.vorbis.VorbisDecoder", methodName : "seek"}));
			}
		}
		if(sampleNumber < 0) {
			sampleNumber = 0;
		}
		var p0 = this.decodeState.pFirst;
		var p1 = this.decodeState.pLast;
		if(sampleNumber >= p1.lastDecodedSample) {
			sampleNumber = p1.lastDecodedSample - 1;
		}
		if(sampleNumber < p0.lastDecodedSample) {
			this.seekFrameFromPage(seekFunc,p0.pageStart,0,sampleNumber);
		} else {
			var attempts = 0;
			while(p0.pageEnd < p1.pageStart) {
				var startOffset = p0.pageEnd;
				var endOffset = p1.afterPreviousPageStart;
				var startSample = p0.lastDecodedSample;
				var endSample = p1.lastDecodedSample;
				if(startSample == null || endSample == null) {
					throw haxe_Exception.thrown(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.SEEK_FAILED,null,{ fileName : "kha/audio2/ogg/vorbis/VorbisDecoder.hx", lineNumber : 219, className : "kha.audio2.ogg.vorbis.VorbisDecoder", methodName : "seek"}));
				}
				if(UInt.gt(endOffset,startOffset + 4000)) {
					endOffset = endOffset - 4000;
				}
				var probe = startOffset + Math.floor(UInt.toFloat(endOffset - startOffset) / UInt.toFloat(endSample - startSample) * (sampleNumber - startSample));
				if(attempts >= 4) {
					var probe2 = startOffset + (endOffset - startOffset >>> 1);
					probe = attempts >= 8 ? probe2 : UInt.gt(probe2,probe) ? probe + (probe2 - probe >>> 1) : probe2 + (probe - probe2 >>> 1);
				}
				++attempts;
				seekFunc(this.decodeState.inputPosition = probe);
				switch(this.decodeState.findPage(seekFunc,inputLength)._hx_index) {
				case 0:
					break;
				case 1:
					throw haxe_Exception.thrown(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.SEEK_FAILED,null,{ fileName : "kha/audio2/ogg/vorbis/VorbisDecoder.hx", lineNumber : 249, className : "kha.audio2.ogg.vorbis.VorbisDecoder", methodName : "seek"}));
				}
				var q = this.decodeState.analyzePage(seekFunc,this.header);
				if(q == null) {
					throw haxe_Exception.thrown(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.SEEK_FAILED,null,{ fileName : "kha/audio2/ogg/vorbis/VorbisDecoder.hx", lineNumber : 255, className : "kha.audio2.ogg.vorbis.VorbisDecoder", methodName : "seek"}));
				}
				q.afterPreviousPageStart = probe;
				if(q.pageStart == p1.pageStart) {
					p1 = q;
					continue;
				}
				if(sampleNumber < q.lastDecodedSample) {
					p1 = q;
				} else {
					p0 = q;
				}
			}
			if(p0.lastDecodedSample <= sampleNumber && sampleNumber < p1.lastDecodedSample) {
				this.seekFrameFromPage(seekFunc,p1.pageStart,p0.lastDecodedSample,sampleNumber);
			} else {
				throw haxe_Exception.thrown(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.SEEK_FAILED,null,{ fileName : "kha/audio2/ogg/vorbis/VorbisDecoder.hx", lineNumber : 275, className : "kha.audio2.ogg.vorbis.VorbisDecoder", methodName : "seek"}));
			}
		}
	}
	,seekFrameFromPage: function(seekFunc,pageStart,firstSample,targetSample) {
		var frame = 0;
		var frameStart = firstSample;
		seekFunc(this.decodeState.inputPosition = pageStart);
		this.decodeState.nextSeg = -1;
		var leftEnd = 0;
		var leftStart = 0;
		var prevState = null;
		var lastState = null;
		while(true) {
			prevState = lastState;
			lastState = this.decodeState.clone(seekFunc);
			var initialResult = this.decodeInitial();
			if(initialResult == null) {
				lastState = prevState;
				break;
			}
			leftStart = initialResult.left.start;
			leftEnd = initialResult.left.end;
			var start = frame == 0 ? leftEnd : leftStart;
			if(targetSample < frameStart + initialResult.right.start - start) {
				break;
			}
			var _this = this.decodeState;
			while(_this.bytesInSeg != 0 || !_this.lastSeg && _this.next() != 0) {
				_this.bytesInSeg--;
				_this.inputPosition += 1;
				_this.input.readByte();
			}
			frameStart += initialResult.right.start - start;
			++frame;
		}
		this.decodeState = lastState;
		seekFunc(this.decodeState.inputPosition);
		this.previousLength = 0;
		this.pumpFirstFrame();
		this.currentSample = frameStart;
		this.skipSamples(targetSample - frameStart);
	}
	,ensurePosition: function(seekFunc) {
		seekFunc(this.decodeState.inputPosition);
	}
	,getFrameFloat: function() {
		var result = this.decodePacket();
		if(result == null) {
			this.channelBufferStart = this.channelBufferEnd = 0;
			return 0;
		}
		var len = this.finishFrame(result);
		this.channelBufferStart = result.left;
		this.channelBufferEnd = result.left + len;
		return len;
	}
	,pumpFirstFrame: function() {
		this.finishFrame(this.decodePacket());
	}
	,finishFrame: function(r) {
		var len = r.len;
		var right = r.right;
		var left = r.left;
		if(this.previousLength != 0) {
			var n = this.previousLength;
			var w = this.getWindow(n);
			var _g = 0;
			var _g1 = this.header.channel;
			while(_g < _g1) {
				var i = _g++;
				var cb = this.channelBuffers[i];
				var pw = this.previousWindow[i];
				var _g2 = 0;
				while(_g2 < n) {
					var j = _g2++;
					cb[left + j] = cb[left + j] * w[j] + pw[j] * w[n - 1 - j];
				}
			}
		}
		var prev = this.previousLength;
		this.previousLength = len - right;
		var _g = 0;
		var _g1 = this.header.channel;
		while(_g < _g1) {
			var i = _g++;
			var pw = this.previousWindow[i];
			var cb = this.channelBuffers[i];
			var _g2 = 0;
			var _g3 = len - right;
			while(_g2 < _g3) {
				var j = _g2++;
				pw[j] = cb[right + j];
			}
		}
		if(prev == 0) {
			return 0;
		}
		if(len < right) {
			right = len;
		}
		return right - left;
	}
	,getWindow: function(len) {
		len <<= 1;
		if(len == this.header.blocksize0) {
			return this.window[0];
		} else if(len == this.header.blocksize1) {
			return this.window[1];
		} else {
			return null;
		}
	}
	,initBlocksize: function(bs,n) {
		var n2 = n >> 1;
		this.a[bs] = new Array(n2);
		this.b[bs] = new Array(n2);
		this.c[bs] = new Array(n >> 2);
		this.window[bs] = new Array(n2);
		this.bitReverseData[bs] = new Array(n >> 3);
		kha_audio2_ogg_vorbis_VorbisTools.computeTwiddleFactors(n,this.a[bs],this.b[bs],this.c[bs]);
		kha_audio2_ogg_vorbis_VorbisTools.computeWindow(n,this.window[bs]);
		kha_audio2_ogg_vorbis_VorbisTools.computeBitReverse(n,this.bitReverseData[bs]);
	}
	,inverseMdct: function(buffer,n,blocktype) {
		var bt = blocktype ? 1 : 0;
		var a = this.a[bt];
		var b = this.b[bt];
		var c = this.c[bt];
		var bitReverse = this.bitReverseData[bt];
		var n2 = n >> 1;
		var n4 = n >> 2;
		var n8 = n >> 3;
		var buf2 = new Array(n2);
		var dOffset = n2 - 2;
		var aaOffset = 0;
		var eOffset = 0;
		while(eOffset != n2) {
			buf2[dOffset + 1] = buffer[eOffset] * a[aaOffset] - buffer[eOffset + 2] * a[aaOffset + 1];
			buf2[dOffset] = buffer[eOffset] * a[aaOffset + 1] + buffer[eOffset + 2] * a[aaOffset];
			dOffset -= 2;
			aaOffset += 2;
			eOffset += 4;
		}
		eOffset = n2 - 3;
		while(dOffset >= 0) {
			buf2[dOffset + 1] = -buffer[eOffset + 2] * a[aaOffset] - -buffer[eOffset] * a[aaOffset + 1];
			buf2[dOffset] = -buffer[eOffset + 2] * a[aaOffset + 1] + -buffer[eOffset] * a[aaOffset];
			dOffset -= 2;
			aaOffset += 2;
			eOffset -= 4;
		}
		var aaOffset = n2 - 8;
		var eOffset0 = n4;
		var eOffset1 = 0;
		var dOffset0 = n4;
		var dOffset1 = 0;
		while(aaOffset >= 0) {
			var v41_21 = buf2[eOffset0 + 1] - buf2[eOffset1 + 1];
			var v40_20 = buf2[eOffset0] - buf2[eOffset1];
			buffer[dOffset0 + 1] = buf2[eOffset0 + 1] + buf2[eOffset1 + 1];
			buffer[dOffset0] = buf2[eOffset0] + buf2[eOffset1];
			buffer[dOffset1 + 1] = v41_21 * a[aaOffset + 4] - v40_20 * a[aaOffset + 5];
			buffer[dOffset1] = v40_20 * a[aaOffset + 4] + v41_21 * a[aaOffset + 5];
			v41_21 = buf2[eOffset0 + 3] - buf2[eOffset1 + 3];
			v40_20 = buf2[eOffset0 + 2] - buf2[eOffset1 + 2];
			buffer[dOffset0 + 3] = buf2[eOffset0 + 3] + buf2[eOffset1 + 3];
			buffer[dOffset0 + 2] = buf2[eOffset0 + 2] + buf2[eOffset1 + 2];
			buffer[dOffset1 + 3] = v41_21 * a[aaOffset] - v40_20 * a[aaOffset + 1];
			buffer[dOffset1 + 2] = v40_20 * a[aaOffset] + v41_21 * a[aaOffset + 1];
			aaOffset -= 8;
			dOffset0 += 4;
			dOffset1 += 4;
			eOffset0 += 4;
			eOffset1 += 4;
		}
		var log2_4 = [0,1,2,2,3,3,3,3,4,4,4,4,4,4,4,4];
		var ld = (n < 16384 ? n < 16 ? log2_4[n] : n < 512 ? 5 + log2_4[n >> 5] : 10 + log2_4[n >> 10] : n < 16777216 ? n < 524288 ? 15 + log2_4[n >> 15] : 20 + log2_4[n >> 20] : n < 536870912 ? 25 + log2_4[n >> 25] : n < -2147483648 ? 30 + log2_4[n >> 30] : 0) - 1;
		var i_off = n2 - 1 - n4 * 0;
		var eeOffset0 = i_off;
		var eeOffset2 = i_off + -(n >> 3);
		var aOffset = 0;
		var i = (n >> 4 >> 2) + 1;
		while(--i > 0) {
			var k00_20 = buffer[eeOffset0] - buffer[eeOffset2];
			var k01_21 = buffer[eeOffset0 + (-1)] - buffer[eeOffset2 + (-1)];
			buffer[eeOffset0] += buffer[eeOffset2];
			buffer[eeOffset0 + (-1)] += buffer[eeOffset2 + (-1)];
			buffer[eeOffset2] = k00_20 * a[aOffset] - k01_21 * a[aOffset + 1];
			buffer[eeOffset2 + (-1)] = k01_21 * a[aOffset] + k00_20 * a[aOffset + 1];
			aOffset += 8;
			k00_20 = buffer[eeOffset0 + (-2)] - buffer[eeOffset2 + (-2)];
			k01_21 = buffer[eeOffset0 + (-3)] - buffer[eeOffset2 + (-3)];
			buffer[eeOffset0 + (-2)] += buffer[eeOffset2 + (-2)];
			buffer[eeOffset0 + (-3)] += buffer[eeOffset2 + (-3)];
			buffer[eeOffset2 + (-2)] = k00_20 * a[aOffset] - k01_21 * a[aOffset + 1];
			buffer[eeOffset2 + (-3)] = k01_21 * a[aOffset] + k00_20 * a[aOffset + 1];
			aOffset += 8;
			k00_20 = buffer[eeOffset0 + (-4)] - buffer[eeOffset2 + (-4)];
			k01_21 = buffer[eeOffset0 + (-5)] - buffer[eeOffset2 + (-5)];
			buffer[eeOffset0 + (-4)] += buffer[eeOffset2 + (-4)];
			buffer[eeOffset0 + (-5)] += buffer[eeOffset2 + (-5)];
			buffer[eeOffset2 + (-4)] = k00_20 * a[aOffset] - k01_21 * a[aOffset + 1];
			buffer[eeOffset2 + (-5)] = k01_21 * a[aOffset] + k00_20 * a[aOffset + 1];
			aOffset += 8;
			k00_20 = buffer[eeOffset0 + (-6)] - buffer[eeOffset2 + (-6)];
			k01_21 = buffer[eeOffset0 + (-7)] - buffer[eeOffset2 + (-7)];
			buffer[eeOffset0 + (-6)] += buffer[eeOffset2 + (-6)];
			buffer[eeOffset0 + (-7)] += buffer[eeOffset2 + (-7)];
			buffer[eeOffset2 + (-6)] = k00_20 * a[aOffset] - k01_21 * a[aOffset + 1];
			buffer[eeOffset2 + (-7)] = k01_21 * a[aOffset] + k00_20 * a[aOffset + 1];
			aOffset += 8;
			eeOffset0 -= 8;
			eeOffset2 -= 8;
		}
		var i_off = n2 - 1 - n4;
		var eeOffset0 = i_off;
		var eeOffset2 = i_off + -(n >> 3);
		var aOffset = 0;
		var i = (n >> 4 >> 2) + 1;
		while(--i > 0) {
			var k00_20 = buffer[eeOffset0] - buffer[eeOffset2];
			var k01_21 = buffer[eeOffset0 + (-1)] - buffer[eeOffset2 + (-1)];
			buffer[eeOffset0] += buffer[eeOffset2];
			buffer[eeOffset0 + (-1)] += buffer[eeOffset2 + (-1)];
			buffer[eeOffset2] = k00_20 * a[aOffset] - k01_21 * a[aOffset + 1];
			buffer[eeOffset2 + (-1)] = k01_21 * a[aOffset] + k00_20 * a[aOffset + 1];
			aOffset += 8;
			k00_20 = buffer[eeOffset0 + (-2)] - buffer[eeOffset2 + (-2)];
			k01_21 = buffer[eeOffset0 + (-3)] - buffer[eeOffset2 + (-3)];
			buffer[eeOffset0 + (-2)] += buffer[eeOffset2 + (-2)];
			buffer[eeOffset0 + (-3)] += buffer[eeOffset2 + (-3)];
			buffer[eeOffset2 + (-2)] = k00_20 * a[aOffset] - k01_21 * a[aOffset + 1];
			buffer[eeOffset2 + (-3)] = k01_21 * a[aOffset] + k00_20 * a[aOffset + 1];
			aOffset += 8;
			k00_20 = buffer[eeOffset0 + (-4)] - buffer[eeOffset2 + (-4)];
			k01_21 = buffer[eeOffset0 + (-5)] - buffer[eeOffset2 + (-5)];
			buffer[eeOffset0 + (-4)] += buffer[eeOffset2 + (-4)];
			buffer[eeOffset0 + (-5)] += buffer[eeOffset2 + (-5)];
			buffer[eeOffset2 + (-4)] = k00_20 * a[aOffset] - k01_21 * a[aOffset + 1];
			buffer[eeOffset2 + (-5)] = k01_21 * a[aOffset] + k00_20 * a[aOffset + 1];
			aOffset += 8;
			k00_20 = buffer[eeOffset0 + (-6)] - buffer[eeOffset2 + (-6)];
			k01_21 = buffer[eeOffset0 + (-7)] - buffer[eeOffset2 + (-7)];
			buffer[eeOffset0 + (-6)] += buffer[eeOffset2 + (-6)];
			buffer[eeOffset0 + (-7)] += buffer[eeOffset2 + (-7)];
			buffer[eeOffset2 + (-6)] = k00_20 * a[aOffset] - k01_21 * a[aOffset + 1];
			buffer[eeOffset2 + (-7)] = k01_21 * a[aOffset] + k00_20 * a[aOffset + 1];
			aOffset += 8;
			eeOffset0 -= 8;
			eeOffset2 -= 8;
		}
		var d0 = n2 - 1 - n8 * 0;
		var aOffset = 0;
		var eOffset0 = d0;
		var eOffset2 = d0 + -(n >> 4);
		var i = (n >> 5 >> 2) + 1;
		while(--i > 0) {
			var k00_20 = buffer[eOffset0] - buffer[eOffset2];
			var k01_21 = buffer[eOffset0 + (-1)] - buffer[eOffset2 + (-1)];
			buffer[eOffset0] += buffer[eOffset2];
			buffer[eOffset0 + (-1)] += buffer[eOffset2 + (-1)];
			buffer[eOffset2] = k00_20 * a[aOffset] - k01_21 * a[aOffset + 1];
			buffer[eOffset2 + (-1)] = k01_21 * a[aOffset] + k00_20 * a[aOffset + 1];
			aOffset += 16;
			k00_20 = buffer[eOffset0 + (-2)] - buffer[eOffset2 + (-2)];
			k01_21 = buffer[eOffset0 + (-3)] - buffer[eOffset2 + (-3)];
			buffer[eOffset0 + (-2)] += buffer[eOffset2 + (-2)];
			buffer[eOffset0 + (-3)] += buffer[eOffset2 + (-3)];
			buffer[eOffset2 + (-2)] = k00_20 * a[aOffset] - k01_21 * a[aOffset + 1];
			buffer[eOffset2 + (-3)] = k01_21 * a[aOffset] + k00_20 * a[aOffset + 1];
			aOffset += 16;
			k00_20 = buffer[eOffset0 + (-4)] - buffer[eOffset2 + (-4)];
			k01_21 = buffer[eOffset0 + (-5)] - buffer[eOffset2 + (-5)];
			buffer[eOffset0 + (-4)] += buffer[eOffset2 + (-4)];
			buffer[eOffset0 + (-5)] += buffer[eOffset2 + (-5)];
			buffer[eOffset2 + (-4)] = k00_20 * a[aOffset] - k01_21 * a[aOffset + 1];
			buffer[eOffset2 + (-5)] = k01_21 * a[aOffset] + k00_20 * a[aOffset + 1];
			aOffset += 16;
			k00_20 = buffer[eOffset0 + (-6)] - buffer[eOffset2 + (-6)];
			k01_21 = buffer[eOffset0 + (-7)] - buffer[eOffset2 + (-7)];
			buffer[eOffset0 + (-6)] += buffer[eOffset2 + (-6)];
			buffer[eOffset0 + (-7)] += buffer[eOffset2 + (-7)];
			buffer[eOffset2 + (-6)] = k00_20 * a[aOffset] - k01_21 * a[aOffset + 1];
			buffer[eOffset2 + (-7)] = k01_21 * a[aOffset] + k00_20 * a[aOffset + 1];
			eOffset0 -= 8;
			eOffset2 -= 8;
			aOffset += 16;
		}
		var d0 = n2 - 1 - n8;
		var aOffset = 0;
		var eOffset0 = d0;
		var eOffset2 = d0 + -(n >> 4);
		var i = (n >> 5 >> 2) + 1;
		while(--i > 0) {
			var k00_20 = buffer[eOffset0] - buffer[eOffset2];
			var k01_21 = buffer[eOffset0 + (-1)] - buffer[eOffset2 + (-1)];
			buffer[eOffset0] += buffer[eOffset2];
			buffer[eOffset0 + (-1)] += buffer[eOffset2 + (-1)];
			buffer[eOffset2] = k00_20 * a[aOffset] - k01_21 * a[aOffset + 1];
			buffer[eOffset2 + (-1)] = k01_21 * a[aOffset] + k00_20 * a[aOffset + 1];
			aOffset += 16;
			k00_20 = buffer[eOffset0 + (-2)] - buffer[eOffset2 + (-2)];
			k01_21 = buffer[eOffset0 + (-3)] - buffer[eOffset2 + (-3)];
			buffer[eOffset0 + (-2)] += buffer[eOffset2 + (-2)];
			buffer[eOffset0 + (-3)] += buffer[eOffset2 + (-3)];
			buffer[eOffset2 + (-2)] = k00_20 * a[aOffset] - k01_21 * a[aOffset + 1];
			buffer[eOffset2 + (-3)] = k01_21 * a[aOffset] + k00_20 * a[aOffset + 1];
			aOffset += 16;
			k00_20 = buffer[eOffset0 + (-4)] - buffer[eOffset2 + (-4)];
			k01_21 = buffer[eOffset0 + (-5)] - buffer[eOffset2 + (-5)];
			buffer[eOffset0 + (-4)] += buffer[eOffset2 + (-4)];
			buffer[eOffset0 + (-5)] += buffer[eOffset2 + (-5)];
			buffer[eOffset2 + (-4)] = k00_20 * a[aOffset] - k01_21 * a[aOffset + 1];
			buffer[eOffset2 + (-5)] = k01_21 * a[aOffset] + k00_20 * a[aOffset + 1];
			aOffset += 16;
			k00_20 = buffer[eOffset0 + (-6)] - buffer[eOffset2 + (-6)];
			k01_21 = buffer[eOffset0 + (-7)] - buffer[eOffset2 + (-7)];
			buffer[eOffset0 + (-6)] += buffer[eOffset2 + (-6)];
			buffer[eOffset0 + (-7)] += buffer[eOffset2 + (-7)];
			buffer[eOffset2 + (-6)] = k00_20 * a[aOffset] - k01_21 * a[aOffset + 1];
			buffer[eOffset2 + (-7)] = k01_21 * a[aOffset] + k00_20 * a[aOffset + 1];
			eOffset0 -= 8;
			eOffset2 -= 8;
			aOffset += 16;
		}
		var d0 = n2 - 1 - n8 * 2;
		var aOffset = 0;
		var eOffset0 = d0;
		var eOffset2 = d0 + -(n >> 4);
		var i = (n >> 5 >> 2) + 1;
		while(--i > 0) {
			var k00_20 = buffer[eOffset0] - buffer[eOffset2];
			var k01_21 = buffer[eOffset0 + (-1)] - buffer[eOffset2 + (-1)];
			buffer[eOffset0] += buffer[eOffset2];
			buffer[eOffset0 + (-1)] += buffer[eOffset2 + (-1)];
			buffer[eOffset2] = k00_20 * a[aOffset] - k01_21 * a[aOffset + 1];
			buffer[eOffset2 + (-1)] = k01_21 * a[aOffset] + k00_20 * a[aOffset + 1];
			aOffset += 16;
			k00_20 = buffer[eOffset0 + (-2)] - buffer[eOffset2 + (-2)];
			k01_21 = buffer[eOffset0 + (-3)] - buffer[eOffset2 + (-3)];
			buffer[eOffset0 + (-2)] += buffer[eOffset2 + (-2)];
			buffer[eOffset0 + (-3)] += buffer[eOffset2 + (-3)];
			buffer[eOffset2 + (-2)] = k00_20 * a[aOffset] - k01_21 * a[aOffset + 1];
			buffer[eOffset2 + (-3)] = k01_21 * a[aOffset] + k00_20 * a[aOffset + 1];
			aOffset += 16;
			k00_20 = buffer[eOffset0 + (-4)] - buffer[eOffset2 + (-4)];
			k01_21 = buffer[eOffset0 + (-5)] - buffer[eOffset2 + (-5)];
			buffer[eOffset0 + (-4)] += buffer[eOffset2 + (-4)];
			buffer[eOffset0 + (-5)] += buffer[eOffset2 + (-5)];
			buffer[eOffset2 + (-4)] = k00_20 * a[aOffset] - k01_21 * a[aOffset + 1];
			buffer[eOffset2 + (-5)] = k01_21 * a[aOffset] + k00_20 * a[aOffset + 1];
			aOffset += 16;
			k00_20 = buffer[eOffset0 + (-6)] - buffer[eOffset2 + (-6)];
			k01_21 = buffer[eOffset0 + (-7)] - buffer[eOffset2 + (-7)];
			buffer[eOffset0 + (-6)] += buffer[eOffset2 + (-6)];
			buffer[eOffset0 + (-7)] += buffer[eOffset2 + (-7)];
			buffer[eOffset2 + (-6)] = k00_20 * a[aOffset] - k01_21 * a[aOffset + 1];
			buffer[eOffset2 + (-7)] = k01_21 * a[aOffset] + k00_20 * a[aOffset + 1];
			eOffset0 -= 8;
			eOffset2 -= 8;
			aOffset += 16;
		}
		var d0 = n2 - 1 - n8 * 3;
		var aOffset = 0;
		var eOffset0 = d0;
		var eOffset2 = d0 + -(n >> 4);
		var i = (n >> 5 >> 2) + 1;
		while(--i > 0) {
			var k00_20 = buffer[eOffset0] - buffer[eOffset2];
			var k01_21 = buffer[eOffset0 + (-1)] - buffer[eOffset2 + (-1)];
			buffer[eOffset0] += buffer[eOffset2];
			buffer[eOffset0 + (-1)] += buffer[eOffset2 + (-1)];
			buffer[eOffset2] = k00_20 * a[aOffset] - k01_21 * a[aOffset + 1];
			buffer[eOffset2 + (-1)] = k01_21 * a[aOffset] + k00_20 * a[aOffset + 1];
			aOffset += 16;
			k00_20 = buffer[eOffset0 + (-2)] - buffer[eOffset2 + (-2)];
			k01_21 = buffer[eOffset0 + (-3)] - buffer[eOffset2 + (-3)];
			buffer[eOffset0 + (-2)] += buffer[eOffset2 + (-2)];
			buffer[eOffset0 + (-3)] += buffer[eOffset2 + (-3)];
			buffer[eOffset2 + (-2)] = k00_20 * a[aOffset] - k01_21 * a[aOffset + 1];
			buffer[eOffset2 + (-3)] = k01_21 * a[aOffset] + k00_20 * a[aOffset + 1];
			aOffset += 16;
			k00_20 = buffer[eOffset0 + (-4)] - buffer[eOffset2 + (-4)];
			k01_21 = buffer[eOffset0 + (-5)] - buffer[eOffset2 + (-5)];
			buffer[eOffset0 + (-4)] += buffer[eOffset2 + (-4)];
			buffer[eOffset0 + (-5)] += buffer[eOffset2 + (-5)];
			buffer[eOffset2 + (-4)] = k00_20 * a[aOffset] - k01_21 * a[aOffset + 1];
			buffer[eOffset2 + (-5)] = k01_21 * a[aOffset] + k00_20 * a[aOffset + 1];
			aOffset += 16;
			k00_20 = buffer[eOffset0 + (-6)] - buffer[eOffset2 + (-6)];
			k01_21 = buffer[eOffset0 + (-7)] - buffer[eOffset2 + (-7)];
			buffer[eOffset0 + (-6)] += buffer[eOffset2 + (-6)];
			buffer[eOffset0 + (-7)] += buffer[eOffset2 + (-7)];
			buffer[eOffset2 + (-6)] = k00_20 * a[aOffset] - k01_21 * a[aOffset + 1];
			buffer[eOffset2 + (-7)] = k01_21 * a[aOffset] + k00_20 * a[aOffset + 1];
			eOffset0 -= 8;
			eOffset2 -= 8;
			aOffset += 16;
		}
		var _g = 2;
		var _g1 = ld - 3 >> 1;
		while(_g < _g1) {
			var l = _g++;
			var k0 = n >> l + 2;
			var k0_2 = k0 >> 1;
			var lim = 1 << l + 1;
			var _g2 = 0;
			while(_g2 < lim) {
				var d0 = n2 - 1 - k0 * _g2++;
				var k1 = 1 << l + 3;
				var aOffset = 0;
				var eOffset0 = d0;
				var eOffset2 = d0 + -k0_2;
				var i = (n >> l + 4 >> 2) + 1;
				while(--i > 0) {
					var k00_20 = buffer[eOffset0] - buffer[eOffset2];
					var k01_21 = buffer[eOffset0 + (-1)] - buffer[eOffset2 + (-1)];
					buffer[eOffset0] += buffer[eOffset2];
					buffer[eOffset0 + (-1)] += buffer[eOffset2 + (-1)];
					buffer[eOffset2] = k00_20 * a[aOffset] - k01_21 * a[aOffset + 1];
					buffer[eOffset2 + (-1)] = k01_21 * a[aOffset] + k00_20 * a[aOffset + 1];
					aOffset += k1;
					k00_20 = buffer[eOffset0 + (-2)] - buffer[eOffset2 + (-2)];
					k01_21 = buffer[eOffset0 + (-3)] - buffer[eOffset2 + (-3)];
					buffer[eOffset0 + (-2)] += buffer[eOffset2 + (-2)];
					buffer[eOffset0 + (-3)] += buffer[eOffset2 + (-3)];
					buffer[eOffset2 + (-2)] = k00_20 * a[aOffset] - k01_21 * a[aOffset + 1];
					buffer[eOffset2 + (-3)] = k01_21 * a[aOffset] + k00_20 * a[aOffset + 1];
					aOffset += k1;
					k00_20 = buffer[eOffset0 + (-4)] - buffer[eOffset2 + (-4)];
					k01_21 = buffer[eOffset0 + (-5)] - buffer[eOffset2 + (-5)];
					buffer[eOffset0 + (-4)] += buffer[eOffset2 + (-4)];
					buffer[eOffset0 + (-5)] += buffer[eOffset2 + (-5)];
					buffer[eOffset2 + (-4)] = k00_20 * a[aOffset] - k01_21 * a[aOffset + 1];
					buffer[eOffset2 + (-5)] = k01_21 * a[aOffset] + k00_20 * a[aOffset + 1];
					aOffset += k1;
					k00_20 = buffer[eOffset0 + (-6)] - buffer[eOffset2 + (-6)];
					k01_21 = buffer[eOffset0 + (-7)] - buffer[eOffset2 + (-7)];
					buffer[eOffset0 + (-6)] += buffer[eOffset2 + (-6)];
					buffer[eOffset0 + (-7)] += buffer[eOffset2 + (-7)];
					buffer[eOffset2 + (-6)] = k00_20 * a[aOffset] - k01_21 * a[aOffset + 1];
					buffer[eOffset2 + (-7)] = k01_21 * a[aOffset] + k00_20 * a[aOffset + 1];
					eOffset0 -= 8;
					eOffset2 -= 8;
					aOffset += k1;
				}
			}
		}
		var _g = ld - 3 >> 1;
		var _g1 = ld - 6;
		while(_g < _g1) {
			var l = _g++;
			var k0 = n >> l + 2;
			var k1 = 1 << l + 3;
			var k0_2 = k0 >> 1;
			var lim = 1 << l + 1;
			var aOffset = 0;
			var i_off = n2 - 1;
			var r = (n >> l + 6) + 1;
			while(--r > 0) {
				var A0 = a[aOffset];
				var A1 = a[aOffset + 1];
				var A2 = a[aOffset + k1];
				var A3 = a[aOffset + k1 + 1];
				var A4 = a[aOffset + k1 * 2];
				var A5 = a[aOffset + k1 * 2 + 1];
				var A6 = a[aOffset + k1 * 3];
				var A7 = a[aOffset + k1 * 3 + 1];
				var eeOffset0 = i_off;
				var eeOffset2 = i_off + -k0_2;
				var i = lim + 1;
				while(--i > 0) {
					var k00 = buffer[eeOffset0] - buffer[eeOffset2];
					var k11 = buffer[eeOffset0 + (-1)] - buffer[eeOffset2 + (-1)];
					buffer[eeOffset0] += buffer[eeOffset2];
					buffer[eeOffset0 + (-1)] += buffer[eeOffset2 + (-1)];
					buffer[eeOffset2] = k00 * A0 - k11 * A1;
					buffer[eeOffset2 + (-1)] = k11 * A0 + k00 * A1;
					k00 = buffer[eeOffset0 + (-2)] - buffer[eeOffset2 + (-2)];
					k11 = buffer[eeOffset0 + (-3)] - buffer[eeOffset2 + (-3)];
					buffer[eeOffset0 + (-2)] += buffer[eeOffset2 + (-2)];
					buffer[eeOffset0 + (-3)] += buffer[eeOffset2 + (-3)];
					buffer[eeOffset2 + (-2)] = k00 * A2 - k11 * A3;
					buffer[eeOffset2 + (-3)] = k11 * A2 + k00 * A3;
					k00 = buffer[eeOffset0 + (-4)] - buffer[eeOffset2 + (-4)];
					k11 = buffer[eeOffset0 + (-5)] - buffer[eeOffset2 + (-5)];
					buffer[eeOffset0 + (-4)] += buffer[eeOffset2 + (-4)];
					buffer[eeOffset0 + (-5)] += buffer[eeOffset2 + (-5)];
					buffer[eeOffset2 + (-4)] = k00 * A4 - k11 * A5;
					buffer[eeOffset2 + (-5)] = k11 * A4 + k00 * A5;
					k00 = buffer[eeOffset0 + (-6)] - buffer[eeOffset2 + (-6)];
					k11 = buffer[eeOffset0 + (-7)] - buffer[eeOffset2 + (-7)];
					buffer[eeOffset0 + (-6)] += buffer[eeOffset2 + (-6)];
					buffer[eeOffset0 + (-7)] += buffer[eeOffset2 + (-7)];
					buffer[eeOffset2 + (-6)] = k00 * A6 - k11 * A7;
					buffer[eeOffset2 + (-7)] = k11 * A6 + k00 * A7;
					eeOffset0 -= k0;
					eeOffset2 -= k0;
				}
				aOffset += k1 * 4;
				i_off -= 8;
			}
		}
		var i_off = n2 - 1;
		var A2 = a[n >> 3];
		var zOffset = i_off;
		var baseOffset = i_off - 16 * (n >> 5);
		while(zOffset > baseOffset) {
			var t0 = buffer[zOffset];
			var t1 = buffer[zOffset + (-8)];
			buffer[zOffset + (-8)] = t0 - t1;
			buffer[zOffset] = t0 + t1;
			t0 = buffer[zOffset + (-1)];
			t1 = buffer[zOffset + (-9)];
			buffer[zOffset + (-9)] = t0 - t1;
			buffer[zOffset + (-1)] = t0 + t1;
			t0 = buffer[zOffset + (-2)];
			t1 = buffer[zOffset + (-10)];
			var k00 = t0 - t1;
			buffer[zOffset + (-2)] = t0 + t1;
			t0 = buffer[zOffset + (-3)];
			t1 = buffer[zOffset + (-11)];
			var k11 = t0 - t1;
			buffer[zOffset + (-3)] = t0 + t1;
			buffer[zOffset + (-10)] = (k00 + k11) * A2;
			buffer[zOffset + (-11)] = (k11 - k00) * A2;
			t0 = buffer[zOffset + (-4)];
			t1 = buffer[zOffset + (-12)];
			k00 = t1 - t0;
			buffer[zOffset + (-4)] = t0 + t1;
			t0 = buffer[zOffset + (-5)];
			t1 = buffer[zOffset + (-13)];
			k11 = t0 - t1;
			buffer[zOffset + (-5)] = t0 + t1;
			buffer[zOffset + (-12)] = k11;
			buffer[zOffset + (-13)] = k00;
			t0 = buffer[zOffset + (-6)];
			t1 = buffer[zOffset + (-14)];
			k00 = t1 - t0;
			buffer[zOffset + (-6)] = t0 + t1;
			t0 = buffer[zOffset + (-7)];
			t1 = buffer[zOffset + (-15)];
			k11 = t0 - t1;
			buffer[zOffset + (-7)] = t0 + t1;
			buffer[zOffset + (-14)] = (k00 + k11) * A2;
			buffer[zOffset + (-15)] = (k00 - k11) * A2;
			var t01 = buffer[zOffset];
			var t11 = buffer[zOffset + (-4)];
			var k001 = t01 - t11;
			var y0 = t01 + t11;
			t01 = buffer[zOffset + (-2)];
			t11 = buffer[zOffset + (-6)];
			var y2 = t01 + t11;
			var k22 = t01 - t11;
			buffer[zOffset] = y0 + y2;
			buffer[zOffset + (-2)] = y0 - y2;
			var k33 = buffer[zOffset + (-3)] - buffer[zOffset + (-7)];
			buffer[zOffset + (-4)] = k001 + k33;
			buffer[zOffset + (-6)] = k001 - k33;
			t01 = buffer[zOffset + (-1)];
			t11 = buffer[zOffset + (-5)];
			var k111 = t01 - t11;
			var y1 = t01 + t11;
			var y3 = buffer[zOffset + (-3)] + buffer[zOffset + (-7)];
			buffer[zOffset + (-1)] = y1 + y3;
			buffer[zOffset + (-3)] = y1 - y3;
			buffer[zOffset + (-5)] = k111 - k22;
			buffer[zOffset + (-7)] = k111 + k22;
			var zOffset1 = zOffset - 8;
			var t02 = buffer[zOffset1];
			var t12 = buffer[zOffset1 + (-4)];
			var k002 = t02 - t12;
			var y01 = t02 + t12;
			t02 = buffer[zOffset1 + (-2)];
			t12 = buffer[zOffset1 + (-6)];
			var y21 = t02 + t12;
			var k221 = t02 - t12;
			buffer[zOffset1] = y01 + y21;
			buffer[zOffset1 + (-2)] = y01 - y21;
			var k331 = buffer[zOffset1 + (-3)] - buffer[zOffset1 + (-7)];
			buffer[zOffset1 + (-4)] = k002 + k331;
			buffer[zOffset1 + (-6)] = k002 - k331;
			t02 = buffer[zOffset1 + (-1)];
			t12 = buffer[zOffset1 + (-5)];
			var k112 = t02 - t12;
			var y11 = t02 + t12;
			var y31 = buffer[zOffset1 + (-3)] + buffer[zOffset1 + (-7)];
			buffer[zOffset1 + (-1)] = y11 + y31;
			buffer[zOffset1 + (-3)] = y11 - y31;
			buffer[zOffset1 + (-5)] = k112 - k221;
			buffer[zOffset1 + (-7)] = k112 + k221;
			zOffset -= 16;
		}
		var brOffset = 0;
		var dOffset0 = n4 - 4;
		var dOffset1 = n2 - 4;
		while(dOffset0 >= 0) {
			var k4 = bitReverse[brOffset];
			buf2[dOffset1 + 3] = buffer[k4];
			buf2[dOffset1 + 2] = buffer[k4 + 1];
			buf2[dOffset0 + 3] = buffer[k4 + 2];
			buf2[dOffset0 + 2] = buffer[k4 + 3];
			k4 = bitReverse[brOffset + 1];
			buf2[dOffset1 + 1] = buffer[k4];
			buf2[dOffset1] = buffer[k4 + 1];
			buf2[dOffset0 + 1] = buffer[k4 + 2];
			buf2[dOffset0] = buffer[k4 + 3];
			dOffset0 -= 4;
			dOffset1 -= 4;
			brOffset += 2;
		}
		var cOffset = 0;
		var dOffset = 0;
		var eOffset = n2 - 4;
		while(dOffset < eOffset) {
			var a02 = buf2[dOffset] - buf2[eOffset + 2];
			var a11 = buf2[dOffset + 1] + buf2[eOffset + 3];
			var b0 = c[cOffset + 1] * a02 + c[cOffset] * a11;
			var b1 = c[cOffset + 1] * a11 - c[cOffset] * a02;
			var b2 = buf2[dOffset] + buf2[eOffset + 2];
			var b3 = buf2[dOffset + 1] - buf2[eOffset + 3];
			buf2[dOffset] = b2 + b0;
			buf2[dOffset + 1] = b3 + b1;
			buf2[eOffset + 2] = b2 - b0;
			buf2[eOffset + 3] = b1 - b3;
			a02 = buf2[dOffset + 2] - buf2[eOffset];
			a11 = buf2[dOffset + 3] + buf2[eOffset + 1];
			b0 = c[cOffset + 3] * a02 + c[cOffset + 2] * a11;
			b1 = c[cOffset + 3] * a11 - c[cOffset + 2] * a02;
			b2 = buf2[dOffset + 2] + buf2[eOffset];
			b3 = buf2[dOffset + 3] - buf2[eOffset + 1];
			buf2[dOffset + 2] = b2 + b0;
			buf2[dOffset + 3] = b3 + b1;
			buf2[eOffset] = b2 - b0;
			buf2[eOffset + 1] = b1 - b3;
			cOffset += 4;
			dOffset += 4;
			eOffset -= 4;
		}
		var bOffset = n2 - 8;
		var eOffset = n2 - 8;
		var dOffset0 = 0;
		var dOffset1 = n2 - 4;
		var dOffset2 = n2;
		var dOffset3 = n - 4;
		while(eOffset >= 0) {
			var p3 = buf2[eOffset + 6] * b[bOffset + 7] - buf2[eOffset + 7] * b[bOffset + 6];
			var p2 = -buf2[eOffset + 6] * b[bOffset + 6] - buf2[eOffset + 7] * b[bOffset + 7];
			buffer[dOffset0] = p3;
			buffer[dOffset1 + 3] = -p3;
			buffer[dOffset2] = p2;
			buffer[dOffset3 + 3] = p2;
			var p1 = buf2[eOffset + 4] * b[bOffset + 5] - buf2[eOffset + 5] * b[bOffset + 4];
			var p0 = -buf2[eOffset + 4] * b[bOffset + 4] - buf2[eOffset + 5] * b[bOffset + 5];
			buffer[dOffset0 + 1] = p1;
			buffer[dOffset1 + 2] = -p1;
			buffer[dOffset2 + 1] = p0;
			buffer[dOffset3 + 2] = p0;
			p3 = buf2[eOffset + 2] * b[bOffset + 3] - buf2[eOffset + 3] * b[bOffset + 2];
			p2 = -buf2[eOffset + 2] * b[bOffset + 2] - buf2[eOffset + 3] * b[bOffset + 3];
			buffer[dOffset0 + 2] = p3;
			buffer[dOffset1 + 1] = -p3;
			buffer[dOffset2 + 2] = p2;
			buffer[dOffset3 + 1] = p2;
			p1 = buf2[eOffset] * b[bOffset + 1] - buf2[eOffset + 1] * b[bOffset];
			p0 = -buf2[eOffset] * b[bOffset] - buf2[eOffset + 1] * b[bOffset + 1];
			buffer[dOffset0 + 3] = p1;
			buffer[dOffset1] = -p1;
			buffer[dOffset2 + 3] = p0;
			buffer[dOffset3] = p0;
			bOffset -= 8;
			eOffset -= 8;
			dOffset0 += 4;
			dOffset2 += 4;
			dOffset1 -= 4;
			dOffset3 -= 4;
		}
	}
	,decodePacket: function() {
		var result = this.decodeInitial();
		if(result == null) {
			return null;
		}
		return this.decodePacketRest(result);
	}
	,decodeInitial: function() {
		this.channelBufferStart = this.channelBufferEnd = 0;
		while(true) {
			if(!this.decodeState.maybeStartPacket()) {
				return null;
			}
			if(this.decodeState.readBits(1) != 0) {
				while(true) {
					var _this = this.decodeState;
					var x;
					if(_this.bytesInSeg == 0 && (_this.lastSeg || _this.next() == 0)) {
						x = -1;
					} else {
						_this.bytesInSeg--;
						_this.inputPosition += 1;
						x = _this.input.readByte();
					}
					_this.validBits = 0;
					if(!(-1 != x)) {
						break;
					}
				}
				continue;
			}
			break;
		}
		var n = this.header.modes.length - 1;
		var log2_4 = [0,1,2,2,3,3,3,3,4,4,4,4,4,4,4,4];
		var i = this.decodeState.readBits(n < 16384 ? n < 16 ? log2_4[n] : n < 512 ? 5 + log2_4[n >> 5] : 10 + log2_4[n >> 10] : n < 16777216 ? n < 524288 ? 15 + log2_4[n >> 15] : 20 + log2_4[n >> 20] : n < 536870912 ? 25 + log2_4[n >> 25] : n < -2147483648 ? 30 + log2_4[n >> 30] : 0);
		if(i == -1 || i >= this.header.modes.length) {
			throw haxe_Exception.thrown(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.SEEK_FAILED,null,{ fileName : "kha/audio2/ogg/vorbis/VorbisDecoder.hx", lineNumber : 519, className : "kha.audio2.ogg.vorbis.VorbisDecoder", methodName : "decodeInitial"}));
		}
		var m = this.header.modes[i];
		var n;
		var prev;
		var next;
		if(m.blockflag) {
			n = this.header.blocksize1;
			prev = this.decodeState.readBits(1);
			next = this.decodeState.readBits(1);
		} else {
			next = 0;
			prev = 0;
			n = this.header.blocksize0;
		}
		var windowCenter = n >> 1;
		return { mode : i, left : m.blockflag && prev == 0 ? { start : n - this.header.blocksize0 >> 2, end : n + this.header.blocksize0 >> 2} : { start : 0, end : windowCenter}, right : m.blockflag && next == 0 ? { start : n * 3 - this.header.blocksize0 >> 2, end : n * 3 + this.header.blocksize0 >> 2} : { start : windowCenter, end : n}};
	}
	,decodePacketRest: function(r) {
		var m = this.header.modes[r.mode];
		var zeroChannel = new Array(256);
		var reallyZeroChannel = new Array(256);
		var n = m.blockflag ? this.header.blocksize1 : this.header.blocksize0;
		var map = this.header.mapping[m.mapping];
		var n2 = n >> 1;
		var rangeList = [256,128,86,64];
		var codebooks = this.header.codebooks;
		var _g = 0;
		var _g1 = this.header.channel;
		while(_g < _g1) {
			var i = _g++;
			var s = map.chan[i].mux;
			zeroChannel[i] = false;
			var floor = this.header.floorConfig[map.submapFloor[s]];
			if(floor.type == 0) {
				throw haxe_Exception.thrown(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_STREAM,null,{ fileName : "kha/audio2/ogg/vorbis/VorbisDecoder.hx", lineNumber : 581, className : "kha.audio2.ogg.vorbis.VorbisDecoder", methodName : "decodePacketRest"}));
			} else {
				var g = floor.floor1;
				if(this.decodeState.readBits(1) != 0) {
					var fy = [];
					var step2Flag = new Array(256);
					var range = rangeList[g.floor1Multiplier - 1];
					var offset = 2;
					fy = this.finalY[i];
					var log2_4 = [0,1,2,2,3,3,3,3,4,4,4,4,4,4,4,4];
					fy[0] = this.decodeState.readBits((range < 16384 ? range < 16 ? log2_4[range] : range < 512 ? 5 + log2_4[range >> 5] : 10 + log2_4[range >> 10] : range < 16777216 ? range < 524288 ? 15 + log2_4[range >> 15] : 20 + log2_4[range >> 20] : range < 536870912 ? 25 + log2_4[range >> 25] : range < -2147483648 ? 30 + log2_4[range >> 30] : 0) - 1);
					var log2_41 = [0,1,2,2,3,3,3,3,4,4,4,4,4,4,4,4];
					fy[1] = this.decodeState.readBits((range < 16384 ? range < 16 ? log2_41[range] : range < 512 ? 5 + log2_41[range >> 5] : 10 + log2_41[range >> 10] : range < 16777216 ? range < 524288 ? 15 + log2_41[range >> 15] : 20 + log2_41[range >> 20] : range < 536870912 ? 25 + log2_41[range >> 25] : range < -2147483648 ? 30 + log2_41[range >> 30] : 0) - 1);
					var _g2 = 0;
					var _g3 = g.partitions;
					while(_g2 < _g3) {
						var pclass = g.partitionClassList[_g2++];
						var cdim = g.classDimensions[pclass];
						var cbits = g.classSubclasses[pclass];
						var csub = (1 << cbits) - 1;
						var cval = 0;
						if(cbits != 0) {
							var c = codebooks[g.classMasterbooks[pclass]];
							var _this = this.decodeState;
							if(_this.validBits < 10) {
								_this.prepHuffman();
							}
							var i1 = c.fastHuffman[_this.acc & 1023];
							var val;
							if(i1 >= 0) {
								var l = c.codewordLengths[i1];
								_this.acc = _this.acc >>> l;
								_this.validBits -= l;
								if(_this.validBits < 0) {
									_this.validBits = 0;
									val = -1;
								} else {
									val = i1;
								}
							} else {
								val = _this.decodeScalarRaw(c);
							}
							if(c.sparse) {
								val = c.sortedValues[val];
							}
							cval = val;
						}
						var books = g.subclassBooks[pclass];
						var _g4 = 0;
						while(_g4 < cdim) {
							++_g4;
							var book = books[cval & csub];
							cval >>= cbits;
							var tmp = offset++;
							var tmp1;
							if(book >= 0) {
								var _this1 = this.decodeState;
								var c1 = codebooks[book];
								if(_this1.validBits < 10) {
									_this1.prepHuffman();
								}
								var i2 = c1.fastHuffman[_this1.acc & 1023];
								var val1;
								if(i2 >= 0) {
									var l1 = c1.codewordLengths[i2];
									_this1.acc = _this1.acc >>> l1;
									_this1.validBits -= l1;
									if(_this1.validBits < 0) {
										_this1.validBits = 0;
										val1 = -1;
									} else {
										val1 = i2;
									}
								} else {
									val1 = _this1.decodeScalarRaw(c1);
								}
								if(c1.sparse) {
									val1 = c1.sortedValues[val1];
								}
								tmp1 = val1;
							} else {
								tmp1 = 0;
							}
							fy[tmp] = tmp1;
						}
					}
					if(this.decodeState.validBits == -1) {
						zeroChannel[i] = true;
						continue;
					}
					step2Flag[1] = true;
					step2Flag[0] = true;
					var naighbors = g.neighbors;
					var xlist = g.xlist;
					var _g5 = 2;
					var _g6 = g.values;
					while(_g5 < _g6) {
						var j = _g5++;
						var low = naighbors[j][0];
						var high = naighbors[j][1];
						var x0 = xlist[low];
						var y0 = fy[low];
						var dy = fy[high] - y0;
						var off = Math.abs(dy) * (xlist[j] - x0) / (xlist[high] - x0) | 0;
						var lowroom = dy < 0 ? y0 - off : y0 + off;
						var val2 = fy[j];
						var highroom = range - lowroom;
						if(val2 != 0) {
							step2Flag[high] = true;
							step2Flag[low] = true;
							step2Flag[j] = true;
							if(val2 >= (highroom < lowroom ? highroom * 2 : lowroom * 2)) {
								if(highroom > lowroom) {
									fy[j] = val2 - lowroom + lowroom;
								} else {
									fy[j] = lowroom - val2 + highroom - 1;
								}
							} else if((val2 & 1) != 0) {
								fy[j] = lowroom - (val2 + 1 >> 1);
							} else {
								fy[j] = lowroom + (val2 >> 1);
							}
						} else {
							step2Flag[j] = false;
							fy[j] = lowroom;
						}
					}
					var _g7 = 0;
					var _g8 = g.values;
					while(_g7 < _g8) {
						var j1 = _g7++;
						if(!step2Flag[j1]) {
							fy[j1] = -1;
						}
					}
				} else {
					zeroChannel[i] = true;
				}
			}
		}
		var _g = 0;
		var _g1 = this.header.channel;
		while(_g < _g1) {
			var i = _g++;
			reallyZeroChannel[i] = zeroChannel[i];
		}
		var _g = 0;
		var _g1 = map.couplingSteps;
		while(_g < _g1) {
			var i = _g++;
			if(!zeroChannel[map.chan[i].magnitude] || !zeroChannel[map.chan[i].angle]) {
				var index = map.chan[i].magnitude;
				zeroChannel[map.chan[i].angle] = false;
				zeroChannel[index] = false;
			}
		}
		var _g = 0;
		var _g1 = map.submaps;
		while(_g < _g1) {
			var i = _g++;
			var residueBuffers = new Array(this.header.channel);
			var doNotDecode = new Array(256);
			var ch = 0;
			var _g2 = 0;
			var _g3 = this.header.channel;
			while(_g2 < _g3) {
				var j = _g2++;
				if(map.chan[j].mux == i) {
					if(zeroChannel[j]) {
						doNotDecode[ch] = true;
						residueBuffers[ch] = null;
					} else {
						doNotDecode[ch] = false;
						residueBuffers[ch] = this.channelBuffers[j];
					}
					++ch;
				}
			}
			this.header.residueConfig[map.submapResidue[i]].decode(this.decodeState,this.header,residueBuffers,ch,n2,doNotDecode,this.channelBuffers);
		}
		var i = map.couplingSteps;
		var n2 = n >> 1;
		while(--i >= 0) {
			var m1 = this.channelBuffers[map.chan[i].magnitude];
			var a = this.channelBuffers[map.chan[i].angle];
			var _g = 0;
			while(_g < n2) {
				var j = _g++;
				var a2;
				var m2;
				if(m1[j] > 0) {
					if(a[j] > 0) {
						m2 = m1[j];
						a2 = m1[j] - a[j];
					} else {
						a2 = m1[j];
						m2 = m1[j] + a[j];
					}
				} else if(a[j] > 0) {
					m2 = m1[j];
					a2 = m1[j] + a[j];
				} else {
					a2 = m1[j];
					m2 = m1[j] - a[j];
				}
				m1[j] = m2;
				a[j] = a2;
			}
		}
		var _g = 0;
		var _g1 = this.header.channel;
		while(_g < _g1) {
			var i = _g++;
			if(reallyZeroChannel[i]) {
				var _g2 = 0;
				while(_g2 < n2) this.channelBuffers[i][_g2++] = 0;
			} else {
				map.doFloor(this.header.floorConfig,i,n,this.channelBuffers[i],this.finalY[i],null);
			}
		}
		var _g = 0;
		var _g1 = this.header.channel;
		while(_g < _g1) this.inverseMdct(this.channelBuffers[_g++],n,m.blockflag);
		var _this = this.decodeState;
		while(_this.bytesInSeg != 0 || !_this.lastSeg && _this.next() != 0) {
			_this.bytesInSeg--;
			_this.inputPosition += 1;
			_this.input.readByte();
		}
		return this.decodeState.finishDecodePacket(this.previousLength,n,r);
	}
	,__class__: kha_audio2_ogg_vorbis_VorbisDecoder
};
var kha_audio2_ogg_vorbis_VorbisTools = function() { };
$hxClasses["kha.audio2.ogg.vorbis.VorbisTools"] = kha_audio2_ogg_vorbis_VorbisTools;
kha_audio2_ogg_vorbis_VorbisTools.__name__ = "kha.audio2.ogg.vorbis.VorbisTools";
kha_audio2_ogg_vorbis_VorbisTools.pointCompare = function(a,b) {
	if(a.x < b.x) {
		return -1;
	} else if(a.x > b.x) {
		return 1;
	} else {
		return 0;
	}
};
kha_audio2_ogg_vorbis_VorbisTools.uintAsc = function(a,b) {
	if(UInt.gt(b,a)) {
		return -1;
	} else if(a == b) {
		return 0;
	} else {
		return 1;
	}
};
kha_audio2_ogg_vorbis_VorbisTools.lookup1Values = function(entries,dim) {
	var r = Math.exp(Math.log(entries) / dim) | 0;
	if((Math.pow(r + 1,dim) | 0) <= entries) {
		++r;
	}
	return r;
};
kha_audio2_ogg_vorbis_VorbisTools.computeWindow = function(n,$window) {
	var n2 = n >> 1;
	var _g = 0;
	while(_g < n2) {
		var i = _g++;
		$window[i] = Math.sin(1.5707963267948966 * kha_audio2_ogg_vorbis_VorbisTools.square(Math.sin((i + 0.5) / n2 * 0.5 * 3.14159265358979323846264)));
	}
};
kha_audio2_ogg_vorbis_VorbisTools.square = function(f) {
	return f * f;
};
kha_audio2_ogg_vorbis_VorbisTools.computeBitReverse = function(n,rev) {
	var log2_4 = [0,1,2,2,3,3,3,3,4,4,4,4,4,4,4,4];
	var ld = (n < 16384 ? n < 16 ? log2_4[n] : n < 512 ? 5 + log2_4[n >> 5] : 10 + log2_4[n >> 10] : n < 16777216 ? n < 524288 ? 15 + log2_4[n >> 15] : 20 + log2_4[n >> 20] : n < 536870912 ? 25 + log2_4[n >> 25] : n < -2147483648 ? 30 + log2_4[n >> 30] : 0) - 1;
	var n8 = n >> 3;
	var _g = 0;
	while(_g < n8) {
		var i = _g++;
		var n = i;
		n = (n & -1431655766) >>> 1 | (n & 1431655765) << 1;
		n = (n & -858993460) >>> 2 | (n & 858993459) << 2;
		n = (n & -252645136) >>> 4 | (n & 252645135) << 4;
		n = (n & -16711936) >>> 8 | (n & 16711935) << 8;
		rev[i] = (n >>> 16 | n << 16) >>> 32 - ld + 3 << 2;
	}
};
kha_audio2_ogg_vorbis_VorbisTools.computeTwiddleFactors = function(n,af,bf,cf) {
	var n4 = n >> 2;
	var n8 = n >> 3;
	var k2 = 0;
	var _g = 0;
	while(_g < n4) {
		var k = _g++;
		af[k2] = Math.cos(4 * k * 3.14159265358979323846264 / n);
		af[k2 + 1] = -Math.sin(4 * k * 3.14159265358979323846264 / n);
		bf[k2] = Math.cos((k2 + 1) * 3.14159265358979323846264 / n / 2) * 0.5;
		bf[k2 + 1] = Math.sin((k2 + 1) * 3.14159265358979323846264 / n / 2) * 0.5;
		k2 += 2;
	}
	var k2 = 0;
	var _g = 0;
	while(_g < n8) {
		++_g;
		cf[k2] = Math.cos(2 * (k2 + 1) * 3.14159265358979323846264 / n);
		cf[k2 + 1] = -Math.sin(2 * (k2 + 1) * 3.14159265358979323846264 / n);
		k2 += 2;
	}
};
kha_audio2_ogg_vorbis_VorbisTools.drawLine = function(output,x0,y0,x1,y1,n) {
	if(kha_audio2_ogg_vorbis_VorbisTools.integerDivideTable == null) {
		kha_audio2_ogg_vorbis_VorbisTools.integerDivideTable = new Array(32);
		var _g = 0;
		while(_g < 32) {
			var i = _g++;
			kha_audio2_ogg_vorbis_VorbisTools.integerDivideTable[i] = new Array(64);
			var _g1 = 1;
			while(_g1 < 64) {
				var j = _g1++;
				kha_audio2_ogg_vorbis_VorbisTools.integerDivideTable[i][j] = i / j | 0;
			}
		}
	}
	var dy = y1 - y0;
	var adx = x1 - x0;
	var ady = dy < 0 ? -dy : dy;
	var base;
	var y = y0;
	var err = 0;
	var sy;
	if(adx < 64 && ady < 32) {
		if(dy < 0) {
			base = -kha_audio2_ogg_vorbis_VorbisTools.integerDivideTable[ady][adx];
			sy = base - 1;
		} else {
			base = kha_audio2_ogg_vorbis_VorbisTools.integerDivideTable[ady][adx];
			sy = base + 1;
		}
	} else {
		base = dy / adx | 0;
		sy = dy < 0 ? base - 1 : base + 1;
	}
	ady -= (base < 0 ? -base : base) * adx;
	if(x1 > n) {
		x1 = n;
	}
	output[x0] *= kha_audio2_ogg_vorbis_VorbisTools.INVERSE_DB_TABLE[y0];
	var _g = x0 + 1;
	var _g1 = x1;
	while(_g < _g1) {
		var i = _g++;
		err += ady;
		if(err >= adx) {
			err -= adx;
			y += sy;
		} else {
			y += base;
		}
		output[i] *= kha_audio2_ogg_vorbis_VorbisTools.INVERSE_DB_TABLE[y];
	}
};
var kha_audio2_ogg_vorbis_data_Codebook = function() {
};
$hxClasses["kha.audio2.ogg.vorbis.data.Codebook"] = kha_audio2_ogg_vorbis_data_Codebook;
kha_audio2_ogg_vorbis_data_Codebook.__name__ = "kha.audio2.ogg.vorbis.data.Codebook";
kha_audio2_ogg_vorbis_data_Codebook.read = function(decodeState) {
	var c = new kha_audio2_ogg_vorbis_data_Codebook();
	if(decodeState.readBits(8) != 66 || decodeState.readBits(8) != 67 || decodeState.readBits(8) != 86) {
		throw haxe_Exception.thrown(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,null,{ fileName : "kha/audio2/ogg/vorbis/data/Codebook.hx", lineNumber : 40, className : "kha.audio2.ogg.vorbis.data.Codebook", methodName : "read"}));
	}
	var x = decodeState.readBits(8);
	c.dimensions = (decodeState.readBits(8) << 8) + x;
	var x = decodeState.readBits(8);
	var y = decodeState.readBits(8);
	c.entries = (decodeState.readBits(8) << 16) + (y << 8) + x;
	var ordered = decodeState.readBits(1);
	c.sparse = ordered != 0 ? false : decodeState.readBits(1) != 0;
	var lengths = new Array(c.entries);
	if(!c.sparse) {
		c.codewordLengths = lengths;
	}
	var total = 0;
	if(ordered != 0) {
		var currentEntry = 0;
		var currentLength = decodeState.readBits(5) + 1;
		while(currentEntry < c.entries) {
			var limit = c.entries - currentEntry;
			var log2_4 = [0,1,2,2,3,3,3,3,4,4,4,4,4,4,4,4];
			var n = decodeState.readBits(limit < 16384 ? limit < 16 ? log2_4[limit] : limit < 512 ? 5 + log2_4[limit >> 5] : 10 + log2_4[limit >> 10] : limit < 16777216 ? limit < 524288 ? 15 + log2_4[limit >> 15] : 20 + log2_4[limit >> 20] : limit < 536870912 ? 25 + log2_4[limit >> 25] : limit < -2147483648 ? 30 + log2_4[limit >> 30] : 0);
			if(currentEntry + n > c.entries) {
				throw haxe_Exception.thrown(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,"codebook entrys",{ fileName : "kha/audio2/ogg/vorbis/data/Codebook.hx", lineNumber : 67, className : "kha.audio2.ogg.vorbis.data.Codebook", methodName : "read"}));
			}
			var _g = 0;
			while(_g < n) lengths[currentEntry + _g++] = currentLength;
			currentEntry += n;
			++currentLength;
		}
	} else {
		var _g = 0;
		var _g1 = c.entries;
		while(_g < _g1) {
			var j = _g++;
			if((c.sparse ? decodeState.readBits(1) : 1) != 0) {
				lengths[j] = decodeState.readBits(5) + 1;
				++total;
			} else {
				lengths[j] = 255;
			}
		}
	}
	if(c.sparse && total >= c.entries >> 2) {
		c.codewordLengths = lengths;
		c.sparse = false;
	}
	var tmp;
	if(c.sparse) {
		tmp = total;
	} else {
		var sortedCount = 0;
		var _g = 0;
		var _g1 = c.entries;
		while(_g < _g1) {
			var l = lengths[_g++];
			if(l > 10 && l != 255) {
				++sortedCount;
			}
		}
		tmp = sortedCount;
	}
	c.sortedEntries = tmp;
	var values = null;
	if(!c.sparse) {
		c.codewords = new Array(c.entries);
	} else if(c.sortedEntries != 0) {
		c.codewordLengths = new Array(c.sortedEntries);
		c.codewords = new Array(c.entries);
		values = new Array(c.entries);
	}
	if(!c.computeCodewords(lengths,c.entries,values)) {
		throw haxe_Exception.thrown(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,"compute codewords",{ fileName : "kha/audio2/ogg/vorbis/data/Codebook.hx", lineNumber : 120, className : "kha.audio2.ogg.vorbis.data.Codebook", methodName : "read"}));
	}
	if(c.sortedEntries != 0) {
		c.sortedCodewords = [];
		c.sortedValues = new Array(c.sortedEntries);
		c.computeSortedHuffman(lengths,values);
	}
	if(c.sparse) {
		c.codewords = null;
		lengths = null;
	}
	c.computeAcceleratedHuffman();
	c.lookupType = decodeState.readBits(4);
	if(c.lookupType > 2) {
		throw haxe_Exception.thrown(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,"codebook lookup type",{ fileName : "kha/audio2/ogg/vorbis/data/Codebook.hx", lineNumber : 143, className : "kha.audio2.ogg.vorbis.data.Codebook", methodName : "read"}));
	}
	if(c.lookupType > 0) {
		var x = decodeState.readBits(32);
		var mantissa = UInt.toFloat(x & 2097151);
		c.minimumValue = ((x & -2147483648) != 0 ? -mantissa : mantissa) * Math.pow(2,((x & 2145386496) >>> 21) - 788);
		var x = decodeState.readBits(32);
		var mantissa = UInt.toFloat(x & 2097151);
		c.deltaValue = ((x & -2147483648) != 0 ? -mantissa : mantissa) * Math.pow(2,((x & 2145386496) >>> 21) - 788);
		c.valueBits = decodeState.readBits(4) + 1;
		c.sequenceP = decodeState.readBits(1) != 0;
		if(c.lookupType == 1) {
			c.lookupValues = kha_audio2_ogg_vorbis_VorbisTools.lookup1Values(c.entries,c.dimensions);
		} else {
			c.lookupValues = c.entries * c.dimensions;
		}
		var mults = new Array(c.lookupValues);
		var _g = 0;
		var _g1 = c.lookupValues;
		while(_g < _g1) {
			var j = _g++;
			var q = decodeState.readBits(c.valueBits);
			if(q == -1) {
				throw haxe_Exception.thrown(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,"fail lookup",{ fileName : "kha/audio2/ogg/vorbis/data/Codebook.hx", lineNumber : 161, className : "kha.audio2.ogg.vorbis.data.Codebook", methodName : "read"}));
			}
			mults[j] = q;
		}
		c.multiplicands = new Array(c.lookupValues);
		var _g = 0;
		var _g1 = c.lookupValues;
		while(_g < _g1) {
			var j = _g++;
			c.multiplicands[j] = mults[j] * c.deltaValue + c.minimumValue;
		}
		if(c.lookupType == 2 && c.sequenceP) {
			var _g = 1;
			var _g1 = c.lookupValues;
			while(_g < _g1) {
				var j = _g++;
				c.multiplicands[j] = c.multiplicands[j - 1];
			}
			c.sequenceP = false;
		}
	}
	return c;
};
kha_audio2_ogg_vorbis_data_Codebook.prototype = {
	dimensions: null
	,entries: null
	,codewordLengths: null
	,minimumValue: null
	,deltaValue: null
	,valueBits: null
	,lookupType: null
	,sequenceP: null
	,sparse: null
	,lookupValues: null
	,multiplicands: null
	,codewords: null
	,fastHuffman: null
	,sortedCodewords: null
	,sortedValues: null
	,sortedEntries: null
	,computeCodewords: function(len,n,values) {
		var available = new Array(32);
		available[0] = 0;
		available[1] = 0;
		available[2] = 0;
		available[3] = 0;
		available[4] = 0;
		available[5] = 0;
		available[6] = 0;
		available[7] = 0;
		available[8] = 0;
		available[9] = 0;
		available[10] = 0;
		available[11] = 0;
		available[12] = 0;
		available[13] = 0;
		available[14] = 0;
		available[15] = 0;
		available[16] = 0;
		available[17] = 0;
		available[18] = 0;
		available[19] = 0;
		available[20] = 0;
		available[21] = 0;
		available[22] = 0;
		available[23] = 0;
		available[24] = 0;
		available[25] = 0;
		available[26] = 0;
		available[27] = 0;
		available[28] = 0;
		available[29] = 0;
		available[30] = 0;
		available[31] = 0;
		var k = 0;
		while(k < n) {
			if(len[k] < 255) {
				break;
			}
			++k;
		}
		if(k == n) {
			return true;
		}
		var m = 0;
		m = 1;
		if(!this.sparse) {
			this.codewords[k] = 0;
		} else {
			this.codewords[0] = 0;
			this.codewordLengths[0] = len[k];
			values[0] = k;
		}
		var i = 0;
		while(++i <= len[k]) available[i] = 1 << 32 - i;
		i = k;
		while(++i < n) {
			var z = len[i];
			if(z == 255) {
				continue;
			}
			while(z > 0 && available[z] == 0) --z;
			if(z == 0) {
				return false;
			}
			var res = available[z];
			available[z] = 0;
			var n1 = res;
			n1 = (res & -1431655766) >>> 1 | (res & 1431655765) << 1;
			n1 = (n1 & -858993460) >>> 2 | (n1 & 858993459) << 2;
			n1 = (n1 & -252645136) >>> 4 | (n1 & 252645135) << 4;
			n1 = (n1 & -16711936) >>> 8 | (n1 & 16711935) << 8;
			var huffCode = n1 >>> 16 | n1 << 16;
			var count = m++;
			if(!this.sparse) {
				this.codewords[i] = huffCode;
			} else {
				this.codewords[count] = huffCode;
				this.codewordLengths[count] = len[i];
				values[count] = i;
			}
			if(z != len[i]) {
				var y = len[i];
				while(y > z) {
					available[y] = res + (1 << 32 - y);
					--y;
				}
			}
		}
		return true;
	}
	,computeSortedHuffman: function(lengths,values) {
		if(!this.sparse) {
			var k = 0;
			var _g = 0;
			var _g1 = this.entries;
			while(_g < _g1) {
				var i = _g++;
				var len = lengths[i];
				if(this.sparse ? true : len == 255 ? false : len > 10) {
					var n = this.codewords[i];
					n = (n & -1431655766) >>> 1 | (n & 1431655765) << 1;
					n = (n & -858993460) >>> 2 | (n & 858993459) << 2;
					n = (n & -252645136) >>> 4 | (n & 252645135) << 4;
					n = (n & -16711936) >>> 8 | (n & 16711935) << 8;
					this.sortedCodewords[k++] = n >>> 16 | n << 16;
				}
			}
		} else {
			var _g = 0;
			var _g1 = this.sortedEntries;
			while(_g < _g1) {
				var i = _g++;
				var n = this.codewords[i];
				n = (n & -1431655766) >>> 1 | (n & 1431655765) << 1;
				n = (n & -858993460) >>> 2 | (n & 858993459) << 2;
				n = (n & -252645136) >>> 4 | (n & 252645135) << 4;
				n = (n & -16711936) >>> 8 | (n & 16711935) << 8;
				this.sortedCodewords[i] = n >>> 16 | n << 16;
			}
		}
		this.sortedCodewords[this.sortedEntries] = -1;
		this.sortedCodewords.sort(kha_audio2_ogg_vorbis_VorbisTools.uintAsc);
		var _g = 0;
		var _g1 = this.sparse ? this.sortedEntries : this.entries;
		while(_g < _g1) {
			var i = _g++;
			var huffLen = this.sparse ? lengths[values[i]] : lengths[i];
			if(this.sparse ? true : huffLen == 255 ? false : huffLen > 10) {
				var n = this.codewords[i];
				n = (n & -1431655766) >>> 1 | (n & 1431655765) << 1;
				n = (n & -858993460) >>> 2 | (n & 858993459) << 2;
				n = (n & -252645136) >>> 4 | (n & 252645135) << 4;
				n = (n & -16711936) >>> 8 | (n & 16711935) << 8;
				var code = n >>> 16 | n << 16;
				var x = 0;
				var n1 = this.sortedEntries;
				while(n1 > 1) {
					var m = x + (n1 >> 1);
					if(UInt.gte(code,this.sortedCodewords[m])) {
						x = m;
						n1 -= n1 >> 1;
					} else {
						n1 >>= 1;
					}
				}
				if(this.sparse) {
					this.sortedValues[x] = values[i];
					this.codewordLengths[x] = huffLen;
				} else {
					this.sortedValues[x] = i;
				}
			}
		}
	}
	,computeAcceleratedHuffman: function() {
		this.fastHuffman = new Array(1024);
		this.fastHuffman[0] = -1;
		var _g = 0;
		while(_g < 1024) this.fastHuffman[_g++] = -1;
		var _g = 0;
		var _g1 = this.sparse ? this.sortedEntries : this.entries;
		while(_g < _g1) {
			var i = _g++;
			if(this.codewordLengths[i] <= 10) {
				var z;
				if(this.sparse) {
					var n = this.sortedCodewords[i];
					n = (n & -1431655766) >>> 1 | (n & 1431655765) << 1;
					n = (n & -858993460) >>> 2 | (n & 858993459) << 2;
					n = (n & -252645136) >>> 4 | (n & 252645135) << 4;
					n = (n & -16711936) >>> 8 | (n & 16711935) << 8;
					z = n >>> 16 | n << 16;
				} else {
					z = this.codewords[i];
				}
				while(z < 1024) {
					this.fastHuffman[z] = i;
					z += 1 << this.codewordLengths[i];
				}
			}
		}
	}
	,codebookDecode: function(decodeState,output,offset,len) {
		if(decodeState.validBits < 10) {
			decodeState.prepHuffman();
		}
		var i = this.fastHuffman[decodeState.acc & 1023];
		var val;
		if(i >= 0) {
			var l = this.codewordLengths[i];
			decodeState.acc = decodeState.acc >>> l;
			decodeState.validBits -= l;
			if(decodeState.validBits < 0) {
				decodeState.validBits = 0;
				val = -1;
			} else {
				val = i;
			}
		} else {
			val = decodeState.decodeScalarRaw(this);
		}
		if(this.sparse) {
			val = this.sortedValues[val];
		}
		var z = val;
		var lookupValues = this.lookupValues;
		var sequenceP = this.sequenceP;
		var multiplicands = this.multiplicands;
		var minimumValue = this.minimumValue;
		if(z < 0) {
			return false;
		}
		if(len > this.dimensions) {
			len = this.dimensions;
		}
		if(this.lookupType == 1) {
			var div = 1;
			var last = 0.0;
			var _g = 0;
			var _g1 = len;
			while(_g < _g1) {
				var val = multiplicands[UInt.toFloat(z / div | 0) % UInt.toFloat(lookupValues) | 0] + last;
				output[offset + _g++] += val;
				if(sequenceP) {
					last = val + minimumValue;
				}
				div = div * lookupValues;
			}
			return true;
		}
		z *= this.dimensions;
		if(sequenceP) {
			var last = 0.0;
			var _g = 0;
			var _g1 = len;
			while(_g < _g1) {
				var i = _g++;
				var val = multiplicands[z + i] + last;
				output[offset + i] += val;
				last = val + minimumValue;
			}
		} else {
			var _g = 0;
			var _g1 = len;
			while(_g < _g1) {
				var i = _g++;
				output[offset + i] += multiplicands[z + i];
			}
		}
		return true;
	}
	,codebookDecodeStep: function(decodeState,output,offset,len,step) {
		if(decodeState.validBits < 10) {
			decodeState.prepHuffman();
		}
		var i = this.fastHuffman[decodeState.acc & 1023];
		var val;
		if(i >= 0) {
			var l = this.codewordLengths[i];
			decodeState.acc = decodeState.acc >>> l;
			decodeState.validBits -= l;
			if(decodeState.validBits < 0) {
				decodeState.validBits = 0;
				val = -1;
			} else {
				val = i;
			}
		} else {
			val = decodeState.decodeScalarRaw(this);
		}
		if(this.sparse) {
			val = this.sortedValues[val];
		}
		var z = val;
		var last = 0.0;
		if(z < 0) {
			return false;
		}
		if(len > this.dimensions) {
			len = this.dimensions;
		}
		var lookupValues = this.lookupValues;
		var sequenceP = this.sequenceP;
		var multiplicands = this.multiplicands;
		if(this.lookupType == 1) {
			var div = 1;
			var _g = 0;
			var _g1 = len;
			while(_g < _g1) {
				var val = multiplicands[UInt.toFloat(z / div | 0) % UInt.toFloat(lookupValues) | 0] + last;
				output[offset + _g++ * step] += val;
				if(sequenceP) {
					last = val;
				}
				div = div * lookupValues;
			}
			return true;
		}
		z *= this.dimensions;
		var _g = 0;
		var _g1 = len;
		while(_g < _g1) {
			var i = _g++;
			var val = multiplicands[z + i] + last;
			output[offset + i * step] += val;
			if(sequenceP) {
				last = val;
			}
		}
		return true;
	}
	,decodeDeinterleaveRepeat: function(decodeState,residueBuffers,ch,cInter,pInter,len,totalDecode) {
		var effective = this.dimensions;
		if(this.lookupType == 0) {
			throw haxe_Exception.thrown(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_STREAM,null,{ fileName : "kha/audio2/ogg/vorbis/data/Codebook.hx", lineNumber : 488, className : "kha.audio2.ogg.vorbis.data.Codebook", methodName : "decodeDeinterleaveRepeat"}));
		}
		var multiplicands = this.multiplicands;
		var sequenceP = this.sequenceP;
		var lookupValues = this.lookupValues;
		while(totalDecode > 0) {
			var last = 0.0;
			if(decodeState.validBits < 10) {
				decodeState.prepHuffman();
			}
			var i = this.fastHuffman[decodeState.acc & 1023];
			var val;
			if(i >= 0) {
				var l = this.codewordLengths[i];
				decodeState.acc = decodeState.acc >>> l;
				decodeState.validBits -= l;
				if(decodeState.validBits < 0) {
					decodeState.validBits = 0;
					val = -1;
				} else {
					val = i;
				}
			} else {
				val = decodeState.decodeScalarRaw(this);
			}
			if(this.sparse) {
				val = this.sortedValues[val];
			}
			var z = val;
			if(z < 0) {
				if(decodeState.bytesInSeg == 0 && decodeState.lastSeg) {
					return null;
				}
				throw haxe_Exception.thrown(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_STREAM,null,{ fileName : "kha/audio2/ogg/vorbis/data/Codebook.hx", lineNumber : 503, className : "kha.audio2.ogg.vorbis.data.Codebook", methodName : "decodeDeinterleaveRepeat"}));
			}
			if(cInter + pInter * ch + effective > len * ch) {
				effective = len * ch - (pInter * ch - cInter);
			}
			if(this.lookupType == 1) {
				var div = 1;
				if(sequenceP) {
					var _g = 0;
					var _g1 = effective;
					while(_g < _g1) {
						++_g;
						var val1 = multiplicands[UInt.toFloat(z / div | 0) % UInt.toFloat(lookupValues) | 0] + last;
						residueBuffers[cInter][pInter] += val1;
						if(++cInter == ch) {
							cInter = 0;
							++pInter;
						}
						last = val1;
						div = div * lookupValues;
					}
				} else {
					var _g2 = 0;
					var _g3 = effective;
					while(_g2 < _g3) {
						++_g2;
						residueBuffers[cInter][pInter] += multiplicands[UInt.toFloat(z / div | 0) % UInt.toFloat(lookupValues) | 0];
						if(++cInter == ch) {
							cInter = 0;
							++pInter;
						}
						div = div * lookupValues;
					}
				}
			} else {
				z *= this.dimensions;
				if(sequenceP) {
					var _g4 = 0;
					var _g5 = effective;
					while(_g4 < _g5) {
						var val2 = multiplicands[z + _g4++] + last;
						residueBuffers[cInter][pInter] += val2;
						if(++cInter == ch) {
							cInter = 0;
							++pInter;
						}
						last = val2;
					}
				} else {
					var _g6 = 0;
					var _g7 = effective;
					while(_g6 < _g7) {
						residueBuffers[cInter][pInter] += multiplicands[z + _g6++];
						if(++cInter == ch) {
							cInter = 0;
							++pInter;
						}
					}
				}
			}
			totalDecode -= effective;
		}
		return { cInter : cInter, pInter : pInter};
	}
	,residueDecode: function(decodeState,target,offset,n,rtype) {
		if(rtype == 0) {
			var step = n / this.dimensions | 0;
			var _g = 0;
			while(_g < step) {
				var k = _g++;
				if(!this.codebookDecodeStep(decodeState,target,offset + k,n - offset - k,step)) {
					return false;
				}
			}
		} else {
			var k = 0;
			while(k < n) {
				if(!this.codebookDecode(decodeState,target,offset,n - k)) {
					return false;
				}
				k += this.dimensions;
				offset += this.dimensions;
			}
		}
		return true;
	}
	,__class__: kha_audio2_ogg_vorbis_data_Codebook
};
var kha_audio2_ogg_vorbis_data_Comment = function() {
	this.data = new haxe_ds_StringMap();
};
$hxClasses["kha.audio2.ogg.vorbis.data.Comment"] = kha_audio2_ogg_vorbis_data_Comment;
kha_audio2_ogg_vorbis_data_Comment.__name__ = "kha.audio2.ogg.vorbis.data.Comment";
kha_audio2_ogg_vorbis_data_Comment.prototype = {
	data: null
	,get_loopStart: function() {
		return Std.parseInt(this.getString("loopstart"));
	}
	,get_loopLength: function() {
		return Std.parseInt(this.getString("looplength"));
	}
	,add: function(key,value) {
		key = key.toLowerCase();
		if(Object.prototype.hasOwnProperty.call(this.data.h,key)) {
			this.data.h[key].push(value);
		} else {
			this.data.h[key] = [value];
		}
	}
	,getString: function(key) {
		key = key.toLowerCase();
		if(Object.prototype.hasOwnProperty.call(this.data.h,key)) {
			return this.data.h[key][0];
		} else {
			return null;
		}
	}
	,__class__: kha_audio2_ogg_vorbis_data_Comment
	,__properties__: {get_loopLength:"get_loopLength",get_loopStart:"get_loopStart"}
};
var kha_audio2_ogg_vorbis_data_Floor = function() {
};
$hxClasses["kha.audio2.ogg.vorbis.data.Floor"] = kha_audio2_ogg_vorbis_data_Floor;
kha_audio2_ogg_vorbis_data_Floor.__name__ = "kha.audio2.ogg.vorbis.data.Floor";
kha_audio2_ogg_vorbis_data_Floor.read = function(decodeState,codebooks) {
	var floor = new kha_audio2_ogg_vorbis_data_Floor();
	floor.type = decodeState.readBits(16);
	if(floor.type > 1) {
		throw haxe_Exception.thrown(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,null,{ fileName : "kha/audio2/ogg/vorbis/data/Floor.hx", lineNumber : 28, className : "kha.audio2.ogg.vorbis.data.Floor", methodName : "read"}));
	}
	if(floor.type == 0) {
		var g = floor.floor0 = new kha_audio2_ogg_vorbis_data_Floor0();
		g.order = decodeState.readBits(8);
		g.rate = decodeState.readBits(16);
		g.barkMapSize = decodeState.readBits(16);
		g.amplitudeBits = decodeState.readBits(6);
		g.amplitudeOffset = decodeState.readBits(8);
		g.numberOfBooks = decodeState.readBits(4) + 1;
		var _g = 0;
		var _g1 = g.numberOfBooks;
		while(_g < _g1) g.bookList[_g++] = decodeState.readBits(8);
		throw haxe_Exception.thrown(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.FEATURE_NOT_SUPPORTED,null,{ fileName : "kha/audio2/ogg/vorbis/data/Floor.hx", lineNumber : 41, className : "kha.audio2.ogg.vorbis.data.Floor", methodName : "read"}));
	} else {
		var p = [];
		var g = floor.floor1 = new kha_audio2_ogg_vorbis_data_Floor1();
		var maxClass = -1;
		g.partitions = decodeState.readBits(5);
		g.partitionClassList = new Array(g.partitions);
		var _g = 0;
		var _g1 = g.partitions;
		while(_g < _g1) {
			var j = _g++;
			g.partitionClassList[j] = decodeState.readBits(4);
			if(g.partitionClassList[j] > maxClass) {
				maxClass = g.partitionClassList[j];
			}
		}
		g.classDimensions = new Array(maxClass + 1);
		g.classMasterbooks = new Array(maxClass + 1);
		g.classSubclasses = new Array(maxClass + 1);
		g.subclassBooks = new Array(maxClass + 1);
		var _g = 0;
		var _g1 = maxClass + 1;
		while(_g < _g1) {
			var j = _g++;
			g.classDimensions[j] = decodeState.readBits(3) + 1;
			g.classSubclasses[j] = decodeState.readBits(2);
			if(g.classSubclasses[j] != 0) {
				g.classMasterbooks[j] = decodeState.readBits(8);
				if(g.classMasterbooks[j] >= codebooks.length) {
					throw haxe_Exception.thrown(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,null,{ fileName : "kha/audio2/ogg/vorbis/data/Floor.hx", lineNumber : 64, className : "kha.audio2.ogg.vorbis.data.Floor", methodName : "read"}));
				}
			}
			var kl = 1 << g.classSubclasses[j];
			g.subclassBooks[j] = new Array(kl);
			var _g2 = 0;
			while(_g2 < kl) {
				var k = _g2++;
				g.subclassBooks[j][k] = decodeState.readBits(8) - 1;
				if(g.subclassBooks[j][k] >= codebooks.length) {
					throw haxe_Exception.thrown(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,null,{ fileName : "kha/audio2/ogg/vorbis/data/Floor.hx", lineNumber : 73, className : "kha.audio2.ogg.vorbis.data.Floor", methodName : "read"}));
				}
			}
		}
		g.floor1Multiplier = decodeState.readBits(2) + 1;
		g.rangebits = decodeState.readBits(4);
		g.xlist = new Array(250);
		g.xlist[0] = 0;
		g.xlist[1] = 1 << g.rangebits;
		g.values = 2;
		var _g = 0;
		var _g1 = g.partitions;
		while(_g < _g1) {
			var _g2 = 0;
			var _g3 = g.classDimensions[g.partitionClassList[_g++]];
			while(_g2 < _g3) {
				++_g2;
				g.xlist[g.values] = decodeState.readBits(g.rangebits);
				g.values++;
			}
		}
		var _g = 0;
		var _g1 = g.values;
		while(_g < _g1) {
			var j = _g++;
			p.push(new kha_audio2_ogg_vorbis_data_IntPoint());
			p[j].x = g.xlist[j];
			p[j].y = j;
		}
		p.sort(kha_audio2_ogg_vorbis_VorbisTools.pointCompare);
		g.sortedOrder = new Array(g.values);
		var _g = 0;
		var _g1 = g.values;
		while(_g < _g1) {
			var j = _g++;
			g.sortedOrder[j] = p[j].y;
		}
		g.neighbors = new Array(g.values);
		var _g = 2;
		var _g1 = g.values;
		while(_g < _g1) {
			var j = _g++;
			var x = g.xlist;
			var low = -1;
			var high = 65536;
			var plow = 0;
			var phigh = 0;
			var _g2 = 0;
			while(_g2 < j) {
				var i = _g2++;
				if(x[i] > low && x[i] < x[j]) {
					plow = i;
					low = x[i];
				}
				if(x[i] < high && x[i] > x[j]) {
					phigh = i;
					high = x[i];
				}
			}
			g.neighbors[j] = new Array(g.values);
			g.neighbors[j][0] = plow;
			g.neighbors[j][1] = phigh;
		}
	}
	return floor;
};
kha_audio2_ogg_vorbis_data_Floor.prototype = {
	floor0: null
	,floor1: null
	,type: null
	,__class__: kha_audio2_ogg_vorbis_data_Floor
};
var kha_audio2_ogg_vorbis_data_Floor0 = function() {
};
$hxClasses["kha.audio2.ogg.vorbis.data.Floor0"] = kha_audio2_ogg_vorbis_data_Floor0;
kha_audio2_ogg_vorbis_data_Floor0.__name__ = "kha.audio2.ogg.vorbis.data.Floor0";
kha_audio2_ogg_vorbis_data_Floor0.prototype = {
	order: null
	,rate: null
	,barkMapSize: null
	,amplitudeBits: null
	,amplitudeOffset: null
	,numberOfBooks: null
	,bookList: null
	,__class__: kha_audio2_ogg_vorbis_data_Floor0
};
var kha_audio2_ogg_vorbis_data_Floor1 = function() {
};
$hxClasses["kha.audio2.ogg.vorbis.data.Floor1"] = kha_audio2_ogg_vorbis_data_Floor1;
kha_audio2_ogg_vorbis_data_Floor1.__name__ = "kha.audio2.ogg.vorbis.data.Floor1";
kha_audio2_ogg_vorbis_data_Floor1.prototype = {
	partitions: null
	,partitionClassList: null
	,classDimensions: null
	,classSubclasses: null
	,classMasterbooks: null
	,subclassBooks: null
	,xlist: null
	,sortedOrder: null
	,neighbors: null
	,floor1Multiplier: null
	,rangebits: null
	,values: null
	,__class__: kha_audio2_ogg_vorbis_data_Floor1
};
var kha_audio2_ogg_vorbis_data_Header = function() {
};
$hxClasses["kha.audio2.ogg.vorbis.data.Header"] = kha_audio2_ogg_vorbis_data_Header;
kha_audio2_ogg_vorbis_data_Header.__name__ = "kha.audio2.ogg.vorbis.data.Header";
kha_audio2_ogg_vorbis_data_Header.read = function(decodeState) {
	var page = decodeState.page;
	page.start(decodeState);
	if((page.flag & 2) == 0) {
		throw haxe_Exception.thrown(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_FIRST_PAGE,"not firstPage",{ fileName : "kha/audio2/ogg/vorbis/data/Header.hx", lineNumber : 46, className : "kha.audio2.ogg.vorbis.data.Header", methodName : "read"}));
	}
	if((page.flag & 4) != 0) {
		throw haxe_Exception.thrown(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_FIRST_PAGE,"lastPage",{ fileName : "kha/audio2/ogg/vorbis/data/Header.hx", lineNumber : 49, className : "kha.audio2.ogg.vorbis.data.Header", methodName : "read"}));
	}
	if((page.flag & 1) != 0) {
		throw haxe_Exception.thrown(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_FIRST_PAGE,"continuedPacket",{ fileName : "kha/audio2/ogg/vorbis/data/Header.hx", lineNumber : 52, className : "kha.audio2.ogg.vorbis.data.Header", methodName : "read"}));
	}
	decodeState.firstPageValidate();
	decodeState.inputPosition += 1;
	if(decodeState.input.readByte() != 1) {
		throw haxe_Exception.thrown(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_FIRST_PAGE,"decodeState head",{ fileName : "kha/audio2/ogg/vorbis/data/Header.hx", lineNumber : 57, className : "kha.audio2.ogg.vorbis.data.Header", methodName : "read"}));
	}
	var header = new haxe_io_Bytes(new ArrayBuffer(6));
	var x;
	if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
		x = -1;
	} else {
		decodeState.bytesInSeg--;
		decodeState.inputPosition += 1;
		x = decodeState.input.readByte();
	}
	decodeState.validBits = 0;
	header.b[0] = x;
	var x;
	if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
		x = -1;
	} else {
		decodeState.bytesInSeg--;
		decodeState.inputPosition += 1;
		x = decodeState.input.readByte();
	}
	decodeState.validBits = 0;
	header.b[1] = x;
	var x;
	if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
		x = -1;
	} else {
		decodeState.bytesInSeg--;
		decodeState.inputPosition += 1;
		x = decodeState.input.readByte();
	}
	decodeState.validBits = 0;
	header.b[2] = x;
	var x;
	if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
		x = -1;
	} else {
		decodeState.bytesInSeg--;
		decodeState.inputPosition += 1;
		x = decodeState.input.readByte();
	}
	decodeState.validBits = 0;
	header.b[3] = x;
	var x;
	if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
		x = -1;
	} else {
		decodeState.bytesInSeg--;
		decodeState.inputPosition += 1;
		x = decodeState.input.readByte();
	}
	decodeState.validBits = 0;
	header.b[4] = x;
	var x;
	if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
		x = -1;
	} else {
		decodeState.bytesInSeg--;
		decodeState.inputPosition += 1;
		x = decodeState.input.readByte();
	}
	decodeState.validBits = 0;
	header.b[5] = x;
	if(header.toString() != "vorbis") {
		throw haxe_Exception.thrown(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,"vorbis header",{ fileName : "kha/audio2/ogg/vorbis/VorbisDecodeState.hx", lineNumber : 301, className : "kha.audio2.ogg.vorbis.VorbisDecodeState", methodName : "vorbisValidate"}));
	}
	decodeState.inputPosition += 4;
	var version = decodeState.input.readInt32();
	if(version != 0) {
		throw haxe_Exception.thrown(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_FIRST_PAGE,"vorbis version : " + version,{ fileName : "kha/audio2/ogg/vorbis/data/Header.hx", lineNumber : 66, className : "kha.audio2.ogg.vorbis.data.Header", methodName : "read"}));
	}
	var header = new kha_audio2_ogg_vorbis_data_Header();
	decodeState.inputPosition += 1;
	header.channel = decodeState.input.readByte();
	if(header.channel == 0) {
		throw haxe_Exception.thrown(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_FIRST_PAGE,"no channel",{ fileName : "kha/audio2/ogg/vorbis/data/Header.hx", lineNumber : 73, className : "kha.audio2.ogg.vorbis.data.Header", methodName : "read"}));
	} else if(header.channel > 16) {
		throw haxe_Exception.thrown(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.TOO_MANY_CHANNELS,"too many channels",{ fileName : "kha/audio2/ogg/vorbis/data/Header.hx", lineNumber : 75, className : "kha.audio2.ogg.vorbis.data.Header", methodName : "read"}));
	}
	decodeState.inputPosition += 4;
	header.sampleRate = decodeState.input.readInt32();
	if(header.sampleRate == 0) {
		throw haxe_Exception.thrown(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_FIRST_PAGE,"no sampling rate",{ fileName : "kha/audio2/ogg/vorbis/data/Header.hx", lineNumber : 80, className : "kha.audio2.ogg.vorbis.data.Header", methodName : "read"}));
	}
	decodeState.inputPosition += 4;
	header.maximumBitRate = decodeState.input.readInt32();
	decodeState.inputPosition += 4;
	header.nominalBitRate = decodeState.input.readInt32();
	decodeState.inputPosition += 4;
	header.minimumBitRate = decodeState.input.readInt32();
	decodeState.inputPosition += 1;
	var x = decodeState.input.readByte();
	var log0 = x & 15;
	var log1 = x >> 4;
	header.blocksize0 = 1 << log0;
	header.blocksize1 = 1 << log1;
	if(log0 < 6 || log0 > 13) {
		throw haxe_Exception.thrown(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,null,{ fileName : "kha/audio2/ogg/vorbis/data/Header.hx", lineNumber : 93, className : "kha.audio2.ogg.vorbis.data.Header", methodName : "read"}));
	}
	if(log1 < 6 || log1 > 13) {
		throw haxe_Exception.thrown(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,null,{ fileName : "kha/audio2/ogg/vorbis/data/Header.hx", lineNumber : 96, className : "kha.audio2.ogg.vorbis.data.Header", methodName : "read"}));
	}
	if(log0 > log1) {
		throw haxe_Exception.thrown(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,null,{ fileName : "kha/audio2/ogg/vorbis/data/Header.hx", lineNumber : 99, className : "kha.audio2.ogg.vorbis.data.Header", methodName : "read"}));
	}
	decodeState.inputPosition += 1;
	var x = decodeState.input.readByte();
	if((x & 1) == 0) {
		throw haxe_Exception.thrown(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_FIRST_PAGE,null,{ fileName : "kha/audio2/ogg/vorbis/data/Header.hx", lineNumber : 105, className : "kha.audio2.ogg.vorbis.data.Header", methodName : "read"}));
	}
	decodeState.page.start(decodeState);
	decodeState.startPacket();
	var len = 0;
	var output = new haxe_io_BytesOutput();
	while(true) {
		len = decodeState.next();
		if(!(len != 0)) {
			break;
		}
		decodeState.inputPosition += len;
		output.write(decodeState.input.read(len));
		decodeState.bytesInSeg = 0;
	}
	var packetInput = new haxe_io_BytesInput(output.getBytes());
	packetInput.readByte();
	packetInput.read(6);
	header.vendor = packetInput.readString(packetInput.readInt32());
	header.comment = new kha_audio2_ogg_vorbis_data_Comment();
	var commentCount = packetInput.readInt32();
	var _g = 0;
	while(_g < commentCount) {
		++_g;
		var str = packetInput.readString(packetInput.readInt32());
		var splitter = str.indexOf("=");
		if(splitter != -1) {
			header.comment.add(str.substring(0,splitter),str.substring(splitter + 1));
		}
	}
	if((packetInput.readByte() & 1) == 0) {
		throw haxe_Exception.thrown(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,null,{ fileName : "kha/audio2/ogg/vorbis/data/Header.hx", lineNumber : 141, className : "kha.audio2.ogg.vorbis.data.Header", methodName : "read"}));
	}
	decodeState.startPacket();
	var x1;
	if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
		x1 = -1;
	} else {
		decodeState.bytesInSeg--;
		decodeState.inputPosition += 1;
		x1 = decodeState.input.readByte();
	}
	decodeState.validBits = 0;
	if(x1 != 5) {
		throw haxe_Exception.thrown(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,"setup packet",{ fileName : "kha/audio2/ogg/vorbis/data/Header.hx", lineNumber : 149, className : "kha.audio2.ogg.vorbis.data.Header", methodName : "read"}));
	}
	var header1 = new haxe_io_Bytes(new ArrayBuffer(6));
	var x1;
	if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
		x1 = -1;
	} else {
		decodeState.bytesInSeg--;
		decodeState.inputPosition += 1;
		x1 = decodeState.input.readByte();
	}
	decodeState.validBits = 0;
	header1.b[0] = x1;
	var x1;
	if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
		x1 = -1;
	} else {
		decodeState.bytesInSeg--;
		decodeState.inputPosition += 1;
		x1 = decodeState.input.readByte();
	}
	decodeState.validBits = 0;
	header1.b[1] = x1;
	var x1;
	if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
		x1 = -1;
	} else {
		decodeState.bytesInSeg--;
		decodeState.inputPosition += 1;
		x1 = decodeState.input.readByte();
	}
	decodeState.validBits = 0;
	header1.b[2] = x1;
	var x1;
	if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
		x1 = -1;
	} else {
		decodeState.bytesInSeg--;
		decodeState.inputPosition += 1;
		x1 = decodeState.input.readByte();
	}
	decodeState.validBits = 0;
	header1.b[3] = x1;
	var x1;
	if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
		x1 = -1;
	} else {
		decodeState.bytesInSeg--;
		decodeState.inputPosition += 1;
		x1 = decodeState.input.readByte();
	}
	decodeState.validBits = 0;
	header1.b[4] = x1;
	var x1;
	if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
		x1 = -1;
	} else {
		decodeState.bytesInSeg--;
		decodeState.inputPosition += 1;
		x1 = decodeState.input.readByte();
	}
	decodeState.validBits = 0;
	header1.b[5] = x1;
	if(header1.toString() != "vorbis") {
		throw haxe_Exception.thrown(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,"vorbis header",{ fileName : "kha/audio2/ogg/vorbis/VorbisDecodeState.hx", lineNumber : 301, className : "kha.audio2.ogg.vorbis.VorbisDecodeState", methodName : "vorbisValidate"}));
	}
	var codebookCount = decodeState.readBits(8) + 1;
	header.codebooks = new Array(codebookCount);
	var _g = 0;
	while(_g < codebookCount) header.codebooks[_g++] = kha_audio2_ogg_vorbis_data_Codebook.read(decodeState);
	x = decodeState.readBits(6) + 1;
	var _g = 0;
	var _g1 = x;
	while(_g < _g1) {
		++_g;
		if(decodeState.readBits(16) != 0) {
			throw haxe_Exception.thrown(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,null,{ fileName : "kha/audio2/ogg/vorbis/data/Header.hx", lineNumber : 165, className : "kha.audio2.ogg.vorbis.data.Header", methodName : "read"}));
		}
	}
	var floorCount = decodeState.readBits(6) + 1;
	header.floorConfig = new Array(floorCount);
	var _g = 0;
	while(_g < floorCount) header.floorConfig[_g++] = kha_audio2_ogg_vorbis_data_Floor.read(decodeState,header.codebooks);
	var residueCount = decodeState.readBits(6) + 1;
	header.residueConfig = new Array(residueCount);
	var _g = 0;
	while(_g < residueCount) header.residueConfig[_g++] = kha_audio2_ogg_vorbis_data_Residue.read(decodeState,header.codebooks);
	var mappingCount = decodeState.readBits(6) + 1;
	header.mapping = new Array(mappingCount);
	var _g = 0;
	while(_g < mappingCount) {
		var map = kha_audio2_ogg_vorbis_data_Mapping.read(decodeState,header.channel);
		header.mapping[_g++] = map;
		var _g1 = 0;
		var _g2 = map.submaps;
		while(_g1 < _g2) {
			var j = _g1++;
			if(map.submapFloor[j] >= header.floorConfig.length) {
				throw haxe_Exception.thrown(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,null,{ fileName : "kha/audio2/ogg/vorbis/data/Header.hx", lineNumber : 191, className : "kha.audio2.ogg.vorbis.data.Header", methodName : "read"}));
			}
			if(map.submapResidue[j] >= header.residueConfig.length) {
				throw haxe_Exception.thrown(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,null,{ fileName : "kha/audio2/ogg/vorbis/data/Header.hx", lineNumber : 194, className : "kha.audio2.ogg.vorbis.data.Header", methodName : "read"}));
			}
		}
	}
	var modeCount = decodeState.readBits(6) + 1;
	header.modes = new Array(modeCount);
	var _g = 0;
	while(_g < modeCount) {
		var mode = kha_audio2_ogg_vorbis_data_Mode.read(decodeState);
		header.modes[_g++] = mode;
		if(mode.mapping >= header.mapping.length) {
			throw haxe_Exception.thrown(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,null,{ fileName : "kha/audio2/ogg/vorbis/data/Header.hx", lineNumber : 205, className : "kha.audio2.ogg.vorbis.data.Header", methodName : "read"}));
		}
	}
	while(decodeState.bytesInSeg != 0 || !decodeState.lastSeg && decodeState.next() != 0) {
		decodeState.bytesInSeg--;
		decodeState.inputPosition += 1;
		decodeState.input.readByte();
	}
	return header;
};
kha_audio2_ogg_vorbis_data_Header.prototype = {
	maximumBitRate: null
	,nominalBitRate: null
	,minimumBitRate: null
	,sampleRate: null
	,channel: null
	,blocksize0: null
	,blocksize1: null
	,codebooks: null
	,floorConfig: null
	,residueConfig: null
	,mapping: null
	,modes: null
	,comment: null
	,vendor: null
	,__class__: kha_audio2_ogg_vorbis_data_Header
};
var kha_audio2_ogg_vorbis_data_IntPoint = function() {
};
$hxClasses["kha.audio2.ogg.vorbis.data.IntPoint"] = kha_audio2_ogg_vorbis_data_IntPoint;
kha_audio2_ogg_vorbis_data_IntPoint.__name__ = "kha.audio2.ogg.vorbis.data.IntPoint";
kha_audio2_ogg_vorbis_data_IntPoint.prototype = {
	x: null
	,y: null
	,__class__: kha_audio2_ogg_vorbis_data_IntPoint
};
var kha_audio2_ogg_vorbis_data_Mapping = function() {
};
$hxClasses["kha.audio2.ogg.vorbis.data.Mapping"] = kha_audio2_ogg_vorbis_data_Mapping;
kha_audio2_ogg_vorbis_data_Mapping.__name__ = "kha.audio2.ogg.vorbis.data.Mapping";
kha_audio2_ogg_vorbis_data_Mapping.read = function(decodeState,channels) {
	var m = new kha_audio2_ogg_vorbis_data_Mapping();
	var mappingType = decodeState.readBits(16);
	if(mappingType != 0) {
		throw haxe_Exception.thrown(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,"mapping type " + mappingType,{ fileName : "kha/audio2/ogg/vorbis/data/Mapping.hx", lineNumber : 22, className : "kha.audio2.ogg.vorbis.data.Mapping", methodName : "read"}));
	}
	m.chan = new Array(channels);
	var _g = 0;
	while(_g < channels) m.chan[_g++] = new kha_audio2_ogg_vorbis_data_MappingChannel();
	if(decodeState.readBits(1) != 0) {
		m.submaps = decodeState.readBits(4) + 1;
	} else {
		m.submaps = 1;
	}
	if(decodeState.readBits(1) != 0) {
		m.couplingSteps = decodeState.readBits(8) + 1;
		var _g = 0;
		var _g1 = m.couplingSteps;
		while(_g < _g1) {
			var k = _g++;
			var n = channels - 1;
			var log2_4 = [0,1,2,2,3,3,3,3,4,4,4,4,4,4,4,4];
			m.chan[k].magnitude = decodeState.readBits(n < 16384 ? n < 16 ? log2_4[n] : n < 512 ? 5 + log2_4[n >> 5] : 10 + log2_4[n >> 10] : n < 16777216 ? n < 524288 ? 15 + log2_4[n >> 15] : 20 + log2_4[n >> 20] : n < 536870912 ? 25 + log2_4[n >> 25] : n < -2147483648 ? 30 + log2_4[n >> 30] : 0);
			var n1 = channels - 1;
			var log2_41 = [0,1,2,2,3,3,3,3,4,4,4,4,4,4,4,4];
			m.chan[k].angle = decodeState.readBits(n1 < 16384 ? n1 < 16 ? log2_41[n1] : n1 < 512 ? 5 + log2_41[n1 >> 5] : 10 + log2_41[n1 >> 10] : n1 < 16777216 ? n1 < 524288 ? 15 + log2_41[n1 >> 15] : 20 + log2_41[n1 >> 20] : n1 < 536870912 ? 25 + log2_41[n1 >> 25] : n1 < -2147483648 ? 30 + log2_41[n1 >> 30] : 0);
			if(m.chan[k].magnitude >= channels) {
				throw haxe_Exception.thrown(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,null,{ fileName : "kha/audio2/ogg/vorbis/data/Mapping.hx", lineNumber : 46, className : "kha.audio2.ogg.vorbis.data.Mapping", methodName : "read"}));
			}
			if(m.chan[k].angle >= channels) {
				throw haxe_Exception.thrown(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,null,{ fileName : "kha/audio2/ogg/vorbis/data/Mapping.hx", lineNumber : 49, className : "kha.audio2.ogg.vorbis.data.Mapping", methodName : "read"}));
			}
			if(m.chan[k].magnitude == m.chan[k].angle) {
				throw haxe_Exception.thrown(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,null,{ fileName : "kha/audio2/ogg/vorbis/data/Mapping.hx", lineNumber : 52, className : "kha.audio2.ogg.vorbis.data.Mapping", methodName : "read"}));
			}
		}
	} else {
		m.couplingSteps = 0;
	}
	if(decodeState.readBits(2) != 0) {
		throw haxe_Exception.thrown(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,null,{ fileName : "kha/audio2/ogg/vorbis/data/Mapping.hx", lineNumber : 61, className : "kha.audio2.ogg.vorbis.data.Mapping", methodName : "read"}));
	}
	if(m.submaps > 1) {
		var _g = 0;
		while(_g < channels) {
			var j = _g++;
			m.chan[j].mux = decodeState.readBits(4);
			if(m.chan[j].mux >= m.submaps) {
				throw haxe_Exception.thrown(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,null,{ fileName : "kha/audio2/ogg/vorbis/data/Mapping.hx", lineNumber : 67, className : "kha.audio2.ogg.vorbis.data.Mapping", methodName : "read"}));
			}
		}
	} else {
		var _g = 0;
		while(_g < channels) m.chan[_g++].mux = 0;
	}
	m.submapFloor = new Array(m.submaps);
	m.submapResidue = new Array(m.submaps);
	var _g = 0;
	var _g1 = m.submaps;
	while(_g < _g1) {
		var j = _g++;
		decodeState.readBits(8);
		m.submapFloor[j] = decodeState.readBits(8);
		m.submapResidue[j] = decodeState.readBits(8);
	}
	return m;
};
kha_audio2_ogg_vorbis_data_Mapping.prototype = {
	couplingSteps: null
	,chan: null
	,submaps: null
	,submapFloor: null
	,submapResidue: null
	,doFloor: function(floors,i,n,target,finalY,step2Flag) {
		var n2 = n >> 1;
		var floor = floors[this.submapFloor[this.chan[i].mux]];
		if(floor.type == 0) {
			throw haxe_Exception.thrown(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_STREAM,null,{ fileName : "kha/audio2/ogg/vorbis/data/Mapping.hx", lineNumber : 94, className : "kha.audio2.ogg.vorbis.data.Mapping", methodName : "doFloor"}));
		} else {
			var g = floor.floor1;
			var lx = 0;
			var ly = finalY[0] * g.floor1Multiplier;
			var _g = 1;
			var _g1 = g.values;
			while(_g < _g1) {
				var j = g.sortedOrder[_g++];
				if(finalY[j] >= 0) {
					var hy = finalY[j] * g.floor1Multiplier;
					var hx = g.xlist[j];
					kha_audio2_ogg_vorbis_VorbisTools.drawLine(target,lx,ly,hx,hy,n2);
					lx = hx;
					ly = hy;
				}
			}
			if(lx < n2) {
				var _g = lx;
				while(_g < n2) target[_g++] *= kha_audio2_ogg_vorbis_VorbisTools.INVERSE_DB_TABLE[ly];
			}
		}
	}
	,__class__: kha_audio2_ogg_vorbis_data_Mapping
};
var kha_audio2_ogg_vorbis_data_MappingChannel = function() {
};
$hxClasses["kha.audio2.ogg.vorbis.data.MappingChannel"] = kha_audio2_ogg_vorbis_data_MappingChannel;
kha_audio2_ogg_vorbis_data_MappingChannel.__name__ = "kha.audio2.ogg.vorbis.data.MappingChannel";
kha_audio2_ogg_vorbis_data_MappingChannel.prototype = {
	magnitude: null
	,angle: null
	,mux: null
	,__class__: kha_audio2_ogg_vorbis_data_MappingChannel
};
var kha_audio2_ogg_vorbis_data_Mode = function() {
};
$hxClasses["kha.audio2.ogg.vorbis.data.Mode"] = kha_audio2_ogg_vorbis_data_Mode;
kha_audio2_ogg_vorbis_data_Mode.__name__ = "kha.audio2.ogg.vorbis.data.Mode";
kha_audio2_ogg_vorbis_data_Mode.read = function(decodeState) {
	var m = new kha_audio2_ogg_vorbis_data_Mode();
	m.blockflag = decodeState.readBits(1) != 0;
	m.windowtype = decodeState.readBits(16);
	m.transformtype = decodeState.readBits(16);
	m.mapping = decodeState.readBits(8);
	if(m.windowtype != 0) {
		throw haxe_Exception.thrown(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,null,{ fileName : "kha/audio2/ogg/vorbis/data/Mode.hx", lineNumber : 22, className : "kha.audio2.ogg.vorbis.data.Mode", methodName : "read"}));
	}
	if(m.transformtype != 0) {
		throw haxe_Exception.thrown(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,null,{ fileName : "kha/audio2/ogg/vorbis/data/Mode.hx", lineNumber : 25, className : "kha.audio2.ogg.vorbis.data.Mode", methodName : "read"}));
	}
	return m;
};
kha_audio2_ogg_vorbis_data_Mode.prototype = {
	blockflag: null
	,mapping: null
	,windowtype: null
	,transformtype: null
	,__class__: kha_audio2_ogg_vorbis_data_Mode
};
var kha_audio2_ogg_vorbis_data_Page = function() {
};
$hxClasses["kha.audio2.ogg.vorbis.data.Page"] = kha_audio2_ogg_vorbis_data_Page;
kha_audio2_ogg_vorbis_data_Page.__name__ = "kha.audio2.ogg.vorbis.data.Page";
kha_audio2_ogg_vorbis_data_Page.prototype = {
	flag: null
	,clone: function() {
		var page = new kha_audio2_ogg_vorbis_data_Page();
		page.flag = this.flag;
		return page;
	}
	,start: function(decodeState) {
		var tmp;
		var tmp1;
		var tmp2;
		decodeState.inputPosition += 1;
		if(decodeState.input.readByte() == 79) {
			decodeState.inputPosition += 1;
			tmp2 = decodeState.input.readByte() != 103;
		} else {
			tmp2 = true;
		}
		if(!tmp2) {
			decodeState.inputPosition += 1;
			tmp1 = decodeState.input.readByte() != 103;
		} else {
			tmp1 = true;
		}
		if(!tmp1) {
			decodeState.inputPosition += 1;
			tmp = decodeState.input.readByte() != 83;
		} else {
			tmp = true;
		}
		if(tmp) {
			throw haxe_Exception.thrown(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.MISSING_CAPTURE_PATTERN,null,{ fileName : "kha/audio2/ogg/vorbis/VorbisDecodeState.hx", lineNumber : 324, className : "kha.audio2.ogg.vorbis.VorbisDecodeState", methodName : "capturePattern"}));
		}
		this.startWithoutCapturePattern(decodeState);
	}
	,startWithoutCapturePattern: function(decodeState) {
		decodeState.inputPosition += 1;
		var version = decodeState.input.readByte();
		if(version != 0) {
			throw haxe_Exception.thrown(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_STREAM_STRUCTURE_VERSION,"" + version,{ fileName : "kha/audio2/ogg/vorbis/data/Page.hx", lineNumber : 34, className : "kha.audio2.ogg.vorbis.data.Page", methodName : "startWithoutCapturePattern"}));
		}
		decodeState.inputPosition += 1;
		this.flag = decodeState.input.readByte();
		decodeState.inputPosition += 4;
		var loc0 = decodeState.input.readInt32();
		decodeState.inputPosition += 4;
		var loc1 = decodeState.input.readInt32();
		decodeState.inputPosition += 4;
		decodeState.input.readInt32();
		decodeState.inputPosition += 4;
		decodeState.input.readInt32();
		decodeState.inputPosition += 4;
		decodeState.input.readInt32();
		decodeState.setup(loc0,loc1);
	}
	,__class__: kha_audio2_ogg_vorbis_data_Page
};
var kha_audio2_ogg_vorbis_data_ProbedPage = function() {
};
$hxClasses["kha.audio2.ogg.vorbis.data.ProbedPage"] = kha_audio2_ogg_vorbis_data_ProbedPage;
kha_audio2_ogg_vorbis_data_ProbedPage.__name__ = "kha.audio2.ogg.vorbis.data.ProbedPage";
kha_audio2_ogg_vorbis_data_ProbedPage.prototype = {
	pageStart: null
	,pageEnd: null
	,afterPreviousPageStart: null
	,firstDecodedSample: null
	,lastDecodedSample: null
	,__class__: kha_audio2_ogg_vorbis_data_ProbedPage
};
var kha_audio2_ogg_vorbis_data_ReaderError = function(type,message,posInfos) {
	if(message == null) {
		message = "";
	}
	this.type = type;
	this.message = message;
	this.posInfos = posInfos;
};
$hxClasses["kha.audio2.ogg.vorbis.data.ReaderError"] = kha_audio2_ogg_vorbis_data_ReaderError;
kha_audio2_ogg_vorbis_data_ReaderError.__name__ = "kha.audio2.ogg.vorbis.data.ReaderError";
kha_audio2_ogg_vorbis_data_ReaderError.prototype = {
	type: null
	,message: null
	,posInfos: null
	,__class__: kha_audio2_ogg_vorbis_data_ReaderError
};
var kha_audio2_ogg_vorbis_data_ReaderErrorType = $hxEnums["kha.audio2.ogg.vorbis.data.ReaderErrorType"] = { __ename__ : true, __constructs__ : ["NEED_MORE_DATA","INVALID_API_MIXING","OUTOFMEM","FEATURE_NOT_SUPPORTED","TOO_MANY_CHANNELS","FILE_OPEN_FAILURE","SEEK_WITHOUT_LENGTH","UNEXPECTED_EOF","SEEK_INVALID","INVALID_SETUP","INVALID_STREAM","MISSING_CAPTURE_PATTERN","INVALID_STREAM_STRUCTURE_VERSION","CONTINUED_PACKET_FLAG_INVALID","INCORRECT_STREAM_SERIAL_NUMBER","INVALID_FIRST_PAGE","BAD_PACKET_TYPE","CANT_FIND_LAST_PAGE","SEEK_FAILED","OTHER"]
	,NEED_MORE_DATA: {_hx_index:0,__enum__:"kha.audio2.ogg.vorbis.data.ReaderErrorType",toString:$estr}
	,INVALID_API_MIXING: {_hx_index:1,__enum__:"kha.audio2.ogg.vorbis.data.ReaderErrorType",toString:$estr}
	,OUTOFMEM: {_hx_index:2,__enum__:"kha.audio2.ogg.vorbis.data.ReaderErrorType",toString:$estr}
	,FEATURE_NOT_SUPPORTED: {_hx_index:3,__enum__:"kha.audio2.ogg.vorbis.data.ReaderErrorType",toString:$estr}
	,TOO_MANY_CHANNELS: {_hx_index:4,__enum__:"kha.audio2.ogg.vorbis.data.ReaderErrorType",toString:$estr}
	,FILE_OPEN_FAILURE: {_hx_index:5,__enum__:"kha.audio2.ogg.vorbis.data.ReaderErrorType",toString:$estr}
	,SEEK_WITHOUT_LENGTH: {_hx_index:6,__enum__:"kha.audio2.ogg.vorbis.data.ReaderErrorType",toString:$estr}
	,UNEXPECTED_EOF: {_hx_index:7,__enum__:"kha.audio2.ogg.vorbis.data.ReaderErrorType",toString:$estr}
	,SEEK_INVALID: {_hx_index:8,__enum__:"kha.audio2.ogg.vorbis.data.ReaderErrorType",toString:$estr}
	,INVALID_SETUP: {_hx_index:9,__enum__:"kha.audio2.ogg.vorbis.data.ReaderErrorType",toString:$estr}
	,INVALID_STREAM: {_hx_index:10,__enum__:"kha.audio2.ogg.vorbis.data.ReaderErrorType",toString:$estr}
	,MISSING_CAPTURE_PATTERN: {_hx_index:11,__enum__:"kha.audio2.ogg.vorbis.data.ReaderErrorType",toString:$estr}
	,INVALID_STREAM_STRUCTURE_VERSION: {_hx_index:12,__enum__:"kha.audio2.ogg.vorbis.data.ReaderErrorType",toString:$estr}
	,CONTINUED_PACKET_FLAG_INVALID: {_hx_index:13,__enum__:"kha.audio2.ogg.vorbis.data.ReaderErrorType",toString:$estr}
	,INCORRECT_STREAM_SERIAL_NUMBER: {_hx_index:14,__enum__:"kha.audio2.ogg.vorbis.data.ReaderErrorType",toString:$estr}
	,INVALID_FIRST_PAGE: {_hx_index:15,__enum__:"kha.audio2.ogg.vorbis.data.ReaderErrorType",toString:$estr}
	,BAD_PACKET_TYPE: {_hx_index:16,__enum__:"kha.audio2.ogg.vorbis.data.ReaderErrorType",toString:$estr}
	,CANT_FIND_LAST_PAGE: {_hx_index:17,__enum__:"kha.audio2.ogg.vorbis.data.ReaderErrorType",toString:$estr}
	,SEEK_FAILED: {_hx_index:18,__enum__:"kha.audio2.ogg.vorbis.data.ReaderErrorType",toString:$estr}
	,OTHER: {_hx_index:19,__enum__:"kha.audio2.ogg.vorbis.data.ReaderErrorType",toString:$estr}
};
var kha_audio2_ogg_vorbis_data_Residue = function() {
};
$hxClasses["kha.audio2.ogg.vorbis.data.Residue"] = kha_audio2_ogg_vorbis_data_Residue;
kha_audio2_ogg_vorbis_data_Residue.__name__ = "kha.audio2.ogg.vorbis.data.Residue";
kha_audio2_ogg_vorbis_data_Residue.read = function(decodeState,codebooks) {
	var r = new kha_audio2_ogg_vorbis_data_Residue();
	r.type = decodeState.readBits(16);
	if(r.type > 2) {
		throw haxe_Exception.thrown(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,null,{ fileName : "kha/audio2/ogg/vorbis/data/Residue.hx", lineNumber : 29, className : "kha.audio2.ogg.vorbis.data.Residue", methodName : "read"}));
	}
	var residueCascade = new Array(64);
	r.begin = decodeState.readBits(24);
	r.end = decodeState.readBits(24);
	r.partSize = decodeState.readBits(24) + 1;
	var classifications = r.classifications = decodeState.readBits(6) + 1;
	r.classbook = decodeState.readBits(8);
	var _g = 0;
	var _g1 = r.classifications;
	while(_g < _g1) {
		var j = _g++;
		var highBits = 0;
		var lowBits = decodeState.readBits(3);
		if(decodeState.readBits(1) != 0) {
			highBits = decodeState.readBits(5);
		}
		residueCascade[j] = highBits * 8 + lowBits;
	}
	r.residueBooks = new Array(r.classifications);
	var _g = 0;
	var _g1 = r.classifications;
	while(_g < _g1) {
		var j = _g++;
		r.residueBooks[j] = new Array(8);
		var _g2 = 0;
		while(_g2 < 8) {
			var k = _g2++;
			if((residueCascade[j] & 1 << k) != 0) {
				r.residueBooks[j][k] = decodeState.readBits(8);
				if(r.residueBooks[j][k] >= codebooks.length) {
					throw haxe_Exception.thrown(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,null,{ fileName : "kha/audio2/ogg/vorbis/data/Residue.hx", lineNumber : 55, className : "kha.audio2.ogg.vorbis.data.Residue", methodName : "read"}));
				}
			} else {
				r.residueBooks[j][k] = -1;
			}
		}
	}
	var el = codebooks[r.classbook].entries;
	var classwords = codebooks[r.classbook].dimensions;
	r.classdata = new Array(el);
	var _g = 0;
	while(_g < el) {
		var j = _g++;
		var temp = j;
		var k = classwords;
		var cd = r.classdata[j] = new Array(classwords);
		while(--k >= 0) {
			cd[k] = temp % classifications;
			temp = temp / classifications | 0;
		}
	}
	return r;
};
kha_audio2_ogg_vorbis_data_Residue.prototype = {
	begin: null
	,end: null
	,partSize: null
	,classifications: null
	,classbook: null
	,classdata: null
	,residueBooks: null
	,type: null
	,decode: function(decodeState,header,residueBuffers,ch,n,doNotDecode,channelBuffers) {
		var codebooks = header.codebooks;
		var classwords = codebooks[this.classbook].dimensions;
		var partSize = this.partSize;
		var partRead = UInt.toFloat(this.end - this.begin) / UInt.toFloat(partSize) | 0;
		var classifications = new Array(header.channel * partRead + 1);
		var _g = 0;
		while(_g < ch) {
			var i = _g++;
			if(!doNotDecode[i]) {
				var buffer = residueBuffers[i];
				var _g1 = 0;
				var _g2 = buffer.length;
				while(_g1 < _g2) buffer[_g1++] = 0;
			}
		}
		if(this.type == 2 && ch != 1) {
			var _g = 0;
			while(_g < ch) {
				var j = _g++;
				if(!doNotDecode[j]) {
					break;
				} else if(j == ch - 1) {
					return;
				}
			}
			var _g = 0;
			while(_g < 8) {
				var pass = _g++;
				var pcount = 0;
				if(ch == 2) {
					while(pcount < partRead) {
						var z = this.begin + pcount * partSize;
						var cInter = z & 1;
						var pInter = z >>> 1;
						if(pass == 0) {
							var c = codebooks[this.classbook];
							if(decodeState.validBits < 10) {
								decodeState.prepHuffman();
							}
							var i = c.fastHuffman[decodeState.acc & 1023];
							var val;
							if(i >= 0) {
								var l = c.codewordLengths[i];
								decodeState.acc = decodeState.acc >>> l;
								decodeState.validBits -= l;
								if(decodeState.validBits < 0) {
									decodeState.validBits = 0;
									val = -1;
								} else {
									val = i;
								}
							} else {
								val = decodeState.decodeScalarRaw(c);
							}
							if(c.sparse) {
								val = c.sortedValues[val];
							}
							var q = val;
							if(q == -1) {
								return;
							}
							var i1 = classwords;
							while(--i1 >= 0) {
								classifications[i1 + pcount] = q % this.classifications;
								q = q / this.classifications | 0;
							}
						}
						var _g1 = 0;
						while(_g1 < classwords) {
							++_g1;
							if(pcount >= partRead) {
								break;
							}
							var z1 = this.begin + pcount * partSize;
							var b = this.residueBooks[classifications[pcount]][pass];
							if(b >= 0) {
								var result = codebooks[b].decodeDeinterleaveRepeat(decodeState,residueBuffers,ch,cInter,pInter,n,partSize);
								if(result == null) {
									return;
								} else {
									cInter = result.cInter;
									pInter = result.pInter;
								}
							} else {
								z1 = z1 + partSize;
								cInter = z1 & 1;
								pInter = z1 >>> 1;
							}
							++pcount;
						}
					}
				} else if(ch == 1) {
					while(pcount < partRead) {
						var cInter1 = 0;
						var pInter1 = this.begin + pcount * partSize;
						if(pass == 0) {
							var c1 = codebooks[this.classbook];
							if(decodeState.validBits < 10) {
								decodeState.prepHuffman();
							}
							var i2 = c1.fastHuffman[decodeState.acc & 1023];
							var val1;
							if(i2 >= 0) {
								var l1 = c1.codewordLengths[i2];
								decodeState.acc = decodeState.acc >>> l1;
								decodeState.validBits -= l1;
								if(decodeState.validBits < 0) {
									decodeState.validBits = 0;
									val1 = -1;
								} else {
									val1 = i2;
								}
							} else {
								val1 = decodeState.decodeScalarRaw(c1);
							}
							if(c1.sparse) {
								val1 = c1.sortedValues[val1];
							}
							var q1 = val1;
							if(q1 == -1) {
								return;
							}
							var i3 = classwords;
							while(--i3 >= 0) {
								classifications[i3 + pcount] = q1 % this.classifications;
								q1 = q1 / this.classifications | 0;
							}
						}
						var _g2 = 0;
						while(_g2 < classwords) {
							++_g2;
							if(pcount >= partRead) {
								break;
							}
							var z2 = this.begin + pcount * partSize;
							var b1 = this.residueBooks[classifications[pcount]][pass];
							if(b1 >= 0) {
								var result1 = codebooks[b1].decodeDeinterleaveRepeat(decodeState,residueBuffers,ch,cInter1,pInter1,n,partSize);
								if(result1 == null) {
									return;
								} else {
									cInter1 = result1.cInter;
									pInter1 = result1.pInter;
								}
							} else {
								z2 = z2 + partSize;
								cInter1 = 0;
								pInter1 = z2;
							}
							++pcount;
						}
					}
				} else {
					while(pcount < partRead) {
						var z3 = this.begin + pcount * partSize;
						var cInter2 = UInt.toFloat(z3) % UInt.toFloat(ch) | 0;
						var pInter2 = UInt.toFloat(z3) / UInt.toFloat(ch) | 0;
						if(pass == 0) {
							var c2 = codebooks[this.classbook];
							if(decodeState.validBits < 10) {
								decodeState.prepHuffman();
							}
							var i4 = c2.fastHuffman[decodeState.acc & 1023];
							var val2;
							if(i4 >= 0) {
								var l2 = c2.codewordLengths[i4];
								decodeState.acc = decodeState.acc >>> l2;
								decodeState.validBits -= l2;
								if(decodeState.validBits < 0) {
									decodeState.validBits = 0;
									val2 = -1;
								} else {
									val2 = i4;
								}
							} else {
								val2 = decodeState.decodeScalarRaw(c2);
							}
							if(c2.sparse) {
								val2 = c2.sortedValues[val2];
							}
							var q2 = val2;
							if(q2 == -1) {
								return;
							}
							var i5 = classwords;
							while(--i5 >= 0) {
								classifications[i5 + pcount] = q2 % this.classifications;
								q2 = q2 / this.classifications | 0;
							}
						}
						var _g3 = 0;
						while(_g3 < classwords) {
							++_g3;
							if(pcount >= partRead) {
								break;
							}
							var z4 = this.begin + pcount * partSize;
							var b2 = this.residueBooks[classifications[pcount]][pass];
							if(b2 >= 0) {
								var result2 = codebooks[b2].decodeDeinterleaveRepeat(decodeState,residueBuffers,ch,cInter2,pInter2,n,partSize);
								if(result2 == null) {
									return;
								} else {
									cInter2 = result2.cInter;
									pInter2 = result2.pInter;
								}
							} else {
								z4 = z4 + partSize;
								cInter2 = UInt.toFloat(z4) % UInt.toFloat(ch) | 0;
								pInter2 = UInt.toFloat(z4) / UInt.toFloat(ch) | 0;
							}
							++pcount;
						}
					}
				}
			}
			return;
		}
		var _g = 0;
		while(_g < 8) {
			var pass = _g++;
			var pcount = 0;
			while(pcount < partRead) {
				if(pass == 0) {
					var _g1 = 0;
					while(_g1 < ch) {
						var j = _g1++;
						if(!doNotDecode[j]) {
							var c = codebooks[this.classbook];
							if(decodeState.validBits < 10) {
								decodeState.prepHuffman();
							}
							var i = c.fastHuffman[decodeState.acc & 1023];
							var val;
							if(i >= 0) {
								var l = c.codewordLengths[i];
								decodeState.acc = decodeState.acc >>> l;
								decodeState.validBits -= l;
								if(decodeState.validBits < 0) {
									decodeState.validBits = 0;
									val = -1;
								} else {
									val = i;
								}
							} else {
								val = decodeState.decodeScalarRaw(c);
							}
							if(c.sparse) {
								val = c.sortedValues[val];
							}
							var temp = val;
							if(temp == -1) {
								return;
							}
							var i1 = classwords;
							while(--i1 >= 0) {
								classifications[j * partRead + i1 + pcount] = temp % this.classifications;
								temp = temp / this.classifications | 0;
							}
						}
					}
				}
				var _g2 = 0;
				while(_g2 < classwords) {
					++_g2;
					if(pcount >= partRead) {
						break;
					}
					var _g3 = 0;
					while(_g3 < ch) {
						var j1 = _g3++;
						if(!doNotDecode[j1]) {
							var b = this.residueBooks[classifications[j1 * partRead + pcount]][pass];
							if(b >= 0) {
								if(!codebooks[b].residueDecode(decodeState,residueBuffers[j1],this.begin + pcount * partSize,partSize,this.type)) {
									return;
								}
							}
						}
					}
					++pcount;
				}
			}
		}
	}
	,__class__: kha_audio2_ogg_vorbis_data_Residue
};
var kha_graphics1_Graphics = function() { };
$hxClasses["kha.graphics1.Graphics"] = kha_graphics1_Graphics;
kha_graphics1_Graphics.__name__ = "kha.graphics1.Graphics";
kha_graphics1_Graphics.__isInterface__ = true;
var kha_graphics2_Graphics = function() {
	this.transformations = [new kha_math_FastMatrix3(1,0,0,0,1,0,0,0,1)];
	this.transformationIndex = 0;
	this.opacities = [1];
	this.myFontSize = 12;
	this.pipe = null;
};
$hxClasses["kha.graphics2.Graphics"] = kha_graphics2_Graphics;
kha_graphics2_Graphics.__name__ = "kha.graphics2.Graphics";
kha_graphics2_Graphics.prototype = {
	begin: function(clear,clearColor) {
		if(clear == null) {
			clear = true;
		}
	}
	,end: function() {
	}
	,clear: function(color) {
	}
	,drawImage: function(img,x,y) {
		this.drawSubImage(img,x,y,0,0,img.get_width(),img.get_height());
	}
	,drawSubImage: function(img,x,y,sx,sy,sw,sh) {
		this.drawScaledSubImage(img,sx,sy,sw,sh,x,y,sw,sh);
	}
	,drawScaledImage: function(img,dx,dy,dw,dh) {
		this.drawScaledSubImage(img,0,0,img.get_width(),img.get_height(),dx,dy,dw,dh);
	}
	,drawScaledSubImage: function(image,sx,sy,sw,sh,dx,dy,dw,dh) {
	}
	,drawRect: function(x,y,width,height,strength) {
		if(strength == null) {
			strength = 1.0;
		}
	}
	,fillRect: function(x,y,width,height) {
	}
	,drawString: function(text,x,y) {
	}
	,drawCharacters: function(text,start,length,x,y) {
	}
	,drawLine: function(x1,y1,x2,y2,strength) {
		if(strength == null) {
			strength = 1.0;
		}
	}
	,drawVideo: function(video,x,y,width,height) {
	}
	,fillTriangle: function(x1,y1,x2,y2,x3,y3) {
	}
	,set_imageScaleQuality: function(value) {
		return 1;
	}
	,get_color: function() {
		return -16777216;
	}
	,set_color: function(color) {
		return -16777216;
	}
	,get_font: function() {
		return null;
	}
	,set_font: function(font) {
		return null;
	}
	,get_fontSize: function() {
		return this.myFontSize;
	}
	,set_fontSize: function(value) {
		return this.myFontSize = value;
	}
	,popTransformation: function() {
		this.transformationIndex--;
		this.setTransformation(this.transformations[this.transformationIndex]);
		return this.transformations[this.transformationIndex + 1];
	}
	,pushTranslation: function(tx,ty) {
		var _this__00 = 1;
		var _this__10 = 0;
		var _this__01 = 0;
		var _this__11 = 1;
		var _this__02 = 0;
		var _this__12 = 0;
		var _this__22 = 1;
		var m = this.transformations[this.transformationIndex];
		var _00 = _this__00 * m._00 + _this__10 * m._01 + tx * m._02;
		var _10 = _this__00 * m._10 + _this__10 * m._11 + tx * m._12;
		var _20 = _this__00 * m._20 + _this__10 * m._21 + tx * m._22;
		var _01 = _this__01 * m._00 + _this__11 * m._01 + ty * m._02;
		var _11 = _this__01 * m._10 + _this__11 * m._11 + ty * m._12;
		var _21 = _this__01 * m._20 + _this__11 * m._21 + ty * m._22;
		var _02 = _this__02 * m._00 + _this__12 * m._01 + _this__22 * m._02;
		var _12 = _this__02 * m._10 + _this__12 * m._11 + _this__22 * m._12;
		var _22 = _this__02 * m._20 + _this__12 * m._21 + _this__22 * m._22;
		this.transformationIndex++;
		if(this.transformationIndex == this.transformations.length) {
			this.transformations.push(new kha_math_FastMatrix3(1,0,0,0,1,0,0,0,1));
		}
		var _this = this.transformations[this.transformationIndex];
		_this._00 = _00;
		_this._10 = _10;
		_this._20 = _20;
		_this._01 = _01;
		_this._11 = _11;
		_this._21 = _21;
		_this._02 = _02;
		_this._12 = _12;
		_this._22 = _22;
		this.setTransformation(this.transformations[this.transformationIndex]);
	}
	,get_opacity: function() {
		return this.opacities[this.opacities.length - 1];
	}
	,set_opacity: function(opacity) {
		this.setOpacity(opacity);
		return this.opacities[this.opacities.length - 1] = opacity;
	}
	,scissor: function(x,y,width,height) {
	}
	,disableScissor: function() {
	}
	,pipe: null
	,get_pipeline: function() {
		return this.pipe;
	}
	,set_pipeline: function(pipeline) {
		this.setPipeline(pipeline);
		return this.pipe = pipeline;
	}
	,transformations: null
	,transformationIndex: null
	,opacities: null
	,myFontSize: null
	,setTransformation: function(transformation) {
	}
	,setOpacity: function(opacity) {
	}
	,setPipeline: function(pipeline) {
	}
	,__class__: kha_graphics2_Graphics
	,__properties__: {set_pipeline:"set_pipeline",get_pipeline:"get_pipeline",set_opacity:"set_opacity",get_opacity:"get_opacity",set_fontSize:"set_fontSize",get_fontSize:"get_fontSize",set_font:"set_font",get_font:"get_font",set_color:"set_color",get_color:"get_color",set_imageScaleQuality:"set_imageScaleQuality"}
};
var kha_graphics2_Graphics1 = function(canvas) {
	this.canvas = canvas;
};
$hxClasses["kha.graphics2.Graphics1"] = kha_graphics2_Graphics1;
kha_graphics2_Graphics1.__name__ = "kha.graphics2.Graphics1";
kha_graphics2_Graphics1.__interfaces__ = [kha_graphics1_Graphics];
kha_graphics2_Graphics1.prototype = {
	canvas: null
	,__class__: kha_graphics2_Graphics1
};
var kha_graphics2_GraphicsExtension = function() { };
$hxClasses["kha.graphics2.GraphicsExtension"] = kha_graphics2_GraphicsExtension;
kha_graphics2_GraphicsExtension.__name__ = "kha.graphics2.GraphicsExtension";
kha_graphics2_GraphicsExtension.drawArc = function(g2,cx,cy,radius,sAngle,eAngle,strength,ccw,segments) {
	if(segments == null) {
		segments = 0;
	}
	if(ccw == null) {
		ccw = false;
	}
	if(strength == null) {
		strength = 1;
	}
	if(kha_SystemImpl.gl == null) {
		radius -= strength / 2;
		g2.drawArc(cx,cy,radius,sAngle,eAngle,strength,ccw);
		return;
	}
	sAngle %= Math.PI * 2;
	eAngle %= Math.PI * 2;
	if(ccw) {
		if(eAngle > sAngle) {
			eAngle -= Math.PI * 2;
		}
	} else if(eAngle < sAngle) {
		eAngle += Math.PI * 2;
	}
	radius += strength / 2;
	if(segments <= 0) {
		segments = Math.floor(10 * Math.sqrt(radius));
	}
	var theta = (eAngle - sAngle) / segments;
	var c = Math.cos(theta);
	var s = Math.sin(theta);
	var x = Math.cos(sAngle) * radius;
	var y = Math.sin(sAngle) * radius;
	var _g = 0;
	var _g1 = segments;
	while(_g < _g1) {
		++_g;
		var px = x + cx;
		var py = y + cy;
		var t = x;
		x = c * x - s * y;
		y = c * y + s * t;
		kha_graphics2_GraphicsExtension.drawInnerLine(g2,x + cx,y + cy,px,py,strength);
	}
};
kha_graphics2_GraphicsExtension.drawCircle = function(g2,cx,cy,radius,strength,segments) {
	if(segments == null) {
		segments = 0;
	}
	if(strength == null) {
		strength = 1;
	}
	if(kha_SystemImpl.gl == null) {
		radius -= strength / 2;
		g2.drawCircle(cx,cy,radius,strength);
		return;
	}
	radius += strength / 2;
	if(segments <= 0) {
		segments = Math.floor(10 * Math.sqrt(radius));
	}
	var theta = 2 * Math.PI / segments;
	var c = Math.cos(theta);
	var s = Math.sin(theta);
	var x = radius;
	var y = 0.0;
	var _g = 0;
	var _g1 = segments;
	while(_g < _g1) {
		++_g;
		var px = x + cx;
		var py = y + cy;
		var t = x;
		x = c * x - s * y;
		y = c * y + s * t;
		kha_graphics2_GraphicsExtension.drawInnerLine(g2,x + cx,y + cy,px,py,strength);
	}
};
kha_graphics2_GraphicsExtension.drawInnerLine = function(g2,x1,y1,x2,y2,strength) {
	var side = y2 > y1 ? 1 : 0;
	if(y2 == y1) {
		side = x2 - x1 > 0 ? 1 : 0;
	}
	var vec_x = 0;
	var vec_y = 0;
	if(y2 == y1) {
		vec_x = 0;
		vec_y = -1;
	} else {
		var y = -(x2 - x1) / (y2 - y1);
		if(y == null) {
			y = 0;
		}
		vec_x = 1;
		vec_y = y;
	}
	var currentLength = Math.sqrt(vec_x * vec_x + vec_y * vec_y);
	if(currentLength != 0) {
		var mul = strength / currentLength;
		vec_x *= mul;
		vec_y *= mul;
	}
	var x = x1 + side * vec_x;
	var y = y1 + side * vec_y;
	if(y == null) {
		y = 0;
	}
	if(x == null) {
		x = 0;
	}
	var p1_x = x;
	var p1_y = y;
	var x = x2 + side * vec_x;
	var y = y2 + side * vec_y;
	if(y == null) {
		y = 0;
	}
	if(x == null) {
		x = 0;
	}
	var p2_x = x;
	var p2_y = y;
	var x = p1_x - vec_x;
	var y = p1_y - vec_y;
	if(y == null) {
		y = 0;
	}
	if(x == null) {
		x = 0;
	}
	var p3_x = x;
	var p3_y = y;
	var x = p2_x - vec_x;
	var y = p2_y - vec_y;
	if(y == null) {
		y = 0;
	}
	if(x == null) {
		x = 0;
	}
	g2.fillTriangle(p1_x,p1_y,p2_x,p2_y,p3_x,p3_y);
	g2.fillTriangle(p3_x,p3_y,p2_x,p2_y,x,y);
};
kha_graphics2_GraphicsExtension.fillCircle = function(g2,cx,cy,radius,segments) {
	if(segments == null) {
		segments = 0;
	}
	if(kha_SystemImpl.gl == null) {
		g2.fillCircle(cx,cy,radius);
		return;
	}
	if(segments <= 0) {
		segments = Math.floor(10 * Math.sqrt(radius));
	}
	var theta = 2 * Math.PI / segments;
	var c = Math.cos(theta);
	var s = Math.sin(theta);
	var x = radius;
	var y = 0.0;
	var _g = 0;
	var _g1 = segments;
	while(_g < _g1) {
		++_g;
		var px = x + cx;
		var py = y + cy;
		var t = x;
		x = c * x - s * y;
		y = c * y + s * t;
		g2.fillTriangle(px,py,x + cx,y + cy,cx,cy);
	}
};
kha_graphics2_GraphicsExtension.drawPolygon = function(g2,x,y,vertices,strength) {
	if(strength == null) {
		strength = 1;
	}
	var iterator_current = 0;
	iterator_current = 1;
	var v0 = vertices[0];
	var v1 = v0;
	while(iterator_current < vertices.length) {
		var v2 = vertices[iterator_current++];
		g2.drawLine(v1.x + x,v1.y + y,v2.x + x,v2.y + y,strength);
		v1 = v2;
	}
	g2.drawLine(v1.x + x,v1.y + y,v0.x + x,v0.y + y,strength);
};
kha_graphics2_GraphicsExtension.fillPolygon = function(g2,x,y,vertices) {
	var iterator_current = 0;
	if(0 >= vertices.length) {
		return;
	}
	iterator_current = 1;
	var v0 = vertices[0];
	if(1 >= vertices.length) {
		return;
	}
	iterator_current = 2;
	var v1 = vertices[1];
	while(iterator_current < vertices.length) {
		var v2 = vertices[iterator_current++];
		g2.fillTriangle(v0.x + x,v0.y + y,v1.x + x,v1.y + y,v2.x + x,v2.y + y);
		v1 = v2;
	}
};
var kha_graphics2_truetype_VectorOfIntPointer = function() {
};
$hxClasses["kha.graphics2.truetype.VectorOfIntPointer"] = kha_graphics2_truetype_VectorOfIntPointer;
kha_graphics2_truetype_VectorOfIntPointer.__name__ = "kha.graphics2.truetype.VectorOfIntPointer";
kha_graphics2_truetype_VectorOfIntPointer.prototype = {
	value: null
	,__class__: kha_graphics2_truetype_VectorOfIntPointer
};
var kha_graphics2_truetype_Stbtt_$temp_$rect = function() {
};
$hxClasses["kha.graphics2.truetype.Stbtt_temp_rect"] = kha_graphics2_truetype_Stbtt_$temp_$rect;
kha_graphics2_truetype_Stbtt_$temp_$rect.__name__ = "kha.graphics2.truetype.Stbtt_temp_rect";
kha_graphics2_truetype_Stbtt_$temp_$rect.prototype = {
	x0: null
	,y0: null
	,x1: null
	,y1: null
	,__class__: kha_graphics2_truetype_Stbtt_$temp_$rect
};
var kha_graphics2_truetype_Stbtt_$temp_$glyph_$h_$metrics = function() {
};
$hxClasses["kha.graphics2.truetype.Stbtt_temp_glyph_h_metrics"] = kha_graphics2_truetype_Stbtt_$temp_$glyph_$h_$metrics;
kha_graphics2_truetype_Stbtt_$temp_$glyph_$h_$metrics.__name__ = "kha.graphics2.truetype.Stbtt_temp_glyph_h_metrics";
kha_graphics2_truetype_Stbtt_$temp_$glyph_$h_$metrics.prototype = {
	advanceWidth: null
	,leftSideBearing: null
	,__class__: kha_graphics2_truetype_Stbtt_$temp_$glyph_$h_$metrics
};
var kha_graphics2_truetype_Stbtt_$temp_$font_$v_$metrics = function() {
};
$hxClasses["kha.graphics2.truetype.Stbtt_temp_font_v_metrics"] = kha_graphics2_truetype_Stbtt_$temp_$font_$v_$metrics;
kha_graphics2_truetype_Stbtt_$temp_$font_$v_$metrics.__name__ = "kha.graphics2.truetype.Stbtt_temp_font_v_metrics";
kha_graphics2_truetype_Stbtt_$temp_$font_$v_$metrics.prototype = {
	ascent: null
	,descent: null
	,lineGap: null
	,__class__: kha_graphics2_truetype_Stbtt_$temp_$font_$v_$metrics
};
var kha_graphics2_truetype_Stbtt_$_$buf = function() {
};
$hxClasses["kha.graphics2.truetype.Stbtt__buf"] = kha_graphics2_truetype_Stbtt_$_$buf;
kha_graphics2_truetype_Stbtt_$_$buf.__name__ = "kha.graphics2.truetype.Stbtt__buf";
kha_graphics2_truetype_Stbtt_$_$buf.prototype = {
	data: null
	,cursor: null
	,__class__: kha_graphics2_truetype_Stbtt_$_$buf
};
var kha_graphics2_truetype_Stbtt_$bakedchar = function() {
};
$hxClasses["kha.graphics2.truetype.Stbtt_bakedchar"] = kha_graphics2_truetype_Stbtt_$bakedchar;
kha_graphics2_truetype_Stbtt_$bakedchar.__name__ = "kha.graphics2.truetype.Stbtt_bakedchar";
kha_graphics2_truetype_Stbtt_$bakedchar.prototype = {
	x0: null
	,y0: null
	,x1: null
	,y1: null
	,xoff: null
	,yoff: null
	,xadvance: null
	,__class__: kha_graphics2_truetype_Stbtt_$bakedchar
};
var kha_graphics2_truetype_Stbtt_$fontinfo = function() {
};
$hxClasses["kha.graphics2.truetype.Stbtt_fontinfo"] = kha_graphics2_truetype_Stbtt_$fontinfo;
kha_graphics2_truetype_Stbtt_$fontinfo.__name__ = "kha.graphics2.truetype.Stbtt_fontinfo";
kha_graphics2_truetype_Stbtt_$fontinfo.prototype = {
	data: null
	,fontstart: null
	,numGlyphs: null
	,loca: null
	,head: null
	,glyf: null
	,hhea: null
	,hmtx: null
	,kern: null
	,gpos: null
	,index_map: null
	,indexToLocFormat: null
	,cff: null
	,charstrings: null
	,gsubrs: null
	,subrs: null
	,fontdicts: null
	,fdselect: null
	,__class__: kha_graphics2_truetype_Stbtt_$fontinfo
};
var kha_graphics2_truetype_Stbtt_$vertex = function() {
};
$hxClasses["kha.graphics2.truetype.Stbtt_vertex"] = kha_graphics2_truetype_Stbtt_$vertex;
kha_graphics2_truetype_Stbtt_$vertex.__name__ = "kha.graphics2.truetype.Stbtt_vertex";
kha_graphics2_truetype_Stbtt_$vertex.prototype = {
	x: null
	,y: null
	,cx: null
	,cy: null
	,cx1: null
	,cy1: null
	,type: null
	,__class__: kha_graphics2_truetype_Stbtt_$vertex
};
var kha_graphics2_truetype_Stbtt_$_$bitmap = function() {
};
$hxClasses["kha.graphics2.truetype.Stbtt__bitmap"] = kha_graphics2_truetype_Stbtt_$_$bitmap;
kha_graphics2_truetype_Stbtt_$_$bitmap.__name__ = "kha.graphics2.truetype.Stbtt__bitmap";
kha_graphics2_truetype_Stbtt_$_$bitmap.prototype = {
	w: null
	,h: null
	,stride: null
	,pixels: null
	,pixels_offset: null
	,__class__: kha_graphics2_truetype_Stbtt_$_$bitmap
};
var kha_graphics2_truetype_Stbtt_$_$edge = function() {
};
$hxClasses["kha.graphics2.truetype.Stbtt__edge"] = kha_graphics2_truetype_Stbtt_$_$edge;
kha_graphics2_truetype_Stbtt_$_$edge.__name__ = "kha.graphics2.truetype.Stbtt__edge";
kha_graphics2_truetype_Stbtt_$_$edge.prototype = {
	x0: null
	,y0: null
	,x1: null
	,y1: null
	,invert: null
	,__class__: kha_graphics2_truetype_Stbtt_$_$edge
};
var kha_graphics2_truetype_Stbtt_$_$active_$edge = function() {
};
$hxClasses["kha.graphics2.truetype.Stbtt__active_edge"] = kha_graphics2_truetype_Stbtt_$_$active_$edge;
kha_graphics2_truetype_Stbtt_$_$active_$edge.__name__ = "kha.graphics2.truetype.Stbtt__active_edge";
kha_graphics2_truetype_Stbtt_$_$active_$edge.prototype = {
	next: null
	,fx: null
	,fdx: null
	,fdy: null
	,direction: null
	,sy: null
	,ey: null
	,__class__: kha_graphics2_truetype_Stbtt_$_$active_$edge
};
var kha_graphics2_truetype_Stbtt_$_$point = function() {
};
$hxClasses["kha.graphics2.truetype.Stbtt__point"] = kha_graphics2_truetype_Stbtt_$_$point;
kha_graphics2_truetype_Stbtt_$_$point.__name__ = "kha.graphics2.truetype.Stbtt__point";
kha_graphics2_truetype_Stbtt_$_$point.prototype = {
	x: null
	,y: null
	,__class__: kha_graphics2_truetype_Stbtt_$_$point
};
var kha_graphics2_truetype_Stbtt_$_$csctx = function() {
};
$hxClasses["kha.graphics2.truetype.Stbtt__csctx"] = kha_graphics2_truetype_Stbtt_$_$csctx;
kha_graphics2_truetype_Stbtt_$_$csctx.__name__ = "kha.graphics2.truetype.Stbtt__csctx";
kha_graphics2_truetype_Stbtt_$_$csctx.prototype = {
	bounds: null
	,started: null
	,first_x: null
	,first_y: null
	,x: null
	,y: null
	,min_x: null
	,min_y: null
	,max_x: null
	,max_y: null
	,pvertices: null
	,num_vertices: null
	,__class__: kha_graphics2_truetype_Stbtt_$_$csctx
};
var kha_graphics2_truetype_StbTruetype = function() { };
$hxClasses["kha.graphics2.truetype.StbTruetype"] = kha_graphics2_truetype_StbTruetype;
kha_graphics2_truetype_StbTruetype.__name__ = "kha.graphics2.truetype.StbTruetype";
kha_graphics2_truetype_StbTruetype.stbtt__isfont = function(font) {
	var c0 = HxOverrides.cca("1",0);
	if(font.readU8(0) == c0 && font.readU8(1) == 0 && font.readU8(2) == 0 && font.readU8(3) == 0) {
		return true;
	}
	var c0 = HxOverrides.cca("typ1",0);
	var c1 = HxOverrides.cca("typ1",1);
	var c2 = HxOverrides.cca("typ1",2);
	var c3 = HxOverrides.cca("typ1",3);
	if(font.readU8(0) == c0 && font.readU8(1) == c1 && font.readU8(2) == c2 && font.readU8(3) == c3) {
		return true;
	}
	var c0 = HxOverrides.cca("OTTO",0);
	var c1 = HxOverrides.cca("OTTO",1);
	var c2 = HxOverrides.cca("OTTO",2);
	var c3 = HxOverrides.cca("OTTO",3);
	if(font.readU8(0) == c0 && font.readU8(1) == c1 && font.readU8(2) == c2 && font.readU8(3) == c3) {
		return true;
	}
	if(font.readU8(0) == 0 && font.readU8(1) == 1 && font.readU8(2) == 0 && font.readU8(3) == 0) {
		return true;
	}
	var c0 = HxOverrides.cca("true",0);
	var c1 = HxOverrides.cca("true",1);
	var c2 = HxOverrides.cca("true",2);
	var c3 = HxOverrides.cca("true",3);
	if(font.readU8(0) == c0 && font.readU8(1) == c1 && font.readU8(2) == c2 && font.readU8(3) == c3) {
		return true;
	}
	return false;
};
kha_graphics2_truetype_StbTruetype.stbtt__find_table = function(data,fontstart,tag) {
	var pos = fontstart + 4;
	if(pos == null) {
		pos = 0;
	}
	var ch1 = data.readU8(pos);
	var num_tables = data.readU8(pos + 1) | ch1 << 8;
	var tabledir = fontstart + 12;
	var _g = 0;
	while(_g < num_tables) {
		var loc = tabledir + 16 * _g++;
		var c0 = HxOverrides.cca(tag,0);
		var c1 = HxOverrides.cca(tag,1);
		var c2 = HxOverrides.cca(tag,2);
		var c3 = HxOverrides.cca(tag,3);
		if(data.readU8(loc) == c0 && data.readU8(loc + 1) == c1 && data.readU8(loc + 2) == c2 && data.readU8(loc + 3) == c3) {
			var pos = loc + 8;
			if(pos == null) {
				pos = 0;
			}
			var pos1 = pos;
			if(pos1 == null) {
				pos1 = 0;
			}
			var ch1 = data.readU8(pos1);
			var ch2 = data.readU8(pos1 + 1);
			var ch3 = data.readU8(pos1 + 2);
			return data.readU8(pos1 + 3) | ch3 << 8 | ch2 << 16 | ch1 << 24;
		}
	}
	return 0;
};
kha_graphics2_truetype_StbTruetype.stbtt_GetFontOffsetForIndex = function(font_collection,index) {
	if(kha_graphics2_truetype_StbTruetype.stbtt__isfont(font_collection)) {
		if(index == 0) {
			return 0;
		} else {
			return -1;
		}
	}
	var c0 = HxOverrides.cca("ttcf",0);
	var c1 = HxOverrides.cca("ttcf",1);
	var c2 = HxOverrides.cca("ttcf",2);
	var c3 = HxOverrides.cca("ttcf",3);
	if(font_collection.readU8(0) == c0 && font_collection.readU8(1) == c1 && font_collection.readU8(2) == c2 && font_collection.readU8(3) == c3) {
		var tmp;
		var ch1 = font_collection.readU8(4);
		var ch2 = font_collection.readU8(5);
		var ch3 = font_collection.readU8(6);
		if((font_collection.readU8(7) | ch3 << 8 | ch2 << 16 | ch1 << 24) != 65536) {
			var ch1 = font_collection.readU8(4);
			var ch2 = font_collection.readU8(5);
			var ch3 = font_collection.readU8(6);
			tmp = (font_collection.readU8(7) | ch3 << 8 | ch2 << 16 | ch1 << 24) == 131072;
		} else {
			tmp = true;
		}
		if(tmp) {
			var ch1 = font_collection.readU8(8);
			var ch2 = font_collection.readU8(9);
			var ch3 = font_collection.readU8(10);
			if(index >= (font_collection.readU8(11) | ch3 << 8 | ch2 << 16 | ch1 << 24)) {
				return -1;
			}
			var pos = 12 + index * 4;
			if(pos == null) {
				pos = 0;
			}
			var pos1 = pos;
			if(pos1 == null) {
				pos1 = 0;
			}
			var ch1 = font_collection.readU8(pos1);
			var ch2 = font_collection.readU8(pos1 + 1);
			var ch3 = font_collection.readU8(pos1 + 2);
			return font_collection.readU8(pos1 + 3) | ch3 << 8 | ch2 << 16 | ch1 << 24;
		}
	}
	return -1;
};
kha_graphics2_truetype_StbTruetype.stbtt_InitFont = function(info,data,fontstart) {
	info.data = data;
	info.fontstart = fontstart;
	var r = new kha_graphics2_truetype_Stbtt_$_$buf();
	r.data = null;
	r.cursor = 0;
	info.cff = r;
	var cmap = kha_graphics2_truetype_StbTruetype.stbtt__find_table(data,fontstart,"cmap");
	info.loca = kha_graphics2_truetype_StbTruetype.stbtt__find_table(data,fontstart,"loca");
	info.head = kha_graphics2_truetype_StbTruetype.stbtt__find_table(data,fontstart,"head");
	info.glyf = kha_graphics2_truetype_StbTruetype.stbtt__find_table(data,fontstart,"glyf");
	info.hhea = kha_graphics2_truetype_StbTruetype.stbtt__find_table(data,fontstart,"hhea");
	info.hmtx = kha_graphics2_truetype_StbTruetype.stbtt__find_table(data,fontstart,"hmtx");
	info.kern = kha_graphics2_truetype_StbTruetype.stbtt__find_table(data,fontstart,"kern");
	info.gpos = kha_graphics2_truetype_StbTruetype.stbtt__find_table(data,fontstart,"GPOS");
	if(cmap == 0 || info.head == 0 || info.hhea == 0 || info.hmtx == 0) {
		return false;
	}
	if(info.glyf != 0) {
		if(info.loca == 0) {
			return false;
		}
	} else {
		var topdict;
		var topdictidx;
		var cstype = [2];
		var charstrings = [0];
		var fdarrayoff = [0];
		var fdselectoff = [0];
		var cff = kha_graphics2_truetype_StbTruetype.stbtt__find_table(data,fontstart,"CFF ");
		if(cff == 0) {
			return false;
		}
		var r = new kha_graphics2_truetype_Stbtt_$_$buf();
		r.data = null;
		r.cursor = 0;
		info.fontdicts = r;
		var r = new kha_graphics2_truetype_Stbtt_$_$buf();
		r.data = null;
		r.cursor = 0;
		info.fdselect = r;
		var cff_data = data.sub(cff,data.get_length() - cff);
		var size = cff_data.get_length();
		var r = new kha_graphics2_truetype_Stbtt_$_$buf();
		if(size >= 1073741824) {
			throw haxe_Exception.thrown("Error");
		}
		r.data = cff_data;
		r.cursor = 0;
		info.cff = r;
		var b = info.cff;
		var o = b.cursor + 2;
		if(o > b.data.get_length() || o < 0) {
			throw haxe_Exception.thrown("Error");
		}
		b.cursor = o > b.data.get_length() || o < 0 ? b.data.get_length() : o;
		var o;
		if(b.cursor >= b.data.get_length()) {
			o = 0;
		} else {
			var pos = b.cursor++;
			if(pos == null) {
				pos = 0;
			}
			o = b.data.readU8(pos);
		}
		if(o > b.data.get_length() || o < 0) {
			throw haxe_Exception.thrown("Error");
		}
		b.cursor = o > b.data.get_length() || o < 0 ? b.data.get_length() : o;
		var start = b.cursor;
		var v = 0;
		var _g = 0;
		while(_g < 2) {
			++_g;
			var v1;
			if(b.cursor >= b.data.get_length()) {
				v1 = 0;
			} else {
				var pos = b.cursor++;
				if(pos == null) {
					pos = 0;
				}
				v1 = b.data.readU8(pos);
			}
			v = v << 8 | v1;
		}
		var count = v;
		if(count > 0) {
			var offsize;
			if(b.cursor >= b.data.get_length()) {
				offsize = 0;
			} else {
				var pos = b.cursor++;
				if(pos == null) {
					pos = 0;
				}
				offsize = b.data.readU8(pos);
			}
			if(!(offsize >= 1 && offsize <= 4)) {
				throw haxe_Exception.thrown("Error");
			}
			var o = b.cursor + offsize * count;
			if(o > b.data.get_length() || o < 0) {
				throw haxe_Exception.thrown("Error");
			}
			b.cursor = o > b.data.get_length() || o < 0 ? b.data.get_length() : o;
			var v = 0;
			if(!(offsize >= 1 && offsize <= 4)) {
				throw haxe_Exception.thrown("Error");
			}
			var _g = 0;
			var _g1 = offsize;
			while(_g < _g1) {
				++_g;
				var v1;
				if(b.cursor >= b.data.get_length()) {
					v1 = 0;
				} else {
					var pos = b.cursor++;
					if(pos == null) {
						pos = 0;
					}
					v1 = b.data.readU8(pos);
				}
				v = v << 8 | v1;
			}
			var o = b.cursor + (v - 1);
			if(o > b.data.get_length() || o < 0) {
				throw haxe_Exception.thrown("Error");
			}
			b.cursor = o > b.data.get_length() || o < 0 ? b.data.get_length() : o;
			var s = b.cursor - start;
			var r = new kha_graphics2_truetype_Stbtt_$_$buf();
			r.data = null;
			r.cursor = 0;
			if(!(start < 0 || s < 0 || start > b.data.get_length() || s > b.data.get_length() - start)) {
				r.data = b.data.sub(start,s);
			}
		}
		var start = b.cursor;
		var v = 0;
		var _g = 0;
		while(_g < 2) {
			++_g;
			var v1;
			if(b.cursor >= b.data.get_length()) {
				v1 = 0;
			} else {
				var pos = b.cursor++;
				if(pos == null) {
					pos = 0;
				}
				v1 = b.data.readU8(pos);
			}
			v = v << 8 | v1;
		}
		var count = v;
		if(count > 0) {
			var offsize;
			if(b.cursor >= b.data.get_length()) {
				offsize = 0;
			} else {
				var pos = b.cursor++;
				if(pos == null) {
					pos = 0;
				}
				offsize = b.data.readU8(pos);
			}
			if(!(offsize >= 1 && offsize <= 4)) {
				throw haxe_Exception.thrown("Error");
			}
			var o = b.cursor + offsize * count;
			if(o > b.data.get_length() || o < 0) {
				throw haxe_Exception.thrown("Error");
			}
			b.cursor = o > b.data.get_length() || o < 0 ? b.data.get_length() : o;
			var v = 0;
			if(!(offsize >= 1 && offsize <= 4)) {
				throw haxe_Exception.thrown("Error");
			}
			var _g = 0;
			var _g1 = offsize;
			while(_g < _g1) {
				++_g;
				var v1;
				if(b.cursor >= b.data.get_length()) {
					v1 = 0;
				} else {
					var pos = b.cursor++;
					if(pos == null) {
						pos = 0;
					}
					v1 = b.data.readU8(pos);
				}
				v = v << 8 | v1;
			}
			var o = b.cursor + (v - 1);
			if(o > b.data.get_length() || o < 0) {
				throw haxe_Exception.thrown("Error");
			}
			b.cursor = o > b.data.get_length() || o < 0 ? b.data.get_length() : o;
			var s = b.cursor - start;
			var r = new kha_graphics2_truetype_Stbtt_$_$buf();
			r.data = null;
			r.cursor = 0;
			if(start < 0 || s < 0 || start > b.data.get_length() || s > b.data.get_length() - start) {
				topdictidx = r;
			} else {
				r.data = b.data.sub(start,s);
				topdictidx = r;
			}
		} else {
			topdictidx = b;
		}
		if(0 > topdictidx.data.get_length()) {
			throw haxe_Exception.thrown("Error");
		}
		topdictidx.cursor = 0 > topdictidx.data.get_length() ? topdictidx.data.get_length() : 0;
		var v = 0;
		var _g = 0;
		while(_g < 2) {
			++_g;
			var v1;
			if(topdictidx.cursor >= topdictidx.data.get_length()) {
				v1 = 0;
			} else {
				var pos = topdictidx.cursor++;
				if(pos == null) {
					pos = 0;
				}
				v1 = topdictidx.data.readU8(pos);
			}
			v = v << 8 | v1;
		}
		var count = v;
		var offsize;
		if(topdictidx.cursor >= topdictidx.data.get_length()) {
			offsize = 0;
		} else {
			var pos = topdictidx.cursor++;
			if(pos == null) {
				pos = 0;
			}
			offsize = topdictidx.data.readU8(pos);
		}
		if(0 >= count) {
			throw haxe_Exception.thrown("Error");
		}
		if(!(offsize >= 1 && offsize <= 4)) {
			throw haxe_Exception.thrown("Error");
		}
		var o = topdictidx.cursor + 0 * offsize;
		if(o > topdictidx.data.get_length() || o < 0) {
			throw haxe_Exception.thrown("Error");
		}
		topdictidx.cursor = o > topdictidx.data.get_length() || o < 0 ? topdictidx.data.get_length() : o;
		var v = 0;
		if(!(offsize >= 1 && offsize <= 4)) {
			throw haxe_Exception.thrown("Error");
		}
		var _g = 0;
		var _g1 = offsize;
		while(_g < _g1) {
			++_g;
			var v1;
			if(topdictidx.cursor >= topdictidx.data.get_length()) {
				v1 = 0;
			} else {
				var pos = topdictidx.cursor++;
				if(pos == null) {
					pos = 0;
				}
				v1 = topdictidx.data.readU8(pos);
			}
			v = v << 8 | v1;
		}
		var start = v;
		var v = 0;
		if(!(offsize >= 1 && offsize <= 4)) {
			throw haxe_Exception.thrown("Error");
		}
		var _g = 0;
		var _g1 = offsize;
		while(_g < _g1) {
			++_g;
			var v1;
			if(topdictidx.cursor >= topdictidx.data.get_length()) {
				v1 = 0;
			} else {
				var pos = topdictidx.cursor++;
				if(pos == null) {
					pos = 0;
				}
				v1 = topdictidx.data.readU8(pos);
			}
			v = v << 8 | v1;
		}
		var o = 2 + (count + 1) * offsize + start;
		var s = v - start;
		var r = new kha_graphics2_truetype_Stbtt_$_$buf();
		r.data = null;
		r.cursor = 0;
		if(o < 0 || s < 0 || o > topdictidx.data.get_length() || s > topdictidx.data.get_length() - o) {
			topdict = r;
		} else {
			r.data = topdictidx.data.sub(o,s);
			topdict = r;
		}
		var start = b.cursor;
		var v = 0;
		var _g = 0;
		while(_g < 2) {
			++_g;
			var v1;
			if(b.cursor >= b.data.get_length()) {
				v1 = 0;
			} else {
				var pos = b.cursor++;
				if(pos == null) {
					pos = 0;
				}
				v1 = b.data.readU8(pos);
			}
			v = v << 8 | v1;
		}
		var count = v;
		if(count > 0) {
			var offsize;
			if(b.cursor >= b.data.get_length()) {
				offsize = 0;
			} else {
				var pos = b.cursor++;
				if(pos == null) {
					pos = 0;
				}
				offsize = b.data.readU8(pos);
			}
			if(!(offsize >= 1 && offsize <= 4)) {
				throw haxe_Exception.thrown("Error");
			}
			var o = b.cursor + offsize * count;
			if(o > b.data.get_length() || o < 0) {
				throw haxe_Exception.thrown("Error");
			}
			b.cursor = o > b.data.get_length() || o < 0 ? b.data.get_length() : o;
			var v = 0;
			if(!(offsize >= 1 && offsize <= 4)) {
				throw haxe_Exception.thrown("Error");
			}
			var _g = 0;
			var _g1 = offsize;
			while(_g < _g1) {
				++_g;
				var v1;
				if(b.cursor >= b.data.get_length()) {
					v1 = 0;
				} else {
					var pos = b.cursor++;
					if(pos == null) {
						pos = 0;
					}
					v1 = b.data.readU8(pos);
				}
				v = v << 8 | v1;
			}
			var o = b.cursor + (v - 1);
			if(o > b.data.get_length() || o < 0) {
				throw haxe_Exception.thrown("Error");
			}
			b.cursor = o > b.data.get_length() || o < 0 ? b.data.get_length() : o;
			var s = b.cursor - start;
			var r = new kha_graphics2_truetype_Stbtt_$_$buf();
			r.data = null;
			r.cursor = 0;
			if(!(start < 0 || s < 0 || start > b.data.get_length() || s > b.data.get_length() - start)) {
				r.data = b.data.sub(start,s);
			}
		}
		var start = b.cursor;
		var v = 0;
		var _g = 0;
		while(_g < 2) {
			++_g;
			var v1;
			if(b.cursor >= b.data.get_length()) {
				v1 = 0;
			} else {
				var pos = b.cursor++;
				if(pos == null) {
					pos = 0;
				}
				v1 = b.data.readU8(pos);
			}
			v = v << 8 | v1;
		}
		var count = v;
		var tmp;
		if(count > 0) {
			var offsize;
			if(b.cursor >= b.data.get_length()) {
				offsize = 0;
			} else {
				var pos = b.cursor++;
				if(pos == null) {
					pos = 0;
				}
				offsize = b.data.readU8(pos);
			}
			if(!(offsize >= 1 && offsize <= 4)) {
				throw haxe_Exception.thrown("Error");
			}
			var o = b.cursor + offsize * count;
			if(o > b.data.get_length() || o < 0) {
				throw haxe_Exception.thrown("Error");
			}
			b.cursor = o > b.data.get_length() || o < 0 ? b.data.get_length() : o;
			var v = 0;
			if(!(offsize >= 1 && offsize <= 4)) {
				throw haxe_Exception.thrown("Error");
			}
			var _g = 0;
			var _g1 = offsize;
			while(_g < _g1) {
				++_g;
				var v1;
				if(b.cursor >= b.data.get_length()) {
					v1 = 0;
				} else {
					var pos = b.cursor++;
					if(pos == null) {
						pos = 0;
					}
					v1 = b.data.readU8(pos);
				}
				v = v << 8 | v1;
			}
			var o = b.cursor + (v - 1);
			if(o > b.data.get_length() || o < 0) {
				throw haxe_Exception.thrown("Error");
			}
			b.cursor = o > b.data.get_length() || o < 0 ? b.data.get_length() : o;
			var s = b.cursor - start;
			var r = new kha_graphics2_truetype_Stbtt_$_$buf();
			r.data = null;
			r.cursor = 0;
			if(start < 0 || s < 0 || start > b.data.get_length() || s > b.data.get_length() - start) {
				tmp = r;
			} else {
				r.data = b.data.sub(start,s);
				tmp = r;
			}
		} else {
			tmp = b;
		}
		info.gsubrs = tmp;
		var i = 0;
		if(0 > topdict.data.get_length()) {
			throw haxe_Exception.thrown("Error");
		}
		topdict.cursor = 0 > topdict.data.get_length() ? topdict.data.get_length() : 0;
		var ret = null;
		while(topdict.cursor < topdict.data.get_length()) {
			var start = topdict.cursor;
			var op;
			while(true) {
				var tmp;
				if(topdict.cursor >= topdict.data.get_length()) {
					tmp = 0;
				} else {
					var pos = topdict.cursor;
					if(pos == null) {
						pos = 0;
					}
					tmp = topdict.data.readU8(pos);
				}
				if(!(tmp >= 28)) {
					break;
				}
				var v;
				var b0;
				if(topdict.cursor >= topdict.data.get_length()) {
					b0 = 0;
				} else {
					var pos1 = topdict.cursor;
					if(pos1 == null) {
						pos1 = 0;
					}
					b0 = topdict.data.readU8(pos1);
				}
				if(b0 < 28) {
					throw haxe_Exception.thrown("Error");
				}
				if(b0 == 30) {
					var o = topdict.cursor + 1;
					if(o > topdict.data.get_length() || o < 0) {
						throw haxe_Exception.thrown("Error");
					}
					topdict.cursor = o > topdict.data.get_length() || o < 0 ? topdict.data.get_length() : o;
					while(topdict.cursor < topdict.data.get_length()) {
						if(topdict.cursor >= topdict.data.get_length()) {
							v = 0;
						} else {
							var pos2 = topdict.cursor++;
							if(pos2 == null) {
								pos2 = 0;
							}
							v = topdict.data.readU8(pos2);
						}
						if((v & 15) == 15 || v >> 4 == 15) {
							break;
						}
					}
				} else {
					var b01;
					if(topdict.cursor >= topdict.data.get_length()) {
						b01 = 0;
					} else {
						var pos3 = topdict.cursor++;
						if(pos3 == null) {
							pos3 = 0;
						}
						b01 = topdict.data.readU8(pos3);
					}
					if(!(b01 >= 32 && b01 <= 246)) {
						if(b01 >= 247 && b01 <= 250) {
							if(topdict.cursor < topdict.data.get_length()) {
								var pos4 = topdict.cursor++;
								if(pos4 == null) {
									pos4 = 0;
								}
								topdict.data.readU8(pos4);
							}
						} else if(b01 >= 251 && b01 <= 254) {
							if(topdict.cursor < topdict.data.get_length()) {
								var pos5 = topdict.cursor++;
								if(pos5 == null) {
									pos5 = 0;
								}
								topdict.data.readU8(pos5);
							}
						} else if(b01 == 28) {
							var _g = 0;
							while(_g < 2) {
								++_g;
								if(topdict.cursor < topdict.data.get_length()) {
									var pos6 = topdict.cursor++;
									if(pos6 == null) {
										pos6 = 0;
									}
									topdict.data.readU8(pos6);
								}
							}
						} else if(b01 == 29) {
							var _g1 = 0;
							while(_g1 < 4) {
								++_g1;
								if(topdict.cursor < topdict.data.get_length()) {
									var pos7 = topdict.cursor++;
									if(pos7 == null) {
										pos7 = 0;
									}
									topdict.data.readU8(pos7);
								}
							}
						} else {
							throw haxe_Exception.thrown("Error");
						}
					}
				}
			}
			var end = topdict.cursor;
			if(topdict.cursor >= topdict.data.get_length()) {
				op = 0;
			} else {
				var pos8 = topdict.cursor++;
				if(pos8 == null) {
					pos8 = 0;
				}
				op = topdict.data.readU8(pos8);
			}
			if(op == 12) {
				var op1;
				if(topdict.cursor >= topdict.data.get_length()) {
					op1 = 0;
				} else {
					var pos9 = topdict.cursor++;
					if(pos9 == null) {
						pos9 = 0;
					}
					op1 = topdict.data.readU8(pos9);
				}
				op = op1 | 256;
			}
			if(op == 17) {
				var s = end - start;
				var r = new kha_graphics2_truetype_Stbtt_$_$buf();
				r.data = null;
				r.cursor = 0;
				if(start < 0 || s < 0 || start > topdict.data.get_length() || s > topdict.data.get_length() - start) {
					ret = r;
				} else {
					r.data = topdict.data.sub(start,s);
					ret = r;
				}
				break;
			}
		}
		var operands;
		if(ret != null) {
			operands = ret;
		} else {
			var r = new kha_graphics2_truetype_Stbtt_$_$buf();
			r.data = null;
			r.cursor = 0;
			if(0 > topdict.data.get_length() || 0 > topdict.data.get_length()) {
				operands = r;
			} else {
				r.data = topdict.data.sub(0,0);
				operands = r;
			}
		}
		while(i < 1 && operands.cursor < operands.data.get_length()) {
			var b0;
			if(operands.cursor >= operands.data.get_length()) {
				b0 = 0;
			} else {
				var pos = operands.cursor++;
				if(pos == null) {
					pos = 0;
				}
				b0 = operands.data.readU8(pos);
			}
			var tmp;
			if(b0 >= 32 && b0 <= 246) {
				tmp = b0 - 139;
			} else if(b0 >= 247 && b0 <= 250) {
				var tmp1;
				if(operands.cursor >= operands.data.get_length()) {
					tmp1 = 0;
				} else {
					var pos1 = operands.cursor++;
					if(pos1 == null) {
						pos1 = 0;
					}
					tmp1 = operands.data.readU8(pos1);
				}
				tmp = (b0 - 247) * 256 + tmp1 + 108;
			} else if(b0 >= 251 && b0 <= 254) {
				var tmp2;
				if(operands.cursor >= operands.data.get_length()) {
					tmp2 = 0;
				} else {
					var pos2 = operands.cursor++;
					if(pos2 == null) {
						pos2 = 0;
					}
					tmp2 = operands.data.readU8(pos2);
				}
				tmp = -(b0 - 251) * 256 - tmp2 - 108;
			} else if(b0 == 28) {
				var v = 0;
				var _g = 0;
				while(_g < 2) {
					++_g;
					var v1;
					if(operands.cursor >= operands.data.get_length()) {
						v1 = 0;
					} else {
						var pos3 = operands.cursor++;
						if(pos3 == null) {
							pos3 = 0;
						}
						v1 = operands.data.readU8(pos3);
					}
					v = v << 8 | v1;
				}
				tmp = v;
			} else if(b0 == 29) {
				var v2 = 0;
				var _g1 = 0;
				while(_g1 < 4) {
					++_g1;
					var v3;
					if(operands.cursor >= operands.data.get_length()) {
						v3 = 0;
					} else {
						var pos4 = operands.cursor++;
						if(pos4 == null) {
							pos4 = 0;
						}
						v3 = operands.data.readU8(pos4);
					}
					v2 = v2 << 8 | v3;
				}
				tmp = v2;
			} else {
				throw haxe_Exception.thrown("Error");
			}
			charstrings[i] = tmp;
			++i;
		}
		var i = 0;
		if(0 > topdict.data.get_length()) {
			throw haxe_Exception.thrown("Error");
		}
		topdict.cursor = 0 > topdict.data.get_length() ? topdict.data.get_length() : 0;
		var ret = null;
		while(topdict.cursor < topdict.data.get_length()) {
			var start = topdict.cursor;
			var op;
			while(true) {
				var tmp;
				if(topdict.cursor >= topdict.data.get_length()) {
					tmp = 0;
				} else {
					var pos = topdict.cursor;
					if(pos == null) {
						pos = 0;
					}
					tmp = topdict.data.readU8(pos);
				}
				if(!(tmp >= 28)) {
					break;
				}
				var v;
				var b0;
				if(topdict.cursor >= topdict.data.get_length()) {
					b0 = 0;
				} else {
					var pos1 = topdict.cursor;
					if(pos1 == null) {
						pos1 = 0;
					}
					b0 = topdict.data.readU8(pos1);
				}
				if(b0 < 28) {
					throw haxe_Exception.thrown("Error");
				}
				if(b0 == 30) {
					var o = topdict.cursor + 1;
					if(o > topdict.data.get_length() || o < 0) {
						throw haxe_Exception.thrown("Error");
					}
					topdict.cursor = o > topdict.data.get_length() || o < 0 ? topdict.data.get_length() : o;
					while(topdict.cursor < topdict.data.get_length()) {
						if(topdict.cursor >= topdict.data.get_length()) {
							v = 0;
						} else {
							var pos2 = topdict.cursor++;
							if(pos2 == null) {
								pos2 = 0;
							}
							v = topdict.data.readU8(pos2);
						}
						if((v & 15) == 15 || v >> 4 == 15) {
							break;
						}
					}
				} else {
					var b01;
					if(topdict.cursor >= topdict.data.get_length()) {
						b01 = 0;
					} else {
						var pos3 = topdict.cursor++;
						if(pos3 == null) {
							pos3 = 0;
						}
						b01 = topdict.data.readU8(pos3);
					}
					if(!(b01 >= 32 && b01 <= 246)) {
						if(b01 >= 247 && b01 <= 250) {
							if(topdict.cursor < topdict.data.get_length()) {
								var pos4 = topdict.cursor++;
								if(pos4 == null) {
									pos4 = 0;
								}
								topdict.data.readU8(pos4);
							}
						} else if(b01 >= 251 && b01 <= 254) {
							if(topdict.cursor < topdict.data.get_length()) {
								var pos5 = topdict.cursor++;
								if(pos5 == null) {
									pos5 = 0;
								}
								topdict.data.readU8(pos5);
							}
						} else if(b01 == 28) {
							var _g = 0;
							while(_g < 2) {
								++_g;
								if(topdict.cursor < topdict.data.get_length()) {
									var pos6 = topdict.cursor++;
									if(pos6 == null) {
										pos6 = 0;
									}
									topdict.data.readU8(pos6);
								}
							}
						} else if(b01 == 29) {
							var _g1 = 0;
							while(_g1 < 4) {
								++_g1;
								if(topdict.cursor < topdict.data.get_length()) {
									var pos7 = topdict.cursor++;
									if(pos7 == null) {
										pos7 = 0;
									}
									topdict.data.readU8(pos7);
								}
							}
						} else {
							throw haxe_Exception.thrown("Error");
						}
					}
				}
			}
			var end = topdict.cursor;
			if(topdict.cursor >= topdict.data.get_length()) {
				op = 0;
			} else {
				var pos8 = topdict.cursor++;
				if(pos8 == null) {
					pos8 = 0;
				}
				op = topdict.data.readU8(pos8);
			}
			if(op == 12) {
				var op1;
				if(topdict.cursor >= topdict.data.get_length()) {
					op1 = 0;
				} else {
					var pos9 = topdict.cursor++;
					if(pos9 == null) {
						pos9 = 0;
					}
					op1 = topdict.data.readU8(pos9);
				}
				op = op1 | 256;
			}
			if(op == 262) {
				var s = end - start;
				var r = new kha_graphics2_truetype_Stbtt_$_$buf();
				r.data = null;
				r.cursor = 0;
				if(start < 0 || s < 0 || start > topdict.data.get_length() || s > topdict.data.get_length() - start) {
					ret = r;
				} else {
					r.data = topdict.data.sub(start,s);
					ret = r;
				}
				break;
			}
		}
		var operands;
		if(ret != null) {
			operands = ret;
		} else {
			var r = new kha_graphics2_truetype_Stbtt_$_$buf();
			r.data = null;
			r.cursor = 0;
			if(0 > topdict.data.get_length() || 0 > topdict.data.get_length()) {
				operands = r;
			} else {
				r.data = topdict.data.sub(0,0);
				operands = r;
			}
		}
		while(i < 1 && operands.cursor < operands.data.get_length()) {
			var b0;
			if(operands.cursor >= operands.data.get_length()) {
				b0 = 0;
			} else {
				var pos = operands.cursor++;
				if(pos == null) {
					pos = 0;
				}
				b0 = operands.data.readU8(pos);
			}
			var tmp;
			if(b0 >= 32 && b0 <= 246) {
				tmp = b0 - 139;
			} else if(b0 >= 247 && b0 <= 250) {
				var tmp1;
				if(operands.cursor >= operands.data.get_length()) {
					tmp1 = 0;
				} else {
					var pos1 = operands.cursor++;
					if(pos1 == null) {
						pos1 = 0;
					}
					tmp1 = operands.data.readU8(pos1);
				}
				tmp = (b0 - 247) * 256 + tmp1 + 108;
			} else if(b0 >= 251 && b0 <= 254) {
				var tmp2;
				if(operands.cursor >= operands.data.get_length()) {
					tmp2 = 0;
				} else {
					var pos2 = operands.cursor++;
					if(pos2 == null) {
						pos2 = 0;
					}
					tmp2 = operands.data.readU8(pos2);
				}
				tmp = -(b0 - 251) * 256 - tmp2 - 108;
			} else if(b0 == 28) {
				var v = 0;
				var _g = 0;
				while(_g < 2) {
					++_g;
					var v1;
					if(operands.cursor >= operands.data.get_length()) {
						v1 = 0;
					} else {
						var pos3 = operands.cursor++;
						if(pos3 == null) {
							pos3 = 0;
						}
						v1 = operands.data.readU8(pos3);
					}
					v = v << 8 | v1;
				}
				tmp = v;
			} else if(b0 == 29) {
				var v2 = 0;
				var _g1 = 0;
				while(_g1 < 4) {
					++_g1;
					var v3;
					if(operands.cursor >= operands.data.get_length()) {
						v3 = 0;
					} else {
						var pos4 = operands.cursor++;
						if(pos4 == null) {
							pos4 = 0;
						}
						v3 = operands.data.readU8(pos4);
					}
					v2 = v2 << 8 | v3;
				}
				tmp = v2;
			} else {
				throw haxe_Exception.thrown("Error");
			}
			cstype[i] = tmp;
			++i;
		}
		var i = 0;
		if(0 > topdict.data.get_length()) {
			throw haxe_Exception.thrown("Error");
		}
		topdict.cursor = 0 > topdict.data.get_length() ? topdict.data.get_length() : 0;
		var ret = null;
		while(topdict.cursor < topdict.data.get_length()) {
			var start = topdict.cursor;
			var op;
			while(true) {
				var tmp;
				if(topdict.cursor >= topdict.data.get_length()) {
					tmp = 0;
				} else {
					var pos = topdict.cursor;
					if(pos == null) {
						pos = 0;
					}
					tmp = topdict.data.readU8(pos);
				}
				if(!(tmp >= 28)) {
					break;
				}
				var v;
				var b0;
				if(topdict.cursor >= topdict.data.get_length()) {
					b0 = 0;
				} else {
					var pos1 = topdict.cursor;
					if(pos1 == null) {
						pos1 = 0;
					}
					b0 = topdict.data.readU8(pos1);
				}
				if(b0 < 28) {
					throw haxe_Exception.thrown("Error");
				}
				if(b0 == 30) {
					var o = topdict.cursor + 1;
					if(o > topdict.data.get_length() || o < 0) {
						throw haxe_Exception.thrown("Error");
					}
					topdict.cursor = o > topdict.data.get_length() || o < 0 ? topdict.data.get_length() : o;
					while(topdict.cursor < topdict.data.get_length()) {
						if(topdict.cursor >= topdict.data.get_length()) {
							v = 0;
						} else {
							var pos2 = topdict.cursor++;
							if(pos2 == null) {
								pos2 = 0;
							}
							v = topdict.data.readU8(pos2);
						}
						if((v & 15) == 15 || v >> 4 == 15) {
							break;
						}
					}
				} else {
					var b01;
					if(topdict.cursor >= topdict.data.get_length()) {
						b01 = 0;
					} else {
						var pos3 = topdict.cursor++;
						if(pos3 == null) {
							pos3 = 0;
						}
						b01 = topdict.data.readU8(pos3);
					}
					if(!(b01 >= 32 && b01 <= 246)) {
						if(b01 >= 247 && b01 <= 250) {
							if(topdict.cursor < topdict.data.get_length()) {
								var pos4 = topdict.cursor++;
								if(pos4 == null) {
									pos4 = 0;
								}
								topdict.data.readU8(pos4);
							}
						} else if(b01 >= 251 && b01 <= 254) {
							if(topdict.cursor < topdict.data.get_length()) {
								var pos5 = topdict.cursor++;
								if(pos5 == null) {
									pos5 = 0;
								}
								topdict.data.readU8(pos5);
							}
						} else if(b01 == 28) {
							var _g = 0;
							while(_g < 2) {
								++_g;
								if(topdict.cursor < topdict.data.get_length()) {
									var pos6 = topdict.cursor++;
									if(pos6 == null) {
										pos6 = 0;
									}
									topdict.data.readU8(pos6);
								}
							}
						} else if(b01 == 29) {
							var _g1 = 0;
							while(_g1 < 4) {
								++_g1;
								if(topdict.cursor < topdict.data.get_length()) {
									var pos7 = topdict.cursor++;
									if(pos7 == null) {
										pos7 = 0;
									}
									topdict.data.readU8(pos7);
								}
							}
						} else {
							throw haxe_Exception.thrown("Error");
						}
					}
				}
			}
			var end = topdict.cursor;
			if(topdict.cursor >= topdict.data.get_length()) {
				op = 0;
			} else {
				var pos8 = topdict.cursor++;
				if(pos8 == null) {
					pos8 = 0;
				}
				op = topdict.data.readU8(pos8);
			}
			if(op == 12) {
				var op1;
				if(topdict.cursor >= topdict.data.get_length()) {
					op1 = 0;
				} else {
					var pos9 = topdict.cursor++;
					if(pos9 == null) {
						pos9 = 0;
					}
					op1 = topdict.data.readU8(pos9);
				}
				op = op1 | 256;
			}
			if(op == 292) {
				var s = end - start;
				var r = new kha_graphics2_truetype_Stbtt_$_$buf();
				r.data = null;
				r.cursor = 0;
				if(start < 0 || s < 0 || start > topdict.data.get_length() || s > topdict.data.get_length() - start) {
					ret = r;
				} else {
					r.data = topdict.data.sub(start,s);
					ret = r;
				}
				break;
			}
		}
		var operands;
		if(ret != null) {
			operands = ret;
		} else {
			var r = new kha_graphics2_truetype_Stbtt_$_$buf();
			r.data = null;
			r.cursor = 0;
			if(0 > topdict.data.get_length() || 0 > topdict.data.get_length()) {
				operands = r;
			} else {
				r.data = topdict.data.sub(0,0);
				operands = r;
			}
		}
		while(i < 1 && operands.cursor < operands.data.get_length()) {
			var b0;
			if(operands.cursor >= operands.data.get_length()) {
				b0 = 0;
			} else {
				var pos = operands.cursor++;
				if(pos == null) {
					pos = 0;
				}
				b0 = operands.data.readU8(pos);
			}
			var tmp;
			if(b0 >= 32 && b0 <= 246) {
				tmp = b0 - 139;
			} else if(b0 >= 247 && b0 <= 250) {
				var tmp1;
				if(operands.cursor >= operands.data.get_length()) {
					tmp1 = 0;
				} else {
					var pos1 = operands.cursor++;
					if(pos1 == null) {
						pos1 = 0;
					}
					tmp1 = operands.data.readU8(pos1);
				}
				tmp = (b0 - 247) * 256 + tmp1 + 108;
			} else if(b0 >= 251 && b0 <= 254) {
				var tmp2;
				if(operands.cursor >= operands.data.get_length()) {
					tmp2 = 0;
				} else {
					var pos2 = operands.cursor++;
					if(pos2 == null) {
						pos2 = 0;
					}
					tmp2 = operands.data.readU8(pos2);
				}
				tmp = -(b0 - 251) * 256 - tmp2 - 108;
			} else if(b0 == 28) {
				var v = 0;
				var _g = 0;
				while(_g < 2) {
					++_g;
					var v1;
					if(operands.cursor >= operands.data.get_length()) {
						v1 = 0;
					} else {
						var pos3 = operands.cursor++;
						if(pos3 == null) {
							pos3 = 0;
						}
						v1 = operands.data.readU8(pos3);
					}
					v = v << 8 | v1;
				}
				tmp = v;
			} else if(b0 == 29) {
				var v2 = 0;
				var _g1 = 0;
				while(_g1 < 4) {
					++_g1;
					var v3;
					if(operands.cursor >= operands.data.get_length()) {
						v3 = 0;
					} else {
						var pos4 = operands.cursor++;
						if(pos4 == null) {
							pos4 = 0;
						}
						v3 = operands.data.readU8(pos4);
					}
					v2 = v2 << 8 | v3;
				}
				tmp = v2;
			} else {
				throw haxe_Exception.thrown("Error");
			}
			fdarrayoff[i] = tmp;
			++i;
		}
		var i = 0;
		if(0 > topdict.data.get_length()) {
			throw haxe_Exception.thrown("Error");
		}
		topdict.cursor = 0 > topdict.data.get_length() ? topdict.data.get_length() : 0;
		var ret = null;
		while(topdict.cursor < topdict.data.get_length()) {
			var start = topdict.cursor;
			var op;
			while(true) {
				var tmp;
				if(topdict.cursor >= topdict.data.get_length()) {
					tmp = 0;
				} else {
					var pos = topdict.cursor;
					if(pos == null) {
						pos = 0;
					}
					tmp = topdict.data.readU8(pos);
				}
				if(!(tmp >= 28)) {
					break;
				}
				var v;
				var b0;
				if(topdict.cursor >= topdict.data.get_length()) {
					b0 = 0;
				} else {
					var pos1 = topdict.cursor;
					if(pos1 == null) {
						pos1 = 0;
					}
					b0 = topdict.data.readU8(pos1);
				}
				if(b0 < 28) {
					throw haxe_Exception.thrown("Error");
				}
				if(b0 == 30) {
					var o = topdict.cursor + 1;
					if(o > topdict.data.get_length() || o < 0) {
						throw haxe_Exception.thrown("Error");
					}
					topdict.cursor = o > topdict.data.get_length() || o < 0 ? topdict.data.get_length() : o;
					while(topdict.cursor < topdict.data.get_length()) {
						if(topdict.cursor >= topdict.data.get_length()) {
							v = 0;
						} else {
							var pos2 = topdict.cursor++;
							if(pos2 == null) {
								pos2 = 0;
							}
							v = topdict.data.readU8(pos2);
						}
						if((v & 15) == 15 || v >> 4 == 15) {
							break;
						}
					}
				} else {
					var b01;
					if(topdict.cursor >= topdict.data.get_length()) {
						b01 = 0;
					} else {
						var pos3 = topdict.cursor++;
						if(pos3 == null) {
							pos3 = 0;
						}
						b01 = topdict.data.readU8(pos3);
					}
					if(!(b01 >= 32 && b01 <= 246)) {
						if(b01 >= 247 && b01 <= 250) {
							if(topdict.cursor < topdict.data.get_length()) {
								var pos4 = topdict.cursor++;
								if(pos4 == null) {
									pos4 = 0;
								}
								topdict.data.readU8(pos4);
							}
						} else if(b01 >= 251 && b01 <= 254) {
							if(topdict.cursor < topdict.data.get_length()) {
								var pos5 = topdict.cursor++;
								if(pos5 == null) {
									pos5 = 0;
								}
								topdict.data.readU8(pos5);
							}
						} else if(b01 == 28) {
							var _g = 0;
							while(_g < 2) {
								++_g;
								if(topdict.cursor < topdict.data.get_length()) {
									var pos6 = topdict.cursor++;
									if(pos6 == null) {
										pos6 = 0;
									}
									topdict.data.readU8(pos6);
								}
							}
						} else if(b01 == 29) {
							var _g1 = 0;
							while(_g1 < 4) {
								++_g1;
								if(topdict.cursor < topdict.data.get_length()) {
									var pos7 = topdict.cursor++;
									if(pos7 == null) {
										pos7 = 0;
									}
									topdict.data.readU8(pos7);
								}
							}
						} else {
							throw haxe_Exception.thrown("Error");
						}
					}
				}
			}
			var end = topdict.cursor;
			if(topdict.cursor >= topdict.data.get_length()) {
				op = 0;
			} else {
				var pos8 = topdict.cursor++;
				if(pos8 == null) {
					pos8 = 0;
				}
				op = topdict.data.readU8(pos8);
			}
			if(op == 12) {
				var op1;
				if(topdict.cursor >= topdict.data.get_length()) {
					op1 = 0;
				} else {
					var pos9 = topdict.cursor++;
					if(pos9 == null) {
						pos9 = 0;
					}
					op1 = topdict.data.readU8(pos9);
				}
				op = op1 | 256;
			}
			if(op == 293) {
				var s = end - start;
				var r = new kha_graphics2_truetype_Stbtt_$_$buf();
				r.data = null;
				r.cursor = 0;
				if(start < 0 || s < 0 || start > topdict.data.get_length() || s > topdict.data.get_length() - start) {
					ret = r;
				} else {
					r.data = topdict.data.sub(start,s);
					ret = r;
				}
				break;
			}
		}
		var operands;
		if(ret != null) {
			operands = ret;
		} else {
			var r = new kha_graphics2_truetype_Stbtt_$_$buf();
			r.data = null;
			r.cursor = 0;
			if(0 > topdict.data.get_length() || 0 > topdict.data.get_length()) {
				operands = r;
			} else {
				r.data = topdict.data.sub(0,0);
				operands = r;
			}
		}
		while(i < 1 && operands.cursor < operands.data.get_length()) {
			var b0;
			if(operands.cursor >= operands.data.get_length()) {
				b0 = 0;
			} else {
				var pos = operands.cursor++;
				if(pos == null) {
					pos = 0;
				}
				b0 = operands.data.readU8(pos);
			}
			var tmp;
			if(b0 >= 32 && b0 <= 246) {
				tmp = b0 - 139;
			} else if(b0 >= 247 && b0 <= 250) {
				var tmp1;
				if(operands.cursor >= operands.data.get_length()) {
					tmp1 = 0;
				} else {
					var pos1 = operands.cursor++;
					if(pos1 == null) {
						pos1 = 0;
					}
					tmp1 = operands.data.readU8(pos1);
				}
				tmp = (b0 - 247) * 256 + tmp1 + 108;
			} else if(b0 >= 251 && b0 <= 254) {
				var tmp2;
				if(operands.cursor >= operands.data.get_length()) {
					tmp2 = 0;
				} else {
					var pos2 = operands.cursor++;
					if(pos2 == null) {
						pos2 = 0;
					}
					tmp2 = operands.data.readU8(pos2);
				}
				tmp = -(b0 - 251) * 256 - tmp2 - 108;
			} else if(b0 == 28) {
				var v = 0;
				var _g = 0;
				while(_g < 2) {
					++_g;
					var v1;
					if(operands.cursor >= operands.data.get_length()) {
						v1 = 0;
					} else {
						var pos3 = operands.cursor++;
						if(pos3 == null) {
							pos3 = 0;
						}
						v1 = operands.data.readU8(pos3);
					}
					v = v << 8 | v1;
				}
				tmp = v;
			} else if(b0 == 29) {
				var v2 = 0;
				var _g1 = 0;
				while(_g1 < 4) {
					++_g1;
					var v3;
					if(operands.cursor >= operands.data.get_length()) {
						v3 = 0;
					} else {
						var pos4 = operands.cursor++;
						if(pos4 == null) {
							pos4 = 0;
						}
						v3 = operands.data.readU8(pos4);
					}
					v2 = v2 << 8 | v3;
				}
				tmp = v2;
			} else {
				throw haxe_Exception.thrown("Error");
			}
			fdselectoff[i] = tmp;
			++i;
		}
		var subrsoff = [0];
		var private_loc = [0,0];
		var i = 0;
		if(0 > topdict.data.get_length()) {
			throw haxe_Exception.thrown("Error");
		}
		topdict.cursor = 0 > topdict.data.get_length() ? topdict.data.get_length() : 0;
		var ret = null;
		while(topdict.cursor < topdict.data.get_length()) {
			var start = topdict.cursor;
			var op;
			while(true) {
				var tmp;
				if(topdict.cursor >= topdict.data.get_length()) {
					tmp = 0;
				} else {
					var pos = topdict.cursor;
					if(pos == null) {
						pos = 0;
					}
					tmp = topdict.data.readU8(pos);
				}
				if(!(tmp >= 28)) {
					break;
				}
				var v;
				var b0;
				if(topdict.cursor >= topdict.data.get_length()) {
					b0 = 0;
				} else {
					var pos1 = topdict.cursor;
					if(pos1 == null) {
						pos1 = 0;
					}
					b0 = topdict.data.readU8(pos1);
				}
				if(b0 < 28) {
					throw haxe_Exception.thrown("Error");
				}
				if(b0 == 30) {
					var o = topdict.cursor + 1;
					if(o > topdict.data.get_length() || o < 0) {
						throw haxe_Exception.thrown("Error");
					}
					topdict.cursor = o > topdict.data.get_length() || o < 0 ? topdict.data.get_length() : o;
					while(topdict.cursor < topdict.data.get_length()) {
						if(topdict.cursor >= topdict.data.get_length()) {
							v = 0;
						} else {
							var pos2 = topdict.cursor++;
							if(pos2 == null) {
								pos2 = 0;
							}
							v = topdict.data.readU8(pos2);
						}
						if((v & 15) == 15 || v >> 4 == 15) {
							break;
						}
					}
				} else {
					var b01;
					if(topdict.cursor >= topdict.data.get_length()) {
						b01 = 0;
					} else {
						var pos3 = topdict.cursor++;
						if(pos3 == null) {
							pos3 = 0;
						}
						b01 = topdict.data.readU8(pos3);
					}
					if(!(b01 >= 32 && b01 <= 246)) {
						if(b01 >= 247 && b01 <= 250) {
							if(topdict.cursor < topdict.data.get_length()) {
								var pos4 = topdict.cursor++;
								if(pos4 == null) {
									pos4 = 0;
								}
								topdict.data.readU8(pos4);
							}
						} else if(b01 >= 251 && b01 <= 254) {
							if(topdict.cursor < topdict.data.get_length()) {
								var pos5 = topdict.cursor++;
								if(pos5 == null) {
									pos5 = 0;
								}
								topdict.data.readU8(pos5);
							}
						} else if(b01 == 28) {
							var _g = 0;
							while(_g < 2) {
								++_g;
								if(topdict.cursor < topdict.data.get_length()) {
									var pos6 = topdict.cursor++;
									if(pos6 == null) {
										pos6 = 0;
									}
									topdict.data.readU8(pos6);
								}
							}
						} else if(b01 == 29) {
							var _g1 = 0;
							while(_g1 < 4) {
								++_g1;
								if(topdict.cursor < topdict.data.get_length()) {
									var pos7 = topdict.cursor++;
									if(pos7 == null) {
										pos7 = 0;
									}
									topdict.data.readU8(pos7);
								}
							}
						} else {
							throw haxe_Exception.thrown("Error");
						}
					}
				}
			}
			var end = topdict.cursor;
			if(topdict.cursor >= topdict.data.get_length()) {
				op = 0;
			} else {
				var pos8 = topdict.cursor++;
				if(pos8 == null) {
					pos8 = 0;
				}
				op = topdict.data.readU8(pos8);
			}
			if(op == 12) {
				var op1;
				if(topdict.cursor >= topdict.data.get_length()) {
					op1 = 0;
				} else {
					var pos9 = topdict.cursor++;
					if(pos9 == null) {
						pos9 = 0;
					}
					op1 = topdict.data.readU8(pos9);
				}
				op = op1 | 256;
			}
			if(op == 18) {
				var s = end - start;
				var r = new kha_graphics2_truetype_Stbtt_$_$buf();
				r.data = null;
				r.cursor = 0;
				if(start < 0 || s < 0 || start > topdict.data.get_length() || s > topdict.data.get_length() - start) {
					ret = r;
				} else {
					r.data = topdict.data.sub(start,s);
					ret = r;
				}
				break;
			}
		}
		var operands;
		if(ret != null) {
			operands = ret;
		} else {
			var r = new kha_graphics2_truetype_Stbtt_$_$buf();
			r.data = null;
			r.cursor = 0;
			if(0 > topdict.data.get_length() || 0 > topdict.data.get_length()) {
				operands = r;
			} else {
				r.data = topdict.data.sub(0,0);
				operands = r;
			}
		}
		while(i < 2 && operands.cursor < operands.data.get_length()) {
			var b0;
			if(operands.cursor >= operands.data.get_length()) {
				b0 = 0;
			} else {
				var pos = operands.cursor++;
				if(pos == null) {
					pos = 0;
				}
				b0 = operands.data.readU8(pos);
			}
			var tmp;
			if(b0 >= 32 && b0 <= 246) {
				tmp = b0 - 139;
			} else if(b0 >= 247 && b0 <= 250) {
				var tmp1;
				if(operands.cursor >= operands.data.get_length()) {
					tmp1 = 0;
				} else {
					var pos1 = operands.cursor++;
					if(pos1 == null) {
						pos1 = 0;
					}
					tmp1 = operands.data.readU8(pos1);
				}
				tmp = (b0 - 247) * 256 + tmp1 + 108;
			} else if(b0 >= 251 && b0 <= 254) {
				var tmp2;
				if(operands.cursor >= operands.data.get_length()) {
					tmp2 = 0;
				} else {
					var pos2 = operands.cursor++;
					if(pos2 == null) {
						pos2 = 0;
					}
					tmp2 = operands.data.readU8(pos2);
				}
				tmp = -(b0 - 251) * 256 - tmp2 - 108;
			} else if(b0 == 28) {
				var v = 0;
				var _g = 0;
				while(_g < 2) {
					++_g;
					var v1;
					if(operands.cursor >= operands.data.get_length()) {
						v1 = 0;
					} else {
						var pos3 = operands.cursor++;
						if(pos3 == null) {
							pos3 = 0;
						}
						v1 = operands.data.readU8(pos3);
					}
					v = v << 8 | v1;
				}
				tmp = v;
			} else if(b0 == 29) {
				var v2 = 0;
				var _g1 = 0;
				while(_g1 < 4) {
					++_g1;
					var v3;
					if(operands.cursor >= operands.data.get_length()) {
						v3 = 0;
					} else {
						var pos4 = operands.cursor++;
						if(pos4 == null) {
							pos4 = 0;
						}
						v3 = operands.data.readU8(pos4);
					}
					v2 = v2 << 8 | v3;
				}
				tmp = v2;
			} else {
				throw haxe_Exception.thrown("Error");
			}
			private_loc[i] = tmp;
			++i;
		}
		var tmp;
		if(private_loc[1] == 0 || private_loc[0] == 0) {
			var r = new kha_graphics2_truetype_Stbtt_$_$buf();
			r.data = null;
			r.cursor = 0;
			tmp = r;
		} else {
			var o = private_loc[1];
			var s = private_loc[0];
			var r = new kha_graphics2_truetype_Stbtt_$_$buf();
			r.data = null;
			r.cursor = 0;
			var pdict;
			if(o < 0 || s < 0 || o > b.data.get_length() || s > b.data.get_length() - o) {
				pdict = r;
			} else {
				r.data = b.data.sub(o,s);
				pdict = r;
			}
			var i = 0;
			if(0 > pdict.data.get_length()) {
				throw haxe_Exception.thrown("Error");
			}
			pdict.cursor = 0 > pdict.data.get_length() ? pdict.data.get_length() : 0;
			var ret = null;
			while(pdict.cursor < pdict.data.get_length()) {
				var start = pdict.cursor;
				var op;
				while(true) {
					var tmp1;
					if(pdict.cursor >= pdict.data.get_length()) {
						tmp1 = 0;
					} else {
						var pos = pdict.cursor;
						if(pos == null) {
							pos = 0;
						}
						tmp1 = pdict.data.readU8(pos);
					}
					if(!(tmp1 >= 28)) {
						break;
					}
					var v;
					var b0;
					if(pdict.cursor >= pdict.data.get_length()) {
						b0 = 0;
					} else {
						var pos1 = pdict.cursor;
						if(pos1 == null) {
							pos1 = 0;
						}
						b0 = pdict.data.readU8(pos1);
					}
					if(b0 < 28) {
						throw haxe_Exception.thrown("Error");
					}
					if(b0 == 30) {
						var o = pdict.cursor + 1;
						if(o > pdict.data.get_length() || o < 0) {
							throw haxe_Exception.thrown("Error");
						}
						pdict.cursor = o > pdict.data.get_length() || o < 0 ? pdict.data.get_length() : o;
						while(pdict.cursor < pdict.data.get_length()) {
							if(pdict.cursor >= pdict.data.get_length()) {
								v = 0;
							} else {
								var pos2 = pdict.cursor++;
								if(pos2 == null) {
									pos2 = 0;
								}
								v = pdict.data.readU8(pos2);
							}
							if((v & 15) == 15 || v >> 4 == 15) {
								break;
							}
						}
					} else {
						var b01;
						if(pdict.cursor >= pdict.data.get_length()) {
							b01 = 0;
						} else {
							var pos3 = pdict.cursor++;
							if(pos3 == null) {
								pos3 = 0;
							}
							b01 = pdict.data.readU8(pos3);
						}
						if(!(b01 >= 32 && b01 <= 246)) {
							if(b01 >= 247 && b01 <= 250) {
								if(pdict.cursor < pdict.data.get_length()) {
									var pos4 = pdict.cursor++;
									if(pos4 == null) {
										pos4 = 0;
									}
									pdict.data.readU8(pos4);
								}
							} else if(b01 >= 251 && b01 <= 254) {
								if(pdict.cursor < pdict.data.get_length()) {
									var pos5 = pdict.cursor++;
									if(pos5 == null) {
										pos5 = 0;
									}
									pdict.data.readU8(pos5);
								}
							} else if(b01 == 28) {
								var _g = 0;
								while(_g < 2) {
									++_g;
									if(pdict.cursor < pdict.data.get_length()) {
										var pos6 = pdict.cursor++;
										if(pos6 == null) {
											pos6 = 0;
										}
										pdict.data.readU8(pos6);
									}
								}
							} else if(b01 == 29) {
								var _g1 = 0;
								while(_g1 < 4) {
									++_g1;
									if(pdict.cursor < pdict.data.get_length()) {
										var pos7 = pdict.cursor++;
										if(pos7 == null) {
											pos7 = 0;
										}
										pdict.data.readU8(pos7);
									}
								}
							} else {
								throw haxe_Exception.thrown("Error");
							}
						}
					}
				}
				var end = pdict.cursor;
				if(pdict.cursor >= pdict.data.get_length()) {
					op = 0;
				} else {
					var pos8 = pdict.cursor++;
					if(pos8 == null) {
						pos8 = 0;
					}
					op = pdict.data.readU8(pos8);
				}
				if(op == 12) {
					var op1;
					if(pdict.cursor >= pdict.data.get_length()) {
						op1 = 0;
					} else {
						var pos9 = pdict.cursor++;
						if(pos9 == null) {
							pos9 = 0;
						}
						op1 = pdict.data.readU8(pos9);
					}
					op = op1 | 256;
				}
				if(op == 19) {
					var s = end - start;
					var r = new kha_graphics2_truetype_Stbtt_$_$buf();
					r.data = null;
					r.cursor = 0;
					if(start < 0 || s < 0 || start > pdict.data.get_length() || s > pdict.data.get_length() - start) {
						ret = r;
					} else {
						r.data = pdict.data.sub(start,s);
						ret = r;
					}
					break;
				}
			}
			var operands;
			if(ret != null) {
				operands = ret;
			} else {
				var r = new kha_graphics2_truetype_Stbtt_$_$buf();
				r.data = null;
				r.cursor = 0;
				if(0 > pdict.data.get_length() || 0 > pdict.data.get_length()) {
					operands = r;
				} else {
					r.data = pdict.data.sub(0,0);
					operands = r;
				}
			}
			while(i < 1 && operands.cursor < operands.data.get_length()) {
				var b0;
				if(operands.cursor >= operands.data.get_length()) {
					b0 = 0;
				} else {
					var pos = operands.cursor++;
					if(pos == null) {
						pos = 0;
					}
					b0 = operands.data.readU8(pos);
				}
				var tmp1;
				if(b0 >= 32 && b0 <= 246) {
					tmp1 = b0 - 139;
				} else if(b0 >= 247 && b0 <= 250) {
					var tmp2;
					if(operands.cursor >= operands.data.get_length()) {
						tmp2 = 0;
					} else {
						var pos1 = operands.cursor++;
						if(pos1 == null) {
							pos1 = 0;
						}
						tmp2 = operands.data.readU8(pos1);
					}
					tmp1 = (b0 - 247) * 256 + tmp2 + 108;
				} else if(b0 >= 251 && b0 <= 254) {
					var tmp3;
					if(operands.cursor >= operands.data.get_length()) {
						tmp3 = 0;
					} else {
						var pos2 = operands.cursor++;
						if(pos2 == null) {
							pos2 = 0;
						}
						tmp3 = operands.data.readU8(pos2);
					}
					tmp1 = -(b0 - 251) * 256 - tmp3 - 108;
				} else if(b0 == 28) {
					var v = 0;
					var _g = 0;
					while(_g < 2) {
						++_g;
						var v1;
						if(operands.cursor >= operands.data.get_length()) {
							v1 = 0;
						} else {
							var pos3 = operands.cursor++;
							if(pos3 == null) {
								pos3 = 0;
							}
							v1 = operands.data.readU8(pos3);
						}
						v = v << 8 | v1;
					}
					tmp1 = v;
				} else if(b0 == 29) {
					var v2 = 0;
					var _g1 = 0;
					while(_g1 < 4) {
						++_g1;
						var v3;
						if(operands.cursor >= operands.data.get_length()) {
							v3 = 0;
						} else {
							var pos4 = operands.cursor++;
							if(pos4 == null) {
								pos4 = 0;
							}
							v3 = operands.data.readU8(pos4);
						}
						v2 = v2 << 8 | v3;
					}
					tmp1 = v2;
				} else {
					throw haxe_Exception.thrown("Error");
				}
				subrsoff[i] = tmp1;
				++i;
			}
			if(subrsoff[0] == 0) {
				var r = new kha_graphics2_truetype_Stbtt_$_$buf();
				r.data = null;
				r.cursor = 0;
				tmp = r;
			} else {
				var o = private_loc[1] + subrsoff[0];
				if(o > b.data.get_length() || o < 0) {
					throw haxe_Exception.thrown("Error");
				}
				b.cursor = o > b.data.get_length() || o < 0 ? b.data.get_length() : o;
				var start = b.cursor;
				var v = 0;
				var _g = 0;
				while(_g < 2) {
					++_g;
					var v1;
					if(b.cursor >= b.data.get_length()) {
						v1 = 0;
					} else {
						var pos = b.cursor++;
						if(pos == null) {
							pos = 0;
						}
						v1 = b.data.readU8(pos);
					}
					v = v << 8 | v1;
				}
				var count = v;
				if(count > 0) {
					var offsize;
					if(b.cursor >= b.data.get_length()) {
						offsize = 0;
					} else {
						var pos = b.cursor++;
						if(pos == null) {
							pos = 0;
						}
						offsize = b.data.readU8(pos);
					}
					if(!(offsize >= 1 && offsize <= 4)) {
						throw haxe_Exception.thrown("Error");
					}
					var o = b.cursor + offsize * count;
					if(o > b.data.get_length() || o < 0) {
						throw haxe_Exception.thrown("Error");
					}
					b.cursor = o > b.data.get_length() || o < 0 ? b.data.get_length() : o;
					var v = 0;
					if(!(offsize >= 1 && offsize <= 4)) {
						throw haxe_Exception.thrown("Error");
					}
					var _g = 0;
					var _g1 = offsize;
					while(_g < _g1) {
						++_g;
						var v1;
						if(b.cursor >= b.data.get_length()) {
							v1 = 0;
						} else {
							var pos = b.cursor++;
							if(pos == null) {
								pos = 0;
							}
							v1 = b.data.readU8(pos);
						}
						v = v << 8 | v1;
					}
					var o = b.cursor + (v - 1);
					if(o > b.data.get_length() || o < 0) {
						throw haxe_Exception.thrown("Error");
					}
					b.cursor = o > b.data.get_length() || o < 0 ? b.data.get_length() : o;
					var s = b.cursor - start;
					var r = new kha_graphics2_truetype_Stbtt_$_$buf();
					r.data = null;
					r.cursor = 0;
					if(start < 0 || s < 0 || start > b.data.get_length() || s > b.data.get_length() - start) {
						tmp = r;
					} else {
						r.data = b.data.sub(start,s);
						tmp = r;
					}
				} else {
					tmp = b;
				}
			}
		}
		info.subrs = tmp;
		if(cstype[0] != 2) {
			return false;
		}
		if(charstrings[0] == 0) {
			return false;
		}
		if(fdarrayoff[0] != 0) {
			if(fdselectoff[0] == 0) {
				return false;
			}
			var o = fdarrayoff[0];
			if(o > b.data.get_length() || o < 0) {
				throw haxe_Exception.thrown("Error");
			}
			b.cursor = o > b.data.get_length() || o < 0 ? b.data.get_length() : o;
			var start = b.cursor;
			var v = 0;
			var _g = 0;
			while(_g < 2) {
				++_g;
				var v1;
				if(b.cursor >= b.data.get_length()) {
					v1 = 0;
				} else {
					var pos = b.cursor++;
					if(pos == null) {
						pos = 0;
					}
					v1 = b.data.readU8(pos);
				}
				v = v << 8 | v1;
			}
			var count = v;
			var tmp;
			if(count > 0) {
				var offsize;
				if(b.cursor >= b.data.get_length()) {
					offsize = 0;
				} else {
					var pos = b.cursor++;
					if(pos == null) {
						pos = 0;
					}
					offsize = b.data.readU8(pos);
				}
				if(!(offsize >= 1 && offsize <= 4)) {
					throw haxe_Exception.thrown("Error");
				}
				var o = b.cursor + offsize * count;
				if(o > b.data.get_length() || o < 0) {
					throw haxe_Exception.thrown("Error");
				}
				b.cursor = o > b.data.get_length() || o < 0 ? b.data.get_length() : o;
				var v = 0;
				if(!(offsize >= 1 && offsize <= 4)) {
					throw haxe_Exception.thrown("Error");
				}
				var _g = 0;
				var _g1 = offsize;
				while(_g < _g1) {
					++_g;
					var v1;
					if(b.cursor >= b.data.get_length()) {
						v1 = 0;
					} else {
						var pos = b.cursor++;
						if(pos == null) {
							pos = 0;
						}
						v1 = b.data.readU8(pos);
					}
					v = v << 8 | v1;
				}
				var o = b.cursor + (v - 1);
				if(o > b.data.get_length() || o < 0) {
					throw haxe_Exception.thrown("Error");
				}
				b.cursor = o > b.data.get_length() || o < 0 ? b.data.get_length() : o;
				var s = b.cursor - start;
				var r = new kha_graphics2_truetype_Stbtt_$_$buf();
				r.data = null;
				r.cursor = 0;
				if(start < 0 || s < 0 || start > b.data.get_length() || s > b.data.get_length() - start) {
					tmp = r;
				} else {
					r.data = b.data.sub(start,s);
					tmp = r;
				}
			} else {
				tmp = b;
			}
			info.fontdicts = tmp;
			var o = fdselectoff[0];
			var s = b.data.get_length() - fdselectoff[0];
			var r = new kha_graphics2_truetype_Stbtt_$_$buf();
			r.data = null;
			r.cursor = 0;
			var tmp;
			if(o < 0 || s < 0 || o > b.data.get_length() || s > b.data.get_length() - o) {
				tmp = r;
			} else {
				r.data = b.data.sub(o,s);
				tmp = r;
			}
			info.fdselect = tmp;
		}
		var o = charstrings[0];
		if(o > b.data.get_length() || o < 0) {
			throw haxe_Exception.thrown("Error");
		}
		b.cursor = o > b.data.get_length() || o < 0 ? b.data.get_length() : o;
		var start = b.cursor;
		var v = 0;
		var _g = 0;
		while(_g < 2) {
			++_g;
			var v1;
			if(b.cursor >= b.data.get_length()) {
				v1 = 0;
			} else {
				var pos = b.cursor++;
				if(pos == null) {
					pos = 0;
				}
				v1 = b.data.readU8(pos);
			}
			v = v << 8 | v1;
		}
		var count = v;
		var tmp;
		if(count > 0) {
			var offsize;
			if(b.cursor >= b.data.get_length()) {
				offsize = 0;
			} else {
				var pos = b.cursor++;
				if(pos == null) {
					pos = 0;
				}
				offsize = b.data.readU8(pos);
			}
			if(!(offsize >= 1 && offsize <= 4)) {
				throw haxe_Exception.thrown("Error");
			}
			var o = b.cursor + offsize * count;
			if(o > b.data.get_length() || o < 0) {
				throw haxe_Exception.thrown("Error");
			}
			b.cursor = o > b.data.get_length() || o < 0 ? b.data.get_length() : o;
			var v = 0;
			if(!(offsize >= 1 && offsize <= 4)) {
				throw haxe_Exception.thrown("Error");
			}
			var _g = 0;
			var _g1 = offsize;
			while(_g < _g1) {
				++_g;
				var v1;
				if(b.cursor >= b.data.get_length()) {
					v1 = 0;
				} else {
					var pos = b.cursor++;
					if(pos == null) {
						pos = 0;
					}
					v1 = b.data.readU8(pos);
				}
				v = v << 8 | v1;
			}
			var o = b.cursor + (v - 1);
			if(o > b.data.get_length() || o < 0) {
				throw haxe_Exception.thrown("Error");
			}
			b.cursor = o > b.data.get_length() || o < 0 ? b.data.get_length() : o;
			var s = b.cursor - start;
			var r = new kha_graphics2_truetype_Stbtt_$_$buf();
			r.data = null;
			r.cursor = 0;
			if(start < 0 || s < 0 || start > b.data.get_length() || s > b.data.get_length() - start) {
				tmp = r;
			} else {
				r.data = b.data.sub(start,s);
				tmp = r;
			}
		} else {
			tmp = b;
		}
		info.charstrings = tmp;
	}
	var t = kha_graphics2_truetype_StbTruetype.stbtt__find_table(data,fontstart,"maxp");
	if(t != 0) {
		var pos = t + 4;
		if(pos == null) {
			pos = 0;
		}
		var ch1 = data.readU8(pos);
		info.numGlyphs = data.readU8(pos + 1) | ch1 << 8;
	} else {
		info.numGlyphs = 65535;
	}
	var pos = cmap + 2;
	if(pos == null) {
		pos = 0;
	}
	var ch1 = data.readU8(pos);
	var numTables = data.readU8(pos + 1) | ch1 << 8;
	info.index_map = 0;
	var _g = 0;
	while(_g < numTables) {
		var encoding_record = cmap + 4 + 8 * _g++;
		var pos = encoding_record;
		if(encoding_record == null) {
			pos = 0;
		}
		var ch1 = data.readU8(pos);
		switch(data.readU8(pos + 1) | ch1 << 8) {
		case 0:
			var pos1 = encoding_record + 4;
			if(pos1 == null) {
				pos1 = 0;
			}
			var pos2 = pos1;
			if(pos2 == null) {
				pos2 = 0;
			}
			var ch11 = data.readU8(pos2);
			var ch2 = data.readU8(pos2 + 1);
			var ch3 = data.readU8(pos2 + 2);
			info.index_map = cmap + (data.readU8(pos2 + 3) | ch3 << 8 | ch2 << 16 | ch11 << 24);
			break;
		case 3:
			var pos3 = encoding_record + 2;
			if(pos3 == null) {
				pos3 = 0;
			}
			var ch12 = data.readU8(pos3);
			switch(data.readU8(pos3 + 1) | ch12 << 8) {
			case 1:case 10:
				var pos4 = encoding_record + 4;
				if(pos4 == null) {
					pos4 = 0;
				}
				var pos5 = pos4;
				if(pos5 == null) {
					pos5 = 0;
				}
				var ch13 = data.readU8(pos5);
				var ch21 = data.readU8(pos5 + 1);
				var ch31 = data.readU8(pos5 + 2);
				info.index_map = cmap + (data.readU8(pos5 + 3) | ch31 << 8 | ch21 << 16 | ch13 << 24);
				break;
			}
			break;
		}
	}
	if(info.index_map == 0) {
		return false;
	}
	var pos = info.head + 50;
	if(pos == null) {
		pos = 0;
	}
	var ch1 = data.readU8(pos);
	info.indexToLocFormat = data.readU8(pos + 1) | ch1 << 8;
	return true;
};
kha_graphics2_truetype_StbTruetype.stbtt_FindGlyphIndex = function(info,unicode_codepoint) {
	var data = info.data;
	var index_map = info.index_map;
	var pos = index_map;
	if(index_map == null) {
		pos = 0;
	}
	var ch1 = data.readU8(pos);
	var format = data.readU8(pos + 1) | ch1 << 8;
	if(format == 0) {
		var pos = index_map + 2;
		if(pos == null) {
			pos = 0;
		}
		var ch1 = data.readU8(pos);
		if(unicode_codepoint < (data.readU8(pos + 1) | ch1 << 8) - 6) {
			var pos = index_map + 6 + unicode_codepoint;
			if(pos == null) {
				pos = 0;
			}
			return data.readU8(pos);
		}
		return 0;
	} else if(format == 6) {
		var pos = index_map + 6;
		if(pos == null) {
			pos = 0;
		}
		var ch1 = data.readU8(pos);
		var first = data.readU8(pos + 1) | ch1 << 8;
		var pos = index_map + 8;
		if(pos == null) {
			pos = 0;
		}
		var ch1 = data.readU8(pos);
		var count = data.readU8(pos + 1) | ch1 << 8;
		if(unicode_codepoint >= first && unicode_codepoint < first + count) {
			var pos = index_map + 10 + (unicode_codepoint - first) * 2;
			if(pos == null) {
				pos = 0;
			}
			var ch1 = data.readU8(pos);
			return data.readU8(pos + 1) | ch1 << 8;
		}
		return 0;
	} else if(format == 2) {
		throw haxe_Exception.thrown("Error");
	} else if(format == 4) {
		var pos = index_map + 6;
		if(pos == null) {
			pos = 0;
		}
		var ch1 = data.readU8(pos);
		var segcount = (data.readU8(pos + 1) | ch1 << 8) >> 1;
		var pos = index_map + 8;
		if(pos == null) {
			pos = 0;
		}
		var ch1 = data.readU8(pos);
		var searchRange = (data.readU8(pos + 1) | ch1 << 8) >> 1;
		var pos = index_map + 10;
		if(pos == null) {
			pos = 0;
		}
		var ch1 = data.readU8(pos);
		var entrySelector = data.readU8(pos + 1) | ch1 << 8;
		var pos = index_map + 12;
		if(pos == null) {
			pos = 0;
		}
		var ch1 = data.readU8(pos);
		var rangeShift = (data.readU8(pos + 1) | ch1 << 8) >> 1;
		var endCount = index_map + 14;
		var search = endCount;
		if(unicode_codepoint > 65535) {
			return 0;
		}
		var pos = endCount + rangeShift * 2;
		if(pos == null) {
			pos = 0;
		}
		var ch1 = data.readU8(pos);
		if(unicode_codepoint >= (data.readU8(pos + 1) | ch1 << 8)) {
			search = endCount + rangeShift * 2;
		}
		search -= 2;
		while(entrySelector != 0) {
			searchRange >>= 1;
			var pos = search + searchRange * 2;
			if(pos == null) {
				pos = 0;
			}
			var ch1 = data.readU8(pos);
			if(unicode_codepoint > (data.readU8(pos + 1) | ch1 << 8)) {
				search += searchRange * 2;
			}
			--entrySelector;
		}
		search += 2;
		var item = search - endCount >> 1 & 65535;
		var pos = endCount + 2 * item;
		if(pos == null) {
			pos = 0;
		}
		var ch1 = data.readU8(pos);
		if(unicode_codepoint > (data.readU8(pos + 1) | ch1 << 8)) {
			throw haxe_Exception.thrown("Error");
		}
		var pos = index_map + 14 + segcount * 2 + 2 + 2 * item;
		if(pos == null) {
			pos = 0;
		}
		var ch1 = data.readU8(pos);
		var start = data.readU8(pos + 1) | ch1 << 8;
		if(unicode_codepoint < start) {
			return 0;
		}
		var pos = index_map + 14 + segcount * 6 + 2 + 2 * item;
		if(pos == null) {
			pos = 0;
		}
		var ch1 = data.readU8(pos);
		var offset = data.readU8(pos + 1) | ch1 << 8;
		if(offset == 0) {
			var pos = index_map + 14 + segcount * 4 + 2 + 2 * item;
			if(pos == null) {
				pos = 0;
			}
			var ch1 = data.readU8(pos);
			var n = data.readU8(pos + 1) | ch1 << 8;
			return unicode_codepoint + ((n & 32768) != 0 ? n - 65536 : n) & 65535;
		}
		var pos = offset + (unicode_codepoint - start) * 2 + index_map + 14 + segcount * 6 + 2 + 2 * item;
		if(pos == null) {
			pos = 0;
		}
		var ch1 = data.readU8(pos);
		return data.readU8(pos + 1) | ch1 << 8;
	} else if(format == 12 || format == 13) {
		var pos = index_map + 12;
		if(pos == null) {
			pos = 0;
		}
		var pos1 = pos;
		if(pos1 == null) {
			pos1 = 0;
		}
		var ch1 = data.readU8(pos1);
		var ch2 = data.readU8(pos1 + 1);
		var ch3 = data.readU8(pos1 + 2);
		var low = 0;
		var high = data.readU8(pos1 + 3) | ch3 << 8 | ch2 << 16 | ch1 << 24;
		while(low < high) {
			var mid = low + (high - low >> 1);
			var pos = index_map + 16 + mid * 12;
			if(pos == null) {
				pos = 0;
			}
			var pos1 = pos;
			if(pos1 == null) {
				pos1 = 0;
			}
			var ch1 = data.readU8(pos1);
			var ch2 = data.readU8(pos1 + 1);
			var ch3 = data.readU8(pos1 + 2);
			var start_char = data.readU8(pos1 + 3) | ch3 << 8 | ch2 << 16 | ch1 << 24;
			var pos2 = index_map + 16 + mid * 12 + 4;
			if(pos2 == null) {
				pos2 = 0;
			}
			var pos3 = pos2;
			if(pos3 == null) {
				pos3 = 0;
			}
			var ch11 = data.readU8(pos3);
			var ch21 = data.readU8(pos3 + 1);
			var ch31 = data.readU8(pos3 + 2);
			var end_char = data.readU8(pos3 + 3) | ch31 << 8 | ch21 << 16 | ch11 << 24;
			if(unicode_codepoint < start_char) {
				high = mid;
			} else if(unicode_codepoint > end_char) {
				low = mid + 1;
			} else {
				var pos4 = index_map + 16 + mid * 12 + 8;
				if(pos4 == null) {
					pos4 = 0;
				}
				var pos5 = pos4;
				if(pos5 == null) {
					pos5 = 0;
				}
				var ch12 = data.readU8(pos5);
				var ch22 = data.readU8(pos5 + 1);
				var ch32 = data.readU8(pos5 + 2);
				var start_glyph = data.readU8(pos5 + 3) | ch32 << 8 | ch22 << 16 | ch12 << 24;
				if(format == 12) {
					return start_glyph + unicode_codepoint - start_char;
				} else {
					return start_glyph;
				}
			}
		}
		return 0;
	}
	throw haxe_Exception.thrown("Error");
};
kha_graphics2_truetype_StbTruetype.stbtt_setvertex = function(v,type,x,y,cx,cy) {
	v.type = type;
	v.x = x;
	v.y = y;
	v.cx = cx;
	v.cy = cy;
};
kha_graphics2_truetype_StbTruetype.stbtt__GetGlyfOffset = function(info,glyph_index) {
	var g1;
	var g2;
	if(!(info.cff.data == null || info.cff.data.get_length() == 0)) {
		throw haxe_Exception.thrown("Error");
	}
	if(glyph_index >= info.numGlyphs) {
		return -1;
	}
	if(info.indexToLocFormat >= 2) {
		return -1;
	}
	if(info.indexToLocFormat == 0) {
		var info1 = info.glyf;
		var p = info.data;
		var pos = info.loca + glyph_index * 2;
		if(pos == null) {
			pos = 0;
		}
		var ch1 = p.readU8(pos);
		g1 = info1 + (p.readU8(pos + 1) | ch1 << 8) * 2;
		var info1 = info.glyf;
		var p = info.data;
		var pos = info.loca + glyph_index * 2 + 2;
		if(pos == null) {
			pos = 0;
		}
		var ch1 = p.readU8(pos);
		g2 = info1 + (p.readU8(pos + 1) | ch1 << 8) * 2;
	} else {
		var info1 = info.glyf;
		var p = info.data;
		var pos = info.loca + glyph_index * 4;
		if(pos == null) {
			pos = 0;
		}
		var pos1 = pos;
		if(pos1 == null) {
			pos1 = 0;
		}
		var ch1 = p.readU8(pos1);
		var ch2 = p.readU8(pos1 + 1);
		var ch3 = p.readU8(pos1 + 2);
		g1 = info1 + (p.readU8(pos1 + 3) | ch3 << 8 | ch2 << 16 | ch1 << 24);
		var info1 = info.glyf;
		var p = info.data;
		var pos = info.loca + glyph_index * 4 + 4;
		if(pos == null) {
			pos = 0;
		}
		var pos1 = pos;
		if(pos1 == null) {
			pos1 = 0;
		}
		var ch1 = p.readU8(pos1);
		var ch2 = p.readU8(pos1 + 1);
		var ch3 = p.readU8(pos1 + 2);
		g2 = info1 + (p.readU8(pos1 + 3) | ch3 << 8 | ch2 << 16 | ch1 << 24);
	}
	if(g1 == g2) {
		return -1;
	} else {
		return g1;
	}
};
kha_graphics2_truetype_StbTruetype.stbtt_GetGlyphBox = function(info,glyph_index,rect) {
	if(info.cff.data != null && info.cff.data.get_length() > 0) {
		kha_graphics2_truetype_StbTruetype.stbtt__GetGlyphInfoT2(info,glyph_index,rect);
	} else {
		var g = kha_graphics2_truetype_StbTruetype.stbtt__GetGlyfOffset(info,glyph_index);
		if(g < 0) {
			return false;
		}
		var p = info.data;
		var pos = g + 2;
		if(pos == null) {
			pos = 0;
		}
		var ch1 = p.readU8(pos);
		var n = p.readU8(pos + 1) | ch1 << 8;
		rect.x0 = (n & 32768) != 0 ? n - 65536 : n;
		var p = info.data;
		var pos = g + 4;
		if(pos == null) {
			pos = 0;
		}
		var ch1 = p.readU8(pos);
		var n = p.readU8(pos + 1) | ch1 << 8;
		rect.y0 = (n & 32768) != 0 ? n - 65536 : n;
		var p = info.data;
		var pos = g + 6;
		if(pos == null) {
			pos = 0;
		}
		var ch1 = p.readU8(pos);
		var n = p.readU8(pos + 1) | ch1 << 8;
		rect.x1 = (n & 32768) != 0 ? n - 65536 : n;
		var p = info.data;
		var pos = g + 8;
		if(pos == null) {
			pos = 0;
		}
		var ch1 = p.readU8(pos);
		var n = p.readU8(pos + 1) | ch1 << 8;
		rect.y1 = (n & 32768) != 0 ? n - 65536 : n;
	}
	return true;
};
kha_graphics2_truetype_StbTruetype.stbtt__close_shape = function(vertices,num_vertices,was_off,start_off,sx,sy,scx,scy,cx,cy) {
	if(start_off) {
		if(was_off) {
			kha_graphics2_truetype_StbTruetype.stbtt_setvertex(vertices[num_vertices++],3,cx + scx >> 1,cy + scy >> 1,cx,cy);
		}
		kha_graphics2_truetype_StbTruetype.stbtt_setvertex(vertices[num_vertices++],3,sx,sy,scx,scy);
	} else if(was_off) {
		kha_graphics2_truetype_StbTruetype.stbtt_setvertex(vertices[num_vertices++],3,sx,sy,cx,cy);
	} else {
		kha_graphics2_truetype_StbTruetype.stbtt_setvertex(vertices[num_vertices++],2,sx,sy,0,0);
	}
	return num_vertices;
};
kha_graphics2_truetype_StbTruetype.copyVertices = function(from,to,offset,count) {
	var _g = 0;
	while(_g < count) {
		var i = _g++;
		to[offset + i] = from[i];
	}
};
kha_graphics2_truetype_StbTruetype.stbtt__GetGlyphShapeTT = function(info,glyph_index) {
	var data = info.data;
	var vertices = null;
	var num_vertices = 0;
	var g = kha_graphics2_truetype_StbTruetype.stbtt__GetGlyfOffset(info,glyph_index);
	if(g < 0) {
		return null;
	}
	var pos = g;
	if(g == null) {
		pos = 0;
	}
	var ch1 = data.readU8(pos);
	var n = data.readU8(pos + 1) | ch1 << 8;
	var numberOfContours = (n & 32768) != 0 ? n - 65536 : n;
	if(numberOfContours > 0) {
		var flags = 0;
		var j = 0;
		var next_move = 0;
		var off = 0;
		var was_off = false;
		var start_off = false;
		var endPtsOfContoursOffset = g + 10;
		var pos = endPtsOfContoursOffset + numberOfContours * 2;
		if(pos == null) {
			pos = 0;
		}
		var ch1 = data.readU8(pos);
		var pointsIndex = endPtsOfContoursOffset + numberOfContours * 2 + 2 + (data.readU8(pos + 1) | ch1 << 8);
		var pos = endPtsOfContoursOffset + numberOfContours * 2 - 2;
		if(pos == null) {
			pos = 0;
		}
		var ch1 = data.readU8(pos);
		var n = 1 + (data.readU8(pos + 1) | ch1 << 8);
		var m = n + 2 * numberOfContours;
		vertices = new Array(m);
		if(vertices == null) {
			return null;
		} else {
			var _g = 0;
			var _g1 = vertices.length;
			while(_g < _g1) vertices[_g++] = new kha_graphics2_truetype_Stbtt_$vertex();
		}
		next_move = 0;
		var flagcount = 0;
		off = m - n;
		var _g = 0;
		while(_g < n) {
			var i = _g++;
			if(flagcount == 0) {
				flags = data.readU8(pointsIndex++);
				if((flags & 8) != 0) {
					flagcount = data.readU8(pointsIndex++);
				}
			} else {
				--flagcount;
			}
			vertices[off + i].type = flags;
		}
		var x = 0;
		var _g = 0;
		while(_g < n) {
			var i = _g++;
			flags = vertices[off + i].type;
			if((flags & 2) != 0) {
				var dx = data.readU8(pointsIndex++);
				x += (flags & 16) != 0 ? dx : -dx;
			} else if((flags & 16) == 0) {
				var value;
				var ch1 = data.readU8(pointsIndex);
				var n1 = data.readU8(pointsIndex + 1) | ch1 << 8;
				if((n1 & 32768) != 0) {
					value = n1 - 65536;
				} else {
					value = n1;
				}
				x += value;
				pointsIndex += 2;
			}
			vertices[off + i].x = x;
		}
		var y = 0;
		var _g = 0;
		while(_g < n) {
			var i = _g++;
			flags = vertices[off + i].type;
			if((flags & 4) != 0) {
				var dy = data.readU8(pointsIndex++);
				y += (flags & 32) != 0 ? dy : -dy;
			} else if((flags & 32) == 0) {
				var value;
				var ch1 = data.readU8(pointsIndex);
				var n1 = data.readU8(pointsIndex + 1) | ch1 << 8;
				if((n1 & 32768) != 0) {
					value = n1 - 65536;
				} else {
					value = n1;
				}
				y += value;
				pointsIndex += 2;
			}
			vertices[off + i].y = y;
		}
		num_vertices = 0;
		var scy = 0;
		var scx = 0;
		var cy = 0;
		var cx = 0;
		var sy = 0;
		var sx = 0;
		var i = 0;
		while(i < n) {
			flags = vertices[off + i].type;
			x = vertices[off + i].x;
			y = vertices[off + i].y;
			if(next_move == i) {
				if(i != 0) {
					num_vertices = kha_graphics2_truetype_StbTruetype.stbtt__close_shape(vertices,num_vertices,was_off,start_off,sx,sy,scx,scy,cx,cy);
				}
				start_off = (flags & 1) == 0;
				if(start_off) {
					scx = x;
					scy = y;
					if((vertices[off + i + 1].type & 1) == 0) {
						sx = x + vertices[off + i + 1].x >> 1;
						sy = y + vertices[off + i + 1].y >> 1;
					} else {
						sx = vertices[off + i + 1].x;
						sy = vertices[off + i + 1].y;
						++i;
					}
				} else {
					sx = x;
					sy = y;
				}
				kha_graphics2_truetype_StbTruetype.stbtt_setvertex(vertices[num_vertices++],1,sx,sy,0,0);
				was_off = false;
				var pos = endPtsOfContoursOffset + j * 2;
				if(pos == null) {
					pos = 0;
				}
				var ch1 = data.readU8(pos);
				next_move = 1 + (data.readU8(pos + 1) | ch1 << 8);
				++j;
			} else if((flags & 1) == 0) {
				if(was_off) {
					kha_graphics2_truetype_StbTruetype.stbtt_setvertex(vertices[num_vertices++],3,cx + x >> 1,cy + y >> 1,cx,cy);
				}
				cx = x;
				cy = y;
				was_off = true;
			} else {
				if(was_off) {
					kha_graphics2_truetype_StbTruetype.stbtt_setvertex(vertices[num_vertices++],3,x,y,cx,cy);
				} else {
					kha_graphics2_truetype_StbTruetype.stbtt_setvertex(vertices[num_vertices++],2,x,y,0,0);
				}
				was_off = false;
			}
			++i;
		}
		num_vertices = kha_graphics2_truetype_StbTruetype.stbtt__close_shape(vertices,num_vertices,was_off,start_off,sx,sy,scx,scy,cx,cy);
	} else if(numberOfContours < 0) {
		var more = 1;
		var compIndex = g + 10;
		num_vertices = 0;
		vertices = null;
		while(more != 0) {
			var comp_num_verts = 0;
			var comp_verts = null;
			var tmp = null;
			var mtx0 = 1;
			var mtx1 = 0;
			var mtx2 = 0;
			var mtx3 = 1;
			var mtx4 = 0;
			var mtx5 = 0;
			var pos = compIndex;
			if(pos == null) {
				pos = 0;
			}
			var ch1 = data.readU8(pos);
			var n = data.readU8(pos + 1) | ch1 << 8;
			var flags = (n & 32768) != 0 ? n - 65536 : n;
			var pos1 = compIndex += 2;
			if(pos1 == null) {
				pos1 = 0;
			}
			var ch11 = data.readU8(pos1);
			var n1 = data.readU8(pos1 + 1) | ch11 << 8;
			compIndex += 2;
			if((flags & 2) != 0) {
				if((flags & 1) != 0) {
					var pos2 = compIndex;
					if(pos2 == null) {
						pos2 = 0;
					}
					var ch12 = data.readU8(pos2);
					var n2 = data.readU8(pos2 + 1) | ch12 << 8;
					mtx4 = (n2 & 32768) != 0 ? n2 - 65536 : n2;
					var pos3 = compIndex += 2;
					if(pos3 == null) {
						pos3 = 0;
					}
					var ch13 = data.readU8(pos3);
					var n3 = data.readU8(pos3 + 1) | ch13 << 8;
					mtx5 = (n3 & 32768) != 0 ? n3 - 65536 : n3;
					compIndex += 2;
				} else {
					var pos4 = compIndex;
					if(pos4 == null) {
						pos4 = 0;
					}
					var n4 = data.readU8(pos4);
					mtx4 = n4 >= 128 ? n4 - 256 : n4;
					var pos5 = ++compIndex;
					if(pos5 == null) {
						pos5 = 0;
					}
					var n5 = data.readU8(pos5);
					mtx5 = n5 >= 128 ? n5 - 256 : n5;
					++compIndex;
				}
			} else {
				throw haxe_Exception.thrown("Error");
			}
			if((flags & 8) != 0) {
				var pos6 = compIndex;
				if(pos6 == null) {
					pos6 = 0;
				}
				var ch14 = data.readU8(pos6);
				var n6 = data.readU8(pos6 + 1) | ch14 << 8;
				mtx3 = ((n6 & 32768) != 0 ? n6 - 65536 : n6) / 16384.0;
				mtx0 = mtx3;
				compIndex += 2;
				mtx2 = 0;
				mtx1 = mtx2;
			} else if((flags & 64) != 0) {
				var pos7 = compIndex;
				if(pos7 == null) {
					pos7 = 0;
				}
				var ch15 = data.readU8(pos7);
				var n7 = data.readU8(pos7 + 1) | ch15 << 8;
				mtx0 = ((n7 & 32768) != 0 ? n7 - 65536 : n7) / 16384.0;
				compIndex += 2;
				mtx2 = 0;
				mtx1 = mtx2;
				var pos8 = compIndex;
				if(pos8 == null) {
					pos8 = 0;
				}
				var ch16 = data.readU8(pos8);
				var n8 = data.readU8(pos8 + 1) | ch16 << 8;
				mtx3 = ((n8 & 32768) != 0 ? n8 - 65536 : n8) / 16384.0;
				compIndex += 2;
			} else if((flags & 128) != 0) {
				var pos9 = compIndex;
				if(pos9 == null) {
					pos9 = 0;
				}
				var ch17 = data.readU8(pos9);
				var n9 = data.readU8(pos9 + 1) | ch17 << 8;
				mtx0 = ((n9 & 32768) != 0 ? n9 - 65536 : n9) / 16384.0;
				var pos10 = compIndex += 2;
				if(pos10 == null) {
					pos10 = 0;
				}
				var ch18 = data.readU8(pos10);
				var n10 = data.readU8(pos10 + 1) | ch18 << 8;
				mtx1 = ((n10 & 32768) != 0 ? n10 - 65536 : n10) / 16384.0;
				var pos11 = compIndex += 2;
				if(pos11 == null) {
					pos11 = 0;
				}
				var ch19 = data.readU8(pos11);
				var n11 = data.readU8(pos11 + 1) | ch19 << 8;
				mtx2 = ((n11 & 32768) != 0 ? n11 - 65536 : n11) / 16384.0;
				var pos12 = compIndex += 2;
				if(pos12 == null) {
					pos12 = 0;
				}
				var ch110 = data.readU8(pos12);
				var n12 = data.readU8(pos12 + 1) | ch110 << 8;
				mtx3 = ((n12 & 32768) != 0 ? n12 - 65536 : n12) / 16384.0;
				compIndex += 2;
			}
			var m = Math.sqrt(mtx0 * mtx0 + mtx1 * mtx1);
			var n13 = Math.sqrt(mtx2 * mtx2 + mtx3 * mtx3);
			comp_verts = kha_graphics2_truetype_StbTruetype.stbtt_GetGlyphShape(info,(n1 & 32768) != 0 ? n1 - 65536 : n1);
			comp_num_verts = comp_verts == null ? 0 : comp_verts.length;
			if(comp_num_verts > 0) {
				var _g = 0;
				var _g1 = comp_num_verts;
				while(_g < _g1) {
					var v = comp_verts[_g++];
					var x = v.x;
					var y = v.y;
					v.x = m * (mtx0 * x + mtx2 * y + mtx4) | 0;
					v.y = n13 * (mtx1 * x + mtx3 * y + mtx5) | 0;
					x = v.cx;
					y = v.cy;
					v.cx = m * (mtx0 * x + mtx2 * y + mtx4) | 0;
					v.cy = n13 * (mtx1 * x + mtx3 * y + mtx5) | 0;
				}
				tmp = new Array(num_vertices + comp_num_verts);
				if(tmp == null) {
					return null;
				}
				if(num_vertices > 0) {
					kha_graphics2_truetype_StbTruetype.copyVertices(vertices,tmp,0,num_vertices);
				}
				kha_graphics2_truetype_StbTruetype.copyVertices(comp_verts,tmp,num_vertices,comp_num_verts);
				vertices = tmp;
				num_vertices += comp_num_verts;
			}
			more = flags & 32;
		}
	}
	if(vertices == null) {
		return null;
	}
	if(vertices.length < num_vertices) {
		throw haxe_Exception.thrown("Error");
	}
	if(num_vertices < vertices.length) {
		var tmp = new Array(num_vertices);
		kha_graphics2_truetype_StbTruetype.copyVertices(vertices,tmp,0,num_vertices);
		return tmp;
	} else {
		return vertices;
	}
};
kha_graphics2_truetype_StbTruetype.stbtt__run_charstring = function(info,glyph_index,c) {
	var in_header = true;
	var maskbits = 0;
	var subr_stack_height = 0;
	var sp = 0;
	var v;
	var i;
	var b0;
	var has_subrs = false;
	var clear_stack;
	var _g = [];
	_g.push(0);
	_g.push(0);
	_g.push(0);
	_g.push(0);
	_g.push(0);
	_g.push(0);
	_g.push(0);
	_g.push(0);
	_g.push(0);
	_g.push(0);
	_g.push(0);
	_g.push(0);
	_g.push(0);
	_g.push(0);
	_g.push(0);
	_g.push(0);
	_g.push(0);
	_g.push(0);
	_g.push(0);
	_g.push(0);
	_g.push(0);
	_g.push(0);
	_g.push(0);
	_g.push(0);
	_g.push(0);
	_g.push(0);
	_g.push(0);
	_g.push(0);
	_g.push(0);
	_g.push(0);
	_g.push(0);
	_g.push(0);
	_g.push(0);
	_g.push(0);
	_g.push(0);
	_g.push(0);
	_g.push(0);
	_g.push(0);
	_g.push(0);
	_g.push(0);
	_g.push(0);
	_g.push(0);
	_g.push(0);
	_g.push(0);
	_g.push(0);
	_g.push(0);
	_g.push(0);
	_g.push(0);
	var _g1 = [];
	_g1.push(new kha_graphics2_truetype_Stbtt_$_$buf());
	_g1.push(new kha_graphics2_truetype_Stbtt_$_$buf());
	_g1.push(new kha_graphics2_truetype_Stbtt_$_$buf());
	_g1.push(new kha_graphics2_truetype_Stbtt_$_$buf());
	_g1.push(new kha_graphics2_truetype_Stbtt_$_$buf());
	_g1.push(new kha_graphics2_truetype_Stbtt_$_$buf());
	_g1.push(new kha_graphics2_truetype_Stbtt_$_$buf());
	_g1.push(new kha_graphics2_truetype_Stbtt_$_$buf());
	_g1.push(new kha_graphics2_truetype_Stbtt_$_$buf());
	_g1.push(new kha_graphics2_truetype_Stbtt_$_$buf());
	var subrs = info.subrs;
	var b;
	var f;
	var b1 = info.charstrings;
	if(0 > b1.data.get_length()) {
		throw haxe_Exception.thrown("Error");
	}
	b1.cursor = 0 > b1.data.get_length() ? b1.data.get_length() : 0;
	var v1 = 0;
	var _g2 = 0;
	while(_g2 < 2) {
		++_g2;
		var v2;
		if(b1.cursor >= b1.data.get_length()) {
			v2 = 0;
		} else {
			var pos = b1.cursor++;
			if(pos == null) {
				pos = 0;
			}
			v2 = b1.data.readU8(pos);
		}
		v1 = v1 << 8 | v2;
	}
	var count = v1;
	var offsize;
	if(b1.cursor >= b1.data.get_length()) {
		offsize = 0;
	} else {
		var pos = b1.cursor++;
		if(pos == null) {
			pos = 0;
		}
		offsize = b1.data.readU8(pos);
	}
	if(!(glyph_index >= 0 && glyph_index < count)) {
		throw haxe_Exception.thrown("Error");
	}
	if(!(offsize >= 1 && offsize <= 4)) {
		throw haxe_Exception.thrown("Error");
	}
	var o = b1.cursor + glyph_index * offsize;
	if(o > b1.data.get_length() || o < 0) {
		throw haxe_Exception.thrown("Error");
	}
	b1.cursor = o > b1.data.get_length() || o < 0 ? b1.data.get_length() : o;
	var v1 = 0;
	if(!(offsize >= 1 && offsize <= 4)) {
		throw haxe_Exception.thrown("Error");
	}
	var _g2 = 0;
	var _g3 = offsize;
	while(_g2 < _g3) {
		++_g2;
		var v2;
		if(b1.cursor >= b1.data.get_length()) {
			v2 = 0;
		} else {
			var pos = b1.cursor++;
			if(pos == null) {
				pos = 0;
			}
			v2 = b1.data.readU8(pos);
		}
		v1 = v1 << 8 | v2;
	}
	var start = v1;
	var v1 = 0;
	if(!(offsize >= 1 && offsize <= 4)) {
		throw haxe_Exception.thrown("Error");
	}
	var _g2 = 0;
	var _g3 = offsize;
	while(_g2 < _g3) {
		++_g2;
		var v2;
		if(b1.cursor >= b1.data.get_length()) {
			v2 = 0;
		} else {
			var pos = b1.cursor++;
			if(pos == null) {
				pos = 0;
			}
			v2 = b1.data.readU8(pos);
		}
		v1 = v1 << 8 | v2;
	}
	var o = 2 + (count + 1) * offsize + start;
	var s = v1 - start;
	var r = new kha_graphics2_truetype_Stbtt_$_$buf();
	r.data = null;
	r.cursor = 0;
	if(o < 0 || s < 0 || o > b1.data.get_length() || s > b1.data.get_length() - o) {
		b = r;
	} else {
		r.data = b1.data.sub(o,s);
		b = r;
	}
	while(b.cursor < b.data.get_length()) {
		i = 0;
		clear_stack = true;
		if(b.cursor >= b.data.get_length()) {
			b0 = 0;
		} else {
			var pos = b.cursor++;
			if(pos == null) {
				pos = 0;
			}
			b0 = b.data.readU8(pos);
		}
		switch(b0) {
		case 1:case 3:case 18:case 23:
			maskbits += sp / 2 | 0;
			break;
		case 4:
			in_header = false;
			if(sp < 1) {
				return false;
			}
			if(c.first_x != c.x || c.first_y != c.y) {
				var x = c.first_x | 0;
				var y = c.first_y | 0;
				if(c.bounds) {
					if(x > c.max_x || !c.started) {
						c.max_x = x;
					}
					if(y > c.max_y || !c.started) {
						c.max_y = y;
					}
					if(x < c.min_x || !c.started) {
						c.min_x = x;
					}
					if(y < c.min_y || !c.started) {
						c.min_y = y;
					}
					c.started = true;
				} else {
					kha_graphics2_truetype_StbTruetype.stbtt_setvertex(c.pvertices[c.num_vertices],2,x,y,0,0);
					c.pvertices[c.num_vertices].cx1 = js_Boot.__cast(0 , Int);
					c.pvertices[c.num_vertices].cy1 = js_Boot.__cast(0 , Int);
				}
				c.num_vertices++;
			}
			c.first_x = c.x = c.x;
			c.first_y = c.y = c.y + _g[sp - 1];
			var x1 = c.x | 0;
			var y1 = c.y | 0;
			if(c.bounds) {
				if(x1 > c.max_x || !c.started) {
					c.max_x = x1;
				}
				if(y1 > c.max_y || !c.started) {
					c.max_y = y1;
				}
				if(x1 < c.min_x || !c.started) {
					c.min_x = x1;
				}
				if(y1 < c.min_y || !c.started) {
					c.min_y = y1;
				}
				c.started = true;
			} else {
				kha_graphics2_truetype_StbTruetype.stbtt_setvertex(c.pvertices[c.num_vertices],1,x1,y1,0,0);
				c.pvertices[c.num_vertices].cx1 = js_Boot.__cast(0 , Int);
				c.pvertices[c.num_vertices].cy1 = js_Boot.__cast(0 , Int);
			}
			c.num_vertices++;
			break;
		case 5:
			if(sp < 2) {
				return false;
			}
			while(i + 1 < sp) {
				c.x += _g[i];
				c.y += _g[i + 1];
				var x2 = c.x | 0;
				var y2 = c.y | 0;
				if(c.bounds) {
					if(x2 > c.max_x || !c.started) {
						c.max_x = x2;
					}
					if(y2 > c.max_y || !c.started) {
						c.max_y = y2;
					}
					if(x2 < c.min_x || !c.started) {
						c.min_x = x2;
					}
					if(y2 < c.min_y || !c.started) {
						c.min_y = y2;
					}
					c.started = true;
				} else {
					kha_graphics2_truetype_StbTruetype.stbtt_setvertex(c.pvertices[c.num_vertices],2,x2,y2,0,0);
					c.pvertices[c.num_vertices].cx1 = js_Boot.__cast(0 , Int);
					c.pvertices[c.num_vertices].cy1 = js_Boot.__cast(0 , Int);
				}
				c.num_vertices++;
				i += 2;
			}
			break;
		case 6:
			if(sp < 1) {
				return false;
			}
			while(i < sp) {
				c.x += _g[i];
				c.y += 0;
				var x3 = c.x | 0;
				var y3 = c.y | 0;
				if(c.bounds) {
					if(x3 > c.max_x || !c.started) {
						c.max_x = x3;
					}
					if(y3 > c.max_y || !c.started) {
						c.max_y = y3;
					}
					if(x3 < c.min_x || !c.started) {
						c.min_x = x3;
					}
					if(y3 < c.min_y || !c.started) {
						c.min_y = y3;
					}
					c.started = true;
				} else {
					kha_graphics2_truetype_StbTruetype.stbtt_setvertex(c.pvertices[c.num_vertices],2,x3,y3,0,0);
					c.pvertices[c.num_vertices].cx1 = js_Boot.__cast(0 , Int);
					c.pvertices[c.num_vertices].cy1 = js_Boot.__cast(0 , Int);
				}
				c.num_vertices++;
				++i;
				if(i >= sp) {
					break;
				}
				c.x += 0;
				c.y += _g[i];
				var x4 = c.x | 0;
				var y4 = c.y | 0;
				if(c.bounds) {
					if(x4 > c.max_x || !c.started) {
						c.max_x = x4;
					}
					if(y4 > c.max_y || !c.started) {
						c.max_y = y4;
					}
					if(x4 < c.min_x || !c.started) {
						c.min_x = x4;
					}
					if(y4 < c.min_y || !c.started) {
						c.min_y = y4;
					}
					c.started = true;
				} else {
					kha_graphics2_truetype_StbTruetype.stbtt_setvertex(c.pvertices[c.num_vertices],2,x4,y4,0,0);
					c.pvertices[c.num_vertices].cx1 = js_Boot.__cast(0 , Int);
					c.pvertices[c.num_vertices].cy1 = js_Boot.__cast(0 , Int);
				}
				c.num_vertices++;
				++i;
			}
			break;
		case 7:
			if(sp < 1) {
				return false;
			}
			while(i < sp) {
				c.x += 0;
				c.y += _g[i];
				var x5 = c.x | 0;
				var y5 = c.y | 0;
				if(c.bounds) {
					if(x5 > c.max_x || !c.started) {
						c.max_x = x5;
					}
					if(y5 > c.max_y || !c.started) {
						c.max_y = y5;
					}
					if(x5 < c.min_x || !c.started) {
						c.min_x = x5;
					}
					if(y5 < c.min_y || !c.started) {
						c.min_y = y5;
					}
					c.started = true;
				} else {
					kha_graphics2_truetype_StbTruetype.stbtt_setvertex(c.pvertices[c.num_vertices],2,x5,y5,0,0);
					c.pvertices[c.num_vertices].cx1 = js_Boot.__cast(0 , Int);
					c.pvertices[c.num_vertices].cy1 = js_Boot.__cast(0 , Int);
				}
				c.num_vertices++;
				++i;
				if(i >= sp) {
					break;
				}
				c.x += _g[i];
				c.y += 0;
				var x6 = c.x | 0;
				var y6 = c.y | 0;
				if(c.bounds) {
					if(x6 > c.max_x || !c.started) {
						c.max_x = x6;
					}
					if(y6 > c.max_y || !c.started) {
						c.max_y = y6;
					}
					if(x6 < c.min_x || !c.started) {
						c.min_x = x6;
					}
					if(y6 < c.min_y || !c.started) {
						c.min_y = y6;
					}
					c.started = true;
				} else {
					kha_graphics2_truetype_StbTruetype.stbtt_setvertex(c.pvertices[c.num_vertices],2,x6,y6,0,0);
					c.pvertices[c.num_vertices].cx1 = js_Boot.__cast(0 , Int);
					c.pvertices[c.num_vertices].cy1 = js_Boot.__cast(0 , Int);
				}
				c.num_vertices++;
				++i;
			}
			break;
		case 8:
			if(sp < 6) {
				return false;
			}
			while(i + 5 < sp) {
				var cx1 = c.x + _g[i];
				var cy1 = c.y + _g[i + 1];
				var cx2 = cx1 + _g[i + 2];
				var cy2 = cy1 + _g[i + 3];
				c.x = cx2 + _g[i + 4];
				c.y = cy2 + _g[i + 5];
				var x7 = c.x | 0;
				var y7 = c.y | 0;
				var cx = cx1 | 0;
				var cy = cy1 | 0;
				var cx11 = cx2 | 0;
				var cy11 = cy2 | 0;
				if(c.bounds) {
					if(x7 > c.max_x || !c.started) {
						c.max_x = x7;
					}
					if(y7 > c.max_y || !c.started) {
						c.max_y = y7;
					}
					if(x7 < c.min_x || !c.started) {
						c.min_x = x7;
					}
					if(y7 < c.min_y || !c.started) {
						c.min_y = y7;
					}
					c.started = true;
					if(cx > c.max_x || !c.started) {
						c.max_x = cx;
					}
					if(cy > c.max_y || !c.started) {
						c.max_y = cy;
					}
					if(cx < c.min_x || !c.started) {
						c.min_x = cx;
					}
					if(cy < c.min_y || !c.started) {
						c.min_y = cy;
					}
					c.started = true;
					if(cx11 > c.max_x || !c.started) {
						c.max_x = cx11;
					}
					if(cy11 > c.max_y || !c.started) {
						c.max_y = cy11;
					}
					if(cx11 < c.min_x || !c.started) {
						c.min_x = cx11;
					}
					if(cy11 < c.min_y || !c.started) {
						c.min_y = cy11;
					}
					c.started = true;
				} else {
					kha_graphics2_truetype_StbTruetype.stbtt_setvertex(c.pvertices[c.num_vertices],4,x7,y7,cx,cy);
					c.pvertices[c.num_vertices].cx1 = js_Boot.__cast(cx11 , Int);
					c.pvertices[c.num_vertices].cy1 = js_Boot.__cast(cy11 , Int);
				}
				c.num_vertices++;
				i += 6;
			}
			break;
		case 11:
			if(subr_stack_height <= 0) {
				return false;
			}
			b = _g1[--subr_stack_height];
			clear_stack = false;
			break;
		case 12:
			var dx1;
			var dx2;
			var dx3;
			var dx4;
			var dx5;
			var dx6;
			var dy1;
			var dy2;
			var dy3;
			var dy4;
			var dy5;
			var dy6;
			var dx;
			var dy;
			var b1;
			if(b.cursor >= b.data.get_length()) {
				b1 = 0;
			} else {
				var pos1 = b.cursor++;
				if(pos1 == null) {
					pos1 = 0;
				}
				b1 = b.data.readU8(pos1);
			}
			switch(b1) {
			case 34:
				if(sp < 7) {
					return false;
				}
				dx1 = _g[0];
				dx2 = _g[1];
				dy2 = _g[2];
				dx3 = _g[3];
				dx4 = _g[4];
				dx5 = _g[5];
				dx6 = _g[6];
				var cx12 = c.x + dx1;
				var cy12 = c.y;
				var cx21 = cx12 + dx2;
				var cy21 = cy12 + dy2;
				c.x = cx21 + dx3;
				c.y = cy21;
				var x8 = c.x | 0;
				var y8 = c.y | 0;
				var cx3 = cx12 | 0;
				var cy3 = cy12 | 0;
				var cx13 = cx21 | 0;
				var cy13 = cy21 | 0;
				if(c.bounds) {
					if(x8 > c.max_x || !c.started) {
						c.max_x = x8;
					}
					if(y8 > c.max_y || !c.started) {
						c.max_y = y8;
					}
					if(x8 < c.min_x || !c.started) {
						c.min_x = x8;
					}
					if(y8 < c.min_y || !c.started) {
						c.min_y = y8;
					}
					c.started = true;
					if(cx3 > c.max_x || !c.started) {
						c.max_x = cx3;
					}
					if(cy3 > c.max_y || !c.started) {
						c.max_y = cy3;
					}
					if(cx3 < c.min_x || !c.started) {
						c.min_x = cx3;
					}
					if(cy3 < c.min_y || !c.started) {
						c.min_y = cy3;
					}
					c.started = true;
					if(cx13 > c.max_x || !c.started) {
						c.max_x = cx13;
					}
					if(cy13 > c.max_y || !c.started) {
						c.max_y = cy13;
					}
					if(cx13 < c.min_x || !c.started) {
						c.min_x = cx13;
					}
					if(cy13 < c.min_y || !c.started) {
						c.min_y = cy13;
					}
					c.started = true;
				} else {
					kha_graphics2_truetype_StbTruetype.stbtt_setvertex(c.pvertices[c.num_vertices],4,x8,y8,cx3,cy3);
					c.pvertices[c.num_vertices].cx1 = js_Boot.__cast(cx13 , Int);
					c.pvertices[c.num_vertices].cy1 = js_Boot.__cast(cy13 , Int);
				}
				c.num_vertices++;
				var cx14 = c.x + dx4;
				var cy14 = c.y;
				var cx22 = cx14 + dx5;
				var cy22 = cy14 + -dy2;
				c.x = cx22 + dx6;
				c.y = cy22;
				var x9 = c.x | 0;
				var y9 = c.y | 0;
				var cx4 = cx14 | 0;
				var cy4 = cy14 | 0;
				var cx15 = cx22 | 0;
				var cy15 = cy22 | 0;
				if(c.bounds) {
					if(x9 > c.max_x || !c.started) {
						c.max_x = x9;
					}
					if(y9 > c.max_y || !c.started) {
						c.max_y = y9;
					}
					if(x9 < c.min_x || !c.started) {
						c.min_x = x9;
					}
					if(y9 < c.min_y || !c.started) {
						c.min_y = y9;
					}
					c.started = true;
					if(cx4 > c.max_x || !c.started) {
						c.max_x = cx4;
					}
					if(cy4 > c.max_y || !c.started) {
						c.max_y = cy4;
					}
					if(cx4 < c.min_x || !c.started) {
						c.min_x = cx4;
					}
					if(cy4 < c.min_y || !c.started) {
						c.min_y = cy4;
					}
					c.started = true;
					if(cx15 > c.max_x || !c.started) {
						c.max_x = cx15;
					}
					if(cy15 > c.max_y || !c.started) {
						c.max_y = cy15;
					}
					if(cx15 < c.min_x || !c.started) {
						c.min_x = cx15;
					}
					if(cy15 < c.min_y || !c.started) {
						c.min_y = cy15;
					}
					c.started = true;
				} else {
					kha_graphics2_truetype_StbTruetype.stbtt_setvertex(c.pvertices[c.num_vertices],4,x9,y9,cx4,cy4);
					c.pvertices[c.num_vertices].cx1 = js_Boot.__cast(cx15 , Int);
					c.pvertices[c.num_vertices].cy1 = js_Boot.__cast(cy15 , Int);
				}
				c.num_vertices++;
				break;
			case 35:
				if(sp < 13) {
					return false;
				}
				dx1 = _g[0];
				dy1 = _g[1];
				dx2 = _g[2];
				dy2 = _g[3];
				dx3 = _g[4];
				dy3 = _g[5];
				dx4 = _g[6];
				dy4 = _g[7];
				dx5 = _g[8];
				dy5 = _g[9];
				dx6 = _g[10];
				dy6 = _g[11];
				var cx16 = c.x + dx1;
				var cy16 = c.y + dy1;
				var cx23 = cx16 + dx2;
				var cy23 = cy16 + dy2;
				c.x = cx23 + dx3;
				c.y = cy23 + dy3;
				var x10 = c.x | 0;
				var y10 = c.y | 0;
				var cx5 = cx16 | 0;
				var cy5 = cy16 | 0;
				var cx17 = cx23 | 0;
				var cy17 = cy23 | 0;
				if(c.bounds) {
					if(x10 > c.max_x || !c.started) {
						c.max_x = x10;
					}
					if(y10 > c.max_y || !c.started) {
						c.max_y = y10;
					}
					if(x10 < c.min_x || !c.started) {
						c.min_x = x10;
					}
					if(y10 < c.min_y || !c.started) {
						c.min_y = y10;
					}
					c.started = true;
					if(cx5 > c.max_x || !c.started) {
						c.max_x = cx5;
					}
					if(cy5 > c.max_y || !c.started) {
						c.max_y = cy5;
					}
					if(cx5 < c.min_x || !c.started) {
						c.min_x = cx5;
					}
					if(cy5 < c.min_y || !c.started) {
						c.min_y = cy5;
					}
					c.started = true;
					if(cx17 > c.max_x || !c.started) {
						c.max_x = cx17;
					}
					if(cy17 > c.max_y || !c.started) {
						c.max_y = cy17;
					}
					if(cx17 < c.min_x || !c.started) {
						c.min_x = cx17;
					}
					if(cy17 < c.min_y || !c.started) {
						c.min_y = cy17;
					}
					c.started = true;
				} else {
					kha_graphics2_truetype_StbTruetype.stbtt_setvertex(c.pvertices[c.num_vertices],4,x10,y10,cx5,cy5);
					c.pvertices[c.num_vertices].cx1 = js_Boot.__cast(cx17 , Int);
					c.pvertices[c.num_vertices].cy1 = js_Boot.__cast(cy17 , Int);
				}
				c.num_vertices++;
				var cx18 = c.x + dx4;
				var cy18 = c.y + dy4;
				var cx24 = cx18 + dx5;
				var cy24 = cy18 + dy5;
				c.x = cx24 + dx6;
				c.y = cy24 + dy6;
				var x11 = c.x | 0;
				var y11 = c.y | 0;
				var cx6 = cx18 | 0;
				var cy6 = cy18 | 0;
				var cx19 = cx24 | 0;
				var cy19 = cy24 | 0;
				if(c.bounds) {
					if(x11 > c.max_x || !c.started) {
						c.max_x = x11;
					}
					if(y11 > c.max_y || !c.started) {
						c.max_y = y11;
					}
					if(x11 < c.min_x || !c.started) {
						c.min_x = x11;
					}
					if(y11 < c.min_y || !c.started) {
						c.min_y = y11;
					}
					c.started = true;
					if(cx6 > c.max_x || !c.started) {
						c.max_x = cx6;
					}
					if(cy6 > c.max_y || !c.started) {
						c.max_y = cy6;
					}
					if(cx6 < c.min_x || !c.started) {
						c.min_x = cx6;
					}
					if(cy6 < c.min_y || !c.started) {
						c.min_y = cy6;
					}
					c.started = true;
					if(cx19 > c.max_x || !c.started) {
						c.max_x = cx19;
					}
					if(cy19 > c.max_y || !c.started) {
						c.max_y = cy19;
					}
					if(cx19 < c.min_x || !c.started) {
						c.min_x = cx19;
					}
					if(cy19 < c.min_y || !c.started) {
						c.min_y = cy19;
					}
					c.started = true;
				} else {
					kha_graphics2_truetype_StbTruetype.stbtt_setvertex(c.pvertices[c.num_vertices],4,x11,y11,cx6,cy6);
					c.pvertices[c.num_vertices].cx1 = js_Boot.__cast(cx19 , Int);
					c.pvertices[c.num_vertices].cy1 = js_Boot.__cast(cy19 , Int);
				}
				c.num_vertices++;
				break;
			case 36:
				if(sp < 9) {
					return false;
				}
				dx1 = _g[0];
				dy1 = _g[1];
				dx2 = _g[2];
				dy2 = _g[3];
				dx3 = _g[4];
				dx4 = _g[5];
				dx5 = _g[6];
				dy5 = _g[7];
				dx6 = _g[8];
				var cx110 = c.x + dx1;
				var cy110 = c.y + dy1;
				var cx25 = cx110 + dx2;
				var cy25 = cy110 + dy2;
				c.x = cx25 + dx3;
				c.y = cy25;
				var x12 = c.x | 0;
				var y12 = c.y | 0;
				var cx7 = cx110 | 0;
				var cy7 = cy110 | 0;
				var cx111 = cx25 | 0;
				var cy111 = cy25 | 0;
				if(c.bounds) {
					if(x12 > c.max_x || !c.started) {
						c.max_x = x12;
					}
					if(y12 > c.max_y || !c.started) {
						c.max_y = y12;
					}
					if(x12 < c.min_x || !c.started) {
						c.min_x = x12;
					}
					if(y12 < c.min_y || !c.started) {
						c.min_y = y12;
					}
					c.started = true;
					if(cx7 > c.max_x || !c.started) {
						c.max_x = cx7;
					}
					if(cy7 > c.max_y || !c.started) {
						c.max_y = cy7;
					}
					if(cx7 < c.min_x || !c.started) {
						c.min_x = cx7;
					}
					if(cy7 < c.min_y || !c.started) {
						c.min_y = cy7;
					}
					c.started = true;
					if(cx111 > c.max_x || !c.started) {
						c.max_x = cx111;
					}
					if(cy111 > c.max_y || !c.started) {
						c.max_y = cy111;
					}
					if(cx111 < c.min_x || !c.started) {
						c.min_x = cx111;
					}
					if(cy111 < c.min_y || !c.started) {
						c.min_y = cy111;
					}
					c.started = true;
				} else {
					kha_graphics2_truetype_StbTruetype.stbtt_setvertex(c.pvertices[c.num_vertices],4,x12,y12,cx7,cy7);
					c.pvertices[c.num_vertices].cx1 = js_Boot.__cast(cx111 , Int);
					c.pvertices[c.num_vertices].cy1 = js_Boot.__cast(cy111 , Int);
				}
				c.num_vertices++;
				var cx112 = c.x + dx4;
				var cy112 = c.y;
				var cx26 = cx112 + dx5;
				var cy26 = cy112 + dy5;
				c.x = cx26 + dx6;
				c.y = cy26 + -(dy1 + dy2 + dy5);
				var x13 = c.x | 0;
				var y13 = c.y | 0;
				var cx8 = cx112 | 0;
				var cy8 = cy112 | 0;
				var cx113 = cx26 | 0;
				var cy113 = cy26 | 0;
				if(c.bounds) {
					if(x13 > c.max_x || !c.started) {
						c.max_x = x13;
					}
					if(y13 > c.max_y || !c.started) {
						c.max_y = y13;
					}
					if(x13 < c.min_x || !c.started) {
						c.min_x = x13;
					}
					if(y13 < c.min_y || !c.started) {
						c.min_y = y13;
					}
					c.started = true;
					if(cx8 > c.max_x || !c.started) {
						c.max_x = cx8;
					}
					if(cy8 > c.max_y || !c.started) {
						c.max_y = cy8;
					}
					if(cx8 < c.min_x || !c.started) {
						c.min_x = cx8;
					}
					if(cy8 < c.min_y || !c.started) {
						c.min_y = cy8;
					}
					c.started = true;
					if(cx113 > c.max_x || !c.started) {
						c.max_x = cx113;
					}
					if(cy113 > c.max_y || !c.started) {
						c.max_y = cy113;
					}
					if(cx113 < c.min_x || !c.started) {
						c.min_x = cx113;
					}
					if(cy113 < c.min_y || !c.started) {
						c.min_y = cy113;
					}
					c.started = true;
				} else {
					kha_graphics2_truetype_StbTruetype.stbtt_setvertex(c.pvertices[c.num_vertices],4,x13,y13,cx8,cy8);
					c.pvertices[c.num_vertices].cx1 = js_Boot.__cast(cx113 , Int);
					c.pvertices[c.num_vertices].cy1 = js_Boot.__cast(cy113 , Int);
				}
				c.num_vertices++;
				break;
			case 37:
				if(sp < 11) {
					return false;
				}
				dx1 = _g[0];
				dy1 = _g[1];
				dx2 = _g[2];
				dy2 = _g[3];
				dx3 = _g[4];
				dy3 = _g[5];
				dx4 = _g[6];
				dy4 = _g[7];
				dx5 = _g[8];
				dy5 = _g[9];
				dy6 = _g[10];
				dx6 = dy6;
				dx = dx1 + dx2 + dx3 + dx4 + dx5;
				dy = dy1 + dy2 + dy3 + dy4 + dy5;
				if(Math.abs(dx) > Math.abs(dy)) {
					dy6 = -dy;
				} else {
					dx6 = -dx;
				}
				var cx114 = c.x + dx1;
				var cy114 = c.y + dy1;
				var cx27 = cx114 + dx2;
				var cy27 = cy114 + dy2;
				c.x = cx27 + dx3;
				c.y = cy27 + dy3;
				var x14 = c.x | 0;
				var y14 = c.y | 0;
				var cx9 = cx114 | 0;
				var cy9 = cy114 | 0;
				var cx115 = cx27 | 0;
				var cy115 = cy27 | 0;
				if(c.bounds) {
					if(x14 > c.max_x || !c.started) {
						c.max_x = x14;
					}
					if(y14 > c.max_y || !c.started) {
						c.max_y = y14;
					}
					if(x14 < c.min_x || !c.started) {
						c.min_x = x14;
					}
					if(y14 < c.min_y || !c.started) {
						c.min_y = y14;
					}
					c.started = true;
					if(cx9 > c.max_x || !c.started) {
						c.max_x = cx9;
					}
					if(cy9 > c.max_y || !c.started) {
						c.max_y = cy9;
					}
					if(cx9 < c.min_x || !c.started) {
						c.min_x = cx9;
					}
					if(cy9 < c.min_y || !c.started) {
						c.min_y = cy9;
					}
					c.started = true;
					if(cx115 > c.max_x || !c.started) {
						c.max_x = cx115;
					}
					if(cy115 > c.max_y || !c.started) {
						c.max_y = cy115;
					}
					if(cx115 < c.min_x || !c.started) {
						c.min_x = cx115;
					}
					if(cy115 < c.min_y || !c.started) {
						c.min_y = cy115;
					}
					c.started = true;
				} else {
					kha_graphics2_truetype_StbTruetype.stbtt_setvertex(c.pvertices[c.num_vertices],4,x14,y14,cx9,cy9);
					c.pvertices[c.num_vertices].cx1 = js_Boot.__cast(cx115 , Int);
					c.pvertices[c.num_vertices].cy1 = js_Boot.__cast(cy115 , Int);
				}
				c.num_vertices++;
				var cx116 = c.x + dx4;
				var cy116 = c.y + dy4;
				var cx28 = cx116 + dx5;
				var cy28 = cy116 + dy5;
				c.x = cx28 + dx6;
				c.y = cy28 + dy6;
				var x15 = c.x | 0;
				var y15 = c.y | 0;
				var cx10 = cx116 | 0;
				var cy10 = cy116 | 0;
				var cx117 = cx28 | 0;
				var cy117 = cy28 | 0;
				if(c.bounds) {
					if(x15 > c.max_x || !c.started) {
						c.max_x = x15;
					}
					if(y15 > c.max_y || !c.started) {
						c.max_y = y15;
					}
					if(x15 < c.min_x || !c.started) {
						c.min_x = x15;
					}
					if(y15 < c.min_y || !c.started) {
						c.min_y = y15;
					}
					c.started = true;
					if(cx10 > c.max_x || !c.started) {
						c.max_x = cx10;
					}
					if(cy10 > c.max_y || !c.started) {
						c.max_y = cy10;
					}
					if(cx10 < c.min_x || !c.started) {
						c.min_x = cx10;
					}
					if(cy10 < c.min_y || !c.started) {
						c.min_y = cy10;
					}
					c.started = true;
					if(cx117 > c.max_x || !c.started) {
						c.max_x = cx117;
					}
					if(cy117 > c.max_y || !c.started) {
						c.max_y = cy117;
					}
					if(cx117 < c.min_x || !c.started) {
						c.min_x = cx117;
					}
					if(cy117 < c.min_y || !c.started) {
						c.min_y = cy117;
					}
					c.started = true;
				} else {
					kha_graphics2_truetype_StbTruetype.stbtt_setvertex(c.pvertices[c.num_vertices],4,x15,y15,cx10,cy10);
					c.pvertices[c.num_vertices].cx1 = js_Boot.__cast(cx117 , Int);
					c.pvertices[c.num_vertices].cy1 = js_Boot.__cast(cy117 , Int);
				}
				c.num_vertices++;
				break;
			default:
				return false;
			}
			break;
		case 14:
			if(c.first_x != c.x || c.first_y != c.y) {
				var x16 = c.first_x | 0;
				var y16 = c.first_y | 0;
				if(c.bounds) {
					if(x16 > c.max_x || !c.started) {
						c.max_x = x16;
					}
					if(y16 > c.max_y || !c.started) {
						c.max_y = y16;
					}
					if(x16 < c.min_x || !c.started) {
						c.min_x = x16;
					}
					if(y16 < c.min_y || !c.started) {
						c.min_y = y16;
					}
					c.started = true;
				} else {
					kha_graphics2_truetype_StbTruetype.stbtt_setvertex(c.pvertices[c.num_vertices],2,x16,y16,0,0);
					c.pvertices[c.num_vertices].cx1 = js_Boot.__cast(0 , Int);
					c.pvertices[c.num_vertices].cy1 = js_Boot.__cast(0 , Int);
				}
				c.num_vertices++;
			}
			return true;
		case 19:case 20:
			if(in_header) {
				maskbits += sp / 2 | 0;
			}
			in_header = false;
			var o = b.cursor + ((maskbits + 7) / 8 | 0);
			if(o > b.data.get_length() || o < 0) {
				throw haxe_Exception.thrown("Error");
			}
			b.cursor = o > b.data.get_length() || o < 0 ? b.data.get_length() : o;
			break;
		case 21:
			in_header = false;
			if(sp < 2) {
				return false;
			}
			if(c.first_x != c.x || c.first_y != c.y) {
				var x17 = c.first_x | 0;
				var y17 = c.first_y | 0;
				if(c.bounds) {
					if(x17 > c.max_x || !c.started) {
						c.max_x = x17;
					}
					if(y17 > c.max_y || !c.started) {
						c.max_y = y17;
					}
					if(x17 < c.min_x || !c.started) {
						c.min_x = x17;
					}
					if(y17 < c.min_y || !c.started) {
						c.min_y = y17;
					}
					c.started = true;
				} else {
					kha_graphics2_truetype_StbTruetype.stbtt_setvertex(c.pvertices[c.num_vertices],2,x17,y17,0,0);
					c.pvertices[c.num_vertices].cx1 = js_Boot.__cast(0 , Int);
					c.pvertices[c.num_vertices].cy1 = js_Boot.__cast(0 , Int);
				}
				c.num_vertices++;
			}
			c.first_x = c.x = c.x + _g[sp - 2];
			c.first_y = c.y = c.y + _g[sp - 1];
			var x18 = c.x | 0;
			var y18 = c.y | 0;
			if(c.bounds) {
				if(x18 > c.max_x || !c.started) {
					c.max_x = x18;
				}
				if(y18 > c.max_y || !c.started) {
					c.max_y = y18;
				}
				if(x18 < c.min_x || !c.started) {
					c.min_x = x18;
				}
				if(y18 < c.min_y || !c.started) {
					c.min_y = y18;
				}
				c.started = true;
			} else {
				kha_graphics2_truetype_StbTruetype.stbtt_setvertex(c.pvertices[c.num_vertices],1,x18,y18,0,0);
				c.pvertices[c.num_vertices].cx1 = js_Boot.__cast(0 , Int);
				c.pvertices[c.num_vertices].cy1 = js_Boot.__cast(0 , Int);
			}
			c.num_vertices++;
			break;
		case 22:
			in_header = false;
			if(sp < 1) {
				return false;
			}
			if(c.first_x != c.x || c.first_y != c.y) {
				var x19 = c.first_x | 0;
				var y19 = c.first_y | 0;
				if(c.bounds) {
					if(x19 > c.max_x || !c.started) {
						c.max_x = x19;
					}
					if(y19 > c.max_y || !c.started) {
						c.max_y = y19;
					}
					if(x19 < c.min_x || !c.started) {
						c.min_x = x19;
					}
					if(y19 < c.min_y || !c.started) {
						c.min_y = y19;
					}
					c.started = true;
				} else {
					kha_graphics2_truetype_StbTruetype.stbtt_setvertex(c.pvertices[c.num_vertices],2,x19,y19,0,0);
					c.pvertices[c.num_vertices].cx1 = js_Boot.__cast(0 , Int);
					c.pvertices[c.num_vertices].cy1 = js_Boot.__cast(0 , Int);
				}
				c.num_vertices++;
			}
			c.first_x = c.x = c.x + _g[sp - 1];
			c.first_y = c.y = c.y;
			var x20 = c.x | 0;
			var y20 = c.y | 0;
			if(c.bounds) {
				if(x20 > c.max_x || !c.started) {
					c.max_x = x20;
				}
				if(y20 > c.max_y || !c.started) {
					c.max_y = y20;
				}
				if(x20 < c.min_x || !c.started) {
					c.min_x = x20;
				}
				if(y20 < c.min_y || !c.started) {
					c.min_y = y20;
				}
				c.started = true;
			} else {
				kha_graphics2_truetype_StbTruetype.stbtt_setvertex(c.pvertices[c.num_vertices],1,x20,y20,0,0);
				c.pvertices[c.num_vertices].cx1 = js_Boot.__cast(0 , Int);
				c.pvertices[c.num_vertices].cy1 = js_Boot.__cast(0 , Int);
			}
			c.num_vertices++;
			break;
		case 24:
			if(sp < 8) {
				return false;
			}
			while(i + 5 < sp - 2) {
				var cx118 = c.x + _g[i];
				var cy118 = c.y + _g[i + 1];
				var cx29 = cx118 + _g[i + 2];
				var cy29 = cy118 + _g[i + 3];
				c.x = cx29 + _g[i + 4];
				c.y = cy29 + _g[i + 5];
				var x21 = c.x | 0;
				var y21 = c.y | 0;
				var cx20 = cx118 | 0;
				var cy20 = cy118 | 0;
				var cx119 = cx29 | 0;
				var cy119 = cy29 | 0;
				if(c.bounds) {
					if(x21 > c.max_x || !c.started) {
						c.max_x = x21;
					}
					if(y21 > c.max_y || !c.started) {
						c.max_y = y21;
					}
					if(x21 < c.min_x || !c.started) {
						c.min_x = x21;
					}
					if(y21 < c.min_y || !c.started) {
						c.min_y = y21;
					}
					c.started = true;
					if(cx20 > c.max_x || !c.started) {
						c.max_x = cx20;
					}
					if(cy20 > c.max_y || !c.started) {
						c.max_y = cy20;
					}
					if(cx20 < c.min_x || !c.started) {
						c.min_x = cx20;
					}
					if(cy20 < c.min_y || !c.started) {
						c.min_y = cy20;
					}
					c.started = true;
					if(cx119 > c.max_x || !c.started) {
						c.max_x = cx119;
					}
					if(cy119 > c.max_y || !c.started) {
						c.max_y = cy119;
					}
					if(cx119 < c.min_x || !c.started) {
						c.min_x = cx119;
					}
					if(cy119 < c.min_y || !c.started) {
						c.min_y = cy119;
					}
					c.started = true;
				} else {
					kha_graphics2_truetype_StbTruetype.stbtt_setvertex(c.pvertices[c.num_vertices],4,x21,y21,cx20,cy20);
					c.pvertices[c.num_vertices].cx1 = js_Boot.__cast(cx119 , Int);
					c.pvertices[c.num_vertices].cy1 = js_Boot.__cast(cy119 , Int);
				}
				c.num_vertices++;
				i += 6;
			}
			if(i + 1 >= sp) {
				return false;
			}
			c.x += _g[i];
			c.y += _g[i + 1];
			var x22 = c.x | 0;
			var y22 = c.y | 0;
			if(c.bounds) {
				if(x22 > c.max_x || !c.started) {
					c.max_x = x22;
				}
				if(y22 > c.max_y || !c.started) {
					c.max_y = y22;
				}
				if(x22 < c.min_x || !c.started) {
					c.min_x = x22;
				}
				if(y22 < c.min_y || !c.started) {
					c.min_y = y22;
				}
				c.started = true;
			} else {
				kha_graphics2_truetype_StbTruetype.stbtt_setvertex(c.pvertices[c.num_vertices],2,x22,y22,0,0);
				c.pvertices[c.num_vertices].cx1 = js_Boot.__cast(0 , Int);
				c.pvertices[c.num_vertices].cy1 = js_Boot.__cast(0 , Int);
			}
			c.num_vertices++;
			break;
		case 25:
			if(sp < 8) {
				return false;
			}
			while(i + 1 < sp - 6) {
				c.x += _g[i];
				c.y += _g[i + 1];
				var x23 = c.x | 0;
				var y23 = c.y | 0;
				if(c.bounds) {
					if(x23 > c.max_x || !c.started) {
						c.max_x = x23;
					}
					if(y23 > c.max_y || !c.started) {
						c.max_y = y23;
					}
					if(x23 < c.min_x || !c.started) {
						c.min_x = x23;
					}
					if(y23 < c.min_y || !c.started) {
						c.min_y = y23;
					}
					c.started = true;
				} else {
					kha_graphics2_truetype_StbTruetype.stbtt_setvertex(c.pvertices[c.num_vertices],2,x23,y23,0,0);
					c.pvertices[c.num_vertices].cx1 = js_Boot.__cast(0 , Int);
					c.pvertices[c.num_vertices].cy1 = js_Boot.__cast(0 , Int);
				}
				c.num_vertices++;
				i += 2;
			}
			if(i + 5 >= sp) {
				return false;
			}
			var cx120 = c.x + _g[i];
			var cy120 = c.y + _g[i + 1];
			var cx210 = cx120 + _g[i + 2];
			var cy210 = cy120 + _g[i + 3];
			c.x = cx210 + _g[i + 4];
			c.y = cy210 + _g[i + 5];
			var x24 = c.x | 0;
			var y24 = c.y | 0;
			var cx30 = cx120 | 0;
			var cy30 = cy120 | 0;
			var cx121 = cx210 | 0;
			var cy121 = cy210 | 0;
			if(c.bounds) {
				if(x24 > c.max_x || !c.started) {
					c.max_x = x24;
				}
				if(y24 > c.max_y || !c.started) {
					c.max_y = y24;
				}
				if(x24 < c.min_x || !c.started) {
					c.min_x = x24;
				}
				if(y24 < c.min_y || !c.started) {
					c.min_y = y24;
				}
				c.started = true;
				if(cx30 > c.max_x || !c.started) {
					c.max_x = cx30;
				}
				if(cy30 > c.max_y || !c.started) {
					c.max_y = cy30;
				}
				if(cx30 < c.min_x || !c.started) {
					c.min_x = cx30;
				}
				if(cy30 < c.min_y || !c.started) {
					c.min_y = cy30;
				}
				c.started = true;
				if(cx121 > c.max_x || !c.started) {
					c.max_x = cx121;
				}
				if(cy121 > c.max_y || !c.started) {
					c.max_y = cy121;
				}
				if(cx121 < c.min_x || !c.started) {
					c.min_x = cx121;
				}
				if(cy121 < c.min_y || !c.started) {
					c.min_y = cy121;
				}
				c.started = true;
			} else {
				kha_graphics2_truetype_StbTruetype.stbtt_setvertex(c.pvertices[c.num_vertices],4,x24,y24,cx30,cy30);
				c.pvertices[c.num_vertices].cx1 = js_Boot.__cast(cx121 , Int);
				c.pvertices[c.num_vertices].cy1 = js_Boot.__cast(cy121 , Int);
			}
			c.num_vertices++;
			break;
		case 26:case 27:
			if(sp < 4) {
				return false;
			}
			f = 0.0;
			if((sp & 1) != 0) {
				f = _g[0];
				i = 1;
			}
			while(i + 3 < sp) {
				if(b0 == 27) {
					var cx122 = c.x + _g[i];
					var cy122 = c.y + f;
					var cx211 = cx122 + _g[i + 1];
					var cy211 = cy122 + _g[i + 2];
					c.x = cx211 + _g[i + 3];
					c.y = cy211;
					var x25 = c.x | 0;
					var y25 = c.y | 0;
					var cx31 = cx122 | 0;
					var cy31 = cy122 | 0;
					var cx123 = cx211 | 0;
					var cy123 = cy211 | 0;
					if(c.bounds) {
						if(x25 > c.max_x || !c.started) {
							c.max_x = x25;
						}
						if(y25 > c.max_y || !c.started) {
							c.max_y = y25;
						}
						if(x25 < c.min_x || !c.started) {
							c.min_x = x25;
						}
						if(y25 < c.min_y || !c.started) {
							c.min_y = y25;
						}
						c.started = true;
						if(cx31 > c.max_x || !c.started) {
							c.max_x = cx31;
						}
						if(cy31 > c.max_y || !c.started) {
							c.max_y = cy31;
						}
						if(cx31 < c.min_x || !c.started) {
							c.min_x = cx31;
						}
						if(cy31 < c.min_y || !c.started) {
							c.min_y = cy31;
						}
						c.started = true;
						if(cx123 > c.max_x || !c.started) {
							c.max_x = cx123;
						}
						if(cy123 > c.max_y || !c.started) {
							c.max_y = cy123;
						}
						if(cx123 < c.min_x || !c.started) {
							c.min_x = cx123;
						}
						if(cy123 < c.min_y || !c.started) {
							c.min_y = cy123;
						}
						c.started = true;
					} else {
						kha_graphics2_truetype_StbTruetype.stbtt_setvertex(c.pvertices[c.num_vertices],4,x25,y25,cx31,cy31);
						c.pvertices[c.num_vertices].cx1 = js_Boot.__cast(cx123 , Int);
						c.pvertices[c.num_vertices].cy1 = js_Boot.__cast(cy123 , Int);
					}
					c.num_vertices++;
				} else {
					var cx124 = c.x + f;
					var cy124 = c.y + _g[i];
					var cx212 = cx124 + _g[i + 1];
					var cy212 = cy124 + _g[i + 2];
					c.x = cx212;
					c.y = cy212 + _g[i + 3];
					var x26 = c.x | 0;
					var y26 = c.y | 0;
					var cx32 = cx124 | 0;
					var cy32 = cy124 | 0;
					var cx125 = cx212 | 0;
					var cy125 = cy212 | 0;
					if(c.bounds) {
						if(x26 > c.max_x || !c.started) {
							c.max_x = x26;
						}
						if(y26 > c.max_y || !c.started) {
							c.max_y = y26;
						}
						if(x26 < c.min_x || !c.started) {
							c.min_x = x26;
						}
						if(y26 < c.min_y || !c.started) {
							c.min_y = y26;
						}
						c.started = true;
						if(cx32 > c.max_x || !c.started) {
							c.max_x = cx32;
						}
						if(cy32 > c.max_y || !c.started) {
							c.max_y = cy32;
						}
						if(cx32 < c.min_x || !c.started) {
							c.min_x = cx32;
						}
						if(cy32 < c.min_y || !c.started) {
							c.min_y = cy32;
						}
						c.started = true;
						if(cx125 > c.max_x || !c.started) {
							c.max_x = cx125;
						}
						if(cy125 > c.max_y || !c.started) {
							c.max_y = cy125;
						}
						if(cx125 < c.min_x || !c.started) {
							c.min_x = cx125;
						}
						if(cy125 < c.min_y || !c.started) {
							c.min_y = cy125;
						}
						c.started = true;
					} else {
						kha_graphics2_truetype_StbTruetype.stbtt_setvertex(c.pvertices[c.num_vertices],4,x26,y26,cx32,cy32);
						c.pvertices[c.num_vertices].cx1 = js_Boot.__cast(cx125 , Int);
						c.pvertices[c.num_vertices].cy1 = js_Boot.__cast(cy125 , Int);
					}
					c.num_vertices++;
				}
				f = 0.0;
				i += 4;
			}
			break;
		case 10:case 29:
			if(b0 == 10) {
				if(!has_subrs) {
					if(info.fdselect.data.get_length() != 0) {
						var fdselect = info.fdselect;
						var nranges;
						var start;
						var end;
						var v1;
						var fmt;
						var fdselector = -1;
						if(0 > fdselect.data.get_length()) {
							throw haxe_Exception.thrown("Error");
						}
						fdselect.cursor = 0 > fdselect.data.get_length() ? fdselect.data.get_length() : 0;
						if(fdselect.cursor >= fdselect.data.get_length()) {
							fmt = 0;
						} else {
							var pos2 = fdselect.cursor++;
							if(pos2 == null) {
								pos2 = 0;
							}
							fmt = fdselect.data.readU8(pos2);
						}
						if(fmt == 0) {
							var o1 = fdselect.cursor + glyph_index;
							if(o1 > fdselect.data.get_length() || o1 < 0) {
								throw haxe_Exception.thrown("Error");
							}
							fdselect.cursor = o1 > fdselect.data.get_length() || o1 < 0 ? fdselect.data.get_length() : o1;
							if(fdselect.cursor >= fdselect.data.get_length()) {
								fdselector = 0;
							} else {
								var pos3 = fdselect.cursor++;
								if(pos3 == null) {
									pos3 = 0;
								}
								fdselector = fdselect.data.readU8(pos3);
							}
						} else if(fmt == 3) {
							var v2 = 0;
							var _g2 = 0;
							while(_g2 < 2) {
								++_g2;
								var v3;
								if(fdselect.cursor >= fdselect.data.get_length()) {
									v3 = 0;
								} else {
									var pos4 = fdselect.cursor++;
									if(pos4 == null) {
										pos4 = 0;
									}
									v3 = fdselect.data.readU8(pos4);
								}
								v2 = v2 << 8 | v3;
							}
							nranges = v2;
							var v4 = 0;
							var _g3 = 0;
							while(_g3 < 2) {
								++_g3;
								var v5;
								if(fdselect.cursor >= fdselect.data.get_length()) {
									v5 = 0;
								} else {
									var pos5 = fdselect.cursor++;
									if(pos5 == null) {
										pos5 = 0;
									}
									v5 = fdselect.data.readU8(pos5);
								}
								v4 = v4 << 8 | v5;
							}
							start = v4;
							var _g4 = 0;
							while(_g4 < nranges) {
								++_g4;
								if(fdselect.cursor >= fdselect.data.get_length()) {
									v1 = 0;
								} else {
									var pos6 = fdselect.cursor++;
									if(pos6 == null) {
										pos6 = 0;
									}
									v1 = fdselect.data.readU8(pos6);
								}
								var v6 = 0;
								var _g5 = 0;
								while(_g5 < 2) {
									++_g5;
									var v7;
									if(fdselect.cursor >= fdselect.data.get_length()) {
										v7 = 0;
									} else {
										var pos7 = fdselect.cursor++;
										if(pos7 == null) {
											pos7 = 0;
										}
										v7 = fdselect.data.readU8(pos7);
									}
									v6 = v6 << 8 | v7;
								}
								end = v6;
								if(glyph_index >= start && glyph_index < end) {
									fdselector = v1;
									break;
								}
								start = end;
							}
						}
						if(fdselector == -1) {
							var r = new kha_graphics2_truetype_Stbtt_$_$buf();
							r.data = null;
							r.cursor = 0;
						}
						var cff = info.cff;
						var b2 = info.fontdicts;
						if(0 > b2.data.get_length()) {
							throw haxe_Exception.thrown("Error");
						}
						b2.cursor = 0 > b2.data.get_length() ? b2.data.get_length() : 0;
						var v8 = 0;
						var _g6 = 0;
						while(_g6 < 2) {
							++_g6;
							var v9;
							if(b2.cursor >= b2.data.get_length()) {
								v9 = 0;
							} else {
								var pos8 = b2.cursor++;
								if(pos8 == null) {
									pos8 = 0;
								}
								v9 = b2.data.readU8(pos8);
							}
							v8 = v8 << 8 | v9;
						}
						var count = v8;
						var offsize;
						if(b2.cursor >= b2.data.get_length()) {
							offsize = 0;
						} else {
							var pos9 = b2.cursor++;
							if(pos9 == null) {
								pos9 = 0;
							}
							offsize = b2.data.readU8(pos9);
						}
						if(!(fdselector >= 0 && fdselector < count)) {
							throw haxe_Exception.thrown("Error");
						}
						if(!(offsize >= 1 && offsize <= 4)) {
							throw haxe_Exception.thrown("Error");
						}
						var o2 = b2.cursor + fdselector * offsize;
						if(o2 > b2.data.get_length() || o2 < 0) {
							throw haxe_Exception.thrown("Error");
						}
						b2.cursor = o2 > b2.data.get_length() || o2 < 0 ? b2.data.get_length() : o2;
						var v10 = 0;
						if(!(offsize >= 1 && offsize <= 4)) {
							throw haxe_Exception.thrown("Error");
						}
						var _g7 = 0;
						var _g8 = offsize;
						while(_g7 < _g8) {
							++_g7;
							var v11;
							if(b2.cursor >= b2.data.get_length()) {
								v11 = 0;
							} else {
								var pos10 = b2.cursor++;
								if(pos10 == null) {
									pos10 = 0;
								}
								v11 = b2.data.readU8(pos10);
							}
							v10 = v10 << 8 | v11;
						}
						var start1 = v10;
						var v12 = 0;
						if(!(offsize >= 1 && offsize <= 4)) {
							throw haxe_Exception.thrown("Error");
						}
						var _g9 = 0;
						var _g10 = offsize;
						while(_g9 < _g10) {
							++_g9;
							var v13;
							if(b2.cursor >= b2.data.get_length()) {
								v13 = 0;
							} else {
								var pos11 = b2.cursor++;
								if(pos11 == null) {
									pos11 = 0;
								}
								v13 = b2.data.readU8(pos11);
							}
							v12 = v12 << 8 | v13;
						}
						var o3 = 2 + (count + 1) * offsize + start1;
						var s = v12 - start1;
						var r1 = new kha_graphics2_truetype_Stbtt_$_$buf();
						r1.data = null;
						r1.cursor = 0;
						var fontdict;
						if(o3 < 0 || s < 0 || o3 > b2.data.get_length() || s > b2.data.get_length() - o3) {
							fontdict = r1;
						} else {
							r1.data = b2.data.sub(o3,s);
							fontdict = r1;
						}
						var subrsoff = [0];
						var private_loc = [0,0];
						var i1 = 0;
						if(0 > fontdict.data.get_length()) {
							throw haxe_Exception.thrown("Error");
						}
						fontdict.cursor = 0 > fontdict.data.get_length() ? fontdict.data.get_length() : 0;
						var ret = null;
						while(fontdict.cursor < fontdict.data.get_length()) {
							var start2 = fontdict.cursor;
							var op;
							while(true) {
								var subrs1;
								if(fontdict.cursor >= fontdict.data.get_length()) {
									subrs1 = 0;
								} else {
									var pos12 = fontdict.cursor;
									if(pos12 == null) {
										pos12 = 0;
									}
									subrs1 = fontdict.data.readU8(pos12);
								}
								if(!(subrs1 >= 28)) {
									break;
								}
								var v14;
								var b01;
								if(fontdict.cursor >= fontdict.data.get_length()) {
									b01 = 0;
								} else {
									var pos13 = fontdict.cursor;
									if(pos13 == null) {
										pos13 = 0;
									}
									b01 = fontdict.data.readU8(pos13);
								}
								if(b01 < 28) {
									throw haxe_Exception.thrown("Error");
								}
								if(b01 == 30) {
									var o4 = fontdict.cursor + 1;
									if(o4 > fontdict.data.get_length() || o4 < 0) {
										throw haxe_Exception.thrown("Error");
									}
									fontdict.cursor = o4 > fontdict.data.get_length() || o4 < 0 ? fontdict.data.get_length() : o4;
									while(fontdict.cursor < fontdict.data.get_length()) {
										if(fontdict.cursor >= fontdict.data.get_length()) {
											v14 = 0;
										} else {
											var pos14 = fontdict.cursor++;
											if(pos14 == null) {
												pos14 = 0;
											}
											v14 = fontdict.data.readU8(pos14);
										}
										if((v14 & 15) == 15 || v14 >> 4 == 15) {
											break;
										}
									}
								} else {
									var b02;
									if(fontdict.cursor >= fontdict.data.get_length()) {
										b02 = 0;
									} else {
										var pos15 = fontdict.cursor++;
										if(pos15 == null) {
											pos15 = 0;
										}
										b02 = fontdict.data.readU8(pos15);
									}
									if(!(b02 >= 32 && b02 <= 246)) {
										if(b02 >= 247 && b02 <= 250) {
											if(fontdict.cursor < fontdict.data.get_length()) {
												var pos16 = fontdict.cursor++;
												if(pos16 == null) {
													pos16 = 0;
												}
												fontdict.data.readU8(pos16);
											}
										} else if(b02 >= 251 && b02 <= 254) {
											if(fontdict.cursor < fontdict.data.get_length()) {
												var pos17 = fontdict.cursor++;
												if(pos17 == null) {
													pos17 = 0;
												}
												fontdict.data.readU8(pos17);
											}
										} else if(b02 == 28) {
											var _g11 = 0;
											while(_g11 < 2) {
												++_g11;
												if(fontdict.cursor < fontdict.data.get_length()) {
													var pos18 = fontdict.cursor++;
													if(pos18 == null) {
														pos18 = 0;
													}
													fontdict.data.readU8(pos18);
												}
											}
										} else if(b02 == 29) {
											var _g12 = 0;
											while(_g12 < 4) {
												++_g12;
												if(fontdict.cursor < fontdict.data.get_length()) {
													var pos19 = fontdict.cursor++;
													if(pos19 == null) {
														pos19 = 0;
													}
													fontdict.data.readU8(pos19);
												}
											}
										} else {
											throw haxe_Exception.thrown("Error");
										}
									}
								}
							}
							var end1 = fontdict.cursor;
							if(fontdict.cursor >= fontdict.data.get_length()) {
								op = 0;
							} else {
								var pos20 = fontdict.cursor++;
								if(pos20 == null) {
									pos20 = 0;
								}
								op = fontdict.data.readU8(pos20);
							}
							if(op == 12) {
								var op1;
								if(fontdict.cursor >= fontdict.data.get_length()) {
									op1 = 0;
								} else {
									var pos21 = fontdict.cursor++;
									if(pos21 == null) {
										pos21 = 0;
									}
									op1 = fontdict.data.readU8(pos21);
								}
								op = op1 | 256;
							}
							if(op == 18) {
								var s1 = end1 - start2;
								var r2 = new kha_graphics2_truetype_Stbtt_$_$buf();
								r2.data = null;
								r2.cursor = 0;
								if(start2 < 0 || s1 < 0 || start2 > fontdict.data.get_length() || s1 > fontdict.data.get_length() - start2) {
									ret = r2;
								} else {
									r2.data = fontdict.data.sub(start2,s1);
									ret = r2;
								}
								break;
							}
						}
						var operands;
						if(ret != null) {
							operands = ret;
						} else {
							var r3 = new kha_graphics2_truetype_Stbtt_$_$buf();
							r3.data = null;
							r3.cursor = 0;
							if(0 > fontdict.data.get_length() || 0 > fontdict.data.get_length()) {
								operands = r3;
							} else {
								r3.data = fontdict.data.sub(0,0);
								operands = r3;
							}
						}
						while(i1 < 2 && operands.cursor < operands.data.get_length()) {
							var b03;
							if(operands.cursor >= operands.data.get_length()) {
								b03 = 0;
							} else {
								var pos22 = operands.cursor++;
								if(pos22 == null) {
									pos22 = 0;
								}
								b03 = operands.data.readU8(pos22);
							}
							var subrs2;
							if(b03 >= 32 && b03 <= 246) {
								subrs2 = b03 - 139;
							} else if(b03 >= 247 && b03 <= 250) {
								var subrs3;
								if(operands.cursor >= operands.data.get_length()) {
									subrs3 = 0;
								} else {
									var pos23 = operands.cursor++;
									if(pos23 == null) {
										pos23 = 0;
									}
									subrs3 = operands.data.readU8(pos23);
								}
								subrs2 = (b03 - 247) * 256 + subrs3 + 108;
							} else if(b03 >= 251 && b03 <= 254) {
								var subrs4;
								if(operands.cursor >= operands.data.get_length()) {
									subrs4 = 0;
								} else {
									var pos24 = operands.cursor++;
									if(pos24 == null) {
										pos24 = 0;
									}
									subrs4 = operands.data.readU8(pos24);
								}
								subrs2 = -(b03 - 251) * 256 - subrs4 - 108;
							} else if(b03 == 28) {
								var v15 = 0;
								var _g13 = 0;
								while(_g13 < 2) {
									++_g13;
									var v16;
									if(operands.cursor >= operands.data.get_length()) {
										v16 = 0;
									} else {
										var pos25 = operands.cursor++;
										if(pos25 == null) {
											pos25 = 0;
										}
										v16 = operands.data.readU8(pos25);
									}
									v15 = v15 << 8 | v16;
								}
								subrs2 = v15;
							} else if(b03 == 29) {
								var v17 = 0;
								var _g14 = 0;
								while(_g14 < 4) {
									++_g14;
									var v18;
									if(operands.cursor >= operands.data.get_length()) {
										v18 = 0;
									} else {
										var pos26 = operands.cursor++;
										if(pos26 == null) {
											pos26 = 0;
										}
										v18 = operands.data.readU8(pos26);
									}
									v17 = v17 << 8 | v18;
								}
								subrs2 = v17;
							} else {
								throw haxe_Exception.thrown("Error");
							}
							private_loc[i1] = subrs2;
							++i1;
						}
						if(private_loc[1] == 0 || private_loc[0] == 0) {
							var r4 = new kha_graphics2_truetype_Stbtt_$_$buf();
							r4.data = null;
							r4.cursor = 0;
							subrs = r4;
						} else {
							var o5 = private_loc[1];
							var s2 = private_loc[0];
							var r5 = new kha_graphics2_truetype_Stbtt_$_$buf();
							r5.data = null;
							r5.cursor = 0;
							var pdict;
							if(o5 < 0 || s2 < 0 || o5 > cff.data.get_length() || s2 > cff.data.get_length() - o5) {
								pdict = r5;
							} else {
								r5.data = cff.data.sub(o5,s2);
								pdict = r5;
							}
							var i2 = 0;
							if(0 > pdict.data.get_length()) {
								throw haxe_Exception.thrown("Error");
							}
							pdict.cursor = 0 > pdict.data.get_length() ? pdict.data.get_length() : 0;
							var ret1 = null;
							while(pdict.cursor < pdict.data.get_length()) {
								var start3 = pdict.cursor;
								var op2;
								while(true) {
									var subrs5;
									if(pdict.cursor >= pdict.data.get_length()) {
										subrs5 = 0;
									} else {
										var pos27 = pdict.cursor;
										if(pos27 == null) {
											pos27 = 0;
										}
										subrs5 = pdict.data.readU8(pos27);
									}
									if(!(subrs5 >= 28)) {
										break;
									}
									var v19;
									var b04;
									if(pdict.cursor >= pdict.data.get_length()) {
										b04 = 0;
									} else {
										var pos28 = pdict.cursor;
										if(pos28 == null) {
											pos28 = 0;
										}
										b04 = pdict.data.readU8(pos28);
									}
									if(b04 < 28) {
										throw haxe_Exception.thrown("Error");
									}
									if(b04 == 30) {
										var o6 = pdict.cursor + 1;
										if(o6 > pdict.data.get_length() || o6 < 0) {
											throw haxe_Exception.thrown("Error");
										}
										pdict.cursor = o6 > pdict.data.get_length() || o6 < 0 ? pdict.data.get_length() : o6;
										while(pdict.cursor < pdict.data.get_length()) {
											if(pdict.cursor >= pdict.data.get_length()) {
												v19 = 0;
											} else {
												var pos29 = pdict.cursor++;
												if(pos29 == null) {
													pos29 = 0;
												}
												v19 = pdict.data.readU8(pos29);
											}
											if((v19 & 15) == 15 || v19 >> 4 == 15) {
												break;
											}
										}
									} else {
										var b05;
										if(pdict.cursor >= pdict.data.get_length()) {
											b05 = 0;
										} else {
											var pos30 = pdict.cursor++;
											if(pos30 == null) {
												pos30 = 0;
											}
											b05 = pdict.data.readU8(pos30);
										}
										if(!(b05 >= 32 && b05 <= 246)) {
											if(b05 >= 247 && b05 <= 250) {
												if(pdict.cursor < pdict.data.get_length()) {
													var pos31 = pdict.cursor++;
													if(pos31 == null) {
														pos31 = 0;
													}
													pdict.data.readU8(pos31);
												}
											} else if(b05 >= 251 && b05 <= 254) {
												if(pdict.cursor < pdict.data.get_length()) {
													var pos32 = pdict.cursor++;
													if(pos32 == null) {
														pos32 = 0;
													}
													pdict.data.readU8(pos32);
												}
											} else if(b05 == 28) {
												var _g15 = 0;
												while(_g15 < 2) {
													++_g15;
													if(pdict.cursor < pdict.data.get_length()) {
														var pos33 = pdict.cursor++;
														if(pos33 == null) {
															pos33 = 0;
														}
														pdict.data.readU8(pos33);
													}
												}
											} else if(b05 == 29) {
												var _g16 = 0;
												while(_g16 < 4) {
													++_g16;
													if(pdict.cursor < pdict.data.get_length()) {
														var pos34 = pdict.cursor++;
														if(pos34 == null) {
															pos34 = 0;
														}
														pdict.data.readU8(pos34);
													}
												}
											} else {
												throw haxe_Exception.thrown("Error");
											}
										}
									}
								}
								var end2 = pdict.cursor;
								if(pdict.cursor >= pdict.data.get_length()) {
									op2 = 0;
								} else {
									var pos35 = pdict.cursor++;
									if(pos35 == null) {
										pos35 = 0;
									}
									op2 = pdict.data.readU8(pos35);
								}
								if(op2 == 12) {
									var op3;
									if(pdict.cursor >= pdict.data.get_length()) {
										op3 = 0;
									} else {
										var pos36 = pdict.cursor++;
										if(pos36 == null) {
											pos36 = 0;
										}
										op3 = pdict.data.readU8(pos36);
									}
									op2 = op3 | 256;
								}
								if(op2 == 19) {
									var s3 = end2 - start3;
									var r6 = new kha_graphics2_truetype_Stbtt_$_$buf();
									r6.data = null;
									r6.cursor = 0;
									if(start3 < 0 || s3 < 0 || start3 > pdict.data.get_length() || s3 > pdict.data.get_length() - start3) {
										ret1 = r6;
									} else {
										r6.data = pdict.data.sub(start3,s3);
										ret1 = r6;
									}
									break;
								}
							}
							var operands1;
							if(ret1 != null) {
								operands1 = ret1;
							} else {
								var r7 = new kha_graphics2_truetype_Stbtt_$_$buf();
								r7.data = null;
								r7.cursor = 0;
								if(0 > pdict.data.get_length() || 0 > pdict.data.get_length()) {
									operands1 = r7;
								} else {
									r7.data = pdict.data.sub(0,0);
									operands1 = r7;
								}
							}
							while(i2 < 1 && operands1.cursor < operands1.data.get_length()) {
								var b06;
								if(operands1.cursor >= operands1.data.get_length()) {
									b06 = 0;
								} else {
									var pos37 = operands1.cursor++;
									if(pos37 == null) {
										pos37 = 0;
									}
									b06 = operands1.data.readU8(pos37);
								}
								var subrs6;
								if(b06 >= 32 && b06 <= 246) {
									subrs6 = b06 - 139;
								} else if(b06 >= 247 && b06 <= 250) {
									var subrs7;
									if(operands1.cursor >= operands1.data.get_length()) {
										subrs7 = 0;
									} else {
										var pos38 = operands1.cursor++;
										if(pos38 == null) {
											pos38 = 0;
										}
										subrs7 = operands1.data.readU8(pos38);
									}
									subrs6 = (b06 - 247) * 256 + subrs7 + 108;
								} else if(b06 >= 251 && b06 <= 254) {
									var subrs8;
									if(operands1.cursor >= operands1.data.get_length()) {
										subrs8 = 0;
									} else {
										var pos39 = operands1.cursor++;
										if(pos39 == null) {
											pos39 = 0;
										}
										subrs8 = operands1.data.readU8(pos39);
									}
									subrs6 = -(b06 - 251) * 256 - subrs8 - 108;
								} else if(b06 == 28) {
									var v20 = 0;
									var _g17 = 0;
									while(_g17 < 2) {
										++_g17;
										var v21;
										if(operands1.cursor >= operands1.data.get_length()) {
											v21 = 0;
										} else {
											var pos40 = operands1.cursor++;
											if(pos40 == null) {
												pos40 = 0;
											}
											v21 = operands1.data.readU8(pos40);
										}
										v20 = v20 << 8 | v21;
									}
									subrs6 = v20;
								} else if(b06 == 29) {
									var v22 = 0;
									var _g18 = 0;
									while(_g18 < 4) {
										++_g18;
										var v23;
										if(operands1.cursor >= operands1.data.get_length()) {
											v23 = 0;
										} else {
											var pos41 = operands1.cursor++;
											if(pos41 == null) {
												pos41 = 0;
											}
											v23 = operands1.data.readU8(pos41);
										}
										v22 = v22 << 8 | v23;
									}
									subrs6 = v22;
								} else {
									throw haxe_Exception.thrown("Error");
								}
								subrsoff[i2] = subrs6;
								++i2;
							}
							if(subrsoff[0] == 0) {
								var r8 = new kha_graphics2_truetype_Stbtt_$_$buf();
								r8.data = null;
								r8.cursor = 0;
								subrs = r8;
							} else {
								var o7 = private_loc[1] + subrsoff[0];
								if(o7 > cff.data.get_length() || o7 < 0) {
									throw haxe_Exception.thrown("Error");
								}
								cff.cursor = o7 > cff.data.get_length() || o7 < 0 ? cff.data.get_length() : o7;
								var start4 = cff.cursor;
								var v24 = 0;
								var _g19 = 0;
								while(_g19 < 2) {
									++_g19;
									var v25;
									if(cff.cursor >= cff.data.get_length()) {
										v25 = 0;
									} else {
										var pos42 = cff.cursor++;
										if(pos42 == null) {
											pos42 = 0;
										}
										v25 = cff.data.readU8(pos42);
									}
									v24 = v24 << 8 | v25;
								}
								var count1 = v24;
								if(count1 > 0) {
									var offsize1;
									if(cff.cursor >= cff.data.get_length()) {
										offsize1 = 0;
									} else {
										var pos43 = cff.cursor++;
										if(pos43 == null) {
											pos43 = 0;
										}
										offsize1 = cff.data.readU8(pos43);
									}
									if(!(offsize1 >= 1 && offsize1 <= 4)) {
										throw haxe_Exception.thrown("Error");
									}
									var o8 = cff.cursor + offsize1 * count1;
									if(o8 > cff.data.get_length() || o8 < 0) {
										throw haxe_Exception.thrown("Error");
									}
									cff.cursor = o8 > cff.data.get_length() || o8 < 0 ? cff.data.get_length() : o8;
									var v26 = 0;
									if(!(offsize1 >= 1 && offsize1 <= 4)) {
										throw haxe_Exception.thrown("Error");
									}
									var _g20 = 0;
									var _g21 = offsize1;
									while(_g20 < _g21) {
										++_g20;
										var v27;
										if(cff.cursor >= cff.data.get_length()) {
											v27 = 0;
										} else {
											var pos44 = cff.cursor++;
											if(pos44 == null) {
												pos44 = 0;
											}
											v27 = cff.data.readU8(pos44);
										}
										v26 = v26 << 8 | v27;
									}
									var o9 = cff.cursor + (v26 - 1);
									if(o9 > cff.data.get_length() || o9 < 0) {
										throw haxe_Exception.thrown("Error");
									}
									cff.cursor = o9 > cff.data.get_length() || o9 < 0 ? cff.data.get_length() : o9;
									var s4 = cff.cursor - start4;
									var r9 = new kha_graphics2_truetype_Stbtt_$_$buf();
									r9.data = null;
									r9.cursor = 0;
									if(start4 < 0 || s4 < 0 || start4 > cff.data.get_length() || s4 > cff.data.get_length() - start4) {
										subrs = r9;
									} else {
										r9.data = cff.data.sub(start4,s4);
										subrs = r9;
									}
								} else {
									subrs = cff;
								}
							}
						}
					}
					has_subrs = true;
				}
			}
			if(sp < 1) {
				return false;
			}
			v = _g[--sp] | 0;
			if(subr_stack_height >= 10) {
				return false;
			}
			_g1[subr_stack_height++] = b;
			var idx = b0 == 10 ? subrs : info.gsubrs;
			var n = v;
			if(0 > idx.data.get_length()) {
				throw haxe_Exception.thrown("Error");
			}
			idx.cursor = 0 > idx.data.get_length() ? idx.data.get_length() : 0;
			var v28 = 0;
			var _g22 = 0;
			while(_g22 < 2) {
				++_g22;
				var v29;
				if(idx.cursor >= idx.data.get_length()) {
					v29 = 0;
				} else {
					var pos45 = idx.cursor++;
					if(pos45 == null) {
						pos45 = 0;
					}
					v29 = idx.data.readU8(pos45);
				}
				v28 = v28 << 8 | v29;
			}
			var count2 = v28;
			var bias = 107;
			if(count2 >= 33900) {
				bias = 32768;
			} else if(count2 >= 1240) {
				bias = 1131;
			}
			n = v + bias;
			if(n < 0 || n >= count2) {
				var r10 = new kha_graphics2_truetype_Stbtt_$_$buf();
				r10.data = null;
				r10.cursor = 0;
				b = r10;
			} else {
				if(0 > idx.data.get_length()) {
					throw haxe_Exception.thrown("Error");
				}
				idx.cursor = 0 > idx.data.get_length() ? idx.data.get_length() : 0;
				var v30 = 0;
				var _g23 = 0;
				while(_g23 < 2) {
					++_g23;
					var v31;
					if(idx.cursor >= idx.data.get_length()) {
						v31 = 0;
					} else {
						var pos46 = idx.cursor++;
						if(pos46 == null) {
							pos46 = 0;
						}
						v31 = idx.data.readU8(pos46);
					}
					v30 = v30 << 8 | v31;
				}
				var count3 = v30;
				var offsize2;
				if(idx.cursor >= idx.data.get_length()) {
					offsize2 = 0;
				} else {
					var pos47 = idx.cursor++;
					if(pos47 == null) {
						pos47 = 0;
					}
					offsize2 = idx.data.readU8(pos47);
				}
				if(!(n >= 0 && n < count3)) {
					throw haxe_Exception.thrown("Error");
				}
				if(!(offsize2 >= 1 && offsize2 <= 4)) {
					throw haxe_Exception.thrown("Error");
				}
				var o10 = idx.cursor + n * offsize2;
				if(o10 > idx.data.get_length() || o10 < 0) {
					throw haxe_Exception.thrown("Error");
				}
				idx.cursor = o10 > idx.data.get_length() || o10 < 0 ? idx.data.get_length() : o10;
				var v32 = 0;
				if(!(offsize2 >= 1 && offsize2 <= 4)) {
					throw haxe_Exception.thrown("Error");
				}
				var _g24 = 0;
				var _g25 = offsize2;
				while(_g24 < _g25) {
					++_g24;
					var v33;
					if(idx.cursor >= idx.data.get_length()) {
						v33 = 0;
					} else {
						var pos48 = idx.cursor++;
						if(pos48 == null) {
							pos48 = 0;
						}
						v33 = idx.data.readU8(pos48);
					}
					v32 = v32 << 8 | v33;
				}
				var start5 = v32;
				var v34 = 0;
				if(!(offsize2 >= 1 && offsize2 <= 4)) {
					throw haxe_Exception.thrown("Error");
				}
				var _g26 = 0;
				var _g27 = offsize2;
				while(_g26 < _g27) {
					++_g26;
					var v35;
					if(idx.cursor >= idx.data.get_length()) {
						v35 = 0;
					} else {
						var pos49 = idx.cursor++;
						if(pos49 == null) {
							pos49 = 0;
						}
						v35 = idx.data.readU8(pos49);
					}
					v34 = v34 << 8 | v35;
				}
				var o11 = 2 + (count3 + 1) * offsize2 + start5;
				var s5 = v34 - start5;
				var r11 = new kha_graphics2_truetype_Stbtt_$_$buf();
				r11.data = null;
				r11.cursor = 0;
				if(o11 < 0 || s5 < 0 || o11 > idx.data.get_length() || s5 > idx.data.get_length() - o11) {
					b = r11;
				} else {
					r11.data = idx.data.sub(o11,s5);
					b = r11;
				}
			}
			if(b.data.get_length() == 0) {
				return false;
			}
			b.cursor = 0;
			clear_stack = false;
			break;
		case 30:
			if(sp < 4) {
				return false;
			}
			while(i + 3 < sp) {
				var cx126 = c.x;
				var cy126 = c.y + _g[i];
				var cx213 = cx126 + _g[i + 1];
				var cy213 = cy126 + _g[i + 2];
				c.x = cx213 + _g[i + 3];
				c.y = cy213 + (sp - i == 5 ? _g[i + 4] : 0);
				var x27 = c.x | 0;
				var y27 = c.y | 0;
				var cx33 = cx126 | 0;
				var cy33 = cy126 | 0;
				var cx127 = cx213 | 0;
				var cy127 = cy213 | 0;
				if(c.bounds) {
					if(x27 > c.max_x || !c.started) {
						c.max_x = x27;
					}
					if(y27 > c.max_y || !c.started) {
						c.max_y = y27;
					}
					if(x27 < c.min_x || !c.started) {
						c.min_x = x27;
					}
					if(y27 < c.min_y || !c.started) {
						c.min_y = y27;
					}
					c.started = true;
					if(cx33 > c.max_x || !c.started) {
						c.max_x = cx33;
					}
					if(cy33 > c.max_y || !c.started) {
						c.max_y = cy33;
					}
					if(cx33 < c.min_x || !c.started) {
						c.min_x = cx33;
					}
					if(cy33 < c.min_y || !c.started) {
						c.min_y = cy33;
					}
					c.started = true;
					if(cx127 > c.max_x || !c.started) {
						c.max_x = cx127;
					}
					if(cy127 > c.max_y || !c.started) {
						c.max_y = cy127;
					}
					if(cx127 < c.min_x || !c.started) {
						c.min_x = cx127;
					}
					if(cy127 < c.min_y || !c.started) {
						c.min_y = cy127;
					}
					c.started = true;
				} else {
					kha_graphics2_truetype_StbTruetype.stbtt_setvertex(c.pvertices[c.num_vertices],4,x27,y27,cx33,cy33);
					c.pvertices[c.num_vertices].cx1 = js_Boot.__cast(cx127 , Int);
					c.pvertices[c.num_vertices].cy1 = js_Boot.__cast(cy127 , Int);
				}
				c.num_vertices++;
				i += 4;
				if(i + 3 >= sp) {
					break;
				}
				var cx128 = c.x + _g[i];
				var cy128 = c.y;
				var cx214 = cx128 + _g[i + 1];
				var cy214 = cy128 + _g[i + 2];
				c.x = cx214 + (sp - i == 5 ? _g[i + 4] : 0);
				c.y = cy214 + _g[i + 3];
				var x28 = c.x | 0;
				var y28 = c.y | 0;
				var cx34 = cx128 | 0;
				var cy34 = cy128 | 0;
				var cx129 = cx214 | 0;
				var cy129 = cy214 | 0;
				if(c.bounds) {
					if(x28 > c.max_x || !c.started) {
						c.max_x = x28;
					}
					if(y28 > c.max_y || !c.started) {
						c.max_y = y28;
					}
					if(x28 < c.min_x || !c.started) {
						c.min_x = x28;
					}
					if(y28 < c.min_y || !c.started) {
						c.min_y = y28;
					}
					c.started = true;
					if(cx34 > c.max_x || !c.started) {
						c.max_x = cx34;
					}
					if(cy34 > c.max_y || !c.started) {
						c.max_y = cy34;
					}
					if(cx34 < c.min_x || !c.started) {
						c.min_x = cx34;
					}
					if(cy34 < c.min_y || !c.started) {
						c.min_y = cy34;
					}
					c.started = true;
					if(cx129 > c.max_x || !c.started) {
						c.max_x = cx129;
					}
					if(cy129 > c.max_y || !c.started) {
						c.max_y = cy129;
					}
					if(cx129 < c.min_x || !c.started) {
						c.min_x = cx129;
					}
					if(cy129 < c.min_y || !c.started) {
						c.min_y = cy129;
					}
					c.started = true;
				} else {
					kha_graphics2_truetype_StbTruetype.stbtt_setvertex(c.pvertices[c.num_vertices],4,x28,y28,cx34,cy34);
					c.pvertices[c.num_vertices].cx1 = js_Boot.__cast(cx129 , Int);
					c.pvertices[c.num_vertices].cy1 = js_Boot.__cast(cy129 , Int);
				}
				c.num_vertices++;
				i += 4;
			}
			break;
		case 31:
			if(sp < 4) {
				return false;
			}
			while(i + 3 < sp) {
				var cx130 = c.x + _g[i];
				var cy130 = c.y;
				var cx215 = cx130 + _g[i + 1];
				var cy215 = cy130 + _g[i + 2];
				c.x = cx215 + (sp - i == 5 ? _g[i + 4] : 0);
				c.y = cy215 + _g[i + 3];
				var x29 = c.x | 0;
				var y29 = c.y | 0;
				var cx35 = cx130 | 0;
				var cy35 = cy130 | 0;
				var cx131 = cx215 | 0;
				var cy131 = cy215 | 0;
				if(c.bounds) {
					if(x29 > c.max_x || !c.started) {
						c.max_x = x29;
					}
					if(y29 > c.max_y || !c.started) {
						c.max_y = y29;
					}
					if(x29 < c.min_x || !c.started) {
						c.min_x = x29;
					}
					if(y29 < c.min_y || !c.started) {
						c.min_y = y29;
					}
					c.started = true;
					if(cx35 > c.max_x || !c.started) {
						c.max_x = cx35;
					}
					if(cy35 > c.max_y || !c.started) {
						c.max_y = cy35;
					}
					if(cx35 < c.min_x || !c.started) {
						c.min_x = cx35;
					}
					if(cy35 < c.min_y || !c.started) {
						c.min_y = cy35;
					}
					c.started = true;
					if(cx131 > c.max_x || !c.started) {
						c.max_x = cx131;
					}
					if(cy131 > c.max_y || !c.started) {
						c.max_y = cy131;
					}
					if(cx131 < c.min_x || !c.started) {
						c.min_x = cx131;
					}
					if(cy131 < c.min_y || !c.started) {
						c.min_y = cy131;
					}
					c.started = true;
				} else {
					kha_graphics2_truetype_StbTruetype.stbtt_setvertex(c.pvertices[c.num_vertices],4,x29,y29,cx35,cy35);
					c.pvertices[c.num_vertices].cx1 = js_Boot.__cast(cx131 , Int);
					c.pvertices[c.num_vertices].cy1 = js_Boot.__cast(cy131 , Int);
				}
				c.num_vertices++;
				i += 4;
				if(i + 3 >= sp) {
					break;
				}
				var cx132 = c.x;
				var cy132 = c.y + _g[i];
				var cx216 = cx132 + _g[i + 1];
				var cy216 = cy132 + _g[i + 2];
				c.x = cx216 + _g[i + 3];
				c.y = cy216 + (sp - i == 5 ? _g[i + 4] : 0);
				var x30 = c.x | 0;
				var y30 = c.y | 0;
				var cx36 = cx132 | 0;
				var cy36 = cy132 | 0;
				var cx133 = cx216 | 0;
				var cy133 = cy216 | 0;
				if(c.bounds) {
					if(x30 > c.max_x || !c.started) {
						c.max_x = x30;
					}
					if(y30 > c.max_y || !c.started) {
						c.max_y = y30;
					}
					if(x30 < c.min_x || !c.started) {
						c.min_x = x30;
					}
					if(y30 < c.min_y || !c.started) {
						c.min_y = y30;
					}
					c.started = true;
					if(cx36 > c.max_x || !c.started) {
						c.max_x = cx36;
					}
					if(cy36 > c.max_y || !c.started) {
						c.max_y = cy36;
					}
					if(cx36 < c.min_x || !c.started) {
						c.min_x = cx36;
					}
					if(cy36 < c.min_y || !c.started) {
						c.min_y = cy36;
					}
					c.started = true;
					if(cx133 > c.max_x || !c.started) {
						c.max_x = cx133;
					}
					if(cy133 > c.max_y || !c.started) {
						c.max_y = cy133;
					}
					if(cx133 < c.min_x || !c.started) {
						c.min_x = cx133;
					}
					if(cy133 < c.min_y || !c.started) {
						c.min_y = cy133;
					}
					c.started = true;
				} else {
					kha_graphics2_truetype_StbTruetype.stbtt_setvertex(c.pvertices[c.num_vertices],4,x30,y30,cx36,cy36);
					c.pvertices[c.num_vertices].cx1 = js_Boot.__cast(cx133 , Int);
					c.pvertices[c.num_vertices].cy1 = js_Boot.__cast(cy133 , Int);
				}
				c.num_vertices++;
				i += 4;
			}
			break;
		default:
			if(b0 != 255 && b0 != 28 && (b0 < 32 || b0 > 254)) {
				return false;
			}
			if(b0 == 255) {
				var v36 = 0;
				var _g28 = 0;
				while(_g28 < 4) {
					++_g28;
					var v37;
					if(b.cursor >= b.data.get_length()) {
						v37 = 0;
					} else {
						var pos50 = b.cursor++;
						if(pos50 == null) {
							pos50 = 0;
						}
						v37 = b.data.readU8(pos50);
					}
					v36 = v36 << 8 | v37;
				}
				f = v36 / 65536;
			} else {
				var o12 = b.cursor + (-1);
				if(o12 > b.data.get_length() || o12 < 0) {
					throw haxe_Exception.thrown("Error");
				}
				b.cursor = o12 > b.data.get_length() || o12 < 0 ? b.data.get_length() : o12;
				var b07;
				if(b.cursor >= b.data.get_length()) {
					b07 = 0;
				} else {
					var pos51 = b.cursor++;
					if(pos51 == null) {
						pos51 = 0;
					}
					b07 = b.data.readU8(pos51);
				}
				if(b07 >= 32 && b07 <= 246) {
					f = b07 - 139;
				} else if(b07 >= 247 && b07 <= 250) {
					var f1;
					if(b.cursor >= b.data.get_length()) {
						f1 = 0;
					} else {
						var pos52 = b.cursor++;
						if(pos52 == null) {
							pos52 = 0;
						}
						f1 = b.data.readU8(pos52);
					}
					f = (b07 - 247) * 256 + f1 + 108;
				} else if(b07 >= 251 && b07 <= 254) {
					var f2;
					if(b.cursor >= b.data.get_length()) {
						f2 = 0;
					} else {
						var pos53 = b.cursor++;
						if(pos53 == null) {
							pos53 = 0;
						}
						f2 = b.data.readU8(pos53);
					}
					f = -(b07 - 251) * 256 - f2 - 108;
				} else if(b07 == 28) {
					var v38 = 0;
					var _g29 = 0;
					while(_g29 < 2) {
						++_g29;
						var v39;
						if(b.cursor >= b.data.get_length()) {
							v39 = 0;
						} else {
							var pos54 = b.cursor++;
							if(pos54 == null) {
								pos54 = 0;
							}
							v39 = b.data.readU8(pos54);
						}
						v38 = v38 << 8 | v39;
					}
					f = v38;
				} else if(b07 == 29) {
					var v40 = 0;
					var _g30 = 0;
					while(_g30 < 4) {
						++_g30;
						var v41;
						if(b.cursor >= b.data.get_length()) {
							v41 = 0;
						} else {
							var pos55 = b.cursor++;
							if(pos55 == null) {
								pos55 = 0;
							}
							v41 = b.data.readU8(pos55);
						}
						v40 = v40 << 8 | v41;
					}
					f = v40;
				} else {
					throw haxe_Exception.thrown("Error");
				}
			}
			if(sp >= 48) {
				return false;
			}
			_g[sp++] = f;
			clear_stack = false;
		}
		if(clear_stack) {
			sp = 0;
		}
	}
	return false;
};
kha_graphics2_truetype_StbTruetype.stbtt__GetGlyphShapeT2 = function(info,glyph_index) {
	var tmp = new kha_graphics2_truetype_Stbtt_$_$csctx();
	tmp.bounds = true;
	tmp.started = false;
	tmp.first_x = 0;
	tmp.first_y = 0;
	tmp.x = 0;
	tmp.y = 0;
	tmp.min_x = 0;
	tmp.min_y = 0;
	tmp.max_x = 0;
	tmp.max_y = 0;
	tmp.pvertices = null;
	tmp.num_vertices = 0;
	var tmp1 = new kha_graphics2_truetype_Stbtt_$_$csctx();
	tmp1.bounds = false;
	tmp1.started = false;
	tmp1.first_x = 0;
	tmp1.first_y = 0;
	tmp1.x = 0;
	tmp1.y = 0;
	tmp1.min_x = 0;
	tmp1.min_y = 0;
	tmp1.max_x = 0;
	tmp1.max_y = 0;
	tmp1.pvertices = null;
	tmp1.num_vertices = 0;
	if(kha_graphics2_truetype_StbTruetype.stbtt__run_charstring(info,glyph_index,tmp)) {
		tmp1.pvertices = new Array(tmp.num_vertices);
		var _g = 0;
		var _g1 = tmp.num_vertices;
		while(_g < _g1) tmp1.pvertices[_g++] = new kha_graphics2_truetype_Stbtt_$vertex();
		if(kha_graphics2_truetype_StbTruetype.stbtt__run_charstring(info,glyph_index,tmp1)) {
			if(tmp1.num_vertices != tmp.num_vertices) {
				throw haxe_Exception.thrown("Error");
			}
			return tmp1.pvertices;
		}
	}
	return null;
};
kha_graphics2_truetype_StbTruetype.stbtt__GetGlyphInfoT2 = function(info,glyph_index,rect) {
	var tmp = new kha_graphics2_truetype_Stbtt_$_$csctx();
	tmp.bounds = true;
	tmp.started = false;
	tmp.first_x = 0;
	tmp.first_y = 0;
	tmp.x = 0;
	tmp.y = 0;
	tmp.min_x = 0;
	tmp.min_y = 0;
	tmp.max_x = 0;
	tmp.max_y = 0;
	tmp.pvertices = null;
	tmp.num_vertices = 0;
	var r = kha_graphics2_truetype_StbTruetype.stbtt__run_charstring(info,glyph_index,tmp);
	if(rect != null) {
		rect.x0 = r ? tmp.min_x : 0;
		rect.y0 = r ? tmp.min_y : 0;
		rect.x1 = r ? tmp.max_x : 0;
		rect.y1 = r ? tmp.max_y : 0;
	}
	if(r) {
		return tmp.num_vertices;
	} else {
		return 0;
	}
};
kha_graphics2_truetype_StbTruetype.stbtt_GetGlyphShape = function(info,glyph_index) {
	if(info.cff.data == null || info.cff.data.get_length() == 0) {
		return kha_graphics2_truetype_StbTruetype.stbtt__GetGlyphShapeTT(info,glyph_index);
	} else {
		return kha_graphics2_truetype_StbTruetype.stbtt__GetGlyphShapeT2(info,glyph_index);
	}
};
kha_graphics2_truetype_StbTruetype.stbtt_GetGlyphHMetrics = function(info,glyph_index) {
	var p = info.data;
	var pos = info.hhea + 34;
	if(pos == null) {
		pos = 0;
	}
	var ch1 = p.readU8(pos);
	var numOfLongHorMetrics = p.readU8(pos + 1) | ch1 << 8;
	var metrics = new kha_graphics2_truetype_Stbtt_$temp_$glyph_$h_$metrics();
	if(glyph_index < numOfLongHorMetrics) {
		var p = info.data;
		var pos = info.hmtx + 4 * glyph_index;
		if(pos == null) {
			pos = 0;
		}
		var ch1 = p.readU8(pos);
		var n = p.readU8(pos + 1) | ch1 << 8;
		metrics.advanceWidth = (n & 32768) != 0 ? n - 65536 : n;
		var p = info.data;
		var pos = info.hmtx + 4 * glyph_index + 2;
		if(pos == null) {
			pos = 0;
		}
		var ch1 = p.readU8(pos);
		var n = p.readU8(pos + 1) | ch1 << 8;
		metrics.leftSideBearing = (n & 32768) != 0 ? n - 65536 : n;
	} else {
		var p = info.data;
		var pos = info.hmtx + 4 * (numOfLongHorMetrics - 1);
		if(pos == null) {
			pos = 0;
		}
		var ch1 = p.readU8(pos);
		var n = p.readU8(pos + 1) | ch1 << 8;
		metrics.advanceWidth = (n & 32768) != 0 ? n - 65536 : n;
		var p = info.data;
		var pos = info.hmtx + 4 * numOfLongHorMetrics + 2 * (glyph_index - numOfLongHorMetrics);
		if(pos == null) {
			pos = 0;
		}
		var ch1 = p.readU8(pos);
		var n = p.readU8(pos + 1) | ch1 << 8;
		metrics.leftSideBearing = (n & 32768) != 0 ? n - 65536 : n;
	}
	return metrics;
};
kha_graphics2_truetype_StbTruetype.stbtt_GetFontVMetrics = function(info) {
	var metrics = new kha_graphics2_truetype_Stbtt_$temp_$font_$v_$metrics();
	var p = info.data;
	var pos = info.hhea + 4;
	if(pos == null) {
		pos = 0;
	}
	var ch1 = p.readU8(pos);
	var n = p.readU8(pos + 1) | ch1 << 8;
	metrics.ascent = (n & 32768) != 0 ? n - 65536 : n;
	var p = info.data;
	var pos = info.hhea + 6;
	if(pos == null) {
		pos = 0;
	}
	var ch1 = p.readU8(pos);
	var n = p.readU8(pos + 1) | ch1 << 8;
	metrics.descent = (n & 32768) != 0 ? n - 65536 : n;
	var p = info.data;
	var pos = info.hhea + 8;
	if(pos == null) {
		pos = 0;
	}
	var ch1 = p.readU8(pos);
	var n = p.readU8(pos + 1) | ch1 << 8;
	metrics.lineGap = (n & 32768) != 0 ? n - 65536 : n;
	return metrics;
};
kha_graphics2_truetype_StbTruetype.stbtt_ScaleForPixelHeight = function(info,height) {
	var p = info.data;
	var pos = info.hhea + 4;
	if(pos == null) {
		pos = 0;
	}
	var ch1 = p.readU8(pos);
	var n = p.readU8(pos + 1) | ch1 << 8;
	var p = info.data;
	var pos = info.hhea + 6;
	if(pos == null) {
		pos = 0;
	}
	var ch1 = p.readU8(pos);
	var n1 = p.readU8(pos + 1) | ch1 << 8;
	return height / (((n & 32768) != 0 ? n - 65536 : n) - ((n1 & 32768) != 0 ? n1 - 65536 : n1));
};
kha_graphics2_truetype_StbTruetype.stbtt_GetGlyphBitmapBoxSubpixel = function(font,glyph,scale_x,scale_y,shift_x,shift_y) {
	var rect = new kha_graphics2_truetype_Stbtt_$temp_$rect();
	if(!kha_graphics2_truetype_StbTruetype.stbtt_GetGlyphBox(font,glyph,rect)) {
		rect.x0 = 0;
		rect.y0 = 0;
		rect.x1 = 0;
		rect.y1 = 0;
	} else {
		var y0 = rect.y0;
		rect.x0 = Math.floor(rect.x0 * scale_x + shift_x);
		rect.y0 = Math.floor(-rect.y1 * scale_y + shift_y);
		rect.x1 = Math.ceil(rect.x1 * scale_x + shift_x);
		rect.y1 = Math.ceil(-y0 * scale_y + shift_y);
	}
	return rect;
};
kha_graphics2_truetype_StbTruetype.stbtt_GetGlyphBitmapBox = function(font,glyph,scale_x,scale_y) {
	return kha_graphics2_truetype_StbTruetype.stbtt_GetGlyphBitmapBoxSubpixel(font,glyph,scale_x,scale_y,0.0,0.0);
};
kha_graphics2_truetype_StbTruetype.stbtt__new_active = function(e,eIndex,off_x,start_point) {
	var z = new kha_graphics2_truetype_Stbtt_$_$active_$edge();
	var dxdy = (e[eIndex].x1 - e[eIndex].x0) / (e[eIndex].y1 - e[eIndex].y0);
	if(z == null) {
		throw haxe_Exception.thrown("Error");
	}
	if(z == null) {
		return z;
	}
	z.fdx = dxdy;
	z.fdy = dxdy != 0.0 ? 1.0 / dxdy : 0.0;
	z.fx = e[eIndex].x0 + dxdy * (start_point - e[eIndex].y0);
	z.fx -= off_x;
	z.direction = e[eIndex].invert ? 1.0 : -1.0;
	z.sy = e[eIndex].y0;
	z.ey = e[eIndex].y1;
	z.next = null;
	return z;
};
kha_graphics2_truetype_StbTruetype.stbtt__handle_clipped_edge = function(scanline,scanlineIndex,x,e,x0,y0,x1,y1) {
	if(y0 == y1) {
		return;
	}
	if(!(y0 < y1)) {
		throw haxe_Exception.thrown("Error");
	}
	if(!(e.sy <= e.ey)) {
		throw haxe_Exception.thrown("Error");
	}
	if(y0 > e.ey) {
		return;
	}
	if(y1 < e.sy) {
		return;
	}
	if(y0 < e.sy) {
		x0 += (x1 - x0) * (e.sy - y0) / (y1 - y0);
		y0 = e.sy;
	}
	if(y1 > e.ey) {
		x1 += (x1 - x0) * (e.ey - y1) / (y1 - y0);
		y1 = e.ey;
	}
	if(x0 == x) {
		if(!(x1 <= x + 1)) {
			throw haxe_Exception.thrown("Error");
		}
	} else if(x0 == x + 1) {
		if(!(x1 >= x)) {
			throw haxe_Exception.thrown("Error");
		}
	} else if(x0 <= x) {
		if(!(x1 <= x)) {
			throw haxe_Exception.thrown("Error");
		}
	} else if(x0 >= x + 1) {
		if(!(x1 >= x + 1)) {
			throw haxe_Exception.thrown("Error");
		}
	} else if(!(x1 >= x && x1 <= x + 1)) {
		throw haxe_Exception.thrown("Error");
	}
	if(x0 <= x && x1 <= x) {
		scanline[scanlineIndex + x] += e.direction * (y1 - y0);
	} else if(!(x0 >= x + 1 && x1 >= x + 1)) {
		if(!(x0 >= x && x0 <= x + 1 && x1 >= x && x1 <= x + 1)) {
			throw haxe_Exception.thrown("Error");
		}
		scanline[scanlineIndex + x] += e.direction * (y1 - y0) * (1 - (x0 - x + (x1 - x)) / 2);
	}
};
kha_graphics2_truetype_StbTruetype.stbtt__fill_active_edges_new = function(scanline,scanline_fill,scanline_fillIndex,len,e,y_top) {
	var y_bottom = y_top + 1;
	while(e != null) {
		if(!(e.ey >= y_top)) {
			throw haxe_Exception.thrown("Error");
		}
		if(e.fdx == 0) {
			var x0 = e.fx;
			if(x0 < len) {
				if(x0 >= 0) {
					kha_graphics2_truetype_StbTruetype.stbtt__handle_clipped_edge(scanline,0,x0 | 0,e,x0,y_top,x0,y_bottom);
					kha_graphics2_truetype_StbTruetype.stbtt__handle_clipped_edge(scanline_fill,scanline_fillIndex - 1,x0 + 1 | 0,e,x0,y_top,x0,y_bottom);
				} else {
					kha_graphics2_truetype_StbTruetype.stbtt__handle_clipped_edge(scanline_fill,scanline_fillIndex - 1,0,e,x0,y_top,x0,y_bottom);
				}
			}
		} else {
			var x01 = e.fx;
			var dx = e.fdx;
			var xb = x01 + dx;
			var x_top;
			var x_bottom;
			var sy0;
			var sy1;
			var dy = e.fdy;
			if(!(e.sy <= y_bottom && e.ey >= y_top)) {
				throw haxe_Exception.thrown("Error");
			}
			if(e.sy > y_top) {
				x_top = x01 + dx * (e.sy - y_top);
				sy0 = e.sy;
			} else {
				x_top = x01;
				sy0 = y_top;
			}
			if(e.ey < y_bottom) {
				x_bottom = x01 + dx * (e.ey - y_top);
				sy1 = e.ey;
			} else {
				x_bottom = xb;
				sy1 = y_bottom;
			}
			if(x_top >= 0 && x_bottom >= 0 && x_top < len && x_bottom < len) {
				if((x_top | 0) == (x_bottom | 0)) {
					var x = x_top | 0;
					var height = sy1 - sy0;
					if(!(x >= 0 && x < len)) {
						throw haxe_Exception.thrown("Error");
					}
					scanline[x] += e.direction * (1 - (x_top - x + (x_bottom - x)) / 2) * height;
					scanline_fill[scanline_fillIndex + x] += e.direction * height;
				} else {
					if(x_top > x_bottom) {
						sy0 = y_bottom - (sy0 - y_top);
						sy1 = y_bottom - (sy1 - y_top);
						var t = sy0;
						sy0 = sy1;
						sy1 = t;
						t = x_bottom;
						x_bottom = x_top;
						x_top = t;
						dx = -dx;
						dy = -dy;
						t = x01;
						x01 = xb;
						xb = t;
					}
					var x1 = x_top | 0;
					var x2 = x_bottom | 0;
					var y_crossing = (x1 + 1 - x01) * dy + y_top;
					var sign = e.direction;
					var area = sign * (y_crossing - sy0);
					scanline[x1] += area * (1 - (x_top - x1 + (x1 + 1 - x1)) / 2);
					var step = sign * dy;
					var _g = x1 + 1;
					while(_g < x2) {
						scanline[_g++] += area + step / 2;
						area += step;
					}
					y_crossing += dy * (x2 - (x1 + 1));
					if(!(Math.abs(area) <= 1.01)) {
						throw haxe_Exception.thrown("Error");
					}
					scanline[x2] += area + sign * (1 - (x2 - x2 + (x_bottom - x2)) / 2) * (sy1 - y_crossing);
					scanline_fill[scanline_fillIndex + x2] += sign * (sy1 - sy0);
				}
			} else {
				var _g1 = 0;
				while(_g1 < len) {
					var x3 = _g1++;
					var x11 = x3;
					var x21 = x3 + 1;
					var x31 = xb;
					var y1 = (x3 - x01) / dx + y_top;
					var y2 = (x3 + 1 - x01) / dx + y_top;
					if(x01 < x11 && x31 > x21) {
						kha_graphics2_truetype_StbTruetype.stbtt__handle_clipped_edge(scanline,0,x3,e,x01,y_top,x11,y1);
						kha_graphics2_truetype_StbTruetype.stbtt__handle_clipped_edge(scanline,0,x3,e,x11,y1,x21,y2);
						kha_graphics2_truetype_StbTruetype.stbtt__handle_clipped_edge(scanline,0,x3,e,x21,y2,x31,y_bottom);
					} else if(x31 < x11 && x01 > x21) {
						kha_graphics2_truetype_StbTruetype.stbtt__handle_clipped_edge(scanline,0,x3,e,x01,y_top,x21,y2);
						kha_graphics2_truetype_StbTruetype.stbtt__handle_clipped_edge(scanline,0,x3,e,x21,y2,x11,y1);
						kha_graphics2_truetype_StbTruetype.stbtt__handle_clipped_edge(scanline,0,x3,e,x11,y1,x31,y_bottom);
					} else if(x01 < x11 && x31 > x11) {
						kha_graphics2_truetype_StbTruetype.stbtt__handle_clipped_edge(scanline,0,x3,e,x01,y_top,x11,y1);
						kha_graphics2_truetype_StbTruetype.stbtt__handle_clipped_edge(scanline,0,x3,e,x11,y1,x31,y_bottom);
					} else if(x31 < x11 && x01 > x11) {
						kha_graphics2_truetype_StbTruetype.stbtt__handle_clipped_edge(scanline,0,x3,e,x01,y_top,x11,y1);
						kha_graphics2_truetype_StbTruetype.stbtt__handle_clipped_edge(scanline,0,x3,e,x11,y1,x31,y_bottom);
					} else if(x01 < x21 && x31 > x21) {
						kha_graphics2_truetype_StbTruetype.stbtt__handle_clipped_edge(scanline,0,x3,e,x01,y_top,x21,y2);
						kha_graphics2_truetype_StbTruetype.stbtt__handle_clipped_edge(scanline,0,x3,e,x21,y2,x31,y_bottom);
					} else if(x31 < x21 && x01 > x21) {
						kha_graphics2_truetype_StbTruetype.stbtt__handle_clipped_edge(scanline,0,x3,e,x01,y_top,x21,y2);
						kha_graphics2_truetype_StbTruetype.stbtt__handle_clipped_edge(scanline,0,x3,e,x21,y2,x31,y_bottom);
					} else {
						kha_graphics2_truetype_StbTruetype.stbtt__handle_clipped_edge(scanline,0,x3,e,x01,y_top,x31,y_bottom);
					}
				}
			}
		}
		e = e.next;
	}
};
kha_graphics2_truetype_StbTruetype.stbtt__rasterize_sorted_edges = function(result,e,n,vsubsample,off_x,off_y) {
	var active = null;
	var j = 0;
	var scanline;
	var scanline2Index = 0;
	var eIndex = 0;
	if(result.w > 64) {
		scanline = new Array(result.w * 2 + 1);
	} else {
		scanline = new Array(129);
	}
	var scanline2 = scanline;
	scanline2Index = result.w;
	var y = off_y;
	e[n].y0 = off_y + result.h + 1;
	while(j < result.h) {
		var scan_y_top = y + 0.0;
		var scan_y_bottom = y + 1.0;
		var step_value = active;
		var step_parent = null;
		var _g = 0;
		var _g1 = result.w;
		while(_g < _g1) scanline[_g++] = 0;
		var _g2 = 0;
		var _g3 = result.w + 1;
		while(_g2 < _g3) scanline2[scanline2Index + _g2++] = 0;
		while(step_value != null) {
			var z = step_value;
			if(z.ey <= scan_y_top) {
				if(step_parent == null) {
					active = z.next;
					step_value = z.next;
				} else {
					step_parent.next = z.next;
					step_value = z.next;
				}
				if(z.direction == 0) {
					throw haxe_Exception.thrown("Error");
				}
				z.direction = 0;
			} else {
				step_parent = step_value;
				step_value = step_value.next;
			}
		}
		while(e[eIndex].y0 <= scan_y_bottom) {
			if(e[eIndex].y0 != e[eIndex].y1) {
				var z1 = kha_graphics2_truetype_StbTruetype.stbtt__new_active(e,eIndex,off_x,scan_y_top);
				if(!(z1.ey >= scan_y_top)) {
					throw haxe_Exception.thrown("Error");
				}
				if(z1 != null) {
					if(j == 0 && off_y != 0) {
						if(z1.ey < scan_y_top) {
							z1.ey = scan_y_top;
						}
					}
					if(!(z1.ey >= scan_y_top)) {
						throw haxe_Exception.thrown("Error");
					}
				}
				z1.next = active;
				active = z1;
			}
			++eIndex;
		}
		if(active != null) {
			kha_graphics2_truetype_StbTruetype.stbtt__fill_active_edges_new(scanline,scanline2,scanline2Index + 1,result.w,active,scan_y_top);
		}
		var sum = 0;
		var _g4 = 0;
		var _g5 = result.w;
		while(_g4 < _g5) {
			var i = _g4++;
			sum += scanline2[scanline2Index + i];
			var k = scanline[i] + sum;
			k = Math.abs(k) * 255.0 + 0.5;
			var m = k | 0;
			if(m > 255) {
				m = 255;
			}
			result.pixels.writeU8(result.pixels_offset + j * result.stride + i,m);
		}
		step_parent = null;
		step_value = active;
		while(step_value != null) {
			var z2 = step_value;
			z2.fx += z2.fdx;
			step_parent = step_value;
			step_value = step_value.next;
		}
		++y;
		++j;
	}
};
kha_graphics2_truetype_StbTruetype.STBTT__COMPARE = function(a,b) {
	return a.y0 < b.y0;
};
kha_graphics2_truetype_StbTruetype.stbtt__sort_edges_ins_sort = function(p,n) {
	var j;
	var _g = 1;
	while(_g < n) {
		var i = _g++;
		var t = p[i];
		j = i;
		while(j > 0) {
			if(!kha_graphics2_truetype_StbTruetype.STBTT__COMPARE(t,p[j - 1])) {
				break;
			}
			p[j] = p[j - 1];
			--j;
		}
		if(i != j) {
			p[j] = t;
		}
	}
};
kha_graphics2_truetype_StbTruetype.stbtt__sort_edges_quicksort = function(p,pIndex,n) {
	while(n > 12) {
		var t;
		var c;
		var m = n >> 1;
		var c12 = kha_graphics2_truetype_StbTruetype.STBTT__COMPARE(p[pIndex + m],p[pIndex + n - 1]);
		if(kha_graphics2_truetype_StbTruetype.STBTT__COMPARE(p[pIndex],p[pIndex + m]) != c12) {
			c = kha_graphics2_truetype_StbTruetype.STBTT__COMPARE(p[pIndex],p[pIndex + n - 1]);
			var z = c == c12 ? 0 : n - 1;
			t = p[pIndex + z];
			p[pIndex + z] = p[pIndex + m];
			p[pIndex + m] = t;
		}
		t = p[pIndex];
		p[pIndex] = p[pIndex + m];
		p[pIndex + m] = t;
		var i = 1;
		var j = n - 1;
		while(true) {
			while(kha_graphics2_truetype_StbTruetype.STBTT__COMPARE(p[pIndex + i],p[pIndex])) ++i;
			while(kha_graphics2_truetype_StbTruetype.STBTT__COMPARE(p[pIndex],p[pIndex + j])) --j;
			if(i >= j) {
				break;
			}
			t = p[pIndex + i];
			p[pIndex + i] = p[pIndex + j];
			p[pIndex + j] = t;
			++i;
			--j;
		}
		if(j < n - i) {
			kha_graphics2_truetype_StbTruetype.stbtt__sort_edges_quicksort(p,pIndex,j);
			pIndex += i;
			n -= i;
		} else {
			kha_graphics2_truetype_StbTruetype.stbtt__sort_edges_quicksort(p,pIndex + i,n - i);
			n = j;
		}
	}
};
kha_graphics2_truetype_StbTruetype.stbtt__sort_edges = function(p,n) {
	kha_graphics2_truetype_StbTruetype.stbtt__sort_edges_quicksort(p,0,n);
	kha_graphics2_truetype_StbTruetype.stbtt__sort_edges_ins_sort(p,n);
};
kha_graphics2_truetype_StbTruetype.stbtt__rasterize = function(result,pts,wcount,windings,scale_x,scale_y,shift_x,shift_y,off_x,off_y,invert) {
	var y_scale_inv = invert ? -scale_y : scale_y;
	var j;
	var n = 0;
	var _g = 0;
	while(_g < windings) n += wcount[_g++];
	var e = new Array(n + 1);
	if(e == null) {
		return;
	} else {
		var _g = 0;
		var _g1 = e.length;
		while(_g < _g1) e[_g++] = new kha_graphics2_truetype_Stbtt_$_$edge();
	}
	n = 0;
	var m = 0;
	var _g = 0;
	while(_g < windings) {
		var i = _g++;
		var pIndex = m;
		m += wcount[i];
		j = wcount[i] - 1;
		var _g1 = 0;
		var _g2 = wcount[i];
		while(_g1 < _g2) {
			var k = _g1++;
			var a = k;
			var b = j;
			if(pts[pIndex + j].y == pts[pIndex + k].y) {
				j = k;
				continue;
			}
			e[n].invert = false;
			if(invert ? pts[pIndex + j].y > pts[pIndex + k].y : pts[pIndex + j].y < pts[pIndex + k].y) {
				e[n].invert = true;
				a = j;
				b = k;
			}
			e[n].x0 = pts[pIndex + a].x * scale_x + shift_x;
			e[n].y0 = pts[pIndex + a].y * y_scale_inv + shift_y;
			e[n].x1 = pts[pIndex + b].x * scale_x + shift_x;
			e[n].y1 = pts[pIndex + b].y * y_scale_inv + shift_y;
			++n;
			j = k;
		}
	}
	kha_graphics2_truetype_StbTruetype.stbtt__sort_edges(e,n);
	kha_graphics2_truetype_StbTruetype.stbtt__rasterize_sorted_edges(result,e,n,1,off_x,off_y);
};
kha_graphics2_truetype_StbTruetype.stbtt__add_point = function(points,n,x,y) {
	if(points == null) {
		return;
	}
	points[n].x = x;
	points[n].y = y;
};
kha_graphics2_truetype_StbTruetype.stbtt__tesselate_curve = function(points,num_points,x0,y0,x1,y1,x2,y2,objspace_flatness_squared,n) {
	var mx = (x0 + 2 * x1 + x2) / 4;
	var my = (y0 + 2 * y1 + y2) / 4;
	var dx = (x0 + x2) / 2 - mx;
	var dy = (y0 + y2) / 2 - my;
	if(n > 16) {
		return 1;
	}
	if(dx * dx + dy * dy > objspace_flatness_squared) {
		kha_graphics2_truetype_StbTruetype.stbtt__tesselate_curve(points,num_points,x0,y0,(x0 + x1) / 2.0,(y0 + y1) / 2.0,mx,my,objspace_flatness_squared,n + 1);
		kha_graphics2_truetype_StbTruetype.stbtt__tesselate_curve(points,num_points,mx,my,(x1 + x2) / 2.0,(y1 + y2) / 2.0,x2,y2,objspace_flatness_squared,n + 1);
	} else {
		kha_graphics2_truetype_StbTruetype.stbtt__add_point(points,num_points.value,x2,y2);
		num_points.value += 1;
	}
	return 1;
};
kha_graphics2_truetype_StbTruetype.stbtt__tesselate_cubic = function(points,num_points,x0,y0,x1,y1,x2,y2,x3,y3,objspace_flatness_squared,n) {
	while(true) {
		var dx0 = x1 - x0;
		var dy0 = y1 - y0;
		var dx1 = x2 - x1;
		var dy1 = y2 - y1;
		var dx2 = x3 - x2;
		var dy2 = y3 - y2;
		var dx = x3 - x0;
		var dy = y3 - y0;
		var longlen = Math.sqrt(dx0 * dx0 + dy0 * dy0) + Math.sqrt(dx1 * dx1 + dy1 * dy1) + Math.sqrt(dx2 * dx2 + dy2 * dy2);
		var shortlen = Math.sqrt(dx * dx + dy * dy);
		if(n > 16) {
			return;
		}
		if(longlen * longlen - shortlen * shortlen > objspace_flatness_squared) {
			var x01 = (x0 + x1) / 2;
			var y01 = (y0 + y1) / 2;
			var x12 = (x1 + x2) / 2;
			var y12 = (y1 + y2) / 2;
			var x23 = (x2 + x3) / 2;
			var y23 = (y2 + y3) / 2;
			var xa = (x01 + x12) / 2;
			var ya = (y01 + y12) / 2;
			var xb = (x12 + x23) / 2;
			var yb = (y12 + y23) / 2;
			var mx = (xa + xb) / 2;
			var my = (ya + yb) / 2;
			kha_graphics2_truetype_StbTruetype.stbtt__tesselate_cubic(points,num_points,x0,y0,x01,y01,xa,ya,mx,my,objspace_flatness_squared,n + 1);
			x0 = mx;
			y0 = my;
			x1 = xb;
			y1 = yb;
			x2 = x23;
			y2 = y23;
			n += 1;
			continue;
		} else {
			kha_graphics2_truetype_StbTruetype.stbtt__add_point(points,num_points.value,x3,y3);
			num_points.value += 1;
		}
		return;
	}
};
kha_graphics2_truetype_StbTruetype.stbtt_FlattenCurves = function(vertices,num_verts,objspace_flatness,contour_lengths,num_contours) {
	var points = null;
	var num_points = 0;
	var objspace_flatness_squared = objspace_flatness * objspace_flatness;
	var n = 0;
	var start = 0;
	var _g = 0;
	while(_g < num_verts) if(vertices[_g++].type == 1) {
		++n;
	}
	num_contours.value = n;
	if(n == 0) {
		return null;
	}
	contour_lengths.value = new Array(n);
	if(contour_lengths.value == null) {
		num_contours.value = 0;
		return null;
	}
	var _g = 0;
	while(_g < 2) {
		var x = 0;
		var y = 0;
		if(_g++ == 1) {
			points = new Array(num_points);
			if(points == null) {
				contour_lengths.value = null;
				num_contours.value = 0;
				return null;
			} else {
				var _g1 = 0;
				var _g2 = points.length;
				while(_g1 < _g2) points[_g1++] = new kha_graphics2_truetype_Stbtt_$_$point();
			}
		}
		num_points = 0;
		n = -1;
		var _g3 = 0;
		while(_g3 < num_verts) {
			var i = _g3++;
			switch(vertices[i].type) {
			case 1:
				if(n >= 0) {
					contour_lengths.value[n] = num_points - start;
				}
				++n;
				start = num_points;
				x = vertices[i].x;
				y = vertices[i].y;
				kha_graphics2_truetype_StbTruetype.stbtt__add_point(points,num_points++,x,y);
				break;
			case 2:
				x = vertices[i].x;
				y = vertices[i].y;
				kha_graphics2_truetype_StbTruetype.stbtt__add_point(points,num_points++,x,y);
				break;
			case 3:
				var num_points_reference = { value : num_points};
				kha_graphics2_truetype_StbTruetype.stbtt__tesselate_curve(points,num_points_reference,x,y,vertices[i].cx,vertices[i].cy,vertices[i].x,vertices[i].y,objspace_flatness_squared,0);
				num_points = num_points_reference.value;
				x = vertices[i].x;
				y = vertices[i].y;
				break;
			case 4:
				var num_points_reference1 = { value : num_points};
				kha_graphics2_truetype_StbTruetype.stbtt__tesselate_cubic(points,num_points_reference1,x,y,vertices[i].cx,vertices[i].cy,vertices[i].cx1,vertices[i].cy1,vertices[i].x,vertices[i].y,objspace_flatness_squared,0);
				num_points = num_points_reference1.value;
				x = vertices[i].x;
				y = vertices[i].y;
				break;
			}
		}
		contour_lengths.value[n] = num_points - start;
	}
	return points;
};
kha_graphics2_truetype_StbTruetype.stbtt_Rasterize = function(result,flatness_in_pixels,vertices,num_verts,scale_x,scale_y,shift_x,shift_y,x_off,y_off,invert) {
	var winding_count = 0;
	var winding_lengths = null;
	var winding_count_reference = { value : 0};
	var winding_lengths_reference = new kha_graphics2_truetype_VectorOfIntPointer();
	var windings = kha_graphics2_truetype_StbTruetype.stbtt_FlattenCurves(vertices,num_verts,flatness_in_pixels / (scale_x > scale_y ? scale_y : scale_x),winding_lengths_reference,winding_count_reference);
	winding_count = winding_count_reference.value;
	winding_lengths = winding_lengths_reference.value;
	if(windings != null) {
		kha_graphics2_truetype_StbTruetype.stbtt__rasterize(result,windings,winding_lengths,winding_count,scale_x,scale_y,shift_x,shift_y,x_off,y_off,invert);
	}
};
kha_graphics2_truetype_StbTruetype.stbtt_MakeGlyphBitmapSubpixel = function(info,output,output_offset,out_w,out_h,out_stride,scale_x,scale_y,shift_x,shift_y,glyph) {
	var ix0 = 0;
	var iy0 = 0;
	var vertices = kha_graphics2_truetype_StbTruetype.stbtt_GetGlyphShape(info,glyph);
	var num_verts = vertices == null ? 0 : vertices.length;
	var gbm = new kha_graphics2_truetype_Stbtt_$_$bitmap();
	var rect = kha_graphics2_truetype_StbTruetype.stbtt_GetGlyphBitmapBoxSubpixel(info,glyph,scale_x,scale_y,shift_x,shift_y);
	ix0 = rect.x0;
	iy0 = rect.y0;
	gbm.pixels = output;
	gbm.pixels_offset = output_offset;
	gbm.w = out_w;
	gbm.h = out_h;
	gbm.stride = out_stride;
	if(gbm.w != 0 && gbm.h != 0) {
		kha_graphics2_truetype_StbTruetype.stbtt_Rasterize(gbm,0.35,vertices,num_verts,scale_x,scale_y,shift_x,shift_y,ix0,iy0,true);
	}
};
kha_graphics2_truetype_StbTruetype.stbtt_MakeGlyphBitmap = function(info,output,output_offset,out_w,out_h,out_stride,scale_x,scale_y,glyph) {
	kha_graphics2_truetype_StbTruetype.stbtt_MakeGlyphBitmapSubpixel(info,output,output_offset,out_w,out_h,out_stride,scale_x,scale_y,0.0,0.0,glyph);
};
kha_graphics2_truetype_StbTruetype.stbtt_BakeFontBitmap = function(data,offset,pixel_height,pixels,pw,ph,chars,chardata) {
	var f = new kha_graphics2_truetype_Stbtt_$fontinfo();
	if(!kha_graphics2_truetype_StbTruetype.stbtt_InitFont(f,data,offset)) {
		return -1;
	}
	var y = 1;
	var x = 1;
	var bottom_y = 1;
	var scale = kha_graphics2_truetype_StbTruetype.stbtt_ScaleForPixelHeight(f,pixel_height);
	var i = 0;
	var _g = 0;
	while(_g < chars.length) {
		var g = kha_graphics2_truetype_StbTruetype.stbtt_FindGlyphIndex(f,chars[_g++]);
		var advance = kha_graphics2_truetype_StbTruetype.stbtt_GetGlyphHMetrics(f,g).advanceWidth;
		var rect = kha_graphics2_truetype_StbTruetype.stbtt_GetGlyphBitmapBox(f,g,scale,scale);
		var x0 = rect.x0;
		var y0 = rect.y0;
		var gw = rect.x1 - x0;
		var gh = rect.y1 - y0;
		if(x + gw + 1 >= pw) {
			y = bottom_y;
			x = 1;
		}
		if(y + gh + 1 >= ph) {
			return -i;
		}
		if(x + gw >= pw) {
			throw haxe_Exception.thrown("Error");
		}
		if(y + gh >= ph) {
			throw haxe_Exception.thrown("Error");
		}
		chardata[i].x0 = x;
		chardata[i].y0 = y;
		chardata[i].x1 = x + gw;
		chardata[i].y1 = y + gh;
		chardata[i].xadvance = scale * advance;
		chardata[i].xoff = x0;
		chardata[i].yoff = y0;
		x = x + gw + 1;
		if(y + gh + 1 > bottom_y) {
			bottom_y = y + gh + 1;
		}
		++i;
	}
	var _g = 0;
	var _g1 = pw * ph;
	while(_g < _g1) pixels.writeU8(_g++,0);
	i = 0;
	var ch;
	var _g = 0;
	while(_g < chars.length) {
		var g = kha_graphics2_truetype_StbTruetype.stbtt_FindGlyphIndex(f,chars[_g++]);
		ch = chardata[i];
		kha_graphics2_truetype_StbTruetype.stbtt_MakeGlyphBitmap(f,pixels,ch.x0 + ch.y0 * pw,ch.x1 - ch.x0,ch.y1 - ch.y0,pw,scale,scale,g);
		++i;
	}
	return bottom_y;
};
var kha_graphics4_ConstantLocation = function() { };
$hxClasses["kha.graphics4.ConstantLocation"] = kha_graphics4_ConstantLocation;
kha_graphics4_ConstantLocation.__name__ = "kha.graphics4.ConstantLocation";
kha_graphics4_ConstantLocation.__isInterface__ = true;
var kha_graphics4_CubeMap = function(size,format,renderTarget,depthStencilFormat) {
	this.isDepthAttachment = false;
	this.depthTexture = null;
	this.texture = null;
	this.frameBuffer = null;
	this.myWidth = size;
	this.myHeight = size;
	this.format = format;
	this.renderTarget = renderTarget;
	this.depthStencilFormat = depthStencilFormat;
	if(renderTarget) {
		this.createTexture();
	}
};
$hxClasses["kha.graphics4.CubeMap"] = kha_graphics4_CubeMap;
kha_graphics4_CubeMap.__name__ = "kha.graphics4.CubeMap";
kha_graphics4_CubeMap.__interfaces__ = [kha_Resource,kha_Canvas];
kha_graphics4_CubeMap.prototype = {
	myWidth: null
	,myHeight: null
	,format: null
	,renderTarget: null
	,depthStencilFormat: null
	,graphics4: null
	,frameBuffer: null
	,texture: null
	,depthTexture: null
	,isDepthAttachment: null
	,createTexture: function() {
		if(kha_SystemImpl.gl == null) {
			return;
		}
		this.texture = kha_SystemImpl.gl.createTexture();
		kha_SystemImpl.gl.bindTexture(34067,this.texture);
		kha_SystemImpl.gl.texParameteri(34067,10240,9729);
		kha_SystemImpl.gl.texParameteri(34067,10241,9729);
		kha_SystemImpl.gl.texParameteri(34067,10242,33071);
		kha_SystemImpl.gl.texParameteri(34067,10243,33071);
		if(this.renderTarget) {
			this.frameBuffer = kha_SystemImpl.gl.createFramebuffer();
			kha_SystemImpl.gl.bindFramebuffer(36160,this.frameBuffer);
			switch(this.format) {
			case 0:
				kha_SystemImpl.gl.texImage2D(34069,0,6408,this.myWidth,this.myHeight,0,6408,5121,null);
				kha_SystemImpl.gl.texImage2D(34070,0,6408,this.myWidth,this.myHeight,0,6408,5121,null);
				kha_SystemImpl.gl.texImage2D(34071,0,6408,this.myWidth,this.myHeight,0,6408,5121,null);
				kha_SystemImpl.gl.texImage2D(34072,0,6408,this.myWidth,this.myHeight,0,6408,5121,null);
				kha_SystemImpl.gl.texImage2D(34073,0,6408,this.myWidth,this.myHeight,0,6408,5121,null);
				kha_SystemImpl.gl.texImage2D(34074,0,6408,this.myWidth,this.myHeight,0,6408,5121,null);
				break;
			case 2:
				kha_SystemImpl.gl.texImage2D(34069,0,kha_SystemImpl.gl2 ? 34836 : 6408,this.myWidth,this.myHeight,0,6408,5126,null);
				kha_SystemImpl.gl.texImage2D(34070,0,kha_SystemImpl.gl2 ? 34836 : 6408,this.myWidth,this.myHeight,0,6408,5126,null);
				kha_SystemImpl.gl.texImage2D(34071,0,kha_SystemImpl.gl2 ? 34836 : 6408,this.myWidth,this.myHeight,0,6408,5126,null);
				kha_SystemImpl.gl.texImage2D(34072,0,kha_SystemImpl.gl2 ? 34836 : 6408,this.myWidth,this.myHeight,0,6408,5126,null);
				kha_SystemImpl.gl.texImage2D(34073,0,kha_SystemImpl.gl2 ? 34836 : 6408,this.myWidth,this.myHeight,0,6408,5126,null);
				kha_SystemImpl.gl.texImage2D(34074,0,kha_SystemImpl.gl2 ? 34836 : 6408,this.myWidth,this.myHeight,0,6408,5126,null);
				break;
			case 3:
				kha_SystemImpl.gl.texImage2D(34069,0,kha_SystemImpl.gl2 ? 33189 : 6402,this.myWidth,this.myHeight,0,6402,5123,null);
				kha_SystemImpl.gl.texImage2D(34070,0,kha_SystemImpl.gl2 ? 33189 : 6402,this.myWidth,this.myHeight,0,6402,5123,null);
				kha_SystemImpl.gl.texImage2D(34071,0,kha_SystemImpl.gl2 ? 33189 : 6402,this.myWidth,this.myHeight,0,6402,5123,null);
				kha_SystemImpl.gl.texImage2D(34072,0,kha_SystemImpl.gl2 ? 33189 : 6402,this.myWidth,this.myHeight,0,6402,5123,null);
				kha_SystemImpl.gl.texImage2D(34073,0,kha_SystemImpl.gl2 ? 33189 : 6402,this.myWidth,this.myHeight,0,6402,5123,null);
				kha_SystemImpl.gl.texImage2D(34074,0,kha_SystemImpl.gl2 ? 33189 : 6402,this.myWidth,this.myHeight,0,6402,5123,null);
				break;
			case 4:
				kha_SystemImpl.gl.texImage2D(34069,0,kha_SystemImpl.gl2 ? 34842 : 6408,this.myWidth,this.myHeight,0,6408,kha_SystemImpl.halfFloat.HALF_FLOAT_OES,null);
				kha_SystemImpl.gl.texImage2D(34070,0,kha_SystemImpl.gl2 ? 34842 : 6408,this.myWidth,this.myHeight,0,6408,kha_SystemImpl.halfFloat.HALF_FLOAT_OES,null);
				kha_SystemImpl.gl.texImage2D(34071,0,kha_SystemImpl.gl2 ? 34842 : 6408,this.myWidth,this.myHeight,0,6408,kha_SystemImpl.halfFloat.HALF_FLOAT_OES,null);
				kha_SystemImpl.gl.texImage2D(34072,0,kha_SystemImpl.gl2 ? 34842 : 6408,this.myWidth,this.myHeight,0,6408,kha_SystemImpl.halfFloat.HALF_FLOAT_OES,null);
				kha_SystemImpl.gl.texImage2D(34073,0,kha_SystemImpl.gl2 ? 34842 : 6408,this.myWidth,this.myHeight,0,6408,kha_SystemImpl.halfFloat.HALF_FLOAT_OES,null);
				kha_SystemImpl.gl.texImage2D(34074,0,kha_SystemImpl.gl2 ? 34842 : 6408,this.myWidth,this.myHeight,0,6408,kha_SystemImpl.halfFloat.HALF_FLOAT_OES,null);
				break;
			case 5:
				kha_SystemImpl.gl.texImage2D(34069,0,kha_SystemImpl.gl2 ? 33326 : 6406,this.myWidth,this.myHeight,0,6406,5126,null);
				kha_SystemImpl.gl.texImage2D(34070,0,kha_SystemImpl.gl2 ? 33326 : 6406,this.myWidth,this.myHeight,0,6406,5126,null);
				kha_SystemImpl.gl.texImage2D(34071,0,kha_SystemImpl.gl2 ? 33326 : 6406,this.myWidth,this.myHeight,0,6406,5126,null);
				kha_SystemImpl.gl.texImage2D(34072,0,kha_SystemImpl.gl2 ? 33326 : 6406,this.myWidth,this.myHeight,0,6406,5126,null);
				kha_SystemImpl.gl.texImage2D(34073,0,kha_SystemImpl.gl2 ? 33326 : 6406,this.myWidth,this.myHeight,0,6406,5126,null);
				kha_SystemImpl.gl.texImage2D(34074,0,kha_SystemImpl.gl2 ? 33326 : 6406,this.myWidth,this.myHeight,0,6406,5126,null);
				break;
			case 6:
				kha_SystemImpl.gl.texImage2D(34069,0,kha_SystemImpl.gl2 ? 33325 : 6406,this.myWidth,this.myHeight,0,6406,kha_SystemImpl.halfFloat.HALF_FLOAT_OES,null);
				kha_SystemImpl.gl.texImage2D(34070,0,kha_SystemImpl.gl2 ? 33325 : 6406,this.myWidth,this.myHeight,0,6406,kha_SystemImpl.halfFloat.HALF_FLOAT_OES,null);
				kha_SystemImpl.gl.texImage2D(34071,0,kha_SystemImpl.gl2 ? 33325 : 6406,this.myWidth,this.myHeight,0,6406,kha_SystemImpl.halfFloat.HALF_FLOAT_OES,null);
				kha_SystemImpl.gl.texImage2D(34072,0,kha_SystemImpl.gl2 ? 33325 : 6406,this.myWidth,this.myHeight,0,6406,kha_SystemImpl.halfFloat.HALF_FLOAT_OES,null);
				kha_SystemImpl.gl.texImage2D(34073,0,kha_SystemImpl.gl2 ? 33325 : 6406,this.myWidth,this.myHeight,0,6406,kha_SystemImpl.halfFloat.HALF_FLOAT_OES,null);
				kha_SystemImpl.gl.texImage2D(34074,0,kha_SystemImpl.gl2 ? 33325 : 6406,this.myWidth,this.myHeight,0,6406,kha_SystemImpl.halfFloat.HALF_FLOAT_OES,null);
				break;
			default:
				kha_SystemImpl.gl.texImage2D(34069,0,6408,this.myWidth,this.myHeight,0,6408,5121,null);
				kha_SystemImpl.gl.texImage2D(34070,0,6408,this.myWidth,this.myHeight,0,6408,5121,null);
				kha_SystemImpl.gl.texImage2D(34071,0,6408,this.myWidth,this.myHeight,0,6408,5121,null);
				kha_SystemImpl.gl.texImage2D(34072,0,6408,this.myWidth,this.myHeight,0,6408,5121,null);
				kha_SystemImpl.gl.texImage2D(34073,0,6408,this.myWidth,this.myHeight,0,6408,5121,null);
				kha_SystemImpl.gl.texImage2D(34074,0,6408,this.myWidth,this.myHeight,0,6408,5121,null);
			}
			if(this.format == 3) {
				kha_SystemImpl.gl.texParameteri(34067,10240,9728);
				kha_SystemImpl.gl.texParameteri(34067,10241,9728);
				this.isDepthAttachment = true;
				if(!kha_SystemImpl.gl2) {
					var colortex = kha_SystemImpl.gl.createTexture();
					kha_SystemImpl.gl.bindTexture(34067,colortex);
					kha_SystemImpl.gl.texImage2D(34069,0,6408,this.myWidth,this.myHeight,0,6408,5121,null);
					kha_SystemImpl.gl.framebufferTexture2D(36160,36064,34069,colortex,0);
					kha_SystemImpl.gl.texImage2D(34070,0,6408,this.myWidth,this.myHeight,0,6408,5121,null);
					kha_SystemImpl.gl.framebufferTexture2D(36160,36064,34070,colortex,0);
					kha_SystemImpl.gl.texImage2D(34071,0,6408,this.myWidth,this.myHeight,0,6408,5121,null);
					kha_SystemImpl.gl.framebufferTexture2D(36160,36064,34071,colortex,0);
					kha_SystemImpl.gl.texImage2D(34072,0,6408,this.myWidth,this.myHeight,0,6408,5121,null);
					kha_SystemImpl.gl.framebufferTexture2D(36160,36064,34072,colortex,0);
					kha_SystemImpl.gl.texImage2D(34073,0,6408,this.myWidth,this.myHeight,0,6408,5121,null);
					kha_SystemImpl.gl.framebufferTexture2D(36160,36064,34073,colortex,0);
					kha_SystemImpl.gl.texImage2D(34074,0,6408,this.myWidth,this.myHeight,0,6408,5121,null);
					kha_SystemImpl.gl.framebufferTexture2D(36160,36064,34074,colortex,0);
					kha_SystemImpl.gl.bindTexture(34067,this.texture);
				}
			}
			this.initDepthStencilBuffer(this.depthStencilFormat);
			kha_SystemImpl.gl.bindFramebuffer(36160,null);
		}
		kha_SystemImpl.gl.bindTexture(34067,null);
	}
	,initDepthStencilBuffer: function(depthStencilFormat) {
		switch(depthStencilFormat) {
		case 0:
			break;
		case 1:case 5:
			this.depthTexture = kha_SystemImpl.gl.createTexture();
			kha_SystemImpl.gl.bindTexture(34067,this.depthTexture);
			if(depthStencilFormat == 1) {
				kha_SystemImpl.gl.texImage2D(34067,0,kha_SystemImpl.gl2 ? 33190 : 6402,this.myWidth,this.myHeight,0,6402,5125,null);
			} else {
				kha_SystemImpl.gl.texImage2D(34067,0,kha_SystemImpl.gl2 ? 33189 : 6402,this.myWidth,this.myHeight,0,6402,5123,null);
			}
			kha_SystemImpl.gl.texParameteri(34067,10240,9728);
			kha_SystemImpl.gl.texParameteri(34067,10241,9728);
			kha_SystemImpl.gl.texParameteri(34067,10242,33071);
			kha_SystemImpl.gl.texParameteri(34067,10243,33071);
			kha_SystemImpl.gl.bindFramebuffer(36160,this.frameBuffer);
			kha_SystemImpl.gl.framebufferTexture2D(36160,36096,34067,this.depthTexture,0);
			break;
		case 2:case 3:case 4:
			this.depthTexture = kha_SystemImpl.gl.createTexture();
			kha_SystemImpl.gl.bindTexture(34067,this.depthTexture);
			kha_SystemImpl.gl.texImage2D(34067,0,kha_SystemImpl.gl2 ? 35056 : 34041,this.myWidth,this.myHeight,0,34041,kha_SystemImpl.depthTexture.UNSIGNED_INT_24_8_WEBGL,null);
			kha_SystemImpl.gl.texParameteri(34067,10240,9728);
			kha_SystemImpl.gl.texParameteri(34067,10241,9728);
			kha_SystemImpl.gl.texParameteri(34067,10242,33071);
			kha_SystemImpl.gl.texParameteri(34067,10243,33071);
			kha_SystemImpl.gl.bindFramebuffer(36160,this.frameBuffer);
			kha_SystemImpl.gl.framebufferTexture2D(36160,33306,34067,this.depthTexture,0);
			break;
		}
	}
	,get_width: function() {
		return this.myWidth;
	}
	,get_height: function() {
		return this.myHeight;
	}
	,get_g2: function() {
		return null;
	}
	,get_g4: function() {
		if(this.graphics4 == null) {
			this.graphics4 = new kha_js_graphics4_Graphics(this);
		}
		return this.graphics4;
	}
	,__class__: kha_graphics4_CubeMap
	,__properties__: {get_g4:"get_g4",get_g2:"get_g2",get_height:"get_height",get_width:"get_width"}
};
var kha_graphics4_FragmentShader = function(sources,files) {
	this.sources = [];
	var _g = 0;
	while(_g < sources.length) this.sources.push(sources[_g++].toString());
	this.type = 35632;
	this.shader = null;
	this.files = files;
};
$hxClasses["kha.graphics4.FragmentShader"] = kha_graphics4_FragmentShader;
kha_graphics4_FragmentShader.__name__ = "kha.graphics4.FragmentShader";
kha_graphics4_FragmentShader.prototype = {
	sources: null
	,type: null
	,shader: null
	,files: null
	,__class__: kha_graphics4_FragmentShader
};
var kha_graphics4_GeometryShader = function() { };
$hxClasses["kha.graphics4.GeometryShader"] = kha_graphics4_GeometryShader;
kha_graphics4_GeometryShader.__name__ = "kha.graphics4.GeometryShader";
var kha_graphics4_Graphics = function() { };
$hxClasses["kha.graphics4.Graphics"] = kha_graphics4_Graphics;
kha_graphics4_Graphics.__name__ = "kha.graphics4.Graphics";
kha_graphics4_Graphics.__isInterface__ = true;
kha_graphics4_Graphics.prototype = {
	begin: null
	,end: null
	,clear: null
	,scissor: null
	,disableScissor: null
	,setVertexBuffer: null
	,setIndexBuffer: null
	,setTexture: null
	,setTextureParameters: null
	,setPipeline: null
	,setInt: null
	,setFloat: null
	,setFloat2: null
	,setVector2: null
	,setVector3: null
	,setVector4: null
	,setMatrix: null
	,drawIndexedVertices: null
	,__class__: kha_graphics4_Graphics
};
var kha_graphics4_InternalPipeline = function(pipeline,projectionLocation,textureLocation) {
	this.pipeline = pipeline;
	this.projectionLocation = projectionLocation;
	this.textureLocation = textureLocation;
};
$hxClasses["kha.graphics4.InternalPipeline"] = kha_graphics4_InternalPipeline;
kha_graphics4_InternalPipeline.__name__ = "kha.graphics4.InternalPipeline";
kha_graphics4_InternalPipeline.prototype = {
	pipeline: null
	,projectionLocation: null
	,textureLocation: null
	,__class__: kha_graphics4_InternalPipeline
};
var kha_graphics4_PipelineCache = function() { };
$hxClasses["kha.graphics4.PipelineCache"] = kha_graphics4_PipelineCache;
kha_graphics4_PipelineCache.__name__ = "kha.graphics4.PipelineCache";
kha_graphics4_PipelineCache.__isInterface__ = true;
kha_graphics4_PipelineCache.prototype = {
	get: null
	,__class__: kha_graphics4_PipelineCache
};
var kha_graphics4_SimplePipelineCache = function(pipeline,texture) {
	var projectionLocation = null;
	try {
		projectionLocation = pipeline.getConstantLocation("projectionMatrix");
	} catch( _g ) {
		haxe_Log.trace(haxe_Exception.caught(_g).unwrap(),{ fileName : "kha/graphics4/Graphics2.hx", lineNumber : 57, className : "kha.graphics4.SimplePipelineCache", methodName : "new"});
	}
	var textureLocation = null;
	if(texture) {
		try {
			textureLocation = pipeline.getTextureUnit("tex");
		} catch( _g ) {
			haxe_Log.trace(haxe_Exception.caught(_g).unwrap(),{ fileName : "kha/graphics4/Graphics2.hx", lineNumber : 66, className : "kha.graphics4.SimplePipelineCache", methodName : "new"});
		}
	}
	this.pipeline = new kha_graphics4_InternalPipeline(pipeline,projectionLocation,textureLocation);
};
$hxClasses["kha.graphics4.SimplePipelineCache"] = kha_graphics4_SimplePipelineCache;
kha_graphics4_SimplePipelineCache.__name__ = "kha.graphics4.SimplePipelineCache";
kha_graphics4_SimplePipelineCache.__interfaces__ = [kha_graphics4_PipelineCache];
kha_graphics4_SimplePipelineCache.prototype = {
	pipeline: null
	,get: function(colorFormats,depthStencilFormat) {
		return this.pipeline;
	}
	,__class__: kha_graphics4_SimplePipelineCache
};
var kha_graphics4_PerFramebufferPipelineCache = function(pipeline,texture) {
	this.pipelines = [];
	pipeline.compile();
	var projectionLocation = null;
	try {
		projectionLocation = pipeline.getConstantLocation("projectionMatrix");
	} catch( _g ) {
		haxe_Log.trace(haxe_Exception.caught(_g).unwrap(),{ fileName : "kha/graphics4/Graphics2.hx", lineNumber : 89, className : "kha.graphics4.PerFramebufferPipelineCache", methodName : "new"});
	}
	var textureLocation = null;
	if(texture) {
		try {
			textureLocation = pipeline.getTextureUnit("tex");
		} catch( _g ) {
			haxe_Log.trace(haxe_Exception.caught(_g).unwrap(),{ fileName : "kha/graphics4/Graphics2.hx", lineNumber : 98, className : "kha.graphics4.PerFramebufferPipelineCache", methodName : "new"});
		}
	}
	this.pipelines.push(new kha_graphics4_InternalPipeline(pipeline,projectionLocation,textureLocation));
};
$hxClasses["kha.graphics4.PerFramebufferPipelineCache"] = kha_graphics4_PerFramebufferPipelineCache;
kha_graphics4_PerFramebufferPipelineCache.__name__ = "kha.graphics4.PerFramebufferPipelineCache";
kha_graphics4_PerFramebufferPipelineCache.__interfaces__ = [kha_graphics4_PipelineCache];
kha_graphics4_PerFramebufferPipelineCache.prototype = {
	pipelines: null
	,get: function(colorFormats,depthStencilFormat) {
		return this.pipelines[this.hash(colorFormats,depthStencilFormat)];
	}
	,hash: function(colorFormats,depthStencilFormat) {
		return 0;
	}
	,__class__: kha_graphics4_PerFramebufferPipelineCache
};
var kha_graphics4_ImageShaderPainter = function(g4) {
	this.myPipeline = null;
	this.bilinearMipmaps = false;
	this.bilinear = false;
	this.g = g4;
	kha_graphics4_ImageShaderPainter.bufferStart = 0;
	kha_graphics4_ImageShaderPainter.bufferIndex = 0;
	kha_graphics4_ImageShaderPainter.initShaders();
	this.myPipeline = kha_graphics4_ImageShaderPainter.standardImagePipeline;
	this.initBuffers();
};
$hxClasses["kha.graphics4.ImageShaderPainter"] = kha_graphics4_ImageShaderPainter;
kha_graphics4_ImageShaderPainter.__name__ = "kha.graphics4.ImageShaderPainter";
kha_graphics4_ImageShaderPainter.initShaders = function() {
	if(kha_graphics4_ImageShaderPainter.structure == null) {
		kha_graphics4_ImageShaderPainter.structure = kha_graphics4_Graphics2.createImageVertexStructure();
	}
	if(kha_graphics4_ImageShaderPainter.standardImagePipeline == null) {
		kha_graphics4_ImageShaderPainter.standardImagePipeline = new kha_graphics4_PerFramebufferPipelineCache(kha_graphics4_Graphics2.createImagePipeline(kha_graphics4_ImageShaderPainter.structure),true);
	}
};
kha_graphics4_ImageShaderPainter.prototype = {
	projectionMatrix: null
	,bilinear: null
	,bilinearMipmaps: null
	,g: null
	,myPipeline: null
	,set_pipeline: function(pipe) {
		this.myPipeline = pipe != null ? pipe : kha_graphics4_ImageShaderPainter.standardImagePipeline;
		return this.myPipeline;
	}
	,setProjection: function(projectionMatrix) {
		this.projectionMatrix = projectionMatrix;
	}
	,initBuffers: function() {
		if(kha_graphics4_ImageShaderPainter.rectVertexBuffer == null) {
			kha_graphics4_ImageShaderPainter.rectVertexBuffer = new kha_graphics4_VertexBuffer(6000,kha_graphics4_ImageShaderPainter.structure,1);
			kha_graphics4_ImageShaderPainter.rectVertices = kha_graphics4_ImageShaderPainter.rectVertexBuffer.lock();
			kha_graphics4_ImageShaderPainter.indexBuffer = new kha_graphics4_IndexBuffer(9000,0);
			var indices = kha_graphics4_ImageShaderPainter.indexBuffer.lock();
			var _g = 0;
			while(_g < 1500) {
				var i = _g++;
				kha_arrays_Uint32Array.set(indices,i * 3 * 2,i * 4);
				kha_arrays_Uint32Array.set(indices,i * 3 * 2 + 1,i * 4 + 1);
				kha_arrays_Uint32Array.set(indices,i * 3 * 2 + 2,i * 4 + 2);
				kha_arrays_Uint32Array.set(indices,i * 3 * 2 + 3,i * 4);
				kha_arrays_Uint32Array.set(indices,i * 3 * 2 + 4,i * 4 + 2);
				kha_arrays_Uint32Array.set(indices,i * 3 * 2 + 5,i * 4 + 3);
			}
			kha_graphics4_ImageShaderPainter.indexBuffer.unlock();
		}
	}
	,drawBuffer: function(end) {
		if(kha_graphics4_ImageShaderPainter.bufferIndex - kha_graphics4_ImageShaderPainter.bufferStart == 0) {
			return;
		}
		kha_graphics4_ImageShaderPainter.rectVertexBuffer.unlock((kha_graphics4_ImageShaderPainter.bufferIndex - kha_graphics4_ImageShaderPainter.bufferStart) * 4);
		var pipeline = this.myPipeline.get(null,3);
		this.g.setPipeline(pipeline.pipeline);
		this.g.setVertexBuffer(kha_graphics4_ImageShaderPainter.rectVertexBuffer);
		this.g.setIndexBuffer(kha_graphics4_ImageShaderPainter.indexBuffer);
		this.g.setTexture(pipeline.textureLocation,kha_graphics4_ImageShaderPainter.lastTexture);
		this.g.setTextureParameters(pipeline.textureLocation,2,2,this.bilinear ? 1 : 0,this.bilinear ? 1 : 0,this.bilinearMipmaps ? 2 : 0);
		this.g.setMatrix(pipeline.projectionLocation,this.projectionMatrix);
		this.g.drawIndexedVertices(kha_graphics4_ImageShaderPainter.bufferStart * 2 * 3,(kha_graphics4_ImageShaderPainter.bufferIndex - kha_graphics4_ImageShaderPainter.bufferStart) * 2 * 3);
		this.g.setTexture(pipeline.textureLocation,null);
		if(end || (kha_graphics4_ImageShaderPainter.bufferStart + kha_graphics4_ImageShaderPainter.bufferIndex + 1) * 4 >= 1500) {
			kha_graphics4_ImageShaderPainter.bufferStart = 0;
			kha_graphics4_ImageShaderPainter.bufferIndex = 0;
			kha_graphics4_ImageShaderPainter.rectVertices = kha_graphics4_ImageShaderPainter.rectVertexBuffer.lock(0);
		} else {
			kha_graphics4_ImageShaderPainter.bufferStart = kha_graphics4_ImageShaderPainter.bufferIndex;
			kha_graphics4_ImageShaderPainter.rectVertices = kha_graphics4_ImageShaderPainter.rectVertexBuffer.lock(kha_graphics4_ImageShaderPainter.bufferStart * 4);
		}
	}
	,setBilinearFilter: function(bilinear) {
		this.drawBuffer(false);
		kha_graphics4_ImageShaderPainter.lastTexture = null;
		this.bilinear = bilinear;
	}
	,end: function() {
		if(kha_graphics4_ImageShaderPainter.bufferIndex > 0) {
			this.drawBuffer(true);
		}
		kha_graphics4_ImageShaderPainter.lastTexture = null;
	}
	,__class__: kha_graphics4_ImageShaderPainter
	,__properties__: {set_pipeline:"set_pipeline"}
};
var kha_graphics4_ColoredShaderPainter = function(g4) {
	this.myPipeline = null;
	this.g = g4;
	kha_graphics4_ColoredShaderPainter.bufferIndex = 0;
	kha_graphics4_ColoredShaderPainter.triangleBufferIndex = 0;
	kha_graphics4_ColoredShaderPainter.initShaders();
	this.myPipeline = kha_graphics4_ColoredShaderPainter.standardColorPipeline;
	this.initBuffers();
};
$hxClasses["kha.graphics4.ColoredShaderPainter"] = kha_graphics4_ColoredShaderPainter;
kha_graphics4_ColoredShaderPainter.__name__ = "kha.graphics4.ColoredShaderPainter";
kha_graphics4_ColoredShaderPainter.initShaders = function() {
	if(kha_graphics4_ColoredShaderPainter.structure == null) {
		kha_graphics4_ColoredShaderPainter.structure = kha_graphics4_Graphics2.createColoredVertexStructure();
	}
	if(kha_graphics4_ColoredShaderPainter.standardColorPipeline == null) {
		kha_graphics4_ColoredShaderPainter.standardColorPipeline = new kha_graphics4_PerFramebufferPipelineCache(kha_graphics4_Graphics2.createColoredPipeline(kha_graphics4_ColoredShaderPainter.structure),false);
	}
};
kha_graphics4_ColoredShaderPainter.prototype = {
	projectionMatrix: null
	,g: null
	,myPipeline: null
	,set_pipeline: function(pipe) {
		this.myPipeline = pipe != null ? pipe : kha_graphics4_ColoredShaderPainter.standardColorPipeline;
		return this.myPipeline;
	}
	,setProjection: function(projectionMatrix) {
		this.projectionMatrix = projectionMatrix;
	}
	,initBuffers: function() {
		if(kha_graphics4_ColoredShaderPainter.rectVertexBuffer == null) {
			kha_graphics4_ColoredShaderPainter.rectVertexBuffer = new kha_graphics4_VertexBuffer(4000,kha_graphics4_ColoredShaderPainter.structure,1);
			kha_graphics4_ColoredShaderPainter.rectVertices = kha_graphics4_ColoredShaderPainter.rectVertexBuffer.lock();
			kha_graphics4_ColoredShaderPainter.indexBuffer = new kha_graphics4_IndexBuffer(6000,0);
			var indices = kha_graphics4_ColoredShaderPainter.indexBuffer.lock();
			var _g = 0;
			while(_g < 1000) {
				var i = _g++;
				kha_arrays_Uint32Array.set(indices,i * 3 * 2,i * 4);
				kha_arrays_Uint32Array.set(indices,i * 3 * 2 + 1,i * 4 + 1);
				kha_arrays_Uint32Array.set(indices,i * 3 * 2 + 2,i * 4 + 2);
				kha_arrays_Uint32Array.set(indices,i * 3 * 2 + 3,i * 4);
				kha_arrays_Uint32Array.set(indices,i * 3 * 2 + 4,i * 4 + 2);
				kha_arrays_Uint32Array.set(indices,i * 3 * 2 + 5,i * 4 + 3);
			}
			kha_graphics4_ColoredShaderPainter.indexBuffer.unlock();
			kha_graphics4_ColoredShaderPainter.triangleVertexBuffer = new kha_graphics4_VertexBuffer(3000,kha_graphics4_ColoredShaderPainter.structure,1);
			kha_graphics4_ColoredShaderPainter.triangleVertices = kha_graphics4_ColoredShaderPainter.triangleVertexBuffer.lock();
			kha_graphics4_ColoredShaderPainter.triangleIndexBuffer = new kha_graphics4_IndexBuffer(3000,0);
			var triIndices = kha_graphics4_ColoredShaderPainter.triangleIndexBuffer.lock();
			var _g = 0;
			while(_g < 1000) {
				var i = _g++;
				kha_arrays_Uint32Array.set(triIndices,i * 3,i * 3);
				kha_arrays_Uint32Array.set(triIndices,i * 3 + 1,i * 3 + 1);
				kha_arrays_Uint32Array.set(triIndices,i * 3 + 2,i * 3 + 2);
			}
			kha_graphics4_ColoredShaderPainter.triangleIndexBuffer.unlock();
		}
	}
	,setRectVertices: function(bottomleftx,bottomlefty,topleftx,toplefty,toprightx,toprighty,bottomrightx,bottomrighty) {
		var baseIndex = kha_graphics4_ColoredShaderPainter.bufferIndex * 7 * 4;
		kha_arrays_Float32Array.set(kha_graphics4_ColoredShaderPainter.rectVertices,baseIndex,bottomleftx);
		kha_arrays_Float32Array.set(kha_graphics4_ColoredShaderPainter.rectVertices,baseIndex + 1,bottomlefty);
		kha_arrays_Float32Array.set(kha_graphics4_ColoredShaderPainter.rectVertices,baseIndex + 2,-5.0);
		kha_arrays_Float32Array.set(kha_graphics4_ColoredShaderPainter.rectVertices,baseIndex + 7,topleftx);
		kha_arrays_Float32Array.set(kha_graphics4_ColoredShaderPainter.rectVertices,baseIndex + 8,toplefty);
		kha_arrays_Float32Array.set(kha_graphics4_ColoredShaderPainter.rectVertices,baseIndex + 9,-5.0);
		kha_arrays_Float32Array.set(kha_graphics4_ColoredShaderPainter.rectVertices,baseIndex + 14,toprightx);
		kha_arrays_Float32Array.set(kha_graphics4_ColoredShaderPainter.rectVertices,baseIndex + 15,toprighty);
		kha_arrays_Float32Array.set(kha_graphics4_ColoredShaderPainter.rectVertices,baseIndex + 16,-5.0);
		kha_arrays_Float32Array.set(kha_graphics4_ColoredShaderPainter.rectVertices,baseIndex + 21,bottomrightx);
		kha_arrays_Float32Array.set(kha_graphics4_ColoredShaderPainter.rectVertices,baseIndex + 22,bottomrighty);
		kha_arrays_Float32Array.set(kha_graphics4_ColoredShaderPainter.rectVertices,baseIndex + 23,-5.0);
	}
	,setRectColors: function(opacity,color) {
		var baseIndex = kha_graphics4_ColoredShaderPainter.bufferIndex * 7 * 4;
		var a = opacity * ((color >>> 24) * 0.00392156862745098);
		var r = a * (((color & 16711680) >>> 16) * 0.00392156862745098);
		var g = a * (((color & 65280) >>> 8) * 0.00392156862745098);
		var b = a * ((color & 255) * 0.00392156862745098);
		kha_arrays_Float32Array.set(kha_graphics4_ColoredShaderPainter.rectVertices,baseIndex + 3,r);
		kha_arrays_Float32Array.set(kha_graphics4_ColoredShaderPainter.rectVertices,baseIndex + 4,g);
		kha_arrays_Float32Array.set(kha_graphics4_ColoredShaderPainter.rectVertices,baseIndex + 5,b);
		kha_arrays_Float32Array.set(kha_graphics4_ColoredShaderPainter.rectVertices,baseIndex + 6,a);
		kha_arrays_Float32Array.set(kha_graphics4_ColoredShaderPainter.rectVertices,baseIndex + 10,r);
		kha_arrays_Float32Array.set(kha_graphics4_ColoredShaderPainter.rectVertices,baseIndex + 11,g);
		kha_arrays_Float32Array.set(kha_graphics4_ColoredShaderPainter.rectVertices,baseIndex + 12,b);
		kha_arrays_Float32Array.set(kha_graphics4_ColoredShaderPainter.rectVertices,baseIndex + 13,a);
		kha_arrays_Float32Array.set(kha_graphics4_ColoredShaderPainter.rectVertices,baseIndex + 17,r);
		kha_arrays_Float32Array.set(kha_graphics4_ColoredShaderPainter.rectVertices,baseIndex + 18,g);
		kha_arrays_Float32Array.set(kha_graphics4_ColoredShaderPainter.rectVertices,baseIndex + 19,b);
		kha_arrays_Float32Array.set(kha_graphics4_ColoredShaderPainter.rectVertices,baseIndex + 20,a);
		kha_arrays_Float32Array.set(kha_graphics4_ColoredShaderPainter.rectVertices,baseIndex + 24,r);
		kha_arrays_Float32Array.set(kha_graphics4_ColoredShaderPainter.rectVertices,baseIndex + 25,g);
		kha_arrays_Float32Array.set(kha_graphics4_ColoredShaderPainter.rectVertices,baseIndex + 26,b);
		kha_arrays_Float32Array.set(kha_graphics4_ColoredShaderPainter.rectVertices,baseIndex + 27,a);
	}
	,setTriVertices: function(x1,y1,x2,y2,x3,y3) {
		var baseIndex = kha_graphics4_ColoredShaderPainter.triangleBufferIndex * 7 * 3;
		kha_arrays_Float32Array.set(kha_graphics4_ColoredShaderPainter.triangleVertices,baseIndex,x1);
		kha_arrays_Float32Array.set(kha_graphics4_ColoredShaderPainter.triangleVertices,baseIndex + 1,y1);
		kha_arrays_Float32Array.set(kha_graphics4_ColoredShaderPainter.triangleVertices,baseIndex + 2,-5.0);
		kha_arrays_Float32Array.set(kha_graphics4_ColoredShaderPainter.triangleVertices,baseIndex + 7,x2);
		kha_arrays_Float32Array.set(kha_graphics4_ColoredShaderPainter.triangleVertices,baseIndex + 8,y2);
		kha_arrays_Float32Array.set(kha_graphics4_ColoredShaderPainter.triangleVertices,baseIndex + 9,-5.0);
		kha_arrays_Float32Array.set(kha_graphics4_ColoredShaderPainter.triangleVertices,baseIndex + 14,x3);
		kha_arrays_Float32Array.set(kha_graphics4_ColoredShaderPainter.triangleVertices,baseIndex + 15,y3);
		kha_arrays_Float32Array.set(kha_graphics4_ColoredShaderPainter.triangleVertices,baseIndex + 16,-5.0);
	}
	,setTriColors: function(opacity,color) {
		var baseIndex = kha_graphics4_ColoredShaderPainter.triangleBufferIndex * 7 * 3;
		var a = opacity * ((color >>> 24) * 0.00392156862745098);
		var r = a * (((color & 16711680) >>> 16) * 0.00392156862745098);
		var g = a * (((color & 65280) >>> 8) * 0.00392156862745098);
		var b = a * ((color & 255) * 0.00392156862745098);
		kha_arrays_Float32Array.set(kha_graphics4_ColoredShaderPainter.triangleVertices,baseIndex + 3,r);
		kha_arrays_Float32Array.set(kha_graphics4_ColoredShaderPainter.triangleVertices,baseIndex + 4,g);
		kha_arrays_Float32Array.set(kha_graphics4_ColoredShaderPainter.triangleVertices,baseIndex + 5,b);
		kha_arrays_Float32Array.set(kha_graphics4_ColoredShaderPainter.triangleVertices,baseIndex + 6,a);
		kha_arrays_Float32Array.set(kha_graphics4_ColoredShaderPainter.triangleVertices,baseIndex + 10,r);
		kha_arrays_Float32Array.set(kha_graphics4_ColoredShaderPainter.triangleVertices,baseIndex + 11,g);
		kha_arrays_Float32Array.set(kha_graphics4_ColoredShaderPainter.triangleVertices,baseIndex + 12,b);
		kha_arrays_Float32Array.set(kha_graphics4_ColoredShaderPainter.triangleVertices,baseIndex + 13,a);
		kha_arrays_Float32Array.set(kha_graphics4_ColoredShaderPainter.triangleVertices,baseIndex + 17,r);
		kha_arrays_Float32Array.set(kha_graphics4_ColoredShaderPainter.triangleVertices,baseIndex + 18,g);
		kha_arrays_Float32Array.set(kha_graphics4_ColoredShaderPainter.triangleVertices,baseIndex + 19,b);
		kha_arrays_Float32Array.set(kha_graphics4_ColoredShaderPainter.triangleVertices,baseIndex + 20,a);
	}
	,drawBuffer: function(trisDone) {
		if(kha_graphics4_ColoredShaderPainter.bufferIndex == 0) {
			return;
		}
		if(!trisDone) {
			if(kha_graphics4_ColoredShaderPainter.triangleBufferIndex > 0) {
				this.drawTriBuffer(true);
			}
		}
		kha_graphics4_ColoredShaderPainter.rectVertexBuffer.unlock(kha_graphics4_ColoredShaderPainter.bufferIndex * 4);
		var pipeline = this.myPipeline.get(null,3);
		this.g.setPipeline(pipeline.pipeline);
		this.g.setVertexBuffer(kha_graphics4_ColoredShaderPainter.rectVertexBuffer);
		this.g.setIndexBuffer(kha_graphics4_ColoredShaderPainter.indexBuffer);
		this.g.setMatrix(pipeline.projectionLocation,this.projectionMatrix);
		this.g.drawIndexedVertices(0,kha_graphics4_ColoredShaderPainter.bufferIndex * 2 * 3);
		kha_graphics4_ColoredShaderPainter.bufferIndex = 0;
		kha_graphics4_ColoredShaderPainter.rectVertices = kha_graphics4_ColoredShaderPainter.rectVertexBuffer.lock();
	}
	,drawTriBuffer: function(rectsDone) {
		if(!rectsDone) {
			if(kha_graphics4_ColoredShaderPainter.bufferIndex > 0) {
				this.drawBuffer(true);
			}
		}
		kha_graphics4_ColoredShaderPainter.triangleVertexBuffer.unlock(kha_graphics4_ColoredShaderPainter.triangleBufferIndex * 3);
		var pipeline = this.myPipeline.get(null,3);
		this.g.setPipeline(pipeline.pipeline);
		this.g.setVertexBuffer(kha_graphics4_ColoredShaderPainter.triangleVertexBuffer);
		this.g.setIndexBuffer(kha_graphics4_ColoredShaderPainter.triangleIndexBuffer);
		this.g.setMatrix(pipeline.projectionLocation,this.projectionMatrix);
		this.g.drawIndexedVertices(0,kha_graphics4_ColoredShaderPainter.triangleBufferIndex * 3);
		kha_graphics4_ColoredShaderPainter.triangleBufferIndex = 0;
		kha_graphics4_ColoredShaderPainter.triangleVertices = kha_graphics4_ColoredShaderPainter.triangleVertexBuffer.lock();
	}
	,fillRect: function(opacity,color,bottomleftx,bottomlefty,topleftx,toplefty,toprightx,toprighty,bottomrightx,bottomrighty) {
		if(kha_graphics4_ColoredShaderPainter.triangleBufferIndex > 0) {
			this.drawTriBuffer(true);
		}
		if(kha_graphics4_ColoredShaderPainter.bufferIndex + 1 >= 1000) {
			this.drawBuffer(false);
		}
		this.setRectColors(opacity,color);
		this.setRectVertices(bottomleftx,bottomlefty,topleftx,toplefty,toprightx,toprighty,bottomrightx,bottomrighty);
		++kha_graphics4_ColoredShaderPainter.bufferIndex;
	}
	,fillTriangle: function(opacity,color,x1,y1,x2,y2,x3,y3) {
		if(kha_graphics4_ColoredShaderPainter.bufferIndex > 0) {
			this.drawBuffer(true);
		}
		if(kha_graphics4_ColoredShaderPainter.triangleBufferIndex + 1 >= 1000) {
			this.drawTriBuffer(false);
		}
		this.setTriColors(opacity,color);
		this.setTriVertices(x1,y1,x2,y2,x3,y3);
		++kha_graphics4_ColoredShaderPainter.triangleBufferIndex;
	}
	,__class__: kha_graphics4_ColoredShaderPainter
	,__properties__: {set_pipeline:"set_pipeline"}
};
var kha_graphics4_TextShaderPainter = function(g4) {
	this.bakedQuadCache = new kha_AlignedQuad();
	this.bilinear = false;
	this.myPipeline = null;
	this.g = g4;
	kha_graphics4_TextShaderPainter.bufferIndex = 0;
	kha_graphics4_TextShaderPainter.initShaders();
	this.myPipeline = kha_graphics4_TextShaderPainter.standardTextPipeline;
	this.initBuffers();
};
$hxClasses["kha.graphics4.TextShaderPainter"] = kha_graphics4_TextShaderPainter;
kha_graphics4_TextShaderPainter.__name__ = "kha.graphics4.TextShaderPainter";
kha_graphics4_TextShaderPainter.initShaders = function() {
	if(kha_graphics4_TextShaderPainter.structure == null) {
		kha_graphics4_TextShaderPainter.structure = kha_graphics4_Graphics2.createTextVertexStructure();
	}
	if(kha_graphics4_TextShaderPainter.standardTextPipeline == null) {
		kha_graphics4_TextShaderPainter.standardTextPipeline = new kha_graphics4_PerFramebufferPipelineCache(kha_graphics4_Graphics2.createTextPipeline(kha_graphics4_TextShaderPainter.structure),true);
	}
};
kha_graphics4_TextShaderPainter.findIndex = function(charCode) {
	var blocks = kha_KravurImage.charBlocks;
	var offset = 0;
	var _g = 0;
	var _g1 = blocks.length / 2 | 0;
	while(_g < _g1) {
		var i = _g++;
		var start = blocks[i * 2];
		var end = blocks[i * 2 + 1];
		if(charCode >= start && charCode <= end) {
			return offset + charCode - start;
		}
		offset += end - start + 1;
	}
	return 0;
};
kha_graphics4_TextShaderPainter.prototype = {
	projectionMatrix: null
	,font: null
	,g: null
	,myPipeline: null
	,fontSize: null
	,bilinear: null
	,set_pipeline: function(pipe) {
		this.myPipeline = pipe != null ? pipe : kha_graphics4_TextShaderPainter.standardTextPipeline;
		return this.myPipeline;
	}
	,setProjection: function(projectionMatrix) {
		this.projectionMatrix = projectionMatrix;
	}
	,initBuffers: function() {
		if(kha_graphics4_TextShaderPainter.rectVertexBuffer == null) {
			kha_graphics4_TextShaderPainter.rectVertexBuffer = new kha_graphics4_VertexBuffer(4000,kha_graphics4_TextShaderPainter.structure,1);
			kha_graphics4_TextShaderPainter.rectVertices = kha_graphics4_TextShaderPainter.rectVertexBuffer.lock();
			kha_graphics4_TextShaderPainter.indexBuffer = new kha_graphics4_IndexBuffer(6000,0);
			var indices = kha_graphics4_TextShaderPainter.indexBuffer.lock();
			var _g = 0;
			while(_g < 1000) {
				var i = _g++;
				kha_arrays_Uint32Array.set(indices,i * 3 * 2,i * 4);
				kha_arrays_Uint32Array.set(indices,i * 3 * 2 + 1,i * 4 + 1);
				kha_arrays_Uint32Array.set(indices,i * 3 * 2 + 2,i * 4 + 2);
				kha_arrays_Uint32Array.set(indices,i * 3 * 2 + 3,i * 4);
				kha_arrays_Uint32Array.set(indices,i * 3 * 2 + 4,i * 4 + 2);
				kha_arrays_Uint32Array.set(indices,i * 3 * 2 + 5,i * 4 + 3);
			}
			kha_graphics4_TextShaderPainter.indexBuffer.unlock();
		}
	}
	,setRectVertices: function(bottomleftx,bottomlefty,topleftx,toplefty,toprightx,toprighty,bottomrightx,bottomrighty) {
		var baseIndex = kha_graphics4_TextShaderPainter.bufferIndex * 9 * 4;
		kha_arrays_Float32Array.set(kha_graphics4_TextShaderPainter.rectVertices,baseIndex,bottomleftx);
		kha_arrays_Float32Array.set(kha_graphics4_TextShaderPainter.rectVertices,baseIndex + 1,bottomlefty);
		kha_arrays_Float32Array.set(kha_graphics4_TextShaderPainter.rectVertices,baseIndex + 2,-5.0);
		kha_arrays_Float32Array.set(kha_graphics4_TextShaderPainter.rectVertices,baseIndex + 9,topleftx);
		kha_arrays_Float32Array.set(kha_graphics4_TextShaderPainter.rectVertices,baseIndex + 10,toplefty);
		kha_arrays_Float32Array.set(kha_graphics4_TextShaderPainter.rectVertices,baseIndex + 11,-5.0);
		kha_arrays_Float32Array.set(kha_graphics4_TextShaderPainter.rectVertices,baseIndex + 18,toprightx);
		kha_arrays_Float32Array.set(kha_graphics4_TextShaderPainter.rectVertices,baseIndex + 19,toprighty);
		kha_arrays_Float32Array.set(kha_graphics4_TextShaderPainter.rectVertices,baseIndex + 20,-5.0);
		kha_arrays_Float32Array.set(kha_graphics4_TextShaderPainter.rectVertices,baseIndex + 27,bottomrightx);
		kha_arrays_Float32Array.set(kha_graphics4_TextShaderPainter.rectVertices,baseIndex + 28,bottomrighty);
		kha_arrays_Float32Array.set(kha_graphics4_TextShaderPainter.rectVertices,baseIndex + 29,-5.0);
	}
	,setRectTexCoords: function(left,top,right,bottom) {
		var baseIndex = kha_graphics4_TextShaderPainter.bufferIndex * 9 * 4;
		kha_arrays_Float32Array.set(kha_graphics4_TextShaderPainter.rectVertices,baseIndex + 3,left);
		kha_arrays_Float32Array.set(kha_graphics4_TextShaderPainter.rectVertices,baseIndex + 4,bottom);
		kha_arrays_Float32Array.set(kha_graphics4_TextShaderPainter.rectVertices,baseIndex + 12,left);
		kha_arrays_Float32Array.set(kha_graphics4_TextShaderPainter.rectVertices,baseIndex + 13,top);
		kha_arrays_Float32Array.set(kha_graphics4_TextShaderPainter.rectVertices,baseIndex + 21,right);
		kha_arrays_Float32Array.set(kha_graphics4_TextShaderPainter.rectVertices,baseIndex + 22,top);
		kha_arrays_Float32Array.set(kha_graphics4_TextShaderPainter.rectVertices,baseIndex + 30,right);
		kha_arrays_Float32Array.set(kha_graphics4_TextShaderPainter.rectVertices,baseIndex + 31,bottom);
	}
	,setRectColors: function(opacity,color) {
		var baseIndex = kha_graphics4_TextShaderPainter.bufferIndex * 9 * 4;
		var a = opacity * ((color >>> 24) * 0.00392156862745098);
		kha_arrays_Float32Array.set(kha_graphics4_TextShaderPainter.rectVertices,baseIndex + 5,((color & 16711680) >>> 16) * 0.00392156862745098);
		kha_arrays_Float32Array.set(kha_graphics4_TextShaderPainter.rectVertices,baseIndex + 6,((color & 65280) >>> 8) * 0.00392156862745098);
		kha_arrays_Float32Array.set(kha_graphics4_TextShaderPainter.rectVertices,baseIndex + 7,(color & 255) * 0.00392156862745098);
		kha_arrays_Float32Array.set(kha_graphics4_TextShaderPainter.rectVertices,baseIndex + 8,a);
		kha_arrays_Float32Array.set(kha_graphics4_TextShaderPainter.rectVertices,baseIndex + 14,((color & 16711680) >>> 16) * 0.00392156862745098);
		kha_arrays_Float32Array.set(kha_graphics4_TextShaderPainter.rectVertices,baseIndex + 15,((color & 65280) >>> 8) * 0.00392156862745098);
		kha_arrays_Float32Array.set(kha_graphics4_TextShaderPainter.rectVertices,baseIndex + 16,(color & 255) * 0.00392156862745098);
		kha_arrays_Float32Array.set(kha_graphics4_TextShaderPainter.rectVertices,baseIndex + 17,a);
		kha_arrays_Float32Array.set(kha_graphics4_TextShaderPainter.rectVertices,baseIndex + 23,((color & 16711680) >>> 16) * 0.00392156862745098);
		kha_arrays_Float32Array.set(kha_graphics4_TextShaderPainter.rectVertices,baseIndex + 24,((color & 65280) >>> 8) * 0.00392156862745098);
		kha_arrays_Float32Array.set(kha_graphics4_TextShaderPainter.rectVertices,baseIndex + 25,(color & 255) * 0.00392156862745098);
		kha_arrays_Float32Array.set(kha_graphics4_TextShaderPainter.rectVertices,baseIndex + 26,a);
		kha_arrays_Float32Array.set(kha_graphics4_TextShaderPainter.rectVertices,baseIndex + 32,((color & 16711680) >>> 16) * 0.00392156862745098);
		kha_arrays_Float32Array.set(kha_graphics4_TextShaderPainter.rectVertices,baseIndex + 33,((color & 65280) >>> 8) * 0.00392156862745098);
		kha_arrays_Float32Array.set(kha_graphics4_TextShaderPainter.rectVertices,baseIndex + 34,(color & 255) * 0.00392156862745098);
		kha_arrays_Float32Array.set(kha_graphics4_TextShaderPainter.rectVertices,baseIndex + 35,a);
	}
	,drawBuffer: function() {
		if(kha_graphics4_TextShaderPainter.bufferIndex == 0) {
			return;
		}
		kha_graphics4_TextShaderPainter.rectVertexBuffer.unlock(kha_graphics4_TextShaderPainter.bufferIndex * 4);
		var pipeline = this.myPipeline.get(null,3);
		this.g.setPipeline(pipeline.pipeline);
		this.g.setVertexBuffer(kha_graphics4_TextShaderPainter.rectVertexBuffer);
		this.g.setIndexBuffer(kha_graphics4_TextShaderPainter.indexBuffer);
		this.g.setMatrix(pipeline.projectionLocation,this.projectionMatrix);
		this.g.setTexture(pipeline.textureLocation,kha_graphics4_TextShaderPainter.lastTexture);
		this.g.setTextureParameters(pipeline.textureLocation,2,2,this.bilinear ? 1 : 0,this.bilinear ? 1 : 0,0);
		this.g.drawIndexedVertices(0,kha_graphics4_TextShaderPainter.bufferIndex * 2 * 3);
		this.g.setTexture(pipeline.textureLocation,null);
		kha_graphics4_TextShaderPainter.bufferIndex = 0;
		kha_graphics4_TextShaderPainter.rectVertices = kha_graphics4_TextShaderPainter.rectVertexBuffer.lock();
	}
	,setBilinearFilter: function(bilinear) {
		this.end();
		this.bilinear = bilinear;
	}
	,setFont: function(font) {
		this.font = js_Boot.__cast(font , kha_Kravur);
	}
	,bakedQuadCache: null
	,drawString: function(text,opacity,color,x,y,transformation) {
		var font = this.font._get(this.fontSize);
		var tex = font.getTexture();
		if(kha_graphics4_TextShaderPainter.lastTexture != null && tex != kha_graphics4_TextShaderPainter.lastTexture) {
			this.drawBuffer();
		}
		kha_graphics4_TextShaderPainter.lastTexture = tex;
		var xpos = x;
		var _g = 0;
		var _g1 = text.length;
		while(_g < _g1) {
			var charCode = text.charCodeAt(_g++);
			var q = font.getBakedQuad(this.bakedQuadCache,kha_graphics4_TextShaderPainter.findIndex(charCode),xpos,y);
			if(q != null) {
				if(kha_graphics4_TextShaderPainter.bufferIndex + 1 >= 1000) {
					this.drawBuffer();
				}
				this.setRectColors(opacity,color);
				this.setRectTexCoords(q.s0 * tex.get_width() / tex.get_realWidth(),q.t0 * tex.get_height() / tex.get_realHeight(),q.s1 * tex.get_width() / tex.get_realWidth(),q.t1 * tex.get_height() / tex.get_realHeight());
				var x = q.x0;
				var y1 = q.y1;
				if(y1 == null) {
					y1 = 0;
				}
				if(x == null) {
					x = 0;
				}
				var value_x = x;
				var value_y = y1;
				var w = transformation._02 * value_x + transformation._12 * value_y + transformation._22;
				var x1 = (transformation._00 * value_x + transformation._10 * value_y + transformation._20) / w;
				var y2 = (transformation._01 * value_x + transformation._11 * value_y + transformation._21) / w;
				var x2 = x1;
				var y3 = y2;
				if(y2 == null) {
					y3 = 0;
				}
				if(x1 == null) {
					x2 = 0;
				}
				var x3 = q.x0;
				var y4 = q.y0;
				if(y4 == null) {
					y4 = 0;
				}
				if(x3 == null) {
					x3 = 0;
				}
				var value_x1 = x3;
				var value_y1 = y4;
				var w1 = transformation._02 * value_x1 + transformation._12 * value_y1 + transformation._22;
				var x4 = (transformation._00 * value_x1 + transformation._10 * value_y1 + transformation._20) / w1;
				var y5 = (transformation._01 * value_x1 + transformation._11 * value_y1 + transformation._21) / w1;
				var x5 = x4;
				var y6 = y5;
				if(y5 == null) {
					y6 = 0;
				}
				if(x4 == null) {
					x5 = 0;
				}
				var x6 = q.x1;
				var y7 = q.y0;
				if(y7 == null) {
					y7 = 0;
				}
				if(x6 == null) {
					x6 = 0;
				}
				var value_x2 = x6;
				var value_y2 = y7;
				var w2 = transformation._02 * value_x2 + transformation._12 * value_y2 + transformation._22;
				var x7 = (transformation._00 * value_x2 + transformation._10 * value_y2 + transformation._20) / w2;
				var y8 = (transformation._01 * value_x2 + transformation._11 * value_y2 + transformation._21) / w2;
				var x8 = x7;
				var y9 = y8;
				if(y8 == null) {
					y9 = 0;
				}
				if(x7 == null) {
					x8 = 0;
				}
				var x9 = q.x1;
				var y10 = q.y1;
				if(y10 == null) {
					y10 = 0;
				}
				if(x9 == null) {
					x9 = 0;
				}
				var value_x3 = x9;
				var value_y3 = y10;
				var w3 = transformation._02 * value_x3 + transformation._12 * value_y3 + transformation._22;
				var x10 = (transformation._00 * value_x3 + transformation._10 * value_y3 + transformation._20) / w3;
				var y11 = (transformation._01 * value_x3 + transformation._11 * value_y3 + transformation._21) / w3;
				var x11 = x10;
				var y12 = y11;
				if(y11 == null) {
					y12 = 0;
				}
				if(x10 == null) {
					x11 = 0;
				}
				this.setRectVertices(x2,y3,x5,y6,x8,y9,x11,y12);
				xpos += q.xadvance;
				++kha_graphics4_TextShaderPainter.bufferIndex;
			}
		}
	}
	,drawCharacters: function(text,start,length,opacity,color,x,y,transformation) {
		var font = this.font._get(this.fontSize);
		var tex = font.getTexture();
		if(kha_graphics4_TextShaderPainter.lastTexture != null && tex != kha_graphics4_TextShaderPainter.lastTexture) {
			this.drawBuffer();
		}
		kha_graphics4_TextShaderPainter.lastTexture = tex;
		var xpos = x;
		var _g = start;
		var _g1 = start + length;
		while(_g < _g1) {
			var q = font.getBakedQuad(this.bakedQuadCache,kha_graphics4_TextShaderPainter.findIndex(text[_g++]),xpos,y);
			if(q != null) {
				if(kha_graphics4_TextShaderPainter.bufferIndex + 1 >= 1000) {
					this.drawBuffer();
				}
				this.setRectColors(opacity,color);
				this.setRectTexCoords(q.s0 * tex.get_width() / tex.get_realWidth(),q.t0 * tex.get_height() / tex.get_realHeight(),q.s1 * tex.get_width() / tex.get_realWidth(),q.t1 * tex.get_height() / tex.get_realHeight());
				var x = q.x0;
				var y1 = q.y1;
				if(y1 == null) {
					y1 = 0;
				}
				if(x == null) {
					x = 0;
				}
				var value_x = x;
				var value_y = y1;
				var w = transformation._02 * value_x + transformation._12 * value_y + transformation._22;
				var x1 = (transformation._00 * value_x + transformation._10 * value_y + transformation._20) / w;
				var y2 = (transformation._01 * value_x + transformation._11 * value_y + transformation._21) / w;
				var x2 = x1;
				var y3 = y2;
				if(y2 == null) {
					y3 = 0;
				}
				if(x1 == null) {
					x2 = 0;
				}
				var x3 = q.x0;
				var y4 = q.y0;
				if(y4 == null) {
					y4 = 0;
				}
				if(x3 == null) {
					x3 = 0;
				}
				var value_x1 = x3;
				var value_y1 = y4;
				var w1 = transformation._02 * value_x1 + transformation._12 * value_y1 + transformation._22;
				var x4 = (transformation._00 * value_x1 + transformation._10 * value_y1 + transformation._20) / w1;
				var y5 = (transformation._01 * value_x1 + transformation._11 * value_y1 + transformation._21) / w1;
				var x5 = x4;
				var y6 = y5;
				if(y5 == null) {
					y6 = 0;
				}
				if(x4 == null) {
					x5 = 0;
				}
				var x6 = q.x1;
				var y7 = q.y0;
				if(y7 == null) {
					y7 = 0;
				}
				if(x6 == null) {
					x6 = 0;
				}
				var value_x2 = x6;
				var value_y2 = y7;
				var w2 = transformation._02 * value_x2 + transformation._12 * value_y2 + transformation._22;
				var x7 = (transformation._00 * value_x2 + transformation._10 * value_y2 + transformation._20) / w2;
				var y8 = (transformation._01 * value_x2 + transformation._11 * value_y2 + transformation._21) / w2;
				var x8 = x7;
				var y9 = y8;
				if(y8 == null) {
					y9 = 0;
				}
				if(x7 == null) {
					x8 = 0;
				}
				var x9 = q.x1;
				var y10 = q.y1;
				if(y10 == null) {
					y10 = 0;
				}
				if(x9 == null) {
					x9 = 0;
				}
				var value_x3 = x9;
				var value_y3 = y10;
				var w3 = transformation._02 * value_x3 + transformation._12 * value_y3 + transformation._22;
				var x10 = (transformation._00 * value_x3 + transformation._10 * value_y3 + transformation._20) / w3;
				var y11 = (transformation._01 * value_x3 + transformation._11 * value_y3 + transformation._21) / w3;
				var x11 = x10;
				var y12 = y11;
				if(y11 == null) {
					y12 = 0;
				}
				if(x10 == null) {
					x11 = 0;
				}
				this.setRectVertices(x2,y3,x5,y6,x8,y9,x11,y12);
				xpos += q.xadvance;
				++kha_graphics4_TextShaderPainter.bufferIndex;
			}
		}
	}
	,end: function() {
		if(kha_graphics4_TextShaderPainter.bufferIndex > 0) {
			this.drawBuffer();
		}
		kha_graphics4_TextShaderPainter.lastTexture = null;
	}
	,__class__: kha_graphics4_TextShaderPainter
	,__properties__: {set_pipeline:"set_pipeline"}
};
var kha_graphics4_Graphics2 = function(canvas) {
	this.scissorH = -1;
	this.scissorW = -1;
	this.scissorY = -1;
	this.scissorX = -1;
	this.scissorEnabled = false;
	this.lastPipeline = null;
	this.pipelineCache = new haxe_ds_ObjectMap();
	this.myImageScaleQuality = 0;
	kha_graphics2_Graphics.call(this);
	this.set_color(-1);
	this.canvas = canvas;
	this.g = canvas.get_g4();
	this.imagePainter = new kha_graphics4_ImageShaderPainter(this.g);
	this.coloredPainter = new kha_graphics4_ColoredShaderPainter(this.g);
	this.textPainter = new kha_graphics4_TextShaderPainter(this.g);
	this.textPainter.fontSize = this.get_fontSize();
	this.projectionMatrix = new kha_math_FastMatrix4(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1);
	this.setProjection();
	if(kha_graphics4_Graphics2.videoPipeline == null) {
		kha_graphics4_Graphics2.videoPipeline = kha_graphics4_Graphics2.createImagePipeline(kha_graphics4_Graphics2.createImageVertexStructure());
		kha_graphics4_Graphics2.videoPipeline.fragmentShader = kha_Shaders.painter_video_frag;
		kha_graphics4_Graphics2.videoPipeline.vertexShader = kha_Shaders.painter_video_vert;
		kha_graphics4_Graphics2.videoPipeline.compile();
	}
};
$hxClasses["kha.graphics4.Graphics2"] = kha_graphics4_Graphics2;
kha_graphics4_Graphics2.__name__ = "kha.graphics4.Graphics2";
kha_graphics4_Graphics2.upperPowerOfTwo = function(v) {
	--v;
	v |= v >>> 1;
	v |= v >>> 2;
	v |= v >>> 4;
	v |= v >>> 8;
	v |= v >>> 16;
	return ++v;
};
kha_graphics4_Graphics2.createImageVertexStructure = function() {
	var structure = new kha_graphics4_VertexStructure();
	structure.add("vertexPosition",2);
	structure.add("texPosition",1);
	structure.add("vertexColor",3);
	return structure;
};
kha_graphics4_Graphics2.createImagePipeline = function(structure) {
	var shaderPipeline = new kha_graphics4_PipelineState();
	shaderPipeline.fragmentShader = kha_Shaders.painter_image_frag;
	shaderPipeline.vertexShader = kha_Shaders.painter_image_vert;
	shaderPipeline.inputLayout = [structure];
	shaderPipeline.blendSource = 1;
	shaderPipeline.blendDestination = 5;
	shaderPipeline.alphaBlendSource = 1;
	shaderPipeline.alphaBlendDestination = 5;
	return shaderPipeline;
};
kha_graphics4_Graphics2.createColoredVertexStructure = function() {
	var structure = new kha_graphics4_VertexStructure();
	structure.add("vertexPosition",2);
	structure.add("vertexColor",3);
	return structure;
};
kha_graphics4_Graphics2.createColoredPipeline = function(structure) {
	var shaderPipeline = new kha_graphics4_PipelineState();
	shaderPipeline.fragmentShader = kha_Shaders.painter_colored_frag;
	shaderPipeline.vertexShader = kha_Shaders.painter_colored_vert;
	shaderPipeline.inputLayout = [structure];
	shaderPipeline.blendSource = 1;
	shaderPipeline.blendDestination = 5;
	shaderPipeline.alphaBlendSource = 1;
	shaderPipeline.alphaBlendDestination = 5;
	return shaderPipeline;
};
kha_graphics4_Graphics2.createTextVertexStructure = function() {
	var structure = new kha_graphics4_VertexStructure();
	structure.add("vertexPosition",2);
	structure.add("texPosition",1);
	structure.add("vertexColor",3);
	return structure;
};
kha_graphics4_Graphics2.createTextPipeline = function(structure) {
	var shaderPipeline = new kha_graphics4_PipelineState();
	shaderPipeline.fragmentShader = kha_Shaders.painter_text_frag;
	shaderPipeline.vertexShader = kha_Shaders.painter_text_vert;
	shaderPipeline.inputLayout = [structure];
	shaderPipeline.blendSource = 3;
	shaderPipeline.blendDestination = 5;
	shaderPipeline.alphaBlendSource = 3;
	shaderPipeline.alphaBlendDestination = 5;
	return shaderPipeline;
};
kha_graphics4_Graphics2.__super__ = kha_graphics2_Graphics;
kha_graphics4_Graphics2.prototype = $extend(kha_graphics2_Graphics.prototype,{
	myColor: null
	,myFont: null
	,projectionMatrix: null
	,imagePainter: null
	,coloredPainter: null
	,textPainter: null
	,canvas: null
	,g: null
	,setProjection: function() {
		var width = this.canvas.get_width();
		var height = this.canvas.get_height();
		if(((this.canvas) instanceof kha_Framebuffer)) {
			var _this = this.projectionMatrix;
			_this._00 = 2 / width;
			_this._10 = 0;
			_this._20 = 0;
			_this._30 = -width / width;
			_this._01 = 0;
			_this._11 = 2.0 / (0 - height);
			_this._21 = 0;
			_this._31 = -height / (0 - height);
			_this._02 = 0;
			_this._12 = 0;
			_this._22 = -0.002000200020002;
			_this._32 = -1.0002000200020003;
			_this._03 = 0;
			_this._13 = 0;
			_this._23 = 0;
			_this._33 = 1;
		} else {
			if(!kha_Image.get_nonPow2Supported()) {
				width = kha_graphics4_Graphics2.upperPowerOfTwo(width);
				height = kha_graphics4_Graphics2.upperPowerOfTwo(height);
			}
			if(kha_Image.renderTargetsInvertedY()) {
				var _this = this.projectionMatrix;
				_this._00 = 2 / width;
				_this._10 = 0;
				_this._20 = 0;
				_this._30 = -width / width;
				_this._01 = 0;
				_this._11 = 2.0 / height;
				_this._21 = 0;
				_this._31 = -height / height;
				_this._02 = 0;
				_this._12 = 0;
				_this._22 = -0.002000200020002;
				_this._32 = -1.0002000200020003;
				_this._03 = 0;
				_this._13 = 0;
				_this._23 = 0;
				_this._33 = 1;
			} else {
				var _this = this.projectionMatrix;
				_this._00 = 2 / width;
				_this._10 = 0;
				_this._20 = 0;
				_this._30 = -width / width;
				_this._01 = 0;
				_this._11 = 2.0 / (0 - height);
				_this._21 = 0;
				_this._31 = -height / (0 - height);
				_this._02 = 0;
				_this._12 = 0;
				_this._22 = -0.002000200020002;
				_this._32 = -1.0002000200020003;
				_this._03 = 0;
				_this._13 = 0;
				_this._23 = 0;
				_this._33 = 1;
			}
		}
		this.imagePainter.setProjection(this.projectionMatrix);
		this.coloredPainter.setProjection(this.projectionMatrix);
		this.textPainter.setProjection(this.projectionMatrix);
	}
	,drawImage: function(img,x,y) {
		var _this = this.coloredPainter;
		if(kha_graphics4_ColoredShaderPainter.triangleBufferIndex > 0) {
			_this.drawTriBuffer(false);
		}
		if(kha_graphics4_ColoredShaderPainter.bufferIndex > 0) {
			_this.drawBuffer(false);
		}
		this.textPainter.end();
		var xw = x + img.get_width();
		var yh = y + img.get_height();
		var _this = this.transformations[this.transformationIndex];
		var x1 = x;
		var y1 = yh;
		if(yh == null) {
			y1 = 0;
		}
		if(x == null) {
			x1 = 0;
		}
		var value_x = x1;
		var value_y = y1;
		var w = _this._02 * value_x + _this._12 * value_y + _this._22;
		var x1 = (_this._00 * value_x + _this._10 * value_y + _this._20) / w;
		var y1 = (_this._01 * value_x + _this._11 * value_y + _this._21) / w;
		var x2 = x1;
		var y2 = y1;
		if(y1 == null) {
			y2 = 0;
		}
		if(x1 == null) {
			x2 = 0;
		}
		var _this = this.transformations[this.transformationIndex];
		var x1 = x;
		var y1 = y;
		if(y == null) {
			y1 = 0;
		}
		if(x == null) {
			x1 = 0;
		}
		var value_x = x1;
		var value_y = y1;
		var w = _this._02 * value_x + _this._12 * value_y + _this._22;
		var x = (_this._00 * value_x + _this._10 * value_y + _this._20) / w;
		var y1 = (_this._01 * value_x + _this._11 * value_y + _this._21) / w;
		var x1 = x;
		var y3 = y1;
		if(y1 == null) {
			y3 = 0;
		}
		if(x == null) {
			x1 = 0;
		}
		var _this = this.transformations[this.transformationIndex];
		var x = xw;
		var y1 = y;
		if(y == null) {
			y1 = 0;
		}
		if(xw == null) {
			x = 0;
		}
		var value_x = x;
		var value_y = y1;
		var w = _this._02 * value_x + _this._12 * value_y + _this._22;
		var x = (_this._00 * value_x + _this._10 * value_y + _this._20) / w;
		var y = (_this._01 * value_x + _this._11 * value_y + _this._21) / w;
		var x3 = x;
		var y1 = y;
		if(y == null) {
			y1 = 0;
		}
		if(x == null) {
			x3 = 0;
		}
		var _this = this.transformations[this.transformationIndex];
		var x = xw;
		var y = yh;
		if(yh == null) {
			y = 0;
		}
		if(xw == null) {
			x = 0;
		}
		var value_x = x;
		var value_y = y;
		var w = _this._02 * value_x + _this._12 * value_y + _this._22;
		var x = (_this._00 * value_x + _this._10 * value_y + _this._20) / w;
		var y = (_this._01 * value_x + _this._11 * value_y + _this._21) / w;
		var x4 = x;
		var y4 = y;
		if(y == null) {
			y4 = 0;
		}
		if(x == null) {
			x4 = 0;
		}
		var _this = this.imagePainter;
		var opacity = this.get_opacity();
		var color = this.get_color();
		if(kha_graphics4_ImageShaderPainter.bufferStart + kha_graphics4_ImageShaderPainter.bufferIndex + 1 >= 1500 || kha_graphics4_ImageShaderPainter.lastTexture != null && img != kha_graphics4_ImageShaderPainter.lastTexture) {
			_this.drawBuffer(false);
		}
		var r = ((color & 16711680) >>> 16) * 0.00392156862745098;
		var g = ((color & 65280) >>> 8) * 0.00392156862745098;
		var b = (color & 255) * 0.00392156862745098;
		var a = (color >>> 24) * 0.00392156862745098 * opacity;
		var baseIndex = (kha_graphics4_ImageShaderPainter.bufferIndex - kha_graphics4_ImageShaderPainter.bufferStart) * 9 * 4;
		kha_arrays_Float32Array.set(kha_graphics4_ImageShaderPainter.rectVertices,baseIndex + 5,r);
		kha_arrays_Float32Array.set(kha_graphics4_ImageShaderPainter.rectVertices,baseIndex + 6,g);
		kha_arrays_Float32Array.set(kha_graphics4_ImageShaderPainter.rectVertices,baseIndex + 7,b);
		kha_arrays_Float32Array.set(kha_graphics4_ImageShaderPainter.rectVertices,baseIndex + 8,a);
		kha_arrays_Float32Array.set(kha_graphics4_ImageShaderPainter.rectVertices,baseIndex + 14,r);
		kha_arrays_Float32Array.set(kha_graphics4_ImageShaderPainter.rectVertices,baseIndex + 15,g);
		kha_arrays_Float32Array.set(kha_graphics4_ImageShaderPainter.rectVertices,baseIndex + 16,b);
		kha_arrays_Float32Array.set(kha_graphics4_ImageShaderPainter.rectVertices,baseIndex + 17,a);
		kha_arrays_Float32Array.set(kha_graphics4_ImageShaderPainter.rectVertices,baseIndex + 23,r);
		kha_arrays_Float32Array.set(kha_graphics4_ImageShaderPainter.rectVertices,baseIndex + 24,g);
		kha_arrays_Float32Array.set(kha_graphics4_ImageShaderPainter.rectVertices,baseIndex + 25,b);
		kha_arrays_Float32Array.set(kha_graphics4_ImageShaderPainter.rectVertices,baseIndex + 26,a);
		kha_arrays_Float32Array.set(kha_graphics4_ImageShaderPainter.rectVertices,baseIndex + 32,r);
		kha_arrays_Float32Array.set(kha_graphics4_ImageShaderPainter.rectVertices,baseIndex + 33,g);
		kha_arrays_Float32Array.set(kha_graphics4_ImageShaderPainter.rectVertices,baseIndex + 34,b);
		kha_arrays_Float32Array.set(kha_graphics4_ImageShaderPainter.rectVertices,baseIndex + 35,a);
		var right = img.get_width() / img.get_realWidth();
		var bottom = img.get_height() / img.get_realHeight();
		var baseIndex = (kha_graphics4_ImageShaderPainter.bufferIndex - kha_graphics4_ImageShaderPainter.bufferStart) * 9 * 4;
		kha_arrays_Float32Array.set(kha_graphics4_ImageShaderPainter.rectVertices,baseIndex + 3,0);
		kha_arrays_Float32Array.set(kha_graphics4_ImageShaderPainter.rectVertices,baseIndex + 4,bottom);
		kha_arrays_Float32Array.set(kha_graphics4_ImageShaderPainter.rectVertices,baseIndex + 12,0);
		kha_arrays_Float32Array.set(kha_graphics4_ImageShaderPainter.rectVertices,baseIndex + 13,0);
		kha_arrays_Float32Array.set(kha_graphics4_ImageShaderPainter.rectVertices,baseIndex + 21,right);
		kha_arrays_Float32Array.set(kha_graphics4_ImageShaderPainter.rectVertices,baseIndex + 22,0);
		kha_arrays_Float32Array.set(kha_graphics4_ImageShaderPainter.rectVertices,baseIndex + 30,right);
		kha_arrays_Float32Array.set(kha_graphics4_ImageShaderPainter.rectVertices,baseIndex + 31,bottom);
		var baseIndex = (kha_graphics4_ImageShaderPainter.bufferIndex - kha_graphics4_ImageShaderPainter.bufferStart) * 9 * 4;
		kha_arrays_Float32Array.set(kha_graphics4_ImageShaderPainter.rectVertices,baseIndex,x2);
		kha_arrays_Float32Array.set(kha_graphics4_ImageShaderPainter.rectVertices,baseIndex + 1,y2);
		kha_arrays_Float32Array.set(kha_graphics4_ImageShaderPainter.rectVertices,baseIndex + 2,-5.0);
		kha_arrays_Float32Array.set(kha_graphics4_ImageShaderPainter.rectVertices,baseIndex + 9,x1);
		kha_arrays_Float32Array.set(kha_graphics4_ImageShaderPainter.rectVertices,baseIndex + 10,y3);
		kha_arrays_Float32Array.set(kha_graphics4_ImageShaderPainter.rectVertices,baseIndex + 11,-5.0);
		kha_arrays_Float32Array.set(kha_graphics4_ImageShaderPainter.rectVertices,baseIndex + 18,x3);
		kha_arrays_Float32Array.set(kha_graphics4_ImageShaderPainter.rectVertices,baseIndex + 19,y1);
		kha_arrays_Float32Array.set(kha_graphics4_ImageShaderPainter.rectVertices,baseIndex + 20,-5.0);
		kha_arrays_Float32Array.set(kha_graphics4_ImageShaderPainter.rectVertices,baseIndex + 27,x4);
		kha_arrays_Float32Array.set(kha_graphics4_ImageShaderPainter.rectVertices,baseIndex + 28,y4);
		kha_arrays_Float32Array.set(kha_graphics4_ImageShaderPainter.rectVertices,baseIndex + 29,-5.0);
		++kha_graphics4_ImageShaderPainter.bufferIndex;
		kha_graphics4_ImageShaderPainter.lastTexture = img;
	}
	,drawScaledSubImage: function(img,sx,sy,sw,sh,dx,dy,dw,dh) {
		var _this = this.coloredPainter;
		if(kha_graphics4_ColoredShaderPainter.triangleBufferIndex > 0) {
			_this.drawTriBuffer(false);
		}
		if(kha_graphics4_ColoredShaderPainter.bufferIndex > 0) {
			_this.drawBuffer(false);
		}
		this.textPainter.end();
		var _this = this.transformations[this.transformationIndex];
		var x = dx;
		var y = dy + dh;
		if(y == null) {
			y = 0;
		}
		if(dx == null) {
			x = 0;
		}
		var value_x = x;
		var value_y = y;
		var w = _this._02 * value_x + _this._12 * value_y + _this._22;
		var x = (_this._00 * value_x + _this._10 * value_y + _this._20) / w;
		var y = (_this._01 * value_x + _this._11 * value_y + _this._21) / w;
		var x1 = x;
		var y1 = y;
		if(y == null) {
			y1 = 0;
		}
		if(x == null) {
			x1 = 0;
		}
		var _this = this.transformations[this.transformationIndex];
		var x = dx;
		var y = dy;
		if(dy == null) {
			y = 0;
		}
		if(dx == null) {
			x = 0;
		}
		var value_x = x;
		var value_y = y;
		var w = _this._02 * value_x + _this._12 * value_y + _this._22;
		var x = (_this._00 * value_x + _this._10 * value_y + _this._20) / w;
		var y = (_this._01 * value_x + _this._11 * value_y + _this._21) / w;
		var x2 = x;
		var y2 = y;
		if(y == null) {
			y2 = 0;
		}
		if(x == null) {
			x2 = 0;
		}
		var _this = this.transformations[this.transformationIndex];
		var x = dx + dw;
		var y = dy;
		if(dy == null) {
			y = 0;
		}
		if(x == null) {
			x = 0;
		}
		var value_x = x;
		var value_y = y;
		var w = _this._02 * value_x + _this._12 * value_y + _this._22;
		var x = (_this._00 * value_x + _this._10 * value_y + _this._20) / w;
		var y = (_this._01 * value_x + _this._11 * value_y + _this._21) / w;
		var x3 = x;
		var y3 = y;
		if(y == null) {
			y3 = 0;
		}
		if(x == null) {
			x3 = 0;
		}
		var _this = this.transformations[this.transformationIndex];
		var x = dx + dw;
		var y = dy + dh;
		if(y == null) {
			y = 0;
		}
		if(x == null) {
			x = 0;
		}
		var value_x = x;
		var value_y = y;
		var w = _this._02 * value_x + _this._12 * value_y + _this._22;
		var x = (_this._00 * value_x + _this._10 * value_y + _this._20) / w;
		var y = (_this._01 * value_x + _this._11 * value_y + _this._21) / w;
		var x4 = x;
		var y4 = y;
		if(y == null) {
			y4 = 0;
		}
		if(x == null) {
			x4 = 0;
		}
		var _this = this.imagePainter;
		var opacity = this.get_opacity();
		var color = this.get_color();
		if(kha_graphics4_ImageShaderPainter.bufferStart + kha_graphics4_ImageShaderPainter.bufferIndex + 1 >= 1500 || kha_graphics4_ImageShaderPainter.lastTexture != null && img != kha_graphics4_ImageShaderPainter.lastTexture) {
			_this.drawBuffer(false);
		}
		var left = sx / img.get_realWidth();
		var top = sy / img.get_realHeight();
		var right = (sx + sw) / img.get_realWidth();
		var bottom = (sy + sh) / img.get_realHeight();
		var baseIndex = (kha_graphics4_ImageShaderPainter.bufferIndex - kha_graphics4_ImageShaderPainter.bufferStart) * 9 * 4;
		kha_arrays_Float32Array.set(kha_graphics4_ImageShaderPainter.rectVertices,baseIndex + 3,left);
		kha_arrays_Float32Array.set(kha_graphics4_ImageShaderPainter.rectVertices,baseIndex + 4,bottom);
		kha_arrays_Float32Array.set(kha_graphics4_ImageShaderPainter.rectVertices,baseIndex + 12,left);
		kha_arrays_Float32Array.set(kha_graphics4_ImageShaderPainter.rectVertices,baseIndex + 13,top);
		kha_arrays_Float32Array.set(kha_graphics4_ImageShaderPainter.rectVertices,baseIndex + 21,right);
		kha_arrays_Float32Array.set(kha_graphics4_ImageShaderPainter.rectVertices,baseIndex + 22,top);
		kha_arrays_Float32Array.set(kha_graphics4_ImageShaderPainter.rectVertices,baseIndex + 30,right);
		kha_arrays_Float32Array.set(kha_graphics4_ImageShaderPainter.rectVertices,baseIndex + 31,bottom);
		var r = ((color & 16711680) >>> 16) * 0.00392156862745098;
		var g = ((color & 65280) >>> 8) * 0.00392156862745098;
		var b = (color & 255) * 0.00392156862745098;
		var a = (color >>> 24) * 0.00392156862745098 * opacity;
		var baseIndex = (kha_graphics4_ImageShaderPainter.bufferIndex - kha_graphics4_ImageShaderPainter.bufferStart) * 9 * 4;
		kha_arrays_Float32Array.set(kha_graphics4_ImageShaderPainter.rectVertices,baseIndex + 5,r);
		kha_arrays_Float32Array.set(kha_graphics4_ImageShaderPainter.rectVertices,baseIndex + 6,g);
		kha_arrays_Float32Array.set(kha_graphics4_ImageShaderPainter.rectVertices,baseIndex + 7,b);
		kha_arrays_Float32Array.set(kha_graphics4_ImageShaderPainter.rectVertices,baseIndex + 8,a);
		kha_arrays_Float32Array.set(kha_graphics4_ImageShaderPainter.rectVertices,baseIndex + 14,r);
		kha_arrays_Float32Array.set(kha_graphics4_ImageShaderPainter.rectVertices,baseIndex + 15,g);
		kha_arrays_Float32Array.set(kha_graphics4_ImageShaderPainter.rectVertices,baseIndex + 16,b);
		kha_arrays_Float32Array.set(kha_graphics4_ImageShaderPainter.rectVertices,baseIndex + 17,a);
		kha_arrays_Float32Array.set(kha_graphics4_ImageShaderPainter.rectVertices,baseIndex + 23,r);
		kha_arrays_Float32Array.set(kha_graphics4_ImageShaderPainter.rectVertices,baseIndex + 24,g);
		kha_arrays_Float32Array.set(kha_graphics4_ImageShaderPainter.rectVertices,baseIndex + 25,b);
		kha_arrays_Float32Array.set(kha_graphics4_ImageShaderPainter.rectVertices,baseIndex + 26,a);
		kha_arrays_Float32Array.set(kha_graphics4_ImageShaderPainter.rectVertices,baseIndex + 32,r);
		kha_arrays_Float32Array.set(kha_graphics4_ImageShaderPainter.rectVertices,baseIndex + 33,g);
		kha_arrays_Float32Array.set(kha_graphics4_ImageShaderPainter.rectVertices,baseIndex + 34,b);
		kha_arrays_Float32Array.set(kha_graphics4_ImageShaderPainter.rectVertices,baseIndex + 35,a);
		var baseIndex = (kha_graphics4_ImageShaderPainter.bufferIndex - kha_graphics4_ImageShaderPainter.bufferStart) * 9 * 4;
		kha_arrays_Float32Array.set(kha_graphics4_ImageShaderPainter.rectVertices,baseIndex,x1);
		kha_arrays_Float32Array.set(kha_graphics4_ImageShaderPainter.rectVertices,baseIndex + 1,y1);
		kha_arrays_Float32Array.set(kha_graphics4_ImageShaderPainter.rectVertices,baseIndex + 2,-5.0);
		kha_arrays_Float32Array.set(kha_graphics4_ImageShaderPainter.rectVertices,baseIndex + 9,x2);
		kha_arrays_Float32Array.set(kha_graphics4_ImageShaderPainter.rectVertices,baseIndex + 10,y2);
		kha_arrays_Float32Array.set(kha_graphics4_ImageShaderPainter.rectVertices,baseIndex + 11,-5.0);
		kha_arrays_Float32Array.set(kha_graphics4_ImageShaderPainter.rectVertices,baseIndex + 18,x3);
		kha_arrays_Float32Array.set(kha_graphics4_ImageShaderPainter.rectVertices,baseIndex + 19,y3);
		kha_arrays_Float32Array.set(kha_graphics4_ImageShaderPainter.rectVertices,baseIndex + 20,-5.0);
		kha_arrays_Float32Array.set(kha_graphics4_ImageShaderPainter.rectVertices,baseIndex + 27,x4);
		kha_arrays_Float32Array.set(kha_graphics4_ImageShaderPainter.rectVertices,baseIndex + 28,y4);
		kha_arrays_Float32Array.set(kha_graphics4_ImageShaderPainter.rectVertices,baseIndex + 29,-5.0);
		++kha_graphics4_ImageShaderPainter.bufferIndex;
		kha_graphics4_ImageShaderPainter.lastTexture = img;
	}
	,get_color: function() {
		return this.myColor;
	}
	,set_color: function(color) {
		return this.myColor = color;
	}
	,drawRect: function(x,y,width,height,strength) {
		if(strength == null) {
			strength = 1.0;
		}
		this.imagePainter.end();
		this.textPainter.end();
		var _this = this.transformations[this.transformationIndex];
		var x1 = x - strength / 2;
		var y1 = y + strength / 2;
		if(y1 == null) {
			y1 = 0;
		}
		if(x1 == null) {
			x1 = 0;
		}
		var value_x = x1;
		var value_y = y1;
		var w = _this._02 * value_x + _this._12 * value_y + _this._22;
		var x1 = (_this._00 * value_x + _this._10 * value_y + _this._20) / w;
		var y1 = (_this._01 * value_x + _this._11 * value_y + _this._21) / w;
		var x2 = x1;
		var y2 = y1;
		if(y1 == null) {
			y2 = 0;
		}
		if(x1 == null) {
			x2 = 0;
		}
		var p1_x = x2;
		var p1_y = y2;
		var _this = this.transformations[this.transformationIndex];
		var x1 = x - strength / 2;
		var y1 = y - strength / 2;
		if(y1 == null) {
			y1 = 0;
		}
		if(x1 == null) {
			x1 = 0;
		}
		var value_x = x1;
		var value_y = y1;
		var w = _this._02 * value_x + _this._12 * value_y + _this._22;
		var x1 = (_this._00 * value_x + _this._10 * value_y + _this._20) / w;
		var y1 = (_this._01 * value_x + _this._11 * value_y + _this._21) / w;
		var x2 = x1;
		var y2 = y1;
		if(y1 == null) {
			y2 = 0;
		}
		if(x1 == null) {
			x2 = 0;
		}
		var p2_x = x2;
		var p2_y = y2;
		var _this = this.transformations[this.transformationIndex];
		var x1 = x + width + strength / 2;
		var y1 = y - strength / 2;
		if(y1 == null) {
			y1 = 0;
		}
		if(x1 == null) {
			x1 = 0;
		}
		var value_x = x1;
		var value_y = y1;
		var w = _this._02 * value_x + _this._12 * value_y + _this._22;
		var x1 = (_this._00 * value_x + _this._10 * value_y + _this._20) / w;
		var y1 = (_this._01 * value_x + _this._11 * value_y + _this._21) / w;
		var x2 = x1;
		var y2 = y1;
		if(y1 == null) {
			y2 = 0;
		}
		if(x1 == null) {
			x2 = 0;
		}
		var p3_x = x2;
		var p3_y = y2;
		var _this = this.transformations[this.transformationIndex];
		var x1 = x + width + strength / 2;
		var y1 = y + strength / 2;
		if(y1 == null) {
			y1 = 0;
		}
		if(x1 == null) {
			x1 = 0;
		}
		var value_x = x1;
		var value_y = y1;
		var w = _this._02 * value_x + _this._12 * value_y + _this._22;
		var x1 = (_this._00 * value_x + _this._10 * value_y + _this._20) / w;
		var y1 = (_this._01 * value_x + _this._11 * value_y + _this._21) / w;
		var x2 = x1;
		var y2 = y1;
		if(y1 == null) {
			y2 = 0;
		}
		if(x1 == null) {
			x2 = 0;
		}
		var p4_x = x2;
		var p4_y = y2;
		this.coloredPainter.fillRect(this.get_opacity(),this.get_color(),p1_x,p1_y,p2_x,p2_y,p3_x,p3_y,p4_x,p4_y);
		var _this = this.transformations[this.transformationIndex];
		var x1 = x - strength / 2;
		var y1 = y + height - strength / 2;
		if(y1 == null) {
			y1 = 0;
		}
		if(x1 == null) {
			x1 = 0;
		}
		var value_x = x1;
		var value_y = y1;
		var w = _this._02 * value_x + _this._12 * value_y + _this._22;
		var x1 = (_this._00 * value_x + _this._10 * value_y + _this._20) / w;
		var y1 = (_this._01 * value_x + _this._11 * value_y + _this._21) / w;
		var x2 = x1;
		var y2 = y1;
		if(y1 == null) {
			y2 = 0;
		}
		if(x1 == null) {
			x2 = 0;
		}
		p1_x = x2;
		p1_y = y2;
		var _this = this.transformations[this.transformationIndex];
		var x1 = x - strength / 2;
		var y1 = y + strength / 2;
		if(y1 == null) {
			y1 = 0;
		}
		if(x1 == null) {
			x1 = 0;
		}
		var value_x = x1;
		var value_y = y1;
		var w = _this._02 * value_x + _this._12 * value_y + _this._22;
		var x1 = (_this._00 * value_x + _this._10 * value_y + _this._20) / w;
		var y1 = (_this._01 * value_x + _this._11 * value_y + _this._21) / w;
		var x2 = x1;
		var y2 = y1;
		if(y1 == null) {
			y2 = 0;
		}
		if(x1 == null) {
			x2 = 0;
		}
		p2_x = x2;
		p2_y = y2;
		var _this = this.transformations[this.transformationIndex];
		var x1 = x + strength / 2;
		var y1 = y + strength / 2;
		if(y1 == null) {
			y1 = 0;
		}
		if(x1 == null) {
			x1 = 0;
		}
		var value_x = x1;
		var value_y = y1;
		var w = _this._02 * value_x + _this._12 * value_y + _this._22;
		var x1 = (_this._00 * value_x + _this._10 * value_y + _this._20) / w;
		var y1 = (_this._01 * value_x + _this._11 * value_y + _this._21) / w;
		var x2 = x1;
		var y2 = y1;
		if(y1 == null) {
			y2 = 0;
		}
		if(x1 == null) {
			x2 = 0;
		}
		p3_x = x2;
		p3_y = y2;
		var _this = this.transformations[this.transformationIndex];
		var x1 = x + strength / 2;
		var y1 = y + height - strength / 2;
		if(y1 == null) {
			y1 = 0;
		}
		if(x1 == null) {
			x1 = 0;
		}
		var value_x = x1;
		var value_y = y1;
		var w = _this._02 * value_x + _this._12 * value_y + _this._22;
		var x1 = (_this._00 * value_x + _this._10 * value_y + _this._20) / w;
		var y1 = (_this._01 * value_x + _this._11 * value_y + _this._21) / w;
		var x2 = x1;
		var y2 = y1;
		if(y1 == null) {
			y2 = 0;
		}
		if(x1 == null) {
			x2 = 0;
		}
		p4_x = x2;
		p4_y = y2;
		this.coloredPainter.fillRect(this.get_opacity(),this.get_color(),p1_x,p1_y,p2_x,p2_y,p3_x,p3_y,p4_x,p4_y);
		var _this = this.transformations[this.transformationIndex];
		var x1 = x - strength / 2;
		var y1 = y + height + strength / 2;
		if(y1 == null) {
			y1 = 0;
		}
		if(x1 == null) {
			x1 = 0;
		}
		var value_x = x1;
		var value_y = y1;
		var w = _this._02 * value_x + _this._12 * value_y + _this._22;
		var x1 = (_this._00 * value_x + _this._10 * value_y + _this._20) / w;
		var y1 = (_this._01 * value_x + _this._11 * value_y + _this._21) / w;
		var x2 = x1;
		var y2 = y1;
		if(y1 == null) {
			y2 = 0;
		}
		if(x1 == null) {
			x2 = 0;
		}
		p1_x = x2;
		p1_y = y2;
		var _this = this.transformations[this.transformationIndex];
		var x1 = x - strength / 2;
		var y1 = y + height - strength / 2;
		if(y1 == null) {
			y1 = 0;
		}
		if(x1 == null) {
			x1 = 0;
		}
		var value_x = x1;
		var value_y = y1;
		var w = _this._02 * value_x + _this._12 * value_y + _this._22;
		var x1 = (_this._00 * value_x + _this._10 * value_y + _this._20) / w;
		var y1 = (_this._01 * value_x + _this._11 * value_y + _this._21) / w;
		var x2 = x1;
		var y2 = y1;
		if(y1 == null) {
			y2 = 0;
		}
		if(x1 == null) {
			x2 = 0;
		}
		p2_x = x2;
		p2_y = y2;
		var _this = this.transformations[this.transformationIndex];
		var x1 = x + width + strength / 2;
		var y1 = y + height - strength / 2;
		if(y1 == null) {
			y1 = 0;
		}
		if(x1 == null) {
			x1 = 0;
		}
		var value_x = x1;
		var value_y = y1;
		var w = _this._02 * value_x + _this._12 * value_y + _this._22;
		var x1 = (_this._00 * value_x + _this._10 * value_y + _this._20) / w;
		var y1 = (_this._01 * value_x + _this._11 * value_y + _this._21) / w;
		var x2 = x1;
		var y2 = y1;
		if(y1 == null) {
			y2 = 0;
		}
		if(x1 == null) {
			x2 = 0;
		}
		p3_x = x2;
		p3_y = y2;
		var _this = this.transformations[this.transformationIndex];
		var x1 = x + width + strength / 2;
		var y1 = y + height + strength / 2;
		if(y1 == null) {
			y1 = 0;
		}
		if(x1 == null) {
			x1 = 0;
		}
		var value_x = x1;
		var value_y = y1;
		var w = _this._02 * value_x + _this._12 * value_y + _this._22;
		var x1 = (_this._00 * value_x + _this._10 * value_y + _this._20) / w;
		var y1 = (_this._01 * value_x + _this._11 * value_y + _this._21) / w;
		var x2 = x1;
		var y2 = y1;
		if(y1 == null) {
			y2 = 0;
		}
		if(x1 == null) {
			x2 = 0;
		}
		p4_x = x2;
		p4_y = y2;
		this.coloredPainter.fillRect(this.get_opacity(),this.get_color(),p1_x,p1_y,p2_x,p2_y,p3_x,p3_y,p4_x,p4_y);
		var _this = this.transformations[this.transformationIndex];
		var x1 = x + width - strength / 2;
		var y1 = y + height - strength / 2;
		if(y1 == null) {
			y1 = 0;
		}
		if(x1 == null) {
			x1 = 0;
		}
		var value_x = x1;
		var value_y = y1;
		var w = _this._02 * value_x + _this._12 * value_y + _this._22;
		var x1 = (_this._00 * value_x + _this._10 * value_y + _this._20) / w;
		var y1 = (_this._01 * value_x + _this._11 * value_y + _this._21) / w;
		var x2 = x1;
		var y2 = y1;
		if(y1 == null) {
			y2 = 0;
		}
		if(x1 == null) {
			x2 = 0;
		}
		p1_x = x2;
		p1_y = y2;
		var _this = this.transformations[this.transformationIndex];
		var x1 = x + width - strength / 2;
		var y1 = y + strength / 2;
		if(y1 == null) {
			y1 = 0;
		}
		if(x1 == null) {
			x1 = 0;
		}
		var value_x = x1;
		var value_y = y1;
		var w = _this._02 * value_x + _this._12 * value_y + _this._22;
		var x1 = (_this._00 * value_x + _this._10 * value_y + _this._20) / w;
		var y1 = (_this._01 * value_x + _this._11 * value_y + _this._21) / w;
		var x2 = x1;
		var y2 = y1;
		if(y1 == null) {
			y2 = 0;
		}
		if(x1 == null) {
			x2 = 0;
		}
		p2_x = x2;
		p2_y = y2;
		var _this = this.transformations[this.transformationIndex];
		var x1 = x + width + strength / 2;
		var y1 = y + strength / 2;
		if(y1 == null) {
			y1 = 0;
		}
		if(x1 == null) {
			x1 = 0;
		}
		var value_x = x1;
		var value_y = y1;
		var w = _this._02 * value_x + _this._12 * value_y + _this._22;
		var x1 = (_this._00 * value_x + _this._10 * value_y + _this._20) / w;
		var y1 = (_this._01 * value_x + _this._11 * value_y + _this._21) / w;
		var x2 = x1;
		var y2 = y1;
		if(y1 == null) {
			y2 = 0;
		}
		if(x1 == null) {
			x2 = 0;
		}
		p3_x = x2;
		p3_y = y2;
		var _this = this.transformations[this.transformationIndex];
		var x1 = x + width + strength / 2;
		var y1 = y + height - strength / 2;
		if(y1 == null) {
			y1 = 0;
		}
		if(x1 == null) {
			x1 = 0;
		}
		var value_x = x1;
		var value_y = y1;
		var w = _this._02 * value_x + _this._12 * value_y + _this._22;
		var x = (_this._00 * value_x + _this._10 * value_y + _this._20) / w;
		var y = (_this._01 * value_x + _this._11 * value_y + _this._21) / w;
		var x1 = x;
		var y1 = y;
		if(y == null) {
			y1 = 0;
		}
		if(x == null) {
			x1 = 0;
		}
		p4_x = x1;
		p4_y = y1;
		this.coloredPainter.fillRect(this.get_opacity(),this.get_color(),p1_x,p1_y,p2_x,p2_y,p3_x,p3_y,p4_x,p4_y);
	}
	,fillRect: function(x,y,width,height) {
		this.imagePainter.end();
		this.textPainter.end();
		var _this = this.transformations[this.transformationIndex];
		var x1 = x;
		var y1 = y + height;
		if(y1 == null) {
			y1 = 0;
		}
		if(x == null) {
			x1 = 0;
		}
		var value_x = x1;
		var value_y = y1;
		var w = _this._02 * value_x + _this._12 * value_y + _this._22;
		var x1 = (_this._00 * value_x + _this._10 * value_y + _this._20) / w;
		var y1 = (_this._01 * value_x + _this._11 * value_y + _this._21) / w;
		var x2 = x1;
		var y2 = y1;
		if(y1 == null) {
			y2 = 0;
		}
		if(x1 == null) {
			x2 = 0;
		}
		var _this = this.transformations[this.transformationIndex];
		var x1 = x;
		var y1 = y;
		if(y == null) {
			y1 = 0;
		}
		if(x == null) {
			x1 = 0;
		}
		var value_x = x1;
		var value_y = y1;
		var w = _this._02 * value_x + _this._12 * value_y + _this._22;
		var x1 = (_this._00 * value_x + _this._10 * value_y + _this._20) / w;
		var y1 = (_this._01 * value_x + _this._11 * value_y + _this._21) / w;
		var x3 = x1;
		var y3 = y1;
		if(y1 == null) {
			y3 = 0;
		}
		if(x1 == null) {
			x3 = 0;
		}
		var _this = this.transformations[this.transformationIndex];
		var x1 = x + width;
		var y1 = y;
		if(y == null) {
			y1 = 0;
		}
		if(x1 == null) {
			x1 = 0;
		}
		var value_x = x1;
		var value_y = y1;
		var w = _this._02 * value_x + _this._12 * value_y + _this._22;
		var x1 = (_this._00 * value_x + _this._10 * value_y + _this._20) / w;
		var y1 = (_this._01 * value_x + _this._11 * value_y + _this._21) / w;
		var x4 = x1;
		var y4 = y1;
		if(y1 == null) {
			y4 = 0;
		}
		if(x1 == null) {
			x4 = 0;
		}
		var _this = this.transformations[this.transformationIndex];
		var x1 = x + width;
		var y1 = y + height;
		if(y1 == null) {
			y1 = 0;
		}
		if(x1 == null) {
			x1 = 0;
		}
		var value_x = x1;
		var value_y = y1;
		var w = _this._02 * value_x + _this._12 * value_y + _this._22;
		var x = (_this._00 * value_x + _this._10 * value_y + _this._20) / w;
		var y = (_this._01 * value_x + _this._11 * value_y + _this._21) / w;
		var x1 = x;
		var y1 = y;
		if(y == null) {
			y1 = 0;
		}
		if(x == null) {
			x1 = 0;
		}
		this.coloredPainter.fillRect(this.get_opacity(),this.get_color(),x2,y2,x3,y3,x4,y4,x1,y1);
	}
	,drawString: function(text,x,y) {
		this.imagePainter.end();
		var _this = this.coloredPainter;
		if(kha_graphics4_ColoredShaderPainter.triangleBufferIndex > 0) {
			_this.drawTriBuffer(false);
		}
		if(kha_graphics4_ColoredShaderPainter.bufferIndex > 0) {
			_this.drawBuffer(false);
		}
		this.textPainter.drawString(text,this.get_opacity(),this.get_color(),x,y,this.transformations[this.transformationIndex]);
	}
	,drawCharacters: function(text,start,length,x,y) {
		this.imagePainter.end();
		var _this = this.coloredPainter;
		if(kha_graphics4_ColoredShaderPainter.triangleBufferIndex > 0) {
			_this.drawTriBuffer(false);
		}
		if(kha_graphics4_ColoredShaderPainter.bufferIndex > 0) {
			_this.drawBuffer(false);
		}
		this.textPainter.drawCharacters(text,start,length,this.get_opacity(),this.get_color(),x,y,this.transformations[this.transformationIndex]);
	}
	,get_font: function() {
		return this.myFont;
	}
	,set_font: function(font) {
		this.textPainter.setFont(font);
		return this.myFont = font;
	}
	,set_fontSize: function(value) {
		return kha_graphics2_Graphics.prototype.set_fontSize.call(this,this.textPainter.fontSize = value);
	}
	,drawLine: function(x1,y1,x2,y2,strength) {
		if(strength == null) {
			strength = 1.0;
		}
		this.imagePainter.end();
		this.textPainter.end();
		var vec_x = 0;
		var vec_y = 0;
		if(y2 == y1) {
			vec_x = 0;
			vec_y = -1;
		} else {
			var y = -(x2 - x1) / (y2 - y1);
			if(y == null) {
				y = 0;
			}
			vec_x = 1;
			vec_y = y;
		}
		var currentLength = Math.sqrt(vec_x * vec_x + vec_y * vec_y);
		if(currentLength != 0) {
			var mul = strength / currentLength;
			vec_x *= mul;
			vec_y *= mul;
		}
		var x = x1 + 0.5 * vec_x;
		var y = y1 + 0.5 * vec_y;
		if(y == null) {
			y = 0;
		}
		if(x == null) {
			x = 0;
		}
		var p1_x = x;
		var p1_y = y;
		var x = x2 + 0.5 * vec_x;
		var y = y2 + 0.5 * vec_y;
		if(y == null) {
			y = 0;
		}
		if(x == null) {
			x = 0;
		}
		var p2_x = x;
		var p2_y = y;
		var x = p1_x - vec_x;
		var y = p1_y - vec_y;
		if(y == null) {
			y = 0;
		}
		if(x == null) {
			x = 0;
		}
		var p3_x = x;
		var p3_y = y;
		var x = p2_x - vec_x;
		var y = p2_y - vec_y;
		if(y == null) {
			y = 0;
		}
		if(x == null) {
			x = 0;
		}
		var p4_x = x;
		var p4_y = y;
		var _this = this.transformations[this.transformationIndex];
		var w = _this._02 * p1_x + _this._12 * p1_y + _this._22;
		var x = (_this._00 * p1_x + _this._10 * p1_y + _this._20) / w;
		var y = (_this._01 * p1_x + _this._11 * p1_y + _this._21) / w;
		var x1 = x;
		var y1 = y;
		if(y == null) {
			y1 = 0;
		}
		if(x == null) {
			x1 = 0;
		}
		p1_x = x1;
		p1_y = y1;
		var _this = this.transformations[this.transformationIndex];
		var w = _this._02 * p2_x + _this._12 * p2_y + _this._22;
		var x = (_this._00 * p2_x + _this._10 * p2_y + _this._20) / w;
		var y = (_this._01 * p2_x + _this._11 * p2_y + _this._21) / w;
		var x1 = x;
		var y1 = y;
		if(y == null) {
			y1 = 0;
		}
		if(x == null) {
			x1 = 0;
		}
		p2_x = x1;
		p2_y = y1;
		var _this = this.transformations[this.transformationIndex];
		var w = _this._02 * p3_x + _this._12 * p3_y + _this._22;
		var x = (_this._00 * p3_x + _this._10 * p3_y + _this._20) / w;
		var y = (_this._01 * p3_x + _this._11 * p3_y + _this._21) / w;
		var x1 = x;
		var y1 = y;
		if(y == null) {
			y1 = 0;
		}
		if(x == null) {
			x1 = 0;
		}
		p3_x = x1;
		p3_y = y1;
		var _this = this.transformations[this.transformationIndex];
		var w = _this._02 * p4_x + _this._12 * p4_y + _this._22;
		var x = (_this._00 * p4_x + _this._10 * p4_y + _this._20) / w;
		var y = (_this._01 * p4_x + _this._11 * p4_y + _this._21) / w;
		var x1 = x;
		var y1 = y;
		if(y == null) {
			y1 = 0;
		}
		if(x == null) {
			x1 = 0;
		}
		p4_x = x1;
		p4_y = y1;
		this.coloredPainter.fillTriangle(this.get_opacity(),this.get_color(),p1_x,p1_y,p2_x,p2_y,p3_x,p3_y);
		this.coloredPainter.fillTriangle(this.get_opacity(),this.get_color(),p3_x,p3_y,p2_x,p2_y,p4_x,p4_y);
	}
	,fillTriangle: function(x1,y1,x2,y2,x3,y3) {
		this.imagePainter.end();
		this.textPainter.end();
		var _this = this.transformations[this.transformationIndex];
		var x = x1;
		var y = y1;
		if(y1 == null) {
			y = 0;
		}
		if(x1 == null) {
			x = 0;
		}
		var value_x = x;
		var value_y = y;
		var w = _this._02 * value_x + _this._12 * value_y + _this._22;
		var x = (_this._00 * value_x + _this._10 * value_y + _this._20) / w;
		var y = (_this._01 * value_x + _this._11 * value_y + _this._21) / w;
		var x1 = x;
		var y1 = y;
		if(y == null) {
			y1 = 0;
		}
		if(x == null) {
			x1 = 0;
		}
		var _this = this.transformations[this.transformationIndex];
		var x = x2;
		var y = y2;
		if(y2 == null) {
			y = 0;
		}
		if(x2 == null) {
			x = 0;
		}
		var value_x = x;
		var value_y = y;
		var w = _this._02 * value_x + _this._12 * value_y + _this._22;
		var x = (_this._00 * value_x + _this._10 * value_y + _this._20) / w;
		var y = (_this._01 * value_x + _this._11 * value_y + _this._21) / w;
		var x2 = x;
		var y2 = y;
		if(y == null) {
			y2 = 0;
		}
		if(x == null) {
			x2 = 0;
		}
		var _this = this.transformations[this.transformationIndex];
		var x = x3;
		var y = y3;
		if(y3 == null) {
			y = 0;
		}
		if(x3 == null) {
			x = 0;
		}
		var value_x = x;
		var value_y = y;
		var w = _this._02 * value_x + _this._12 * value_y + _this._22;
		var x = (_this._00 * value_x + _this._10 * value_y + _this._20) / w;
		var y = (_this._01 * value_x + _this._11 * value_y + _this._21) / w;
		var x3 = x;
		var y3 = y;
		if(y == null) {
			y3 = 0;
		}
		if(x == null) {
			x3 = 0;
		}
		this.coloredPainter.fillTriangle(this.get_opacity(),this.get_color(),x1,y1,x2,y2,x3,y3);
	}
	,myImageScaleQuality: null
	,set_imageScaleQuality: function(value) {
		if(value == this.myImageScaleQuality) {
			return value;
		}
		this.imagePainter.setBilinearFilter(value == 1);
		this.textPainter.setBilinearFilter(value == 1);
		return this.myImageScaleQuality = value;
	}
	,pipelineCache: null
	,lastPipeline: null
	,setPipeline: function(pipeline) {
		if(pipeline == this.lastPipeline) {
			return;
		}
		this.lastPipeline = pipeline;
		this.flush();
		if(pipeline == null) {
			this.imagePainter.set_pipeline(null);
			this.coloredPainter.set_pipeline(null);
			this.textPainter.set_pipeline(null);
		} else {
			var cache = this.pipelineCache.h[pipeline.__id__];
			if(cache == null) {
				cache = new kha_graphics4_SimplePipelineCache(pipeline,true);
				this.pipelineCache.set(pipeline,cache);
			}
			this.imagePainter.set_pipeline(cache);
			this.coloredPainter.set_pipeline(cache);
			this.textPainter.set_pipeline(cache);
		}
	}
	,scissorEnabled: null
	,scissorX: null
	,scissorY: null
	,scissorW: null
	,scissorH: null
	,scissor: function(x,y,width,height) {
		this.scissorEnabled = true;
		this.scissorX = x;
		this.scissorY = y;
		this.scissorW = width;
		this.scissorH = height;
		this.flush();
		this.g.scissor(x,y,width,height);
	}
	,disableScissor: function() {
		this.scissorEnabled = false;
		this.flush();
		this.g.disableScissor();
	}
	,begin: function(clear,clearColor) {
		if(clear == null) {
			clear = true;
		}
		if(kha_graphics4_Graphics2.current == null) {
			kha_graphics4_Graphics2.current = this;
		} else {
			throw haxe_Exception.thrown("End before you begin");
		}
		this.g.begin();
		if(clear) {
			this.clear(clearColor);
		}
		this.setProjection();
	}
	,clear: function(color) {
		this.flush();
		this.g.clear(color == null ? -16777216 : color);
	}
	,flush: function() {
		this.imagePainter.end();
		this.textPainter.end();
		var _this = this.coloredPainter;
		if(kha_graphics4_ColoredShaderPainter.triangleBufferIndex > 0) {
			_this.drawTriBuffer(false);
		}
		if(kha_graphics4_ColoredShaderPainter.bufferIndex > 0) {
			_this.drawBuffer(false);
		}
	}
	,end: function() {
		this.flush();
		this.g.end();
		if(kha_graphics4_Graphics2.current == this) {
			kha_graphics4_Graphics2.current = null;
		} else {
			throw haxe_Exception.thrown("Begin before you end");
		}
	}
	,drawVideoInternal: function(video,x,y,width,height) {
	}
	,drawVideo: function(video,x,y,width,height) {
		this.setPipeline(kha_graphics4_Graphics2.videoPipelineCustom == null ? kha_graphics4_Graphics2.videoPipeline : kha_graphics4_Graphics2.videoPipelineCustom);
		this.drawVideoInternal(video,x,y,width,height);
		this.setPipeline(null);
	}
	,__class__: kha_graphics4_Graphics2
});
var kha_graphics4_IndexBuffer = function(indexCount,usage,canRead) {
	if(canRead == null) {
		canRead = false;
	}
	this.lockEnd = 0;
	this.lockStart = 0;
	this.usage = usage;
	this.mySize = indexCount;
	this.buffer = kha_SystemImpl.gl.createBuffer();
	this._data = kha_arrays_Uint32Array._new(indexCount);
};
$hxClasses["kha.graphics4.IndexBuffer"] = kha_graphics4_IndexBuffer;
kha_graphics4_IndexBuffer.__name__ = "kha.graphics4.IndexBuffer";
kha_graphics4_IndexBuffer.prototype = {
	_data: null
	,buffer: null
	,mySize: null
	,usage: null
	,lockStart: null
	,lockEnd: null
	,lock: function(start,count) {
		this.lockStart = start != null ? start : 0;
		this.lockEnd = count != null ? start + count : this.mySize;
		return kha_arrays_Uint32Array.subarray(this._data,this.lockStart,this.lockEnd);
	}
	,unlock: function(count) {
		if(count != null) {
			this.lockEnd = this.lockStart + count;
		}
		kha_SystemImpl.gl.bindBuffer(34963,this.buffer);
		var data = kha_arrays_Uint32Array.subarray(this._data,this.lockStart,this.lockEnd);
		kha_SystemImpl.gl.bufferData(34963,kha_SystemImpl.elementIndexUint == null ? new Uint16Array(kha_arrays_ByteArray.get_buffer(data)) : data,this.usage == 1 ? 35048 : 35044);
	}
	,set: function() {
		kha_SystemImpl.gl.bindBuffer(34963,this.buffer);
	}
	,count: function() {
		return this.mySize;
	}
	,__class__: kha_graphics4_IndexBuffer
};
var kha_graphics4_PipelineStateBase = function() {
	this.inputLayout = null;
	this.vertexShader = null;
	this.fragmentShader = null;
	this.geometryShader = null;
	this.tessellationControlShader = null;
	this.tessellationEvaluationShader = null;
	this.cullMode = 2;
	this.depthWrite = false;
	this.depthMode = 0;
	this.stencilMode = 0;
	this.stencilBothPass = 0;
	this.stencilDepthFail = 0;
	this.stencilFail = 0;
	this.stencilReferenceValue = kha_graphics4_StencilValue.Static(0);
	this.stencilReadMask = 255;
	this.stencilWriteMask = 255;
	this.blendSource = 1;
	this.blendDestination = 2;
	this.blendOperation = 0;
	this.alphaBlendSource = 1;
	this.alphaBlendDestination = 2;
	this.alphaBlendOperation = 0;
	this.colorWriteMasksRed = [];
	this.colorWriteMasksGreen = [];
	this.colorWriteMasksBlue = [];
	this.colorWriteMasksAlpha = [];
	this.colorWriteMasksRed.push(true);
	this.colorWriteMasksRed.push(true);
	this.colorWriteMasksRed.push(true);
	this.colorWriteMasksRed.push(true);
	this.colorWriteMasksRed.push(true);
	this.colorWriteMasksRed.push(true);
	this.colorWriteMasksRed.push(true);
	this.colorWriteMasksRed.push(true);
	this.colorWriteMasksGreen.push(true);
	this.colorWriteMasksGreen.push(true);
	this.colorWriteMasksGreen.push(true);
	this.colorWriteMasksGreen.push(true);
	this.colorWriteMasksGreen.push(true);
	this.colorWriteMasksGreen.push(true);
	this.colorWriteMasksGreen.push(true);
	this.colorWriteMasksGreen.push(true);
	this.colorWriteMasksBlue.push(true);
	this.colorWriteMasksBlue.push(true);
	this.colorWriteMasksBlue.push(true);
	this.colorWriteMasksBlue.push(true);
	this.colorWriteMasksBlue.push(true);
	this.colorWriteMasksBlue.push(true);
	this.colorWriteMasksBlue.push(true);
	this.colorWriteMasksBlue.push(true);
	this.colorWriteMasksAlpha.push(true);
	this.colorWriteMasksAlpha.push(true);
	this.colorWriteMasksAlpha.push(true);
	this.colorWriteMasksAlpha.push(true);
	this.colorWriteMasksAlpha.push(true);
	this.colorWriteMasksAlpha.push(true);
	this.colorWriteMasksAlpha.push(true);
	this.colorWriteMasksAlpha.push(true);
	this.colorAttachmentCount = 1;
	this.colorAttachments = [];
	this.colorAttachments.push(0);
	this.colorAttachments.push(0);
	this.colorAttachments.push(0);
	this.colorAttachments.push(0);
	this.colorAttachments.push(0);
	this.colorAttachments.push(0);
	this.colorAttachments.push(0);
	this.colorAttachments.push(0);
	this.depthStencilAttachment = 0;
	this.conservativeRasterization = false;
};
$hxClasses["kha.graphics4.PipelineStateBase"] = kha_graphics4_PipelineStateBase;
kha_graphics4_PipelineStateBase.__name__ = "kha.graphics4.PipelineStateBase";
kha_graphics4_PipelineStateBase.prototype = {
	inputLayout: null
	,vertexShader: null
	,fragmentShader: null
	,geometryShader: null
	,tessellationControlShader: null
	,tessellationEvaluationShader: null
	,cullMode: null
	,depthWrite: null
	,depthMode: null
	,stencilMode: null
	,stencilBothPass: null
	,stencilDepthFail: null
	,stencilFail: null
	,stencilReferenceValue: null
	,stencilReadMask: null
	,stencilWriteMask: null
	,blendSource: null
	,blendDestination: null
	,blendOperation: null
	,alphaBlendSource: null
	,alphaBlendDestination: null
	,alphaBlendOperation: null
	,colorWriteMasksRed: null
	,colorWriteMasksGreen: null
	,colorWriteMasksBlue: null
	,colorWriteMasksAlpha: null
	,colorAttachmentCount: null
	,colorAttachments: null
	,depthStencilAttachment: null
	,conservativeRasterization: null
	,__class__: kha_graphics4_PipelineStateBase
};
var kha_graphics4_PipelineState = function() {
	this.program = null;
	kha_graphics4_PipelineStateBase.call(this);
	this.textures = [];
	this.textureValues = [];
};
$hxClasses["kha.graphics4.PipelineState"] = kha_graphics4_PipelineState;
kha_graphics4_PipelineState.__name__ = "kha.graphics4.PipelineState";
kha_graphics4_PipelineState.__super__ = kha_graphics4_PipelineStateBase;
kha_graphics4_PipelineState.prototype = $extend(kha_graphics4_PipelineStateBase.prototype,{
	program: null
	,textures: null
	,textureValues: null
	,compile: function() {
		if(this.program != null) {
			kha_SystemImpl.gl.deleteProgram(this.program);
		}
		this.program = kha_SystemImpl.gl.createProgram();
		this.compileShader(this.vertexShader);
		this.compileShader(this.fragmentShader);
		kha_SystemImpl.gl.attachShader(this.program,this.vertexShader.shader);
		kha_SystemImpl.gl.attachShader(this.program,this.fragmentShader.shader);
		var index = 0;
		var _g = 0;
		var _g1 = this.inputLayout;
		while(_g < _g1.length) {
			var _g2 = 0;
			var _g3 = _g1[_g++].elements;
			while(_g2 < _g3.length) {
				var element = _g3[_g2];
				++_g2;
				kha_SystemImpl.gl.bindAttribLocation(this.program,index,element.name);
				if(element.data == 4) {
					index += 4;
				} else {
					++index;
				}
			}
		}
		kha_SystemImpl.gl.linkProgram(this.program);
		if(!kha_SystemImpl.gl.getProgramParameter(this.program,35714)) {
			var message = "Could not link the shader program:\n" + kha_SystemImpl.gl.getProgramInfoLog(this.program);
			haxe_Log.trace("Error: " + message,{ fileName : "kha/graphics4/PipelineState.hx", lineNumber : 49, className : "kha.graphics4.PipelineState", methodName : "compile"});
			throw haxe_Exception.thrown(message);
		}
	}
	,set: function() {
		kha_SystemImpl.gl.useProgram(this.program);
		var _g = 0;
		var _g1 = this.textureValues.length;
		while(_g < _g1) {
			var index = _g++;
			kha_SystemImpl.gl.uniform1i(this.textureValues[index],index);
		}
		kha_SystemImpl.gl.colorMask(this.colorWriteMasksRed[0],this.colorWriteMasksGreen[0],this.colorWriteMasksBlue[0],this.colorWriteMasksAlpha[0]);
	}
	,compileShader: function(shader) {
		if(shader.shader != null) {
			return;
		}
		var s = kha_SystemImpl.gl.createShader(shader.type);
		var highpSupported = kha_SystemImpl.gl.getShaderPrecisionFormat(35632,36338).precision != 0;
		var files = shader.files;
		var _g = 0;
		var _g1 = files.length;
		while(_g < _g1) {
			var i = _g++;
			if(kha_SystemImpl.gl2) {
				if(files[i].indexOf("-webgl2") >= 0 || files[i].indexOf("runtime-string") >= 0) {
					kha_SystemImpl.gl.shaderSource(s,shader.sources[i]);
					break;
				}
			} else {
				if(!highpSupported && (files[i].indexOf("-relaxed") >= 0 || files[i].indexOf("runtime-string") >= 0)) {
					kha_SystemImpl.gl.shaderSource(s,shader.sources[i]);
					break;
				}
				if(highpSupported && (files[i].indexOf("-relaxed") < 0 || files[i].indexOf("runtime-string") >= 0)) {
					kha_SystemImpl.gl.shaderSource(s,shader.sources[i]);
					break;
				}
			}
		}
		kha_SystemImpl.gl.compileShader(s);
		if(!kha_SystemImpl.gl.getShaderParameter(s,35713)) {
			var message = "Could not compile shader:\n" + kha_SystemImpl.gl.getShaderInfoLog(s);
			haxe_Log.trace("Error: " + message,{ fileName : "kha/graphics4/PipelineState.hx", lineNumber : 89, className : "kha.graphics4.PipelineState", methodName : "compileShader"});
			throw haxe_Exception.thrown(message);
		}
		shader.shader = s;
	}
	,getConstantLocation: function(name) {
		var location = kha_SystemImpl.gl.getUniformLocation(this.program,name);
		var type = 5126;
		var count = kha_SystemImpl.gl.getProgramParameter(this.program,35718);
		var _g = 0;
		while(_g < count) {
			var info = kha_SystemImpl.gl.getActiveUniform(this.program,_g++);
			if(info.name == name || info.name == name + "[0]") {
				type = info.type;
				break;
			}
		}
		return new kha_js_graphics4_ConstantLocation(location,type);
	}
	,getTextureUnit: function(name) {
		var index = this.findTexture(name);
		if(index < 0) {
			var location = kha_SystemImpl.gl.getUniformLocation(this.program,name);
			index = this.textures.length;
			this.textureValues.push(location);
			this.textures.push(name);
		}
		return new kha_js_graphics4_TextureUnit(index);
	}
	,findTexture: function(name) {
		var _g = 0;
		var _g1 = this.textures.length;
		while(_g < _g1) {
			var index = _g++;
			if(this.textures[index] == name) {
				return index;
			}
		}
		return -1;
	}
	,__class__: kha_graphics4_PipelineState
});
var kha_graphics4_StencilValue = $hxEnums["kha.graphics4.StencilValue"] = { __ename__ : true, __constructs__ : ["Dynamic","Static"]
	,Dynamic: {_hx_index:0,__enum__:"kha.graphics4.StencilValue",toString:$estr}
	,Static: ($_=function(value) { return {_hx_index:1,value:value,__enum__:"kha.graphics4.StencilValue",toString:$estr}; },$_.__params__ = ["value"],$_)
};
var kha_graphics4_TessellationControlShader = function() { };
$hxClasses["kha.graphics4.TessellationControlShader"] = kha_graphics4_TessellationControlShader;
kha_graphics4_TessellationControlShader.__name__ = "kha.graphics4.TessellationControlShader";
var kha_graphics4_TessellationEvaluationShader = function() { };
$hxClasses["kha.graphics4.TessellationEvaluationShader"] = kha_graphics4_TessellationEvaluationShader;
kha_graphics4_TessellationEvaluationShader.__name__ = "kha.graphics4.TessellationEvaluationShader";
var kha_graphics4_TextureUnit = function() { };
$hxClasses["kha.graphics4.TextureUnit"] = kha_graphics4_TextureUnit;
kha_graphics4_TextureUnit.__name__ = "kha.graphics4.TextureUnit";
kha_graphics4_TextureUnit.__isInterface__ = true;
var kha_graphics4_VertexBuffer = function(vertexCount,structure,usage,instanceDataStepRate,canRead) {
	if(canRead == null) {
		canRead = false;
	}
	if(instanceDataStepRate == null) {
		instanceDataStepRate = 0;
	}
	this.lockEnd = 0;
	this.lockStart = 0;
	this.instanceDataStepRate = instanceDataStepRate;
	this.mySize = vertexCount;
	this.myStride = 0;
	var _g = 0;
	var _g1 = structure.elements;
	while(_g < _g1.length) switch(_g1[_g++].data) {
	case 0:
		this.myStride += 4;
		break;
	case 1:
		this.myStride += 8;
		break;
	case 2:
		this.myStride += 12;
		break;
	case 3:
		this.myStride += 16;
		break;
	case 4:
		this.myStride += 64;
		break;
	case 5:
		this.myStride += 4;
		break;
	case 6:
		this.myStride += 8;
		break;
	}
	this.buffer = kha_SystemImpl.gl.createBuffer();
	this._data = kha_arrays_ByteArray.make(vertexCount * this.myStride);
	this.sizes = [];
	this.offsets = [];
	this.types = [];
	this.sizes[structure.elements.length - 1] = 0;
	this.offsets[structure.elements.length - 1] = 0;
	this.types[structure.elements.length - 1] = 0;
	var offset = 0;
	var index = 0;
	var _g = 0;
	var _g1 = structure.elements;
	while(_g < _g1.length) {
		var element = _g1[_g];
		++_g;
		var size;
		var type;
		switch(element.data) {
		case 0:
			size = 1;
			type = 5126;
			break;
		case 1:
			size = 2;
			type = 5126;
			break;
		case 2:
			size = 3;
			type = 5126;
			break;
		case 3:
			size = 4;
			type = 5126;
			break;
		case 4:
			size = 16;
			type = 5126;
			break;
		case 5:
			size = 2;
			type = 5122;
			break;
		case 6:
			size = 4;
			type = 5122;
			break;
		}
		this.sizes[index] = size;
		this.offsets[index] = offset;
		this.types[index] = type;
		switch(element.data) {
		case 0:
			offset += 4;
			break;
		case 1:
			offset += 8;
			break;
		case 2:
			offset += 12;
			break;
		case 3:
			offset += 16;
			break;
		case 4:
			offset += 64;
			break;
		case 5:
			offset += 4;
			break;
		case 6:
			offset += 8;
			break;
		}
		++index;
	}
	kha_SystemImpl.gl.bindBuffer(34962,this.buffer);
	kha_SystemImpl.gl.bufferData(34962,kha_arrays_ByteArray.subarray(this._data,0 * this.stride(),this.mySize * this.stride()),usage == 1 ? 35048 : 35044);
};
$hxClasses["kha.graphics4.VertexBuffer"] = kha_graphics4_VertexBuffer;
kha_graphics4_VertexBuffer.__name__ = "kha.graphics4.VertexBuffer";
kha_graphics4_VertexBuffer.prototype = {
	_data: null
	,buffer: null
	,mySize: null
	,myStride: null
	,sizes: null
	,offsets: null
	,types: null
	,instanceDataStepRate: null
	,lockStart: null
	,lockEnd: null
	,lock: function(start,count) {
		this.lockStart = start != null ? start : 0;
		this.lockEnd = count != null ? start + count : this.mySize;
		return kha_arrays_ByteArray.subarray(this._data,this.lockStart * this.stride(),this.lockEnd * this.stride());
	}
	,unlock: function(count) {
		if(count != null) {
			this.lockEnd = this.lockStart + count;
		}
		kha_SystemImpl.gl.bindBuffer(34962,this.buffer);
		kha_SystemImpl.gl.bufferSubData(34962,this.lockStart * this.stride(),kha_arrays_ByteArray.subarray(this._data,this.lockStart * this.stride(),this.lockEnd * this.stride()));
	}
	,stride: function() {
		return this.myStride;
	}
	,set: function(offset) {
		var ext = kha_SystemImpl.gl2 ? true : kha_SystemImpl.gl.getExtension("ANGLE_instanced_arrays");
		kha_SystemImpl.gl.bindBuffer(34962,this.buffer);
		var attributesOffset = 0;
		var _g = 0;
		var _g1 = this.sizes.length;
		while(_g < _g1) {
			var i = _g++;
			if(this.sizes[i] > 4) {
				var size = this.sizes[i];
				var addonOffset = 0;
				while(size > 0) {
					kha_SystemImpl.gl.enableVertexAttribArray(offset + attributesOffset);
					kha_SystemImpl.gl.vertexAttribPointer(offset + attributesOffset,4,5126,false,this.myStride,this.offsets[i] + addonOffset);
					if(ext) {
						if(kha_SystemImpl.gl2) {
							kha_SystemImpl.gl.vertexAttribDivisor(offset + attributesOffset,this.instanceDataStepRate);
						} else {
							ext.vertexAttribDivisorANGLE(offset + attributesOffset,this.instanceDataStepRate);
						}
					}
					size -= 4;
					addonOffset += 16;
					++attributesOffset;
				}
			} else {
				var normalized = this.types[i] == 5126 ? false : true;
				kha_SystemImpl.gl.enableVertexAttribArray(offset + attributesOffset);
				kha_SystemImpl.gl.vertexAttribPointer(offset + attributesOffset,this.sizes[i],this.types[i],normalized,this.myStride,this.offsets[i]);
				if(ext) {
					if(kha_SystemImpl.gl2) {
						kha_SystemImpl.gl.vertexAttribDivisor(offset + attributesOffset,this.instanceDataStepRate);
					} else {
						ext.vertexAttribDivisorANGLE(offset + attributesOffset,this.instanceDataStepRate);
					}
				}
				++attributesOffset;
			}
		}
		return attributesOffset;
	}
	,__class__: kha_graphics4_VertexBuffer
};
var kha_graphics4_VertexElement = function(name,data) {
	this.name = name;
	this.data = data;
};
$hxClasses["kha.graphics4.VertexElement"] = kha_graphics4_VertexElement;
kha_graphics4_VertexElement.__name__ = "kha.graphics4.VertexElement";
kha_graphics4_VertexElement.prototype = {
	name: null
	,data: null
	,__class__: kha_graphics4_VertexElement
};
var kha_graphics4_VertexShader = function(sources,files) {
	this.sources = [];
	var _g = 0;
	while(_g < sources.length) this.sources.push(sources[_g++].toString());
	this.type = 35633;
	this.shader = null;
	this.files = files;
};
$hxClasses["kha.graphics4.VertexShader"] = kha_graphics4_VertexShader;
kha_graphics4_VertexShader.__name__ = "kha.graphics4.VertexShader";
kha_graphics4_VertexShader.prototype = {
	sources: null
	,type: null
	,shader: null
	,files: null
	,__class__: kha_graphics4_VertexShader
};
var kha_graphics4_VertexStructure = function() {
	this.elements = [];
	this.instanced = false;
};
$hxClasses["kha.graphics4.VertexStructure"] = kha_graphics4_VertexStructure;
kha_graphics4_VertexStructure.__name__ = "kha.graphics4.VertexStructure";
kha_graphics4_VertexStructure.prototype = {
	elements: null
	,instanced: null
	,add: function(name,data) {
		this.elements.push(new kha_graphics4_VertexElement(name,data));
	}
	,size: function() {
		return this.elements.length;
	}
	,get: function(index) {
		return this.elements[index];
	}
	,__class__: kha_graphics4_VertexStructure
};
var kha_input_Gamepad = $hx_exports["kha"]["input"]["Gamepad"] = function(index,id) {
	if(id == null) {
		id = "unknown";
	}
	if(index == null) {
		index = 0;
	}
	this.connected = false;
	this.index = index;
	this.axisListeners = [];
	this.buttonListeners = [];
	kha_input_Gamepad.instances[index] = this;
};
$hxClasses["kha.input.Gamepad"] = kha_input_Gamepad;
kha_input_Gamepad.__name__ = "kha.input.Gamepad";
kha_input_Gamepad.get = function(index) {
	if(index == null) {
		index = 0;
	}
	if(index >= kha_input_Gamepad.instances.length) {
		return null;
	}
	return kha_input_Gamepad.instances[index];
};
kha_input_Gamepad.notifyOnConnect = function(connectListener,disconnectListener) {
	if(connectListener != null) {
		kha_input_Gamepad.connectListeners.push(connectListener);
	}
	if(disconnectListener != null) {
		kha_input_Gamepad.disconnectListeners.push(disconnectListener);
	}
};
kha_input_Gamepad.removeConnect = function(connectListener,disconnectListener) {
	if(connectListener != null) {
		HxOverrides.remove(kha_input_Gamepad.connectListeners,connectListener);
	}
	if(disconnectListener != null) {
		HxOverrides.remove(kha_input_Gamepad.disconnectListeners,disconnectListener);
	}
};
kha_input_Gamepad.sendConnectEvent = function(index) {
	kha_input_Gamepad.instances[index].connected = true;
	var _g = 0;
	var _g1 = kha_input_Gamepad.connectListeners;
	while(_g < _g1.length) _g1[_g++](index);
};
kha_input_Gamepad.sendDisconnectEvent = function(index) {
	kha_input_Gamepad.instances[index].connected = false;
	var _g = 0;
	var _g1 = kha_input_Gamepad.disconnectListeners;
	while(_g < _g1.length) _g1[_g++](index);
};
kha_input_Gamepad.prototype = {
	index: null
	,notify: function(axisListener,buttonListener) {
		if(axisListener != null) {
			this.axisListeners.push(axisListener);
		}
		if(buttonListener != null) {
			this.buttonListeners.push(buttonListener);
		}
	}
	,remove: function(axisListener,buttonListener) {
		if(axisListener != null) {
			HxOverrides.remove(this.axisListeners,axisListener);
		}
		if(buttonListener != null) {
			HxOverrides.remove(this.buttonListeners,buttonListener);
		}
	}
	,axisListeners: null
	,buttonListeners: null
	,id: null
	,vendor: null
	,connected: null
	,get_id: function() {
		return kha_SystemImpl.getGamepadId(this.index);
	}
	,get_vendor: function() {
		return kha_SystemImpl.getGamepadVendor(this.index);
	}
	,sendAxisEvent: function(axis,value) {
		var _g = 0;
		var _g1 = this.axisListeners;
		while(_g < _g1.length) _g1[_g++](axis,value);
	}
	,sendButtonEvent: function(button,value) {
		var _g = 0;
		var _g1 = this.buttonListeners;
		while(_g < _g1.length) _g1[_g++](button,value);
	}
	,__class__: kha_input_Gamepad
	,__properties__: {get_vendor:"get_vendor",get_id:"get_id"}
};
var kha_input_BlockInterventions = $hxEnums["kha.input.BlockInterventions"] = { __ename__ : true, __constructs__ : ["Default","Full","None","Custom"]
	,Default: {_hx_index:0,__enum__:"kha.input.BlockInterventions",toString:$estr}
	,Full: {_hx_index:1,__enum__:"kha.input.BlockInterventions",toString:$estr}
	,None: {_hx_index:2,__enum__:"kha.input.BlockInterventions",toString:$estr}
	,Custom: ($_=function(func) { return {_hx_index:3,func:func,__enum__:"kha.input.BlockInterventions",toString:$estr}; },$_.__params__ = ["func"],$_)
};
var kha_netsync_Controller = function() {
	this.__id = kha_netsync_ControllerBuilder.nextId++;
	this._inputBuffer = new haxe_io_Bytes(new ArrayBuffer(1));
};
$hxClasses["kha.netsync.Controller"] = kha_netsync_Controller;
kha_netsync_Controller.__name__ = "kha.netsync.Controller";
kha_netsync_Controller.prototype = {
	__id: null
	,_inputBufferIndex: null
	,_inputBuffer: null
	,_id: function() {
		return this.__id;
	}
	,__class__: kha_netsync_Controller
};
var kha_input_Keyboard = $hx_exports["kha"]["input"]["Keyboard"] = function() {
	kha_netsync_Controller.call(this);
	this.downListeners = [];
	this.upListeners = [];
	this.pressListeners = [];
	kha_input_Keyboard.instance = this;
};
$hxClasses["kha.input.Keyboard"] = kha_input_Keyboard;
kha_input_Keyboard.__name__ = "kha.input.Keyboard";
kha_input_Keyboard.get = function(num) {
	if(num == null) {
		num = 0;
	}
	return kha_SystemImpl.getKeyboard(num);
};
kha_input_Keyboard.disableSystemInterventions = function(behavior) {
	kha_input_Keyboard.keyBehavior = behavior;
};
kha_input_Keyboard.__super__ = kha_netsync_Controller;
kha_input_Keyboard.prototype = $extend(kha_netsync_Controller.prototype,{
	notify: function(downListener,upListener,pressListener) {
		if(downListener != null) {
			this.downListeners.push(downListener);
		}
		if(upListener != null) {
			this.upListeners.push(upListener);
		}
		if(pressListener != null) {
			this.pressListeners.push(pressListener);
		}
	}
	,remove: function(downListener,upListener,pressListener) {
		if(downListener != null) {
			HxOverrides.remove(this.downListeners,downListener);
		}
		if(upListener != null) {
			HxOverrides.remove(this.upListeners,upListener);
		}
		if(pressListener != null) {
			HxOverrides.remove(this.pressListeners,pressListener);
		}
	}
	,show: function() {
	}
	,hide: function() {
	}
	,downListeners: null
	,upListeners: null
	,pressListeners: null
	,sendDownEvent: function(code) {
		if(kha_netsync_Session.the() != null) {
			var bytes = new haxe_io_Bytes(new ArrayBuffer(5));
			bytes.setInt32(0,0);
			bytes.b[4] = code;
			kha_netsync_Session.the().sendControllerUpdate(this._id(),bytes);
		}
		var _g = 0;
		var _g1 = this.downListeners;
		while(_g < _g1.length) _g1[_g++](code);
	}
	,sendUpEvent: function(code) {
		if(kha_netsync_Session.the() != null) {
			var bytes = new haxe_io_Bytes(new ArrayBuffer(5));
			bytes.setInt32(0,1);
			bytes.b[4] = code;
			kha_netsync_Session.the().sendControllerUpdate(this._id(),bytes);
		}
		var _g = 0;
		var _g1 = this.upListeners;
		while(_g < _g1.length) _g1[_g++](code);
	}
	,sendPressEvent: function(char) {
		if(kha_netsync_Session.the() != null) {
			var bytes = new haxe_io_Bytes(new ArrayBuffer(5));
			bytes.setInt32(0,2);
			bytes.b[4] = HxOverrides.cca(char,0);
			kha_netsync_Session.the().sendControllerUpdate(this._id(),bytes);
		}
		var _g = 0;
		var _g1 = this.pressListeners;
		while(_g < _g1.length) _g1[_g++](char);
	}
	,_receive: function(bytes) {
		var funcindex = bytes.getInt32(0);
		if(funcindex == 0) {
			this.sendDownEvent(bytes.b[4]);
			return;
		}
		if(funcindex == 1) {
			this.sendUpEvent(bytes.b[4]);
			return;
		}
		if(funcindex == 2) {
			var code = bytes.b[4];
			this.sendPressEvent(String.fromCodePoint(code));
			return;
		}
	}
	,__class__: kha_input_Keyboard
});
var kha_input_MouseEventBlockBehavior = $hxEnums["kha.input.MouseEventBlockBehavior"] = { __ename__ : true, __constructs__ : ["Full","None","Custom"]
	,Full: {_hx_index:0,__enum__:"kha.input.MouseEventBlockBehavior",toString:$estr}
	,None: {_hx_index:1,__enum__:"kha.input.MouseEventBlockBehavior",toString:$estr}
	,Custom: ($_=function(func) { return {_hx_index:2,func:func,__enum__:"kha.input.MouseEventBlockBehavior",toString:$estr}; },$_.__params__ = ["func"],$_)
};
var kha_input_MouseCursor = $hxEnums["kha.input.MouseCursor"] = { __ename__ : true, __constructs__ : ["Default","Pointer","Text","EastWestResize","NorthSouthResize","NorthEastResize","SouthEastResize","NorthWestResize","SouthWestResize","Grab","Grabbing","NotAllowed","Wait","Crosshair","Custom"]
	,Default: {_hx_index:0,__enum__:"kha.input.MouseCursor",toString:$estr}
	,Pointer: {_hx_index:1,__enum__:"kha.input.MouseCursor",toString:$estr}
	,Text: {_hx_index:2,__enum__:"kha.input.MouseCursor",toString:$estr}
	,EastWestResize: {_hx_index:3,__enum__:"kha.input.MouseCursor",toString:$estr}
	,NorthSouthResize: {_hx_index:4,__enum__:"kha.input.MouseCursor",toString:$estr}
	,NorthEastResize: {_hx_index:5,__enum__:"kha.input.MouseCursor",toString:$estr}
	,SouthEastResize: {_hx_index:6,__enum__:"kha.input.MouseCursor",toString:$estr}
	,NorthWestResize: {_hx_index:7,__enum__:"kha.input.MouseCursor",toString:$estr}
	,SouthWestResize: {_hx_index:8,__enum__:"kha.input.MouseCursor",toString:$estr}
	,Grab: {_hx_index:9,__enum__:"kha.input.MouseCursor",toString:$estr}
	,Grabbing: {_hx_index:10,__enum__:"kha.input.MouseCursor",toString:$estr}
	,NotAllowed: {_hx_index:11,__enum__:"kha.input.MouseCursor",toString:$estr}
	,Wait: {_hx_index:12,__enum__:"kha.input.MouseCursor",toString:$estr}
	,Crosshair: {_hx_index:13,__enum__:"kha.input.MouseCursor",toString:$estr}
	,Custom: ($_=function(image) { return {_hx_index:14,image:image,__enum__:"kha.input.MouseCursor",toString:$estr}; },$_.__params__ = ["image"],$_)
};
var kha_input_Mouse = $hx_exports["kha"]["input"]["Mouse"] = function() {
	kha_netsync_Controller.call(this);
	kha_input_Mouse.instance = this;
};
$hxClasses["kha.input.Mouse"] = kha_input_Mouse;
kha_input_Mouse.__name__ = "kha.input.Mouse";
kha_input_Mouse.get = function(num) {
	if(num == null) {
		num = 0;
	}
	return kha_SystemImpl.getMouse(num);
};
kha_input_Mouse.setWheelEventBlockBehavior = function(behavior) {
	kha_input_Mouse.wheelEventBlockBehavior = behavior;
};
kha_input_Mouse.__super__ = kha_netsync_Controller;
kha_input_Mouse.prototype = $extend(kha_netsync_Controller.prototype,{
	notify: function(downListener,upListener,moveListener,wheelListener,leaveListener) {
		this.notifyWindowed(0,downListener,upListener,moveListener,wheelListener,leaveListener);
	}
	,remove: function(downListener,upListener,moveListener,wheelListener,leaveListener) {
		this.removeWindowed(0,downListener,upListener,moveListener,wheelListener,leaveListener);
	}
	,notifyWindowed: function(windowId,downListener,upListener,moveListener,wheelListener,leaveListener) {
		if(downListener != null) {
			if(this.windowDownListeners == null) {
				this.windowDownListeners = [];
			}
			while(this.windowDownListeners.length <= windowId) this.windowDownListeners.push([]);
			this.windowDownListeners[windowId].push(downListener);
		}
		if(upListener != null) {
			if(this.windowUpListeners == null) {
				this.windowUpListeners = [];
			}
			while(this.windowUpListeners.length <= windowId) this.windowUpListeners.push([]);
			this.windowUpListeners[windowId].push(upListener);
		}
		if(moveListener != null) {
			if(this.windowMoveListeners == null) {
				this.windowMoveListeners = [];
			}
			while(this.windowMoveListeners.length <= windowId) this.windowMoveListeners.push([]);
			this.windowMoveListeners[windowId].push(moveListener);
		}
		if(wheelListener != null) {
			if(this.windowWheelListeners == null) {
				this.windowWheelListeners = [];
			}
			while(this.windowWheelListeners.length <= windowId) this.windowWheelListeners.push([]);
			this.windowWheelListeners[windowId].push(wheelListener);
		}
		if(leaveListener != null) {
			if(this.windowLeaveListeners == null) {
				this.windowLeaveListeners = [];
			}
			while(this.windowLeaveListeners.length <= windowId) this.windowLeaveListeners.push([]);
			this.windowLeaveListeners[windowId].push(leaveListener);
		}
	}
	,removeWindowed: function(windowId,downListener,upListener,moveListener,wheelListener,leaveListener) {
		if(downListener != null) {
			if(this.windowDownListeners != null) {
				if(windowId < this.windowDownListeners.length) {
					HxOverrides.remove(this.windowDownListeners[windowId],downListener);
				} else {
					haxe_Log.trace("no downListeners for window \"" + windowId + "\" are registered",{ fileName : "kha/input/Mouse.hx", lineNumber : 152, className : "kha.input.Mouse", methodName : "removeWindowed"});
				}
			} else {
				haxe_Log.trace("no downListeners were ever registered",{ fileName : "kha/input/Mouse.hx", lineNumber : 156, className : "kha.input.Mouse", methodName : "removeWindowed"});
			}
		}
		if(upListener != null) {
			if(this.windowUpListeners != null) {
				if(windowId < this.windowUpListeners.length) {
					HxOverrides.remove(this.windowUpListeners[windowId],upListener);
				} else {
					haxe_Log.trace("no upListeners for window \"" + windowId + "\" are registered",{ fileName : "kha/input/Mouse.hx", lineNumber : 166, className : "kha.input.Mouse", methodName : "removeWindowed"});
				}
			} else {
				haxe_Log.trace("no upListeners were ever registered",{ fileName : "kha/input/Mouse.hx", lineNumber : 170, className : "kha.input.Mouse", methodName : "removeWindowed"});
			}
		}
		if(moveListener != null) {
			if(this.windowMoveListeners != null) {
				if(windowId < this.windowMoveListeners.length) {
					HxOverrides.remove(this.windowMoveListeners[windowId],moveListener);
				} else {
					haxe_Log.trace("no moveListeners for window \"" + windowId + "\" are registered",{ fileName : "kha/input/Mouse.hx", lineNumber : 180, className : "kha.input.Mouse", methodName : "removeWindowed"});
				}
			} else {
				haxe_Log.trace("no moveListeners were ever registered",{ fileName : "kha/input/Mouse.hx", lineNumber : 184, className : "kha.input.Mouse", methodName : "removeWindowed"});
			}
		}
		if(wheelListener != null) {
			if(this.windowWheelListeners != null) {
				if(windowId < this.windowWheelListeners.length) {
					HxOverrides.remove(this.windowWheelListeners[windowId],wheelListener);
				} else {
					haxe_Log.trace("no wheelListeners for window \"" + windowId + "\" are registered",{ fileName : "kha/input/Mouse.hx", lineNumber : 194, className : "kha.input.Mouse", methodName : "removeWindowed"});
				}
			} else {
				haxe_Log.trace("no wheelListeners were ever registered",{ fileName : "kha/input/Mouse.hx", lineNumber : 198, className : "kha.input.Mouse", methodName : "removeWindowed"});
			}
		}
		if(leaveListener != null) {
			if(this.windowLeaveListeners != null) {
				if(windowId < this.windowLeaveListeners.length) {
					HxOverrides.remove(this.windowLeaveListeners[windowId],leaveListener);
				} else {
					haxe_Log.trace("no leaveListeners for window \"" + windowId + "\" are registered",{ fileName : "kha/input/Mouse.hx", lineNumber : 208, className : "kha.input.Mouse", methodName : "removeWindowed"});
				}
			} else {
				haxe_Log.trace("no leaveListeners were ever registered",{ fileName : "kha/input/Mouse.hx", lineNumber : 212, className : "kha.input.Mouse", methodName : "removeWindowed"});
			}
		}
	}
	,lock: function() {
	}
	,unlock: function() {
	}
	,canLock: function() {
		return false;
	}
	,isLocked: function() {
		return false;
	}
	,notifyOnLockChange: function(change,error) {
	}
	,removeFromLockChange: function(change,error) {
	}
	,hideSystemCursor: function() {
	}
	,showSystemCursor: function() {
	}
	,setSystemCursor: function(cursor) {
	}
	,windowDownListeners: null
	,windowUpListeners: null
	,windowMoveListeners: null
	,windowWheelListeners: null
	,windowLeaveListeners: null
	,sendLeaveEvent: function(windowId) {
		if(kha_netsync_Session.the() != null) {
			var bytes = new haxe_io_Bytes(new ArrayBuffer(8));
			bytes.setInt32(0,0);
			bytes.setInt32(4,windowId);
			kha_netsync_Session.the().sendControllerUpdate(this._id(),bytes);
		}
		if(this.windowLeaveListeners != null) {
			var _g = 0;
			var _g1 = this.windowLeaveListeners[windowId];
			while(_g < _g1.length) _g1[_g++]();
		}
	}
	,sendDownEvent: function(windowId,button,x,y) {
		if(kha_netsync_Session.the() != null) {
			var bytes = new haxe_io_Bytes(new ArrayBuffer(20));
			bytes.setInt32(0,1);
			bytes.setInt32(4,windowId);
			bytes.setInt32(8,button);
			bytes.setInt32(12,x);
			bytes.setInt32(16,y);
			kha_netsync_Session.the().sendControllerUpdate(this._id(),bytes);
		}
		if(this.windowDownListeners != null) {
			var _g = 0;
			var _g1 = this.windowDownListeners[windowId];
			while(_g < _g1.length) _g1[_g++](button,x,y);
		}
	}
	,sendUpEvent: function(windowId,button,x,y) {
		if(kha_netsync_Session.the() != null) {
			var bytes = new haxe_io_Bytes(new ArrayBuffer(20));
			bytes.setInt32(0,2);
			bytes.setInt32(4,windowId);
			bytes.setInt32(8,button);
			bytes.setInt32(12,x);
			bytes.setInt32(16,y);
			kha_netsync_Session.the().sendControllerUpdate(this._id(),bytes);
		}
		if(this.windowUpListeners != null) {
			var _g = 0;
			var _g1 = this.windowUpListeners[windowId];
			while(_g < _g1.length) _g1[_g++](button,x,y);
		}
	}
	,sendMoveEvent: function(windowId,x,y,movementX,movementY) {
		if(kha_netsync_Session.the() != null) {
			var bytes = new haxe_io_Bytes(new ArrayBuffer(24));
			bytes.setInt32(0,3);
			bytes.setInt32(4,windowId);
			bytes.setInt32(8,x);
			bytes.setInt32(12,y);
			bytes.setInt32(16,movementX);
			bytes.setInt32(20,movementY);
			kha_netsync_Session.the().sendControllerUpdate(this._id(),bytes);
		}
		if(this.windowMoveListeners != null) {
			var _g = 0;
			var _g1 = this.windowMoveListeners[windowId];
			while(_g < _g1.length) _g1[_g++](x,y,movementX,movementY);
		}
	}
	,sendWheelEvent: function(windowId,delta) {
		if(kha_netsync_Session.the() != null) {
			var bytes = new haxe_io_Bytes(new ArrayBuffer(12));
			bytes.setInt32(0,4);
			bytes.setInt32(4,windowId);
			bytes.setInt32(8,delta);
			kha_netsync_Session.the().sendControllerUpdate(this._id(),bytes);
		}
		if(this.windowWheelListeners != null) {
			var _g = 0;
			var _g1 = this.windowWheelListeners[windowId];
			while(_g < _g1.length) _g1[_g++](delta);
		}
	}
	,_receive: function(bytes) {
		var funcindex = bytes.getInt32(0);
		if(funcindex == 0) {
			this.sendLeaveEvent(bytes.getInt32(4));
			return;
		}
		if(funcindex == 1) {
			this.sendDownEvent(bytes.getInt32(4),bytes.getInt32(8),bytes.getInt32(12),bytes.getInt32(16));
			return;
		}
		if(funcindex == 2) {
			this.sendUpEvent(bytes.getInt32(4),bytes.getInt32(8),bytes.getInt32(12),bytes.getInt32(16));
			return;
		}
		if(funcindex == 3) {
			this.sendMoveEvent(bytes.getInt32(4),bytes.getInt32(8),bytes.getInt32(12),bytes.getInt32(16),bytes.getInt32(20));
			return;
		}
		if(funcindex == 4) {
			this.sendWheelEvent(bytes.getInt32(4),bytes.getInt32(8));
			return;
		}
	}
	,__class__: kha_input_Mouse
});
var kha_input_MouseImpl = function() {
	kha_input_Mouse.call(this);
};
$hxClasses["kha.input.MouseImpl"] = kha_input_MouseImpl;
kha_input_MouseImpl.__name__ = "kha.input.MouseImpl";
kha_input_MouseImpl.__super__ = kha_input_Mouse;
kha_input_MouseImpl.prototype = $extend(kha_input_Mouse.prototype,{
	lock: function() {
		kha_SystemImpl.lockMouse();
	}
	,unlock: function() {
		kha_SystemImpl.unlockMouse();
	}
	,canLock: function() {
		return kha_SystemImpl.canLockMouse();
	}
	,isLocked: function() {
		return kha_SystemImpl.isMouseLocked();
	}
	,notifyOnLockChange: function(func,error) {
		kha_SystemImpl.notifyOfMouseLockChange(func,error);
	}
	,removeFromLockChange: function(func,error) {
		kha_SystemImpl.removeFromMouseLockChange(func,error);
	}
	,hideSystemCursor: function() {
		kha_SystemImpl.khanvas.style.cursor = "none";
	}
	,showSystemCursor: function() {
		kha_SystemImpl.khanvas.style.cursor = "default";
	}
	,setSystemCursor: function(cursor) {
		var tmp;
		switch(cursor._hx_index) {
		case 0:
			tmp = "default";
			break;
		case 1:
			tmp = "pointer";
			break;
		case 2:
			tmp = "text";
			break;
		case 3:
			tmp = "ew-resize";
			break;
		case 4:
			tmp = "ns-resize";
			break;
		case 5:
			tmp = "ne-resize";
			break;
		case 6:
			tmp = "se-resize";
			break;
		case 7:
			tmp = "nw-resize";
			break;
		case 8:
			tmp = "sw-resize";
			break;
		case 9:
			tmp = "grab";
			break;
		case 10:
			tmp = "grabbing";
			break;
		case 11:
			tmp = "not-allowed";
			break;
		case 12:
			tmp = "wait";
			break;
		case 13:
			tmp = "crosshair";
			break;
		case 14:
			var _g = cursor.image;
			var canvas = window.document.createElement("canvas");
			canvas.width = _g.get_width();
			canvas.height = _g.get_height();
			if(((_g) instanceof kha_WebGLImage)) {
				canvas.getContext("2d",null).drawImage((js_Boot.__cast(_g , kha_WebGLImage)).image,0,0);
			} else {
				canvas.getContext("2d",null).drawImage((js_Boot.__cast(_g , kha_CanvasImage)).image,0,0);
			}
			var dataURL = canvas.toDataURL("image/png");
			dataURL = StringTools.replace(dataURL,"/^data:image\\/(png|jpg);base64,/","");
			tmp = "url('" + dataURL + "'),auto";
			break;
		}
		kha_SystemImpl.khanvas.style.cursor = tmp;
	}
	,_receive: function(bytes) {
		bytes.getInt32(0);
	}
	,__class__: kha_input_MouseImpl
});
var kha_input_TouchDownEventBlockBehavior = $hxEnums["kha.input.TouchDownEventBlockBehavior"] = { __ename__ : true, __constructs__ : ["Full","None","Custom"]
	,Full: {_hx_index:0,__enum__:"kha.input.TouchDownEventBlockBehavior",toString:$estr}
	,None: {_hx_index:1,__enum__:"kha.input.TouchDownEventBlockBehavior",toString:$estr}
	,Custom: ($_=function(func) { return {_hx_index:2,func:func,__enum__:"kha.input.TouchDownEventBlockBehavior",toString:$estr}; },$_.__params__ = ["func"],$_)
};
var kha_input_Surface = $hx_exports["kha"]["input"]["Surface"] = function() {
	this.touchStartListeners = [];
	this.touchEndListeners = [];
	this.moveListeners = [];
	kha_input_Surface.instance = this;
};
$hxClasses["kha.input.Surface"] = kha_input_Surface;
kha_input_Surface.__name__ = "kha.input.Surface";
kha_input_Surface.get = function(num) {
	if(num == null) {
		num = 0;
	}
	if(num != 0) {
		return null;
	}
	return kha_input_Surface.instance;
};
kha_input_Surface.setTouchDownEventBlockBehavior = function(behavior) {
	kha_input_Surface.touchDownEventBlockBehavior = behavior;
};
kha_input_Surface.prototype = {
	notify: function(touchStartListener,touchEndListener,moveListener) {
		if(touchStartListener != null) {
			this.touchStartListeners.push(touchStartListener);
		}
		if(touchEndListener != null) {
			this.touchEndListeners.push(touchEndListener);
		}
		if(moveListener != null) {
			this.moveListeners.push(moveListener);
		}
	}
	,remove: function(touchStartListener,touchEndListener,moveListener) {
		if(touchStartListener != null) {
			HxOverrides.remove(this.touchStartListeners,touchStartListener);
		}
		if(touchEndListener != null) {
			HxOverrides.remove(this.touchEndListeners,touchEndListener);
		}
		if(moveListener != null) {
			HxOverrides.remove(this.moveListeners,moveListener);
		}
	}
	,touchStartListeners: null
	,touchEndListeners: null
	,moveListeners: null
	,sendTouchStartEvent: function(index,x,y) {
		var _g = 0;
		var _g1 = this.touchStartListeners;
		while(_g < _g1.length) _g1[_g++](index,x,y);
	}
	,sendTouchEndEvent: function(index,x,y) {
		var _g = 0;
		var _g1 = this.touchEndListeners;
		while(_g < _g1.length) _g1[_g++](index,x,y);
	}
	,sendMoveEvent: function(index,x,y) {
		var _g = 0;
		var _g1 = this.moveListeners;
		while(_g < _g1.length) _g1[_g++](index,x,y);
	}
	,__class__: kha_input_Surface
};
var kha_internal_BytesBlob = function(bytes) {
	this.bytes = bytes;
};
$hxClasses["kha.internal.BytesBlob"] = kha_internal_BytesBlob;
kha_internal_BytesBlob.__name__ = "kha.internal.BytesBlob";
kha_internal_BytesBlob.__interfaces__ = [kha_Resource];
kha_internal_BytesBlob.fromBytes = function(bytes) {
	return new kha_internal_BytesBlob(bytes);
};
kha_internal_BytesBlob.alloc = function(size) {
	return new kha_internal_BytesBlob(new haxe_io_Bytes(new ArrayBuffer(size)));
};
kha_internal_BytesBlob.prototype = {
	bytes: null
	,sub: function(start,length) {
		return new kha_internal_BytesBlob(this.bytes.sub(start,length));
	}
	,length: null
	,get_length: function() {
		return this.bytes.length;
	}
	,writeU8: function(position,value) {
		this.bytes.b[position] = value;
	}
	,readU8: function(position) {
		return this.bytes.b[position++];
	}
	,toString: function() {
		return this.bytes.toString();
	}
	,toBytes: function() {
		return this.bytes;
	}
	,__class__: kha_internal_BytesBlob
	,__properties__: {get_length:"get_length"}
};
var kha_internal_HdrFormat = function() { };
$hxClasses["kha.internal.HdrFormat"] = kha_internal_HdrFormat;
kha_internal_HdrFormat.__name__ = "kha.internal.HdrFormat";
kha_internal_HdrFormat.readBuf = function(buf) {
	var bytesRead = 0;
	while(true) {
		buf[bytesRead++] = kha_internal_HdrFormat.buffer[kha_internal_HdrFormat.fileOffset];
		if(!(++kha_internal_HdrFormat.fileOffset < kha_internal_HdrFormat.bufferLength && bytesRead < buf.length)) {
			break;
		}
	}
	return bytesRead;
};
kha_internal_HdrFormat.readBufOffset = function(buf,offset,length) {
	var bytesRead = 0;
	while(true) {
		buf[offset + bytesRead++] = kha_internal_HdrFormat.buffer[kha_internal_HdrFormat.fileOffset];
		if(!(++kha_internal_HdrFormat.fileOffset < kha_internal_HdrFormat.bufferLength && bytesRead < length)) {
			break;
		}
	}
	return bytesRead;
};
kha_internal_HdrFormat.readPixelsRaw = function(buffer,data,offset,numpixels) {
	var numExpected = 4 * numpixels;
	var numRead = kha_internal_HdrFormat.readBufOffset(data,offset,numExpected);
	if(numRead < numExpected) {
		haxe_Log.trace("Error reading raw pixels: got " + numRead + " bytes, expected " + numExpected,{ fileName : "kha/internal/HdrFormat.hx", lineNumber : 39, className : "kha.internal.HdrFormat", methodName : "readPixelsRaw"});
		return;
	}
};
kha_internal_HdrFormat.readPixelsRawRLE = function(buffer,data,offset,scanline_width,num_scanlines) {
	var rgbe = new Uint8Array(4);
	var scanline_buffer = null;
	var ptr;
	var ptr_end;
	var count;
	var buf = new Uint8Array(2);
	while(num_scanlines > 0) {
		if(kha_internal_HdrFormat.readBuf(rgbe) < rgbe.length) {
			haxe_Log.trace("Error reading bytes: expected " + rgbe.length,{ fileName : "kha/internal/HdrFormat.hx", lineNumber : 55, className : "kha.internal.HdrFormat", methodName : "readPixelsRawRLE"});
			return;
		}
		if(rgbe[0] != 2 || rgbe[1] != 2 || (rgbe[2] & 128) != 0) {
			data[offset++] = rgbe[0];
			data[offset++] = rgbe[1];
			data[offset++] = rgbe[2];
			data[offset++] = rgbe[3];
			kha_internal_HdrFormat.readPixelsRaw(buffer,data,offset,scanline_width * num_scanlines - 1);
			return;
		}
		if(((rgbe[2] & 255) << 8 | rgbe[3] & 255) != scanline_width) {
			haxe_Log.trace("Wrong scanline width " + ((rgbe[2] & 255) << 8 | rgbe[3] & 255) + ", expected " + scanline_width,{ fileName : "kha/internal/HdrFormat.hx", lineNumber : 70, className : "kha.internal.HdrFormat", methodName : "readPixelsRawRLE"});
			return;
		}
		if(scanline_buffer == null) {
			scanline_buffer = new Uint8Array(4 * scanline_width);
		}
		ptr = 0;
		var _g = 0;
		while(_g < 4) {
			ptr_end = (_g++ + 1) * scanline_width;
			while(ptr < ptr_end) {
				if(kha_internal_HdrFormat.readBuf(buf) < buf.length) {
					haxe_Log.trace("Error reading 2-byte buffer",{ fileName : "kha/internal/HdrFormat.hx", lineNumber : 84, className : "kha.internal.HdrFormat", methodName : "readPixelsRawRLE"});
					return;
				}
				if((buf[0] & 255) > 128) {
					count = (buf[0] & 255) - 128;
					if(count == 0 || count > ptr_end - ptr) {
						haxe_Log.trace("Bad scanline data",{ fileName : "kha/internal/HdrFormat.hx", lineNumber : 91, className : "kha.internal.HdrFormat", methodName : "readPixelsRawRLE"});
						return;
					}
					while(count-- > 0) scanline_buffer[ptr++] = buf[1];
				} else {
					count = buf[0] & 255;
					if(count == 0 || count > ptr_end - ptr) {
						haxe_Log.trace("Bad scanline data",{ fileName : "kha/internal/HdrFormat.hx", lineNumber : 102, className : "kha.internal.HdrFormat", methodName : "readPixelsRawRLE"});
						return;
					}
					scanline_buffer[ptr++] = buf[1];
					if(--count > 0) {
						if(kha_internal_HdrFormat.readBufOffset(scanline_buffer,ptr,count) < count) {
							haxe_Log.trace("Error reading non-run data",{ fileName : "kha/internal/HdrFormat.hx", lineNumber : 108, className : "kha.internal.HdrFormat", methodName : "readPixelsRawRLE"});
							return;
						}
						ptr += count;
					}
				}
			}
		}
		var _g1 = 0;
		while(_g1 < scanline_width) {
			var i = _g1++;
			data[offset] = scanline_buffer[i];
			data[offset + 1] = scanline_buffer[i + scanline_width];
			data[offset + 2] = scanline_buffer[i + 2 * scanline_width];
			data[offset + 3] = scanline_buffer[i + 3 * scanline_width];
			offset += 4;
		}
		--num_scanlines;
	}
};
kha_internal_HdrFormat.readLine = function() {
	var buf = "";
	while(true) {
		var b = kha_internal_HdrFormat.buffer[kha_internal_HdrFormat.fileOffset];
		if(b == 10) {
			++kha_internal_HdrFormat.fileOffset;
			break;
		}
		buf += String.fromCodePoint(b);
		if(!(++kha_internal_HdrFormat.fileOffset < kha_internal_HdrFormat.bufferLength)) {
			break;
		}
	}
	return buf;
};
kha_internal_HdrFormat.parse = function(bytes) {
	kha_internal_HdrFormat.buffer = haxe_io_UInt8Array.fromBytes(bytes);
	kha_internal_HdrFormat.bufferLength = kha_internal_HdrFormat.buffer.length;
	kha_internal_HdrFormat.fileOffset = 0;
	var width = 0;
	var height = 0;
	var rle = false;
	var _g = 0;
	while(_g < 20) {
		++_g;
		var line = kha_internal_HdrFormat.readLine();
		if(kha_internal_HdrFormat.formatPattern.match(line)) {
			rle = true;
		} else if(kha_internal_HdrFormat.exposurePattern.match(line)) {
			parseFloat(kha_internal_HdrFormat.exposurePattern.matched(1));
		} else if(kha_internal_HdrFormat.widthHeightPattern.match(line)) {
			height = Std.parseInt(kha_internal_HdrFormat.widthHeightPattern.matched(1));
			width = Std.parseInt(kha_internal_HdrFormat.widthHeightPattern.matched(2));
			break;
		}
	}
	if(!rle) {
		haxe_Log.trace("File is not run length encoded!",{ fileName : "kha/internal/HdrFormat.hx", lineNumber : 171, className : "kha.internal.HdrFormat", methodName : "parse"});
		return null;
	}
	var data = new Uint8Array(width * height * 4);
	kha_internal_HdrFormat.readPixelsRawRLE(kha_internal_HdrFormat.buffer,data,0,width,height);
	var floatData = new Float32Array(width * height * 4);
	var offset = 0;
	while(offset < data.length) {
		var r = data[offset] / 255;
		var g = data[offset + 1] / 255;
		var b = data[offset + 2] / 255;
		var f = Math.pow(2.0,data[offset + 3] - 128.0);
		r *= f;
		g *= f;
		b *= f;
		floatData[offset] = r;
		floatData[offset + 1] = g;
		floatData[offset + 2] = b;
		floatData[offset + 3] = 1.0;
		offset += 4;
	}
	return { width : width, height : height, data : floatData};
};
var kha_js_AEAudioChannel = function(element,looping) {
	this.stopped = false;
	this.element = element;
	this.looping = looping;
};
$hxClasses["kha.js.AEAudioChannel"] = kha_js_AEAudioChannel;
kha_js_AEAudioChannel.__name__ = "kha.js.AEAudioChannel";
kha_js_AEAudioChannel.__interfaces__ = [kha_audio1_AudioChannel];
kha_js_AEAudioChannel.prototype = {
	element: null
	,stopped: null
	,looping: null
	,play: function() {
		this.stopped = false;
		this.element.play();
	}
	,get_length: function() {
		var f = this.element.duration;
		if(isFinite(f)) {
			return this.element.duration;
		} else {
			return Infinity;
		}
	}
	,set_position: function(value) {
		return this.element.currentTime = value;
	}
	,__class__: kha_js_AEAudioChannel
	,__properties__: {set_position:"set_position",get_length:"get_length"}
};
var kha_js_AudioElementAudio = function() { };
$hxClasses["kha.js.AudioElementAudio"] = kha_js_AudioElementAudio;
kha_js_AudioElementAudio.__name__ = "kha.js.AudioElementAudio";
kha_js_AudioElementAudio.play = function(sound,loop) {
	if(loop == null) {
		loop = false;
	}
	return kha_js_AudioElementAudio.stream(sound,loop);
};
kha_js_AudioElementAudio.stream = function(sound,loop) {
	if(loop == null) {
		loop = false;
	}
	sound.element.loop = loop;
	var channel = new kha_js_AEAudioChannel(sound.element,loop);
	channel.play();
	return channel;
};
var kha_js_CanvasGraphics = function(canvas) {
	this.bakedQuadCache = new kha_AlignedQuad();
	this.clipping = false;
	kha_graphics2_Graphics.call(this);
	this.canvas = canvas;
	kha_js_CanvasGraphics.instance = this;
	this.myColor = kha_Color.fromBytes(0,0,0);
};
$hxClasses["kha.js.CanvasGraphics"] = kha_js_CanvasGraphics;
kha_js_CanvasGraphics.__name__ = "kha.js.CanvasGraphics";
kha_js_CanvasGraphics.__super__ = kha_graphics2_Graphics;
kha_js_CanvasGraphics.prototype = $extend(kha_graphics2_Graphics.prototype,{
	canvas: null
	,webfont: null
	,myColor: null
	,scaleQuality: null
	,clipping: null
	,begin: function(clear,clearColor) {
		if(clear == null) {
			clear = true;
		}
		if(clear) {
			this.clear(clearColor);
		}
	}
	,clear: function(color) {
		if(color == null) {
			color = 0;
		}
		this.canvas.strokeStyle = "rgba(" + ((color & 16711680) >>> 16) + "," + ((color & 65280) >>> 8) + "," + (color & 255) + "," + (color >>> 24) * 0.00392156862745098 + ")";
		this.canvas.fillStyle = "rgba(" + ((color & 16711680) >>> 16) + "," + ((color & 65280) >>> 8) + "," + (color & 255) + "," + (color >>> 24) * 0.00392156862745098 + ")";
		if((color >>> 24) * 0.00392156862745098 == 0) {
			this.canvas.clearRect(0,0,this.canvas.canvas.width,this.canvas.canvas.height);
		} else {
			this.canvas.fillRect(0,0,this.canvas.canvas.width,this.canvas.canvas.height);
		}
		this.set_color(this.myColor);
	}
	,end: function() {
	}
	,drawImage: function(img,x,y) {
		this.canvas.globalAlpha = this.get_opacity();
		this.canvas.drawImage((js_Boot.__cast(img , kha_CanvasImage)).image,x,y);
		this.canvas.globalAlpha = 1;
	}
	,drawScaledSubImage: function(image,sx,sy,sw,sh,dx,dy,dw,dh) {
		this.canvas.globalAlpha = this.get_opacity();
		try {
			if(dw < 0 || dh < 0) {
				this.canvas.save();
				this.canvas.translate(dx,dy);
				var x = 0.0;
				var y = 0.0;
				if(dw < 0) {
					this.canvas.scale(-1,1);
					x = -dw;
				}
				if(dh < 0) {
					this.canvas.scale(1,-1);
					y = -dh;
				}
				this.canvas.drawImage((js_Boot.__cast(image , kha_CanvasImage)).image,sx,sy,sw,sh,x,y,dw,dh);
				this.canvas.restore();
			} else {
				this.canvas.drawImage((js_Boot.__cast(image , kha_CanvasImage)).image,sx,sy,sw,sh,dx,dy,dw,dh);
			}
		} catch( _g ) {
		}
		this.canvas.globalAlpha = 1;
	}
	,set_color: function(color) {
		this.myColor = color;
		this.canvas.strokeStyle = "rgba(" + ((color & 16711680) >>> 16) + "," + ((color & 65280) >>> 8) + "," + (color & 255) + "," + (color >>> 24) * 0.00392156862745098 + ")";
		this.canvas.fillStyle = "rgba(" + ((color & 16711680) >>> 16) + "," + ((color & 65280) >>> 8) + "," + (color & 255) + "," + (color >>> 24) * 0.00392156862745098 + ")";
		return color;
	}
	,get_color: function() {
		return this.myColor;
	}
	,set_imageScaleQuality: function(value) {
		if(value == 0) {
			this.canvas.mozImageSmoothingEnabled = false;
			this.canvas.webkitImageSmoothingEnabled = false;
			this.canvas.msImageSmoothingEnabled = false;
			this.canvas.imageSmoothingEnabled = false;
		} else {
			this.canvas.mozImageSmoothingEnabled = true;
			this.canvas.webkitImageSmoothingEnabled = true;
			this.canvas.msImageSmoothingEnabled = true;
			this.canvas.imageSmoothingEnabled = true;
		}
		return this.scaleQuality = value;
	}
	,drawRect: function(x,y,width,height,strength) {
		if(strength == null) {
			strength = 1.0;
		}
		this.canvas.beginPath();
		var oldStrength = this.canvas.lineWidth;
		this.canvas.lineWidth = Math.round(strength);
		this.canvas.rect(x,y,width,height);
		this.canvas.stroke();
		this.canvas.lineWidth = oldStrength;
	}
	,fillRect: function(x,y,width,height) {
		var tmp = this.get_opacity();
		this.canvas.globalAlpha = tmp * ((this.myColor >>> 24) * 0.00392156862745098);
		this.canvas.fillRect(x,y,width,height);
		this.canvas.globalAlpha = this.get_opacity();
	}
	,drawArc: function(cx,cy,radius,sAngle,eAngle,strength,ccw) {
		if(ccw == null) {
			ccw = false;
		}
		if(strength == null) {
			strength = 1.0;
		}
		this.canvas.beginPath();
		var oldStrength = this.canvas.lineWidth;
		this.canvas.lineWidth = Math.round(strength);
		this.canvas.arc(cx,cy,radius,sAngle,eAngle,ccw);
		this.canvas.stroke();
		this.canvas.lineWidth = oldStrength;
	}
	,drawCircle: function(cx,cy,radius,strength) {
		if(strength == null) {
			strength = 1.0;
		}
		var eAngle = 2 * Math.PI;
		this.canvas.beginPath();
		var oldStrength = this.canvas.lineWidth;
		this.canvas.lineWidth = Math.round(strength);
		this.canvas.arc(cx,cy,radius,0,eAngle,false);
		this.canvas.stroke();
		this.canvas.lineWidth = oldStrength;
	}
	,fillCircle: function(cx,cy,radius) {
		this.canvas.beginPath();
		this.canvas.arc(cx,cy,radius,0,2 * Math.PI,false);
		this.canvas.fill();
	}
	,bakedQuadCache: null
	,drawString: function(text,x,y) {
		var image = this.webfont.getImage(this.get_fontSize(),this.myColor);
		if(image.width > 0) {
			var xpos = x;
			var _g = 0;
			var _g1 = text.length;
			while(_g < _g1) {
				var q = this.webfont.kravur._get(this.get_fontSize()).getBakedQuad(this.bakedQuadCache,kha_graphics2_Graphics.fontGlyphs.indexOf(HxOverrides.cca(text,_g++)),xpos,y);
				if(q != null) {
					if(q.s1 - q.s0 > 0 && q.t1 - q.t0 > 0 && q.x1 - q.x0 > 0 && q.y1 - q.y0 > 0) {
						this.canvas.drawImage(image,q.s0 * image.width,q.t0 * image.height,(q.s1 - q.s0) * image.width,(q.t1 - q.t0) * image.height,q.x0,q.y0,q.x1 - q.x0,q.y1 - q.y0);
					}
					xpos += q.xadvance;
				}
			}
		}
	}
	,drawCharacters: function(text,start,length,x,y) {
		var image = this.webfont.getImage(this.get_fontSize(),this.myColor);
		if(image.width > 0) {
			var xpos = x;
			var _g = start;
			var _g1 = start + length;
			while(_g < _g1) {
				var q = this.webfont.kravur._get(this.get_fontSize()).getBakedQuad(this.bakedQuadCache,kha_graphics2_Graphics.fontGlyphs.indexOf(text[_g++]),xpos,y);
				if(q != null) {
					if(q.s1 - q.s0 > 0 && q.t1 - q.t0 > 0 && q.x1 - q.x0 > 0 && q.y1 - q.y0 > 0) {
						this.canvas.drawImage(image,q.s0 * image.width,q.t0 * image.height,(q.s1 - q.s0) * image.width,(q.t1 - q.t0) * image.height,q.x0,q.y0,q.x1 - q.x0,q.y1 - q.y0);
					}
					xpos += q.xadvance;
				}
			}
		}
	}
	,set_font: function(font) {
		this.webfont = js_Boot.__cast(font , kha_js_Font);
		return this.webfont;
	}
	,get_font: function() {
		return this.webfont;
	}
	,drawLine: function(x1,y1,x2,y2,strength) {
		if(strength == null) {
			strength = 1.0;
		}
		this.canvas.beginPath();
		var oldWith = this.canvas.lineWidth;
		this.canvas.lineWidth = Math.round(strength);
		this.canvas.moveTo(x1,y1);
		this.canvas.lineTo(x2,y2);
		this.canvas.moveTo(0,0);
		this.canvas.stroke();
		this.canvas.lineWidth = oldWith;
	}
	,fillTriangle: function(x1,y1,x2,y2,x3,y3) {
		this.canvas.beginPath();
		this.canvas.moveTo(x1,y1);
		this.canvas.lineTo(x2,y2);
		this.canvas.lineTo(x3,y3);
		this.canvas.closePath();
		this.canvas.fill();
	}
	,scissor: function(x,y,width,height) {
		if(!this.clipping) {
			this.canvas.save();
			this.clipping = true;
		}
		this.canvas.beginPath();
		this.canvas.rect(x,y,width,height);
		this.canvas.clip();
	}
	,disableScissor: function() {
		if(this.clipping) {
			this.canvas.restore();
			this.clipping = false;
		}
	}
	,drawVideo: function(video,x,y,width,height) {
		this.canvas.drawImage((js_Boot.__cast(video , kha_js_Video)).element,x,y,width,height);
	}
	,setTransformation: function(transformation) {
		this.canvas.setTransform(transformation._00,transformation._01,transformation._10,transformation._11,transformation._20,transformation._21);
	}
	,__class__: kha_js_CanvasGraphics
});
var kha_js_Font = function(blob) {
	this.images = new haxe_ds_IntMap();
	this.kravur = new kha_js_Font.Kravur(blob);
};
$hxClasses["kha.js.Font"] = kha_js_Font;
kha_js_Font.__name__ = "kha.js.Font";
kha_js_Font.__interfaces__ = [kha_Resource];
kha_js_Font.prototype = {
	kravur: null
	,images: null
	,getImage: function(fontSize,color) {
		var imageIndex = fontSize * 10000 + kha_graphics2_Graphics.fontGlyphs.length;
		if(!this.images.h.hasOwnProperty(imageIndex)) {
			this.images.h[imageIndex] = new haxe_ds_IntMap();
		}
		if(!this.images.h[imageIndex].h.hasOwnProperty(color)) {
			var kravur = this.kravur._get(fontSize);
			var canvas = window.document.createElement("canvas");
			canvas.width = kravur.width;
			canvas.height = kravur.height;
			var ctx = canvas.getContext("2d");
			ctx.fillStyle = "black";
			ctx.fillRect(0,0,kravur.width,kravur.height);
			var imageData = ctx.getImageData(0,0,kravur.width,kravur.height);
			var bytes = (js_Boot.__cast(kravur.getTexture() , kha_CanvasImage)).bytes;
			var _g = 0;
			var _g1 = bytes.length;
			while(_g < _g1) {
				var i = _g++;
				imageData.data[i * 4] = (color & 16711680) >>> 16;
				imageData.data[i * 4 + 1] = (color & 65280) >>> 8;
				imageData.data[i * 4 + 2] = color & 255;
				imageData.data[i * 4 + 3] = bytes.b[i];
			}
			ctx.putImageData(imageData,0,0);
			var img = window.document.createElement("img");
			img.src = canvas.toDataURL("image/png");
			this.images.h[imageIndex].h[color] = img;
			return img;
		}
		return this.images.h[imageIndex].h[color];
	}
	,__class__: kha_js_Font
};
var kha_js_MobileWebAudio = function() { };
$hxClasses["kha.js.MobileWebAudio"] = kha_js_MobileWebAudio;
kha_js_MobileWebAudio.__name__ = "kha.js.MobileWebAudio";
kha_js_MobileWebAudio._init = function() {
	try {
		kha_js_MobileWebAudio._context = new AudioContext();
		return;
	} catch( _g ) {
	}
	try {
		this._context = new webkitAudioContext();
		return;
	} catch( _g ) {
	}
};
kha_js_MobileWebAudio.play = function(sound,loop) {
	if(loop == null) {
		loop = false;
	}
	var channel = new kha_js_MobileWebAudioChannel(sound,loop);
	channel.play();
	return channel;
};
kha_js_MobileWebAudio.stream = function(sound,loop) {
	if(loop == null) {
		loop = false;
	}
	return kha_js_MobileWebAudio.play(sound,loop);
};
var kha_js_MobileWebAudioChannel = function(sound,loop) {
	this.stopped = false;
	this.paused = false;
	this.buffer = sound._buffer;
	this.loop = loop;
	this.createSource();
};
$hxClasses["kha.js.MobileWebAudioChannel"] = kha_js_MobileWebAudioChannel;
kha_js_MobileWebAudioChannel.__name__ = "kha.js.MobileWebAudioChannel";
kha_js_MobileWebAudioChannel.__interfaces__ = [kha_audio1_AudioChannel];
kha_js_MobileWebAudioChannel.prototype = {
	buffer: null
	,loop: null
	,source: null
	,gain: null
	,startTime: null
	,pauseTime: null
	,paused: null
	,stopped: null
	,createSource: function() {
		var _gthis = this;
		this.source = kha_js_MobileWebAudio._context.createBufferSource();
		this.source.loop = this.loop;
		this.source.buffer = this.buffer;
		this.source.onended = function() {
			_gthis.stopped = true;
		};
		this.gain = kha_js_MobileWebAudio._context.createGain();
		this.source.connect(this.gain);
		this.gain.connect(kha_js_MobileWebAudio._context.destination);
	}
	,play: function() {
		if(this.paused || this.stopped) {
			this.createSource();
		}
		this.stopped = false;
		if(this.paused) {
			this.paused = false;
			this.startTime = kha_js_MobileWebAudio._context.currentTime - this.pauseTime;
			this.source.start(0,this.pauseTime);
		} else {
			this.startTime = kha_js_MobileWebAudio._context.currentTime;
			this.source.start();
		}
	}
	,__class__: kha_js_MobileWebAudioChannel
};
var kha_js_MobileWebAudioSound = function(filename,done,failed) {
	var _gthis = this;
	kha_Sound.call(this);
	var request = new XMLHttpRequest();
	request.open("GET",filename,true);
	request.responseType = "arraybuffer";
	request.onerror = function() {
		failed({ url : filename});
	};
	request.onload = function() {
		_gthis.compressedData = haxe_io_Bytes.ofData(request.response);
		_gthis.uncompressedData = null;
		kha_js_MobileWebAudio._context.decodeAudioData(_gthis.compressedData.b.bufferValue,function(buffer) {
			_gthis.length = buffer.duration;
			_gthis.channels = buffer.numberOfChannels;
			_gthis._buffer = buffer;
			done(_gthis);
		},function() {
			failed({ url : filename, error : "Audio format not supported"});
		});
	};
	request.send(null);
};
$hxClasses["kha.js.MobileWebAudioSound"] = kha_js_MobileWebAudioSound;
kha_js_MobileWebAudioSound.__name__ = "kha.js.MobileWebAudioSound";
kha_js_MobileWebAudioSound.__super__ = kha_Sound;
kha_js_MobileWebAudioSound.prototype = $extend(kha_Sound.prototype,{
	_buffer: null
	,uncompress: function(done) {
		done();
	}
	,__class__: kha_js_MobileWebAudioSound
});
var kha_js_Sound = function(filenames,done,failed) {
	kha_Sound.call(this);
	this.done = done;
	this.failed = failed;
	kha_js_Sound.loading.push(this);
	this.element = window.document.createElement("audio");
	this.filenames = [];
	var _g = 0;
	while(_g < filenames.length) {
		var filename = filenames[_g];
		++_g;
		if(this.element.canPlayType("audio/ogg") != "" && StringTools.endsWith(filename,".ogg")) {
			this.filenames.push(filename);
		}
		if(this.element.canPlayType("audio/mp4") != "" && StringTools.endsWith(filename,".mp4")) {
			this.filenames.push(filename);
		}
		if(this.element.canPlayType("audio/wav") != "" && StringTools.endsWith(filename,".wav")) {
			this.filenames.push(filename);
		}
	}
	this.element.addEventListener("error",$bind(this,this.errorListener),false);
	this.element.addEventListener("canplay",$bind(this,this.canPlayThroughListener),false);
	this.element.src = this.filenames[0];
	this.element.preload = "auto";
	this.element.load();
};
$hxClasses["kha.js.Sound"] = kha_js_Sound;
kha_js_Sound.__name__ = "kha.js.Sound";
kha_js_Sound.__super__ = kha_Sound;
kha_js_Sound.prototype = $extend(kha_Sound.prototype,{
	filenames: null
	,done: null
	,failed: null
	,element: null
	,errorListener: function(eventInfo) {
		if(this.element.error.code == 4) {
			var _g = 0;
			var _g1 = this.filenames.length - 1;
			while(_g < _g1) {
				var i = _g++;
				if(this.element.src == this.filenames[i]) {
					this.element.src = this.filenames[i + 1];
					return;
				}
			}
		}
		this.failed({ url : this.element.src});
		this.finishAsset();
	}
	,canPlayThroughListener: function(eventInfo) {
		this.finishAsset();
	}
	,finishAsset: function() {
		this.element.removeEventListener("error",$bind(this,this.errorListener),false);
		this.element.removeEventListener("canplaythrough",$bind(this,this.canPlayThroughListener),false);
		this.done(this);
		HxOverrides.remove(kha_js_Sound.loading,this);
	}
	,uncompress: function(done) {
		done();
	}
	,__class__: kha_js_Sound
});
var kha_js_Video = function() {
	kha_Video.call(this);
};
$hxClasses["kha.js.Video"] = kha_js_Video;
kha_js_Video.__name__ = "kha.js.Video";
kha_js_Video.fromFile = function(filenames,done) {
	var video = new kha_js_Video();
	video.done = done;
	video.element = window.document.createElement("video");
	video.filenames = [];
	var _g = 0;
	while(_g < filenames.length) {
		var filename = filenames[_g];
		++_g;
		if(video.element.canPlayType("video/webm") != "" && StringTools.endsWith(filename,".webm")) {
			video.filenames.push(filename);
		}
		if(video.element.canPlayType("video/mp4") != "" && StringTools.endsWith(filename,".mp4")) {
			video.filenames.push(filename);
		}
	}
	video.element.addEventListener("error",$bind(video,video.errorListener),false);
	video.element.addEventListener("canplaythrough",$bind(video,video.canPlayThroughListener),false);
	video.element.addEventListener("loadedmetadata",kha_js_Video.onMetaDataLoaded,false);
	video.element.preload = "auto";
	video.element.crossOrigin = "anonymous";
	video.element.muted = true;
	video.element.src = video.filenames[0];
};
kha_js_Video.onMetaDataLoaded = function(e) {
	e.target.play();
};
kha_js_Video.__super__ = kha_Video;
kha_js_Video.prototype = $extend(kha_Video.prototype,{
	element: null
	,texture: null
	,filenames: null
	,done: null
	,width: function() {
		return this.element.videoWidth;
	}
	,height: function() {
		return this.element.videoHeight;
	}
	,play: function(loop) {
		if(loop == null) {
			loop = false;
		}
		try {
			this.element.loop = loop;
			this.element.play();
		} catch( _g ) {
			haxe_Log.trace(haxe_Exception.caught(_g).unwrap(),{ fileName : "kha/js/Video.hx", lineNumber : 101, className : "kha.js.Video", methodName : "play"});
		}
	}
	,pause: function() {
		try {
			this.element.pause();
		} catch( _g ) {
			haxe_Log.trace(haxe_Exception.caught(_g).unwrap(),{ fileName : "kha/js/Video.hx", lineNumber : 110, className : "kha.js.Video", methodName : "pause"});
		}
	}
	,stop: function() {
		try {
			this.element.pause();
			this.element.currentTime = 0;
		} catch( _g ) {
			haxe_Log.trace(haxe_Exception.caught(_g).unwrap(),{ fileName : "kha/js/Video.hx", lineNumber : 120, className : "kha.js.Video", methodName : "stop"});
		}
	}
	,getCurrentPos: function() {
		return Math.ceil(this.element.currentTime * 1000);
	}
	,set_position: function(value) {
		this.element.currentTime = value / 1000;
		return value;
	}
	,setVolume: function(volume) {
		if(this.element.muted && volume > 0) {
			this.element.muted = false;
		}
		this.element.volume = volume;
	}
	,getLength: function() {
		var f = this.element.duration;
		if(isFinite(f)) {
			return Math.floor(this.element.duration * 1000);
		} else {
			return -1;
		}
	}
	,errorListener: function(eventInfo) {
		if(this.element.error.code == 4) {
			var _g = 0;
			var _g1 = this.filenames.length - 1;
			while(_g < _g1) {
				var i = _g++;
				if(this.element.src == this.filenames[i]) {
					this.element.src = this.filenames[i + 1];
					return;
				}
			}
		}
		haxe_Log.trace("Error loading " + this.element.src,{ fileName : "kha/js/Video.hx", lineNumber : 167, className : "kha.js.Video", methodName : "errorListener"});
		this.finishAsset();
	}
	,canPlayThroughListener: function(eventInfo) {
		this.finishAsset();
	}
	,finishAsset: function() {
		this.element.removeEventListener("error",$bind(this,this.errorListener),false);
		this.element.removeEventListener("canplaythrough",$bind(this,this.canPlayThroughListener),false);
		this.element.removeEventListener("loadedmetadata",kha_js_Video.onMetaDataLoaded,false);
		if(kha_SystemImpl.gl != null) {
			this.texture = kha_Image.fromVideo(this);
		}
		this.done(this);
	}
	,__class__: kha_js_Video
});
var kha_js_WebAudioSound = function(filename,done,failed) {
	var _gthis = this;
	kha_Sound.call(this);
	var request = new XMLHttpRequest();
	request.open("GET",filename,true);
	request.responseType = "arraybuffer";
	request.onerror = function() {
		failed({ url : filename});
	};
	request.onload = function() {
		_gthis.compressedData = haxe_io_Bytes.ofData(request.response);
		_gthis.uncompressedData = null;
		done(_gthis);
	};
	request.send(null);
};
$hxClasses["kha.js.WebAudioSound"] = kha_js_WebAudioSound;
kha_js_WebAudioSound.__name__ = "kha.js.WebAudioSound";
kha_js_WebAudioSound.__super__ = kha_Sound;
kha_js_WebAudioSound.prototype = $extend(kha_Sound.prototype,{
	superUncompress: function(done) {
		kha_Sound.prototype.uncompress.call(this,done);
	}
	,uncompress: function(done) {
		var _gthis = this;
		kha_audio2_Audio._context.decodeAudioData(this.compressedData.b.bufferValue,function(buffer) {
			var ch0 = buffer.getChannelData(0);
			var ch1 = buffer.numberOfChannels == 1 ? ch0 : buffer.getChannelData(1);
			var len = ch0.length;
			_gthis.uncompressedData = kha_arrays_Float32Array._new(len * 2);
			_gthis.length = buffer.duration;
			_gthis.channels = buffer.numberOfChannels;
			_gthis.sampleRate = Math.round(buffer.sampleRate);
			var idx = 0;
			var i = 0;
			var lidx = len * 2;
			var uncompressInner = null;
			uncompressInner = function() {
				var chk_len = idx + 11025;
				var next_chk = chk_len > lidx ? lidx : chk_len;
				while(idx < next_chk) {
					kha_arrays_Float32Array.set(_gthis.uncompressedData,idx,ch0[i]);
					kha_arrays_Float32Array.set(_gthis.uncompressedData,idx + 1,ch1[i]);
					idx += 2;
					i += 1;
				}
				if(idx < lidx) {
					window.setTimeout(uncompressInner,0);
				} else {
					_gthis.compressedData = null;
					done();
				}
			};
			uncompressInner();
		},function() {
			_gthis.superUncompress(done);
		});
	}
	,__class__: kha_js_WebAudioSound
});
var kha_js_graphics4_ConstantLocation = function(value,type) {
	this.value = value;
	this.type = type;
};
$hxClasses["kha.js.graphics4.ConstantLocation"] = kha_js_graphics4_ConstantLocation;
kha_js_graphics4_ConstantLocation.__name__ = "kha.js.graphics4.ConstantLocation";
kha_js_graphics4_ConstantLocation.__interfaces__ = [kha_graphics4_ConstantLocation];
kha_js_graphics4_ConstantLocation.prototype = {
	value: null
	,type: null
	,__class__: kha_js_graphics4_ConstantLocation
};
var kha_js_graphics4_Graphics = function(renderTarget) {
	this.matrixCache = kha_arrays_Float32Array._new(16);
	this.useVertexAttributes = 0;
	this.isDepthAttachment = false;
	this.isCubeMap = false;
	this.colorMaskAlpha = true;
	this.colorMaskBlue = true;
	this.colorMaskGreen = true;
	this.colorMaskRed = true;
	this.depthMask = false;
	this.depthTest = false;
	this.currentPipeline = null;
	this.renderTarget = renderTarget;
	this.init();
	if(kha_SystemImpl.gl2) {
		this.instancedExtension = true;
	} else {
		this.instancedExtension = kha_SystemImpl.gl.getExtension("ANGLE_instanced_arrays");
		this.blendMinMaxExtension = kha_SystemImpl.gl.getExtension("EXT_blend_minmax");
	}
};
$hxClasses["kha.js.graphics4.Graphics"] = kha_js_graphics4_Graphics;
kha_js_graphics4_Graphics.__name__ = "kha.js.graphics4.Graphics";
kha_js_graphics4_Graphics.__interfaces__ = [kha_graphics4_Graphics];
kha_js_graphics4_Graphics.getBlendFunc = function(factor) {
	switch(factor) {
	case 1:
		return 1;
	case 0:case 2:
		return 0;
	case 3:
		return 770;
	case 4:
		return 772;
	case 5:
		return 771;
	case 6:
		return 773;
	case 7:
		return 768;
	case 8:
		return 774;
	case 9:
		return 769;
	case 10:
		return 775;
	}
};
kha_js_graphics4_Graphics.getBlendOp = function(op) {
	switch(op) {
	case 0:
		return 32774;
	case 1:
		return 32778;
	case 2:
		return 32779;
	case 3:
		return 32775;
	case 4:
		return 32776;
	}
};
kha_js_graphics4_Graphics.prototype = {
	currentPipeline: null
	,depthTest: null
	,depthMask: null
	,colorMaskRed: null
	,colorMaskGreen: null
	,colorMaskBlue: null
	,colorMaskAlpha: null
	,indicesCount: null
	,renderTarget: null
	,renderTargetFrameBuffer: null
	,renderTargetMSAA: null
	,renderTargetTexture: null
	,isCubeMap: null
	,isDepthAttachment: null
	,instancedExtension: null
	,blendMinMaxExtension: null
	,useVertexAttributes: null
	,init: function() {
		if(this.renderTarget == null) {
			return;
		}
		this.isCubeMap = ((this.renderTarget) instanceof kha_graphics4_CubeMap);
		if(this.isCubeMap) {
			var cubeMap = js_Boot.__cast(this.renderTarget , kha_graphics4_CubeMap);
			this.renderTargetFrameBuffer = cubeMap.frameBuffer;
			this.renderTargetTexture = cubeMap.texture;
			this.isDepthAttachment = cubeMap.isDepthAttachment;
		} else {
			var image = js_Boot.__cast(this.renderTarget , kha_WebGLImage);
			this.renderTargetFrameBuffer = image.frameBuffer;
			this.renderTargetMSAA = image.MSAAFrameBuffer;
			this.renderTargetTexture = image.texture;
		}
	}
	,begin: function(additionalRenderTargets) {
		kha_SystemImpl.gl.enable(3042);
		kha_SystemImpl.gl.blendFunc(770,771);
		if(this.renderTarget == null) {
			kha_SystemImpl.gl.bindFramebuffer(36160,null);
			kha_SystemImpl.gl.viewport(0,0,kha_System.windowWidth(),kha_System.windowHeight());
		} else {
			kha_SystemImpl.gl.bindFramebuffer(36160,this.renderTargetFrameBuffer);
			kha_SystemImpl.gl.viewport(0,0,this.renderTarget.get_width(),this.renderTarget.get_height());
			if(additionalRenderTargets != null) {
				kha_SystemImpl.gl.framebufferTexture2D(36160,kha_SystemImpl.drawBuffers.COLOR_ATTACHMENT0_WEBGL,3553,this.renderTargetTexture,0);
				var _g = 0;
				var _g1 = additionalRenderTargets.length;
				while(_g < _g1) {
					var i = _g++;
					kha_SystemImpl.gl.framebufferTexture2D(36160,kha_SystemImpl.drawBuffers.COLOR_ATTACHMENT0_WEBGL + i + 1,3553,(js_Boot.__cast(additionalRenderTargets[i] , kha_WebGLImage)).texture,0);
				}
				var attachments = [kha_SystemImpl.drawBuffers.COLOR_ATTACHMENT0_WEBGL];
				var _g = 0;
				var _g1 = additionalRenderTargets.length;
				while(_g < _g1) {
					var i = _g++;
					attachments.push(kha_SystemImpl.drawBuffers.COLOR_ATTACHMENT0_WEBGL + i + 1);
				}
				if(kha_SystemImpl.gl2) {
					kha_SystemImpl.gl.drawBuffers(attachments);
				} else {
					kha_SystemImpl.drawBuffers.drawBuffersWEBGL(attachments);
				}
			}
		}
	}
	,end: function() {
		if(this.renderTargetMSAA != null) {
			kha_SystemImpl.gl.bindFramebuffer(kha_SystemImpl.gl.READ_FRAMEBUFFER,this.renderTargetFrameBuffer);
			kha_SystemImpl.gl.bindFramebuffer(kha_SystemImpl.gl.DRAW_FRAMEBUFFER,this.renderTargetMSAA);
			kha_SystemImpl.gl.blitFramebuffer(0,0,this.renderTarget.get_width(),this.renderTarget.get_height(),0,0,this.renderTarget.get_width(),this.renderTarget.get_height(),16384,9728);
		}
	}
	,clear: function(color,depth,stencil) {
		var clearMask = 0;
		if(color != null) {
			clearMask = 16384;
			kha_SystemImpl.gl.colorMask(true,true,true,true);
			kha_SystemImpl.gl.clearColor(((color & 16711680) >>> 16) * 0.00392156862745098,((color & 65280) >>> 8) * 0.00392156862745098,(color & 255) * 0.00392156862745098,(color >>> 24) * 0.00392156862745098);
		}
		if(depth != null) {
			clearMask |= 256;
			kha_SystemImpl.gl.enable(2929);
			kha_SystemImpl.gl.depthMask(true);
			kha_SystemImpl.gl.clearDepth(depth);
		}
		if(stencil != null) {
			clearMask |= 1024;
			kha_SystemImpl.gl.enable(2960);
			kha_SystemImpl.gl.stencilMask(255);
			kha_SystemImpl.gl.clearStencil(stencil);
		}
		kha_SystemImpl.gl.clear(clearMask);
		kha_SystemImpl.gl.colorMask(this.colorMaskRed,this.colorMaskGreen,this.colorMaskBlue,this.colorMaskAlpha);
		if(this.depthTest) {
			kha_SystemImpl.gl.enable(2929);
		} else {
			kha_SystemImpl.gl.disable(2929);
		}
		kha_SystemImpl.gl.depthMask(this.depthMask);
	}
	,scissor: function(x,y,width,height) {
		kha_SystemImpl.gl.enable(3089);
		if(this.renderTarget == null) {
			kha_SystemImpl.gl.scissor(x,kha_System.windowHeight(0) - y - height,width,height);
		} else {
			kha_SystemImpl.gl.scissor(x,y,width,height);
		}
	}
	,disableScissor: function() {
		kha_SystemImpl.gl.disable(3089);
	}
	,setDepthMode: function(write,mode) {
		switch(mode) {
		case 0:
			if(write) {
				kha_SystemImpl.gl.enable(2929);
			} else {
				kha_SystemImpl.gl.disable(2929);
			}
			this.depthTest = write;
			kha_SystemImpl.gl.depthFunc(519);
			break;
		case 1:
			kha_SystemImpl.gl.enable(2929);
			this.depthTest = true;
			kha_SystemImpl.gl.depthFunc(512);
			break;
		case 2:
			kha_SystemImpl.gl.enable(2929);
			this.depthTest = true;
			kha_SystemImpl.gl.depthFunc(514);
			break;
		case 3:
			kha_SystemImpl.gl.enable(2929);
			this.depthTest = true;
			kha_SystemImpl.gl.depthFunc(517);
			break;
		case 4:
			kha_SystemImpl.gl.enable(2929);
			this.depthTest = true;
			kha_SystemImpl.gl.depthFunc(513);
			break;
		case 5:
			kha_SystemImpl.gl.enable(2929);
			this.depthTest = true;
			kha_SystemImpl.gl.depthFunc(515);
			break;
		case 6:
			kha_SystemImpl.gl.enable(2929);
			this.depthTest = true;
			kha_SystemImpl.gl.depthFunc(516);
			break;
		case 7:
			kha_SystemImpl.gl.enable(2929);
			this.depthTest = true;
			kha_SystemImpl.gl.depthFunc(518);
			break;
		}
		kha_SystemImpl.gl.depthMask(write);
		this.depthMask = write;
	}
	,setBlendingMode: function(source,destination,operation,alphaSource,alphaDestination,alphaOperation) {
		if(source == 1 && destination == 2) {
			kha_SystemImpl.gl.disable(3042);
		} else {
			kha_SystemImpl.gl.enable(3042);
			kha_SystemImpl.gl.blendFuncSeparate(kha_js_graphics4_Graphics.getBlendFunc(source),kha_js_graphics4_Graphics.getBlendFunc(destination),kha_js_graphics4_Graphics.getBlendFunc(alphaSource),kha_js_graphics4_Graphics.getBlendFunc(alphaDestination));
			kha_SystemImpl.gl.blendEquationSeparate(kha_js_graphics4_Graphics.getBlendOp(operation),kha_js_graphics4_Graphics.getBlendOp(alphaOperation));
		}
	}
	,setVertexBuffer: function(vertexBuffer) {
		var _g = 0;
		var _g1 = this.useVertexAttributes;
		while(_g < _g1) kha_SystemImpl.gl.disableVertexAttribArray(_g++);
		this.useVertexAttributes = (js_Boot.__cast(vertexBuffer , kha_graphics4_VertexBuffer)).set(0);
	}
	,setIndexBuffer: function(indexBuffer) {
		this.indicesCount = indexBuffer.count();
		(js_Boot.__cast(indexBuffer , kha_graphics4_IndexBuffer)).set();
	}
	,setTexture: function(stage,texture) {
		if(texture == null) {
			kha_SystemImpl.gl.activeTexture(33984 + (js_Boot.__cast(stage , kha_js_graphics4_TextureUnit)).value);
			kha_SystemImpl.gl.bindTexture(3553,null);
		} else {
			(js_Boot.__cast(texture , kha_WebGLImage)).set((js_Boot.__cast(stage , kha_js_graphics4_TextureUnit)).value);
		}
	}
	,setTextureParameters: function(texunit,uAddressing,vAddressing,minificationFilter,magnificationFilter,mipmapFilter) {
		kha_SystemImpl.gl.activeTexture(33984 + (js_Boot.__cast(texunit , kha_js_graphics4_TextureUnit)).value);
		switch(uAddressing) {
		case 0:
			kha_SystemImpl.gl.texParameteri(3553,10242,10497);
			break;
		case 1:
			kha_SystemImpl.gl.texParameteri(3553,10242,33648);
			break;
		case 2:
			kha_SystemImpl.gl.texParameteri(3553,10242,33071);
			break;
		}
		switch(vAddressing) {
		case 0:
			kha_SystemImpl.gl.texParameteri(3553,10243,10497);
			break;
		case 1:
			kha_SystemImpl.gl.texParameteri(3553,10243,33648);
			break;
		case 2:
			kha_SystemImpl.gl.texParameteri(3553,10243,33071);
			break;
		}
		switch(minificationFilter) {
		case 0:
			switch(mipmapFilter) {
			case 0:
				kha_SystemImpl.gl.texParameteri(3553,10241,9728);
				break;
			case 1:
				kha_SystemImpl.gl.texParameteri(3553,10241,9984);
				break;
			case 2:
				kha_SystemImpl.gl.texParameteri(3553,10241,9986);
				break;
			}
			break;
		case 1:case 2:
			switch(mipmapFilter) {
			case 0:
				kha_SystemImpl.gl.texParameteri(3553,10241,9729);
				break;
			case 1:
				kha_SystemImpl.gl.texParameteri(3553,10241,9985);
				break;
			case 2:
				kha_SystemImpl.gl.texParameteri(3553,10241,9987);
				break;
			}
			if(minificationFilter == 2) {
				kha_SystemImpl.gl.texParameteri(3553,kha_SystemImpl.anisotropicFilter.TEXTURE_MAX_ANISOTROPY_EXT,4);
			}
			break;
		}
		switch(magnificationFilter) {
		case 0:
			kha_SystemImpl.gl.texParameteri(3553,10240,9728);
			break;
		case 1:case 2:
			kha_SystemImpl.gl.texParameteri(3553,10240,9729);
			break;
		}
	}
	,setCullMode: function(mode) {
		switch(mode) {
		case 0:
			kha_SystemImpl.gl.enable(2884);
			kha_SystemImpl.gl.cullFace(1029);
			break;
		case 1:
			kha_SystemImpl.gl.enable(2884);
			kha_SystemImpl.gl.cullFace(1028);
			break;
		case 2:
			kha_SystemImpl.gl.disable(2884);
			break;
		}
	}
	,setPipeline: function(pipe) {
		this.setCullMode(pipe.cullMode);
		this.setDepthMode(pipe.depthWrite,pipe.depthMode);
		this.setStencilParameters(pipe.stencilMode,pipe.stencilBothPass,pipe.stencilDepthFail,pipe.stencilFail,pipe.stencilReferenceValue,pipe.stencilReadMask,pipe.stencilWriteMask);
		this.setBlendingMode(pipe.blendSource,pipe.blendDestination,pipe.blendOperation,pipe.alphaBlendSource,pipe.alphaBlendDestination,pipe.alphaBlendOperation);
		this.currentPipeline = pipe;
		pipe.set();
		this.colorMaskRed = pipe.colorWriteMasksRed[0];
		this.colorMaskGreen = pipe.colorWriteMasksGreen[0];
		this.colorMaskBlue = pipe.colorWriteMasksBlue[0];
		this.colorMaskAlpha = pipe.colorWriteMasksAlpha[0];
	}
	,setInt: function(location,value) {
		kha_SystemImpl.gl.uniform1i((js_Boot.__cast(location , kha_js_graphics4_ConstantLocation)).value,value);
	}
	,setFloat: function(location,value) {
		kha_SystemImpl.gl.uniform1f((js_Boot.__cast(location , kha_js_graphics4_ConstantLocation)).value,value);
	}
	,setFloat2: function(location,value1,value2) {
		kha_SystemImpl.gl.uniform2f((js_Boot.__cast(location , kha_js_graphics4_ConstantLocation)).value,value1,value2);
	}
	,setVector2: function(location,value) {
		kha_SystemImpl.gl.uniform2f((js_Boot.__cast(location , kha_js_graphics4_ConstantLocation)).value,value.x,value.y);
	}
	,setVector3: function(location,value) {
		kha_SystemImpl.gl.uniform3f((js_Boot.__cast(location , kha_js_graphics4_ConstantLocation)).value,value.x,value.y,value.z);
	}
	,setVector4: function(location,value) {
		kha_SystemImpl.gl.uniform4f((js_Boot.__cast(location , kha_js_graphics4_ConstantLocation)).value,value.x,value.y,value.z,value.w);
	}
	,matrixCache: null
	,setMatrix: function(location,matrix) {
		kha_arrays_Float32Array.set(this.matrixCache,0,matrix._00);
		kha_arrays_Float32Array.set(this.matrixCache,1,matrix._01);
		kha_arrays_Float32Array.set(this.matrixCache,2,matrix._02);
		kha_arrays_Float32Array.set(this.matrixCache,3,matrix._03);
		kha_arrays_Float32Array.set(this.matrixCache,4,matrix._10);
		kha_arrays_Float32Array.set(this.matrixCache,5,matrix._11);
		kha_arrays_Float32Array.set(this.matrixCache,6,matrix._12);
		kha_arrays_Float32Array.set(this.matrixCache,7,matrix._13);
		kha_arrays_Float32Array.set(this.matrixCache,8,matrix._20);
		kha_arrays_Float32Array.set(this.matrixCache,9,matrix._21);
		kha_arrays_Float32Array.set(this.matrixCache,10,matrix._22);
		kha_arrays_Float32Array.set(this.matrixCache,11,matrix._23);
		kha_arrays_Float32Array.set(this.matrixCache,12,matrix._30);
		kha_arrays_Float32Array.set(this.matrixCache,13,matrix._31);
		kha_arrays_Float32Array.set(this.matrixCache,14,matrix._32);
		kha_arrays_Float32Array.set(this.matrixCache,15,matrix._33);
		kha_SystemImpl.gl.uniformMatrix4fv((js_Boot.__cast(location , kha_js_graphics4_ConstantLocation)).value,false,new Float32Array(kha_arrays_ByteArray.get_buffer(this.matrixCache),this.matrixCache.byteOffset,kha_arrays_Float32Array.get_length(this.matrixCache)));
	}
	,drawIndexedVertices: function(start,count) {
		if(count == null) {
			count = -1;
		}
		if(start == null) {
			start = 0;
		}
		var type = kha_SystemImpl.elementIndexUint == null ? 5123 : 5125;
		kha_SystemImpl.gl.drawElements(4,count == -1 ? this.indicesCount : count,type,start * (type == 5123 ? 2 : 4));
	}
	,convertStencilAction: function(action) {
		switch(action) {
		case 0:
			return 7680;
		case 1:
			return 0;
		case 2:
			return 7681;
		case 3:
			return 7682;
		case 4:
			return 34055;
		case 5:
			return 7683;
		case 6:
			return 34056;
		case 7:
			return 5386;
		}
	}
	,convertCompareMode: function(compareMode) {
		switch(compareMode) {
		case 0:
			return 519;
		case 1:
			return 512;
		case 2:
			return 514;
		case 3:
			return 517;
		case 4:
			return 513;
		case 5:
			return 515;
		case 6:
			return 516;
		case 7:
			return 518;
		}
	}
	,setStencilParameters: function(compareMode,bothPass,depthFail,stencilFail,referenceValue,readMask,writeMask) {
		if(writeMask == null) {
			writeMask = 255;
		}
		if(readMask == null) {
			readMask = 255;
		}
		if(compareMode == 0 && bothPass == 0 && depthFail == 0 && stencilFail == 0) {
			kha_SystemImpl.gl.disable(2960);
		} else {
			kha_SystemImpl.gl.enable(2960);
			var stencilFunc = this.convertCompareMode(compareMode);
			kha_SystemImpl.gl.stencilMask(writeMask);
			kha_SystemImpl.gl.stencilOp(this.convertStencilAction(stencilFail),this.convertStencilAction(depthFail),this.convertStencilAction(bothPass));
			switch(referenceValue._hx_index) {
			case 0:
				kha_SystemImpl.gl.stencilFunc(stencilFunc,0,readMask);
				break;
			case 1:
				kha_SystemImpl.gl.stencilFunc(stencilFunc,referenceValue.value,readMask);
				break;
			}
		}
	}
	,__class__: kha_js_graphics4_Graphics
};
var kha_js_graphics4_Graphics2 = function(canvas) {
	kha_graphics4_Graphics2.call(this,canvas);
};
$hxClasses["kha.js.graphics4.Graphics2"] = kha_js_graphics4_Graphics2;
kha_js_graphics4_Graphics2.__name__ = "kha.js.graphics4.Graphics2";
kha_js_graphics4_Graphics2.__super__ = kha_graphics4_Graphics2;
kha_js_graphics4_Graphics2.prototype = $extend(kha_graphics4_Graphics2.prototype,{
	drawVideoInternal: function(video,x,y,width,height) {
		var v = js_Boot.__cast(video , kha_js_Video);
		this.drawScaledSubImage(v.texture,0,0,v.texture.get_width(),v.texture.get_height(),x,y,width,height);
	}
	,begin: function(clear,clearColor) {
		if(clear == null) {
			clear = true;
		}
		kha_SystemImpl.gl.colorMask(true,true,true,true);
		kha_SystemImpl.gl.disable(2929);
		kha_SystemImpl.gl.depthFunc(519);
		kha_graphics4_Graphics2.prototype.begin.call(this,clear,clearColor);
	}
	,__class__: kha_js_graphics4_Graphics2
});
var kha_js_graphics4_TextureUnit = function(value) {
	this.value = value;
};
$hxClasses["kha.js.graphics4.TextureUnit"] = kha_js_graphics4_TextureUnit;
kha_js_graphics4_TextureUnit.__name__ = "kha.js.graphics4.TextureUnit";
kha_js_graphics4_TextureUnit.__interfaces__ = [kha_graphics4_TextureUnit];
kha_js_graphics4_TextureUnit.prototype = {
	value: null
	,__class__: kha_js_graphics4_TextureUnit
};
var kha_vr_VrInterface = function() {
};
$hxClasses["kha.vr.VrInterface"] = kha_vr_VrInterface;
kha_vr_VrInterface.__name__ = "kha.vr.VrInterface";
kha_vr_VrInterface.prototype = {
	IsVrEnabled: function() {
		return false;
	}
	,__class__: kha_vr_VrInterface
};
var kha_js_vr_VrInterface = function() {
	this.vrEnabled = false;
	kha_vr_VrInterface.call(this);
};
$hxClasses["kha.js.vr.VrInterface"] = kha_js_vr_VrInterface;
kha_js_vr_VrInterface.__name__ = "kha.js.vr.VrInterface";
kha_js_vr_VrInterface.__super__ = kha_vr_VrInterface;
kha_js_vr_VrInterface.prototype = $extend(kha_vr_VrInterface.prototype,{
	vrEnabled: null
	,IsVrEnabled: function() {
		return this.vrEnabled;
	}
	,__class__: kha_js_vr_VrInterface
});
var kha_math_FastMatrix3 = function(_00,_10,_20,_01,_11,_21,_02,_12,_22) {
	this._00 = _00;
	this._10 = _10;
	this._20 = _20;
	this._01 = _01;
	this._11 = _11;
	this._21 = _21;
	this._02 = _02;
	this._12 = _12;
	this._22 = _22;
};
$hxClasses["kha.math.FastMatrix3"] = kha_math_FastMatrix3;
kha_math_FastMatrix3.__name__ = "kha.math.FastMatrix3";
kha_math_FastMatrix3.prototype = {
	_00: null
	,_10: null
	,_20: null
	,_01: null
	,_11: null
	,_21: null
	,_02: null
	,_12: null
	,_22: null
	,__class__: kha_math_FastMatrix3
};
var kha_math_FastMatrix4 = function(_00,_10,_20,_30,_01,_11,_21,_31,_02,_12,_22,_32,_03,_13,_23,_33) {
	this._00 = _00;
	this._10 = _10;
	this._20 = _20;
	this._30 = _30;
	this._01 = _01;
	this._11 = _11;
	this._21 = _21;
	this._31 = _31;
	this._02 = _02;
	this._12 = _12;
	this._22 = _22;
	this._32 = _32;
	this._03 = _03;
	this._13 = _13;
	this._23 = _23;
	this._33 = _33;
};
$hxClasses["kha.math.FastMatrix4"] = kha_math_FastMatrix4;
kha_math_FastMatrix4.__name__ = "kha.math.FastMatrix4";
kha_math_FastMatrix4.prototype = {
	_00: null
	,_10: null
	,_20: null
	,_30: null
	,_01: null
	,_11: null
	,_21: null
	,_31: null
	,_02: null
	,_12: null
	,_22: null
	,_32: null
	,_03: null
	,_13: null
	,_23: null
	,_33: null
	,__class__: kha_math_FastMatrix4
};
var kha_math_FastVector2 = function(x,y) {
	if(y == null) {
		y = 0;
	}
	if(x == null) {
		x = 0;
	}
	this.x = x;
	this.y = y;
};
$hxClasses["kha.math.FastVector2"] = kha_math_FastVector2;
kha_math_FastVector2.__name__ = "kha.math.FastVector2";
kha_math_FastVector2.prototype = {
	x: null
	,y: null
	,__class__: kha_math_FastVector2
};
var kha_math_FastVector3 = function(x,y,z) {
	if(z == null) {
		z = 0;
	}
	if(y == null) {
		y = 0;
	}
	if(x == null) {
		x = 0;
	}
	this.x = x;
	this.y = y;
	this.z = z;
};
$hxClasses["kha.math.FastVector3"] = kha_math_FastVector3;
kha_math_FastVector3.__name__ = "kha.math.FastVector3";
kha_math_FastVector3.prototype = {
	x: null
	,y: null
	,z: null
	,__class__: kha_math_FastVector3
};
var kha_math_FastVector4 = function(x,y,z,w) {
	if(w == null) {
		w = 1;
	}
	if(z == null) {
		z = 0;
	}
	if(y == null) {
		y = 0;
	}
	if(x == null) {
		x = 0;
	}
	this.x = x;
	this.y = y;
	this.z = z;
	this.w = w;
};
$hxClasses["kha.math.FastVector4"] = kha_math_FastVector4;
kha_math_FastVector4.__name__ = "kha.math.FastVector4";
kha_math_FastVector4.prototype = {
	x: null
	,y: null
	,z: null
	,w: null
	,__class__: kha_math_FastVector4
};
var kha_math_Vector2 = function(x,y) {
	if(y == null) {
		y = 0;
	}
	if(x == null) {
		x = 0;
	}
	this.x = x;
	this.y = y;
};
$hxClasses["kha.math.Vector2"] = kha_math_Vector2;
kha_math_Vector2.__name__ = "kha.math.Vector2";
kha_math_Vector2.prototype = {
	x: null
	,y: null
	,__class__: kha_math_Vector2
};
var kha_math_Vector4 = function(x,y,z,w) {
	if(w == null) {
		w = 1;
	}
	if(z == null) {
		z = 0;
	}
	if(y == null) {
		y = 0;
	}
	if(x == null) {
		x = 0;
	}
	this.x = x;
	this.y = y;
	this.z = z;
	this.w = w;
};
$hxClasses["kha.math.Vector4"] = kha_math_Vector4;
kha_math_Vector4.__name__ = "kha.math.Vector4";
kha_math_Vector4.prototype = {
	x: null
	,y: null
	,z: null
	,w: null
	,__class__: kha_math_Vector4
};
var kha_netsync_ControllerBuilder = function() { };
$hxClasses["kha.netsync.ControllerBuilder"] = kha_netsync_ControllerBuilder;
kha_netsync_ControllerBuilder.__name__ = "kha.netsync.ControllerBuilder";
var kha_netsync_Session = function(maxPlayers,address,port) {
	this.controllers = new haxe_ds_IntMap();
	kha_netsync_Session.instance = this;
	this.maxPlayers = maxPlayers;
	this.address = address;
	this.port = port;
};
$hxClasses["kha.netsync.Session"] = kha_netsync_Session;
kha_netsync_Session.__name__ = "kha.netsync.Session";
kha_netsync_Session.the = function() {
	return kha_netsync_Session.instance;
};
kha_netsync_Session.prototype = {
	controllers: null
	,maxPlayers: null
	,address: null
	,port: null
	,sendControllerUpdate: function(id,bytes) {
		if(this.controllers.h.hasOwnProperty(id)) {
			if(this.controllers.h[id]._inputBuffer.length < this.controllers.h[id]._inputBufferIndex + 4 + bytes.length) {
				var newBuffer = new haxe_io_Bytes(new ArrayBuffer(this.controllers.h[id]._inputBufferIndex + 4 + bytes.length));
				newBuffer.blit(0,this.controllers.h[id]._inputBuffer,0,this.controllers.h[id]._inputBufferIndex);
				this.controllers.h[id]._inputBuffer = newBuffer;
			}
			this.controllers.h[id]._inputBuffer.setInt32(this.controllers.h[id]._inputBufferIndex,bytes.length);
			this.controllers.h[id]._inputBuffer.blit(this.controllers.h[id]._inputBufferIndex + 4,bytes,0,bytes.length);
			this.controllers.h[id]._inputBufferIndex += 4 + bytes.length;
		}
	}
	,__class__: kha_netsync_Session
};
var no_logic_fox_core_FoxAssets = function() {
	this.assets = new no_logic_fox_core_BindData();
};
$hxClasses["no.logic.fox.core.FoxAssets"] = no_logic_fox_core_FoxAssets;
no_logic_fox_core_FoxAssets.__name__ = "no.logic.fox.core.FoxAssets";
no_logic_fox_core_FoxAssets.prototype = {
	assets: null
	,setAssetContent: function() {
		var l = $iterator(no_logic_fox_types_Object)(no_logic_fox_kontentum_Kontentum.languages);
		while(l.hasNext()) {
			var l1 = l.next();
			var a = $iterator(no_logic_fox_types_Object)(no_logic_fox_kontentum_Kontentum.textsByIdentifier);
			while(a.hasNext()) {
				var a1 = a.next();
				var assObj = Reflect.field(no_logic_fox_kontentum_Kontentum.textsByIdentifier,a1);
				if(assObj != null) {
					var asset = this.processSpecialChars(this.getAssetByID(assObj.id,"text",no_logic_fox_kontentum_Kontentum.getLangType(l1)));
					this.assets.setValue("asset[" + l1 + "]$|" + a1,asset);
				}
			}
			var b = $iterator(no_logic_fox_types_Object)(no_logic_fox_kontentum_Kontentum.filesByIdentifier);
			while(b.hasNext()) {
				var b1 = b.next();
				var assObjF = Reflect.field(no_logic_fox_kontentum_Kontentum.filesByIdentifier,b1);
				if(assObjF != null) {
					var assetF = this.processSpecialChars(this.getAssetByID(Std.string(assObjF.id),"file",no_logic_fox_kontentum_Kontentum.getLangType(l1)));
					this.assets.setValue("asset[" + l1 + "]$|" + b1,assetF);
				}
			}
		}
	}
	,processSpecialChars: function(a) {
		return a;
	}
	,getAsset: function(assetCode,type,lang) {
		if(no_logic_fox_kontentum_Kontentum.assetsLoaded) {
			var toUpper = false;
			if(assetCode.indexOf("^") != -1) {
				toUpper = true;
				assetCode = assetCode.split("^").join("");
			}
			if(lang == null || lang == no_logic_fox_kontentum_KontentumLanguage.CURRENT) {
				lang = this.findLanguageFromAssetCode(assetCode);
				if(lang == null || lang == no_logic_fox_kontentum_KontentumLanguage.CURRENT) {
					lang = no_logic_fox_kontentum_Kontentum.currentLanguage;
				}
				assetCode = this.stripLangCodeFromAssetCode(assetCode,lang);
			}
			var res = null;
			if(assetCode.indexOf("@content.") != -1) {
				var eStr = assetCode.split("@content.").join("");
				if(type == null) {
					res = this.getContentStringEval(eStr,"text");
					if(res == null) {
						res = this.getContentStringEval(eStr,"file");
					}
				} else {
					res = this.getContentStringEval(eStr,type);
				}
			} else if(type == null) {
				res = this.removeAssetPrefix(this.getAssetByID(assetCode,"text",lang));
				if(res == null) {
					res = this.removeAssetPrefix(this.getAssetByID(assetCode,"file",lang));
				}
			} else {
				res = this.removeAssetPrefix(this.getAssetByID(assetCode,type,lang));
			}
			if(res == null) {
				res = "?:" + assetCode;
			}
			if(type == "file") {
				if(no_logic_fox_kontentum_Kontentum.localFileDir != null && no_logic_fox_kontentum_Kontentum.localFileDir != "") {
					res = res.split(no_logic_fox_kontentum_Kontentum.localFileDir).join("");
					return no_logic_fox_kontentum_Kontentum.localFileDir + "/" + res;
				} else {
					return res;
				}
			} else if(toUpper) {
				return res.toUpperCase();
			} else {
				return res;
			}
		}
		return null;
	}
	,getAssetByID: function(id,type,lang) {
		if(type == null) {
			type = "text";
		}
		var fInt = Std.parseInt(id == null ? "null" : "" + id);
		if(type == "text") {
			if(fInt > 0 && no_logic_fox_kontentum_Kontentum.texts != null) {
				var this1 = no_logic_fox_kontentum_Kontentum.texts;
				if(this1 != null && Object.prototype.hasOwnProperty.call(this1,fInt == null ? "null" : "" + fInt)) {
					return this.getLanguageFromNode(Reflect.field(no_logic_fox_kontentum_Kontentum.texts,fInt == null ? "null" : "" + fInt).text,lang);
				}
			} else if(typeof(id) == "string" && no_logic_fox_kontentum_Kontentum.textsByIdentifier != null) {
				var this1 = no_logic_fox_kontentum_Kontentum.textsByIdentifier;
				if(this1 != null && Object.prototype.hasOwnProperty.call(this1,id)) {
					return this.getLanguageFromNode(Reflect.field(no_logic_fox_kontentum_Kontentum.textsByIdentifier,id).text,lang);
				}
			}
		} else if(type == "file") {
			var tmp;
			if(fInt > 0 && no_logic_fox_kontentum_Kontentum.files != null) {
				var this1 = no_logic_fox_kontentum_Kontentum.files;
				tmp = this1 != null && Object.prototype.hasOwnProperty.call(this1,fInt == null ? "null" : "" + fInt);
			} else {
				tmp = false;
			}
			if(tmp) {
				return Reflect.field(no_logic_fox_kontentum_Kontentum.files,fInt == null ? "null" : "" + fInt).file;
			} else if(typeof(id) == "string" && no_logic_fox_kontentum_Kontentum.filesByIdentifier != null) {
				var this1 = no_logic_fox_kontentum_Kontentum.filesByIdentifier;
				if(this1 != null && Object.prototype.hasOwnProperty.call(this1,id)) {
					return Reflect.field(no_logic_fox_kontentum_Kontentum.filesByIdentifier,id).file;
				}
			}
		}
		return null;
	}
	,getLanguageFromNode: function(nNode,lang) {
		var this1 = nNode;
		if(this1 != null && Object.prototype.hasOwnProperty.call(this1,no_logic_fox_kontentum_Kontentum.getLangStr(lang))) {
			return Reflect.field(nNode,no_logic_fox_kontentum_Kontentum.getLangStr(lang));
		}
		return null;
	}
	,removeAssetPrefix: function(assetStr) {
		if(assetStr != null) {
			return assetStr.split("*$text$*").join("").split("*$image$*").join("").split("*$audio$*").join("").split("*$video$*").join("");
		} else {
			return null;
		}
	}
	,findLanguageFromAssetCode: function(assetCode) {
		if(assetCode == null) {
			return no_logic_fox_kontentum_KontentumLanguage.CURRENT;
		} else if(assetCode.toLowerCase().indexOf(":no") != -1) {
			return no_logic_fox_kontentum_KontentumLanguage.NO;
		} else if(assetCode.toLowerCase().indexOf(":en") != -1) {
			return no_logic_fox_kontentum_KontentumLanguage.EN;
		} else {
			return no_logic_fox_kontentum_KontentumLanguage.CURRENT;
		}
	}
	,stripLangCodeFromAssetCode: function(assetCode,lang) {
		return assetCode.split(":" + no_logic_fox_kontentum_Kontentum.getLangStr(lang)).join("");
	}
	,getContentArrayByName: function(nodeName) {
		if(no_logic_fox_kontentum_Kontentum.content == null || nodeName == null) {
			return null;
		}
		var nn = nodeName.toLowerCase();
		var name = $iterator(no_logic_fox_types_Object)(no_logic_fox_kontentum_Kontentum.content);
		while(name.hasNext()) {
			var name1 = name.next();
			if(name1 != null && name1.toLowerCase() == nn) {
				return Reflect.field(no_logic_fox_kontentum_Kontentum.content,name1);
			}
		}
		return null;
	}
	,getContentStringEval: function($eval,type) {
		if($eval == null) {
			return null;
		}
		var sprDot = $eval.split(".");
		if(sprDot != null && sprDot.length > 0) {
			var eq1 = sprDot[0];
			if(eq1 != null && eq1.indexOf("[") != -1) {
				var eq2 = eq1.split("[");
				if(eq2 != null && eq2.length > 1) {
					return this.getContentString(eq2[0],Std.parseInt(eq2[1].split("]").join("")),sprDot[1],null,type);
				}
			}
		}
		return null;
	}
	,getContentString: function(nodeName,index,fieldName,lang,type) {
		if(no_logic_fox_kontentum_Kontentum.content == null || nodeName == null) {
			return null;
		}
		var cArr = this.getContentArrayByName(nodeName);
		if(cArr != null && cArr.length > 0) {
			if(index >= cArr.length) {
				index = cArr.length - 1;
			}
			return this.getStringFieldFromContentEntry(cArr[index],fieldName,lang,type);
		}
		return null;
	}
	,getStringFieldFromContentEntry: function(contentEntry,fieldName,lang,type) {
		if(contentEntry != null && fieldName != null) {
			var this1 = contentEntry;
			if(this1 != null && Object.prototype.hasOwnProperty.call(this1,fieldName) && Reflect.field(contentEntry,fieldName) != null) {
				var qn = Reflect.field(contentEntry,fieldName);
				var t = contentEntry.type;
				if(type != null) {
					t = type;
				}
				if(typeof(qn) == "string") {
					return this.getAssetByID(Std.string(qn),t,lang);
				} else {
					return this.getAssetByID(qn.id,t,lang);
				}
			}
		}
		return null;
	}
	,__class__: no_logic_fox_core_FoxAssets
};
var no_logic_fox_loader_FileCache = function() {
	this.images = new no_logic_fox_loader_ImageCache();
};
$hxClasses["no.logic.fox.loader.FileCache"] = no_logic_fox_loader_FileCache;
no_logic_fox_loader_FileCache.__name__ = "no.logic.fox.loader.FileCache";
no_logic_fox_loader_FileCache.prototype = {
	images: null
	,__class__: no_logic_fox_loader_FileCache
};
var no_logic_fox_core_BindData = function() {
	this.data = new haxe_ds_StringMap();
};
$hxClasses["no.logic.fox.core.BindData"] = no_logic_fox_core_BindData;
no_logic_fox_core_BindData.__name__ = "no.logic.fox.core.BindData";
no_logic_fox_core_BindData.prototype = {
	data: null
	,onBindEventChange: null
	,setValue: function(key,value,meta) {
		if(key == null) {
			return;
		}
		if(meta == null) {
			var this1 = this.data;
			var value1 = { value : value, index : this.length()};
			this1.h[key] = value1;
		} else {
			var this1 = this.data;
			var value1 = { value : value, meta : meta, index : this.length()};
			this1.h[key] = value1;
		}
		if(this.onBindEventChange != null) {
			this.onBindEventChange(key,value);
		}
	}
	,getValue: function(key) {
		if(key == null) {
			return null;
		}
		if(Object.prototype.hasOwnProperty.call(this.data.h,key)) {
			return this.data.h[key].value;
		} else {
			return null;
		}
	}
	,hasValue: function(key) {
		if(key == null) {
			return false;
		}
		return Object.prototype.hasOwnProperty.call(this.data.h,key);
	}
	,length: function() {
		var len = 0;
		var i = haxe_ds_StringMap.keysIterator(this.data.h);
		while(i.hasNext()) {
			i.next();
			++len;
		}
		return len;
	}
	,__class__: no_logic_fox_core_BindData
};
var no_logic_fox_Fox = function() { };
$hxClasses["no.logic.fox.Fox"] = no_logic_fox_Fox;
no_logic_fox_Fox.__name__ = "no.logic.fox.Fox";
no_logic_fox_Fox.__properties__ = {get_c:"get_c"};
no_logic_fox_Fox.init = function() {
	no_logic_fox_Fox.initiated = true;
	no_logic_fox_Fox.variables.onBindEventChange = no_logic_fox_Fox.onVariableChanged;
	no_logic_fox_Fox.assets.assets.onBindEventChange = no_logic_fox_Fox.onAssetChanged;
};
no_logic_fox_Fox.add = function(eventName,callback,properties,scope) {
	no_logic_fox_Fox._intCount++;
	var nen = eventName + "__$ic" + Std.string(no_logic_fox_Fox._intCount);
	if(scope == null) {
		no_logic_fox_Fox.eventPool.h[nen] = { eventName : eventName, eventNameUID : nen, callback : callback, properties : properties, scope : scope};
		return no_logic_fox_Fox.eventPool.h[nen];
	} else {
		var s = no_logic_fox_utils_ObjUtils.getName(scope);
		if(s == null) {
			no_logic_fox_Fox.eventPool.h[nen] = { eventName : eventName, eventNameUID : nen, callback : callback, properties : properties, scope : null};
			return no_logic_fox_Fox.eventPool.h[nen];
		} else {
			if(!Object.prototype.hasOwnProperty.call(no_logic_fox_Fox.eventPoolScoped.h,s) || no_logic_fox_Fox.eventPoolScoped.h[s] == null) {
				no_logic_fox_Fox.eventPoolScoped.h[s] = new haxe_ds_StringMap();
			}
			no_logic_fox_Fox.eventPoolScoped.h[s].h[nen] = { eventName : eventName, eventNameUID : nen, callback : callback, properties : properties, scope : scope};
		}
		return null;
	}
};
no_logic_fox_Fox.remove = function(eventName,callback,scope) {
	var key = haxe_ds_StringMap.keysIterator(no_logic_fox_Fox.eventPool.h);
	while(key.hasNext()) {
		var key1 = key.next();
		if(no_logic_fox_Fox.eventPool.h[key1].scope == scope || no_logic_fox_Fox.eventPool.h[key1].scope == null && scope == null) {
			var sk = key1.split("__$ic")[0];
			if(callback != null) {
				if(sk == eventName && no_logic_fox_Fox.eventPool.h[key1].callback == callback) {
					no_logic_fox_Fox.eventPool.h[key1] = null;
					var _this = no_logic_fox_Fox.eventPool;
					if(Object.prototype.hasOwnProperty.call(_this.h,key1)) {
						delete(_this.h[key1]);
					}
				}
			} else if(sk == eventName) {
				no_logic_fox_Fox.eventPool.h[key1] = null;
				var _this1 = no_logic_fox_Fox.eventPool;
				if(Object.prototype.hasOwnProperty.call(_this1.h,key1)) {
					delete(_this1.h[key1]);
				}
			}
		}
	}
};
no_logic_fox_Fox.dispatch = function(eventName,properties,scope,delay) {
	if(delay == null) {
		delay = 0;
	}
	if(delay == 0) {
		no_logic_fox_Fox.doDispatch(eventName,properties,scope);
	} else {
		haxe_Timer.delay(function() {
			no_logic_fox_Fox.doDispatch(eventName,properties,scope);
		},delay * 1000 | 0);
	}
	return no_logic_fox_Fox;
};
no_logic_fox_Fox.doDispatch = function(eventName,properties,scope) {
	if(scope == null) {
		var key = haxe_ds_StringMap.keysIterator(no_logic_fox_Fox.eventPool.h);
		while(key.hasNext()) {
			var key1 = key.next();
			if(no_logic_fox_Fox.eventPool.h[key1] != null) {
				if(key1.split("__$ic")[0] == eventName && no_logic_fox_Fox.eventPool.h[key1].callback != null) {
					no_logic_fox_Fox.eventPool.h[key1].callback(properties);
				}
			}
		}
	} else {
		var s = no_logic_fox_utils_ObjUtils.getName(scope);
		if(s == null || !Object.prototype.hasOwnProperty.call(no_logic_fox_Fox.eventPoolScoped.h,s) || no_logic_fox_Fox.eventPoolScoped.h[s] == null) {
			return;
		}
		var scoped = no_logic_fox_Fox.eventPoolScoped.h[s];
		if(scoped == null) {
			return;
		}
		var key = haxe_ds_StringMap.keysIterator(scoped.h);
		while(key.hasNext()) {
			var key1 = key.next();
			if(scoped.h[key1] != null) {
				if(key1.split("__$ic")[0] == eventName && scoped.h[key1].callback != null) {
					scoped.h[key1].callback(properties);
				}
			}
		}
	}
};
no_logic_fox_Fox.bindAsset = function(bindCode,callback) {
	if(!no_logic_fox_Fox.initiated) {
		no_logic_fox_Fox.init();
	}
	if(bindCode != null) {
		var bindID = bindCode + no_logic_fox_Fox.getTCode();
		no_logic_fox_Fox.trackedAssetCodes.h[bindID] = callback;
		return bindID;
	}
	return null;
};
no_logic_fox_Fox.removeBindAsset = function(bindID) {
	if(bindID != null) {
		if(Object.prototype.hasOwnProperty.call(no_logic_fox_Fox.trackedAssetCodes.h,bindID)) {
			var _this = no_logic_fox_Fox.trackedAssetCodes;
			if(Object.prototype.hasOwnProperty.call(_this.h,bindID)) {
				delete(_this.h[bindID]);
			}
		}
	}
};
no_logic_fox_Fox.bindVar = function(bindCode,callback) {
	if(!no_logic_fox_Fox.initiated) {
		no_logic_fox_Fox.init();
	}
	if(bindCode != null) {
		var bindID = bindCode + no_logic_fox_Fox.getTCode();
		no_logic_fox_Fox.trackedElements.h[bindID] = callback;
		return bindID;
	}
	return null;
};
no_logic_fox_Fox.removeBindVar = function(bindID) {
	if(bindID != null) {
		if(Object.prototype.hasOwnProperty.call(no_logic_fox_Fox.trackedElements.h,bindID)) {
			var _this = no_logic_fox_Fox.trackedElements;
			if(Object.prototype.hasOwnProperty.call(_this.h,bindID)) {
				delete(_this.h[bindID]);
			}
		}
	}
};
no_logic_fox_Fox.setVar = function(varName,value) {
	if(!no_logic_fox_Fox.initiated) {
		no_logic_fox_Fox.init();
	}
	no_logic_fox_Fox.variables.setValue(varName,value);
};
no_logic_fox_Fox.getVar = function(varName) {
	return no_logic_fox_Fox.variables.getValue(varName);
};
no_logic_fox_Fox.hasVar = function(varName) {
	return no_logic_fox_Fox.variables.hasValue(varName);
};
no_logic_fox_Fox.getText = function(assetCode,lang) {
	var t = no_logic_fox_Fox.assets.getAsset(assetCode,"text",no_logic_fox_kontentum_Kontentum.getLangType(lang));
	if(t != null) {
		return t;
	} else {
		return "";
	}
};
no_logic_fox_Fox.getAsset = function(assetCode,type,lang) {
	return no_logic_fox_Fox.assets.getAsset(assetCode,type,no_logic_fox_kontentum_Kontentum.getLangType(lang));
};
no_logic_fox_Fox.onVariableChanged = function(key,value) {
	var uid = haxe_ds_StringMap.keysIterator(no_logic_fox_Fox.trackedElements.h);
	while(uid.hasNext()) {
		var uid1 = uid.next();
		if(uid1.split("_UIX_")[0] == key) {
			no_logic_fox_Fox.runVarBinding(uid1,key,value);
		}
	}
};
no_logic_fox_Fox.onAssetChanged = function(key,value) {
	var uid = haxe_ds_StringMap.keysIterator(no_logic_fox_Fox.trackedAssetCodes.h);
	while(uid.hasNext()) {
		var uid1 = uid.next();
		if(no_logic_fox_Fox.trackedAssetCodes.h[uid1] == key) {
			no_logic_fox_Fox.runAssetBinding(uid1,key,value);
		}
	}
};
no_logic_fox_Fox.runVarBinding = function(uid,valueName,value) {
	var callBack = no_logic_fox_Fox.trackedElements.h[uid];
	if(callBack != null) {
		callBack(value);
	}
};
no_logic_fox_Fox.runAssetBinding = function(uid,valueName,value) {
	var callBack = no_logic_fox_Fox.trackedAssetCodes.h[uid];
	if(callBack != null) {
		callBack(value);
	}
};
no_logic_fox_Fox.getTCode = function() {
	return "_UIX_bind_" + no_logic_fox_Fox.bindCodeCount++;
};
no_logic_fox_Fox.debug = function(value,openConsole) {
	if(openConsole == null) {
		openConsole = false;
	}
	no_logic_kha_fox_debug_Debug.debug(value,openConsole);
};
no_logic_fox_Fox.log = function(value,category,openConsole) {
	if(openConsole == null) {
		openConsole = false;
	}
	no_logic_kha_fox_debug_Debug.log(value,category,openConsole);
};
no_logic_fox_Fox.warn = function(value,openConsole) {
	if(openConsole == null) {
		openConsole = false;
	}
	no_logic_kha_fox_debug_Debug.warn(value,openConsole);
};
no_logic_fox_Fox.get_c = function() {
	return no_logic_kha_fox_debug_Debug.console;
};
var no_logic_fox_kontentum_KontentumStatus = $hxEnums["no.logic.fox.kontentum.KontentumStatus"] = { __ename__ : true, __constructs__ : ["Success","TimeOutJSONLoadedLocally","FailedToGetJSONRest"]
	,Success: {_hx_index:0,__enum__:"no.logic.fox.kontentum.KontentumStatus",toString:$estr}
	,TimeOutJSONLoadedLocally: {_hx_index:1,__enum__:"no.logic.fox.kontentum.KontentumStatus",toString:$estr}
	,FailedToGetJSONRest: {_hx_index:2,__enum__:"no.logic.fox.kontentum.KontentumStatus",toString:$estr}
};
var no_logic_fox_kontentum_KontentumLanguage = $hxEnums["no.logic.fox.kontentum.KontentumLanguage"] = { __ename__ : true, __constructs__ : ["CURRENT","NO","EN","SE","DK"]
	,CURRENT: {_hx_index:0,__enum__:"no.logic.fox.kontentum.KontentumLanguage",toString:$estr}
	,NO: {_hx_index:1,__enum__:"no.logic.fox.kontentum.KontentumLanguage",toString:$estr}
	,EN: {_hx_index:2,__enum__:"no.logic.fox.kontentum.KontentumLanguage",toString:$estr}
	,SE: {_hx_index:3,__enum__:"no.logic.fox.kontentum.KontentumLanguage",toString:$estr}
	,DK: {_hx_index:4,__enum__:"no.logic.fox.kontentum.KontentumLanguage",toString:$estr}
};
var no_logic_fox_kontentum_Kontentum = function() { };
$hxClasses["no.logic.fox.kontentum.Kontentum"] = no_logic_fox_kontentum_Kontentum;
no_logic_fox_kontentum_Kontentum.__name__ = "no.logic.fox.kontentum.Kontentum";
no_logic_fox_kontentum_Kontentum.__properties__ = {set_currentLanguage:"set_currentLanguage"};
no_logic_fox_kontentum_Kontentum.connect = function(exhibitToken,ip,localFileDir,downloadFiles,preloadImages,liveupdate,autoStart) {
	if(autoStart == null) {
		autoStart = true;
	}
	if(preloadImages == null) {
		preloadImages = false;
	}
	if(downloadFiles == null) {
		downloadFiles = true;
	}
	if(ip == null) {
		ip = "https://kontentum.link";
	}
	no_logic_fox_kontentum_Kontentum.initiated = true;
	no_logic_fox_kontentum_Kontentum.rest_ip = ip;
	no_logic_fox_kontentum_Kontentum.exhibitToken = exhibitToken;
	no_logic_fox_kontentum_Kontentum.downloadFiles = downloadFiles;
	no_logic_fox_kontentum_Kontentum.preloadImages = preloadImages;
	no_logic_fox_kontentum_Kontentum.liveupdate = liveupdate;
	no_logic_fox_kontentum_Kontentum.localFileDir = localFileDir;
	no_logic_fox_kontentum_Kontentum.fullURL = no_logic_fox_kontentum_Kontentum.rest_ip + "/" + no_logic_fox_kontentum_Kontentum.rest_path + "/" + exhibitToken;
	no_logic_fox_kontentum_Kontentum.fileURL = no_logic_fox_kontentum_Kontentum.rest_ip + "/" + no_logic_fox_kontentum_Kontentum.remoteFilePath + "/";
	if(autoStart) {
		no_logic_fox_kontentum_Kontentum.fetch();
	}
	return no_logic_fox_kontentum_Kontentum;
};
no_logic_fox_kontentum_Kontentum.fetch = function() {
	no_logic_fox_kontentum_Kontentum.getREST();
};
no_logic_fox_kontentum_Kontentum.getREST = function(restLoaded,restFailed) {
	if(no_logic_fox_kontentum_Kontentum.exhibitToken == null || no_logic_fox_kontentum_Kontentum.exhibitToken == "") {
		return;
	}
	no_logic_fox_kontentum_Kontentum.usingLocalJsonFile = false;
	var tmp = restFailed != null ? restFailed : function(uxl) {
		if(no_logic_fox_kontentum_Kontentum.onFail != null) {
			no_logic_fox_kontentum_Kontentum.onFail(no_logic_fox_kontentum_KontentumStatus.FailedToGetJSONRest);
		}
		var localFile = no_logic_fox_kontentum_Kontentum.localFileDir + "/exhibit" + no_logic_fox_kontentum_Kontentum.exhibitToken + ".json";
		no_logic_fox_kontentum_Kontentum.usingLocalJsonFile = true;
		haxe_Log.trace("Kontentum connection failed, trying cache : " + localFile,{ fileName : "no/logic/fox/kontentum/Kontentum.hx", lineNumber : 165, className : "no.logic.fox.kontentum.Kontentum", methodName : "getREST"});
		no_logic_fox_loader_Loader.LoadJSON(localFile,null,no_logic_fox_kontentum_Kontentum.onRestJSONLoaded,function(uxl) {
			haxe_Log.trace("Local cache not found - Kontentum json failed to load.",{ fileName : "no/logic/fox/kontentum/Kontentum.hx", lineNumber : 168, className : "no.logic.fox.kontentum.Kontentum", methodName : "getREST"});
			if(no_logic_fox_kontentum_Kontentum.onFail != null) {
				no_logic_fox_kontentum_Kontentum.onFail(no_logic_fox_kontentum_KontentumStatus.FailedToGetJSONRest);
			}
		});
	};
	no_logic_fox_loader_Loader.LoadJSON(no_logic_fox_kontentum_Kontentum.fullURL,null,restLoaded != null ? restLoaded : no_logic_fox_kontentum_Kontentum.onRestJSONLoaded,tmp);
};
no_logic_fox_kontentum_Kontentum.onRestJSONLoaded = function(uxl) {
	no_logic_fox_kontentum_Kontentum.RESTJsonStr = uxl.contentRAW;
	no_logic_fox_kontentum_Kontentum.RESTJson = uxl.contentJSON;
	if(no_logic_fox_kontentum_Kontentum.RESTJson != null) {
		no_logic_fox_kontentum_Kontentum.exhibit = { };
		no_logic_fox_utils_ObjUtils.copyProperties(no_logic_fox_kontentum_Kontentum.RESTJson.exhibit,no_logic_fox_kontentum_Kontentum.exhibit,true);
		if(Object.prototype.hasOwnProperty.call(no_logic_fox_kontentum_Kontentum.RESTJson.exhibit,"blacklist")) {
			var blacklist = no_logic_fox_kontentum_Kontentum.RESTJson.exhibit.blacklist;
			var _g = 0;
			var _g1 = blacklist.length;
			while(_g < _g1) {
				var i = _g++;
				blacklist[i] = haxe_crypto_Base64.decode(blacklist[i]);
			}
			no_logic_fox_kontentum_Kontentum.exhibit.blacklist = blacklist;
		}
		if(no_logic_fox_kontentum_Kontentum.liveupdate == null) {
			no_logic_fox_kontentum_Kontentum.liveupdate = no_logic_fox_kontentum_Kontentum.exhibit.liveupdate;
		}
		no_logic_fox_kontentum_Kontentum.languages = no_logic_fox_kontentum_Kontentum.parseLanguages();
		no_logic_fox_kontentum_Kontentum.content = no_logic_fox_kontentum_Kontentum.RESTJson.content;
		no_logic_fox_kontentum_Kontentum.texts = no_logic_fox_kontentum_Kontentum.processTexts(no_logic_fox_kontentum_Kontentum.RESTJson.texts);
		no_logic_fox_kontentum_Kontentum.files = no_logic_fox_kontentum_Kontentum.processFiles(no_logic_fox_kontentum_Kontentum.RESTJson.files);
		no_logic_fox_kontentum_Kontentum.variables = no_logic_fox_kontentum_Kontentum.processVariables(no_logic_fox_kontentum_Kontentum.exhibit.variables);
		no_logic_fox_Fox.assets.setAssetContent();
		no_logic_fox_kontentum_Kontentum.pingURL = no_logic_fox_kontentum_Kontentum.rest_ip + "/" + no_logic_fox_kontentum_Kontentum.rest_ping + "/" + no_logic_fox_kontentum_Kontentum.exhibitToken;
		no_logic_fox_kontentum_Kontentum.assetsFetched();
	} else {
		no_logic_fox_Fox.debug("Kontentum Error: Cant parse JSON");
	}
};
no_logic_fox_kontentum_Kontentum.assetsFetched = function() {
	if(!no_logic_fox_kontentum_Kontentum.usingLocalJsonFile && no_logic_fox_kontentum_Kontentum.liveupdate != null && no_logic_fox_kontentum_Kontentum.liveupdate == true) {
		no_logic_fox_kontentum_Kontentum.startPing();
	}
	if(no_logic_fox_kontentum_Kontentum.preloadImages) {
		no_logic_fox_kontentum_Kontentum.preloadAssets();
	} else {
		no_logic_fox_kontentum_Kontentum.kontentumReady();
	}
};
no_logic_fox_kontentum_Kontentum.parseLanguages = function() {
	var langObj = { };
	var langs = no_logic_fox_kontentum_Kontentum.RESTJson.languages;
	if(langs != null && langs.length > 0) {
		var _g = 0;
		var _g1 = langs.length;
		while(_g < _g1) {
			var j = _g++;
			langObj[Std.string(langs[j].identifier)] = langs[j];
		}
		no_logic_fox_kontentum_Kontentum.set_currentLanguage(no_logic_fox_kontentum_Kontentum.getLangType(langs[0].identifier));
	}
	return langObj;
};
no_logic_fox_kontentum_Kontentum.getLangType = function(langStr) {
	if(langStr == null) {
		return no_logic_fox_kontentum_Kontentum.currentLanguage;
	}
	var fLang = no_logic_fox_kontentum_KontentumLanguage.NO;
	switch(langStr.toLowerCase()) {
	case "dk":
		fLang = no_logic_fox_kontentum_KontentumLanguage.DK;
		break;
	case "en":
		break;
	case "eng":
		fLang = no_logic_fox_kontentum_KontentumLanguage.EN;
		break;
	case "no":
		break;
	case "nor":
		fLang = no_logic_fox_kontentum_KontentumLanguage.NO;
		break;
	case "sw":
		break;
	case "swe":
		fLang = no_logic_fox_kontentum_KontentumLanguage.SE;
		break;
	}
	return fLang;
};
no_logic_fox_kontentum_Kontentum.getLangStr = function(lang) {
	var langStr = null;
	switch(lang._hx_index) {
	case 0:
		langStr = null;
		break;
	case 1:
		langStr = "no";
		break;
	case 2:
		langStr = "en";
		break;
	case 3:
		langStr = "se";
		break;
	case 4:
		langStr = "dk";
		break;
	}
	return langStr;
};
no_logic_fox_kontentum_Kontentum.processTexts = function(texts) {
	no_logic_fox_kontentum_Kontentum.textsByIdentifier = { };
	no_logic_fox_kontentum_Kontentum.textsIdIdentifier = { };
	var rObj = { };
	if(texts != null) {
		var _g = 0;
		var _g1 = texts.length;
		while(_g < _g1) {
			var ti = texts[_g++];
			rObj[ti.id] = ti;
			no_logic_fox_kontentum_Kontentum.textsByIdentifier[ti.identifier] = ti;
			no_logic_fox_kontentum_Kontentum.textsIdIdentifier[ti.id] = ti.identifier;
		}
	}
	return rObj;
};
no_logic_fox_kontentum_Kontentum.startPing = function() {
	no_logic_fox_kontentum_Kontentum.previousTimeStamp = no_logic_fox_utils_DateUtils.getWDateInt();
	no_logic_fox_kontentum_Kontentum.pingLoader = new no_logic_fox_loader_Loader();
	no_logic_fox_kontentum_Kontentum.pingLoader.disposeOnComplete = false;
	no_logic_fox_kontentum_Kontentum.pingLoader.onComplete = no_logic_fox_kontentum_Kontentum.onPingLoadedComplete;
	no_logic_fox_kontentum_Kontentum.pingLoader.onError = no_logic_fox_kontentum_Kontentum.onPingLoadedError;
	no_logic_fox_kontentum_Kontentum.pingTimer = new haxe_Timer(no_logic_fox_kontentum_Kontentum.pingTime);
	no_logic_fox_kontentum_Kontentum.pingTimer.run = no_logic_fox_kontentum_Kontentum.triggerPing;
};
no_logic_fox_kontentum_Kontentum.triggerPing = function() {
	no_logic_fox_kontentum_Kontentum.pingLoader.onComplete = no_logic_fox_kontentum_Kontentum.onPingLoadedComplete;
	no_logic_fox_kontentum_Kontentum.pingLoader.loadJSON(no_logic_fox_kontentum_Kontentum.pingURL);
};
no_logic_fox_kontentum_Kontentum.onPingLoadedComplete = function(ul) {
	var newTime = ul.contentJSON.last_modified;
	if(newTime > no_logic_fox_kontentum_Kontentum.previousTimeStamp) {
		if(Object.prototype.hasOwnProperty.call("select",ul.contentJSON)) {
			no_logic_fox_kontentum_Kontentum.exhibit.select = ul.contentJSON.select;
		}
		haxe_Log.trace("Kontentum updated!",{ fileName : "no/logic/fox/kontentum/Kontentum.hx", lineNumber : 374, className : "no.logic.fox.kontentum.Kontentum", methodName : "onPingLoadedComplete"});
		no_logic_fox_kontentum_Kontentum.previousTimeStamp = newTime;
		no_logic_fox_loader_Loader.LoadJSON(no_logic_fox_kontentum_Kontentum.fullURL,null,no_logic_fox_kontentum_Kontentum.onRestLoadedPingComplete,no_logic_fox_kontentum_Kontentum.onPingLoadedError);
	}
};
no_logic_fox_kontentum_Kontentum.onPingLoadedError = function(ul) {
	haxe_Log.trace("Kontentium ping failed.",{ fileName : "no/logic/fox/kontentum/Kontentum.hx", lineNumber : 383, className : "no.logic.fox.kontentum.Kontentum", methodName : "onPingLoadedError"});
	haxe_Timer.delay(no_logic_fox_kontentum_Kontentum.triggerPing,no_logic_fox_kontentum_Kontentum.pingTime);
};
no_logic_fox_kontentum_Kontentum.onRestLoadedPingComplete = function(ul) {
	haxe_Log.trace("Kontentum REST reloaded.",{ fileName : "no/logic/fox/kontentum/Kontentum.hx", lineNumber : 389, className : "no.logic.fox.kontentum.Kontentum", methodName : "onRestLoadedPingComplete"});
	no_logic_fox_kontentum_Kontentum.RESTJson = ul.contentJSON;
	no_logic_fox_kontentum_Kontentum.languages = no_logic_fox_kontentum_Kontentum.parseLanguages();
	no_logic_fox_kontentum_Kontentum.content = no_logic_fox_kontentum_Kontentum.RESTJson.content;
	no_logic_fox_kontentum_Kontentum.texts = no_logic_fox_kontentum_Kontentum.processTexts(no_logic_fox_kontentum_Kontentum.RESTJson.texts);
	haxe_Timer.delay(no_logic_fox_kontentum_Kontentum.triggerPing,no_logic_fox_kontentum_Kontentum.pingTime);
};
no_logic_fox_kontentum_Kontentum.kontentumReady = function() {
	no_logic_fox_kontentum_Kontentum.assetsLoaded = true;
	if(no_logic_fox_kontentum_Kontentum.onComplete != null) {
		no_logic_fox_kontentum_Kontentum.onComplete();
	}
};
no_logic_fox_kontentum_Kontentum.processFiles = function(files) {
	no_logic_fox_kontentum_Kontentum.filesByIdentifier = { };
	no_logic_fox_kontentum_Kontentum.filesIdIdentifier = { };
	var rObj = { };
	if(files != null) {
		var _g = 0;
		var _g1 = files.length;
		while(_g < _g1) {
			var ti = files[_g++];
			rObj[ti.id] = ti;
			no_logic_fox_kontentum_Kontentum.filesByIdentifier[ti.identifier] = ti;
			no_logic_fox_kontentum_Kontentum.filesIdIdentifier[ti.id] = ti.identifier;
		}
	}
	return rObj;
};
no_logic_fox_kontentum_Kontentum.preloadAssets = function() {
	if(no_logic_fox_kontentum_Kontentum.files != null) {
		var i = $iterator(no_logic_fox_types_Object)(no_logic_fox_kontentum_Kontentum.files);
		while(i.hasNext()) {
			var i1 = i.next();
			var file = Reflect.field(no_logic_fox_kontentum_Kontentum.files,i1);
			if(file.type == "image") {
				no_logic_fox_loader_Loader.addToQueue(no_logic_fox_kontentum_Kontentum.fileURL + file.file);
			}
		}
		if(no_logic_fox_loader_Loader.loaderQueue.length > 0) {
			no_logic_fox_loader_Loader.runQueue(no_logic_fox_kontentum_Kontentum.onPreloadComplete,no_logic_fox_kontentum_Kontentum.onPreloadError);
		}
	} else {
		no_logic_fox_kontentum_Kontentum.onPreloadError();
	}
};
no_logic_fox_kontentum_Kontentum.onPreloadComplete = function() {
	no_logic_fox_kontentum_Kontentum.kontentumReady();
};
no_logic_fox_kontentum_Kontentum.onPreloadError = function() {
	no_logic_fox_kontentum_Kontentum.kontentumReady();
};
no_logic_fox_kontentum_Kontentum.processVariables = function(vars) {
	var rObj = { };
	if(vars != null) {
		var _g = 0;
		var _g1 = Reflect.fields(vars);
		while(_g < _g1.length) {
			var n = _g1[_g];
			++_g;
			rObj[n] = Reflect.field(vars,n);
		}
	}
	return rObj;
};
no_logic_fox_kontentum_Kontentum.set_currentLanguage = function(value) {
	no_logic_fox_kontentum_Kontentum.currentLanguage = value;
	return no_logic_fox_kontentum_Kontentum.currentLanguage;
};
var no_logic_fox_loader_ImageCache = function() {
	this.images = new haxe_ds_StringMap();
};
$hxClasses["no.logic.fox.loader.ImageCache"] = no_logic_fox_loader_ImageCache;
no_logic_fox_loader_ImageCache.__name__ = "no.logic.fox.loader.ImageCache";
no_logic_fox_loader_ImageCache.prototype = {
	images: null
	,add: function(src,image) {
		this.images.h[src] = image;
		return image;
	}
	,get: function(src) {
		if(src == null) {
			return null;
		}
		return this.images.h[src];
	}
	,has: function(src) {
		if(src == null) {
			return false;
		}
		return Object.prototype.hasOwnProperty.call(this.images.h,src);
	}
	,__class__: no_logic_fox_loader_ImageCache
};
var no_logic_fox_loader_ContentType = $hxEnums["no.logic.fox.loader.ContentType"] = { __ename__ : true, __constructs__ : ["XML","JSON","IMAGE","VIDEO","SOUND","TEXT","BYTES"]
	,XML: {_hx_index:0,__enum__:"no.logic.fox.loader.ContentType",toString:$estr}
	,JSON: {_hx_index:1,__enum__:"no.logic.fox.loader.ContentType",toString:$estr}
	,IMAGE: {_hx_index:2,__enum__:"no.logic.fox.loader.ContentType",toString:$estr}
	,VIDEO: {_hx_index:3,__enum__:"no.logic.fox.loader.ContentType",toString:$estr}
	,SOUND: {_hx_index:4,__enum__:"no.logic.fox.loader.ContentType",toString:$estr}
	,TEXT: {_hx_index:5,__enum__:"no.logic.fox.loader.ContentType",toString:$estr}
	,BYTES: {_hx_index:6,__enum__:"no.logic.fox.loader.ContentType",toString:$estr}
};
var no_logic_fox_loader_Loader = function(props) {
	this.cProxy = "cors-anywhere.herokuapp.com/";
	this.stringifyFormData = false;
	this.contentForceBinary = false;
	this.contentIsBinary = false;
	this.isDisposed = false;
	this.autoParse = true;
	this.preventFileCaching = false;
	this.usePost = false;
	this.useCache = true;
	this.disposeOnComplete = false;
	this.corsProxy = false;
	this.setProps(props);
};
$hxClasses["no.logic.fox.loader.Loader"] = no_logic_fox_loader_Loader;
no_logic_fox_loader_Loader.__name__ = "no.logic.fox.loader.Loader";
no_logic_fox_loader_Loader.LoadJSON = function(url,properties,onCompleteCallback,onLoadErrorCallback) {
	if(properties == null) {
		properties = { };
	}
	properties.type = no_logic_fox_loader_ContentType.JSON;
	return no_logic_fox_loader_Loader.Load(url,properties,onCompleteCallback,onLoadErrorCallback);
};
no_logic_fox_loader_Loader.Load = function(url,properties,onCompleteCallback,onLoadErrorCallback) {
	var uxl = new no_logic_fox_loader_Loader(properties);
	if(onCompleteCallback != null) {
		uxl.onComplete = onCompleteCallback;
	}
	if(onLoadErrorCallback != null) {
		uxl.onError = onLoadErrorCallback;
	}
	uxl.load(url);
	return uxl;
};
no_logic_fox_loader_Loader.fileExists = function(file) {
	if(file != null) {
		return true;
	}
	return false;
};
no_logic_fox_loader_Loader.getFilename = function(path) {
	return path.substring(path.lastIndexOf("/") + "/".length,path.length);
};
no_logic_fox_loader_Loader.addToQueue = function(source,properties) {
	if(no_logic_fox_loader_Loader.loaderQueue == null) {
		no_logic_fox_loader_Loader.loaderQueue = [];
	}
	no_logic_fox_loader_Loader.loaderQueue.push({ source : source, properties : properties});
	return no_logic_fox_loader_Loader;
};
no_logic_fox_loader_Loader.runQueue = function(onQueueCompleteCallback,onQueueLoadErrorCallback,onQueueItemCompleteCallback,onQueueItemLoadErrorCallback,properties) {
	if(no_logic_fox_loader_Loader.loaderQueue != null && no_logic_fox_loader_Loader.loaderQueue.length > 0) {
		no_logic_fox_loader_Loader.createQueueLoader(properties);
		no_logic_fox_loader_Loader.loaderQueueIndex = 0;
		if(onQueueCompleteCallback != null) {
			no_logic_fox_loader_Loader.onQueueCompleteCallback = onQueueCompleteCallback;
		}
		if(onQueueLoadErrorCallback != null) {
			no_logic_fox_loader_Loader.onQueueLoadErrorCallback = onQueueLoadErrorCallback;
		}
		if(onQueueItemCompleteCallback != null) {
			no_logic_fox_loader_Loader.onQueueItemProgressCallback = onQueueItemCompleteCallback;
		}
		if(onQueueItemLoadErrorCallback != null) {
			no_logic_fox_loader_Loader.onQueueItemLoadErrorCallback = onQueueItemLoadErrorCallback;
		}
		no_logic_fox_loader_Loader.executeLoaderQueueItem(no_logic_fox_loader_Loader.loaderQueueIndex);
		return no_logic_fox_loader_Loader.loaderQueueLoader;
	} else {
		if(no_logic_fox_loader_Loader.onQueueCompleteCallback != null) {
			no_logic_fox_loader_Loader.onQueueCompleteCallback();
		}
		if(no_logic_fox_loader_Loader.loaderQueueLoader != null) {
			no_logic_fox_loader_Loader.loaderQueueLoader.dispose();
			no_logic_fox_loader_Loader.loaderQueueLoader = null;
		}
		return null;
	}
};
no_logic_fox_loader_Loader.executeLoaderQueueItem = function(itemIndex) {
	if(itemIndex < no_logic_fox_loader_Loader.loaderQueue.length) {
		var item = no_logic_fox_loader_Loader.loaderQueue[itemIndex];
		if(item != null) {
			if(no_logic_fox_loader_Loader.loaderQueueLoader != null) {
				no_logic_fox_loader_Loader.createQueueLoader(null);
			}
			if(item.properties != null) {
				no_logic_fox_loader_Loader.loaderQueueLoader.setProps(item.properties);
			}
			no_logic_fox_loader_Loader.loaderQueueLoader.load(item.source);
			if(no_logic_fox_loader_Loader.onQueueItemStartedCallback != null) {
				no_logic_fox_loader_Loader.onQueueItemStartedCallback(no_logic_fox_loader_Loader.loaderQueueLoader);
			}
		}
	}
};
no_logic_fox_loader_Loader.createQueueLoader = function(properties) {
	if(no_logic_fox_loader_Loader.loaderQueueLoader == null) {
		no_logic_fox_loader_Loader.loaderQueueLoader = new no_logic_fox_loader_Loader(properties);
	} else {
		no_logic_fox_loader_Loader.loaderQueueLoader.setProps(properties);
	}
	no_logic_fox_loader_Loader.loaderQueueLoader.onComplete = no_logic_fox_loader_Loader.onQueueItemComplete;
	no_logic_fox_loader_Loader.loaderQueueLoader.onProgress = no_logic_fox_loader_Loader.onQueueItemProgress;
	no_logic_fox_loader_Loader.loaderQueueLoader.onError = no_logic_fox_loader_Loader.onQueueItemError;
};
no_logic_fox_loader_Loader.onQueueItemComplete = function(uxl) {
	if(no_logic_fox_loader_Loader.onQueueItemCompleteCallback != null) {
		no_logic_fox_loader_Loader.onQueueItemCompleteCallback(uxl);
	}
	no_logic_fox_loader_Loader.nextQueueItem();
};
no_logic_fox_loader_Loader.onQueueItemProgress = function(uxl) {
	if(no_logic_fox_loader_Loader.onQueueItemProgressCallback != null) {
		no_logic_fox_loader_Loader.onQueueItemProgressCallback(uxl);
	}
};
no_logic_fox_loader_Loader.onQueueItemError = function(uxl) {
	if(no_logic_fox_loader_Loader.onQueueItemLoadErrorCallback != null) {
		no_logic_fox_loader_Loader.onQueueItemLoadErrorCallback(uxl);
	}
	no_logic_fox_loader_Loader.nextQueueItem();
};
no_logic_fox_loader_Loader.nextQueueItem = function() {
	no_logic_fox_loader_Loader.loaderQueueIndex++;
	if(no_logic_fox_loader_Loader.loaderQueueIndex >= no_logic_fox_loader_Loader.loaderQueue.length) {
		if(no_logic_fox_loader_Loader.onQueueCompleteCallback != null) {
			no_logic_fox_loader_Loader.onQueueCompleteCallback();
		}
		if(no_logic_fox_loader_Loader.loaderQueueLoader != null) {
			no_logic_fox_loader_Loader.loaderQueueLoader.dispose();
			no_logic_fox_loader_Loader.loaderQueueLoader = null;
		}
	} else {
		no_logic_fox_loader_Loader.executeLoaderQueueItem(no_logic_fox_loader_Loader.loaderQueueIndex);
	}
};
no_logic_fox_loader_Loader.prototype = {
	source: null
	,fileName: null
	,loadtime: null
	,type: null
	,pathType: null
	,destinationFolder: null
	,corsProxy: null
	,disposeOnComplete: null
	,useCache: null
	,usePost: null
	,preventFileCaching: null
	,autoParse: null
	,isDisposed: null
	,bytesLoaded: null
	,bytesTotal: null
	,loadingProgress: null
	,startTime: null
	,endTime: null
	,contentTEXT: null
	,contentXML: null
	,contentJSON: null
	,contentIMAGE: null
	,contentBYTES: null
	,contentRAW: null
	,contentIsBinary: null
	,contentForceBinary: null
	,contentType: null
	,parsedFileType: null
	,xhr: null
	,formData: null
	,stringifyFormData: null
	,requestHeaders: null
	,cProxy: null
	,onComplete: null
	,onProgress: null
	,onError: null
	,setProps: function(props) {
		if(props != null) {
			var name = $iterator(no_logic_fox_types_Object)(props);
			while(name.hasNext()) {
				var name1 = name.next();
				Reflect.setProperty(this,name1,Reflect.field(props,name1));
			}
		}
	}
	,loadImage: function(file) {
		this.type = no_logic_fox_loader_ContentType.IMAGE;
		this.source = this.analyzePath(file);
		if(this.source != null) {
			if(this.useCache && no_logic_fox_Fox.cache.images.has(this.source)) {
				no_logic_fox_Fox.log("Grabbed from cache: " + this.source);
				this.contentIMAGE = no_logic_fox_Fox.cache.images.get(this.source);
				this.finishedLoading();
			} else if(this.pathType == "urlloader_localFile") {
				if(no_logic_fox_loader_Loader.fileExists(this.source)) {
					this.startTime = kha_System.get_time();
					var nc = "";
					if(this.preventFileCaching) {
						nc = "?" + Std.string(Math.random() * 1000 | 0);
					}
					kha_Assets.loadImageFromPath(this.source + nc,false,$bind(this,this.onImageLoaded),$bind(this,this.onFileLoadError),{ fileName : "no/logic/fox/loader/Loader.hx", lineNumber : 182, className : "no.logic.fox.loader.Loader", methodName : "loadImage"});
				}
			} else if(this.pathType == "urlloader_webaddress") {
				var headers = new haxe_ds_StringMap();
				this.startTime = kha_System.get_time();
				var useSecure = this.isSecure(this.source);
				file = this.stripHttp(this.source);
				this.HttpRequestJS(this.getDomain(this.source),this.getDomainPath(this.source),null,useSecure ? 443 : 80,useSecure,this.usePost == true ? 1 : 0,headers,this.formData,$bind(this,this.onHttpResponseImage));
			}
		}
	}
	,onHttpResponseImage: function() {
		var _gthis = this;
		var reader = new FileReader();
		reader.readAsArrayBuffer(this.xhr.response);
		reader.onload = function(e) {
			try {
				var tmp = haxe_io_Bytes.ofData(e.target.result);
				_gthis.contentRAW = tmp;
				_gthis.imageFromBytes(_gthis.contentRAW,$bind(_gthis,_gthis.onImageLoaded));
			} catch( _g ) {
			}
			_gthis.xhr = null;
		};
	}
	,HttpRequestJS: function(url,path,data,port,secure,method,headers,formData,callback) {
		this.xhr = new XMLHttpRequest("");
		var cp = "";
		if(this.corsProxy) {
			cp = this.cProxy;
		}
		var completeUrl = (secure ? "https://" : "http://") + cp + url + ":" + port + "/" + path;
		this.xhr.onload = callback;
		this.xhr.onerror = $bind(this,this.onFileLoadError);
		if(this.usePost && formData != null) {
			this.xhr.open("Post",completeUrl,true);
			var xhr = this.xhr;
			if(headers != null) {
				var key = haxe_ds_StringMap.keysIterator(headers.h);
				while(key.hasNext()) {
					var key1 = key.next();
					xhr.setRequestHeader(key1,headers.h[key1]);
				}
			}
			if(this.stringifyFormData) {
				if(formData != null) {
					this.xhr.send(JSON.stringify(formData));
				} else {
					this.xhr.send();
				}
			} else {
				var fData = new FormData();
				if(formData != null) {
					var _g = 0;
					var _g1 = Reflect.fields(formData);
					while(_g < _g1.length) {
						var f = _g1[_g];
						++_g;
						fData.append(f,Std.string(Reflect.field(formData,f)));
					}
				}
				this.xhr.send(fData);
			}
		} else {
			this.xhr.responseType = "blob";
			this.xhr.open("Get",completeUrl,true);
			var xhr = this.xhr;
			if(headers != null) {
				var key = haxe_ds_StringMap.keysIterator(headers.h);
				while(key.hasNext()) {
					var key1 = key.next();
					xhr.setRequestHeader(key1,headers.h[key1]);
				}
			}
			this.xhr.send(data);
		}
	}
	,imageFromBytes: function(bytes,onImageDecoded) {
		var _gthis = this;
		kha_Image.fromEncodedBytes(bytes,null,function(i) {
			var tmp = kha_System.get_time();
			_gthis.loadtime = tmp - _gthis.startTime;
			if(onImageDecoded != null) {
				onImageDecoded(i);
			}
		},function(error) {
			no_logic_fox_Fox.warn("Error decoding image!");
		},false);
	}
	,onImageLoaded: function(image) {
		this.contentIMAGE = image;
		no_logic_fox_Fox.cache.images.add(this.source,this.contentIMAGE);
		this.finishedLoading();
	}
	,onFileLoadError: function(e) {
		if(this.onError != null) {
			this.onError(this);
		}
	}
	,load: function(file) {
		this.source = this.analyzePath(file);
		if(this.source != null) {
			this.contentRAW = null;
			if(this.parsedFileType == no_logic_fox_loader_ContentType.IMAGE && this.useCache && no_logic_fox_Fox.cache.images.has(this.source)) {
				no_logic_fox_Fox.log("Grabbed from cache: " + this.source);
				this.contentIMAGE = no_logic_fox_Fox.cache.images.get(this.source);
				this.finishedLoading();
			} else if(this.source.charAt(0) == "@" && this.parsedFileType != no_logic_fox_loader_ContentType.IMAGE) {
				this.contentRAW = haxe_Resource.getBytes(this.source.split("@").join(""));
				this.finishedLoading();
			} else if(this.pathType == "urlloader_localFile") {
				if(no_logic_fox_loader_Loader.fileExists(this.source)) {
					var nc = "";
					if(this.preventFileCaching) {
						nc = "?" + Std.string(Math.random() * 1000 | 0);
					}
					kha_Assets.loadBlobFromPath(this.source + nc,$bind(this,this.onBlobLoaded),$bind(this,this.onFileLoadError),{ fileName : "no/logic/fox/loader/Loader.hx", lineNumber : 428, className : "no.logic.fox.loader.Loader", methodName : "load"});
				} else {
					this.onFileLoadError(null);
				}
			} else if(this.pathType == "urlloader_webaddress") {
				this.startTime = kha_Scheduler.realTime();
				if(this.requestHeaders == null) {
					this.requestHeaders = new haxe_ds_StringMap();
				}
				var useSecure = this.isSecure(this.source);
				file = this.stripHttp(this.source);
				this.HttpRequestJS(this.getDomain(this.source),this.getDomainPath(this.source),"",useSecure ? 443 : 80,useSecure,0,this.requestHeaders,this.formData,$bind(this,this.onHttpResponseFile));
			}
		}
	}
	,getDomain: function(file) {
		if(file == null) {
			return null;
		}
		file = file.split("https://").join("").split("http://").join("");
		if(file.indexOf("/") != -1) {
			var fa = file.split("/");
			if(fa.length > 0) {
				return fa[0];
			}
		}
		return file;
	}
	,getDomainPath: function(file) {
		if(file == null) {
			return null;
		}
		file = file.split("https://").join("").split("http://").join("");
		if(file.indexOf("/") != -1) {
			var fa = file.split("/");
			if(fa.length > 1) {
				fa.shift();
				return fa.join("/");
			} else {
				return "";
			}
		}
		return "";
	}
	,stripHttp: function(file) {
		if(file == null) {
			return null;
		}
		return file.split("https://").join("").split("https//").join("").split("http//").join("").split("http://").join("");
	}
	,isSecure: function(file) {
		var isSec = false;
		if(file != null) {
			if(file.indexOf("http://") != -1) {
				isSec = false;
			} else if(file.indexOf("http//") != -1) {
				isSec = false;
			} else if(file.indexOf("https//") != -1) {
				isSec = true;
			} else if(file.indexOf("https://") != -1) {
				isSec = true;
			}
		}
		return isSec;
	}
	,onBlobLoaded: function(blob) {
		this.contentRAW = blob.bytes;
		this.finishedLoading();
	}
	,onHttpResponseFile: function() {
		var _gthis = this;
		if(this.type == null) {
			this.type = this.parsedFileType;
		}
		var contentKind = this.type;
		this.contentType = contentKind;
		this.contentIsBinary = this.contentForceBinary || this.determineIsBinary(contentKind);
		var reader = new FileReader();
		if(this.contentIsBinary) {
			var success = false;
			try {
				reader.readAsArrayBuffer(this.xhr.response);
				success = true;
			} catch( _g ) {
			}
			if(!success) {
				this.contentRAW = this.xhr.response;
				this.parseLoadedData();
			}
		} else if(((this.xhr.response) instanceof Blob)) {
			reader.readAsBinaryString(this.xhr.response);
		} else if(typeof(this.xhr.response) == "string") {
			this.contentRAW = this.xhr.responseText;
			this.parseLoadedData();
		}
		reader.onload = function(e) {
			if(_gthis.contentIsBinary) {
				try {
					var tmp = haxe_io_Bytes.ofData(e.target.result);
					_gthis.contentRAW = tmp;
				} catch( _g ) {
				}
			} else {
				try {
					_gthis.contentRAW = Std.string(e.target.result);
				} catch( _g ) {
				}
			}
			_gthis.parseLoadedData();
		};
		reader.onerror = function(e) {
		};
	}
	,parseLoadedData: function() {
		this.loadtime = kha_System.get_time() - this.startTime;
		if(this.contentIsBinary) {
			this.contentBYTES = this.contentRAW;
		}
		if(this.autoParse) {
			if(this.contentType == no_logic_fox_loader_ContentType.TEXT) {
				try {
					this.contentTEXT = Std.string(this.contentRAW);
					this.finishedLoading();
				} catch( _g ) {
				}
			} else if(this.contentType == no_logic_fox_loader_ContentType.JSON) {
				try {
					this.contentTEXT = Std.string(this.contentRAW);
					this.contentJSON = JSON.parse(this.contentRAW);
				} catch( _g ) {
					haxe_Log.trace("Error decoding JSON!",{ fileName : "no/logic/fox/loader/Loader.hx", lineNumber : 754, className : "no.logic.fox.loader.Loader", methodName : "parseLoadedData"});
					haxe_Log.trace(this.contentRAW == null ? "null" : Std.string(this.contentRAW),{ fileName : "no/logic/fox/loader/Loader.hx", lineNumber : 755, className : "no.logic.fox.loader.Loader", methodName : "parseLoadedData"});
				}
				this.finishedLoading();
			} else if(this.contentType == no_logic_fox_loader_ContentType.XML) {
				try {
					this.contentTEXT = Std.string(this.contentRAW);
					this.contentXML = Xml.parse(this.contentRAW);
				} catch( _g ) {
					haxe_Log.trace("Error validating XML!",{ fileName : "no/logic/fox/loader/Loader.hx", lineNumber : 769, className : "no.logic.fox.loader.Loader", methodName : "parseLoadedData"});
					haxe_Log.trace(this.contentRAW == null ? "null" : Std.string(this.contentRAW),{ fileName : "no/logic/fox/loader/Loader.hx", lineNumber : 770, className : "no.logic.fox.loader.Loader", methodName : "parseLoadedData"});
				}
				this.finishedLoading();
			} else if(this.contentType == no_logic_fox_loader_ContentType.IMAGE) {
				this.imageFromBytes(this.contentRAW,$bind(this,this.onImageLoaded));
			} else {
				this.finishedLoading();
			}
		} else {
			this.finishedLoading();
		}
	}
	,finishedLoading: function() {
		if(this.onComplete != null) {
			this.onComplete(this);
		}
	}
	,clear: function() {
		this.type = null;
		this.pathType = null;
		this.bytesLoaded = 0;
		this.bytesTotal = 0;
		this.loadingProgress = 0;
		this.startTime = 0;
		this.endTime = 0;
		this.contentIsBinary = false;
		this.contentJSON = null;
		this.contentTEXT = null;
		this.contentXML = null;
		this.contentType = null;
		this.parsedFileType = null;
		this.contentIMAGE = null;
		this.contentRAW = null;
		this.contentBYTES = null;
		this.formData = null;
	}
	,determineIsBinary: function(contentKind) {
		if(contentKind == no_logic_fox_loader_ContentType.BYTES || contentKind == no_logic_fox_loader_ContentType.IMAGE) {
			return true;
		}
		return false;
	}
	,analyzePath: function(url) {
		if(url == null) {
			return url;
		}
		this.parsedFileType = this.getFileType(url);
		this.fileName = no_logic_fox_loader_Loader.getFilename(url);
		if(url.indexOf("://") == -1) {
			url = url.split("/").join("\\");
			this.pathType = "urlloader_localFile";
			return url;
		}
		if(url.indexOf("http://") != -1) {
			var mx = url.split("http://").join("").split("/");
			var nu = "http://" + mx.shift();
			nu += "/" + mx.join("/");
			url = nu.split("%2F").join("/");
			this.pathType = "urlloader_webaddress";
			return url;
		} else if(url.indexOf("https://") != -1) {
			var mx = url.split("https://").join("").split("/");
			var nu = "https://" + mx.shift();
			nu += "/" + mx.join("/");
			url = nu.split("%2F").join("/");
			this.pathType = "urlloader_webaddress";
			return url;
		}
		return url;
	}
	,loadJSON: function(url,properties,onCompleteCallback,onLoadErrorCallback) {
		if(properties == null) {
			properties = { };
		}
		properties.type = no_logic_fox_loader_ContentType.JSON;
		this.setProps(properties);
		if(onCompleteCallback != null) {
			this.onComplete = onCompleteCallback;
		}
		if(onLoadErrorCallback != null) {
			this.onError = onLoadErrorCallback;
		}
		this.load(url);
		return this;
	}
	,getFileType: function(filename) {
		filename = filename.toLowerCase();
		if(this.fio(filename,"jpg") || this.fio(filename,"png") || this.fio(filename,"gif") || this.fio(filename,"jpeg")) {
			return no_logic_fox_loader_ContentType.IMAGE;
		} else if(this.fio(filename,"txt") || this.fio(filename,"text") || this.fio(filename,"nfo")) {
			return no_logic_fox_loader_ContentType.TEXT;
		} else if(this.fio(filename,"mp4") || this.fio(filename,"flv") || this.fio(filename,"f4v") || this.fio(filename,"mov") || this.fio(filename,"avi") || this.fio(filename,"mpg") || this.fio(filename,"mkv") || this.fio(filename,"mpeg") || this.fio(filename,"wmv")) {
			return no_logic_fox_loader_ContentType.VIDEO;
		} else if(this.fio(filename,"mp3") || this.fio(filename,"wav")) {
			return no_logic_fox_loader_ContentType.SOUND;
		} else if(this.fio(filename,"xml")) {
			return no_logic_fox_loader_ContentType.XML;
		} else if(this.fio(filename,"json") || this.fio(filename,"jsn")) {
			return no_logic_fox_loader_ContentType.JSON;
		} else {
			return no_logic_fox_loader_ContentType.BYTES;
		}
	}
	,fio: function(name,key) {
		if(name.indexOf("." + key) == -1) {
			return false;
		} else {
			return true;
		}
	}
	,dispose: function(unloadImages) {
		if(unloadImages == null) {
			unloadImages = false;
		}
		if(unloadImages && this.contentIMAGE != null) {
			this.contentIMAGE.unload();
		}
		this.clear();
		this.requestHeaders = null;
		this.destinationFolder = null;
		this.source = null;
		this.fileName = null;
		this.loadtime = 0;
		this.type = null;
		this.pathType = null;
		this.destinationFolder = null;
		this.xhr = null;
		this.onComplete = null;
		this.onProgress = null;
		this.onError = null;
		this.isDisposed = true;
	}
	,__class__: no_logic_fox_loader_Loader
};
var no_logic_fox_types_Object = {};
no_logic_fox_types_Object.iterator = function(this1) {
	var fields = Reflect.fields(this1);
	if(fields == null) {
		fields = [];
	}
	return new haxe_iterators_ArrayIterator(fields);
};
var haxe_lang_Iterator = function() { };
$hxClasses["haxe.lang.Iterator"] = haxe_lang_Iterator;
haxe_lang_Iterator.__name__ = "haxe.lang.Iterator";
haxe_lang_Iterator.__isInterface__ = true;
haxe_lang_Iterator.prototype = {
	hasNext: null
	,next: null
	,__class__: haxe_lang_Iterator
};
var haxe_lang_Iterable = function() { };
$hxClasses["haxe.lang.Iterable"] = haxe_lang_Iterable;
haxe_lang_Iterable.__name__ = "haxe.lang.Iterable";
haxe_lang_Iterable.__isInterface__ = true;
haxe_lang_Iterable.prototype = {
	iterator: null
	,__class__: haxe_lang_Iterable
};
var no_logic_fox_types_Rectangle = function(x,y,width,height) {
	if(height == null) {
		height = 0;
	}
	if(width == null) {
		width = 0;
	}
	if(y == null) {
		y = 0;
	}
	if(x == null) {
		x = 0;
	}
	this.isFrozen = false;
	this.x = x;
	this.y = y;
	this.width = width;
	this.height = height;
};
$hxClasses["no.logic.fox.types.Rectangle"] = no_logic_fox_types_Rectangle;
no_logic_fox_types_Rectangle.__name__ = "no.logic.fox.types.Rectangle";
no_logic_fox_types_Rectangle.prototype = {
	height: null
	,width: null
	,x: null
	,y: null
	,isFrozen: null
	,frozen: null
	,freeze: function() {
		this.frozen = new no_logic_fox_types_Rectangle(this.x,this.y,this.width,this.height);
		this.isFrozen = true;
	}
	,clone: function() {
		return new no_logic_fox_types_Rectangle(this.x,this.y,this.width,this.height);
	}
	,reset: function() {
		if(this.frozen != null) {
			this.copyFrom(this.frozen);
		} else {
			this.clear();
		}
	}
	,clear: function() {
		this.x = 0;
		this.y = 0;
		this.width = 0;
		this.height = 0;
	}
	,contains: function(x,y) {
		if(x >= this.x && y >= this.y && x < this.get_right()) {
			return y < this.get_bottom();
		} else {
			return false;
		}
	}
	,copyFrom: function(sourceRect) {
		this.x = sourceRect.x;
		this.y = sourceRect.y;
		this.width = sourceRect.width;
		this.height = sourceRect.height;
	}
	,get_bottom: function() {
		return this.y + this.height;
	}
	,get_right: function() {
		return this.x + this.width;
	}
	,transform: function(rect) {
		this.x += rect.x;
		this.y += rect.y;
		this.width *= rect.width;
		this.height *= rect.height;
	}
	,__class__: no_logic_fox_types_Rectangle
	,__properties__: {get_right:"get_right",get_bottom:"get_bottom"}
};
var no_logic_fox_utils_Bits = {};
no_logic_fox_utils_Bits.set = function(this1,pos) {
	if(pos < 32) {
		this1[0] |= 1 << pos;
	} else {
		var cell = pos / 32 | 0;
		if(this1.length <= cell) {
			var _g = this1.length;
			var _g1 = cell + 1;
			while(_g < _g1) this1[_g++] = 0;
		}
		this1[cell] |= 1 << pos - cell * 32;
	}
};
no_logic_fox_utils_Bits.unset = function(this1,pos) {
	if(pos < 32) {
		this1[0] &= ~(1 << pos);
	} else {
		var cell = pos / 32 | 0;
		if(this1.length <= cell) {
			var _g = this1.length;
			var _g1 = cell + 1;
			while(_g < _g1) this1[_g++] = 0;
		}
		this1[cell] &= ~(1 << pos - cell * 32);
	}
};
no_logic_fox_utils_Bits.isSet = function(this1,pos) {
	if(pos < 32) {
		return 0 != (this1[0] & 1 << pos);
	} else {
		var cell = pos / 32 | 0;
		if(cell < this1.length) {
			return 0 != (this1[cell] & 1 << pos - cell * 32);
		} else {
			return false;
		}
	}
};
var no_logic_fox_utils_ColorUtils = function() { };
$hxClasses["no.logic.fox.utils.ColorUtils"] = no_logic_fox_utils_ColorUtils;
no_logic_fox_utils_ColorUtils.__name__ = "no.logic.fox.utils.ColorUtils";
no_logic_fox_utils_ColorUtils.multiply = function(colorA,colorB) {
	var nColor = -1;
	nColor = ((colorA >>> 24) * 0.00392156862745098 * ((colorB >>> 24) * 0.00392156862745098) * 255 | 0) << 24 | (255. | 0) << 16 | (255. | 0) << 8 | (255. | 0);
	nColor = ((nColor >>> 24) * 0.00392156862745098 * 255 | 0) << 24 | (((colorA & 16711680) >>> 16) * 0.00392156862745098 * (((colorB & 16711680) >>> 16) * 0.00392156862745098) * 255 | 0) << 16 | (((nColor & 65280) >>> 8) * 0.00392156862745098 * 255 | 0) << 8 | ((nColor & 255) * 0.00392156862745098 * 255 | 0);
	nColor = ((nColor >>> 24) * 0.00392156862745098 * 255 | 0) << 24 | (((nColor & 16711680) >>> 16) * 0.00392156862745098 * 255 | 0) << 16 | (((colorA & 65280) >>> 8) * 0.00392156862745098 * (((colorB & 65280) >>> 8) * 0.00392156862745098) * 255 | 0) << 8 | ((nColor & 255) * 0.00392156862745098 * 255 | 0);
	nColor = ((nColor >>> 24) * 0.00392156862745098 * 255 | 0) << 24 | (((nColor & 16711680) >>> 16) * 0.00392156862745098 * 255 | 0) << 16 | (((nColor & 65280) >>> 8) * 0.00392156862745098 * 255 | 0) << 8 | ((colorA & 255) * 0.00392156862745098 * ((colorB & 255) * 0.00392156862745098) * 255 | 0);
	return nColor;
};
var no_logic_fox_utils_Convert = function() { };
$hxClasses["no.logic.fox.utils.Convert"] = no_logic_fox_utils_Convert;
no_logic_fox_utils_Convert.__name__ = "no.logic.fox.utils.Convert";
no_logic_fox_utils_Convert.toBool = function(value) {
	var isBoolean = false;
	switch(Std.string(value).toLowerCase()) {
	case "1":
		isBoolean = true;
		break;
	case "enabled":
		isBoolean = true;
		break;
	case "on":
		isBoolean = true;
		break;
	case "true":
		isBoolean = true;
		break;
	case "y":
		isBoolean = true;
		break;
	case "yes":
		isBoolean = true;
		break;
	}
	return isBoolean;
};
var no_logic_fox_utils_DateUtils = function() { };
$hxClasses["no.logic.fox.utils.DateUtils"] = no_logic_fox_utils_DateUtils;
no_logic_fox_utils_DateUtils.__name__ = "no.logic.fox.utils.DateUtils";
no_logic_fox_utils_DateUtils.getWDateString = function(date) {
	var correctDate = date;
	if(date == null) {
		correctDate = new Date();
	}
	return correctDate.getFullYear() + no_logic_fox_utils_DateUtils.p2(correctDate.getMonth() + 1) + no_logic_fox_utils_DateUtils.p2(correctDate.getDate()) + no_logic_fox_utils_DateUtils.p2(correctDate.getHours()) + no_logic_fox_utils_DateUtils.p2(correctDate.getMinutes()) + no_logic_fox_utils_DateUtils.p2(correctDate.getSeconds());
};
no_logic_fox_utils_DateUtils.getWDateInt = function(date) {
	return Std.parseInt(no_logic_fox_utils_DateUtils.getWDateString(date));
};
no_logic_fox_utils_DateUtils.p2 = function(d) {
	if(d < 10) {
		return "0" + (d == null ? "null" : "" + d);
	} else if(d == null) {
		return "null";
	} else {
		return "" + d;
	}
};
var no_logic_fox_utils_Ease = function() { };
$hxClasses["no.logic.fox.utils.Ease"] = no_logic_fox_utils_Ease;
no_logic_fox_utils_Ease.__name__ = "no.logic.fox.utils.Ease";
no_logic_fox_utils_Ease.easeLinear = function(t,b,c,d) {
	return c * t / d + b;
};
no_logic_fox_utils_Ease.easeInSine = function(t,b,c,d) {
	return -c * Math.cos(t / d * 1.57079632679) + c + b;
};
no_logic_fox_utils_Ease.easeOutSine = function(t,b,c,d) {
	return c * Math.sin(t / d * 1.57079632679) + b;
};
no_logic_fox_utils_Ease.easeInOutSine = function(t,b,c,d) {
	return -c / 2 * (Math.cos(Math.PI * t / d) - 1) + b;
};
no_logic_fox_utils_Ease.easeInQuint = function(t,b,c,d) {
	return c * (t /= d) * t * t * t * t + b;
};
no_logic_fox_utils_Ease.easeOutQuint = function(t,b,c,d) {
	t = t / d - 1;
	return c * (t * t * t * t * t + 1) + b;
};
no_logic_fox_utils_Ease.easeInOutQuint = function(t,b,c,d) {
	if((t /= d / 2) < 1) {
		return c / 2 * t * t * t * t * t + b;
	}
	return c / 2 * ((t -= 2) * t * t * t * t + 2) + b;
};
no_logic_fox_utils_Ease.easeInQuart = function(t,b,c,d) {
	return c * (t /= d) * t * t * t + b;
};
no_logic_fox_utils_Ease.easeOutQuart = function(t,b,c,d) {
	t = t / d - 1;
	return -c * (t * t * t * t - 1) + b;
};
no_logic_fox_utils_Ease.easeInOutQuart = function(t,b,c,d) {
	if((t /= d / 2) < 1) {
		return c / 2 * t * t * t * t + b;
	}
	return -c / 2 * ((t -= 2) * t * t * t - 2) + b;
};
no_logic_fox_utils_Ease.easeInQuad = function(t,b,c,d) {
	return c * (t /= d) * t + b;
};
no_logic_fox_utils_Ease.easeOutQuad = function(t,b,c,d) {
	return -c * (t /= d) * (t - 2) + b;
};
no_logic_fox_utils_Ease.easeInOutQuad = function(t,b,c,d) {
	if((t /= d / 2) < 1) {
		return c / 2 * t * t + b;
	}
	return -c / 2 * (--t * (t - 2) - 1) + b;
};
no_logic_fox_utils_Ease.easeInElastic = function(t,b,c,d,a,p) {
	var s;
	if(t == 0) {
		return b;
	}
	if((t /= d) == 1) {
		return b + c;
	}
	if(p == null) {
		p = d * .3;
	}
	if(a == null || a < Math.abs(c)) {
		a = c;
		s = p / 4;
	} else {
		s = p / 6.28318530718 * Math.asin(c / a);
	}
	return -(a * Math.pow(2,10 * --t) * Math.sin((t * d - s) * 6.28318530718 / p)) + b;
};
no_logic_fox_utils_Ease.easeOutElastic = function(t,b,c,d,a,p) {
	var s;
	if(t == 0) {
		return b;
	}
	if((t /= d) == 1) {
		return b + c;
	}
	if(p == null) {
		p = d * .3;
	}
	if(a == null || a < Math.abs(c)) {
		a = c;
		s = p / 4;
	} else {
		s = p / 6.28318530718 * Math.asin(c / a);
	}
	return a * Math.pow(2,-10 * t) * Math.sin((t * d - s) * 6.28318530718 / p) + c + b;
};
no_logic_fox_utils_Ease.easeInOutElastic = function(t,b,c,d,a,p) {
	var s;
	if(t == 0) {
		return b;
	}
	if((t /= d / 2) == 2) {
		return b + c;
	}
	if(p == null) {
		p = d * 0.44999999999999996;
	}
	if(a == null || a < Math.abs(c)) {
		a = c;
		s = p / 4;
	} else {
		s = p / 6.28318530718 * Math.asin(c / a);
	}
	if(t < 1) {
		return -.5 * (a * Math.pow(2,10 * --t) * Math.sin((t * d - s) * 6.28318530718 / p)) + b;
	}
	return a * Math.pow(2,-10 * --t) * Math.sin((t * d - s) * 6.28318530718 / p) * .5 + c + b;
};
no_logic_fox_utils_Ease.easeInCircular = function(t,b,c,d) {
	return -c * (Math.sqrt(1 - (t /= d) * t) - 1) + b;
};
no_logic_fox_utils_Ease.easeOutCircular = function(t,b,c,d) {
	t = t / d - 1;
	return c * Math.sqrt(1 - t * t) + b;
};
no_logic_fox_utils_Ease.easeInOutCircular = function(t,b,c,d) {
	if((t /= d / 2) < 1) {
		return -c / 2 * (Math.sqrt(1 - t * t) - 1) + b;
	}
	return c / 2 * (Math.sqrt(1 - (t -= 2) * t) + 1) + b;
};
no_logic_fox_utils_Ease.easeInBack = function(t,b,c,d) {
	return c * (t /= d) * t * (2.70158 * t - 1.70158) + b;
};
no_logic_fox_utils_Ease.easeOutBack = function(t,b,c,d) {
	t = t / d - 1;
	return c * (t * t * (2.70158 * t + 1.70158) + 1) + b;
};
no_logic_fox_utils_Ease.easeInOutBack = function(t,b,c,d) {
	if((t /= d / 2) < 1) {
		return c / 2 * (t * t * (3.5949095 * t - 2.5949095)) + b;
	}
	return c / 2 * ((t -= 2) * t * (3.5949095 * t + 2.5949095) + 2) + b;
};
no_logic_fox_utils_Ease.easeInBounce = function(t,b,c,d) {
	return c - no_logic_fox_utils_Ease.easeOutBounce(d - t,0,c,d) + b;
};
no_logic_fox_utils_Ease.easeOutBounce = function(t,b,c,d) {
	if((t /= d) < 0.36363636363636365) {
		return c * (7.5625 * t * t) + b;
	} else if(t < 0.72727272727272729) {
		return c * (7.5625 * (t -= 0.54545454545454541) * t + .75) + b;
	} else if(t < 0.90909090909090906) {
		return c * (7.5625 * (t -= 0.81818181818181823) * t + .9375) + b;
	} else {
		return c * (7.5625 * (t -= 0.95454545454545459) * t + .984375) + b;
	}
};
no_logic_fox_utils_Ease.easeInOutBounce = function(t,b,c,d) {
	if(t < d / 2) {
		return no_logic_fox_utils_Ease.easeInBounce(t * 2,0,c,d) * .5 + b;
	} else {
		return no_logic_fox_utils_Ease.easeOutBounce(t * 2 - d,0,c,d) * .5 + c * .5 + b;
	}
};
no_logic_fox_utils_Ease.easeInCubic = function(t,b,c,d) {
	return c * (t /= d) * t * t + b;
};
no_logic_fox_utils_Ease.easeOutCubic = function(t,b,c,d) {
	t = t / d - 1;
	return c * (t * t * t + 1) + b;
};
no_logic_fox_utils_Ease.easeInOutCubic = function(t,b,c,d) {
	if((t /= d / 2) < 1) {
		return c / 2 * t * t * t + b;
	}
	return c / 2 * ((t -= 2) * t * t + 2) + b;
};
var no_logic_fox_utils_FFloat = function(factor,initialValue) {
	if(initialValue == null) {
		initialValue = 0.0;
	}
	if(factor == null) {
		factor = 10;
	}
	this.value = 0.0;
	this.values = [];
	if(factor < 1) {
		factor = 1;
	}
	this.values.length = factor;
	var _g = 0;
	var _g1 = this.values.length;
	while(_g < _g1) this.values[_g++] = initialValue;
};
$hxClasses["no.logic.fox.utils.FFloat"] = no_logic_fox_utils_FFloat;
no_logic_fox_utils_FFloat.__name__ = "no.logic.fox.utils.FFloat";
no_logic_fox_utils_FFloat.prototype = {
	values: null
	,value: null
	,set_value: function(v) {
		if(this.values == null) {
			return this.value = v;
		}
		this.values.shift();
		this.values.push(v);
		this.value = 0.0;
		var _g = 0;
		var _g1 = this.values.length;
		while(_g < _g1) this.value += this.values[_g++];
		this.value /= this.values.length;
		return this.value;
	}
	,__class__: no_logic_fox_utils_FFloat
	,__properties__: {set_value:"set_value"}
};
var no_logic_fox_utils_SineBase = $hxEnums["no.logic.fox.utils.SineBase"] = { __ename__ : true, __constructs__ : ["Zero","Positive","Negative"]
	,Zero: {_hx_index:0,__enum__:"no.logic.fox.utils.SineBase",toString:$estr}
	,Positive: {_hx_index:1,__enum__:"no.logic.fox.utils.SineBase",toString:$estr}
	,Negative: {_hx_index:2,__enum__:"no.logic.fox.utils.SineBase",toString:$estr}
};
var no_logic_fox_utils_MathUtils = function() { };
$hxClasses["no.logic.fox.utils.MathUtils"] = no_logic_fox_utils_MathUtils;
no_logic_fox_utils_MathUtils.__name__ = "no.logic.fox.utils.MathUtils";
no_logic_fox_utils_MathUtils.clamp = function(val,min,max) {
	if(max == null) {
		max = 1;
	}
	if(min == null) {
		min = 0;
	}
	return Math.max(min,Math.min(max,val));
};
no_logic_fox_utils_MathUtils.sineCurve = function(amplitude,freq,offset,time,animated,curveBase) {
	if(curveBase == null) {
		curveBase = no_logic_fox_utils_SineBase.Zero;
	}
	if(animated == null) {
		animated = true;
	}
	if(time == null) {
		time = 0;
	}
	if(offset == null) {
		offset = 0;
	}
	if(freq == null) {
		freq = 1.0;
	}
	if(amplitude == null) {
		amplitude = 1.0;
	}
	var t = time;
	if(animated) {
		t = kha_Scheduler.time();
	}
	var o = 0.0;
	switch(curveBase._hx_index) {
	case 0:
		o = 0;
		break;
	case 1:
		o = 1;
		break;
	case 2:
		o = -1;
		break;
	}
	return (Math.sin(t * freq) + o) * 0.5 * amplitude + offset;
};
var no_logic_fox_utils_ObjUtils = function() { };
$hxClasses["no.logic.fox.utils.ObjUtils"] = no_logic_fox_utils_ObjUtils;
no_logic_fox_utils_ObjUtils.__name__ = "no.logic.fox.utils.ObjUtils";
no_logic_fox_utils_ObjUtils.copyProperties = function(source,dest,deepCopy,checkIfHasProperty) {
	if(checkIfHasProperty == null) {
		checkIfHasProperty = false;
	}
	if(deepCopy == null) {
		deepCopy = true;
	}
	if(source != null) {
		if(dest == null) {
			dest = { };
		}
		var destFields = Reflect.fields(dest);
		var _g = 0;
		var _g1 = Reflect.fields(source);
		while(_g < _g1.length) {
			var name = _g1[_g];
			++_g;
			try {
				if(checkIfHasProperty) {
					if(destFields.indexOf(name) != -1) {
						Reflect.setProperty(dest,name,Reflect.getProperty(source,name));
					}
				} else {
					Reflect.setProperty(dest,name,Reflect.getProperty(source,name));
				}
			} catch( _g2 ) {
			}
		}
	}
	return dest;
};
no_logic_fox_utils_ObjUtils.getName = function(thing) {
	if(thing == null) {
		return "null";
	} else {
		var s = thing.__name__;
		if(s == null) {
			var cl = js_Boot.getClass(thing);
			if(cl != null) {
				s = cl.__name__;
			}
		}
		if(s == null) {
			return "null";
		} else {
			return s;
		}
	}
};
var no_logic_fox_utils_PointOrigin = function(props) {
	this.scaleY = 0;
	this.scaleX = 0;
	this.scale = 0;
	this.rotation = 0;
	this.height = 0;
	this.width = 0;
	this.y = 0;
	this.x = 0;
};
$hxClasses["no.logic.fox.utils.PointOrigin"] = no_logic_fox_utils_PointOrigin;
no_logic_fox_utils_PointOrigin.__name__ = "no.logic.fox.utils.PointOrigin";
no_logic_fox_utils_PointOrigin.prototype = {
	x: null
	,y: null
	,width: null
	,height: null
	,rotation: null
	,scale: null
	,scaleX: null
	,scaleY: null
	,__class__: no_logic_fox_utils_PointOrigin
};
var no_logic_fox_utils_StringUtils = function() { };
$hxClasses["no.logic.fox.utils.StringUtils"] = no_logic_fox_utils_StringUtils;
no_logic_fox_utils_StringUtils.__name__ = "no.logic.fox.utils.StringUtils";
no_logic_fox_utils_StringUtils.toFirstCharUppercase = function(str) {
	if(str == null) {
		return null;
	}
	return HxOverrides.substr(str,0,1).toUpperCase() + HxOverrides.substr(str,1,str.length);
};
no_logic_fox_utils_StringUtils.enforceFourDigitNumberToString = function(num) {
	var enf = "";
	if(num < 10) {
		enf = "000";
	} else if(num < 100) {
		enf = "00";
	} else if(num < 1000) {
		enf = "0";
	}
	enf += Std.string(num);
	return enf;
};
no_logic_fox_utils_StringUtils.floatToString = function(float,numDecimals) {
	if(numDecimals == null) {
		numDecimals = -1;
	}
	if(numDecimals == -1) {
		if(float == null) {
			return "null";
		} else {
			return "" + float;
		}
	} else {
		var sa = (float == null ? "null" : "" + float).split(".");
		if(sa.length == 1 || numDecimals == 0) {
			return sa[0];
		} else {
			return sa[0] + "." + sa[1].substring(0,numDecimals);
		}
	}
};
no_logic_fox_utils_StringUtils.isNumeric = function(str) {
	if(str == null) {
		return false;
	}
	return new EReg("^\\d+$","").match(str);
};
var no_logic_fox_utils_TimeUtils = function() { };
$hxClasses["no.logic.fox.utils.TimeUtils"] = no_logic_fox_utils_TimeUtils;
no_logic_fox_utils_TimeUtils.__name__ = "no.logic.fox.utils.TimeUtils";
no_logic_fox_utils_TimeUtils.getFormatedTimeStamp = function() {
	var date = new Date();
	var eTime = "";
	var eHours = date.getHours();
	var eMinut = date.getMinutes();
	var eSecon = date.getSeconds();
	if(eHours < 10) {
		eTime = "" + ("0" + (eHours | 0));
	} else {
		eTime = "" + (eHours | 0);
	}
	eTime += ":";
	if(eMinut < 10) {
		eTime += "0" + (eMinut | 0);
	} else {
		eTime += eMinut | 0;
	}
	eTime += ":";
	if(eSecon < 10) {
		eTime += "0" + (eSecon | 0);
	} else {
		eTime += eSecon | 0;
	}
	return eTime;
};
var no_logic_kha_fox_application_system_AppHandler = function() { };
$hxClasses["no.logic.kha.fox.application.system.AppHandler"] = no_logic_kha_fox_application_system_AppHandler;
no_logic_kha_fox_application_system_AppHandler.__name__ = "no.logic.kha.fox.application.system.AppHandler";
no_logic_kha_fox_application_system_AppHandler.init = function(onInitComplete,waitForKontentum,createDisplayList) {
	if(createDisplayList == null) {
		createDisplayList = true;
	}
	if(waitForKontentum == null) {
		waitForKontentum = false;
	}
	var settings = no_logic_kha_fox_application_App.settings;
	if(settings.width == 0 || settings.height == 0) {
		settings.screenSizeAdaptToWindow = true;
	}
	var fs = false;
	if(settings.fullscreen == null) {
		fs = false;
	} else {
		fs = settings.fullscreen;
	}
	var onSystemStarted = function(w) {
		settings.windowWidth = kha_System.windowWidth();
		settings.windowHeight = kha_System.windowHeight();
		if(settings.screenSizeAdaptToWindow) {
			settings.width = settings.windowWidth;
			settings.height = settings.windowHeight;
		}
		no_logic_kha_fox_debug_Debug.init();
		var preloader = null;
		preloader = Type.createInstance(settings.preloader,[function() {
			if(preloader != null) {
				preloader.dispose();
			}
			onInitComplete();
			preloader = null;
			return preloader;
		}]);
		var paramsIn = settings.inputParams;
		var urlParams = new URLSearchParams($global.location.search);
		if(urlParams != null) {
			urlParams.forEach(function(value,key) {
				if(key != null && key != "" && value != null && value != "") {
					paramsIn.h[key] = value;
				}
			});
		}
		if(paramsIn.h["volume"] != null) {
			var onSystemStarted = parseFloat(paramsIn.h["volume"]);
			settings.config.volume = onSystemStarted;
		}
		if(paramsIn.h["mouse"] != null) {
			settings.config.mouse = no_logic_fox_utils_Convert.toBool(paramsIn.h["mouse"]);
		}
		if(paramsIn.h["visible"] != null) {
			settings.config.visible = no_logic_fox_utils_Convert.toBool(paramsIn.h["visible"]);
		}
		if(paramsIn.h["fullscreen"] != null) {
			settings.config.fullscreen = no_logic_fox_utils_Convert.toBool(paramsIn.h["fullscreen"]);
		}
		if(paramsIn.h["debug"] != null) {
			settings.config.debug = no_logic_fox_utils_Convert.toBool(paramsIn.h["debug"]);
		}
		if(paramsIn.h["ip"] != null) {
			settings.config.kontentum.ip = paramsIn.h["ip"];
		}
		if(paramsIn.h["token"] != null) {
			settings.config.kontentum.token = paramsIn.h["token"];
		}
		if(paramsIn.h["localFiles"] != null) {
			settings.config.kontentum.localFiles = paramsIn.h["localFiles"];
		}
		if(paramsIn.h["preloadImages"] != null) {
			settings.config.kontentum.preloadImages = no_logic_fox_utils_Convert.toBool(paramsIn.h["preloadImages"]);
		}
		var config = settings.config;
		if(!Object.prototype.hasOwnProperty.call(config,"fullscreen")) {
			config.fullscreen = config.fullscreen;
		}
		if(!Object.prototype.hasOwnProperty.call(config,"mouse")) {
			config.mouse = settings.showMouse;
		}
		if(!Object.prototype.hasOwnProperty.call(config,"visible")) {
			config.visible = true;
		}
		if(!Object.prototype.hasOwnProperty.call(config,"volume")) {
			config.volume = 1.0;
		}
		if(!Object.prototype.hasOwnProperty.call(config,"debug")) {
			config.debug = false;
		}
		if(!Object.prototype.hasOwnProperty.call(config.kontentum,"ip")) {
			config.kontentum.ip = "https://kontentum.link";
		}
		if(!Object.prototype.hasOwnProperty.call(config.kontentum,"localFiles")) {
			config.kontentum.localFiles = "";
		}
		if(!Object.prototype.hasOwnProperty.call(config.kontentum,"preloadImages")) {
			config.kontentum.preloadImages = false;
		}
		if(config.debug != null) {
			settings.debug.enabled = config.debug;
			settings.debug.showFPS = config.debug;
			settings.debug.showStatisics = config.debug;
		}
		preloader.loadAssets();
	};
	kha_System.start(new kha_SystemOptions(settings.name,-1,-1,new kha_WindowOptions(null,settings.x,settings.y,!settings.screenSizeAdaptToWindow ? settings.width : 1920,!settings.screenSizeAdaptToWindow ? settings.height : 1080,settings.displayNr,settings.visible,settings.windowFeatures,fs ? 1 : 0),new kha_FramebufferOptions(settings.render.fps,settings.render.vSync,32,16,8,settings.render.samplesPrPixel)),onSystemStarted);
};
no_logic_kha_fox_application_system_AppHandler.startKontentum = function(callback) {
	no_logic_fox_kontentum_Kontentum.onComplete = callback;
	no_logic_fox_kontentum_Kontentum.onFail = function(status) {
		no_logic_fox_Fox.get_c().error("Connection to Kontentum failed.",true);
		no_logic_fox_Fox.get_c().error(status);
		callback();
	};
	no_logic_fox_kontentum_Kontentum.connect(no_logic_kha_fox_application_App.settings.config.kontentum.token,no_logic_kha_fox_application_App.settings.config.kontentum.ip,no_logic_kha_fox_application_App.settings.config.kontentum.localFiles,true,no_logic_kha_fox_application_App.settings.config.kontentum.preloadImages);
};
no_logic_kha_fox_application_system_AppHandler.appCreated = function(app) {
	if(no_logic_kha_fox_application_App.settings.system.createDisplayList) {
		no_logic_kha_fox_application_App.i.stage = new no_logic_kha_fox_displaylist_Stage({ width : no_logic_kha_fox_application_App.settings.width, height : no_logic_kha_fox_application_App.settings.height});
	}
};
no_logic_kha_fox_application_system_AppHandler.updateBase = function(appBase) {
	no_logic_kha_fox_application_App.settings.windowWidth = kha_System.windowWidth();
	no_logic_kha_fox_application_App.settings.windowHeight = kha_System.windowHeight();
	if(no_logic_kha_fox_application_App.settings.screenSizeAdaptToWindow) {
		no_logic_kha_fox_application_App.settings.width = no_logic_kha_fox_application_App.settings.windowWidth;
		no_logic_kha_fox_application_App.settings.height = no_logic_kha_fox_application_App.settings.windowHeight;
	}
	var time = kha_System.get_time();
	if(no_logic_kha_fox_application_App.i.stage != null) {
		no_logic_kha_fox_application_App.i.stage.set_width(no_logic_kha_fox_application_App.settings.width);
		no_logic_kha_fox_application_App.i.stage.set_height(no_logic_kha_fox_application_App.settings.height);
		no_logic_kha_fox_application_App.i.stage.update();
	}
	no_logic_kha_fox_application_App.i.width = no_logic_kha_fox_application_App.i.stage.width | 0;
	no_logic_kha_fox_application_App.i.height = no_logic_kha_fox_application_App.i.stage.height | 0;
	appBase.update();
	tween_utils_Stopwatch.delta = kha_Scheduler.realTime() - tween_utils_Stopwatch.sample;
	tween_utils_Stopwatch.time += tween_utils_Stopwatch.delta;
	tween_Delta.defaultChannel.step(tween_utils_Stopwatch.delta);
	tween_utils_Stopwatch.sample = kha_Scheduler.realTime();
	no_logic_kha_fox_debug_Debug.updateTime = kha_System.get_time() - time;
	no_logic_kha_fox_debug_Debug.update();
	appBase.afterUpdate();
};
no_logic_kha_fox_application_system_AppHandler.renderBase = function(appBase,fba) {
	no_logic_kha_fox_application_App.system.time = kha_System.get_time();
	no_logic_kha_fox_application_App.system.deltaTime = no_logic_kha_fox_application_App.system.time - no_logic_kha_fox_application_App.system.lastTime;
	no_logic_kha_fox_application_App.system.lastTime = no_logic_kha_fox_application_App.system.time;
	var time = kha_System.get_time();
	if(no_logic_kha_fox_application_App.i.stage != null) {
		no_logic_kha_fox_application_App.i.stage.render(fba[0]);
	}
	appBase.render(fba[0]);
	no_logic_kha_fox_debug_Debug.renderTime = kha_System.get_time() - time;
	no_logic_kha_fox_debug_Debug.render(fba[0]);
	appBase.afterRender(fba[0]);
};
no_logic_kha_fox_application_system_AppHandler.restartApp = function() {
	location.reload();
};
no_logic_kha_fox_application_system_AppHandler.exitApp = function(errorCode) {
	if(errorCode == null) {
		errorCode = 0;
	}
	kha_System.stop();
	location='exit';
};
var no_logic_kha_fox_utils_FontUtils = function() { };
$hxClasses["no.logic.kha.fox.utils.FontUtils"] = no_logic_kha_fox_utils_FontUtils;
no_logic_kha_fox_utils_FontUtils.__name__ = "no.logic.kha.fox.utils.FontUtils";
no_logic_kha_fox_utils_FontUtils.fontFromBase64 = function(base64Font) {
	if(base64Font == null) {
		return null;
	}
	return new kha_Kravur(new kha_internal_BytesBlob(haxe_crypto_Base64.decode(base64Font)));
};
var no_logic_kha_fox_assets_EmbeddedAssets = function() { };
$hxClasses["no.logic.kha.fox.assets.EmbeddedAssets"] = no_logic_kha_fox_assets_EmbeddedAssets;
no_logic_kha_fox_assets_EmbeddedAssets.__name__ = "no.logic.kha.fox.assets.EmbeddedAssets";
var no_logic_kha_fox_debug_Console = function() {
	this.inputText = new no_logic_kha_fox_input_StringKeyboardInput("");
	this.outputBuffer = [];
	this.commandBuffer = [];
	this.autoOpen = false;
	this.numlinestodraw = 10;
	this.obPoint = 0;
	this.transitionSpeed = 0;
	this.visible = true;
	this.height = 0;
	no_logic_kha_fox_input_KhaInput.addKeyCombo($bind(this,this.toggle),17,16,13);
	this.visible = false;
	this.inputText.onEnter = $bind(this,this.onInputEnter);
	this.registerCommand("hide",$bind(this,this.hide));
	this.registerCommand("exit",($_=no_logic_kha_fox_application_App.system,$bind($_,$_.exit)));
	this.registerCommand("restart",($_=no_logic_kha_fox_application_App.system,$bind($_,$_.restart)));
	this.registerCommand("mouse",($_=no_logic_kha_fox_application_App.system,$bind($_,$_.showMouse)));
	this.registerCommand("fullscreen",($_=no_logic_kha_fox_application_App.system,$bind($_,$_.setFullscreen)));
};
$hxClasses["no.logic.kha.fox.debug.Console"] = no_logic_kha_fox_debug_Console;
no_logic_kha_fox_debug_Console.__name__ = "no.logic.kha.fox.debug.Console";
no_logic_kha_fox_debug_Console.prototype = {
	height: null
	,visible: null
	,transitionSpeed: null
	,obPoint: null
	,numlinestodraw: null
	,autoOpen: null
	,commandBuffer: null
	,outputBuffer: null
	,inputText: null
	,debug: function(value,openConsole) {
		if(openConsole == null) {
			openConsole = false;
		}
		this.print(value,openConsole);
	}
	,warning: function(value,openConsole) {
		if(openConsole == null) {
			openConsole = false;
		}
		this.print(value,openConsole);
	}
	,error: function(value,openConsole) {
		if(openConsole == null) {
			openConsole = false;
		}
		this.print(value,openConsole);
	}
	,log: function(value,category,openConsole) {
		if(openConsole == null) {
			openConsole = false;
		}
		this.print(value,openConsole);
	}
	,print: function(value,openConsole) {
		if(openConsole == null) {
			openConsole = false;
		}
		if(this.autoOpen || openConsole) {
			this.show();
		}
		this.outputBuffer.push({ time : no_logic_fox_utils_TimeUtils.getFormatedTimeStamp(), text : Std.string(value), type : 0});
	}
	,toggle: function() {
		this.visible = !this.visible;
		if(this.visible) {
			this.show();
		} else {
			this.hide();
		}
	}
	,show: function() {
		this.transitionSpeed = 30;
	}
	,hide: function() {
		this.transitionSpeed = -30;
	}
	,onInputEnter: function(s) {
		this.checkInput(s.clear());
	}
	,checkInput: function(inp) {
		if(inp == "" || inp == null) {
			return;
		}
		if(this.commandBuffer.length != 0) {
			var inpa = inp.toLowerCase().split(" ");
			if(!(inpa == null || inpa.length == 0)) {
				var _g = 0;
				var _g1 = this.commandBuffer;
				while(_g < _g1.length) {
					var c = _g1[_g];
					++_g;
					if(c != null && inpa[0] == c.command && c.callback != null) {
						var inp1 = inp;
						inp1 = inp.split(c.command).join("");
						var params = inp1.split(" ");
						var _g2 = 0;
						var _g3 = params.length;
						while(_g2 < _g3) {
							var pi = _g2++;
							if(params[pi] == "true" || params[pi] == "false") {
								params[pi] = no_logic_fox_utils_Convert.toBool(params[pi]);
							}
						}
						var _g4 = 0;
						while(_g4 < params.length) {
							var pi1 = params[_g4];
							++_g4;
							if(pi1 == "") {
								HxOverrides.remove(params,pi1);
							}
						}
						c.callback.apply(this,params);
					}
				}
			}
		}
	}
	,registerCommand: function(command,callback) {
		if(command == null || callback == null) {
			return false;
		}
		var _g = 0;
		var _g1 = this.commandBuffer;
		while(_g < _g1.length) if(_g1[_g++].command == command) {
			return true;
		}
		this.commandBuffer.push({ command : command, callback : callback});
		return true;
	}
	,update: function() {
		if(this.transitionSpeed != 0) {
			this.height += this.transitionSpeed;
			if(this.height >= 250) {
				this.height = 250;
				this.transitionSpeed = 0;
			} else if(this.height <= 0) {
				this.height = 0;
				this.transitionSpeed = 0;
			}
		}
		if(this.height == 0) {
			return;
		}
		this.obPoint = 0;
		if(this.outputBuffer.length > this.numlinestodraw) {
			this.obPoint = this.outputBuffer.length - this.numlinestodraw;
		}
	}
	,render: function(g) {
		if(this.height == 0) {
			return;
		}
		var cWidth = no_logic_kha_fox_application_App.settings.windowWidth;
		var startY = Math.round(no_logic_kha_fox_application_App.settings.windowHeight - this.height);
		g.scissor(0,startY,cWidth,Math.round(this.height));
		g.set_color(-15591406);
		g.set_opacity(0.9);
		g.fillRect(0,no_logic_kha_fox_application_App.settings.windowHeight - this.height,cWidth,no_logic_kha_fox_application_App.settings.windowHeight);
		var lx = 20;
		var ly = startY + 12;
		g.set_color(-16711936);
		g.set_opacity(0.80);
		g.drawLine(0,startY,cWidth,startY);
		g.set_opacity(0.40);
		g.drawLine(0,startY + 3,cWidth,startY + 3);
		g.set_color(-1);
		g.set_opacity(0.15);
		var _g = 1;
		var _g1 = this.numlinestodraw;
		while(_g < _g1) {
			var py = ly + _g++ * 20;
			g.drawLine(lx,py,cWidth - lx,py);
		}
		g.set_color(-3355444);
		g.set_opacity(1);
		g.set_font(no_logic_kha_fox_assets_EmbeddedAssets.fonts.cft);
		g.set_fontSize(12);
		ly += 5;
		var py = 0;
		var _g = 0;
		var _g1 = this.numlinestodraw - 1;
		while(_g < _g1) {
			var t = _g++;
			py = ly + t * 20;
			if(this.obPoint > -1 && this.obPoint < this.outputBuffer.length) {
				py = ly + t * 20;
				g.set_color(-2004318072);
				g.drawString(no_logic_fox_utils_StringUtils.enforceFourDigitNumberToString(this.obPoint + 1),lx,py);
				g.set_color(-1431655766);
				g.drawString(this.outputBuffer[this.obPoint].time,lx + 40,py);
				g.set_color(-288568116);
				g.drawString(this.outputBuffer[this.obPoint].text,lx + 107,py);
				this.obPoint++;
			}
		}
		py += 31;
		g.set_color(kha_Color._new(1426063360));
		g.fillRect(lx,py,cWidth - lx * 2,26);
		g.set_color(-16711936);
		this.inputText.drawString(g,lx + 8,py + 7,true);
		g.set_opacity(0.25);
		g.drawLine(lx,py,cWidth - lx,py);
		g.set_opacity(0.25);
		g.drawLine(lx,py + 26,cWidth - lx,py + 26);
		g.disableScissor();
	}
	,__class__: no_logic_kha_fox_debug_Console
};
var no_logic_kha_fox_debug_Debug = function() { };
$hxClasses["no.logic.kha.fox.debug.Debug"] = no_logic_kha_fox_debug_Debug;
no_logic_kha_fox_debug_Debug.__name__ = "no.logic.kha.fox.debug.Debug";
no_logic_kha_fox_debug_Debug.init = function() {
	no_logic_kha_fox_debug_Debug.console = new no_logic_kha_fox_debug_Console();
	no_logic_kha_fox_input_KhaInput.addOnKeyDown(function(e) {
		if(e.code == 68 && no_logic_kha_fox_input_KhaInput.isCtrlDown) {
			if(no_logic_kha_fox_input_KhaInput.isShiftDown) {
				no_logic_kha_fox_application_App.settings.debug.enabled = !no_logic_kha_fox_application_App.settings.debug.enabled;
			} else if(no_logic_kha_fox_application_App.settings.debug.enabled) {
				no_logic_kha_fox_application_App.settings.debug.showBounds = !no_logic_kha_fox_application_App.settings.debug.showBounds;
			}
		} else if(e.code == 82 && no_logic_kha_fox_input_KhaInput.isCtrlDown) {
			no_logic_kha_fox_application_App.i.stage.canRender = !no_logic_kha_fox_application_App.i.stage.canRender;
		} else if(e.code == 80 && no_logic_kha_fox_input_KhaInput.isCtrlDown) {
			if(no_logic_kha_fox_input_KhaInput.isShiftDown && no_logic_kha_fox_application_App.settings.render.postprocessing.gradingFilter != null) {
				no_logic_kha_fox_application_App.settings.render.postprocessing.gradingFilter.showDebugUI = !no_logic_kha_fox_application_App.settings.render.postprocessing.gradingFilter.showDebugUI;
			} else {
				no_logic_kha_fox_application_App.settings.render.postprocessing.enabled = !no_logic_kha_fox_application_App.settings.render.postprocessing.enabled;
			}
		} else if(e.code == 66 && no_logic_kha_fox_input_KhaInput.isCtrlDown && no_logic_kha_fox_application_App.i.stage != null) {
			if(no_logic_kha_fox_application_App.settings.render.renderMode == no_logic_kha_fox_displaylist_DisplayListRenderMode.Frontbuffer) {
				no_logic_kha_fox_application_App.settings.render.renderMode = no_logic_kha_fox_displaylist_DisplayListRenderMode.Backbuffer;
			} else if(no_logic_kha_fox_application_App.settings.render.renderMode == no_logic_kha_fox_displaylist_DisplayListRenderMode.Backbuffer) {
				no_logic_kha_fox_application_App.settings.render.renderMode = no_logic_kha_fox_displaylist_DisplayListRenderMode.Frontbuffer;
			}
		}
	});
};
no_logic_kha_fox_debug_Debug.debug = function(value,openConsole) {
	if(openConsole == null) {
		openConsole = false;
	}
	no_logic_kha_fox_debug_Debug.console.debug(value,openConsole);
};
no_logic_kha_fox_debug_Debug.log = function(value,category,openConsole) {
	if(openConsole == null) {
		openConsole = false;
	}
	no_logic_kha_fox_debug_Debug.console.log(value,category,openConsole);
};
no_logic_kha_fox_debug_Debug.warn = function(value,openConsole) {
	if(openConsole == null) {
		openConsole = false;
	}
	no_logic_kha_fox_debug_Debug.console.warning(value,openConsole);
};
no_logic_kha_fox_debug_Debug.update = function() {
	if(no_logic_kha_fox_application_App.settings.debug.enabled == true) {
		no_logic_kha_fox_debug_Debug.console.update();
		no_logic_kha_fox_debug_Fps.update();
	}
};
no_logic_kha_fox_debug_Debug.render = function(f) {
	no_logic_kha_fox_debug_Debug.totalFrameTime = no_logic_kha_fox_debug_Debug.renderTime + no_logic_kha_fox_debug_Debug.updateTime;
	if(no_logic_kha_fox_application_App.settings.debug.enabled == true) {
		var g2 = f.get_g2();
		g2.begin(false);
		no_logic_kha_fox_debug_Debug.console.render(g2);
		no_logic_kha_fox_debug_Fps.render(g2);
		g2.end();
	}
	no_logic_kha_fox_debug_Debug.profileData.h = Object.create(null);
};
no_logic_kha_fox_debug_Debug.clearStatistics = function() {
	if(no_logic_kha_fox_debug_Debug.statistics == null) {
		no_logic_kha_fox_debug_Debug.statistics = { };
	}
	no_logic_kha_fox_debug_Debug.statistics.numBitmaps = 0;
	no_logic_kha_fox_debug_Debug.statistics.numButtons = 0;
	no_logic_kha_fox_debug_Debug.statistics.numShapes = 0;
	no_logic_kha_fox_debug_Debug.statistics.numDisplayObjects = 0;
	no_logic_kha_fox_debug_Debug.statistics.numSprites = 0;
	no_logic_kha_fox_debug_Debug.statistics.numTexts = 0;
	no_logic_kha_fox_debug_Debug.statistics.numVideos = 0;
	no_logic_kha_fox_debug_Debug.statistics.bitmapFilterTime = 0;
	no_logic_kha_fox_debug_Debug.statistics.numDisplayObjectsDraw = 0;
	no_logic_kha_fox_debug_Debug.statistics.numG2Draws = 0;
	no_logic_kha_fox_debug_Debug.statistics.numG4Draws = 0;
	no_logic_kha_fox_debug_Debug.statistics.numParticles = 0;
};
var no_logic_kha_fox_debug_Fps = function() { };
$hxClasses["no.logic.kha.fox.debug.Fps"] = no_logic_kha_fox_debug_Fps;
no_logic_kha_fox_debug_Fps.__name__ = "no.logic.kha.fox.debug.Fps";
no_logic_kha_fox_debug_Fps.update = function() {
	no_logic_kha_fox_debug_Fps.times.shift();
	no_logic_kha_fox_debug_Fps.times[63] = no_logic_kha_fox_application_App.system.deltaTime;
	var nFps = 1.0 / no_logic_kha_fox_application_App.system.deltaTime;
	if(isFinite(nFps)) {
		no_logic_kha_fox_debug_Fps.fps = Math.round(nFps);
	}
	no_logic_kha_fox_debug_Fps.smoothFps.set_value(no_logic_kha_fox_debug_Fps.fps);
	no_logic_kha_fox_debug_Fps.x = no_logic_kha_fox_application_App.settings.windowWidth - no_logic_kha_fox_debug_Fps.width;
};
no_logic_kha_fox_debug_Fps.render = function(g) {
	no_logic_kha_fox_debug_Fps.smoothFrame.set_value(no_logic_kha_fox_debug_Debug.totalFrameTime);
	no_logic_kha_fox_debug_Fps.smoothMaxFps.set_value(1.0 / no_logic_kha_fox_debug_Debug.totalFrameTime);
	if(no_logic_kha_fox_debug_Debug.statistics != null) {
		no_logic_kha_fox_debug_Fps.bitmapCacheMs.set_value(no_logic_kha_fox_debug_Debug.statistics.bitmapFilterTime);
	}
	no_logic_kha_fox_utils_SimpleDraw.g = g;
	g.set_font(no_logic_kha_fox_assets_EmbeddedAssets.fonts.cft);
	g.pushTranslation(no_logic_kha_fox_debug_Fps.x,no_logic_kha_fox_debug_Fps.y);
	if(no_logic_kha_fox_application_App.settings.debug.showFPS == true || no_logic_kha_fox_application_App.settings.debug.showStatisics == true) {
		var width = no_logic_kha_fox_debug_Fps.width;
		var height = no_logic_kha_fox_debug_Fps.height;
		no_logic_kha_fox_utils_SimpleDraw.g.set_color(-14540254);
		no_logic_kha_fox_utils_SimpleDraw.g.set_opacity(0.5);
		no_logic_kha_fox_utils_SimpleDraw.g.fillRect(0,0,width,height);
	}
	if(no_logic_kha_fox_application_App.settings.debug.showFPS == true) {
		var string = no_logic_fox_utils_StringUtils.floatToString(Math.round(no_logic_kha_fox_debug_Fps.smoothFps.value),2);
		no_logic_kha_fox_utils_SimpleDraw.g.set_color(-872349952);
		no_logic_kha_fox_utils_SimpleDraw.g.set_opacity(1);
		no_logic_kha_fox_utils_SimpleDraw.g.set_fontSize(36);
		no_logic_kha_fox_utils_SimpleDraw.g.drawString(string,10,10);
		var string = "| " + no_logic_fox_utils_StringUtils.floatToString(no_logic_kha_fox_application_App.system.deltaTime * 1000,2) + "ms";
		no_logic_kha_fox_utils_SimpleDraw.g.set_color(-872349952);
		no_logic_kha_fox_utils_SimpleDraw.g.set_opacity(1);
		no_logic_kha_fox_utils_SimpleDraw.g.set_fontSize(12);
		no_logic_kha_fox_utils_SimpleDraw.g.drawString(string,56,14);
		var string = "Frame: " + no_logic_fox_utils_StringUtils.floatToString(no_logic_kha_fox_debug_Fps.smoothFrame.value,2) + "ms";
		no_logic_kha_fox_utils_SimpleDraw.g.set_color(-872349697);
		no_logic_kha_fox_utils_SimpleDraw.g.set_opacity(1);
		no_logic_kha_fox_utils_SimpleDraw.g.set_fontSize(12);
		no_logic_kha_fox_utils_SimpleDraw.g.drawString(string,10,50);
		var string = "MaxFps: " + no_logic_fox_utils_StringUtils.floatToString(no_logic_kha_fox_debug_Fps.smoothMaxFps.value,0);
		no_logic_kha_fox_utils_SimpleDraw.g.set_color(-872349697);
		no_logic_kha_fox_utils_SimpleDraw.g.set_opacity(1);
		no_logic_kha_fox_utils_SimpleDraw.g.set_fontSize(12);
		no_logic_kha_fox_utils_SimpleDraw.g.drawString(string,10,62);
		var string = "Update: " + no_logic_fox_utils_StringUtils.floatToString(no_logic_kha_fox_debug_Debug.updateTime * 1000,2) + "ms";
		no_logic_kha_fox_utils_SimpleDraw.g.set_color(-872349697);
		no_logic_kha_fox_utils_SimpleDraw.g.set_opacity(1);
		no_logic_kha_fox_utils_SimpleDraw.g.set_fontSize(12);
		no_logic_kha_fox_utils_SimpleDraw.g.drawString(string,10,74);
		var string = "Render: " + no_logic_fox_utils_StringUtils.floatToString(no_logic_kha_fox_debug_Debug.renderTime * 1000,2) + "ms";
		no_logic_kha_fox_utils_SimpleDraw.g.set_color(-872349697);
		no_logic_kha_fox_utils_SimpleDraw.g.set_opacity(1);
		no_logic_kha_fox_utils_SimpleDraw.g.set_fontSize(12);
		no_logic_kha_fox_utils_SimpleDraw.g.drawString(string,10,86);
		var vy = 130;
		var scx = 2;
		var scy = 1000;
		g.set_color(kha_Color._new(-16711936));
		g.set_opacity(1.0);
		var _g = 0;
		var _g1 = no_logic_kha_fox_debug_Fps.times.length - 1;
		while(_g < _g1) {
			var i = _g++;
			g.drawLine(scx * i,vy - no_logic_kha_fox_debug_Fps.times[i] * scy,scx * (i + 1),vy - no_logic_kha_fox_debug_Fps.times[i + 1] * scy);
		}
		g.set_color(-16711681);
		g.set_opacity(0.5);
		g.drawLine(0.0,vy,0.0 + no_logic_kha_fox_debug_Fps.width,vy);
		g.drawLine(0.0,113.33333333333333,0.0 + no_logic_kha_fox_debug_Fps.width,113.33333333333333);
	}
	if(no_logic_kha_fox_debug_Debug.statistics != null && no_logic_kha_fox_application_App.settings.debug.showStatisics == true) {
		var fy = 145;
		var fyl = 14;
		var string = no_logic_kha_fox_application_App.settings.render.renderMode == no_logic_kha_fox_displaylist_DisplayListRenderMode.Frontbuffer ? "[ FRONTBUFFER ]" : no_logic_kha_fox_application_App.settings.render.postprocessing.enabled ? "[ BACKBUFFER PP ]" : "[ BACKBUFFER ]";
		no_logic_kha_fox_utils_SimpleDraw.g.set_color(-1);
		no_logic_kha_fox_utils_SimpleDraw.g.set_opacity(1);
		no_logic_kha_fox_utils_SimpleDraw.g.set_fontSize(12);
		no_logic_kha_fox_utils_SimpleDraw.g.drawString(string,10,fy);
		fy += fyl;
		var c = kha_Color._new(-39390);
		if(no_logic_kha_fox_debug_Fps.bitmapCacheMs.value > 0.1) {
			var string = "BMcaching: " + no_logic_fox_utils_StringUtils.floatToString(no_logic_kha_fox_debug_Fps.bitmapCacheMs.value,1) + "ms";
			if(c != null) {
				no_logic_kha_fox_utils_SimpleDraw.g.set_color(c);
			}
			no_logic_kha_fox_utils_SimpleDraw.g.set_opacity(1);
			no_logic_kha_fox_utils_SimpleDraw.g.set_fontSize(12);
			no_logic_kha_fox_utils_SimpleDraw.g.drawString(string,10,fy);
			fy += fyl;
			fy += fyl;
		}
		c = no_logic_kha_fox_application_App.settings.debug.boundsColor;
		var string = "Instances: " + no_logic_kha_fox_displaylist_DisplayObject.liveInstances;
		var y = fy;
		if(y == null) {
			y = 0;
		}
		if(c != null) {
			no_logic_kha_fox_utils_SimpleDraw.g.set_color(c);
		}
		no_logic_kha_fox_utils_SimpleDraw.g.set_opacity(1);
		no_logic_kha_fox_utils_SimpleDraw.g.set_fontSize(12);
		no_logic_kha_fox_utils_SimpleDraw.g.drawString(string,10,y);
		fy += fyl;
		fy += fyl;
		var string = "Objects: " + no_logic_kha_fox_debug_Debug.statistics.numDisplayObjects;
		var y = fy;
		if(y == null) {
			y = 0;
		}
		if(c != null) {
			no_logic_kha_fox_utils_SimpleDraw.g.set_color(c);
		}
		no_logic_kha_fox_utils_SimpleDraw.g.set_opacity(1);
		no_logic_kha_fox_utils_SimpleDraw.g.set_fontSize(12);
		no_logic_kha_fox_utils_SimpleDraw.g.drawString(string,10,y);
		fy += fyl;
		fy += fyl;
		var string = "Sprites: " + no_logic_kha_fox_debug_Debug.statistics.numSprites;
		var y = fy;
		if(y == null) {
			y = 0;
		}
		if(c != null) {
			no_logic_kha_fox_utils_SimpleDraw.g.set_color(c);
		}
		no_logic_kha_fox_utils_SimpleDraw.g.set_opacity(1);
		no_logic_kha_fox_utils_SimpleDraw.g.set_fontSize(12);
		no_logic_kha_fox_utils_SimpleDraw.g.drawString(string,10,y);
		fy += fyl;
		var string = "Bitmaps: " + no_logic_kha_fox_debug_Debug.statistics.numBitmaps;
		var y = fy;
		if(y == null) {
			y = 0;
		}
		if(c != null) {
			no_logic_kha_fox_utils_SimpleDraw.g.set_color(c);
		}
		no_logic_kha_fox_utils_SimpleDraw.g.set_opacity(1);
		no_logic_kha_fox_utils_SimpleDraw.g.set_fontSize(12);
		no_logic_kha_fox_utils_SimpleDraw.g.drawString(string,10,y);
		fy += fyl;
		var string = "Texts:   " + no_logic_kha_fox_debug_Debug.statistics.numTexts;
		var y = fy;
		if(y == null) {
			y = 0;
		}
		if(c != null) {
			no_logic_kha_fox_utils_SimpleDraw.g.set_color(c);
		}
		no_logic_kha_fox_utils_SimpleDraw.g.set_opacity(1);
		no_logic_kha_fox_utils_SimpleDraw.g.set_fontSize(12);
		no_logic_kha_fox_utils_SimpleDraw.g.drawString(string,10,y);
		fy += fyl;
		var string = "Shapes:  " + no_logic_kha_fox_debug_Debug.statistics.numShapes;
		var y = fy;
		if(y == null) {
			y = 0;
		}
		if(c != null) {
			no_logic_kha_fox_utils_SimpleDraw.g.set_color(c);
		}
		no_logic_kha_fox_utils_SimpleDraw.g.set_opacity(1);
		no_logic_kha_fox_utils_SimpleDraw.g.set_fontSize(12);
		no_logic_kha_fox_utils_SimpleDraw.g.drawString(string,10,y);
		fy += fyl;
		var string = "Buttons: " + no_logic_kha_fox_debug_Debug.statistics.numButtons;
		var y = fy;
		if(y == null) {
			y = 0;
		}
		if(c != null) {
			no_logic_kha_fox_utils_SimpleDraw.g.set_color(c);
		}
		no_logic_kha_fox_utils_SimpleDraw.g.set_opacity(1);
		no_logic_kha_fox_utils_SimpleDraw.g.set_fontSize(12);
		no_logic_kha_fox_utils_SimpleDraw.g.drawString(string,10,y);
		fy += fyl;
		var string = "Videos:  " + no_logic_kha_fox_debug_Debug.statistics.numVideos;
		var y = fy;
		if(y == null) {
			y = 0;
		}
		if(c != null) {
			no_logic_kha_fox_utils_SimpleDraw.g.set_color(c);
		}
		no_logic_kha_fox_utils_SimpleDraw.g.set_opacity(1);
		no_logic_kha_fox_utils_SimpleDraw.g.set_fontSize(12);
		no_logic_kha_fox_utils_SimpleDraw.g.drawString(string,10,y);
		fy += fyl;
		var string = "Disp draws:  " + no_logic_kha_fox_debug_Debug.statistics.numDisplayObjectsDraw;
		var y = fy;
		if(y == null) {
			y = 0;
		}
		if(c != null) {
			no_logic_kha_fox_utils_SimpleDraw.g.set_color(c);
		}
		no_logic_kha_fox_utils_SimpleDraw.g.set_opacity(1);
		no_logic_kha_fox_utils_SimpleDraw.g.set_fontSize(12);
		no_logic_kha_fox_utils_SimpleDraw.g.drawString(string,10,y);
		fy += fyl;
		var string = "G2 draws:  " + no_logic_kha_fox_debug_Debug.statistics.numG2Draws;
		var y = fy;
		if(y == null) {
			y = 0;
		}
		if(c != null) {
			no_logic_kha_fox_utils_SimpleDraw.g.set_color(c);
		}
		no_logic_kha_fox_utils_SimpleDraw.g.set_opacity(1);
		no_logic_kha_fox_utils_SimpleDraw.g.set_fontSize(12);
		no_logic_kha_fox_utils_SimpleDraw.g.drawString(string,10,y);
		fy += fyl;
		var string = "G4 draws:  " + no_logic_kha_fox_debug_Debug.statistics.numG4Draws;
		var y = fy;
		if(y == null) {
			y = 0;
		}
		if(c != null) {
			no_logic_kha_fox_utils_SimpleDraw.g.set_color(c);
		}
		no_logic_kha_fox_utils_SimpleDraw.g.set_opacity(1);
		no_logic_kha_fox_utils_SimpleDraw.g.set_fontSize(12);
		no_logic_kha_fox_utils_SimpleDraw.g.drawString(string,10,y);
		if(no_logic_kha_fox_debug_Debug.statistics.numParticles > 0) {
			fy += fyl;
			var string = "Particles:  " + no_logic_kha_fox_debug_Debug.statistics.numParticles;
			var y = fy;
			if(y == null) {
				y = 0;
			}
			if(c != null) {
				no_logic_kha_fox_utils_SimpleDraw.g.set_color(c);
			}
			no_logic_kha_fox_utils_SimpleDraw.g.set_opacity(1);
			no_logic_kha_fox_utils_SimpleDraw.g.set_fontSize(12);
			no_logic_kha_fox_utils_SimpleDraw.g.drawString(string,10,y);
		}
	}
	g.popTransformation();
};
no_logic_kha_fox_debug_Fps.initT = function() {
	var t = [];
	var _g = 0;
	while(_g < 64) {
		++_g;
		t.push(0.016666666666666666);
	}
	return t;
};
var no_logic_kha_fox_displaylist_MediaObject = function(data) {
	this.growToScale = true;
	this.autoPlay = true;
	this.corsProxy = false;
	this.scaleMode = no_logic_kha_fox_displaylist_ScaleMode.NONE;
	no_logic_kha_fox_displaylist_Sprite.call(this,data);
	if(this.name == null) {
		this.set_name("mediaobject" + (no_logic_kha_fox_displaylist_DisplayObject.instanceCounter - 1));
	}
};
$hxClasses["no.logic.kha.fox.displaylist.MediaObject"] = no_logic_kha_fox_displaylist_MediaObject;
no_logic_kha_fox_displaylist_MediaObject.__name__ = "no.logic.kha.fox.displaylist.MediaObject";
no_logic_kha_fox_displaylist_MediaObject.__super__ = no_logic_kha_fox_displaylist_Sprite;
no_logic_kha_fox_displaylist_MediaObject.prototype = $extend(no_logic_kha_fox_displaylist_Sprite.prototype,{
	scaleMode: null
	,corsProxy: null
	,autoPlay: null
	,growToScale: null
	,source: null
	,sourceLoaded: null
	,mediaWidth: null
	,mediaHeight: null
	,fitRect: null
	,update: function() {
		if(this.isDisposed) {
			return;
		}
		no_logic_kha_fox_displaylist_Sprite.prototype.update.call(this);
		this.fitMediaElement();
	}
	,fitMediaElement: function() {
		if(this.width != null && this.height != null) {
			if(this.scaleMode == no_logic_kha_fox_displaylist_ScaleMode.NONE || this.scaleMode == no_logic_kha_fox_displaylist_ScaleMode.STRETCH) {
				this.fitRect = null;
				this.set_clipping(false);
			} else if(this.scaleMode == no_logic_kha_fox_displaylist_ScaleMode.FILL || this.scaleMode == no_logic_kha_fox_displaylist_ScaleMode.FIT && this.mediaWidth != null && this.mediaHeight != null) {
				this.fitRect = no_logic_kha_fox_displaylist_layout_Layout.fitIntoRect(this.mediaWidth,this.mediaHeight,this.width,this.height,this.scaleMode == no_logic_kha_fox_displaylist_ScaleMode.FILL,this.growToScale);
				this.set_clipping(true);
			}
		}
	}
	,dispose: function() {
		if(!this.isDisposed) {
			this.scaleMode = null;
			this.source = null;
			this.sourceLoaded = null;
			this.mediaWidth = null;
			this.mediaHeight = null;
			this.fitRect = null;
			no_logic_kha_fox_displaylist_Sprite.prototype.dispose.call(this);
		}
	}
	,__class__: no_logic_kha_fox_displaylist_MediaObject
});
var no_logic_kha_fox_displaylist_Bitmap = function(data) {
	if(data != null) {
		this.flags = [0];
		if(((data) instanceof kha_Image)) {
			this.setImage(data);
			var dv = { };
			dv.objecttype = no_logic_kha_fox_displaylist_DisplayObjectType.bitmap;
			no_logic_kha_fox_displaylist_MediaObject.call(this,dv);
		} else if(typeof(data) == "string") {
			var dv = { };
			dv.objecttype = no_logic_kha_fox_displaylist_DisplayObjectType.bitmap;
			dv.source = Std.string(data);
			no_logic_kha_fox_displaylist_MediaObject.call(this,dv);
		} else {
			data.objecttype = no_logic_kha_fox_displaylist_DisplayObjectType.bitmap;
			no_logic_kha_fox_displaylist_MediaObject.call(this,data);
		}
	} else {
		data = { };
		data.objecttype = no_logic_kha_fox_displaylist_DisplayObjectType.bitmap;
		no_logic_kha_fox_displaylist_MediaObject.call(this,data);
	}
	this.objecttype = no_logic_kha_fox_displaylist_DisplayObjectType.bitmap;
	if(this.name == null) {
		this.set_name("bitmap" + (no_logic_kha_fox_displaylist_DisplayObject.instanceCounter - 1));
	}
	if(this.source != null && this.source != "") {
		if(typeof(this.source) == "string") {
			this.load(this.source);
		} else if(((this.source) instanceof kha_Image)) {
			this.setImage(this.source);
			this.source = null;
		}
	}
};
$hxClasses["no.logic.kha.fox.displaylist.Bitmap"] = no_logic_kha_fox_displaylist_Bitmap;
no_logic_kha_fox_displaylist_Bitmap.__name__ = "no.logic.kha.fox.displaylist.Bitmap";
no_logic_kha_fox_displaylist_Bitmap.from = function(anything) {
	if(anything == null) {
		return new no_logic_kha_fox_displaylist_Bitmap();
	}
	if(typeof(anything) == "string") {
		return new no_logic_kha_fox_displaylist_Bitmap({ source : Std.string(anything)});
	} else if(((anything) instanceof kha_Image)) {
		return new no_logic_kha_fox_displaylist_Bitmap({ source : anything});
	} else {
		return new no_logic_kha_fox_displaylist_Bitmap(anything);
	}
};
no_logic_kha_fox_displaylist_Bitmap.__super__ = no_logic_kha_fox_displaylist_MediaObject;
no_logic_kha_fox_displaylist_Bitmap.prototype = $extend(no_logic_kha_fox_displaylist_MediaObject.prototype,{
	image: null
	,loader: null
	,onBindAsset: function(value) {
		if(typeof(value) == "string") {
			this.load(no_logic_fox_kontentum_Kontentum.fileURL + (value == null ? "null" : Std.string(value)));
		}
	}
	,onBindVar: function(value) {
		if(typeof(value) == "string") {
			this.load(value);
		}
	}
	,load: function(file) {
		if(file == null && typeof(this.source) == "string") {
			file = this.source;
		}
		if(file != null && this.loader == null) {
			this.loader = new no_logic_fox_loader_Loader();
			this.loader.corsProxy = this.corsProxy;
			this.loader.onComplete = $bind(this,this.onImageLoaded);
			this.loader.onError = $bind(this,this.onImageLoadError);
		}
		if(this.loader != null) {
			this.loader.loadImage(file);
		}
	}
	,onImageLoaded: function(uxl) {
		this.source = uxl.source;
		this.sourceLoaded = uxl.source;
		this.image = uxl.contentIMAGE;
		if(this.width == 0 || !no_logic_fox_utils_Bits.isSet(this.flags,2)) {
			this.width = this.image.get_width();
		}
		if(this.height == 0 || !no_logic_fox_utils_Bits.isSet(this.flags,3)) {
			this.height = this.image.get_height();
		}
		this.setMediaSizeInternal();
		no_logic_fox_utils_Bits.set(this.flags,5);
		no_logic_fox_utils_Bits.set(this.flags,6);
		if(this.transition != null) {
			this.transition.startTransitionIn();
		}
	}
	,onImageLoadError: function(uxl) {
		no_logic_fox_Fox.warn("Load error: " + uxl.source);
	}
	,setImage: function(i) {
		this.image = i;
		if(!no_logic_fox_utils_Bits.isSet(this.flags,2)) {
			this.width = this.image.get_width();
		}
		if(!no_logic_fox_utils_Bits.isSet(this.flags,3)) {
			this.height = this.image.get_height();
		}
		this.setMediaSizeInternal();
		no_logic_fox_utils_Bits.set(this.flags,5);
		no_logic_fox_utils_Bits.set(this.flags,6);
		if(this.transition != null) {
			this.transition.startTransitionIn();
		}
		return this;
	}
	,setMediaSizeInternal: function() {
		try {
			this.mediaWidth = this.image.get_realWidth();
			this.mediaHeight = this.image.get_realHeight();
		} catch( _g ) {
			this.mediaWidth = 0;
			this.mediaHeight = 0;
		}
	}
	,update: function() {
		if(this.source != this.sourceLoaded) {
			this.load();
		}
		no_logic_kha_fox_displaylist_MediaObject.prototype.update.call(this);
	}
	,render: function(cv) {
		no_logic_kha_fox_displaylist_DisplayList.calculateScale(this);
		no_logic_kha_fox_displaylist_functional_BitmapFunc.render(cv,this);
	}
	,unload: function() {
		if(this.image != null) {
			this.image.unload();
			this.image = null;
			no_logic_fox_utils_Bits.set(this.flags,5);
			no_logic_fox_utils_Bits.set(this.flags,6);
		}
	}
	,set_libraryItemName: function(value) {
		var tmp;
		if(value != null) {
			var this1 = no_logic_kha_fox_fla_Fla.get().l.bitmaps;
			tmp = Object.prototype.hasOwnProperty.call(this1.h,value);
		} else {
			tmp = false;
		}
		if(tmp) {
			var img = no_logic_kha_fox_fla_Fla.get().getImage(value);
			if(img != null) {
				this.setImage(img);
			}
		}
		return this.libraryItemName = value;
	}
	,dispose: function() {
		if(!this.isDisposed) {
			if(this.loader != null) {
				this.loader.dispose();
				this.loader = null;
			}
			if(this.image != null) {
				this.image = null;
			}
			no_logic_kha_fox_displaylist_MediaObject.prototype.dispose.call(this);
		}
	}
	,__class__: no_logic_kha_fox_displaylist_Bitmap
});
var no_logic_kha_fox_displaylist_Button = function(data) {
	no_logic_kha_fox_displaylist_Bitmap.call(this,data);
	if(this.name == null) {
		this.set_name("button" + (no_logic_kha_fox_displaylist_DisplayObject.instanceCounter - 1));
	}
	this.set_mouseEnabled(true);
	this.buttonMode = true;
	this.objecttype = no_logic_kha_fox_displaylist_DisplayObjectType.button;
};
$hxClasses["no.logic.kha.fox.displaylist.Button"] = no_logic_kha_fox_displaylist_Button;
no_logic_kha_fox_displaylist_Button.__name__ = "no.logic.kha.fox.displaylist.Button";
no_logic_kha_fox_displaylist_Button.from = function(anything) {
	if(anything == null) {
		return new no_logic_kha_fox_displaylist_Button();
	}
	if(typeof(anything) == "string") {
		return new no_logic_kha_fox_displaylist_Button({ source : Std.string(anything)});
	} else if(((anything) instanceof no_logic_kha_fox_displaylist_Button)) {
		return new no_logic_kha_fox_displaylist_Button({ source : anything});
	} else {
		return new no_logic_kha_fox_displaylist_Button(anything);
	}
};
no_logic_kha_fox_displaylist_Button.__super__ = no_logic_kha_fox_displaylist_Bitmap;
no_logic_kha_fox_displaylist_Button.prototype = $extend(no_logic_kha_fox_displaylist_Bitmap.prototype,{
	update: function() {
		this.findHitBoxSize();
		no_logic_kha_fox_displaylist_Bitmap.prototype.update.call(this);
	}
	,setTimelineDataFromFLA: function(flaTimeline) {
		no_logic_kha_fox_displaylist_Bitmap.prototype.setTimelineDataFromFLA.call(this,flaTimeline);
		this.stop();
	}
	,_mouseUpdateOver: function() {
		no_logic_kha_fox_displaylist_Bitmap.prototype._mouseUpdateOver.call(this);
	}
	,_mouseMoveOver: function() {
		no_logic_kha_fox_displaylist_Bitmap.prototype._mouseMoveOver.call(this);
	}
	,_mouseOver: function() {
		no_logic_kha_fox_displaylist_Bitmap.prototype._mouseOver.call(this);
		this.goButtonFrame(2);
	}
	,_mouseOut: function() {
		no_logic_kha_fox_displaylist_Bitmap.prototype._mouseOut.call(this);
		this.goButtonFrame(1);
	}
	,_click: function() {
		no_logic_kha_fox_displaylist_Bitmap.prototype._click.call(this);
	}
	,_mouseDown: function() {
		no_logic_kha_fox_displaylist_Bitmap.prototype._mouseDown.call(this);
		this.goButtonFrame(3);
	}
	,_mouseUp: function() {
		no_logic_kha_fox_displaylist_Bitmap.prototype._mouseUp.call(this);
		this.goButtonFrame(2);
	}
	,goButtonFrame: function(bf) {
		if(this.get_numFrames() >= bf) {
			this.gotoAndStop(bf);
		} else if(this.buttonAlphaMode) {
			if(bf == 1) {
				this.interactAlpha = 1.0;
			} else if(bf == 2) {
				this.interactAlpha = 0.88;
			} else if(bf == 3) {
				this.interactAlpha = 0.75;
			}
		}
	}
	,findHitBoxSize: function() {
		if(this.timeline != null && this.timeline.numFrames > 1) {
			if(this.timeline.layers != null && this.timeline.layers.length > 0 && this.timeline.layers[0].length > 3) {
				var mf = this.timeline.layers[0][4];
				if(mf.keyFrame != null) {
					var _g = 0;
					var _g1 = mf.keyFrame.elements;
					while(_g < _g1.length) {
						var el = _g1[_g];
						++_g;
						if(el.width > this.width) {
							this.hitBoxWidth = el.width;
						}
						if(el.height > this.height) {
							this.hitBoxHeight = el.height;
						}
						no_logic_fox_utils_Bits.set(this.flags,5);
					}
				}
			}
		}
		if(this.hitBoxWidth != null && this.hitBoxHeight != null) {
			this.set_width(this.hitBoxWidth);
			this.set_height(this.hitBoxHeight);
		}
	}
	,dispose: function() {
		if(!this.isDisposed) {
			no_logic_kha_fox_displaylist_Bitmap.prototype.dispose.call(this);
		}
	}
	,__class__: no_logic_kha_fox_displaylist_Button
});
var no_logic_kha_fox_displaylist_DisplayList = function(stage) {
	this.scaleFactor = 1;
	this.buffers = { outputBuffer : null, postProcessBuffer : null, backBuffer : null};
	this.stage = stage;
	this.g2 = new no_logic_kha_fox_displaylist_render_G2Sim(this);
	no_logic_kha_fox_debug_Debug.console.registerCommand("debuginfo",function(dbf) {
		return stage.settings.debug.showBounds = dbf;
	});
};
$hxClasses["no.logic.kha.fox.displaylist.DisplayList"] = no_logic_kha_fox_displaylist_DisplayList;
no_logic_kha_fox_displaylist_DisplayList.__name__ = "no.logic.kha.fox.displaylist.DisplayList";
no_logic_kha_fox_displaylist_DisplayList.update = function(children) {
	no_logic_kha_fox_debug_Debug.clearStatistics();
	no_logic_kha_fox_displaylist_DisplayList.preUpdateChildren(children);
};
no_logic_kha_fox_displaylist_DisplayList.preUpdateChildren = function(children) {
	var _g = 0;
	while(_g < children.length) {
		var c = children[_g];
		++_g;
		if(!c.isDisposed) {
			no_logic_kha_fox_displaylist_DisplayList.trackStatistics(c);
			no_logic_kha_fox_displaylist_DisplayList.calculateScale(c);
			if(c.children != null && c.children.length > 0) {
				no_logic_kha_fox_displaylist_DisplayList.preUpdateChildren(c.children);
			}
		}
	}
};
no_logic_kha_fox_displaylist_DisplayList.calculateScale = function(d) {
	var globalScaleX = 1.0;
	var globalScaleY = 1.0;
	var findGlobalScale = null;
	findGlobalScale = function(p) {
		while(true) {
			if(p == null) {
				return;
			}
			globalScaleX *= p.scaleX;
			globalScaleY *= p.scaleY;
			if(p.parent != null) {
				p = p.parent;
				continue;
			}
			return;
		}
	};
	findGlobalScale(d);
	d.globalScaleX = globalScaleX;
	d.globalScaleY = globalScaleY;
};
no_logic_kha_fox_displaylist_DisplayList.calculateLayout = function(d) {
	var globalPos_y;
	var globalPos_x = 0;
	globalPos_y = 0;
	var findGlobalPos = null;
	findGlobalPos = function(p) {
		while(true) {
			if(p == null) {
				return;
			}
			if(p.parent == null) {
				globalPos_x += p.x;
				globalPos_y += p.y;
			} else {
				globalPos_x += p.x * p.parent.globalScaleX;
				globalPos_y += p.y * p.parent.globalScaleY;
				p.centerOffsetX = -p.centerX * p.width;
				p.centerOffsetY = -p.centerY * p.height;
				p = p.parent;
				continue;
			}
			return;
		}
	};
	findGlobalPos(d);
	d.globalX = globalPos_x * d.stage.displayList.scaleFactor;
	d.globalY = globalPos_y * d.stage.displayList.scaleFactor;
};
no_logic_kha_fox_displaylist_DisplayList.findChildrenAtPos = function(globalX,globalY,root,mouseEnabledOnly) {
	if(mouseEnabledOnly == null) {
		mouseEnabledOnly = false;
	}
	var foundChildren = [];
	var fChildAtPos = null;
	fChildAtPos = function(p) {
		if(p == null) {
			return;
		}
		if(!((p) instanceof no_logic_kha_fox_displaylist_Stage)) {
			if(mouseEnabledOnly) {
				if(((p) instanceof no_logic_kha_fox_displaylist_InteractiveObject) && (js_Boot.__cast(p , no_logic_kha_fox_displaylist_InteractiveObject)).mouseEnabled) {
					if(p.hitBounds.contains(globalX,globalY)) {
						foundChildren.push(p);
					}
				}
			} else if(p.hitBounds.contains(globalX,globalY)) {
				foundChildren.push(p);
			}
		}
		if(p.children != null) {
			var _g = 0;
			var _g1 = p.children;
			while(_g < _g1.length) fChildAtPos(_g1[_g++]);
		}
	};
	fChildAtPos(root);
	return foundChildren;
};
no_logic_kha_fox_displaylist_DisplayList.getChildAtPos = function(globalX,globalY,root,mouseEnabledOnly) {
	if(mouseEnabledOnly == null) {
		mouseEnabledOnly = false;
	}
	return no_logic_kha_fox_displaylist_DisplayList.findChildrenAtPos(globalX,globalY,root,mouseEnabledOnly).pop();
};
no_logic_kha_fox_displaylist_DisplayList.getDropTargetAtPos = function(globalX,globalY,root) {
	var _g = 0;
	var _g1 = no_logic_kha_fox_displaylist_DisplayList.findChildrenAtPos(globalX,globalY,root,false);
	while(_g < _g1.length) {
		var c = _g1[_g];
		++_g;
		if(c.isDropTarget) {
			return c;
		}
	}
	return null;
};
no_logic_kha_fox_displaylist_DisplayList.trackStatistics = function(d) {
	no_logic_kha_fox_debug_Debug.statistics.numDisplayObjects++;
	switch(d.objecttype._hx_index) {
	case 1:
		no_logic_kha_fox_debug_Debug.statistics.numSprites++;
		break;
	case 3:
		no_logic_kha_fox_debug_Debug.statistics.numShapes++;
		break;
	case 4:
		no_logic_kha_fox_debug_Debug.statistics.numTexts++;
		break;
	case 5:
		no_logic_kha_fox_debug_Debug.statistics.numBitmaps++;
		break;
	case 6:
		no_logic_kha_fox_debug_Debug.statistics.numVideos++;
		break;
	default:
	}
};
no_logic_kha_fox_displaylist_DisplayList.prototype = {
	stage: null
	,g2: null
	,buffers: null
	,scaleFactor: null
	,renderElements: function(cv) {
		no_logic_kha_fox_displaylist_render_DisplayListPipeline.renderDisplayList(this,cv);
	}
	,__class__: no_logic_kha_fox_displaylist_DisplayList
};
var no_logic_kha_fox_displaylist_DisplayObjectType = $hxEnums["no.logic.kha.fox.displaylist.DisplayObjectType"] = { __ename__ : true, __constructs__ : ["object","sprite","button","shape","text","bitmap","video","stage","emitter"]
	,object: {_hx_index:0,__enum__:"no.logic.kha.fox.displaylist.DisplayObjectType",toString:$estr}
	,sprite: {_hx_index:1,__enum__:"no.logic.kha.fox.displaylist.DisplayObjectType",toString:$estr}
	,button: {_hx_index:2,__enum__:"no.logic.kha.fox.displaylist.DisplayObjectType",toString:$estr}
	,shape: {_hx_index:3,__enum__:"no.logic.kha.fox.displaylist.DisplayObjectType",toString:$estr}
	,text: {_hx_index:4,__enum__:"no.logic.kha.fox.displaylist.DisplayObjectType",toString:$estr}
	,bitmap: {_hx_index:5,__enum__:"no.logic.kha.fox.displaylist.DisplayObjectType",toString:$estr}
	,video: {_hx_index:6,__enum__:"no.logic.kha.fox.displaylist.DisplayObjectType",toString:$estr}
	,stage: {_hx_index:7,__enum__:"no.logic.kha.fox.displaylist.DisplayObjectType",toString:$estr}
	,emitter: {_hx_index:8,__enum__:"no.logic.kha.fox.displaylist.DisplayObjectType",toString:$estr}
};
var no_logic_kha_fox_displaylist_ScaleMode = $hxEnums["no.logic.kha.fox.displaylist.ScaleMode"] = { __ename__ : true, __constructs__ : ["NONE","STRETCH","FILL","FIT"]
	,NONE: {_hx_index:0,__enum__:"no.logic.kha.fox.displaylist.ScaleMode",toString:$estr}
	,STRETCH: {_hx_index:1,__enum__:"no.logic.kha.fox.displaylist.ScaleMode",toString:$estr}
	,FILL: {_hx_index:2,__enum__:"no.logic.kha.fox.displaylist.ScaleMode",toString:$estr}
	,FIT: {_hx_index:3,__enum__:"no.logic.kha.fox.displaylist.ScaleMode",toString:$estr}
};
var no_logic_kha_fox_displaylist_Stage = function(data) {
	this.offsetScaleY = 1;
	this.offsetScaleX = 1;
	this.offsetY = 0;
	this.offsetX = 0;
	this.canRender = true;
	if(data == null) {
		data = { };
	}
	data.objecttype = no_logic_kha_fox_displaylist_DisplayObjectType.stage;
	no_logic_kha_fox_displaylist_InteractiveObject.call(this,data);
	this.stage = this;
	this.settings = no_logic_kha_fox_application_App.settings;
	this.objecttype = no_logic_kha_fox_displaylist_DisplayObjectType.stage;
	this.set_name("stage");
	this.displayList = new no_logic_kha_fox_displaylist_DisplayList(this);
	this.guiRoot = new no_logic_kha_fox_fla_GuiRoot(this);
};
$hxClasses["no.logic.kha.fox.displaylist.Stage"] = no_logic_kha_fox_displaylist_Stage;
no_logic_kha_fox_displaylist_Stage.__name__ = "no.logic.kha.fox.displaylist.Stage";
no_logic_kha_fox_displaylist_Stage.__super__ = no_logic_kha_fox_displaylist_InteractiveObject;
no_logic_kha_fox_displaylist_Stage.prototype = $extend(no_logic_kha_fox_displaylist_InteractiveObject.prototype,{
	bgColor: null
	,canRender: null
	,displayList: null
	,guiRoot: null
	,inWindowBounds: null
	,offsetX: null
	,offsetY: null
	,offsetScaleX: null
	,offsetScaleY: null
	,settings: null
	,addChild: function(displayObject,name) {
		if(displayObject == null) {
			return null;
		}
		displayObject.set_parent(this);
		displayObject.stage = this;
		return no_logic_kha_fox_displaylist_InteractiveObject.prototype.addChild.call(this,displayObject,name);
	}
	,addChildAt: function(displayObject,index,name) {
		if(index == null) {
			index = 0;
		}
		if(displayObject == null) {
			return null;
		}
		displayObject.set_parent(this);
		displayObject.stage = this;
		return no_logic_kha_fox_displaylist_InteractiveObject.prototype.addChildAt.call(this,displayObject,index,name);
	}
	,update: function() {
		no_logic_kha_fox_displaylist_InteractiveObject.prototype.update.call(this);
		if(!this.isDisposed) {
			var matrix = this.getStageScaleTransform();
			var sourceRect = this.bounds;
			this.inWindowBounds = sourceRect != null ? new no_logic_fox_types_Rectangle(sourceRect.x + matrix._20,sourceRect.y + matrix._21,sourceRect.width * matrix._00,sourceRect.height * matrix._11) : new no_logic_fox_types_Rectangle(matrix._20,matrix._21,matrix._00,matrix._11);
			no_logic_kha_fox_displaylist_DisplayList.update(this.children);
			this.traveseChildren(this.children);
		}
	}
	,traveseChildren: function(children) {
		var _g = 0;
		while(_g < children.length) {
			var c = children[_g];
			++_g;
			if(c != null) {
				if(!c.isDisposed) {
					no_logic_kha_fox_displaylist_DisplayList.calculateLayout(c);
					c.update();
				}
				if(c.children != null && c.children.length > 0) {
					this.traveseChildren(c.children);
				}
			}
		}
	}
	,render: function(cv) {
		if(this.canRender) {
			this.displayList.renderElements(cv);
		} else {
			var dList = this.displayList;
			var tmp = dList.stage.bgColor != null ? dList.stage.bgColor : dList.stage.settings.bgColor;
			cv.get_g2().clear(tmp);
		}
	}
	,getStageScaleTransform: function() {
		if(this.settings.render.renderMode == no_logic_kha_fox_displaylist_DisplayListRenderMode.Frontbuffer && this.settings.scaleToFit) {
			return kha_Scaler.getScaledTransformation(this.width | 0,this.height | 0,this.settings.windowWidth | 0,this.settings.windowHeight | 0,kha_System.get_screenRotation());
		} else {
			return new kha_math_FastMatrix3(1,0,0,0,1,0,0,0,1);
		}
	}
	,getChildAtPos: function(globX,globY,mouseEnabledOnly) {
		if(mouseEnabledOnly == null) {
			mouseEnabledOnly = false;
		}
		return no_logic_kha_fox_displaylist_DisplayList.getChildAtPos(globX,globY,this,mouseEnabledOnly);
	}
	,getDropTargetAtPos: function(globX,globY) {
		return no_logic_kha_fox_displaylist_DisplayList.getDropTargetAtPos(globX,globY,this);
	}
	,trackG2: function(cv,d) {
		return this.displayList.g2.trackG2(cv,d);
	}
	,dispose: function() {
		no_logic_kha_fox_displaylist_InteractiveObject.prototype.dispose.call(this);
	}
	,__class__: no_logic_kha_fox_displaylist_Stage
});
var no_logic_kha_fox_displaylist_Text = function(data) {
	this.textAlign = no_logic_kha_fox_displaylist_layout_Align.none;
	this.maxFloatDecimals = -1;
	this.letterSpacing = 0;
	this.lineHeight = 0;
	this.isMultiline = false;
	this.uppercase = false;
	if(data != null) {
		data.objecttype = no_logic_kha_fox_displaylist_DisplayObjectType.text;
	}
	no_logic_kha_fox_displaylist_Sprite.call(this,data);
	this.objecttype = no_logic_kha_fox_displaylist_DisplayObjectType.text;
	if(this.name == null) {
		this.set_name("text" + (no_logic_kha_fox_displaylist_DisplayObject.instanceCounter - 1));
	}
	if(this.effector != null) {
		this.effector.init(this);
	}
};
$hxClasses["no.logic.kha.fox.displaylist.Text"] = no_logic_kha_fox_displaylist_Text;
no_logic_kha_fox_displaylist_Text.__name__ = "no.logic.kha.fox.displaylist.Text";
no_logic_kha_fox_displaylist_Text.from = function(anything) {
	if(anything == null) {
		return new no_logic_kha_fox_displaylist_Text();
	}
	if(typeof(anything) == "string") {
		return new no_logic_kha_fox_displaylist_Text({ text : Std.string(anything)});
	} else {
		return new no_logic_kha_fox_displaylist_Text(anything);
	}
};
no_logic_kha_fox_displaylist_Text.__super__ = no_logic_kha_fox_displaylist_Sprite;
no_logic_kha_fox_displaylist_Text.prototype = $extend(no_logic_kha_fox_displaylist_Sprite.prototype,{
	text: null
	,outputText: null
	,prevText: null
	,face: null
	,font: null
	,fontSize: null
	,uppercase: null
	,isMultiline: null
	,lineHeight: null
	,letterSpacing: null
	,isFloat: null
	,maxFloatDecimals: null
	,textAlign: null
	,maxLength: null
	,effector: null
	,style: null
	,mlWrapTextWords: null
	,mlWrapTextCodes: null
	,mlWrapTextLines: null
	,onBindAsset: function(value) {
		if(this.text != null && this.text.indexOf("{#") != -1) {
			this.set_text(Std.string(value));
		} else {
			this.set_text(Std.string(value));
		}
	}
	,onBindVar: function(value) {
		if(this.text != null && this.text.indexOf("{@") != -1) {
			this.set_text(Std.string(value));
		} else {
			this.set_text(Std.string(value));
		}
	}
	,update: function() {
		no_logic_kha_fox_displaylist_Sprite.prototype.update.call(this);
		no_logic_kha_fox_displaylist_functional_TextFunc.updateText(this);
	}
	,render: function(c) {
		no_logic_kha_fox_displaylist_functional_TextFunc.render(c,this);
	}
	,set_text: function(value) {
		if(value != this.text) {
			no_logic_kha_fox_displaylist_functional_TextFunc.processText(value,this);
			no_logic_fox_utils_Bits.set(this.flags,4);
			no_logic_fox_utils_Bits.set(this.flags,5);
			no_logic_fox_utils_Bits.set(this.flags,6);
		}
		return this.text;
	}
	,set_fontSize: function(value) {
		no_logic_fox_utils_Bits.set(this.flags,4);
		no_logic_fox_utils_Bits.set(this.flags,5);
		no_logic_fox_utils_Bits.set(this.flags,6);
		return this.fontSize = value;
	}
	,set_font: function(value) {
		no_logic_fox_utils_Bits.set(this.flags,4);
		no_logic_fox_utils_Bits.set(this.flags,5);
		no_logic_fox_utils_Bits.set(this.flags,6);
		return this.font = value;
	}
	,set_uppercase: function(value) {
		no_logic_fox_utils_Bits.set(this.flags,4);
		no_logic_fox_utils_Bits.set(this.flags,5);
		no_logic_fox_utils_Bits.set(this.flags,6);
		return this.uppercase = value;
	}
	,set_face: function(value) {
		if(value != null) {
			if(kha_Assets.fonts.names.indexOf(value) != -1) {
				this.set_font(kha_Assets.fonts.get(value));
			} else if(kha_Assets.fonts.names.indexOf(value.split("_").join("")) != -1) {
				this.set_font(kha_Assets.fonts.get(value.split("_").join("")));
			}
		}
		no_logic_fox_utils_Bits.set(this.flags,5);
		no_logic_fox_utils_Bits.set(this.flags,6);
		return this.face = value;
	}
	,set_width: function(value) {
		no_logic_fox_utils_Bits.set(this.flags,4);
		no_logic_fox_utils_Bits.set(this.flags,5);
		return no_logic_kha_fox_displaylist_Sprite.prototype.set_width.call(this,value);
	}
	,set_height: function(value) {
		no_logic_fox_utils_Bits.set(this.flags,4);
		no_logic_fox_utils_Bits.set(this.flags,5);
		return no_logic_kha_fox_displaylist_Sprite.prototype.set_height.call(this,value);
	}
	,applyStyle: function(style) {
		no_logic_fox_utils_ObjUtils.copyProperties(style,this);
		no_logic_fox_utils_Bits.set(this.flags,4);
		no_logic_fox_utils_Bits.set(this.flags,5);
		no_logic_fox_utils_Bits.set(this.flags,6);
	}
	,set_style: function(value) {
		this.applyStyle(value);
		return this.style = value;
	}
	,dispose: function() {
		if(!this.isDisposed) {
			if(this.effector != null) {
				this.effector.dispose();
				this.effector = null;
			}
			this.set_text(null);
			this.prevText = null;
			this.set_style(null);
			this.outputText = null;
			this.set_font(null);
			this.set_face(null);
			no_logic_kha_fox_displaylist_Sprite.prototype.dispose.call(this);
		}
	}
	,__class__: no_logic_kha_fox_displaylist_Text
	,__properties__: $extend(no_logic_kha_fox_displaylist_Sprite.prototype.__properties__,{set_style:"set_style",set_uppercase:"set_uppercase",set_fontSize:"set_fontSize",set_font:"set_font",set_face:"set_face",set_text:"set_text"})
});
var no_logic_kha_fox_displaylist_Video = function(data) {
	this.jsAutoPlayMute = true;
	this.isPlaying = false;
	this.isPaused = false;
	this.loop = false;
	this.progress = 0;
	this.volume = 1;
	if(data != null) {
		data.objecttype = no_logic_kha_fox_displaylist_DisplayObjectType.video;
	}
	no_logic_kha_fox_displaylist_MediaObject.call(this,data);
	this.objecttype = no_logic_kha_fox_displaylist_DisplayObjectType.video;
	if(this.name == null) {
		this.set_name("videosprite" + (no_logic_kha_fox_displaylist_DisplayObject.instanceCounter - 1));
	}
	if(this.source != null && this.source != "" && this.autoPlay) {
		this.jsAutoPlayMute = true;
		this.playVideo(this.source);
	}
};
$hxClasses["no.logic.kha.fox.displaylist.Video"] = no_logic_kha_fox_displaylist_Video;
no_logic_kha_fox_displaylist_Video.__name__ = "no.logic.kha.fox.displaylist.Video";
no_logic_kha_fox_displaylist_Video.__super__ = no_logic_kha_fox_displaylist_MediaObject;
no_logic_kha_fox_displaylist_Video.prototype = $extend(no_logic_kha_fox_displaylist_MediaObject.prototype,{
	video: null
	,volume: null
	,progress: null
	,loop: null
	,isPaused: null
	,isPlaying: null
	,jsAutoPlayMute: null
	,waitingToPlay: null
	,wasSeeked: null
	,onBindAsset: function(value) {
		if(typeof(value) == "string") {
			this.playVideo(no_logic_fox_kontentum_Kontentum.fileURL + (value == null ? "null" : Std.string(value)));
		}
	}
	,onBindVar: function(value) {
		if(typeof(value) == "string") {
			this.playVideo(value);
		}
	}
	,playVideo: function(newSource) {
		if(!(newSource == this.source && newSource == null)) {
			this.stopVideo(true);
			if(newSource != null) {
				this.source = newSource;
			}
			this.waitingToPlay = true;
			this.source.split("/").join("\\");
			kha_Assets.loadVideoFromPath(this.source,$bind(this,this.onVideoLoaded),$bind(this,this.onVideoLoadError),{ fileName : "no/logic/kha/fox/displaylist/Video.hx", lineNumber : 115, className : "no.logic.kha.fox.displaylist.Video", methodName : "playVideo"});
		}
		this.set_volume(this.volume);
	}
	,onVideoLoaded: function(v) {
		this.video = v;
		this.sourceLoaded = this.source;
		if(!no_logic_fox_utils_Bits.isSet(this.flags,2)) {
			this.width = this.video.width();
		}
		if(!no_logic_fox_utils_Bits.isSet(this.flags,3)) {
			this.height = this.video.height();
		}
		this.mediaWidth = this.video.width();
		this.mediaHeight = this.video.height();
		haxe_Log.trace("video playing : " + this.mediaWidth + " x " + this.mediaHeight,{ fileName : "no/logic/kha/fox/displaylist/Video.hx", lineNumber : 136, className : "no.logic.kha.fox.displaylist.Video", methodName : "onVideoLoaded"});
		if(this.waitingToPlay) {
			this.startPlayback();
		}
		if(this.transition != null) {
			this.transition.startTransitionIn();
		}
	}
	,onVideoLoadError: function(error) {
		no_logic_fox_Fox.warn("Error loading video : " + Std.string(error));
		haxe_Log.trace("Error loading video : " + Std.string(error),{ fileName : "no/logic/kha/fox/displaylist/Video.hx", lineNumber : 159, className : "no.logic.kha.fox.displaylist.Video", methodName : "onVideoLoadError"});
	}
	,stopVideo: function(unload) {
		if(this.video != null) {
			this.isPlaying = false;
			this.video.stop();
			if(unload != null && unload) {
				this.video.unload();
			}
		}
	}
	,resumeVideo: function() {
		if(this.video != null) {
			this.video.play(this.loop);
			this.isPaused = false;
			this.isPlaying = true;
			this.wasSeeked = false;
		}
	}
	,pauseVideo: function() {
		if(this.video != null) {
			this.video.pause();
			this.isPaused = true;
			this.isPlaying = false;
		}
	}
	,togglePause: function() {
		if(this.video != null) {
			if(this.isPaused) {
				this.resumeVideo();
			} else {
				this.pauseVideo();
			}
		}
	}
	,restart: function() {
		if(this.video != null) {
			this.video.set_position(0);
			if(this.video.isFinished()) {
				this.startPlayback();
			} else if(this.isPaused) {
				this.resumeVideo();
			}
		}
	}
	,startPlayback: function() {
		if(this.video != null) {
			this.waitingToPlay = false;
			this.video.play(this.loop);
			this.isPaused = false;
			this.isPlaying = true;
		}
	}
	,update: function() {
		if(this.get_isPlaying()) {
			no_logic_fox_utils_Bits.set(this.flags,6);
		}
		no_logic_kha_fox_displaylist_MediaObject.prototype.update.call(this);
		if(this.wasSeeked) {
			this.resumeVideo();
		}
	}
	,render: function(cv) {
		no_logic_kha_fox_displaylist_functional_VideoFunc.render(cv,this);
		no_logic_fox_utils_Bits.set(this.flags,5);
	}
	,get_progress: function() {
		if(this.video != null) {
			return this.video.getCurrentPos() / this.video.getLength();
		} else {
			return 0;
		}
	}
	,set_progress: function(value) {
		if(this.video != null) {
			var pd = this.video.getLength() * value | 0;
			this.video.set_position(pd);
			return this.progress = value;
		} else {
			return 0;
		}
	}
	,set_volume: function(value) {
		if(this.video != null) {
			this.video.setVolume(value);
		}
		return this.volume = value;
	}
	,get_isPlaying: function() {
		return this.isPlaying = true;
	}
	,dispose: function() {
		no_logic_kha_fox_displaylist_MediaObject.prototype.dispose.call(this);
	}
	,__class__: no_logic_kha_fox_displaylist_Video
	,__properties__: $extend(no_logic_kha_fox_displaylist_MediaObject.prototype.__properties__,{get_isPlaying:"get_isPlaying",set_progress:"set_progress",get_progress:"get_progress",set_volume:"set_volume"})
});
var no_logic_kha_fox_displaylist_effects_G2Shader = function(fragmentShader,vertexShader,type) {
	if(type == null) {
		type = "normal";
	}
	this.uniforms = { };
	if(type == "video") {
		this.createVideoPipeline(fragmentShader,vertexShader);
	} else {
		this.createPipeline(fragmentShader,vertexShader);
	}
};
$hxClasses["no.logic.kha.fox.displaylist.effects.G2Shader"] = no_logic_kha_fox_displaylist_effects_G2Shader;
no_logic_kha_fox_displaylist_effects_G2Shader.__name__ = "no.logic.kha.fox.displaylist.effects.G2Shader";
no_logic_kha_fox_displaylist_effects_G2Shader.prototype = {
	pipeline: null
	,uniforms: null
	,createPipeline: function(fragmentShader,vertexShader) {
		this.pipeline = new kha_graphics4_PipelineState();
		var structure = new kha_graphics4_VertexStructure();
		structure.add("vertexPosition",2);
		structure.add("texPosition",1);
		structure.add("vertexColor",3);
		this.pipeline.inputLayout = [structure];
		this.pipeline.vertexShader = vertexShader == null ? kha_Shaders.painter_image_vert : vertexShader;
		this.pipeline.fragmentShader = fragmentShader == null ? kha_Shaders.painter_image_frag : fragmentShader;
		this.pipeline.blendSource = 1;
		this.pipeline.blendDestination = 5;
		this.pipeline.alphaBlendSource = 1;
		this.pipeline.alphaBlendDestination = 5;
		this.pipeline.compile();
	}
	,createVideoPipeline: function(fragmentShader,vertexShader) {
		var structure = new kha_graphics4_VertexStructure();
		structure.add("vertexPosition",2);
		structure.add("texPosition",1);
		structure.add("vertexColor",3);
		this.pipeline = new kha_graphics4_PipelineState();
		this.pipeline.inputLayout = [structure];
		this.pipeline.blendSource = 1;
		this.pipeline.blendDestination = 5;
		this.pipeline.alphaBlendSource = 1;
		this.pipeline.alphaBlendDestination = 5;
		this.pipeline.vertexShader = vertexShader == null ? kha_Shaders.painter_video_vert : vertexShader;
		this.pipeline.fragmentShader = fragmentShader == null ? kha_Shaders.painter_video_frag : fragmentShader;
		this.pipeline.compile();
	}
	,dispose: function() {
	}
	,__class__: no_logic_kha_fox_displaylist_effects_G2Shader
};
var no_logic_kha_fox_displaylist_effects_effectors_text_TextEffector = function(data) {
	this.running = false;
	this.printIndex = 0;
	this.delay = 0.0;
	if(data != null) {
		no_logic_fox_utils_ObjUtils.copyProperties(data,this);
	}
};
$hxClasses["no.logic.kha.fox.displaylist.effects.effectors.text.TextEffector"] = no_logic_kha_fox_displaylist_effects_effectors_text_TextEffector;
no_logic_kha_fox_displaylist_effects_effectors_text_TextEffector.__name__ = "no.logic.kha.fox.displaylist.effects.effectors.text.TextEffector";
no_logic_kha_fox_displaylist_effects_effectors_text_TextEffector.prototype = {
	target: null
	,delay: null
	,textCopy: null
	,printIndex: null
	,running: null
	,delayTimer: null
	,init: function(text) {
		var _gthis = this;
		if(text == null) {
			return;
		}
		this.target = text;
		this.assetUpdated(this.target.outputText);
		if(this.delay > 0.0) {
			this.delayTimer = haxe_Timer.delay(function() {
				_gthis.running = true;
			},this.delay * 1000 | 0);
		} else {
			this.running = true;
		}
	}
	,assetUpdated: function(newText) {
		if(newText != null) {
			this.textCopy = newText;
		} else {
			this.textCopy = "";
		}
		this.printIndex = 0;
	}
	,processText: function() {
		if(!this.running || this.textCopy == null) {
			return "";
		}
		if(this.printIndex < this.textCopy.length) {
			this.printIndex++;
			return HxOverrides.substr(this.textCopy,0,this.printIndex) + " _";
		} else {
			return this.textCopy;
		}
	}
	,dispose: function() {
		if(this.delayTimer != null) {
			this.delayTimer.stop();
			this.delayTimer = null;
		}
		this.running = false;
		this.target = null;
		this.textCopy = null;
	}
	,__class__: no_logic_kha_fox_displaylist_effects_effectors_text_TextEffector
};
var no_logic_kha_fox_displaylist_effects_filters_Filter = function() {
	this.modified = false;
	this.height = 0;
	this.width = 0;
	this.padding = 50;
	if(no_logic_kha_fox_displaylist_effects_filters_Filter.pipeline == null) {
		no_logic_kha_fox_displaylist_effects_filters_Filter.pipeline = no_logic_kha_fox_displaylist_effects_filters_Filter.createPipeline(kha_Shaders.test2_frag,null);
	}
	this.setBuffers();
};
$hxClasses["no.logic.kha.fox.displaylist.effects.filters.Filter"] = no_logic_kha_fox_displaylist_effects_filters_Filter;
no_logic_kha_fox_displaylist_effects_filters_Filter.__name__ = "no.logic.kha.fox.displaylist.effects.filters.Filter";
no_logic_kha_fox_displaylist_effects_filters_Filter.createPipeline = function(fragmentShader,vertexShader) {
	var pipeline = new kha_graphics4_PipelineState();
	var structure = new kha_graphics4_VertexStructure();
	structure.add("vertexPosition",2);
	structure.add("texPosition",1);
	structure.add("vertexColor",3);
	pipeline.inputLayout = [structure];
	pipeline.vertexShader = vertexShader == null ? kha_Shaders.painter_image_vert : vertexShader;
	pipeline.fragmentShader = fragmentShader == null ? kha_Shaders.painter_image_frag : fragmentShader;
	pipeline.blendSource = 1;
	pipeline.blendDestination = 5;
	pipeline.alphaBlendSource = 1;
	pipeline.alphaBlendDestination = 5;
	pipeline.compile();
	no_logic_kha_fox_displaylist_effects_filters_Filter.cl_iTime = pipeline.getConstantLocation("iTime");
	no_logic_kha_fox_displaylist_effects_filters_Filter.cl_iResolution = pipeline.getConstantLocation("iResolution");
	return pipeline;
};
no_logic_kha_fox_displaylist_effects_filters_Filter.prototype = {
	bufferBase: null
	,bufferOutput: null
	,padding: null
	,width: null
	,height: null
	,modified: null
	,initBuffers: function(d,filter,base) {
		if(base == null) {
			base = false;
		}
		if(filter == null) {
			filter = true;
		}
		if(d.width != this.width || d.height != this.height) {
			this.setBuffers(d.width,d.height,filter,base);
		}
	}
	,drawFilter: function(d,sourceBuffer) {
		this.modified = false;
	}
	,drawBase: function(d,sourceBuffer) {
		var g2 = this.bufferBase.get_g2();
		this.bufferBase.get_g4();
		g2.begin(true,kha_Color._new(0));
		g2.set_color(-1);
		g2.set_opacity(1.0);
		g2.drawImage(sourceBuffer,this.padding,this.padding);
		g2.end();
		no_logic_kha_fox_debug_Debug.statistics.numG2Draws++;
	}
	,dispose: function() {
		if(this.bufferBase != null) {
			this.bufferBase.unload();
			this.bufferBase = null;
		}
		if(this.bufferOutput != null) {
			this.bufferOutput.unload();
			this.bufferOutput = null;
		}
	}
	,setBuffers: function(newWidth,newHeight,filter,base) {
		if(base == null) {
			base = false;
		}
		if(filter == null) {
			filter = true;
		}
		if(newHeight == null) {
			newHeight = 64;
		}
		if(newWidth == null) {
			newWidth = 64;
		}
		this.width = (newWidth | 0) + this.padding * 2;
		this.height = (newHeight | 0) + this.padding * 2;
		if(base) {
			if(this.bufferBase != null) {
				this.bufferBase.unload();
			}
			this.bufferBase = no_logic_kha_fox_application_App.system.createRTBuffer(this.width,this.height);
		}
		if(filter) {
			if(this.bufferOutput != null) {
				this.bufferOutput.unload();
			}
			this.bufferOutput = no_logic_kha_fox_application_App.system.createRTBuffer(this.width,this.height);
		}
		this.modified = true;
	}
	,__class__: no_logic_kha_fox_displaylist_effects_filters_Filter
};
var no_logic_kha_fox_displaylist_effects_postprocessing_PostFxFilter = function(fragmentShader) {
	this.pipeline = no_logic_kha_fox_gl_PipelineTools.createPipeline(fragmentShader);
};
$hxClasses["no.logic.kha.fox.displaylist.effects.postprocessing.PostFxFilter"] = no_logic_kha_fox_displaylist_effects_postprocessing_PostFxFilter;
no_logic_kha_fox_displaylist_effects_postprocessing_PostFxFilter.__name__ = "no.logic.kha.fox.displaylist.effects.postprocessing.PostFxFilter";
no_logic_kha_fox_displaylist_effects_postprocessing_PostFxFilter.prototype = {
	buffer: null
	,pipeline: null
	,g2: null
	,g4: null
	,render: function(inputBuffer) {
		this.buffer = no_logic_kha_fox_gl_PipelineTools.matchBuffer(this.buffer,inputBuffer);
		this.g2 = this.buffer.get_g2();
		this.g4 = this.buffer.get_g4();
		var p = this.pipeline;
		this.g2.begin(true,kha_Color._new(0));
		this.g2.set_color(-1);
		this.g2.set_opacity(1.0);
		this.g4.setPipeline(p);
		this.g2.set_pipeline(p);
		this.g4.setFloat(this.pipeline.getConstantLocation("iTime"),no_logic_kha_fox_application_App.system.time);
		this.g4.setFloat2(this.pipeline.getConstantLocation("iResolution"),inputBuffer.get_width(),inputBuffer.get_height());
		this.setShaderValues(inputBuffer);
		this.g2.drawImage(inputBuffer,0,0);
		this.g2.end();
		if(this.buffer != null) {
			return this.buffer;
		} else {
			return inputBuffer;
		}
	}
	,setShaderValues: function(inputBuffer) {
	}
	,__class__: no_logic_kha_fox_displaylist_effects_postprocessing_PostFxFilter
};
var no_logic_kha_fox_displaylist_functional_BitmapFunc = function() { };
$hxClasses["no.logic.kha.fox.displaylist.functional.BitmapFunc"] = no_logic_kha_fox_displaylist_functional_BitmapFunc;
no_logic_kha_fox_displaylist_functional_BitmapFunc.__name__ = "no.logic.kha.fox.displaylist.functional.BitmapFunc";
no_logic_kha_fox_displaylist_functional_BitmapFunc.render = function(cv,bitmap) {
	if(bitmap == null || bitmap.image == null) {
		return;
	}
	var g = bitmap.stage.trackG2(cv,bitmap);
	var fw = 0;
	var fh = 0;
	if(bitmap.fitRect == null) {
		fw = bitmap.width;
		fh = bitmap.height;
	} else {
		fw = bitmap.fitRect.width;
		fh = bitmap.fitRect.height;
		g.translate(bitmap.fitRect.x * bitmap.globalScaleX,bitmap.fitRect.y * bitmap.globalScaleY);
	}
	g.drawScaledImage(bitmap.image,0,0,fw,fh);
};
var no_logic_kha_fox_displaylist_functional_InteractiveFunc = function() { };
$hxClasses["no.logic.kha.fox.displaylist.functional.InteractiveFunc"] = no_logic_kha_fox_displaylist_functional_InteractiveFunc;
no_logic_kha_fox_displaylist_functional_InteractiveFunc.__name__ = "no.logic.kha.fox.displaylist.functional.InteractiveFunc";
no_logic_kha_fox_displaylist_functional_InteractiveFunc.checkMouse = function(io) {
	if(no_logic_kha_fox_input_KhaInput.mouseBlocked) {
		return;
	}
	io.isMouseInBounds = io.hitBounds.contains(io.stage.unscaledMouseX,io.stage.unscaledMouseY);
	if(io.isMouseInBounds) {
		var d = io.stage.getChildAtPos(io.stage.unscaledMouseX,io.stage.unscaledMouseY,true);
		if(d != null && d.uuid == io.uuid) {
			io.isMouseOver = true;
		} else {
			io.isMouseOver = false;
		}
	} else {
		io.isMouseOver = false;
	}
	if(io.isMouseOver != io.wasMouseOverLastFrame) {
		if(io.isMouseOver) {
			io._mouseOver();
		} else {
			io._mouseOut();
		}
	}
	if(io.isMouseOver) {
		if(io.prevUnscaledMouseX != io.unscaledMouseX || io.prevUnscaledMouseY != io.unscaledMouseX) {
			io._mouseMoveOver();
		}
		io._mouseUpdateOver();
		if(no_logic_kha_fox_input_KhaInput.isLMBDown != io.wasMousePressedLastFrame) {
			if(no_logic_kha_fox_input_KhaInput.isLMBDown) {
				io._mouseDown();
				io._click();
			}
		} else if(io.isPressed && !no_logic_kha_fox_input_KhaInput.isLMBDown) {
			io._mouseUp();
		}
	}
	if(io.isDragging) {
		io._whileDragging();
	}
	io.wasMouseOverLastFrame = io.isMouseOver;
	io.wasMousePressedLastFrame = no_logic_kha_fox_input_KhaInput.isLMBDown;
};
var no_logic_kha_fox_displaylist_functional_ShapeFunc = function() { };
$hxClasses["no.logic.kha.fox.displaylist.functional.ShapeFunc"] = no_logic_kha_fox_displaylist_functional_ShapeFunc;
no_logic_kha_fox_displaylist_functional_ShapeFunc.__name__ = "no.logic.kha.fox.displaylist.functional.ShapeFunc";
no_logic_kha_fox_displaylist_functional_ShapeFunc.render = function(cv,shape) {
	if(shape == null || shape.shapeData == null) {
		return;
	}
	var g = shape.stage.trackG2(cv,shape);
	var _g = 0;
	var _g1 = shape.shapeData.shapesList;
	while(_g < _g1.length) {
		var si = _g1[_g];
		++_g;
		if(si.type == "path") {
			no_logic_kha_fox_displaylist_functional_ShapeFunc.renderShapePath(si,shape,g);
		} else if(si.type == "rect") {
			no_logic_kha_fox_displaylist_functional_ShapeFunc.renderShapeRect(si,shape,g);
		} else if(si.type == "oval") {
			no_logic_kha_fox_displaylist_functional_ShapeFunc.renderShapeOval(si,shape,g);
		}
	}
};
no_logic_kha_fox_displaylist_functional_ShapeFunc.renderShapeRect = function(shapeItem,shape,g) {
	var sx = 0;
	var sy = 0;
	if(shapeItem.radiusTL == 0 && shapeItem.radiusTR == 0 && shapeItem.radiusBL == 0 && shapeItem.radiusBR == 0) {
		if(shapeItem.fill) {
			g.color = shapeItem.color;
			g.opacity = shapeItem.alpha * shape.globalAlpha;
			g.fillRect(sx,sy,shapeItem.width,shapeItem.height);
		}
		if(shapeItem.stroke) {
			g.color = shapeItem.strokeColor;
			g.opacity = shapeItem.strokeAlpha * shape.globalAlpha;
			g.drawRect(sx,sy,shapeItem.width,shapeItem.height,shapeItem.strokeWeight);
		}
	} else {
		if(shapeItem.fill) {
			g.color = shapeItem.color;
			g.opacity = shapeItem.alpha * shape.globalAlpha;
			g.roundedRectFill(sx,sy,shapeItem.width,shapeItem.height,shapeItem.radiusTL);
		}
		if(shapeItem.stroke) {
			g.color = shapeItem.strokeColor;
			g.opacity = shapeItem.strokeAlpha * shape.globalAlpha;
			g.roundedRect(sx,sy,shapeItem.width,shapeItem.height,shapeItem.radiusTL,shapeItem.strokeWeight);
		}
	}
};
no_logic_kha_fox_displaylist_functional_ShapeFunc.renderShapeOval = function(shapeItem,shape,g) {
	var sx = shapeItem.width * 0.5;
	var sy = shapeItem.height * 0.5;
	if(shapeItem.fill) {
		g.color = shapeItem.color;
		g.opacity = shapeItem.alpha * shape.globalAlpha;
		g.fillCircle(sx,sy,shapeItem.width * 0.5);
	}
	if(shapeItem.stroke) {
		g.color = shapeItem.strokeColor;
		g.opacity = shapeItem.strokeAlpha * shape.globalAlpha;
		g.drawCircle(sx,sy,shapeItem.width * 0.5,shapeItem.strokeWeight);
	}
};
no_logic_kha_fox_displaylist_functional_ShapeFunc.renderShapePath = function(shapeItem,shape,g) {
	var sx = 0;
	var sy = 0;
	if(shapeItem.fill && shapeItem.fillShapes.length > 0) {
		if(shapeItem.fillShapes.length > 0) {
			var _g = 0;
			var _g1 = shapeItem.fillShapes;
			while(_g < _g1.length) {
				var sfs = _g1[_g];
				++_g;
				if(sfs.fillPath != null && sfs.fillPath.length > 0 && sfs.fill) {
					g.color = shapeItem.fillStyles[sfs.fillStyle].color;
					g.opacity = shapeItem.fillStyles[sfs.fillStyle].alpha * shape.globalAlpha;
					g.fillPolygon(sx,sy,sfs.fillPath);
				}
				if(sfs.linePath != null && sfs.linePath.length > 0 && sfs.stroke) {
					g.color = shapeItem.strokeStyles[sfs.strokeStyle].color;
					g.opacity = shapeItem.strokeStyles[sfs.strokeStyle].alpha * shape.globalAlpha;
					g.drawLines(sx,sy,sfs.linePath,shapeItem.strokeStyles[sfs.strokeStyle].weight);
				}
			}
		}
	}
};
var no_logic_kha_fox_displaylist_functional_ShapeParser = function() { };
$hxClasses["no.logic.kha.fox.displaylist.functional.ShapeParser"] = no_logic_kha_fox_displaylist_functional_ShapeParser;
no_logic_kha_fox_displaylist_functional_ShapeParser.__name__ = "no.logic.kha.fox.displaylist.functional.ShapeParser";
no_logic_kha_fox_displaylist_functional_ShapeParser.parse = function(xa) {
	if(xa == null) {
		return null;
	}
	var shapeData;
	if(xa.nodeType == Xml.Document) {
		shapeData = "Document";
	} else {
		if(xa.nodeType != Xml.Element) {
			throw haxe_Exception.thrown("Bad node type, expected Element but found " + (xa.nodeType == null ? "null" : XmlType.toString(xa.nodeType)));
		}
		shapeData = xa.nodeName;
	}
	var shapeData1 = { type : shapeData, x : 999999999, y : 999999999, width : 0, height : 0, shapesList : []};
	var tmp;
	if(xa.nodeType == Xml.Document) {
		tmp = "Document";
	} else {
		if(xa.nodeType != Xml.Element) {
			throw haxe_Exception.thrown("Bad node type, expected Element but found " + (xa.nodeType == null ? "null" : XmlType.toString(xa.nodeType)));
		}
		tmp = xa.nodeName;
	}
	if(tmp == "DOMShape") {
		shapeData1.shapesList.push(no_logic_kha_fox_displaylist_functional_ShapeParser.parsePath(xa));
	} else {
		var tmp;
		if(xa.nodeType == Xml.Document) {
			tmp = "Document";
		} else {
			if(xa.nodeType != Xml.Element) {
				throw haxe_Exception.thrown("Bad node type, expected Element but found " + (xa.nodeType == null ? "null" : XmlType.toString(xa.nodeType)));
			}
			tmp = xa.nodeName;
		}
		if(tmp == "DOMRectangleObject") {
			shapeData1.shapesList.push(no_logic_kha_fox_displaylist_functional_ShapeParser.parseRect(xa));
		} else {
			var tmp;
			if(xa.nodeType == Xml.Document) {
				tmp = "Document";
			} else {
				if(xa.nodeType != Xml.Element) {
					throw haxe_Exception.thrown("Bad node type, expected Element but found " + (xa.nodeType == null ? "null" : XmlType.toString(xa.nodeType)));
				}
				tmp = xa.nodeName;
			}
			if(tmp == "DOMOvalObject") {
				shapeData1.shapesList.push(no_logic_kha_fox_displaylist_functional_ShapeParser.parseOval(xa));
			}
		}
	}
	if(shapeData1.shapesList.length > 0) {
		if(shapeData1.shapesList[shapeData1.shapesList.length - 1].x < shapeData1.x) {
			shapeData1.x = shapeData1.shapesList[shapeData1.shapesList.length - 1].x + shapeData1.shapesList[shapeData1.shapesList.length - 1].tx;
		}
		if(shapeData1.shapesList[shapeData1.shapesList.length - 1].x < shapeData1.y) {
			shapeData1.y = shapeData1.shapesList[shapeData1.shapesList.length - 1].y + shapeData1.shapesList[shapeData1.shapesList.length - 1].ty;
		}
		if(shapeData1.shapesList[shapeData1.shapesList.length - 1].width > shapeData1.width) {
			shapeData1.width = shapeData1.shapesList[shapeData1.shapesList.length - 1].width;
		}
		if(shapeData1.shapesList[shapeData1.shapesList.length - 1].height > shapeData1.height) {
			shapeData1.height = shapeData1.shapesList[shapeData1.shapesList.length - 1].height;
		}
	}
	return shapeData1;
};
no_logic_kha_fox_displaylist_functional_ShapeParser.parseRect = function(xa) {
	var shapeItem = { type : "rect", color : -16777216, x : 0, y : 0, tx : 0, ty : 0, a : 1, d : 1, width : 0, height : 0, alpha : 1, radiusTL : 0, radiusTR : 0, radiusBL : 0, radiusBR : 0, strokeAlpha : 1, strokeColor : -16777216, strokeWeight : 1, stScaleMode : "none", stroke : false, fill : false};
	no_logic_kha_fox_displaylist_functional_ShapeParser.setPrimitiveFillData(xa,shapeItem);
	no_logic_kha_fox_displaylist_functional_ShapeParser.setPrimitiveStrokeData(xa,shapeItem);
	no_logic_kha_fox_displaylist_functional_ShapeParser.setDimensionsData(xa,shapeItem);
	if(haxe_xml__$Access_HasAttribAccess.resolve(xa,"topLeftRadius")) {
		shapeItem.radiusTL = parseFloat(haxe_xml__$Access_AttribAccess.resolve(xa,"topLeftRadius"));
	}
	if(haxe_xml__$Access_HasAttribAccess.resolve(xa,"topRightRadius")) {
		shapeItem.radiusTR = parseFloat(haxe_xml__$Access_AttribAccess.resolve(xa,"topRightRadius"));
	}
	if(haxe_xml__$Access_HasAttribAccess.resolve(xa,"bottomLeftRadius")) {
		shapeItem.radiusBL = parseFloat(haxe_xml__$Access_AttribAccess.resolve(xa,"bottomLeftRadius"));
	}
	if(haxe_xml__$Access_HasAttribAccess.resolve(xa,"bottomRightRadius")) {
		shapeItem.radiusBR = parseFloat(haxe_xml__$Access_AttribAccess.resolve(xa,"bottomRightRadius"));
	}
	return shapeItem;
};
no_logic_kha_fox_displaylist_functional_ShapeParser.parseOval = function(xa) {
	var shapeItem = { type : "oval", color : -16777216, x : 0, y : 0, tx : 0, ty : 0, a : 1, d : 1, width : 0, height : 0, alpha : 1, strokeAlpha : 1, strokeColor : -16777216, strokeWeight : 1, stScaleMode : "none", stroke : false, fill : false};
	no_logic_kha_fox_displaylist_functional_ShapeParser.setPrimitiveFillData(xa,shapeItem);
	no_logic_kha_fox_displaylist_functional_ShapeParser.setPrimitiveStrokeData(xa,shapeItem);
	no_logic_kha_fox_displaylist_functional_ShapeParser.setDimensionsData(xa,shapeItem);
	return shapeItem;
};
no_logic_kha_fox_displaylist_functional_ShapeParser.parsePath = function(xa) {
	var shapeItem = { type : "path", color : -16777216, x : 0, y : 0, tx : 0, ty : 0, a : 1, d : 1, width : 0, height : 0, alpha : 1, stroke : false, fill : false, fillStyles : [], strokeStyles : [], fillShapes : []};
	shapeItem.fillStyles.push({ color : -16777216, alpha : 1.0});
	shapeItem.strokeStyles.push({ color : -16777216, alpha : 1.0, weight : 1.0, scaleMode : "normal"});
	no_logic_kha_fox_displaylist_functional_ShapeParser.setEdgesFillData(xa,shapeItem);
	no_logic_kha_fox_displaylist_functional_ShapeParser.setEdgesStrokeData(xa,shapeItem);
	no_logic_kha_fox_displaylist_functional_ShapeParser.setDimensionsData(xa,shapeItem);
	no_logic_kha_fox_displaylist_functional_ShapeParser.setPathData(xa,shapeItem);
	return shapeItem;
};
no_logic_kha_fox_displaylist_functional_ShapeParser.setDimensionsData = function(xa,shapeItem) {
	if(haxe_xml__$Access_HasAttribAccess.resolve(xa,"x")) {
		shapeItem.x = parseFloat(haxe_xml__$Access_AttribAccess.resolve(xa,"x"));
	}
	if(haxe_xml__$Access_HasAttribAccess.resolve(xa,"y")) {
		shapeItem.y = parseFloat(haxe_xml__$Access_AttribAccess.resolve(xa,"y"));
	}
	if(haxe_xml__$Access_HasNodeAccess.resolve(xa,"matrix") && haxe_xml__$Access_HasNodeAccess.resolve(haxe_xml__$Access_NodeAccess.resolve(xa,"matrix"),"Matrix")) {
		var xm = haxe_xml__$Access_NodeAccess.resolve(haxe_xml__$Access_NodeAccess.resolve(xa,"matrix"),"Matrix");
		if(haxe_xml__$Access_HasAttribAccess.resolve(xm,"tx")) {
			shapeItem.tx = parseFloat(haxe_xml__$Access_AttribAccess.resolve(xm,"tx"));
		}
		if(haxe_xml__$Access_HasAttribAccess.resolve(xm,"ty")) {
			shapeItem.ty = parseFloat(haxe_xml__$Access_AttribAccess.resolve(xm,"ty"));
		}
		if(haxe_xml__$Access_HasAttribAccess.resolve(xm,"a")) {
			shapeItem.a = parseFloat(haxe_xml__$Access_AttribAccess.resolve(xm,"a"));
			shapeItem.tx /= shapeItem.a;
		}
		if(haxe_xml__$Access_HasAttribAccess.resolve(xm,"d")) {
			shapeItem.d = parseFloat(haxe_xml__$Access_AttribAccess.resolve(xm,"d"));
			shapeItem.ty /= shapeItem.d;
		}
	}
	if(haxe_xml__$Access_HasAttribAccess.resolve(xa,"objectWidth")) {
		shapeItem.width = parseFloat(haxe_xml__$Access_AttribAccess.resolve(xa,"objectWidth"));
	}
	if(haxe_xml__$Access_HasAttribAccess.resolve(xa,"objectHeight")) {
		shapeItem.height = parseFloat(haxe_xml__$Access_AttribAccess.resolve(xa,"objectHeight"));
	}
};
no_logic_kha_fox_displaylist_functional_ShapeParser.setPrimitiveFillData = function(xa,shapeItem) {
	if(haxe_xml__$Access_HasNodeAccess.resolve(xa,"fill") && haxe_xml__$Access_HasNodeAccess.resolve(haxe_xml__$Access_NodeAccess.resolve(xa,"fill"),"SolidColor")) {
		if(haxe_xml__$Access_HasAttribAccess.resolve(haxe_xml__$Access_NodeAccess.resolve(haxe_xml__$Access_NodeAccess.resolve(xa,"fill"),"SolidColor"),"color")) {
			var cCol = haxe_xml__$Access_AttribAccess.resolve(haxe_xml__$Access_NodeAccess.resolve(haxe_xml__$Access_NodeAccess.resolve(xa,"fill"),"SolidColor"),"color");
			cCol = cCol.split("#").join("#FF");
			shapeItem.color = kha_Color.fromString(cCol);
		} else {
			shapeItem.color = -16777216;
		}
		if(haxe_xml__$Access_HasAttribAccess.resolve(haxe_xml__$Access_NodeAccess.resolve(haxe_xml__$Access_NodeAccess.resolve(xa,"fill"),"SolidColor"),"alpha")) {
			shapeItem.alpha = parseFloat(haxe_xml__$Access_AttribAccess.resolve(haxe_xml__$Access_NodeAccess.resolve(haxe_xml__$Access_NodeAccess.resolve(xa,"fill"),"SolidColor"),"alpha"));
		}
		shapeItem.fill = true;
	}
};
no_logic_kha_fox_displaylist_functional_ShapeParser.setPrimitiveStrokeData = function(xa,shapeItem) {
	if(haxe_xml__$Access_HasNodeAccess.resolve(xa,"stroke") && haxe_xml__$Access_HasNodeAccess.resolve(haxe_xml__$Access_NodeAccess.resolve(xa,"stroke"),"SolidStroke")) {
		if(haxe_xml__$Access_HasAttribAccess.resolve(haxe_xml__$Access_NodeAccess.resolve(haxe_xml__$Access_NodeAccess.resolve(xa,"stroke"),"SolidStroke"),"scaleMode")) {
			shapeItem.stScaleMode = haxe_xml__$Access_AttribAccess.resolve(haxe_xml__$Access_NodeAccess.resolve(haxe_xml__$Access_NodeAccess.resolve(xa,"stroke"),"SolidStroke"),"scaleMode");
		}
		if(haxe_xml__$Access_HasAttribAccess.resolve(haxe_xml__$Access_NodeAccess.resolve(haxe_xml__$Access_NodeAccess.resolve(xa,"stroke"),"SolidStroke"),"weight")) {
			shapeItem.strokeWeight = parseFloat(haxe_xml__$Access_AttribAccess.resolve(haxe_xml__$Access_NodeAccess.resolve(haxe_xml__$Access_NodeAccess.resolve(xa,"stroke"),"SolidStroke"),"weight"));
		}
		if(haxe_xml__$Access_HasNodeAccess.resolve(haxe_xml__$Access_NodeAccess.resolve(haxe_xml__$Access_NodeAccess.resolve(xa,"stroke"),"SolidStroke"),"fill") && haxe_xml__$Access_HasNodeAccess.resolve(haxe_xml__$Access_NodeAccess.resolve(haxe_xml__$Access_NodeAccess.resolve(haxe_xml__$Access_NodeAccess.resolve(xa,"stroke"),"SolidStroke"),"fill"),"SolidColor")) {
			var sc = haxe_xml__$Access_NodeAccess.resolve(haxe_xml__$Access_NodeAccess.resolve(haxe_xml__$Access_NodeAccess.resolve(haxe_xml__$Access_NodeAccess.resolve(xa,"stroke"),"SolidStroke"),"fill"),"SolidColor");
			if(haxe_xml__$Access_HasAttribAccess.resolve(sc,"color")) {
				var cCol = haxe_xml__$Access_AttribAccess.resolve(sc,"color");
				if(cCol != null) {
					cCol = cCol.split("#").join("#FF");
					shapeItem.strokeColor = kha_Color.fromString(cCol);
				}
			}
			if(haxe_xml__$Access_HasAttribAccess.resolve(sc,"alpha")) {
				shapeItem.strokeAlpha = parseFloat(haxe_xml__$Access_AttribAccess.resolve(sc,"alpha"));
			}
		}
		shapeItem.stroke = true;
	}
};
no_logic_kha_fox_displaylist_functional_ShapeParser.setPathData = function(xa,shapeItem) {
	if(haxe_xml__$Access_HasNodeAccess.resolve(xa,"edges")) {
		var ed = haxe_xml__$Access_NodeAccess.resolve(xa,"edges").elements();
		while(ed.hasNext()) {
			var ed1 = ed.next();
			if(ed1 != null) {
				if(ed1.nodeType != Xml.Document && ed1.nodeType != Xml.Element) {
					throw haxe_Exception.thrown("Invalid nodeType " + (ed1.nodeType == null ? "null" : XmlType.toString(ed1.nodeType)));
				}
				var fsed = ed1;
				if(haxe_xml__$Access_HasAttribAccess.resolve(fsed,"edges")) {
					var edges = haxe_xml__$Access_AttribAccess.resolve(fsed,"edges");
					edges = edges.split("S2").join("");
					var edgePoints = edges.split("!");
					if(edgePoints[0] == "") {
						edgePoints.shift();
					}
					var nx1 = 0.0;
					var ny1 = 0.0;
					var nx2 = 0.0;
					var ny2 = 0.0;
					var path = [];
					var _g = 0;
					var _g1 = edgePoints.length;
					while(_g < _g1) {
						var epdStr = edgePoints[_g++].split("|");
						if(epdStr.length == 2) {
							var epdStrA = epdStr[0].split(" ");
							var epdStrB = epdStr[1].split(" ");
							nx1 = parseFloat(epdStrA[0]) * 0.05;
							ny1 = parseFloat(epdStrA[1]) * 0.05;
							nx2 = parseFloat(epdStrB[0]) * 0.05;
							ny2 = parseFloat(epdStrB[1]) * 0.05;
							path.push(new kha_math_Vector4(nx1,ny1,nx2,ny2));
						}
					}
					var edges1 = haxe_xml__$Access_AttribAccess.resolve(fsed,"edges");
					edges1 = edges1.split("S2").join("");
					var edgePoints1 = edges1.split("!");
					if(edgePoints1[0] == "") {
						edgePoints1.shift();
					}
					var px2 = -999990.0;
					var py2 = -999990.0;
					var nx11 = 0.0;
					var ny11 = 0.0;
					var nx21 = 0.0;
					var ny21 = 0.0;
					var path1 = [];
					var _g2 = 0;
					var _g3 = edgePoints1.length;
					while(_g2 < _g3) {
						var epdStr1 = edgePoints1[_g2++].split("|");
						if(epdStr1.length == 2) {
							var epdStrA1 = epdStr1[0].split(" ");
							var epdStrB1 = epdStr1[1].split(" ");
							nx11 = parseFloat(epdStrA1[0]) * 0.05;
							ny11 = parseFloat(epdStrA1[1]) * 0.05;
							nx21 = parseFloat(epdStrB1[0]) * 0.05;
							ny21 = parseFloat(epdStrB1[1]) * 0.05;
							if(!(nx11 == nx21 && ny11 == ny21)) {
								if(nx11 != px2 || ny11 != py2) {
									path1.push(new kha_math_Vector2(nx11,ny11));
								}
							}
							path1.push(new kha_math_Vector2(nx21,ny21));
							px2 = nx21;
							py2 = ny21;
						}
					}
					var r = new no_logic_fox_types_Rectangle(99999999,99999999,0,0);
					var _g4 = 0;
					while(_g4 < path.length) {
						var p = path[_g4];
						++_g4;
						if(p != null) {
							if(p.x < r.x) {
								r.x = p.x;
							}
							if(p.y < r.y) {
								r.y = p.y;
							}
							if(p.x > r.width) {
								r.width = p.x;
							}
							if(p.y > r.height) {
								r.height = p.y;
							}
						}
					}
					r.width -= r.x;
					r.height -= r.y;
					r.width += r.x;
					r.height += r.y;
					if(r.width > shapeItem.width) {
						shapeItem.width = r.width;
					}
					if(r.height > shapeItem.height) {
						shapeItem.height = r.height;
					}
					var fs = null;
					var ss = null;
					if(haxe_xml__$Access_HasAttribAccess.resolve(fsed,"fillStyle1")) {
						fs = Std.parseInt(haxe_xml__$Access_AttribAccess.resolve(fsed,"fillStyle1"));
					} else if(haxe_xml__$Access_HasAttribAccess.resolve(fsed,"fillStyle0")) {
						fs = Std.parseInt(haxe_xml__$Access_AttribAccess.resolve(fsed,"fillStyle0"));
					}
					if(haxe_xml__$Access_HasAttribAccess.resolve(fsed,"strokeStyle")) {
						ss = Std.parseInt(haxe_xml__$Access_AttribAccess.resolve(fsed,"strokeStyle"));
					}
					shapeItem.fillShapes.push({ linePath : path, fillPath : path1, fillStyle : fs, strokeStyle : ss, fill : fs != null, stroke : ss != null});
				}
			}
		}
	}
};
no_logic_kha_fox_displaylist_functional_ShapeParser.setEdgesFillData = function(xa,shapeItem) {
	if(haxe_xml__$Access_HasNodeAccess.resolve(xa,"fills") && haxe_xml__$Access_HasNodeAccess.resolve(haxe_xml__$Access_NodeAccess.resolve(xa,"fills"),"FillStyle")) {
		var fs = haxe_xml__$Access_NodeAccess.resolve(xa,"fills").elements();
		while(fs.hasNext()) {
			var fs1 = fs.next();
			var ind = 1;
			if(fs1.nodeType != Xml.Document && fs1.nodeType != Xml.Element) {
				throw haxe_Exception.thrown("Invalid nodeType " + (fs1.nodeType == null ? "null" : XmlType.toString(fs1.nodeType)));
			}
			var fsxa = fs1;
			if(haxe_xml__$Access_HasAttribAccess.resolve(fsxa,"index")) {
				ind = Std.parseInt(haxe_xml__$Access_AttribAccess.resolve(fsxa,"index"));
			}
			if(haxe_xml__$Access_HasNodeAccess.resolve(fsxa,"SolidColor")) {
				shapeItem.fillStyles[ind] = { color : -16777216, alpha : 1.0};
				if(haxe_xml__$Access_HasAttribAccess.resolve(haxe_xml__$Access_NodeAccess.resolve(fsxa,"SolidColor"),"color")) {
					var cCol = haxe_xml__$Access_AttribAccess.resolve(haxe_xml__$Access_NodeAccess.resolve(fsxa,"SolidColor"),"color");
					cCol = cCol.split("#").join("#FF");
					shapeItem.fillStyles[ind].color = kha_Color.fromString(cCol);
				}
				if(haxe_xml__$Access_HasAttribAccess.resolve(haxe_xml__$Access_NodeAccess.resolve(fsxa,"SolidColor"),"alpha")) {
					var tmp = parseFloat(haxe_xml__$Access_AttribAccess.resolve(haxe_xml__$Access_NodeAccess.resolve(fsxa,"SolidColor"),"alpha"));
					shapeItem.fillStyles[ind].alpha = tmp;
				}
			}
		}
	}
	shapeItem.fill = true;
};
no_logic_kha_fox_displaylist_functional_ShapeParser.setEdgesStrokeData = function(xa,shapeItem) {
	if(haxe_xml__$Access_HasNodeAccess.resolve(xa,"strokes") && haxe_xml__$Access_HasNodeAccess.resolve(haxe_xml__$Access_NodeAccess.resolve(xa,"strokes"),"StrokeStyle")) {
		var fs = haxe_xml__$Access_NodeAccess.resolve(xa,"strokes").elements();
		while(fs.hasNext()) {
			var fs1 = fs.next();
			var ind = 1;
			if(fs1.nodeType != Xml.Document && fs1.nodeType != Xml.Element) {
				throw haxe_Exception.thrown("Invalid nodeType " + (fs1.nodeType == null ? "null" : XmlType.toString(fs1.nodeType)));
			}
			var stxa = fs1;
			if(haxe_xml__$Access_HasAttribAccess.resolve(stxa,"index")) {
				ind = Std.parseInt(haxe_xml__$Access_AttribAccess.resolve(stxa,"index"));
			}
			if(haxe_xml__$Access_HasNodeAccess.resolve(stxa,"SolidStroke")) {
				shapeItem.strokeStyles[ind] = { color : -16777216, alpha : 1.0, weight : 1.0, scaleMode : "normal"};
				if(haxe_xml__$Access_HasAttribAccess.resolve(haxe_xml__$Access_NodeAccess.resolve(stxa,"SolidStroke"),"scaleMode")) {
					var tmp = haxe_xml__$Access_NodeAccess.resolve(stxa,"SolidStroke");
					shapeItem.strokeStyles[ind].scaleMode = haxe_xml__$Access_AttribAccess.resolve(tmp,"scaleMode");
				}
				if(haxe_xml__$Access_HasAttribAccess.resolve(haxe_xml__$Access_NodeAccess.resolve(stxa,"SolidStroke"),"weight")) {
					var tmp1 = parseFloat(haxe_xml__$Access_AttribAccess.resolve(haxe_xml__$Access_NodeAccess.resolve(stxa,"SolidStroke"),"weight"));
					shapeItem.strokeStyles[ind].weight = tmp1;
				}
				if(haxe_xml__$Access_HasNodeAccess.resolve(haxe_xml__$Access_NodeAccess.resolve(stxa,"SolidStroke"),"fill") && haxe_xml__$Access_HasNodeAccess.resolve(haxe_xml__$Access_NodeAccess.resolve(haxe_xml__$Access_NodeAccess.resolve(stxa,"SolidStroke"),"fill"),"SolidColor")) {
					var sc = haxe_xml__$Access_NodeAccess.resolve(haxe_xml__$Access_NodeAccess.resolve(haxe_xml__$Access_NodeAccess.resolve(stxa,"SolidStroke"),"fill"),"SolidColor");
					if(haxe_xml__$Access_HasAttribAccess.resolve(sc,"color")) {
						var cCol = haxe_xml__$Access_AttribAccess.resolve(sc,"color");
						cCol = cCol.split("#").join("#FF");
						shapeItem.strokeStyles[ind].color = kha_Color.fromString(cCol);
					}
					if(haxe_xml__$Access_HasAttribAccess.resolve(sc,"alpha")) {
						var tmp2 = parseFloat(haxe_xml__$Access_AttribAccess.resolve(sc,"alpha"));
						shapeItem.strokeStyles[ind].alpha = tmp2;
					}
				}
			}
		}
	}
	shapeItem.stroke = true;
};
var no_logic_kha_fox_displaylist_functional_TextFunc = function() { };
$hxClasses["no.logic.kha.fox.displaylist.functional.TextFunc"] = no_logic_kha_fox_displaylist_functional_TextFunc;
no_logic_kha_fox_displaylist_functional_TextFunc.__name__ = "no.logic.kha.fox.displaylist.functional.TextFunc";
no_logic_kha_fox_displaylist_functional_TextFunc.processText = function(text,textObject) {
	if(text == null) {
		return;
	}
	var txOut = "";
	if(text.indexOf("{#") != -1) {
		var regexp = new EReg("{#([^{#}]{1,})}","");
		if(regexp.match(text)) {
			var ac = regexp.matched(0);
			if(ac != null) {
				ac = ac.split("{#").join("").split("}").join("");
				textObject.set_asset(ac);
				var by = textObject.getAsset(ac);
				txOut = text.replace(regexp.r,by);
			}
		}
	} else if(text.indexOf("{@") != -1) {
		textObject.set_variable(text.split("{@").join("").split("}").join(""));
	} else {
		txOut = text;
	}
	if(txOut == "null") {
		txOut = "";
	}
	if(textObject.maxLength == null) {
		textObject.outputText = txOut;
	} else {
		textObject.outputText = HxOverrides.substr(txOut,0,textObject.maxLength);
	}
	if(textObject.isFloat && textObject.maxFloatDecimals > -1) {
		textObject.outputText = no_logic_fox_utils_StringUtils.floatToString(parseFloat(textObject.outputText),textObject.maxFloatDecimals);
	}
	if(textObject.effector != null) {
		textObject.effector.assetUpdated(textObject.outputText);
	}
	no_logic_fox_utils_Bits.set(textObject.flags,5);
};
no_logic_kha_fox_displaylist_functional_TextFunc.updateText = function(t) {
	if(t.outputText != null && t.font != null && t.fontSize != null) {
		if(t.effector != null) {
			t.outputText = t.effector.processText();
		}
		if(t.outputText.indexOf("\n") != -1) {
			t.isMultiline = true;
		}
		if(!t.isMultiline) {
			if(!no_logic_fox_utils_Bits.isSet(t.flags,2)) {
				t.width = t.font.width(t.fontSize,t.outputText);
			}
			if(!no_logic_fox_utils_Bits.isSet(t.flags,3)) {
				t.height = t.font.height(t.fontSize);
			}
			t.lineHeight = t.height;
		} else {
			t.mlWrapTextWords = t.outputText.split("\n").join(" <br> ").split(" ");
			t.mlWrapTextCodes = [];
			var sx = "";
			var _g = 0;
			var _g1 = t.mlWrapTextWords.length;
			while(_g < _g1) {
				sx = t.mlWrapTextWords[_g++];
				if(sx != "") {
					var t1 = t.mlWrapTextCodes;
					var ulx = sx.split("~");
					var tmp;
					if(ulx.length <= 1) {
						tmp = kha_StringExtensions.toCharArray(sx);
					} else {
						var ucx = [];
						var _g2 = 0;
						while(_g2 < ulx.length) {
							var ul = ulx[_g2++];
							ucx.push(0);
							var sul = kha_StringExtensions.toCharArray(ul);
							var _g3 = 0;
							while(_g3 < sul.length) ucx.push(sul[_g3++]);
						}
						tmp = ucx;
					}
					t1.push(tmp);
				}
			}
			if(t.lineHeight == null || t.lineHeight == 0) {
				t.lineHeight = t.font.height(t.fontSize);
			}
			t.mlWrapTextLines = [];
			var spaceWidth = t.font.width(t.fontSize," ");
			var wordWidth = 0;
			var lineWidth = 0;
			var txLine = "";
			var _g = 0;
			var _g1 = t.mlWrapTextWords;
			while(_g < _g1.length) {
				var word = _g1[_g];
				++_g;
				if(word == "<br>") {
					lineWidth = 0;
					t.mlWrapTextLines.push(txLine + "<br>");
					txLine = "";
				} else {
					wordWidth = t.font.width(t.fontSize,word) + spaceWidth;
					lineWidth += wordWidth;
					if(lineWidth > t.width - spaceWidth) {
						lineWidth = wordWidth;
						t.mlWrapTextLines.push(txLine);
						txLine = "";
					}
					txLine += word + " ";
				}
			}
			if(!t.uppercase) {
				t.mlWrapTextLines.push(txLine);
			} else {
				t.mlWrapTextLines.push(txLine.toUpperCase());
			}
			t.height = t.lineHeight * t.mlWrapTextLines.length;
		}
		no_logic_fox_utils_Bits.unset(t.flags,4);
		if(t.outputText != null && t.uppercase) {
			t.outputText = t.outputText.toUpperCase();
		}
	}
};
no_logic_kha_fox_displaylist_functional_TextFunc.render = function(cv,t) {
	if(t == null || t.outputText == null) {
		return;
	}
	var g = t.stage.trackG2(cv,t);
	g.fontSize = t.fontSize != null ? t.fontSize : no_logic_kha_fox_displaylist_Text.defaultFontSize;
	g.font = t.font != null ? t.font : no_logic_kha_fox_assets_EmbeddedAssets.fonts.cft;
	var oText = t.outputText;
	g.font.width(g.fontSize," ");
	if(!t.isMultiline) {
		var txa = 0;
		var tya = 5;
		var tw = g.font.width(g.fontSize,oText);
		g.font.height(g.fontSize);
		if(t.letterSpacing != 0 && oText.length > 1) {
			tw += (oText.length - 1) * t.letterSpacing;
		}
		if(t.textAlign == no_logic_kha_fox_displaylist_layout_Align.center) {
			txa = 0.5 * t.width - tw * 0.5;
		} else if(t.textAlign == no_logic_kha_fox_displaylist_layout_Align.right) {
			txa = t.width - tw;
		}
		if(t.letterSpacing == 0) {
			g.drawString(oText,txa,tya);
		} else {
			g.drawString(oText,txa,tya);
		}
	} else if(t.mlWrapTextLines != null && t.mlWrapTextLines.length > 0) {
		if(t.textAlign == null) {
			no_logic_kha_fox_displaylist_functional_TextFunc.drawMlLeftAlign(g,t);
		} else {
			switch(t.textAlign._hx_index) {
			case 0:
				no_logic_kha_fox_displaylist_functional_TextFunc.drawMlLeftAlign(g,t);
				break;
			case 1:
				no_logic_kha_fox_displaylist_functional_TextFunc.drawMlLeftAlign(g,t);
				break;
			case 2:
				no_logic_kha_fox_displaylist_functional_TextFunc.drawMlCenterAlign(g,t);
				break;
			case 3:
				no_logic_kha_fox_displaylist_functional_TextFunc.drawMlRightAlign(g,t);
				break;
			case 4:
				no_logic_kha_fox_displaylist_functional_TextFunc.drawMlJustified(g,t);
				break;
			default:
				no_logic_kha_fox_displaylist_functional_TextFunc.drawMlLeftAlign(g,t);
			}
		}
	}
};
no_logic_kha_fox_displaylist_functional_TextFunc.drawMlLeftAlign = function(g,t) {
	var txa = 0;
	var ly = 0;
	var _g = 0;
	var _g1 = t.mlWrapTextLines;
	while(_g < _g1.length) {
		g.drawString(_g1[_g++].split("<br>").join(""),txa,ly);
		ly += t.lineHeight;
	}
};
no_logic_kha_fox_displaylist_functional_TextFunc.drawMlCenterAlign = function(g,t) {
	var txa = 0;
	var tw = 0;
	var ly = 0;
	var _g = 0;
	var _g1 = t.mlWrapTextLines;
	while(_g < _g1.length) {
		var tl = _g1[_g];
		++_g;
		tw = g.font.width(g.fontSize,tl.split("<br>").join(""));
		txa = 0.5 * t.width - tw * 0.5;
		g.drawString(tl.split("<br>").join(""),txa,ly);
		ly += t.lineHeight;
	}
};
no_logic_kha_fox_displaylist_functional_TextFunc.drawMlRightAlign = function(g,t) {
	var txa = 0;
	var tw = 0;
	var ly = 0;
	var _g = 0;
	var _g1 = t.mlWrapTextLines;
	while(_g < _g1.length) {
		var tl = _g1[_g];
		++_g;
		tw = g.font.width(g.fontSize,tl.split("<br>").join(""));
		txa = t.width - tw;
		g.drawString(tl.split("<br>").join(""),txa,ly);
		ly += t.lineHeight;
	}
};
no_logic_kha_fox_displaylist_functional_TextFunc.drawMlJustified = function(g,t) {
	var tw = 0;
	var ly = 0;
	var _g = 0;
	var _g1 = t.mlWrapTextLines;
	while(_g < _g1.length) {
		var tl = _g1[_g];
		++_g;
		tw = g.font.width(g.fontSize,tl.split(" ").join(""));
		if(t.letterSpacing != 0 && tl.length > 1) {
			tw += (tl.length - 1) * t.letterSpacing;
		}
		if(tl.indexOf("<br>") == -1) {
			var spw = tl.split(" ");
			if(tl.length >= 2) {
				var exps = (t.width - tw) / (spw.length - 2);
				var wrdx = 0;
				var _g2 = 0;
				while(_g2 < spw.length) {
					var wrd = spw[_g2];
					++_g2;
					g.drawString(wrd,wrdx,ly);
					wrdx += exps + g.font.width(g.fontSize,wrd);
				}
			} else {
				g.drawString(tl,0,ly);
			}
		} else {
			g.drawString(tl.split("<br>").join(""),0,ly);
		}
		ly += t.lineHeight;
	}
};
var no_logic_kha_fox_displaylist_functional_VideoFunc = function() { };
$hxClasses["no.logic.kha.fox.displaylist.functional.VideoFunc"] = no_logic_kha_fox_displaylist_functional_VideoFunc;
no_logic_kha_fox_displaylist_functional_VideoFunc.__name__ = "no.logic.kha.fox.displaylist.functional.VideoFunc";
no_logic_kha_fox_displaylist_functional_VideoFunc.render = function(cv,video) {
	if(video == null || video.video == null) {
		return;
	}
	var g = video.stage.trackG2(cv,video);
	var fw = 0;
	var fh = 0;
	if(video.fitRect == null) {
		fw = video.width;
		fh = video.height;
	} else {
		fw = video.fitRect.width;
		fh = video.fitRect.height;
		g.translate(video.fitRect.x * video.globalScaleX,video.fitRect.y * video.globalScaleY);
	}
	g.drawVideo(video.video,0,0,fw,fh);
};
var no_logic_kha_fox_displaylist_layout_LayoutType = $hxEnums["no.logic.kha.fox.displaylist.layout.LayoutType"] = { __ename__ : true, __constructs__ : ["NONE","ABSOLUTE","FILL_PARENT","STACK_VERTICAL","STACK_HORIZONTAL","FLOW","GRID","GRID_MATRIX"]
	,NONE: {_hx_index:0,__enum__:"no.logic.kha.fox.displaylist.layout.LayoutType",toString:$estr}
	,ABSOLUTE: {_hx_index:1,__enum__:"no.logic.kha.fox.displaylist.layout.LayoutType",toString:$estr}
	,FILL_PARENT: {_hx_index:2,__enum__:"no.logic.kha.fox.displaylist.layout.LayoutType",toString:$estr}
	,STACK_VERTICAL: {_hx_index:3,__enum__:"no.logic.kha.fox.displaylist.layout.LayoutType",toString:$estr}
	,STACK_HORIZONTAL: {_hx_index:4,__enum__:"no.logic.kha.fox.displaylist.layout.LayoutType",toString:$estr}
	,FLOW: {_hx_index:5,__enum__:"no.logic.kha.fox.displaylist.layout.LayoutType",toString:$estr}
	,GRID: {_hx_index:6,__enum__:"no.logic.kha.fox.displaylist.layout.LayoutType",toString:$estr}
	,GRID_MATRIX: {_hx_index:7,__enum__:"no.logic.kha.fox.displaylist.layout.LayoutType",toString:$estr}
};
var no_logic_kha_fox_displaylist_layout_Align = $hxEnums["no.logic.kha.fox.displaylist.layout.Align"] = { __ename__ : true, __constructs__ : ["none","left","center","right","justify","top","middle","bottom"]
	,none: {_hx_index:0,__enum__:"no.logic.kha.fox.displaylist.layout.Align",toString:$estr}
	,left: {_hx_index:1,__enum__:"no.logic.kha.fox.displaylist.layout.Align",toString:$estr}
	,center: {_hx_index:2,__enum__:"no.logic.kha.fox.displaylist.layout.Align",toString:$estr}
	,right: {_hx_index:3,__enum__:"no.logic.kha.fox.displaylist.layout.Align",toString:$estr}
	,justify: {_hx_index:4,__enum__:"no.logic.kha.fox.displaylist.layout.Align",toString:$estr}
	,top: {_hx_index:5,__enum__:"no.logic.kha.fox.displaylist.layout.Align",toString:$estr}
	,middle: {_hx_index:6,__enum__:"no.logic.kha.fox.displaylist.layout.Align",toString:$estr}
	,bottom: {_hx_index:7,__enum__:"no.logic.kha.fox.displaylist.layout.Align",toString:$estr}
};
var no_logic_kha_fox_displaylist_layout_MatrixLayout = $hxEnums["no.logic.kha.fox.displaylist.layout.MatrixLayout"] = { __ename__ : true, __constructs__ : ["Grid_1x1","Grid_2x1","Grid_3x1","Grid_1x2","Grid_1x3","Grid_2x2","Grid_2x3","Grid_3x2","Grid_3x3","Grid_4x4"]
	,Grid_1x1: {_hx_index:0,__enum__:"no.logic.kha.fox.displaylist.layout.MatrixLayout",toString:$estr}
	,Grid_2x1: {_hx_index:1,__enum__:"no.logic.kha.fox.displaylist.layout.MatrixLayout",toString:$estr}
	,Grid_3x1: {_hx_index:2,__enum__:"no.logic.kha.fox.displaylist.layout.MatrixLayout",toString:$estr}
	,Grid_1x2: {_hx_index:3,__enum__:"no.logic.kha.fox.displaylist.layout.MatrixLayout",toString:$estr}
	,Grid_1x3: {_hx_index:4,__enum__:"no.logic.kha.fox.displaylist.layout.MatrixLayout",toString:$estr}
	,Grid_2x2: {_hx_index:5,__enum__:"no.logic.kha.fox.displaylist.layout.MatrixLayout",toString:$estr}
	,Grid_2x3: {_hx_index:6,__enum__:"no.logic.kha.fox.displaylist.layout.MatrixLayout",toString:$estr}
	,Grid_3x2: {_hx_index:7,__enum__:"no.logic.kha.fox.displaylist.layout.MatrixLayout",toString:$estr}
	,Grid_3x3: {_hx_index:8,__enum__:"no.logic.kha.fox.displaylist.layout.MatrixLayout",toString:$estr}
	,Grid_4x4: {_hx_index:9,__enum__:"no.logic.kha.fox.displaylist.layout.MatrixLayout",toString:$estr}
};
var no_logic_kha_fox_displaylist_layout_Layout = function(owner) {
	this.itemScaleMode = no_logic_kha_fox_displaylist_ScaleMode.NONE;
	this.type = no_logic_kha_fox_displaylist_layout_LayoutType.NONE;
	this.owner = owner;
};
$hxClasses["no.logic.kha.fox.displaylist.layout.Layout"] = no_logic_kha_fox_displaylist_layout_Layout;
no_logic_kha_fox_displaylist_layout_Layout.__name__ = "no.logic.kha.fox.displaylist.layout.Layout";
no_logic_kha_fox_displaylist_layout_Layout.fitIntoRect = function(sourceWidth,sourceHeight,targetWidth,targetHeight,fill,growToScale) {
	if(growToScale == null) {
		growToScale = true;
	}
	if(fill == null) {
		fill = false;
	}
	var r = new no_logic_fox_types_Rectangle();
	if(growToScale || targetWidth < sourceWidth || targetHeight < sourceHeight) {
		if(fill) {
			r.height = targetHeight;
			r.width = r.height * sourceWidth / sourceHeight;
			if(r.width < targetWidth) {
				r.width = targetWidth;
				r.height = r.width * sourceHeight / sourceWidth;
			}
			r.x = targetWidth * 0.5 - r.width * 0.5;
			r.y = targetHeight * 0.5 - r.height * 0.5;
		} else {
			r.width = targetWidth;
			r.height = r.width * sourceHeight / sourceWidth;
			if(r.height > targetHeight) {
				r.height = targetHeight;
				r.width = r.height * sourceWidth / sourceHeight;
			}
			r.x = targetWidth * 0.5 - r.width * 0.5;
			r.y = targetHeight * 0.5 - r.height * 0.5;
		}
	} else {
		r.width = sourceWidth;
		r.height = sourceHeight;
		r.x = targetWidth * 0.5 - r.width * 0.5;
		r.y = targetHeight * 0.5 - r.height * 0.5;
	}
	return r;
};
no_logic_kha_fox_displaylist_layout_Layout.controlVisible = function(l,numVisible,d) {
	if(numVisible == d.children.length) {
		return;
	}
	if(l.itemData == null) {
		while(numVisible > d.children.length) l.owner.addChild(Type.createInstance(l.itemRenderer,[{ source : null}]));
		while(numVisible < d.children.length) l.owner.removeChild(d.children[d.children.length - 1]);
	}
	var _g = 0;
	var _g1 = d.children.length;
	while(_g < _g1) {
		var i = _g++;
		if(i < numVisible) {
			d.children[i].set_visible(true);
		} else {
			d.children[i].set_visible(false);
		}
	}
};
no_logic_kha_fox_displaylist_layout_Layout.prototype = {
	type: null
	,owner: null
	,matrix: null
	,itemScaleMode: null
	,itemRenderer: null
	,itemData: null
	,update: function() {
		var _g = 0;
		var _g1 = this.owner.children;
		while(_g < _g1.length) {
			var d = _g1[_g];
			++_g;
			if(((d) instanceof no_logic_kha_fox_displaylist_MediaObject)) {
				(js_Boot.__cast(d , no_logic_kha_fox_displaylist_MediaObject)).scaleMode = this.itemScaleMode;
			}
		}
		if(this.type._hx_index == 7) {
			var d = this.owner;
			switch(this.matrix._hx_index) {
			case 0:
				no_logic_kha_fox_displaylist_layout_Layout.controlVisible(this,1,d);
				if(d.children.length > 0) {
					d.children[0].setScalarPosSize(0.0,0.0,1.0,1);
				}
				break;
			case 1:
				no_logic_kha_fox_displaylist_layout_Layout.controlVisible(this,2,d);
				if(d.children.length > 0) {
					d.children[0].setScalarPosSize(0.0,0.0,0.5,1);
				}
				if(d.children.length > 1) {
					d.children[1].setScalarPosSize(0.5,0.0,0.5,1);
				}
				break;
			case 2:
				no_logic_kha_fox_displaylist_layout_Layout.controlVisible(this,3,d);
				if(d.children.length > 0) {
					d.children[0].setScalarPosSize(0.0,0.0,0.33333333333333331,1);
				}
				if(d.children.length > 1) {
					d.children[1].setScalarPosSize(0.33333333333333331,0.0,0.33333333333333331,1);
				}
				if(d.children.length > 2) {
					d.children[2].setScalarPosSize(0.66666666666666663,0.0,0.33333333333333331,1);
				}
				break;
			case 3:
				no_logic_kha_fox_displaylist_layout_Layout.controlVisible(this,2,d);
				if(d.children.length > 0) {
					d.children[0].setScalarPosSize(0.0,0.0,1.0,0.5);
				}
				if(d.children.length > 1) {
					d.children[1].setScalarPosSize(0.0,0.5,1.0,0.5);
				}
				break;
			case 4:
				no_logic_kha_fox_displaylist_layout_Layout.controlVisible(this,3,d);
				if(d.children.length > 0) {
					d.children[0].setScalarPosSize(0.0,0.0,1.0,0.33333333333333331);
				}
				if(d.children.length > 1) {
					d.children[1].setScalarPosSize(0.0,0.33333333333333331,1.0,0.33333333333333331);
				}
				if(d.children.length > 2) {
					d.children[2].setScalarPosSize(0.0,0.66666666666666663,1.0,0.33333333333333331);
				}
				break;
			case 5:
				no_logic_kha_fox_displaylist_layout_Layout.controlVisible(this,4,d);
				if(d.children.length > 0) {
					d.children[0].setScalarPosSize(0.0,0.0,0.5,0.5);
				}
				if(d.children.length > 1) {
					d.children[1].setScalarPosSize(0.5,0.0,0.5,0.5);
				}
				if(d.children.length > 2) {
					d.children[2].setScalarPosSize(0.0,0.5,0.5,0.5);
				}
				if(d.children.length > 3) {
					d.children[3].setScalarPosSize(0.5,0.5,0.5,0.5);
				}
				break;
			case 6:
				no_logic_kha_fox_displaylist_layout_Layout.controlVisible(this,6,d);
				if(d.children.length > 0) {
					d.children[0].setScalarPosSize(0.0,0.0,0.5,0.33333333333333331);
				}
				if(d.children.length > 1) {
					d.children[1].setScalarPosSize(0.5,0.0,0.5,0.33333333333333331);
				}
				if(d.children.length > 2) {
					d.children[2].setScalarPosSize(0.0,0.33333333333333331,0.5,0.33333333333333331);
				}
				if(d.children.length > 3) {
					d.children[3].setScalarPosSize(0.5,0.33333333333333331,0.5,0.33333333333333331);
				}
				if(d.children.length > 4) {
					d.children[4].setScalarPosSize(0.0,0.66666666666666663,0.5,0.33333333333333331);
				}
				if(d.children.length > 5) {
					d.children[5].setScalarPosSize(0.5,0.66666666666666663,0.5,0.33333333333333331);
				}
				break;
			case 7:
				no_logic_kha_fox_displaylist_layout_Layout.controlVisible(this,6,d);
				if(d.children.length > 0) {
					d.children[0].setScalarPosSize(0.0,0.0,0.33333333333333331,0.5);
				}
				if(d.children.length > 1) {
					d.children[1].setScalarPosSize(0.33333333333333331,0.0,0.33333333333333331,0.5);
				}
				if(d.children.length > 2) {
					d.children[2].setScalarPosSize(0.66666666666666663,0.0,0.33333333333333331,0.5);
				}
				if(d.children.length > 3) {
					d.children[3].setScalarPosSize(0.0,0.5,0.33333333333333331,0.5);
				}
				if(d.children.length > 4) {
					d.children[4].setScalarPosSize(0.33333333333333331,0.5,0.33333333333333331,0.5);
				}
				if(d.children.length > 5) {
					d.children[5].setScalarPosSize(0.66666666666666663,0.5,0.33333333333333331,0.5);
				}
				break;
			case 8:
				no_logic_kha_fox_displaylist_layout_Layout.controlVisible(this,9,d);
				if(d.children.length > 0) {
					d.children[0].setScalarPosSize(0.0,0.0,0.33333333333333331,0.33333333333333331);
				}
				if(d.children.length > 1) {
					d.children[1].setScalarPosSize(0.33333333333333331,0.0,0.33333333333333331,0.33333333333333331);
				}
				if(d.children.length > 2) {
					d.children[2].setScalarPosSize(0.66666666666666663,0.0,0.33333333333333331,0.33333333333333331);
				}
				if(d.children.length > 3) {
					d.children[3].setScalarPosSize(0.0,0.33333333333333331,0.33333333333333331,0.33333333333333331);
				}
				if(d.children.length > 4) {
					d.children[4].setScalarPosSize(0.33333333333333331,0.33333333333333331,0.33333333333333331,0.33333333333333331);
				}
				if(d.children.length > 5) {
					d.children[5].setScalarPosSize(0.66666666666666663,0.33333333333333331,0.33333333333333331,0.33333333333333331);
				}
				if(d.children.length > 6) {
					d.children[6].setScalarPosSize(0.0,0.66666666666666663,0.33333333333333331,0.33333333333333331);
				}
				if(d.children.length > 7) {
					d.children[7].setScalarPosSize(0.33333333333333331,0.66666666666666663,0.33333333333333331,0.33333333333333331);
				}
				if(d.children.length > 8) {
					d.children[8].setScalarPosSize(0.66666666666666663,0.66666666666666663,0.33333333333333331,0.33333333333333331);
				}
				break;
			case 9:
				no_logic_kha_fox_displaylist_layout_Layout.controlVisible(this,16,d);
				if(d.children.length > 0) {
					d.children[0].setScalarPosSize(0.0,0.0,0.25,0.25);
				}
				if(d.children.length > 1) {
					d.children[1].setScalarPosSize(0.25,0.0,0.25,0.25);
				}
				if(d.children.length > 2) {
					d.children[2].setScalarPosSize(0.5,0.0,0.25,0.25);
				}
				if(d.children.length > 3) {
					d.children[3].setScalarPosSize(0.75,0.0,0.25,0.25);
				}
				if(d.children.length > 4) {
					d.children[4].setScalarPosSize(0.0,0.25,0.25,0.25);
				}
				if(d.children.length > 5) {
					d.children[5].setScalarPosSize(0.25,0.25,0.25,0.25);
				}
				if(d.children.length > 6) {
					d.children[6].setScalarPosSize(0.5,0.25,0.25,0.25);
				}
				if(d.children.length > 7) {
					d.children[7].setScalarPosSize(0.75,0.25,0.25,0.25);
				}
				if(d.children.length > 8) {
					d.children[8].setScalarPosSize(0.0,0.5,0.25,0.25);
				}
				if(d.children.length > 9) {
					d.children[9].setScalarPosSize(0.25,0.5,0.25,0.25);
				}
				if(d.children.length > 10) {
					d.children[10].setScalarPosSize(0.5,0.5,0.25,0.25);
				}
				if(d.children.length > 11) {
					d.children[11].setScalarPosSize(0.75,0.5,0.25,0.25);
				}
				if(d.children.length > 12) {
					d.children[12].setScalarPosSize(0.0,0.75,0.25,0.25);
				}
				if(d.children.length > 13) {
					d.children[13].setScalarPosSize(0.25,0.75,0.25,0.25);
				}
				if(d.children.length > 14) {
					d.children[14].setScalarPosSize(0.5,0.75,0.25,0.25);
				}
				if(d.children.length > 15) {
					d.children[15].setScalarPosSize(0.75,0.75,0.25,0.25);
				}
				break;
			}
		}
	}
	,__class__: no_logic_kha_fox_displaylist_layout_Layout
};
var no_logic_kha_fox_displaylist_particles_Emitter = function(data) {
	this.splitsec = 0;
	this.particles = [];
	this.localSpace = false;
	no_logic_kha_fox_displaylist_DisplayObject.call(this,data);
	this.objecttype = no_logic_kha_fox_displaylist_DisplayObjectType.emitter;
	this.useCustomRender = true;
	if(this.numFixedParticles != null) {
		var _g = 0;
		var _g1 = this.numFixedParticles;
		while(_g < _g1) {
			++_g;
			this.spawnParticle();
		}
	}
};
$hxClasses["no.logic.kha.fox.displaylist.particles.Emitter"] = no_logic_kha_fox_displaylist_particles_Emitter;
no_logic_kha_fox_displaylist_particles_Emitter.__name__ = "no.logic.kha.fox.displaylist.particles.Emitter";
no_logic_kha_fox_displaylist_particles_Emitter.kill = function(e,p) {
	HxOverrides.remove(e.particles,p);
	if(e.numFixedParticles != null && e.particles.length < e.numFixedParticles) {
		e.spawnParticle();
	}
	if(e.particles.length == 0 && e.onEmitterEmpty != null) {
		e.onEmitterEmpty(e);
	}
};
no_logic_kha_fox_displaylist_particles_Emitter.newPData = function() {
	return { life : 0, color : -1, alpha : 1, age : 0, ageNormalized : 0, x : 0, y : 0, scale : 1, rotation : 0, velocity : new kha_math_FastVector2(0,0), initPos : new kha_math_FastVector2(0,0), gravity : 0};
};
no_logic_kha_fox_displaylist_particles_Emitter.updateParticles = function(e) {
	if(e.spawnRate != null) {
		e.splitsec = (e.splitsec += e.spawnRate / e.stage.settings.render.fps) % 1;
		e.spawnParticles(Math.round(e.spawnRate * e.splitsec));
	}
	var delta = no_logic_kha_fox_application_App.system.deltaTime;
	if(e.particles.length == 0) {
		return;
	}
	if(e.onParticleUpdate != null) {
		var _g = 0;
		var _g1 = e.particles;
		while(_g < _g1.length) {
			var p = _g1[_g];
			++_g;
			p.ageNormalized = p.age / p.life;
			p.age += delta;
			e.onParticleUpdate(p);
			if(p.age > p.life) {
				no_logic_kha_fox_displaylist_particles_Emitter.kill(e,p);
			}
		}
	}
};
no_logic_kha_fox_displaylist_particles_Emitter.renderEmitter = function(fb,e) {
	if(e.image == null) {
		return;
	}
	var g2 = fb.get_g2();
	var eAlpha = g2.get_opacity();
	if(eAlpha == 0) {
		return;
	}
	var _g = e.image.get_width();
	var x = _g;
	var y = e.image.get_height();
	if(y == null) {
		y = 0;
	}
	if(_g == null) {
		x = 0;
	}
	var imgSize_x = x;
	var imgSize_y = y;
	var sScaleW = 0;
	var sScaleH = 0;
	var sx = 0;
	var sy = 0;
	if(!e.localSpace) {
		var f = g2.popTransformation();
		var _g = 0;
		var _g1 = e.particles;
		while(_g < _g1.length) {
			var p = _g1[_g];
			++_g;
			sScaleW = imgSize_x * p.scale * e.globalScaleX;
			sScaleH = imgSize_y * p.scale * e.globalScaleY;
			sx = p.x + p.initPos.x - sScaleW * 0.5;
			sy = p.y + p.initPos.y - sScaleH * 0.5;
			g2.set_opacity(p.alpha * no_logic_fox_utils_MathUtils.clamp(no_logic_kha_fox_displaylist_particles_Emitter.easeInOutCubic(p.ageNormalized) * 4,0,1) * eAlpha);
			g2.drawScaledImage(e.image,sx,sy,sScaleW,sScaleH);
		}
		g2.transformationIndex++;
		if(g2.transformationIndex == g2.transformations.length) {
			g2.transformations.push(new kha_math_FastMatrix3(1,0,0,0,1,0,0,0,1));
		}
		var _this = g2.transformations[g2.transformationIndex];
		_this._00 = f._00;
		_this._10 = f._10;
		_this._20 = f._20;
		_this._01 = f._01;
		_this._11 = f._11;
		_this._21 = f._21;
		_this._02 = f._02;
		_this._12 = f._12;
		_this._22 = f._22;
		g2.setTransformation(g2.transformations[g2.transformationIndex]);
	} else {
		var lPosX = e.globalX;
		var lPosY = e.globalY;
		var _g = 0;
		var _g1 = e.particles;
		while(_g < _g1.length) {
			var p = _g1[_g];
			++_g;
			sScaleW = imgSize_x * p.scale;
			sScaleH = imgSize_y * p.scale;
			g2.set_opacity(p.alpha * no_logic_kha_fox_displaylist_particles_Emitter.easeInOutCubic(p.ageNormalized) * eAlpha);
			g2.drawScaledImage(e.image,p.x + lPosX - sScaleW * 0.5,p.y + lPosY - sScaleH * 0.5,sScaleW,sScaleH);
		}
	}
	g2.set_opacity(eAlpha);
};
no_logic_kha_fox_displaylist_particles_Emitter.easeInOutCubic = function(t) {
	if(t < .5) {
		return 4 * t * t * t * 2;
	} else {
		return (1 - ((t - 1) * (2 * t - 2) * (2 * t - 2) + 1)) * 2;
	}
};
no_logic_kha_fox_displaylist_particles_Emitter.__super__ = no_logic_kha_fox_displaylist_DisplayObject;
no_logic_kha_fox_displaylist_particles_Emitter.prototype = $extend(no_logic_kha_fox_displaylist_DisplayObject.prototype,{
	numFixedParticles: null
	,spawnRate: null
	,image: null
	,localSpace: null
	,particleInit: null
	,particles: null
	,onParticleInit: null
	,onParticleUpdate: null
	,onEmitterEmpty: null
	,splitsec: null
	,update: function() {
		no_logic_kha_fox_displaylist_DisplayObject.prototype.update.call(this);
		no_logic_kha_fox_displaylist_particles_Emitter.updateParticles(this);
	}
	,spawnParticles: function(amount,data) {
		if(amount == null) {
			amount = 1;
		}
		var _g = 0;
		while(_g < amount) {
			++_g;
			this.spawnParticle(data);
		}
	}
	,spawnParticle: function(data) {
		var p = no_logic_kha_fox_displaylist_particles_Emitter.newPData();
		if(this.onParticleInit != null) {
			this.onParticleInit(p);
		} else {
			return;
		}
		if(data != null) {
			no_logic_fox_utils_ObjUtils.copyProperties(data,p);
		}
		p.initPos.x = this.globalX;
		p.initPos.y = this.globalY;
		this.particles.push(p);
	}
	,dispose: function() {
		if(!this.isDisposed) {
			this.image = null;
			if(this.particles != null) {
				this.particles.length = 0;
			}
			this.particles = null;
			this.spawnRate = null;
			this.numFixedParticles = null;
			this.particleInit = null;
			this.onEmitterEmpty = null;
			this.onParticleInit = null;
			this.onParticleUpdate = null;
			no_logic_kha_fox_displaylist_DisplayObject.prototype.dispose.call(this);
		}
	}
	,customRender: function(cv) {
		no_logic_kha_fox_displaylist_particles_Emitter.renderEmitter(cv,this);
	}
	,__class__: no_logic_kha_fox_displaylist_particles_Emitter
});
var no_logic_kha_fox_displaylist_render_DisplayListPipeline = function() { };
$hxClasses["no.logic.kha.fox.displaylist.render.DisplayListPipeline"] = no_logic_kha_fox_displaylist_render_DisplayListPipeline;
no_logic_kha_fox_displaylist_render_DisplayListPipeline.__name__ = "no.logic.kha.fox.displaylist.render.DisplayListPipeline";
no_logic_kha_fox_displaylist_render_DisplayListPipeline.renderDisplayList = function(dList,cv) {
	no_logic_kha_fox_displaylist_render_DisplayListPipeline.g2Pipeline = cv.get_g2().get_pipeline();
	if(no_logic_kha_fox_displaylist_render_DisplayListPipeline.g2FilterPipeline == null) {
		no_logic_kha_fox_displaylist_render_DisplayListPipeline.g2FilterPipeline = no_logic_kha_fox_gl_PipelineTools.createPipeline(kha_Shaders.screenfilter_frag);
	}
	no_logic_kha_fox_displaylist_render_DisplayListRender.prePassRenderBitmapCaches(dList);
	no_logic_kha_fox_displaylist_render_DisplayListProcessing.processDisplayList(dList,cv);
	switch(dList.stage.settings.render.renderMode._hx_index) {
	case 0:
		no_logic_kha_fox_displaylist_render_DisplayListPipeline.renderFrontBuffer(dList,cv);
		break;
	case 1:
		no_logic_kha_fox_displaylist_render_DisplayListPipeline.renderBackBuffer(dList,cv);
		break;
	}
};
no_logic_kha_fox_displaylist_render_DisplayListPipeline.renderBackBuffer = function(dList,cv) {
	if(dList.buffers.backBuffer == null || dList.stage.width != dList.buffers.backBuffer.get_width() || dList.stage.height != dList.buffers.backBuffer.get_height()) {
		if(dList.buffers.backBuffer != null) {
			dList.buffers.backBuffer.unload();
		}
		dList.buffers.backBuffer = no_logic_kha_fox_application_App.system.createRTBuffer(dList.stage.width | 0,dList.stage.height | 0);
	}
	if(dList.buffers.postProcessBuffer == null || dList.buffers.postProcessBuffer.get_width() != dList.buffers.backBuffer.get_width() || dList.buffers.postProcessBuffer.get_height() != dList.buffers.backBuffer.get_height()) {
		if(dList.buffers.postProcessBuffer != null) {
			dList.buffers.postProcessBuffer.unload();
		}
		dList.buffers.postProcessBuffer = no_logic_kha_fox_application_App.system.createRTMatchingBuffer(dList.buffers.backBuffer);
	}
	no_logic_kha_fox_displaylist_render_DisplayListPipeline.renderToRenderTarget(dList,cv,dList.buffers.backBuffer);
	if(dList.stage.settings.render.postprocessing.enabled) {
		if(!dList.stage.settings.render.postprocessing.gradingFilter.initialized) {
			dList.stage.settings.render.postprocessing.gradingFilter.init();
		}
	}
	if(dList.stage.settings.render.postprocessing.enabled) {
		if(dList.stage.settings.render.postprocessing.gradingFilter != null) {
			var fxFilters = dList.stage.settings.render.postprocessing.preGradingPostFXFilters;
			var inputBuffer = dList.buffers.backBuffer;
			var preGradePostFxBuffer;
			if(fxFilters == null || fxFilters.length == 0) {
				preGradePostFxBuffer = inputBuffer;
			} else {
				var outBuffer = fxFilters[0].render(inputBuffer);
				preGradePostFxBuffer = outBuffer != null ? outBuffer : inputBuffer;
			}
			var outputBuffer = dList.stage.settings.render.postprocessing.gradingFilter.render(dList.buffers.postProcessBuffer,preGradePostFxBuffer);
			var fxFilters = dList.stage.settings.render.postprocessing.postGradingPostFXFilters;
			var postGradePostFxBuffer;
			if(fxFilters == null || fxFilters.length == 0) {
				postGradePostFxBuffer = outputBuffer;
			} else {
				var outBuffer = fxFilters[0].render(outputBuffer);
				postGradePostFxBuffer = outBuffer != null ? outBuffer : outputBuffer;
			}
			no_logic_kha_fox_displaylist_render_DisplayListPipeline.presentBuffer(dList,cv,postGradePostFxBuffer);
		}
	} else {
		no_logic_kha_fox_displaylist_render_DisplayListPipeline.presentBuffer(dList,cv,dList.buffers.backBuffer);
	}
	if(dList.stage.settings.render.postprocessing.gradingFilter != null) {
		dList.stage.settings.render.postprocessing.gradingFilter.renderDebugUI(cv.get_g2());
	}
};
no_logic_kha_fox_displaylist_render_DisplayListPipeline.renderToRenderTarget = function(dList,cv,renderTarget) {
	if(renderTarget == null) {
		return;
	}
	var g2 = renderTarget.get_g2();
	g2.set_pipeline(no_logic_kha_fox_displaylist_render_DisplayListPipeline.g2Pipeline);
	g2.begin(true,dList.stage.bgColor != null ? dList.stage.bgColor : dList.stage.settings.bgColor);
	g2.set_color(-65536);
	g2.set_opacity(1.0);
	dList.stage.offsetX = -dList.stage.x;
	dList.stage.offsetY = -dList.stage.y;
	dList.stage.offsetScaleX = 1 / dList.stage.scaleX;
	dList.stage.offsetScaleY = 1 / dList.stage.scaleY;
	g2.set_imageScaleQuality(1);
	no_logic_kha_fox_displaylist_render_DisplayListRender.renderDisplayList(dList,renderTarget);
	g2.end();
};
no_logic_kha_fox_displaylist_render_DisplayListPipeline.renderFrontBuffer = function(dList,cv) {
	var g2 = cv.get_g2();
	g2.begin(true,dList.stage.settings.bgColor);
	no_logic_kha_fox_displaylist_render_DisplayListRender.renderDisplayList(dList,cv);
	g2.end();
};
no_logic_kha_fox_displaylist_render_DisplayListPipeline.presentBuffer = function(dList,cv,buffer) {
	if(buffer == null) {
		return;
	}
	dList.buffers.outputBuffer = buffer;
	if(!dList.stage.settings.render.displayBackbuffer) {
		return;
	}
	cv.get_g2().set_imageScaleQuality(1);
	cv.get_g2().begin(true,kha_Color._new(0));
	cv.get_g2().set_opacity(1.0);
	cv.get_g2().set_color(-1);
	if(dList.stage.settings.scaleToFit) {
		kha_Scaler.scale(buffer,cv,kha_System.get_screenRotation());
	} else {
		cv.get_g2().drawImage(buffer,0,0);
	}
	cv.get_g2().end();
	no_logic_kha_fox_debug_Debug.statistics.numG2Draws++;
};
var no_logic_kha_fox_displaylist_render_DisplayListProcessing = function() { };
$hxClasses["no.logic.kha.fox.displaylist.render.DisplayListProcessing"] = no_logic_kha_fox_displaylist_render_DisplayListProcessing;
no_logic_kha_fox_displaylist_render_DisplayListProcessing.__name__ = "no.logic.kha.fox.displaylist.render.DisplayListProcessing";
no_logic_kha_fox_displaylist_render_DisplayListProcessing.processDisplayList = function(dList,drawBuffer) {
	if(!(dList.stage.settings.render.renderMode != no_logic_kha_fox_displaylist_DisplayListRenderMode.Frontbuffer || dList.stage.bgColor == null)) {
		var g = dList.stage.trackG2(drawBuffer,dList.stage);
		g.color = dList.stage.bgColor;
		g.opacity = 1.0;
		g.transformationIndex++;
		if(g.transformationIndex == g.transformations.length) {
			g.transformations.push(new kha_math_FastMatrix3(1,0,0,0,1,0,0,0,1));
		}
		var _this = g.transformations[g.transformationIndex];
		_this._00 = 1;
		_this._10 = 0;
		_this._20 = 0;
		_this._01 = 0;
		_this._11 = 1;
		_this._21 = 0;
		_this._02 = 0;
		_this._12 = 0;
		_this._22 = 1;
		g.fillRect(0,0,dList.stage.width,dList.stage.height);
	}
	no_logic_kha_fox_displaylist_render_DisplayListProcessing.traverseChildren(dList,dList.stage,drawBuffer);
};
no_logic_kha_fox_displaylist_render_DisplayListProcessing.traverseChildren = function(dList,dispObj,drawBuffer) {
	var _g = 0;
	var _g1 = dispObj.children;
	while(_g < _g1.length) {
		var c = _g1[_g];
		++_g;
		if(no_logic_fox_utils_Bits.isSet(c.flags,6) || no_logic_fox_utils_Bits.isSet(c.flags,5)) {
			no_logic_fox_utils_Bits.set(dispObj.flags,7);
		}
		if(c.visible && !c.isDisposed) {
			no_logic_kha_fox_displaylist_render_DisplayListProcessing.setCommonProps(c,drawBuffer);
			var stage = c.stage;
			var g = c.stage.trackG2(drawBuffer,c);
			g.pushTranslation(stage.offsetX,stage.offsetY);
			g.rotate(c.rotation * Math.PI / 180,-c.centerOffsetX,-c.centerOffsetY);
			g.translate(c.centerOffsetX,c.centerOffsetY);
			g.scale(c.globalScaleX,c.globalScaleY);
			g.scale(stage.offsetScaleX,stage.offsetScaleY);
			g.translate(c.globalX,c.globalY);
			if(c.clipping == true) {
				g.scissor(c.hitBounds.x | 0,c.hitBounds.y | 0,c.hitBounds.width | 0,c.hitBounds.height | 0);
			}
			if(c.shader != null) {
				g.shader = c.shader;
			}
			no_logic_kha_fox_debug_Debug.statistics.numDisplayObjectsDraw++;
			if(c.useCustomRender) {
				g.renderCustom($bind(c,c.customRender));
			} else if(!c.cacheAsBitmap) {
				c.render(drawBuffer);
			} else {
				c.renderBitmapCache(drawBuffer,g);
			}
			if(c.clipping == true) {
				g.disableScissor();
			}
			g.popTransformation();
			no_logic_fox_utils_Bits.unset(c.flags,5);
			no_logic_fox_utils_Bits.unset(c.flags,6);
			if(c.children != null && c.children.length > 0) {
				no_logic_kha_fox_displaylist_render_DisplayListProcessing.traverseChildren(dList,c,drawBuffer);
			}
		}
	}
};
no_logic_kha_fox_displaylist_render_DisplayListProcessing.setCommonProps = function(d,drawBuffer) {
	var d1 = d;
	var dColor = d1.color != null ? d1.color : -1;
	var dAlpha = d1.alpha != null ? d1.alpha : 1.0;
	dAlpha *= d1.interactAlpha;
	var getParentCA = null;
	getParentCA = function(p) {
		if(p == null) {
			return;
		}
		dAlpha *= p.alpha != null ? p.alpha : 1.0;
		if(d1.objecttype != no_logic_kha_fox_displaylist_DisplayObjectType.text && d1.objecttype != no_logic_kha_fox_displaylist_DisplayObjectType.shape) {
			dColor = no_logic_fox_utils_ColorUtils.multiply(p.color != null ? p.color : -1,dColor);
		}
		if(p.parent != null) {
			getParentCA(p.parent);
		}
	};
	getParentCA(d1);
	d1.globalAlpha = dAlpha;
	drawBuffer.get_g2().set_opacity(d1.globalAlpha);
	drawBuffer.get_g2().set_color(dColor);
	d1.stage.displayList.g2.color = dColor;
	d1.stage.displayList.g2.opacity = d1.globalAlpha;
};
var no_logic_kha_fox_displaylist_render_DisplayListRender = function() { };
$hxClasses["no.logic.kha.fox.displaylist.render.DisplayListRender"] = no_logic_kha_fox_displaylist_render_DisplayListRender;
no_logic_kha_fox_displaylist_render_DisplayListRender.__name__ = "no.logic.kha.fox.displaylist.render.DisplayListRender";
no_logic_kha_fox_displaylist_render_DisplayListRender.renderDisplayList = function(dList,drawBuffer) {
	no_logic_kha_fox_debug_Debug.statistics.numG2Draws = 0;
	no_logic_kha_fox_debug_Debug.statistics.numG4Draws = 0;
	no_logic_kha_fox_debug_Debug.statistics.numDisplayObjectsDraw = 0;
	dList.g2.color = -1;
	dList.g2.opacity = 1.0;
	dList.g2.imageScaleQuality = 1;
	no_logic_kha_fox_displaylist_render_DisplayListRender.renderDrawCommands(dList,drawBuffer);
	no_logic_kha_fox_displaylist_render_DisplayListRender.drawDebugInfo(dList,drawBuffer);
	dList.g2.clearQueue();
};
no_logic_kha_fox_displaylist_render_DisplayListRender.prePassRenderBitmapCaches = function(dList) {
	no_logic_kha_fox_utils_TimeTrack.start();
	no_logic_kha_fox_displaylist_render_DisplayListRender.prerenderBitmapCacheChildren(dList.stage.children);
	if(no_logic_kha_fox_debug_Debug.statistics != null) {
		no_logic_kha_fox_debug_Debug.statistics.bitmapFilterTime = no_logic_kha_fox_utils_TimeTrack.stop(true);
	}
};
no_logic_kha_fox_displaylist_render_DisplayListRender.prerenderBitmapCacheChildren = function(children) {
	var _g = 0;
	while(_g < children.length) {
		var c = children[_g];
		++_g;
		if(c.visible && !c.isDisposed) {
			if(c.cacheAsBitmap && (c.didSizeToCacheChange() || no_logic_fox_utils_Bits.isSet(c.flags,5))) {
				no_logic_kha_fox_displaylist_render_DisplayListRender.renderBitmapCache(c);
			}
			if(c.children != null && c.children.length > 0) {
				no_logic_kha_fox_displaylist_render_DisplayListRender.prerenderBitmapCacheChildren(c.children);
			}
		}
	}
};
no_logic_kha_fox_displaylist_render_DisplayListRender.renderBitmapCache = function(d) {
	if(d.bitmapCache == null) {
		return;
	}
	d.bitmapCache.get_g2().begin(true,kha_Color._new(0));
	d.bitmapCache.get_g2().set_color(-1);
	d.bitmapCache.get_g2().set_opacity(1.0);
	d.preRender(d.bitmapCache);
	d.bitmapCache.get_g2().end();
	if(d.filters != null && d.filters.length > 0) {
		var f = d.filters[0];
		if(f != null && f.modified) {
			f.initBuffers(d,true,true);
			f.drawBase(d,d.bitmapCache);
			f.drawFilter(d,f.bufferBase);
			d.filterPadding = d.filters[0].padding;
		}
		if(d.filters.length > 1) {
			f = d.filters[1];
			if(f != null && f.modified) {
				f.initBuffers(d,true,false);
				f.drawFilter(d,d.filters[0].bufferOutput);
			}
		}
		d.filterCache = d.filters[d.filters.length - 1].bufferOutput;
	}
};
no_logic_kha_fox_displaylist_render_DisplayListRender.renderDrawCommands = function(dList,drawBuffer) {
	var g2 = drawBuffer.get_g2();
	drawBuffer.get_g2().disableScissor();
	if(dList.stage.settings.clipToBounds) {
		drawBuffer.get_g2().scissor(dList.stage.inWindowBounds.x | 0,dList.stage.inWindowBounds.y | 0,dList.stage.inWindowBounds.width | 0,dList.stage.inWindowBounds.height | 0);
	}
	var _g = 0;
	var _g1 = dList.g2.drawCommands;
	while(_g < _g1.length) {
		var dc = _g1[_g];
		++_g;
		if(dc.scissorRect != null) {
			var tm = dList.stage.getStageScaleTransform();
			dc.scissorRect.x *= tm._00;
			dc.scissorRect.y *= tm._11;
			dc.scissorRect.x += tm._20;
			dc.scissorRect.y += tm._21;
			dc.scissorRect.z *= tm._00;
			dc.scissorRect.w *= tm._11;
			g2.scissor(Math.round(dc.scissorRect.x),Math.round(dc.scissorRect.y),Math.round(dc.scissorRect.z),Math.round(dc.scissorRect.w));
		}
		g2.set_color(dc.color);
		g2.set_opacity(dc.opacity);
		var m = new kha_math_FastMatrix3(1,0,0,0,1,0,0,0,1);
		var _this = dc.transformation;
		m = new kha_math_FastMatrix3(_this._00 * m._00 + _this._10 * m._01 + _this._20 * m._02,_this._00 * m._10 + _this._10 * m._11 + _this._20 * m._12,_this._00 * m._20 + _this._10 * m._21 + _this._20 * m._22,_this._01 * m._00 + _this._11 * m._01 + _this._21 * m._02,_this._01 * m._10 + _this._11 * m._11 + _this._21 * m._12,_this._01 * m._20 + _this._11 * m._21 + _this._21 * m._22,_this._02 * m._00 + _this._12 * m._01 + _this._22 * m._02,_this._02 * m._10 + _this._12 * m._11 + _this._22 * m._12,_this._02 * m._20 + _this._12 * m._21 + _this._22 * m._22);
		var _this1 = dList.stage.getStageScaleTransform();
		m = new kha_math_FastMatrix3(_this1._00 * m._00 + _this1._10 * m._01 + _this1._20 * m._02,_this1._00 * m._10 + _this1._10 * m._11 + _this1._20 * m._12,_this1._00 * m._20 + _this1._10 * m._21 + _this1._20 * m._22,_this1._01 * m._00 + _this1._11 * m._01 + _this1._21 * m._02,_this1._01 * m._10 + _this1._11 * m._11 + _this1._21 * m._12,_this1._01 * m._20 + _this1._11 * m._21 + _this1._21 * m._22,_this1._02 * m._00 + _this1._12 * m._01 + _this1._22 * m._02,_this1._02 * m._10 + _this1._12 * m._11 + _this1._22 * m._12,_this1._02 * m._20 + _this1._12 * m._21 + _this1._22 * m._22);
		g2.transformationIndex++;
		if(g2.transformationIndex == g2.transformations.length) {
			g2.transformations.push(new kha_math_FastMatrix3(1,0,0,0,1,0,0,0,1));
		}
		var _this2 = g2.transformations[g2.transformationIndex];
		_this2._00 = m._00;
		_this2._10 = m._10;
		_this2._20 = m._20;
		_this2._01 = m._01;
		_this2._11 = m._11;
		_this2._21 = m._21;
		_this2._02 = m._02;
		_this2._12 = m._12;
		_this2._22 = m._22;
		g2.setTransformation(g2.transformations[g2.transformationIndex]);
		if(dc.type == no_logic_kha_fox_displaylist_render_G2SimAction.CustomRender) {
			if(dc.customRenderCallback != null) {
				dc.customRenderCallback(drawBuffer);
			}
		} else {
			var g21 = drawBuffer.get_g2();
			g21.set_imageScaleQuality(1);
			no_logic_kha_fox_debug_Debug.statistics.numG2Draws++;
			if(dc.shader != null) {
				if(dc.type != no_logic_kha_fox_displaylist_render_G2SimAction.DrawVideo) {
					if(dc.shader.pipeline != null) {
						drawBuffer.get_g4().setPipeline(dc.shader.pipeline);
					}
					drawBuffer.get_g2().set_pipeline(dc.shader.pipeline);
					drawBuffer.get_g4().setFloat(dc.shader.pipeline.getConstantLocation("iTime"),no_logic_kha_fox_application_App.system.time);
					drawBuffer.get_g4().setFloat2(dc.shader.pipeline.getConstantLocation("iResolution"),dc.width,dc.height);
					no_logic_kha_fox_gl_utils_GLShaderUniforms.setUniforms(drawBuffer.get_g4(),dc.shader.uniforms,dc.shader.pipeline);
				} else {
					kha_graphics4_Graphics2.videoPipelineCustom = dc.shader.pipeline;
					drawBuffer.get_g4().setPipeline(dc.shader.pipeline);
					drawBuffer.get_g4().setFloat(kha_graphics4_Graphics2.videoPipelineCustom.getConstantLocation("iTime"),kha_Scheduler.time());
					drawBuffer.get_g4().setFloat2(kha_graphics4_Graphics2.videoPipelineCustom.getConstantLocation("iResolution"),dc.width,dc.height);
					no_logic_kha_fox_gl_utils_GLShaderUniforms.setUniforms(drawBuffer.get_g4(),dc.shader.uniforms,dc.shader.pipeline);
				}
			}
			switch(dc.type._hx_index) {
			case 0:
				g21.drawImage(dc.image,dc.x,dc.y);
				break;
			case 1:
				g21.drawSubImage(dc.image,dc.x,dc.y,dc.sx,dc.sy,dc.sw,dc.sh);
				break;
			case 2:
				g21.drawScaledImage(dc.image,dc.dx,dc.dy,dc.dw,dc.dh);
				break;
			case 3:
				g21.drawScaledSubImage(dc.image,dc.sx,dc.sy,dc.sw,dc.sh,dc.dx,dc.dy,dc.dw,dc.dh);
				break;
			case 4:
				g21.drawRect(dc.x,dc.y,dc.width,dc.height,dc.strength);
				break;
			case 5:
				g21.fillRect(dc.x,dc.y,dc.width,dc.height);
				break;
			case 6:
				kha_graphics2_GraphicsExtension.drawCircle(g21,dc.cx,dc.cy,dc.radius,dc.strength,0);
				break;
			case 7:
				kha_graphics2_GraphicsExtension.fillCircle(g21,dc.cx,dc.cy,dc.radius,0);
				break;
			case 8:
				no_logic_kha_fox_utils_SimpleDraw.roundedRect(g21,dc.x,dc.y,dc.width,dc.height,dc.radius,dc.strength,0);
				break;
			case 9:
				no_logic_kha_fox_utils_SimpleDraw.roundedRectFill(g21,dc.x,dc.y,dc.width,dc.height,dc.radius,0);
				break;
			case 10:
				g21.set_font(dc.font);
				g21.set_fontSize(dc.fontSize);
				g21.drawString(dc.text,dc.x,dc.y);
				break;
			case 11:
				g21.set_font(dc.font);
				g21.set_fontSize(dc.fontSize);
				g21.drawCharacters(dc.textCharacters,dc.textStart,dc.textLength,dc.x,dc.y);
				break;
			case 12:
				g21.drawLine(dc.x,dc.y,dc.x2,dc.y2,dc.strength);
				break;
			case 13:
				no_logic_kha_fox_utils_SimpleDraw.drawLines(g21,dc.x,dc.y,dc.linePath,dc.strength);
				break;
			case 14:
				if(((dc.video) instanceof kha_Video)) {
					g21.drawVideo(dc.video,dc.x,dc.y,dc.width,dc.height);
				}
				break;
			case 16:
				g21.fillTriangle(dc.x,dc.y,dc.x2,dc.y2,dc.x3,dc.y3);
				break;
			case 17:
				kha_graphics2_GraphicsExtension.drawPolygon(g21,dc.x,dc.y,dc.path,dc.strength);
				break;
			case 18:
				kha_graphics2_GraphicsExtension.fillPolygon(g21,dc.x,dc.y,dc.path);
				break;
			case 19:
				var cx = dc.x;
				var cy = dc.y;
				var radius = dc.radius;
				var startAngle = dc.startAngle;
				var endAngle = dc.endAngle;
				var thickness = dc.strength;
				if(thickness == null) {
					thickness = 1;
				}
				if(endAngle == null) {
					endAngle = 90;
				}
				if(startAngle == null) {
					startAngle = 0.0;
				}
				if(radius == null) {
					radius = 100;
				}
				if(cy == null) {
					cy = 0.0;
				}
				if(cx == null) {
					cx = 0.0;
				}
				kha_graphics2_GraphicsExtension.drawArc(g21,cx,cy,radius,(startAngle - 90) * Math.PI / 180,(endAngle - 90) * Math.PI / 180,thickness,false,0);
				break;
			default:
				no_logic_kha_fox_debug_Debug.statistics.numG2Draws--;
			}
			if(dc.shader != null) {
				if(dc.type != no_logic_kha_fox_displaylist_render_G2SimAction.DrawVideo) {
					drawBuffer.get_g2().set_pipeline(no_logic_kha_fox_displaylist_render_DisplayListPipeline.g2Pipeline);
					if(no_logic_kha_fox_displaylist_render_DisplayListPipeline.g2Pipeline != null) {
						drawBuffer.get_g4().setPipeline(no_logic_kha_fox_displaylist_render_DisplayListPipeline.g2Pipeline);
					}
				} else if(dc.shader != null) {
					kha_graphics4_Graphics2.videoPipelineCustom = null;
				}
			}
		}
		g2.popTransformation();
		if(dc.scissorRect != null) {
			drawBuffer.get_g2().disableScissor();
			if(dList.stage.settings.clipToBounds) {
				drawBuffer.get_g2().scissor(dList.stage.inWindowBounds.x | 0,dList.stage.inWindowBounds.y | 0,dList.stage.inWindowBounds.width | 0,dList.stage.inWindowBounds.height | 0);
			}
		}
	}
	g2.disableScissor();
};
no_logic_kha_fox_displaylist_render_DisplayListRender.drawDebugInfo = function(dList,drawBuffer) {
	var g2 = drawBuffer.get_g2();
	if(dList.stage.settings.debug.showBounds) {
		g2.set_opacity(0.5);
		g2.set_font(no_logic_kha_fox_assets_EmbeddedAssets.fonts.cft);
		g2.set_fontSize(12);
		var m = dList.stage.getStageScaleTransform();
		var dSX = m._00;
		var dSY = m._11;
		var bounds = new no_logic_fox_types_Rectangle(m._20,m._21,m._00,m._11);
		bounds.freeze();
		var r = null;
		var _g = 0;
		var _g1 = dList.g2.renderInfo;
		while(_g < _g1.length) {
			var dc = _g1[_g];
			++_g;
			g2.set_color(dc.changed ? -65536 : dList.stage.settings.debug.boundsColor);
			bounds.reset();
			r = dc.bounds.clone();
			r.x *= dSX;
			r.y *= dSY;
			bounds.transform(r);
			g2.drawRect(bounds.x,bounds.y,bounds.width,bounds.height);
			if(bounds.x > 0 || bounds.y > 0) {
				g2.drawString(Std.string(Math.round(bounds.x)) + "," + Std.string(Math.round(bounds.y)),bounds.x + 2,bounds.y + 1);
			}
			if(bounds.width != null && bounds.width > 0 || bounds.height != null && bounds.height > 0) {
				var wi = Std.string(Math.round(bounds.width)) + "x" + Std.string(Math.round(bounds.height));
				g2.drawString(wi,bounds.x + bounds.width - g2.get_font().width(g2.get_fontSize(),wi) - 2,bounds.y + bounds.height - 13);
			}
		}
	}
};
var no_logic_kha_fox_displaylist_render_G2SimAction = $hxEnums["no.logic.kha.fox.displaylist.render.G2SimAction"] = { __ename__ : true, __constructs__ : ["DrawImage","DrawSubImage","DrawScaledImage","DrawScaledSubImage","DrawRect","FillRect","DrawCircle","FillCircle","RoundedRect","RoundedRectFill","DrawString","DrawCharacters","DrawLine","DrawLines","DrawVideo","DrawTriangle","FillTriangle","DrawPolygon","FillPolygon","CircularProgress","CustomRender"]
	,DrawImage: {_hx_index:0,__enum__:"no.logic.kha.fox.displaylist.render.G2SimAction",toString:$estr}
	,DrawSubImage: {_hx_index:1,__enum__:"no.logic.kha.fox.displaylist.render.G2SimAction",toString:$estr}
	,DrawScaledImage: {_hx_index:2,__enum__:"no.logic.kha.fox.displaylist.render.G2SimAction",toString:$estr}
	,DrawScaledSubImage: {_hx_index:3,__enum__:"no.logic.kha.fox.displaylist.render.G2SimAction",toString:$estr}
	,DrawRect: {_hx_index:4,__enum__:"no.logic.kha.fox.displaylist.render.G2SimAction",toString:$estr}
	,FillRect: {_hx_index:5,__enum__:"no.logic.kha.fox.displaylist.render.G2SimAction",toString:$estr}
	,DrawCircle: {_hx_index:6,__enum__:"no.logic.kha.fox.displaylist.render.G2SimAction",toString:$estr}
	,FillCircle: {_hx_index:7,__enum__:"no.logic.kha.fox.displaylist.render.G2SimAction",toString:$estr}
	,RoundedRect: {_hx_index:8,__enum__:"no.logic.kha.fox.displaylist.render.G2SimAction",toString:$estr}
	,RoundedRectFill: {_hx_index:9,__enum__:"no.logic.kha.fox.displaylist.render.G2SimAction",toString:$estr}
	,DrawString: {_hx_index:10,__enum__:"no.logic.kha.fox.displaylist.render.G2SimAction",toString:$estr}
	,DrawCharacters: {_hx_index:11,__enum__:"no.logic.kha.fox.displaylist.render.G2SimAction",toString:$estr}
	,DrawLine: {_hx_index:12,__enum__:"no.logic.kha.fox.displaylist.render.G2SimAction",toString:$estr}
	,DrawLines: {_hx_index:13,__enum__:"no.logic.kha.fox.displaylist.render.G2SimAction",toString:$estr}
	,DrawVideo: {_hx_index:14,__enum__:"no.logic.kha.fox.displaylist.render.G2SimAction",toString:$estr}
	,DrawTriangle: {_hx_index:15,__enum__:"no.logic.kha.fox.displaylist.render.G2SimAction",toString:$estr}
	,FillTriangle: {_hx_index:16,__enum__:"no.logic.kha.fox.displaylist.render.G2SimAction",toString:$estr}
	,DrawPolygon: {_hx_index:17,__enum__:"no.logic.kha.fox.displaylist.render.G2SimAction",toString:$estr}
	,FillPolygon: {_hx_index:18,__enum__:"no.logic.kha.fox.displaylist.render.G2SimAction",toString:$estr}
	,CircularProgress: {_hx_index:19,__enum__:"no.logic.kha.fox.displaylist.render.G2SimAction",toString:$estr}
	,CustomRender: {_hx_index:20,__enum__:"no.logic.kha.fox.displaylist.render.G2SimAction",toString:$estr}
};
var no_logic_kha_fox_displaylist_render_G2Sim = function(owner) {
	this.changed = false;
	this.preDraw = false;
	this.owner = owner;
	this.transformationIndex = 0;
	this.preDrawCommands = [];
	this.drawCommands = [];
	this.transformations = [new kha_math_FastMatrix3(1,0,0,0,1,0,0,0,1)];
	this.opacities = [1.0];
	this.renderInfo = [];
};
$hxClasses["no.logic.kha.fox.displaylist.render.G2Sim"] = no_logic_kha_fox_displaylist_render_G2Sim;
no_logic_kha_fox_displaylist_render_G2Sim.__name__ = "no.logic.kha.fox.displaylist.render.G2Sim";
no_logic_kha_fox_displaylist_render_G2Sim.prototype = {
	preDrawCommands: null
	,drawCommands: null
	,renderInfo: null
	,owner: null
	,canvas: null
	,imageScaleQuality: null
	,color: null
	,font: null
	,fontSize: null
	,opacity: null
	,shader: null
	,preDraw: null
	,changed: null
	,transformations: null
	,transformationIndex: null
	,opacities: null
	,bounds: null
	,scissorRect: null
	,trackG2: function(cv,d) {
		this.canvas = cv;
		this.bounds = d.hitBounds;
		this.changed = no_logic_fox_utils_Bits.isSet(d.flags,7) || no_logic_fox_utils_Bits.isSet(d.flags,6) || no_logic_fox_utils_Bits.isSet(d.flags,5);
		return this;
	}
	,clearQueue: function() {
		this.transformationIndex = 0;
		this.renderInfo.length = 0;
		this.preDrawCommands.length = 0;
		this.drawCommands.length = 0;
		this.transformations.length = 1;
		this.transformations[0] = new kha_math_FastMatrix3(1,0,0,0,1,0,0,0,1);
		this.transformations.length = 1;
		this.opacities[0] = 1.0;
		this.canvas = null;
		this.font = null;
		this.shader = null;
		this.changed = false;
	}
	,drawScaledImage: function(img,dx,dy,dw,dh) {
		this.addCommand({ type : no_logic_kha_fox_displaylist_render_G2SimAction.DrawScaledImage, image : img, dx : dx, dy : dy, dw : dw, dh : dh});
	}
	,drawCircle: function(cx,cy,radius,strength) {
		if(strength == null) {
			strength = 1.0;
		}
		this.addCommand({ type : no_logic_kha_fox_displaylist_render_G2SimAction.DrawCircle, cx : cx, cy : cy, radius : radius, strength : strength});
	}
	,fillCircle: function(cx,cy,radius) {
		this.addCommand({ type : no_logic_kha_fox_displaylist_render_G2SimAction.DrawCircle, cx : cx, cy : cy, radius : radius});
	}
	,drawRect: function(x,y,width,height,strength) {
		if(strength == null) {
			strength = 1.0;
		}
		this.addCommand({ type : no_logic_kha_fox_displaylist_render_G2SimAction.DrawRect, x : x, y : y, width : width, height : height, strength : strength});
	}
	,fillRect: function(x,y,width,height) {
		this.addCommand({ type : no_logic_kha_fox_displaylist_render_G2SimAction.FillRect, x : x, y : y, width : width, height : height});
	}
	,roundedRect: function(x,y,width,height,radius,strength) {
		if(strength == null) {
			strength = 1.0;
		}
		if(radius == null) {
			radius = 0.5;
		}
		this.addCommand({ type : no_logic_kha_fox_displaylist_render_G2SimAction.RoundedRect, x : x, y : y, width : width, height : height, strength : strength, radius : radius});
	}
	,roundedRectFill: function(x,y,width,height,radius) {
		if(radius == null) {
			radius = 0.5;
		}
		this.addCommand({ type : no_logic_kha_fox_displaylist_render_G2SimAction.RoundedRectFill, x : x, y : y, width : width, height : height, radius : radius});
	}
	,drawString: function(text,x,y) {
		this.addCommand({ type : no_logic_kha_fox_displaylist_render_G2SimAction.DrawString, text : text, x : x, y : y, font : this.font, fontSize : this.fontSize});
	}
	,drawLines: function(x,y,vertices,strength) {
		if(strength == null) {
			strength = 1;
		}
		this.addCommand({ type : no_logic_kha_fox_displaylist_render_G2SimAction.DrawLines, x : x, y : y, linePath : vertices, strength : strength});
	}
	,drawVideo: function(video,x,y,width,height) {
		this.addCommand({ type : no_logic_kha_fox_displaylist_render_G2SimAction.DrawVideo, video : video, x : x, y : y, width : width, height : height});
	}
	,fillPolygon: function(x,y,vertices) {
		this.addCommand({ type : no_logic_kha_fox_displaylist_render_G2SimAction.FillPolygon, x : x, y : y, path : vertices});
	}
	,renderCustom: function(customRenderCallback) {
		this.addCommand({ type : no_logic_kha_fox_displaylist_render_G2SimAction.CustomRender, customRenderCallback : customRenderCallback});
	}
	,addCommand: function(drawCommand) {
		if(this.shader != null) {
			drawCommand.shader = this.shader;
			this.shader = null;
		}
		if(this.preDraw) {
			var drawBuffer = this.canvas;
			var g2 = drawBuffer.get_g2();
			g2.set_imageScaleQuality(1);
			no_logic_kha_fox_debug_Debug.statistics.numG2Draws++;
			if(drawCommand.shader != null) {
				if(drawCommand.type != no_logic_kha_fox_displaylist_render_G2SimAction.DrawVideo) {
					if(drawCommand.shader.pipeline != null) {
						drawBuffer.get_g4().setPipeline(drawCommand.shader.pipeline);
					}
					drawBuffer.get_g2().set_pipeline(drawCommand.shader.pipeline);
					drawBuffer.get_g4().setFloat(drawCommand.shader.pipeline.getConstantLocation("iTime"),no_logic_kha_fox_application_App.system.time);
					drawBuffer.get_g4().setFloat2(drawCommand.shader.pipeline.getConstantLocation("iResolution"),drawCommand.width,drawCommand.height);
					no_logic_kha_fox_gl_utils_GLShaderUniforms.setUniforms(drawBuffer.get_g4(),drawCommand.shader.uniforms,drawCommand.shader.pipeline);
				} else {
					kha_graphics4_Graphics2.videoPipelineCustom = drawCommand.shader.pipeline;
					drawBuffer.get_g4().setPipeline(drawCommand.shader.pipeline);
					drawBuffer.get_g4().setFloat(kha_graphics4_Graphics2.videoPipelineCustom.getConstantLocation("iTime"),kha_Scheduler.time());
					drawBuffer.get_g4().setFloat2(kha_graphics4_Graphics2.videoPipelineCustom.getConstantLocation("iResolution"),drawCommand.width,drawCommand.height);
					no_logic_kha_fox_gl_utils_GLShaderUniforms.setUniforms(drawBuffer.get_g4(),drawCommand.shader.uniforms,drawCommand.shader.pipeline);
				}
			}
			switch(drawCommand.type._hx_index) {
			case 0:
				g2.drawImage(drawCommand.image,drawCommand.x,drawCommand.y);
				break;
			case 1:
				g2.drawSubImage(drawCommand.image,drawCommand.x,drawCommand.y,drawCommand.sx,drawCommand.sy,drawCommand.sw,drawCommand.sh);
				break;
			case 2:
				g2.drawScaledImage(drawCommand.image,drawCommand.dx,drawCommand.dy,drawCommand.dw,drawCommand.dh);
				break;
			case 3:
				g2.drawScaledSubImage(drawCommand.image,drawCommand.sx,drawCommand.sy,drawCommand.sw,drawCommand.sh,drawCommand.dx,drawCommand.dy,drawCommand.dw,drawCommand.dh);
				break;
			case 4:
				g2.drawRect(drawCommand.x,drawCommand.y,drawCommand.width,drawCommand.height,drawCommand.strength);
				break;
			case 5:
				g2.fillRect(drawCommand.x,drawCommand.y,drawCommand.width,drawCommand.height);
				break;
			case 6:
				kha_graphics2_GraphicsExtension.drawCircle(g2,drawCommand.cx,drawCommand.cy,drawCommand.radius,drawCommand.strength,0);
				break;
			case 7:
				kha_graphics2_GraphicsExtension.fillCircle(g2,drawCommand.cx,drawCommand.cy,drawCommand.radius,0);
				break;
			case 8:
				no_logic_kha_fox_utils_SimpleDraw.roundedRect(g2,drawCommand.x,drawCommand.y,drawCommand.width,drawCommand.height,drawCommand.radius,drawCommand.strength,0);
				break;
			case 9:
				no_logic_kha_fox_utils_SimpleDraw.roundedRectFill(g2,drawCommand.x,drawCommand.y,drawCommand.width,drawCommand.height,drawCommand.radius,0);
				break;
			case 10:
				g2.set_font(drawCommand.font);
				g2.set_fontSize(drawCommand.fontSize);
				g2.drawString(drawCommand.text,drawCommand.x,drawCommand.y);
				break;
			case 11:
				g2.set_font(drawCommand.font);
				g2.set_fontSize(drawCommand.fontSize);
				g2.drawCharacters(drawCommand.textCharacters,drawCommand.textStart,drawCommand.textLength,drawCommand.x,drawCommand.y);
				break;
			case 12:
				g2.drawLine(drawCommand.x,drawCommand.y,drawCommand.x2,drawCommand.y2,drawCommand.strength);
				break;
			case 13:
				no_logic_kha_fox_utils_SimpleDraw.drawLines(g2,drawCommand.x,drawCommand.y,drawCommand.linePath,drawCommand.strength);
				break;
			case 14:
				if(((drawCommand.video) instanceof kha_Video)) {
					g2.drawVideo(drawCommand.video,drawCommand.x,drawCommand.y,drawCommand.width,drawCommand.height);
				}
				break;
			case 16:
				g2.fillTriangle(drawCommand.x,drawCommand.y,drawCommand.x2,drawCommand.y2,drawCommand.x3,drawCommand.y3);
				break;
			case 17:
				kha_graphics2_GraphicsExtension.drawPolygon(g2,drawCommand.x,drawCommand.y,drawCommand.path,drawCommand.strength);
				break;
			case 18:
				kha_graphics2_GraphicsExtension.fillPolygon(g2,drawCommand.x,drawCommand.y,drawCommand.path);
				break;
			case 19:
				var cx = drawCommand.x;
				var cy = drawCommand.y;
				var radius = drawCommand.radius;
				var startAngle = drawCommand.startAngle;
				var endAngle = drawCommand.endAngle;
				var thickness = drawCommand.strength;
				if(thickness == null) {
					thickness = 1;
				}
				if(endAngle == null) {
					endAngle = 90;
				}
				if(startAngle == null) {
					startAngle = 0.0;
				}
				if(radius == null) {
					radius = 100;
				}
				if(cy == null) {
					cy = 0.0;
				}
				if(cx == null) {
					cx = 0.0;
				}
				kha_graphics2_GraphicsExtension.drawArc(g2,cx,cy,radius,(startAngle - 90) * Math.PI / 180,(endAngle - 90) * Math.PI / 180,thickness,false,0);
				break;
			default:
				no_logic_kha_fox_debug_Debug.statistics.numG2Draws--;
			}
			if(drawCommand.shader != null) {
				if(drawCommand.type != no_logic_kha_fox_displaylist_render_G2SimAction.DrawVideo) {
					drawBuffer.get_g2().set_pipeline(no_logic_kha_fox_displaylist_render_DisplayListPipeline.g2Pipeline);
					if(no_logic_kha_fox_displaylist_render_DisplayListPipeline.g2Pipeline != null) {
						drawBuffer.get_g4().setPipeline(no_logic_kha_fox_displaylist_render_DisplayListPipeline.g2Pipeline);
					}
				} else if(drawCommand.shader != null) {
					kha_graphics4_Graphics2.videoPipelineCustom = null;
				}
			}
		} else {
			var tmp = this.drawCommands;
			drawCommand.opacity = this.opacity;
			drawCommand.color = this.color;
			drawCommand.bounds = this.bounds;
			drawCommand.transformation = this.get_stackTransform();
			if(this.scissorRect != null) {
				drawCommand.scissorRect = this.scissorRect;
				this.scissorRect = null;
			}
			tmp.push(drawCommand);
			this.renderInfo.push({ bounds : drawCommand.bounds, changed : this.changed});
		}
	}
	,popTransformation: function() {
		this.transformationIndex--;
		return this.transformations[this.transformationIndex + 1];
	}
	,scale: function(x,y) {
		var _this = this.transformations[this.transformationIndex];
		var _this__10 = 0;
		var _this__20 = 0;
		var _this__01 = 0;
		var _this__21 = 0;
		var _this__02 = 0;
		var _this__12 = 0;
		var _this__22 = 1;
		var m = this.transformations[this.transformationIndex];
		var _01 = _this__01 * m._00 + y * m._01 + _this__21 * m._02;
		var _11 = _this__01 * m._10 + y * m._11 + _this__21 * m._12;
		var _21 = _this__01 * m._20 + y * m._21 + _this__21 * m._22;
		var _02 = _this__02 * m._00 + _this__12 * m._01 + _this__22 * m._02;
		var _12 = _this__02 * m._10 + _this__12 * m._11 + _this__22 * m._12;
		var _22 = _this__02 * m._20 + _this__12 * m._21 + _this__22 * m._22;
		_this._00 = x * m._00 + _this__10 * m._01 + _this__20 * m._02;
		_this._10 = x * m._10 + _this__10 * m._11 + _this__20 * m._12;
		_this._20 = x * m._20 + _this__10 * m._21 + _this__20 * m._22;
		_this._01 = _01;
		_this._11 = _11;
		_this._21 = _21;
		_this._02 = _02;
		_this._12 = _12;
		_this._22 = _22;
	}
	,translate: function(tx,ty) {
		var _this = this.transformations[this.transformationIndex];
		var _this__00 = 1;
		var _this__10 = 0;
		var _this__01 = 0;
		var _this__11 = 1;
		var _this__02 = 0;
		var _this__12 = 0;
		var _this__22 = 1;
		var m = this.transformations[this.transformationIndex];
		var _01 = _this__01 * m._00 + _this__11 * m._01 + ty * m._02;
		var _11 = _this__01 * m._10 + _this__11 * m._11 + ty * m._12;
		var _21 = _this__01 * m._20 + _this__11 * m._21 + ty * m._22;
		var _02 = _this__02 * m._00 + _this__12 * m._01 + _this__22 * m._02;
		var _12 = _this__02 * m._10 + _this__12 * m._11 + _this__22 * m._12;
		var _22 = _this__02 * m._20 + _this__12 * m._21 + _this__22 * m._22;
		_this._00 = _this__00 * m._00 + _this__10 * m._01 + tx * m._02;
		_this._10 = _this__00 * m._10 + _this__10 * m._11 + tx * m._12;
		_this._20 = _this__00 * m._20 + _this__10 * m._21 + tx * m._22;
		_this._01 = _01;
		_this._11 = _11;
		_this._21 = _21;
		_this._02 = _02;
		_this._12 = _12;
		_this._22 = _22;
	}
	,pushTranslation: function(tx,ty) {
		var _this__00 = 1;
		var _this__10 = 0;
		var _this__01 = 0;
		var _this__11 = 1;
		var _this__02 = 0;
		var _this__12 = 0;
		var _this__22 = 1;
		var m = this.transformations[this.transformationIndex];
		var _00 = _this__00 * m._00 + _this__10 * m._01 + tx * m._02;
		var _10 = _this__00 * m._10 + _this__10 * m._11 + tx * m._12;
		var _20 = _this__00 * m._20 + _this__10 * m._21 + tx * m._22;
		var _01 = _this__01 * m._00 + _this__11 * m._01 + ty * m._02;
		var _11 = _this__01 * m._10 + _this__11 * m._11 + ty * m._12;
		var _21 = _this__01 * m._20 + _this__11 * m._21 + ty * m._22;
		var _02 = _this__02 * m._00 + _this__12 * m._01 + _this__22 * m._02;
		var _12 = _this__02 * m._10 + _this__12 * m._11 + _this__22 * m._12;
		var _22 = _this__02 * m._20 + _this__12 * m._21 + _this__22 * m._22;
		this.transformationIndex++;
		if(this.transformationIndex == this.transformations.length) {
			this.transformations.push(new kha_math_FastMatrix3(1,0,0,0,1,0,0,0,1));
		}
		var _this = this.transformations[this.transformationIndex];
		_this._00 = _00;
		_this._10 = _10;
		_this._20 = _20;
		_this._01 = _01;
		_this._11 = _11;
		_this._21 = _21;
		_this._02 = _02;
		_this._12 = _12;
		_this._22 = _22;
	}
	,rotate: function(angle,centerx,centery) {
		var _this = this.transformations[this.transformationIndex];
		var _this__00 = 1;
		var _this__10 = 0;
		var _this__01 = 0;
		var _this__11 = 1;
		var _this__02 = 0;
		var _this__12 = 0;
		var _this__22 = 1;
		var _00 = Math.cos(angle);
		var _10 = -Math.sin(angle);
		var _01 = Math.sin(angle);
		var _11 = Math.cos(angle);
		var m__20 = 0;
		var m__21 = 0;
		var m__02 = 0;
		var m__12 = 0;
		var m__22 = 1;
		var _001 = _this__00 * _00 + _this__10 * _01 + centerx * m__02;
		var _101 = _this__00 * _10 + _this__10 * _11 + centerx * m__12;
		var _20 = _this__00 * m__20 + _this__10 * m__21 + centerx * m__22;
		var _011 = _this__01 * _00 + _this__11 * _01 + centery * m__02;
		var _111 = _this__01 * _10 + _this__11 * _11 + centery * m__12;
		var _21 = _this__01 * m__20 + _this__11 * m__21 + centery * m__22;
		var _02 = _this__02 * _00 + _this__12 * _01 + _this__22 * m__02;
		var _12 = _this__02 * _10 + _this__12 * _11 + _this__22 * m__12;
		var _22 = _this__02 * m__20 + _this__12 * m__21 + _this__22 * m__22;
		var m__00 = 1;
		var m__10 = 0;
		var m__20 = -centerx;
		var m__01 = 0;
		var m__11 = 1;
		var m__21 = -centery;
		var m__02 = 0;
		var m__12 = 0;
		var m__22 = 1;
		var _00 = _001 * m__00 + _101 * m__01 + _20 * m__02;
		var _10 = _001 * m__10 + _101 * m__11 + _20 * m__12;
		var _201 = _001 * m__20 + _101 * m__21 + _20 * m__22;
		var _01 = _011 * m__00 + _111 * m__01 + _21 * m__02;
		var _11 = _011 * m__10 + _111 * m__11 + _21 * m__12;
		var _211 = _011 * m__20 + _111 * m__21 + _21 * m__22;
		var _021 = _02 * m__00 + _12 * m__01 + _22 * m__02;
		var _121 = _02 * m__10 + _12 * m__11 + _22 * m__12;
		var _221 = _02 * m__20 + _12 * m__21 + _22 * m__22;
		var m = this.transformations[this.transformationIndex];
		var _011 = _01 * m._00 + _11 * m._01 + _211 * m._02;
		var _111 = _01 * m._10 + _11 * m._11 + _211 * m._12;
		var _21 = _01 * m._20 + _11 * m._21 + _211 * m._22;
		var _02 = _021 * m._00 + _121 * m._01 + _221 * m._02;
		var _12 = _021 * m._10 + _121 * m._11 + _221 * m._12;
		var _22 = _021 * m._20 + _121 * m._21 + _221 * m._22;
		_this._00 = _00 * m._00 + _10 * m._01 + _201 * m._02;
		_this._10 = _00 * m._10 + _10 * m._11 + _201 * m._12;
		_this._20 = _00 * m._20 + _10 * m._21 + _201 * m._22;
		_this._01 = _011;
		_this._11 = _111;
		_this._21 = _21;
		_this._02 = _02;
		_this._12 = _12;
		_this._22 = _22;
	}
	,get_stackTransform: function() {
		var m = new kha_math_FastMatrix3(1,0,0,0,1,0,0,0,1);
		var _g = 0;
		var _g1 = this.transformations;
		while(_g < _g1.length) {
			var t = _g1[_g];
			++_g;
			m = new kha_math_FastMatrix3(t._00 * m._00 + t._10 * m._01 + t._20 * m._02,t._00 * m._10 + t._10 * m._11 + t._20 * m._12,t._00 * m._20 + t._10 * m._21 + t._20 * m._22,t._01 * m._00 + t._11 * m._01 + t._21 * m._02,t._01 * m._10 + t._11 * m._11 + t._21 * m._12,t._01 * m._20 + t._11 * m._21 + t._21 * m._22,t._02 * m._00 + t._12 * m._01 + t._22 * m._02,t._02 * m._10 + t._12 * m._11 + t._22 * m._12,t._02 * m._20 + t._12 * m._21 + t._22 * m._22);
		}
		return m;
	}
	,scissor: function(x,y,width,height) {
		this.scissorRect = new kha_math_FastVector4(x,y,width,height);
	}
	,disableScissor: function() {
	}
	,__class__: no_logic_kha_fox_displaylist_render_G2Sim
	,__properties__: {get_stackTransform:"get_stackTransform"}
};
var no_logic_kha_fox_displaylist_transitions_Transition = function(data) {
	this.fadeSpeed = 3.0;
	this.transitionOut = true;
	this.transitionIn = true;
	this.state = 0;
	this.inited = false;
	if(data != null) {
		this.data = data;
		if(this.data.target != null) {
			this.target = this.data.target;
			this.transitionIn = this.data.transitionIn;
			this.transitionOut = this.data.transitionOut;
		}
	} else {
		this.data = { };
	}
};
$hxClasses["no.logic.kha.fox.displaylist.transitions.Transition"] = no_logic_kha_fox_displaylist_transitions_Transition;
no_logic_kha_fox_displaylist_transitions_Transition.__name__ = "no.logic.kha.fox.displaylist.transitions.Transition";
no_logic_kha_fox_displaylist_transitions_Transition.construct = function(d) {
	if(d.transition != null && d.transition.inited == false) {
		d.transition.setTarget(d);
	}
};
no_logic_kha_fox_displaylist_transitions_Transition.prototype = {
	state: null
	,target: null
	,transitionIn: null
	,transitionOut: null
	,inited: null
	,customIn: null
	,customOut: null
	,onCompleteUserCallback: null
	,fadeSpeed: null
	,running: null
	,delayed: null
	,delayTimer: null
	,data: null
	,setTarget: function(target,data) {
		if(this.inited == true) {
			return;
		}
		if(data == null) {
			data = { };
		}
		if(target != null) {
			this.target = target;
		}
		this.inited = true;
	}
	,update: function() {
		if(!this.running || this.delayed || this.target == null) {
			return;
		}
		if(this.transitionIn && this.state == 1) {
			this.updateIn();
		} else if(this.transitionOut && this.state == 2) {
			this.updateOut();
		}
	}
	,startTransitionIn: function(delay,onCompleteUserCallback) {
		if(delay == null) {
			delay = 0.0;
		}
		var _gthis = this;
		if(this.running || this.delayed) {
			return this;
		}
		if(onCompleteUserCallback != null) {
			this.onCompleteUserCallback = onCompleteUserCallback;
		} else {
			this.onCompleteUserCallback = null;
		}
		if(this.customIn == null) {
			this.target.set_alpha(0);
		}
		this.state = 1;
		this.running = true;
		if(delay == 0.0) {
			this.delayed = false;
		} else {
			this.delayed = true;
			this.delayTimer = haxe_Timer.delay(function() {
				_gthis.delayed = false;
			},delay * 1000 | 0);
		}
		return this;
	}
	,updateIn: function() {
		if(this.customIn != null) {
			if(this.customIn(this.target,this.data)) {
				this.onInComplete();
			}
		} else if(this.target.alpha >= 1) {
			this.onInComplete();
		} else {
			var _g = this.target;
			_g.set_alpha(_g.alpha + this.fadeSpeed * 0.01);
		}
	}
	,updateOut: function() {
		if(this.customOut != null) {
			if(this.customOut(this.target,this.data)) {
				this.onOutComplete();
			}
		} else if(this.target.alpha <= 0) {
			this.onOutComplete();
		} else {
			var _g = this.target;
			_g.set_alpha(_g.alpha - this.fadeSpeed * 0.01);
		}
	}
	,onInComplete: function() {
		this.state = 0;
		this.running = false;
		if(this.target == null) {
			return;
		}
		if(this.customIn == null) {
			this.target.set_alpha(1);
		}
		if(this.onCompleteUserCallback != null) {
			this.onCompleteUserCallback();
			this.onCompleteUserCallback = null;
		}
	}
	,onOutComplete: function() {
		this.state = 0;
		this.running = false;
		if(this.target == null) {
			return;
		}
		if(this.customOut == null) {
			this.target.set_alpha(0);
		}
		if(this.onCompleteUserCallback != null) {
			this.onCompleteUserCallback();
			this.onCompleteUserCallback = null;
		}
	}
	,dispose: function() {
		if(this.delayTimer != null) {
			this.delayTimer.stop();
			this.delayTimer = null;
		}
		this.customIn = null;
		this.customOut = null;
		this.onCompleteUserCallback = null;
		this.target = null;
		this.data = null;
	}
	,__class__: no_logic_kha_fox_displaylist_transitions_Transition
};
var no_logic_kha_fox_displaylist_uixcomp_UIXGComponent = function(uixgElement) {
	this.isDisposed = false;
	this.updateEnabled = false;
	this.uixgElement = uixgElement;
	this.name = uixgElement.name;
	no_logic_kha_fox_displaylist_uixcomp_UIXGComponent.namedInstances.h[this.name] = this;
	this.targetType = uixgElement.targetType;
	this.target = uixgElement.target;
	this.targetMC = js_Boot.__cast(this.target , no_logic_kha_fox_displaylist_Sprite);
	this.targetText = this.target;
	this.targetButton = this.target;
	if(((this.target) instanceof no_logic_kha_fox_displaylist_InteractiveObject)) {
		this.targetInteractive = this.target;
	}
	this.targetParent = js_Boot.__cast(this.target.parent , no_logic_kha_fox_displaylist_Sprite);
	if(this.targetInteractive != null) {
		this.targetInteractive.set_mouseEnabled(this.uixgElement.mouseEnabled);
	}
	if(uixgElement.bindVariable != null) {
		this.target.set_variable(this.uixgElement.bindVariable);
	} else if(uixgElement.assetCode != null) {
		this.target.set_asset(this.uixgElement.assetCode);
	}
	this.updateEnabled = true;
	this.timerList = [];
};
$hxClasses["no.logic.kha.fox.displaylist.uixcomp.UIXGComponent"] = no_logic_kha_fox_displaylist_uixcomp_UIXGComponent;
no_logic_kha_fox_displaylist_uixcomp_UIXGComponent.__name__ = "no.logic.kha.fox.displaylist.uixcomp.UIXGComponent";
no_logic_kha_fox_displaylist_uixcomp_UIXGComponent.getInstanceByName = function(name) {
	if(name == null) {
		return null;
	}
	if(Object.prototype.hasOwnProperty.call(no_logic_kha_fox_displaylist_uixcomp_UIXGComponent.namedInstances.h,name)) {
		return no_logic_kha_fox_displaylist_uixcomp_UIXGComponent.namedInstances.h[name];
	} else {
		return null;
	}
};
no_logic_kha_fox_displaylist_uixcomp_UIXGComponent.prototype = {
	uixgElement: null
	,name: null
	,target: null
	,targetInteractive: null
	,targetMC: null
	,targetType: null
	,targetParent: null
	,targetText: null
	,targetButton: null
	,updateEnabled: null
	,isDisposed: null
	,origin: null
	,declaredVars: null
	,timerList: null
	,uixEvents: null
	,tweens: null
	,preCreate: function() {
	}
	,created: function() {
	}
	,updateFromBindings: function() {
	}
	,update: function() {
	}
	,updateInternal: function() {
	}
	,onStartDrag: function() {
	}
	,onStopDrag: function() {
	}
	,onDragging: function() {
	}
	,onOverDropTarget: function(io) {
		return false;
	}
	,onDropTargetAccepted: function(io) {
	}
	,setBindVariable: function(bindVariable) {
		if(bindVariable != null && this.target != null) {
			this.target.set_variable(bindVariable);
		}
	}
	,setAssetCode: function(assetCode) {
		if(assetCode != null && this.target != null) {
			this.target.set_asset(assetCode);
		}
	}
	,getRelatedVariable: function(bindVariable) {
		if(this.target != null) {
			var systemTarget = null;
			var variableName = "";
			if(bindVariable.indexOf("@class.") != -1) {
				systemTarget = this.target;
				variableName = this.parseSystemPreString("@class.",bindVariable);
			}
			if(bindVariable.indexOf("@parentClass.") != -1) {
				if(this.target.parent != null) {
					systemTarget = this.target.parent;
					variableName = this.parseSystemPreString("@parentClass.",bindVariable);
				}
			}
			if(bindVariable.indexOf("@parent.parentClass.") != -1) {
				systemTarget = this.target.parent;
				if(systemTarget != null && systemTarget.parent != null) {
					systemTarget = systemTarget.parent;
				}
				variableName = this.parseSystemPreString("@parent.parentClass.",bindVariable);
			}
			if(variableName != "") {
				var uge = systemTarget.uixElement;
				if(uge != null && uge.classInstance != null) {
					return Reflect.field(uge.classInstance,variableName);
				}
			}
		}
		return null;
	}
	,updateChildBindings: function() {
		this.checkChildObjects(this.target);
	}
	,checkChildObjects: function(t) {
		if(t == null) {
			return;
		}
		var _g = 0;
		var _g1 = t.children;
		while(_g < _g1.length) {
			var c = _g1[_g];
			++_g;
			if(c != null) {
				this.checkChildObject(c);
				if(t.get_numChildren() > 0) {
					this.checkChildObject(c);
				}
			}
		}
	}
	,checkChildObject: function(t) {
		if(t == null) {
			return;
		}
		if(t.uixElement != null) {
			var tmp;
			if(t.uixElement.classInstance != null) {
				var uixdata = t.uixElement;
				tmp = uixdata.bindVariable != null && (uixdata.bindVariable.indexOf("@parentClass") != -1 || uixdata.bindVariable.indexOf("@class") != -1);
			} else {
				tmp = false;
			}
			if(tmp) {
				t.uixElement.classInstance.updateFromBindings();
			}
		}
	}
	,findComponentByName: function(compName) {
		return no_logic_kha_fox_displaylist_uixcomp_UIXGComponent.getInstanceByName(compName);
	}
	,dispose: function() {
	}
	,parseSystemPreString: function(preFix,eventName) {
		return eventName.split(preFix).join("");
	}
	,parseSystemPostString: function(action) {
		return action.split(";").join("").split(" ").join("").split("()").join("").split("(\"").join("").split("\")").join("");
	}
	,declare: function(fieldNames) {
		if(this.target != null) {
			if(this.declaredVars == null) {
				this.declaredVars = [];
			}
			var _g = 0;
			var _g1 = fieldNames.length;
			while(_g < _g1) {
				var fieldName = fieldNames[_g++];
				if(fieldName != null) {
					var foundChild = this.target.getChildByName(fieldName);
					if(foundChild != null) {
						try {
							Reflect.setProperty(this,fieldName,foundChild);
							this.declaredVars.push(fieldName);
						} catch( _g2 ) {
							haxe_Log.trace("Failed to set property " + fieldName + " on " + foundChild.name,{ fileName : "no/logic/kha/fox/displaylist/uixcomp/UIXGComponent.hx", lineNumber : 356, className : "no.logic.kha.fox.displaylist.uixcomp.UIXGComponent", methodName : "declare"});
						}
					}
				}
			}
		}
	}
	,declareCustom: function(localTarget,fieldNames) {
		if(localTarget != null) {
			if(this.declaredVars == null) {
				this.declaredVars = [];
			}
			var _g = 0;
			var _g1 = fieldNames.length;
			while(_g < _g1) {
				var fieldName = fieldNames[_g++];
				if(fieldName != null) {
					var foundChild = localTarget.getChildByName(fieldName);
					haxe_Log.trace(fieldName,{ fileName : "no/logic/kha/fox/displaylist/uixcomp/UIXGComponent.hx", lineNumber : 377, className : "no.logic.kha.fox.displaylist.uixcomp.UIXGComponent", methodName : "declareCustom", customParams : [foundChild,localTarget.get_numChildren()]});
					if(foundChild != null) {
						haxe_Log.trace(foundChild.name,{ fileName : "no/logic/kha/fox/displaylist/uixcomp/UIXGComponent.hx", lineNumber : 380, className : "no.logic.kha.fox.displaylist.uixcomp.UIXGComponent", methodName : "declareCustom"});
						try {
							Reflect.setProperty(this,fieldName,foundChild);
							this.declaredVars.push(fieldName);
						} catch( _g2 ) {
							haxe_Log.trace("Failed to set property " + fieldName + " on " + foundChild.name,{ fileName : "no/logic/kha/fox/displaylist/uixcomp/UIXGComponent.hx", lineNumber : 389, className : "no.logic.kha.fox.displaylist.uixcomp.UIXGComponent", methodName : "declareCustom"});
						}
					}
				}
			}
		}
	}
	,releaseDeclarations: function() {
		if(this.declaredVars != null) {
			var _g = 0;
			var _g1 = this.declaredVars.length;
			while(_g < _g1) this.declaredVars[_g++] = null;
		}
	}
	,tween: function(target,removeOtherTweensOfTarget) {
		if(removeOtherTweensOfTarget == null) {
			removeOtherTweensOfTarget = false;
		}
		if(removeOtherTweensOfTarget) {
			this.removeTweensOf(target);
		}
		if(this.tweens == null) {
			this.tweens = [];
		}
		var ta = tween_Delta.defaultChannel.tween(target);
		this.tweens.push(ta);
		return ta;
	}
	,removeTweensOf: function(target) {
		if(target != null) {
			if(this.tweens != null) {
				var _g = 0;
				var _g1 = this.tweens;
				while(_g < _g1.length) {
					var t = _g1[_g];
					++_g;
					if(t.target == this.target) {
						HxOverrides.remove(this.tweens,t);
					}
				}
			}
			tween_Delta.defaultChannel.removeTweensOf(target);
		}
	}
	,removeAllTweens: function() {
		if(this.tweens != null) {
			var _g = 0;
			var _g1 = this.tweens;
			while(_g < _g1.length) {
				var t = _g1[_g];
				++_g;
				if(t.target != null) {
					tween_Delta.defaultChannel.removeTweensOf(t.target);
				}
			}
		}
		this.tweens = [];
	}
	,getOrigin: function(storePosition,storeScale,storeDimensions,storeRotation) {
		if(storeRotation == null) {
			storeRotation = false;
		}
		if(storeDimensions == null) {
			storeDimensions = false;
		}
		if(storeScale == null) {
			storeScale = true;
		}
		if(storePosition == null) {
			storePosition = true;
		}
		if(this.target != null) {
			this.origin = new no_logic_fox_utils_PointOrigin();
			if(storePosition) {
				this.origin.x = this.target.x;
				this.origin.y = this.target.y;
			}
			if(storeScale) {
				this.origin.scale = this.target.scale;
				this.origin.scaleX = this.target.scaleX;
				this.origin.scaleY = this.target.scaleY;
			}
			if(storeDimensions) {
				this.origin.width = this.target.width;
				this.origin.height = this.target.height;
			}
			if(storeRotation) {
				this.origin.rotation = this.target.rotation;
			}
		}
	}
	,startDrag: function(lockCenter,left,top,right,bottom) {
		if(this.targetInteractive != null) {
			this.targetInteractive.onStartDrag = $bind(this,this.onStartDrag);
			this.targetInteractive.onStopDrag = $bind(this,this.onStopDrag);
			this.targetInteractive.onDragging = $bind(this,this.onDragging);
			this.targetInteractive.onOverDropTarget = $bind(this,this.onOverDropTarget);
			this.targetInteractive.startDrag(lockCenter,left,top,right,bottom);
		}
	}
	,stopDrag: function() {
		if(this.targetInteractive != null) {
			this.targetInteractive.stopDrag();
		}
	}
	,fadeIn: function(time,delay) {
		if(delay == null) {
			delay = 0.0;
		}
		if(time == null) {
			time = 0.5;
		}
		this.set_alpha(0);
		this.tween(this).wait(delay).prop("alpha",1.0,time);
	}
	,fadeMoveIn: function(time,delay,toX,fromX,toY,fromY,ease) {
		if(delay == null) {
			delay = 0.0;
		}
		if(time == null) {
			time = 0.5;
		}
		if(fromX != null) {
			this.set_x(fromX);
		}
		if(fromY != null) {
			this.set_y(fromY);
		}
		if(toX == null) {
			toX = this.get_x();
		}
		if(toY == null) {
			toY = this.get_y();
		}
		if(ease == null) {
			ease = tween_easing_Cubic.easeOut;
		}
		this.set_alpha(0);
		this.tween(this).wait(delay).propMultiple({ alpha : 1.0, x : toX, y : toY},time).ease(ease);
	}
	,fadeOut: function(time,delay) {
		if(delay == null) {
			delay = 0.0;
		}
		if(time == null) {
			time = 0.5;
		}
		this.tween(this).wait(delay).prop("alpha",0.0,time);
	}
	,debug: function(value) {
		no_logic_fox_Fox.get_c().debug(value);
	}
	,dispatch: function(eventName,properties,scope,delay) {
		if(delay == null) {
			delay = 0;
		}
		return no_logic_fox_Fox.dispatch(eventName,properties,scope,delay);
	}
	,add: function(eventName,callback,properties,scope) {
		if(this.uixEvents == null) {
			this.uixEvents = [];
		}
		var uixei = no_logic_fox_Fox.add(eventName,callback,properties,scope);
		this.uixEvents.push(uixei);
		return uixei;
	}
	,remove: function(eventName,callback,scope) {
		no_logic_fox_Fox.remove(eventName,callback,scope);
		if(this.uixEvents == null) {
			return;
		}
		var _g = 0;
		var _g1 = this.uixEvents.length;
		while(_g < _g1) {
			var i = _g++;
			if(eventName != null && callback != null && scope != null) {
				if(this.uixEvents[i].eventName == eventName && this.uixEvents[i].callback == callback && this.uixEvents[i].scope == scope) {
					this.uixEvents[i] = null;
				}
			} else if(eventName != null && callback != null) {
				if(this.uixEvents[i].eventName == eventName && this.uixEvents[i].callback == callback) {
					this.uixEvents[i] = null;
				}
			} else if(eventName != null) {
				if(this.uixEvents[i].eventName == eventName) {
					this.uixEvents[i] = null;
				}
			} else if(callback != null) {
				if(this.uixEvents[i].callback == callback) {
					this.uixEvents[i] = null;
				}
			}
		}
		var _g = 0;
		var _g1 = this.uixEvents.length;
		while(_g < _g1) {
			var i = _g++;
			if(this.uixEvents[i] == null) {
				this.uixEvents.splice(i,1);
			}
		}
	}
	,removeAllUIX: function() {
		if(this.uixEvents == null) {
			return;
		}
		var _g = 0;
		var _g1 = this.uixEvents.length;
		while(_g < _g1) {
			var i = _g++;
			if(this.uixEvents[i] != null) {
				no_logic_fox_Fox.remove(this.uixEvents[i].eventName,this.uixEvents[i].callback,this.uixEvents[i].scope);
			}
		}
		this.uixEvents = [];
	}
	,nextFrame: function() {
		if(this.targetMC != null) {
			this.targetMC.nextFrame();
		}
	}
	,previousFrame: function() {
		if(this.targetMC != null) {
			this.targetMC.previousFrame();
		}
	}
	,play: function(delay) {
		if(delay == null) {
			delay = 0.0;
		}
		if(this.targetMC == null) {
			return;
		}
		this.targetMC.play(delay);
	}
	,stop: function(delay) {
		if(delay == null) {
			delay = 0.0;
		}
		if(this.targetMC == null) {
			return;
		}
		this.targetMC.stop(delay);
	}
	,gotoAndStop: function(frameNrOrLabel,delay) {
		if(delay == null) {
			delay = 0.0;
		}
		if(this.targetMC == null) {
			return;
		}
		this.targetMC.gotoAndStop(frameNrOrLabel,delay);
	}
	,gotoAndPlay: function(frameNrOrLabel,delay) {
		if(delay == null) {
			delay = 0.0;
		}
		if(this.targetMC == null) {
			return;
		}
		this.targetMC.gotoAndPlay(frameNrOrLabel,delay);
	}
	,gotoAndPlayRandom: function(delay) {
		if(delay == null) {
			delay = 0.0;
		}
		if(this.targetMC == null) {
			return;
		}
		this.targetMC.gotoAndPlayRandom(delay);
	}
	,gotoAndStopRandom: function(delay) {
		if(delay == null) {
			delay = 0.0;
		}
		if(this.targetMC == null) {
			return;
		}
		this.targetMC.gotoAndStopRandom(delay);
	}
	,timeout: function(timeInSeconds,callback) {
		if(timeInSeconds == null) {
			timeInSeconds = 0.0;
		}
		if(this.targetMC == null) {
			return -1;
		}
		return this.targetMC.timeout(timeInSeconds,callback);
	}
	,clearTimeout: function(id) {
		if(this.targetMC == null) {
			return false;
		}
		return this.targetMC.clearTimeout(id);
	}
	,clearAllTimeouts: function() {
		if(this.targetMC == null) {
			return;
		}
		this.targetMC.clearAllTimeouts();
	}
	,disposeComponent: function() {
		if(!this.isDisposed) {
			if(Object.prototype.hasOwnProperty.call(no_logic_kha_fox_displaylist_uixcomp_UIXGComponent.namedInstances.h,this.name) && no_logic_kha_fox_displaylist_uixcomp_UIXGComponent.namedInstances.h[this.name] == this) {
				var key = this.name;
				var _this = no_logic_kha_fox_displaylist_uixcomp_UIXGComponent.namedInstances;
				if(Object.prototype.hasOwnProperty.call(_this.h,key)) {
					delete(_this.h[key]);
				}
			}
			no_logic_kha_fox_displaylist_uixcomp_UIXGComponentManager.eventCommand(no_logic_kha_fox_displaylist_uixcomp_UIXComponentEventAction.onDestroy,this.uixgElement);
			this.dispose();
			this.isDisposed = true;
			this.removeAllUIX();
			this.removeAllTweens();
			this.tweens = null;
			this.uixEvents = null;
			this.releaseDeclarations();
			this.declaredVars = null;
			this.origin = null;
			if(this.uixgElement != null) {
				this.uixgElement.dispose();
				this.uixgElement = null;
			}
			if(this.targetParent != null) {
				this.targetParent.removeChild(this.target);
			}
			if(this.targetButton != null) {
				this.targetButton = null;
			}
			this.parentComponent = null;
			this.targetParent = null;
			this.targetParentParent = null;
			this.targetMC = null;
			this.target = null;
			this.targetType = null;
			this.name = null;
			this.timerList = null;
		}
	}
	,visible: null
	,get_visible: function() {
		if(this.target == null) {
			return false;
		}
		return this.target.visible;
	}
	,set_visible: function(value) {
		if(this.target == null) {
			return false;
		}
		this.target.set_visible(value);
		return value;
	}
	,x: null
	,get_x: function() {
		return this.target.x;
	}
	,set_x: function(value) {
		this.target.set_x(value);
		return value;
	}
	,y: null
	,get_y: function() {
		return this.target.y;
	}
	,set_y: function(value) {
		this.target.set_y(value);
		return value;
	}
	,width: null
	,get_width: function() {
		return this.target.width;
	}
	,set_width: function(value) {
		this.target.set_width(value);
		return value;
	}
	,height: null
	,get_height: function() {
		return this.target.height;
	}
	,set_height: function(value) {
		this.target.set_height(value);
		return value;
	}
	,alpha: null
	,get_alpha: function() {
		if(this.target == null) {
			return 0.0;
		}
		return this.target.alpha;
	}
	,set_alpha: function(value) {
		if(this.target == null) {
			return 0.0;
		}
		this.target.set_alpha(value);
		return value;
	}
	,scale: null
	,get_scale: function() {
		if(this.target == null) {
			return 0.0;
		}
		return this.target.scale;
	}
	,set_scale: function(value) {
		if(this.target == null) {
			return 0.0;
		}
		this.target.set_scale(value);
		return value;
	}
	,mouseEnabled: null
	,get_mouseEnabled: function() {
		if(this.targetInteractive == null) {
			return false;
		}
		return this.targetInteractive.mouseEnabled;
	}
	,set_mouseEnabled: function(value) {
		if(this.targetInteractive == null) {
			return false;
		}
		this.targetInteractive.set_mouseEnabled(value);
		return value;
	}
	,dragEnabled: null
	,get_dragEnabled: function() {
		if(this.targetInteractive == null) {
			return false;
		}
		return this.targetInteractive.dragEnabled;
	}
	,set_dragEnabled: function(value) {
		if(this.targetInteractive == null) {
			return false;
		}
		this.targetInteractive.dragEnabled = value;
		if(value == true) {
			this.targetInteractive.onStartDrag = $bind(this,this.onStartDrag);
			this.targetInteractive.onStopDrag = $bind(this,this.onStopDrag);
			this.targetInteractive.onDragging = $bind(this,this.onDragging);
			this.targetInteractive.onOverDropTarget = $bind(this,this.onOverDropTarget);
			this.targetInteractive.onDropTargetAccepted = $bind(this,this.onDropTargetAccepted);
		} else if(this.targetInteractive.isDragging) {
			this.stopDrag();
		}
		return value;
	}
	,isDropTarget: null
	,get_isDropTarget: function() {
		if(this.targetInteractive == null) {
			return false;
		}
		return this.targetInteractive.isDropTarget;
	}
	,set_isDropTarget: function(value) {
		if(this.targetInteractive == null) {
			return false;
		}
		this.targetInteractive.isDropTarget = value;
		return value;
	}
	,parentComponent: null
	,get_parentComponent: function() {
		if(this.targetParent == null || this.targetParent.uixElement == null || this.targetParent.uixElement.classInstance == null) {
			return null;
		} else {
			return this.targetParent.uixElement.classInstance;
		}
	}
	,targetParentParent: null
	,get_targetParentParent: function() {
		if(this.targetParent != null && this.targetParent.parent != null) {
			return this.targetParent.parent;
		} else {
			return null;
		}
	}
	,setVar: function(varName,value) {
		no_logic_fox_Fox.setVar(varName,value);
	}
	,getVar: function(varName) {
		return no_logic_fox_Fox.getVar(varName);
	}
	,hasVar: function(varName,checkForNull) {
		if(checkForNull == null) {
			checkForNull = false;
		}
		if(checkForNull) {
			if(no_logic_fox_Fox.hasVar(varName)) {
				return no_logic_fox_Fox.getVar(varName) != null;
			} else {
				return false;
			}
		} else {
			return no_logic_fox_Fox.hasVar(varName);
		}
	}
	,getAsset: function(assetCode) {
		return no_logic_fox_Fox.getAsset(assetCode);
	}
	,hasAsset: function(assetCode,checkForNull) {
		if(checkForNull == null) {
			checkForNull = false;
		}
		return no_logic_fox_Fox.getAsset(assetCode) != null;
	}
	,__class__: no_logic_kha_fox_displaylist_uixcomp_UIXGComponent
	,__properties__: {get_targetParentParent:"get_targetParentParent",get_parentComponent:"get_parentComponent",set_isDropTarget:"set_isDropTarget",get_isDropTarget:"get_isDropTarget",set_dragEnabled:"set_dragEnabled",get_dragEnabled:"get_dragEnabled",set_mouseEnabled:"set_mouseEnabled",get_mouseEnabled:"get_mouseEnabled",set_scale:"set_scale",get_scale:"get_scale",set_alpha:"set_alpha",get_alpha:"get_alpha",set_height:"set_height",get_height:"get_height",set_width:"set_width",get_width:"get_width",set_y:"set_y",get_y:"get_y",set_x:"set_x",get_x:"get_x",set_visible:"set_visible",get_visible:"get_visible"}
};
var no_logic_kha_fox_displaylist_uixcomp_UIXGButtonComponent = function(uixgElement) {
	no_logic_kha_fox_displaylist_uixcomp_UIXGComponent.call(this,uixgElement);
	this.init();
};
$hxClasses["no.logic.kha.fox.displaylist.uixcomp.UIXGButtonComponent"] = no_logic_kha_fox_displaylist_uixcomp_UIXGButtonComponent;
no_logic_kha_fox_displaylist_uixcomp_UIXGButtonComponent.__name__ = "no.logic.kha.fox.displaylist.uixcomp.UIXGButtonComponent";
no_logic_kha_fox_displaylist_uixcomp_UIXGButtonComponent.__super__ = no_logic_kha_fox_displaylist_uixcomp_UIXGComponent;
no_logic_kha_fox_displaylist_uixcomp_UIXGButtonComponent.prototype = $extend(no_logic_kha_fox_displaylist_uixcomp_UIXGComponent.prototype,{
	init: function() {
		var _gthis = this;
		this.targetInteractive.set_mouseEnabled(true);
		this.targetInteractive.buttonMode = true;
		this.targetInteractive.onMouseOver = function(t) {
			no_logic_kha_fox_displaylist_uixcomp_UIXGComponentManager.eventCommand(no_logic_kha_fox_displaylist_uixcomp_UIXComponentEventAction.onRollOver,_gthis.uixgElement);
			_gthis.onMouseOver();
		};
		this.targetInteractive.onMouseOut = function(t) {
			no_logic_kha_fox_displaylist_uixcomp_UIXGComponentManager.eventCommand(no_logic_kha_fox_displaylist_uixcomp_UIXComponentEventAction.onRollOut,_gthis.uixgElement);
			_gthis.onMouseOut();
		};
		this.targetInteractive.onMouseMoveOver = function(t) {
			no_logic_kha_fox_displaylist_uixcomp_UIXGComponentManager.eventCommand(no_logic_kha_fox_displaylist_uixcomp_UIXComponentEventAction.onMoveOver,_gthis.uixgElement);
			_gthis.onMouseMoveOver();
		};
		this.targetInteractive.onClick = function(t) {
			no_logic_kha_fox_displaylist_uixcomp_UIXGComponentManager.eventCommand(no_logic_kha_fox_displaylist_uixcomp_UIXComponentEventAction.onClick,_gthis.uixgElement);
			_gthis.onClick();
		};
		this.targetInteractive.onMouseDown = function(t) {
			no_logic_kha_fox_displaylist_uixcomp_UIXGComponentManager.eventCommand(no_logic_kha_fox_displaylist_uixcomp_UIXComponentEventAction.onPress,_gthis.uixgElement);
			_gthis.onMouseDown();
		};
		this.targetInteractive.onMouseUp = function(t) {
			no_logic_kha_fox_displaylist_uixcomp_UIXGComponentManager.eventCommand(no_logic_kha_fox_displaylist_uixcomp_UIXComponentEventAction.onRelease,_gthis.uixgElement);
			_gthis.onMouseUp();
		};
		this.targetInteractive.onRightClick = function(t) {
			_gthis.onRightClick();
		};
		this.targetInteractive.onMiddleClick = function(t) {
			_gthis.onMiddleClick();
		};
	}
	,onMouseOver: function() {
	}
	,onMouseOut: function() {
	}
	,onMouseMoveOver: function() {
	}
	,onClick: function() {
	}
	,onMouseDown: function() {
	}
	,onMouseUp: function() {
	}
	,onRightClick: function() {
	}
	,onMiddleClick: function() {
	}
	,dispose: function() {
	}
	,__class__: no_logic_kha_fox_displaylist_uixcomp_UIXGButtonComponent
});
var no_logic_kha_fox_displaylist_uixcomp_UIXGComponentManager = function() { };
$hxClasses["no.logic.kha.fox.displaylist.uixcomp.UIXGComponentManager"] = no_logic_kha_fox_displaylist_uixcomp_UIXGComponentManager;
no_logic_kha_fox_displaylist_uixcomp_UIXGComponentManager.__name__ = "no.logic.kha.fox.displaylist.uixcomp.UIXGComponentManager";
no_logic_kha_fox_displaylist_uixcomp_UIXGComponentManager.copyProps = function(uixgElement,target) {
	if(uixgElement == null || uixgElement.rawUIXData == null) {
		return;
	}
	uixgElement.dispObjName = uixgElement.rawUIXData.name;
	uixgElement.target = uixgElement.target;
	var tCstr = uixgElement.dispObjName;
	uixgElement.uniqueID = tCstr == null ? null : tCstr.split("_UIX_").join("").split("_")[0];
	var tCstr = uixgElement.dispObjName;
	var tmp;
	if(tCstr == null) {
		tmp = null;
	} else {
		var ix = tCstr.split("_UIX_").join("").split("_");
		tmp = ix[0].substring(4,6) + "/" + ix[0].substring(2,4) + "/" + ix[0].substring(0,2) + " " + ix[0].substring(6,8) + ":" + ix[0].substring(8,10) + ":" + ix[0].substring(10,12);
	}
	uixgElement.createdTime = tmp;
	uixgElement.targetType = uixgElement.rawUIXData.type;
	uixgElement.name = uixgElement.rawUIXData.name;
	uixgElement.className = uixgElement.rawUIXData.className;
	uixgElement.editable = uixgElement.rawUIXData.editable;
	uixgElement.upperCase = uixgElement.rawUIXData.upperCase;
	uixgElement.upperCaseFirstLetter = uixgElement.rawUIXData.upperCaseFirstLetter;
	uixgElement.triggerOnChange = uixgElement.rawUIXData.triggerOnChange;
	uixgElement.triggerOneShot = uixgElement.rawUIXData.triggerOneShot;
	uixgElement.triggerOnPressEnter = uixgElement.rawUIXData.triggerOnPressEnter;
	uixgElement.classProperties = uixgElement.rawUIXData.classProperties;
	uixgElement.audio = uixgElement.rawUIXData.audio;
	uixgElement.events = uixgElement.rawUIXData.events;
	uixgElement.originalMode = uixgElement.rawUIXData.originalMode;
	uixgElement.source = uixgElement.rawUIXData.source;
	uixgElement.loop = uixgElement.rawUIXData.loop;
	uixgElement.autoPlay = uixgElement.rawUIXData.autoPlay;
	uixgElement.volume = uixgElement.rawUIXData.volume;
	uixgElement.scaleMode = uixgElement.rawUIXData.scalemode;
	uixgElement.bindVariable = uixgElement.rawUIXData.variable;
	uixgElement.assetCode = uixgElement.rawUIXData.assetCode;
	uixgElement.mouseChildren = uixgElement.rawUIXData.mouseChildren;
	uixgElement.mouseEnabled = uixgElement.rawUIXData.mouseEnabled;
	uixgElement.layout = uixgElement.rawUIXData.layout;
};
no_logic_kha_fox_displaylist_uixcomp_UIXGComponentManager.eventCommand = function(eventAction,uixgElement) {
	var actionName = $hxEnums[eventAction.__enum__].__constructs__[eventAction._hx_index];
	var tmp;
	if(!(eventAction == null || uixgElement == null || uixgElement.events == null)) {
		var this1 = uixgElement.events;
		tmp = !(this1 != null && Object.prototype.hasOwnProperty.call(this1,actionName));
	} else {
		tmp = true;
	}
	if(tmp) {
		return;
	}
	var commandStr = Reflect.field(uixgElement.events,actionName);
	if(commandStr == null) {
		return;
	}
	no_logic_kha_fox_displaylist_uixcomp_UIXGComponentManager.executeEventCommand(commandStr,uixgElement);
};
no_logic_kha_fox_displaylist_uixcomp_UIXGComponentManager.executeEventCommand = function(cmdStr,uixgElement) {
	if(cmdStr == null || cmdStr == "") {
		return;
	}
	if(cmdStr.indexOf("@") != -1) {
		if(cmdStr.indexOf("@uix") != -1) {
			var typX = no_logic_kha_fox_displaylist_uixcomp_UIXGComponentManager.splitFunc(cmdStr,"@uix");
			typX.shift();
			if(typX.length > 1 && typX[1] != null && typX[1] != "") {
				no_logic_fox_Fox.dispatch(typX[0],typX[1]);
			} else {
				no_logic_fox_Fox.dispatch(typX[0]);
			}
			return;
		}
		if(cmdStr.indexOf("@class.") != -1 && uixgElement.classInstance != null) {
			var typX = no_logic_kha_fox_displaylist_uixcomp_UIXGComponentManager.splitFunc(cmdStr,"@class.");
			if(typX != null && typX.length > 0) {
				try {
					var f = Reflect.field(uixgElement.classInstance,typX[0]);
					if(f != null) {
						f.apply(uixgElement.classInstance,typX);
					} else {
						haxe_Log.trace("Function '" + typX[0] + "' was not found on " + uixgElement.className,{ fileName : "no/logic/kha/fox/displaylist/uixcomp/UIXGComponentManager.hx", lineNumber : 372, className : "no.logic.kha.fox.displaylist.uixcomp.UIXGComponentManager", methodName : "executeEventCommand"});
					}
				} catch( _g ) {
					haxe_Log.trace("Failed to call '" + typX[0] + "' on " + uixgElement.className,{ fileName : "no/logic/kha/fox/displaylist/uixcomp/UIXGComponentManager.hx", lineNumber : 376, className : "no.logic.kha.fox.displaylist.uixcomp.UIXGComponentManager", methodName : "executeEventCommand"});
				}
			}
			return;
		}
		if(cmdStr.indexOf("@parentClass.") != -1) {
			var typX = no_logic_kha_fox_displaylist_uixcomp_UIXGComponentManager.splitFunc(cmdStr,"@parentClass.");
			if(uixgElement.target != null && uixgElement.target.parent != null && uixgElement.target.parent.uixElement != null) {
				var u = uixgElement.target.parent.uixElement.classInstance;
				if(u != null && u.uixgElement != null && u.uixgElement.classInstance != null && typX != null && typX.length > 0) {
					try {
						var f = Reflect.field(u.uixgElement.classInstance,typX[0]);
						if(f != null) {
							f.apply(u.uixgElement.classInstance,typX);
						} else {
							haxe_Log.trace("Function '" + typX[0] + "' was not found on " + u.uixgElement.className,{ fileName : "no/logic/kha/fox/displaylist/uixcomp/UIXGComponentManager.hx", lineNumber : 396, className : "no.logic.kha.fox.displaylist.uixcomp.UIXGComponentManager", methodName : "executeEventCommand"});
						}
					} catch( _g ) {
						haxe_Log.trace("Failed to call '" + typX[0] + "' on " + u.uixgElement.className,{ fileName : "no/logic/kha/fox/displaylist/uixcomp/UIXGComponentManager.hx", lineNumber : 400, className : "no.logic.kha.fox.displaylist.uixcomp.UIXGComponentManager", methodName : "executeEventCommand"});
					}
				}
			}
			return;
		}
		if(cmdStr.indexOf("@parent.parentClass.") != -1) {
			var typX = no_logic_kha_fox_displaylist_uixcomp_UIXGComponentManager.splitFunc(cmdStr,"@parent.parentClass.");
			if(uixgElement.target != null && uixgElement.target.parent != null && uixgElement.target.parent.parent != null && uixgElement.target.parent.parent.uixElement != null) {
				var u = uixgElement.target.parent.parent.uixElement.classInstance;
				if(u != null && u.uixgElement != null && u.uixgElement.classInstance != null && typX != null && typX.length > 0) {
					try {
						var f = Reflect.field(u.uixgElement.classInstance,typX[0]);
						if(f != null) {
							f.apply(u.uixgElement.classInstance,typX);
						} else {
							haxe_Log.trace("Function '" + typX[0] + "' was not found on " + u.uixgElement.className,{ fileName : "no/logic/kha/fox/displaylist/uixcomp/UIXGComponentManager.hx", lineNumber : 421, className : "no.logic.kha.fox.displaylist.uixcomp.UIXGComponentManager", methodName : "executeEventCommand"});
						}
					} catch( _g ) {
						haxe_Log.trace("Failed to call '" + typX[0] + "' on " + u.uixgElement.className,{ fileName : "no/logic/kha/fox/displaylist/uixcomp/UIXGComponentManager.hx", lineNumber : 425, className : "no.logic.kha.fox.displaylist.uixcomp.UIXGComponentManager", methodName : "executeEventCommand"});
					}
				}
			}
			return;
		}
		if(cmdStr.indexOf("@[") != -1 && cmdStr.indexOf("].") != -1) {
			var garr = cmdStr.split("@[").join("").split("].");
			if(garr == null || garr.length < 2) {
				return;
			}
			var compName = garr[0];
			if(compName == null || compName == "") {
				return;
			}
			compName = compName.split("\"").join("");
			var funcC = garr[1];
			if(funcC == null || funcC == "") {
				return;
			}
			var typX = no_logic_kha_fox_displaylist_uixcomp_UIXGComponentManager.splitFunc(funcC,"@[");
			var u = no_logic_kha_fox_displaylist_uixcomp_UIXGComponent.getInstanceByName(compName);
			if(u != null && u.uixgElement != null && u.uixgElement.classInstance != null && typX != null && typX.length > 0) {
				try {
					var f = Reflect.field(u.uixgElement.classInstance,typX[0]);
					if(f != null) {
						f.apply(u.uixgElement.classInstance,typX);
					} else {
						haxe_Log.trace("Function '" + typX[0] + "' was not found on " + u.uixgElement.className,{ fileName : "no/logic/kha/fox/displaylist/uixcomp/UIXGComponentManager.hx", lineNumber : 458, className : "no.logic.kha.fox.displaylist.uixcomp.UIXGComponentManager", methodName : "executeEventCommand"});
					}
				} catch( _g ) {
					haxe_Log.trace("Failed to call '" + typX[0] + "' on " + u.uixgElement.className,{ fileName : "no/logic/kha/fox/displaylist/uixcomp/UIXGComponentManager.hx", lineNumber : 462, className : "no.logic.kha.fox.displaylist.uixcomp.UIXGComponentManager", methodName : "executeEventCommand"});
				}
			} else {
				return;
			}
		}
	} else {
		if(cmdStr.indexOf("parent.parent.") != -1) {
			var typX = no_logic_kha_fox_displaylist_uixcomp_UIXGComponentManager.splitFunc(cmdStr,"parent.parent.");
			if(uixgElement.target != null && uixgElement.target.parent != null && uixgElement.target.parent.parent != null) {
				var d = uixgElement.target.parent.parent;
				if(d != null && typX != null && typX.length > 0) {
					try {
						var f = Reflect.field(d,typX[0]);
						typX.shift();
						if(f != null) {
							f.apply(d,typX);
						} else {
							haxe_Log.trace("Function '" + typX[0] + "' was not found on " + d.name,{ fileName : "no/logic/kha/fox/displaylist/uixcomp/UIXGComponentManager.hx", lineNumber : 488, className : "no.logic.kha.fox.displaylist.uixcomp.UIXGComponentManager", methodName : "executeEventCommand"});
						}
					} catch( _g ) {
						haxe_Log.trace("Failed to call '" + typX[0] + "' on " + d.name,{ fileName : "no/logic/kha/fox/displaylist/uixcomp/UIXGComponentManager.hx", lineNumber : 492, className : "no.logic.kha.fox.displaylist.uixcomp.UIXGComponentManager", methodName : "executeEventCommand"});
					}
				}
			}
			return;
		}
		if(cmdStr.indexOf("parent.") != -1) {
			var typX = no_logic_kha_fox_displaylist_uixcomp_UIXGComponentManager.splitFunc(cmdStr,"parent.");
			if(uixgElement.target != null && uixgElement.target.parent != null) {
				var d = uixgElement.target.parent;
				if(d != null && typX != null && typX.length > 0) {
					try {
						var f = Reflect.field(d,typX[0]);
						typX.shift();
						if(f != null) {
							f.apply(d,typX);
						} else {
							haxe_Log.trace("Function '" + typX[0] + "' was not found on " + d.name,{ fileName : "no/logic/kha/fox/displaylist/uixcomp/UIXGComponentManager.hx", lineNumber : 514, className : "no.logic.kha.fox.displaylist.uixcomp.UIXGComponentManager", methodName : "executeEventCommand"});
						}
					} catch( _g ) {
						haxe_Log.trace("Failed to call '" + typX[0] + "' on " + d.name,{ fileName : "no/logic/kha/fox/displaylist/uixcomp/UIXGComponentManager.hx", lineNumber : 518, className : "no.logic.kha.fox.displaylist.uixcomp.UIXGComponentManager", methodName : "executeEventCommand"});
					}
				}
			}
			return;
		}
		if(cmdStr.indexOf("this.") != -1) {
			var typX = no_logic_kha_fox_displaylist_uixcomp_UIXGComponentManager.splitFunc(cmdStr,"this.");
			if(uixgElement.target != null && uixgElement.target != null) {
				var d = uixgElement.target;
				if(d != null && typX != null && typX.length > 0) {
					try {
						var f = Reflect.field(d,typX[0]);
						typX.shift();
						if(f != null) {
							f.apply(d,typX);
						} else {
							haxe_Log.trace("Function '" + typX[0] + "' was not found on " + d.name,{ fileName : "no/logic/kha/fox/displaylist/uixcomp/UIXGComponentManager.hx", lineNumber : 540, className : "no.logic.kha.fox.displaylist.uixcomp.UIXGComponentManager", methodName : "executeEventCommand"});
						}
					} catch( _g ) {
						haxe_Log.trace("Failed to call '" + typX[0] + "' on " + d.name,{ fileName : "no/logic/kha/fox/displaylist/uixcomp/UIXGComponentManager.hx", lineNumber : 544, className : "no.logic.kha.fox.displaylist.uixcomp.UIXGComponentManager", methodName : "executeEventCommand"});
					}
				}
			}
			return;
		} else {
			var typX = no_logic_kha_fox_displaylist_uixcomp_UIXGComponentManager.splitFunc(cmdStr,"this.");
			if(uixgElement.target != null && uixgElement.target.parent != null) {
				var d = uixgElement.target.parent;
				if(d != null && typX != null && typX.length > 0) {
					try {
						var f = Reflect.field(d,typX[0]);
						if(f != null) {
							f.apply(d,typX);
						} else {
							haxe_Log.trace("Function '" + typX[0] + "' was not found on " + d.name,{ fileName : "no/logic/kha/fox/displaylist/uixcomp/UIXGComponentManager.hx", lineNumber : 564, className : "no.logic.kha.fox.displaylist.uixcomp.UIXGComponentManager", methodName : "executeEventCommand"});
						}
					} catch( _g ) {
						haxe_Log.trace("Failed to call '" + typX[0] + "' on " + d.name,{ fileName : "no/logic/kha/fox/displaylist/uixcomp/UIXGComponentManager.hx", lineNumber : 568, className : "no.logic.kha.fox.displaylist.uixcomp.UIXGComponentManager", methodName : "executeEventCommand"});
					}
				}
			}
			return;
		}
	}
};
no_logic_kha_fox_displaylist_uixcomp_UIXGComponentManager.splitFunc = function(cmdStr,prefix) {
	var r = [];
	cmdStr = cmdStr.split(prefix).join("").split(";").join("");
	if(cmdStr.indexOf("(") != -1) {
		var rs = cmdStr.split(")").join("").split("\"").join("").split("(");
		if(rs != null) {
			if(rs.length == 2 && rs[1].indexOf(",") != -1) {
				r.push(rs[0]);
				var rp = rs[1].split(",");
				var _g = 0;
				var _g1 = rp.length;
				while(_g < _g1) r.push(rp[_g++]);
			} else {
				var _g = 0;
				var _g1 = rs.length;
				while(_g < _g1) r.push(rs[_g++]);
			}
		}
	} else {
		r.push(cmdStr);
	}
	return r;
};
var no_logic_kha_fox_displaylist_uixcomp_UIXComponentEventAction = $hxEnums["no.logic.kha.fox.displaylist.uixcomp.UIXComponentEventAction"] = { __ename__ : true, __constructs__ : ["onClick","onPress","onRelease","onRollOver","onRollOut","onMoveOver","onCreate","onDestroy","delayCall1","delayCall2"]
	,onClick: {_hx_index:0,__enum__:"no.logic.kha.fox.displaylist.uixcomp.UIXComponentEventAction",toString:$estr}
	,onPress: {_hx_index:1,__enum__:"no.logic.kha.fox.displaylist.uixcomp.UIXComponentEventAction",toString:$estr}
	,onRelease: {_hx_index:2,__enum__:"no.logic.kha.fox.displaylist.uixcomp.UIXComponentEventAction",toString:$estr}
	,onRollOver: {_hx_index:3,__enum__:"no.logic.kha.fox.displaylist.uixcomp.UIXComponentEventAction",toString:$estr}
	,onRollOut: {_hx_index:4,__enum__:"no.logic.kha.fox.displaylist.uixcomp.UIXComponentEventAction",toString:$estr}
	,onMoveOver: {_hx_index:5,__enum__:"no.logic.kha.fox.displaylist.uixcomp.UIXComponentEventAction",toString:$estr}
	,onCreate: {_hx_index:6,__enum__:"no.logic.kha.fox.displaylist.uixcomp.UIXComponentEventAction",toString:$estr}
	,onDestroy: {_hx_index:7,__enum__:"no.logic.kha.fox.displaylist.uixcomp.UIXComponentEventAction",toString:$estr}
	,delayCall1: {_hx_index:8,__enum__:"no.logic.kha.fox.displaylist.uixcomp.UIXComponentEventAction",toString:$estr}
	,delayCall2: {_hx_index:9,__enum__:"no.logic.kha.fox.displaylist.uixcomp.UIXComponentEventAction",toString:$estr}
};
var no_logic_kha_fox_displaylist_uixcomp_UIXGElement = function(rawUIXData,target) {
	this.audio = { };
	this.layout = { };
	this.events = { };
	this.mouseChildren = true;
	this.mouseEnabled = true;
	this.triggerOneShot = false;
	this.triggerOnPressEnter = true;
	this.triggerOnChange = false;
	this.originalMode = "show";
	this.upperCaseFirstLetter = false;
	this.upperCase = false;
	this.editable = false;
	this.loop = false;
	this.autoPlay = true;
	this.clipping = true;
	this.volume = 1;
	this.disposeOnRemove = true;
	if(rawUIXData == null) {
		return;
	}
	this.rawUIXData = rawUIXData;
	this.target = target;
	no_logic_kha_fox_displaylist_uixcomp_UIXGComponentManager.copyProps(this,target);
	if(this.bindVariable != null) {
		no_logic_kha_fox_displaylist_uixcomp_UIXGComponentManager.trackedVariables.h[this.uniqueID] = this.bindVariable;
	}
	if(this.assetCode != null) {
		no_logic_kha_fox_displaylist_uixcomp_UIXGComponentManager.trackedAssetCodes.h[this.uniqueID] = this.assetCode;
	}
	if(this.className == null) {
		switch(this.rawUIXData.type) {
		case "Button":
			this.type = "button";
			this.classInstance = new no_logic_kha_fox_displaylist_uixcomp_UIXGButtonComponent(this);
			break;
		case "Custom":
			this.type = "custom";
			if(this.className != null) {
				this.className = this.className.split(" ").join("");
				var name = this.className;
				this.classDefinition = $hxClasses[name];
				this.classInstance = Type.createInstance(this.classDefinition,[this]);
			}
			break;
		case "Image":
			this.type = "image";
			this.classInstance = new no_logic_kha_fox_displaylist_uixcomp_UIXGImageComponent(this);
			break;
		case "Text":
			this.type = "text";
			this.classInstance = new no_logic_kha_fox_displaylist_uixcomp_UIXGTextComponent(this);
			break;
		case "Video":
			this.type = "video";
			this.classInstance = new no_logic_kha_fox_displaylist_uixcomp_UIXGVideoComponent(this);
			break;
		}
	} else {
		this.className.split(" ").join("");
		var name = this.className;
		this.classDefinition = $hxClasses[name];
		if(this.classDefinition != null) {
			this.classInstance = Type.createInstance(this.classDefinition,[this]);
		} else {
			haxe_Log.trace("Class \"" + this.className + "\" not found. ",{ fileName : "no/logic/kha/fox/displaylist/uixcomp/UIXGComponentManager.hx", lineNumber : 228, className : "no.logic.kha.fox.displaylist.uixcomp.UIXGComponentManager", methodName : "setupUIXGElement"});
		}
	}
	if(this.classProperties != null && this.classInstance != null) {
		var _g = 0;
		var _g1 = this.classProperties.length;
		while(_g < _g1) {
			var i = _g++;
			if(Object.prototype.hasOwnProperty.call(this.classProperties[i],"name") && Object.prototype.hasOwnProperty.call(this.classProperties[i],"value")) {
				var clName = this.classProperties[i].name;
				var clValue = this.classProperties[i].value;
				try {
					this.classInstance[clName] = clValue;
				} catch( _g2 ) {
					haxe_Log.trace("Error setting prop:",{ fileName : "no/logic/kha/fox/displaylist/uixcomp/UIXGComponentManager.hx", lineNumber : 256, className : "no.logic.kha.fox.displaylist.uixcomp.UIXGComponentManager", methodName : "processProperties", customParams : [this.classInstance.name,clName,clValue]});
				}
			}
		}
	}
	switch(this.originalMode) {
	case "alpha0":
		var _g = 0;
		var _g1 = this.target.children;
		while(_g < _g1.length) {
			var j = _g1[_g];
			++_g;
			if(j != null && !j.isComponentPart) {
				j.set_alpha(0);
			}
		}
		break;
	case "hide":
		var _g = 0;
		var _g1 = this.target.children;
		while(_g < _g1.length) {
			var j = _g1[_g];
			++_g;
			if(j != null && !j.isComponentPart) {
				HxOverrides.remove(this.target.children,j);
			}
		}
		break;
	case "remove":
		this.disposeOnRemove = false;
		break;
	}
	if(this.classInstance != null) {
		this.classInstance.preCreate();
	}
};
$hxClasses["no.logic.kha.fox.displaylist.uixcomp.UIXGElement"] = no_logic_kha_fox_displaylist_uixcomp_UIXGElement;
no_logic_kha_fox_displaylist_uixcomp_UIXGElement.__name__ = "no.logic.kha.fox.displaylist.uixcomp.UIXGElement";
no_logic_kha_fox_displaylist_uixcomp_UIXGElement.prototype = {
	target: null
	,type: null
	,rawUIXData: null
	,targetType: null
	,name: null
	,dispObjName: null
	,createdTime: null
	,uniqueID: null
	,className: null
	,classDefinition: null
	,classInstance: null
	,classProperties: null
	,centralCode: null
	,mode: null
	,bindVariable: null
	,disposeOnRemove: null
	,source: null
	,scaleMode: null
	,volume: null
	,clipping: null
	,autoPlay: null
	,loop: null
	,editable: null
	,upperCase: null
	,upperCaseFirstLetter: null
	,originalMode: null
	,notes: null
	,triggerOnChange: null
	,triggerOnPressEnter: null
	,triggerOneShot: null
	,mouseEnabled: null
	,mouseChildren: null
	,events: null
	,layout: null
	,audio: null
	,elementSoundID: null
	,elementSoundGroup: null
	,uid: null
	,assetCode: null
	,originalText: null
	,update: function() {
		if(this.classInstance != null) {
			this.classInstance.updateInternal();
			if(this.classInstance.updateEnabled && !this.classInstance.isDisposed) {
				this.classInstance.update();
			}
		}
	}
	,dispose: function() {
		if(this.classInstance != null) {
			this.classInstance.disposeComponent();
		}
		this.dispObjName = null;
		this.classInstance = null;
		this.classDefinition = null;
		this.classProperties = null;
		this.target = null;
		this.type = null;
		this.rawUIXData = null;
		this.targetType = null;
		this.name = null;
		this.createdTime = null;
		this.uniqueID = null;
		this.centralCode = null;
		this.mode = null;
		this.bindVariable = null;
		this.source = null;
		this.assetCode = null;
		this.scaleMode = null;
		this.originalMode = null;
		this.notes = null;
		this.events = null;
		this.layout = null;
		this.audio = null;
		this.originalText = null;
		this.elementSoundID = null;
		this.elementSoundGroup = null;
		this.uid = null;
	}
	,__class__: no_logic_kha_fox_displaylist_uixcomp_UIXGElement
};
var no_logic_kha_fox_displaylist_uixcomp_UIXGImageComponent = function(uixgElement) {
	no_logic_kha_fox_displaylist_uixcomp_UIXGComponent.call(this,uixgElement);
	this.init();
};
$hxClasses["no.logic.kha.fox.displaylist.uixcomp.UIXGImageComponent"] = no_logic_kha_fox_displaylist_uixcomp_UIXGImageComponent;
no_logic_kha_fox_displaylist_uixcomp_UIXGImageComponent.__name__ = "no.logic.kha.fox.displaylist.uixcomp.UIXGImageComponent";
no_logic_kha_fox_displaylist_uixcomp_UIXGImageComponent.__super__ = no_logic_kha_fox_displaylist_uixcomp_UIXGComponent;
no_logic_kha_fox_displaylist_uixcomp_UIXGImageComponent.prototype = $extend(no_logic_kha_fox_displaylist_uixcomp_UIXGComponent.prototype,{
	bitmap: null
	,init: function() {
		var scaleMode = no_logic_kha_fox_displaylist_ScaleMode.NONE;
		if(this.uixgElement.scaleMode != null) {
			switch(this.uixgElement.scaleMode) {
			case "fill":
				scaleMode = no_logic_kha_fox_displaylist_ScaleMode.FILL;
				break;
			case "fit":
				scaleMode = no_logic_kha_fox_displaylist_ScaleMode.FIT;
				break;
			case "strech":
				scaleMode = no_logic_kha_fox_displaylist_ScaleMode.STRETCH;
				break;
			default:
			}
		}
		this.bitmap = new no_logic_kha_fox_displaylist_Bitmap({ isComponentPart : true, source : this.uixgElement.source, clipping : this.uixgElement.clipping, scaleMode : scaleMode});
		this.target.addChild(this.bitmap);
		if(this.uixgElement != null) {
			this.updateFromBindings();
		}
	}
	,updateInternal: function() {
		if(this.bitmap != null) {
			this.bitmap.set_width(this.target.width);
			this.bitmap.set_height(this.target.height);
		}
	}
	,setSource: function(path) {
		if(this.bitmap != null) {
			if(path != null) {
				this.bitmap.load(path);
			} else if(this.bitmap.image != null) {
				this.bitmap.unload();
			}
		}
	}
	,updateFromBindings: function() {
		if(this.uixgElement.bindVariable != null) {
			if(this.uixgElement.bindVariable.indexOf("@") != -1) {
				this.setSource(this.getRelatedVariable(this.uixgElement.bindVariable));
			} else {
				this.setSource(no_logic_fox_Fox.getVar(this.uixgElement.bindVariable));
			}
		} else if(this.uixgElement.assetCode != null) {
			this.setSource(no_logic_fox_kontentum_Kontentum.fileURL + no_logic_fox_Fox.getAsset(this.uixgElement.assetCode,"file"));
		}
	}
	,dispose: function() {
		if(this.bitmap != null) {
			if(this.bitmap.parent != null) {
				this.bitmap.parent.removeChild(this.bitmap);
			}
			this.bitmap.dispose();
			this.bitmap = null;
		}
	}
	,__class__: no_logic_kha_fox_displaylist_uixcomp_UIXGImageComponent
});
var no_logic_kha_fox_displaylist_uixcomp_UIXGTextComponent = function(uixgElement) {
	no_logic_kha_fox_displaylist_uixcomp_UIXGComponent.call(this,uixgElement);
	this.init();
};
$hxClasses["no.logic.kha.fox.displaylist.uixcomp.UIXGTextComponent"] = no_logic_kha_fox_displaylist_uixcomp_UIXGTextComponent;
no_logic_kha_fox_displaylist_uixcomp_UIXGTextComponent.__name__ = "no.logic.kha.fox.displaylist.uixcomp.UIXGTextComponent";
no_logic_kha_fox_displaylist_uixcomp_UIXGTextComponent.__super__ = no_logic_kha_fox_displaylist_uixcomp_UIXGComponent;
no_logic_kha_fox_displaylist_uixcomp_UIXGTextComponent.prototype = $extend(no_logic_kha_fox_displaylist_uixcomp_UIXGComponent.prototype,{
	textField: null
	,originalText: null
	,init: function() {
		if(this.uixgElement != null) {
			this.textField = this.targetText;
			if(this.textField != null) {
				this.originalText = this.textField.text;
				this.setText(this.originalText);
			}
			this.updateFromBindings();
		}
	}
	,setTextFieldText: function(newText) {
		if(this.textField != null) {
			if(newText != null) {
				this.textField.set_text(newText);
			} else {
				this.textField.set_text("");
			}
		}
	}
	,setText: function(text) {
		if(this.textField != null) {
			if(text == null || text == "null" || text == "Null" || text == "NULL") {
				text = "";
			}
			this.setTextFieldText(this.parseText(text));
		}
	}
	,parseText: function(text) {
		var ptx;
		if(typeof(text) == "string") {
			ptx = text;
		} else {
			ptx = Std.string(text);
		}
		if(ptx != null) {
			if(this.uixgElement.upperCase) {
				ptx = this.checkTextCodes(ptx).toUpperCase();
			} else if(this.uixgElement.upperCaseFirstLetter) {
				ptx = this.checkTextCodes(no_logic_fox_utils_StringUtils.toFirstCharUppercase(ptx));
			} else {
				ptx = this.checkTextCodes(ptx);
			}
		}
		return ptx;
	}
	,updateFromBindings: function() {
		if(this.uixgElement.bindVariable != null) {
			if(this.uixgElement.bindVariable.indexOf("@") != -1) {
				this.setText(this.getRelatedVariable(this.uixgElement.bindVariable));
			} else {
				this.setText(no_logic_fox_Fox.getVar(this.uixgElement.bindVariable));
			}
		} else if(this.uixgElement.assetCode != null) {
			this.setText(no_logic_fox_Fox.getText(this.uixgElement.assetCode));
		}
	}
	,checkTextCodes: function(varText) {
		if(this.originalText != null && this.uixgElement.bindVariable != null && this.originalText.indexOf("{var}") != -1) {
			var nVar = no_logic_fox_Fox.getVar(this.uixgElement.bindVariable);
			if(nVar != null) {
				varText = StringTools.replace(this.originalText,"{var}",nVar);
			}
		} else if(this.originalText != null && this.uixgElement.assetCode != null && this.originalText.indexOf("{text}") != -1) {
			var nVar2 = no_logic_fox_Fox.getText(this.uixgElement.assetCode);
			if(nVar2 != null) {
				varText = StringTools.replace(this.originalText,"{text}",nVar2);
			}
		}
		return varText;
	}
	,dispose: function() {
		this.originalText = null;
		this.textField = null;
	}
	,__class__: no_logic_kha_fox_displaylist_uixcomp_UIXGTextComponent
});
var no_logic_kha_fox_displaylist_uixcomp_UIXGVideoComponent = function(uixgElement) {
	no_logic_kha_fox_displaylist_uixcomp_UIXGComponent.call(this,uixgElement);
	this.init();
};
$hxClasses["no.logic.kha.fox.displaylist.uixcomp.UIXGVideoComponent"] = no_logic_kha_fox_displaylist_uixcomp_UIXGVideoComponent;
no_logic_kha_fox_displaylist_uixcomp_UIXGVideoComponent.__name__ = "no.logic.kha.fox.displaylist.uixcomp.UIXGVideoComponent";
no_logic_kha_fox_displaylist_uixcomp_UIXGVideoComponent.__super__ = no_logic_kha_fox_displaylist_uixcomp_UIXGComponent;
no_logic_kha_fox_displaylist_uixcomp_UIXGVideoComponent.prototype = $extend(no_logic_kha_fox_displaylist_uixcomp_UIXGComponent.prototype,{
	video: null
	,init: function() {
		this.target.set_width(1920);
		this.target.set_height(1080);
		var scaleMode = no_logic_kha_fox_displaylist_ScaleMode.NONE;
		if(this.uixgElement.scaleMode != null) {
			switch(this.uixgElement.scaleMode) {
			case "fill":
				scaleMode = no_logic_kha_fox_displaylist_ScaleMode.FILL;
				break;
			case "fit":
				scaleMode = no_logic_kha_fox_displaylist_ScaleMode.FIT;
				break;
			case "strech":
				scaleMode = no_logic_kha_fox_displaylist_ScaleMode.STRETCH;
				break;
			default:
			}
		}
		this.video = new no_logic_kha_fox_displaylist_Video({ isComponentPart : true, source : this.uixgElement.source, width : 1, height : 1, clipping : this.uixgElement.clipping, scaleMode : scaleMode});
		this.target.addChild(this.video);
		if(this.uixgElement != null) {
			this.updateFromBindings();
		}
	}
	,updateInternal: function() {
		if(this.video != null) {
			this.video.set_width(this.target.width);
			this.video.set_height(this.target.height);
		}
	}
	,togglePause: function() {
		this.video.togglePause();
	}
	,restart: function() {
		this.video.restart();
	}
	,setSource: function(path) {
		if(this.video != null) {
			if(path != null) {
				this.video.playVideo(path);
			} else {
				this.video.stopVideo(true);
			}
		}
	}
	,updateFromBindings: function() {
		if(this.uixgElement.bindVariable != null) {
			if(this.uixgElement.bindVariable.indexOf("@") != -1) {
				this.setSource(this.getRelatedVariable(this.uixgElement.bindVariable));
			} else {
				this.setSource(no_logic_fox_Fox.getVar(this.uixgElement.bindVariable));
			}
		} else if(this.uixgElement.assetCode != null) {
			this.setSource(no_logic_fox_kontentum_Kontentum.fileURL + no_logic_fox_Fox.getAsset(this.uixgElement.assetCode,"file"));
		}
	}
	,dispose: function() {
		if(this.video != null) {
			if(this.video.parent != null) {
				this.video.parent.removeChild(this.video);
			}
			this.video.dispose();
			this.video = null;
		}
	}
	,__class__: no_logic_kha_fox_displaylist_uixcomp_UIXGVideoComponent
});
var no_logic_kha_fox_effects_text_BMFont = function(chars,image,charWidth,charHeight) {
	this.height = 0;
	this.width = 0;
	this.charScale = 1;
	this.charSpacing = 0;
	this.image = image;
	this.charWidth = charWidth;
	this.charHeight = charHeight;
	this.setup(chars);
};
$hxClasses["no.logic.kha.fox.effects.text.BMFont"] = no_logic_kha_fox_effects_text_BMFont;
no_logic_kha_fox_effects_text_BMFont.__name__ = "no.logic.kha.fox.effects.text.BMFont";
no_logic_kha_fox_effects_text_BMFont.prototype = {
	charMap: null
	,image: null
	,charWidth: null
	,charHeight: null
	,charSpacing: null
	,charScale: null
	,upperCaseOnly: null
	,width: null
	,height: null
	,setup: function(chars) {
		this.charMap = new haxe_ds_StringMap();
		var cx = 0;
		var cy = 0;
		var _g = 0;
		var _g1 = chars.length;
		while(_g < _g1) {
			this.charMap.h[chars.charAt(_g++)] = { x : cx, y : cy};
			cx += this.charWidth;
			if(cx > this.image.get_width()) {
				cx = 0;
				cy += this.charHeight;
			}
		}
		this.height = this.charHeight;
	}
	,drawString: function(g,x,y,str) {
		if(str == null || g == null) {
			return;
		}
		this.width = (this.charWidth + this.charSpacing) * this.charScale * str.length;
		if(this.upperCaseOnly) {
			str = str.toUpperCase();
		}
		var _g = 0;
		var _g1 = str.length;
		while(_g < _g1) {
			var p = this.charMap.h[str.charAt(_g++)];
			if(p != null) {
				g.drawScaledSubImage(this.image,p.x,p.y,this.charWidth,this.charHeight,x += (this.charWidth + this.charSpacing) * this.charScale,y,this.charWidth * this.charScale,this.charHeight * this.charScale);
			}
		}
	}
	,__class__: no_logic_kha_fox_effects_text_BMFont
};
var no_logic_kha_fox_fla_As3Interpreter = function() { };
$hxClasses["no.logic.kha.fox.fla.As3Interpreter"] = no_logic_kha_fox_fla_As3Interpreter;
no_logic_kha_fox_fla_As3Interpreter.__name__ = "no.logic.kha.fox.fla.As3Interpreter";
no_logic_kha_fox_fla_As3Interpreter.frameScriptEval = function(script,context) {
	if(script == null) {
		return;
	}
	script = script.split("\n").join("").split("\r").join("");
	var cmds = script.split(";");
	var _g = 0;
	while(_g < cmds.length) {
		var c = cmds[_g];
		++_g;
		if(c != "") {
			if(c.indexOf("(") != -1 && c.indexOf(")") != -1) {
				var cArr = c.split("(");
				if(cArr.length == 2) {
					no_logic_kha_fox_fla_As3Interpreter.executeCmd(cArr[0],context,cArr[1].split(")")[0]);
				} else if(cArr.length == 1) {
					no_logic_kha_fox_fla_As3Interpreter.executeCmd(cArr[0],context);
				}
			}
		}
	}
};
no_logic_kha_fox_fla_As3Interpreter.executeCmd = function(command,context,parameter) {
	if(command == null || command == "") {
		return;
	}
	command = command.split(" ").join("");
	if(parameter != null) {
		parameter = parameter.split("\"").join("");
	}
	var commandLC = command.toLowerCase();
	if(commandLC.indexOf("parent.") != -1 && context.parent != null) {
		context = context.parent;
		commandLC = commandLC.split("parent.").join("");
	}
	switch(commandLC) {
	case "gotoandplay":
		if(parameter == "random") {
			context.gotoAndPlayRandom();
		} else if(parameter != null) {
			context.gotoAndPlay(parameter);
		}
		break;
	case "gotoandstop":
		if(parameter == "random") {
			context.gotoAndStopRandom();
		} else if(parameter != null) {
			context.gotoAndStop(parameter);
		}
		break;
	case "play":
		if(parameter != null && parameter != "") {
			context.play(parseFloat(parameter));
		} else {
			context.play();
		}
		break;
	case "stop":
		if(parameter != null && parameter != "") {
			context.stop(parseFloat(parameter));
		} else {
			context.stop();
		}
		break;
	case "uix":
		if(parameter != null && parameter != "") {
			no_logic_fox_Fox.dispatch(parameter);
		}
		break;
	default:
	}
};
var no_logic_kha_fox_fla_Fla = function(bytesOrFile,onFlaReady,autoLoad,props) {
	if(autoLoad == null) {
		autoLoad = true;
	}
	this.noCache = false;
	if(props != null) {
		no_logic_fox_utils_ObjUtils.copyProperties(props,this);
	}
	if(onFlaReady != null) {
		this.onFlaReady = onFlaReady;
	}
	no_logic_kha_fox_displaylist_Sprite.call(this,props);
	this.flaZip = new no_logic_kha_fox_utils_ZipFile(bytesOrFile,false,$bind(this,this.ready));
	this.flaZip.noCache = this.noCache;
	this.flaZip.load();
};
$hxClasses["no.logic.kha.fox.fla.Fla"] = no_logic_kha_fox_fla_Fla;
no_logic_kha_fox_fla_Fla.__name__ = "no.logic.kha.fox.fla.Fla";
no_logic_kha_fox_fla_Fla.get = function(flaName) {
	if(flaName != null && Object.prototype.hasOwnProperty.call(no_logic_kha_fox_fla_Fla.flas.h,flaName)) {
		return no_logic_kha_fox_fla_Fla.flas.h[flaName];
	} else {
		var n = haxe_ds_StringMap.keysIterator(no_logic_kha_fox_fla_Fla.flas.h);
		while(n.hasNext()) {
			var n1 = n.next();
			return no_logic_kha_fox_fla_Fla.flas.h[n1];
		}
		return null;
	}
};
no_logic_kha_fox_fla_Fla.__super__ = no_logic_kha_fox_displaylist_Sprite;
no_logic_kha_fox_fla_Fla.prototype = $extend(no_logic_kha_fox_displaylist_Sprite.prototype,{
	flaZip: null
	,library: null
	,l: null
	,domXML: null
	,flaTimeline: null
	,onFlaReady: null
	,noCache: null
	,ready: function(z) {
		if(z != null) {
			this.library = new no_logic_kha_fox_fla_FlaLibrary(z,this);
			this.l = this.library;
			this.set_name(this.flaZip.file);
			var domXML = z.getTextFile("DOMDocument.xml");
			if(domXML == null) {
				return;
			}
			domXML = no_logic_kha_fox_fla_FlaLibrary.cleanTags(domXML);
			this.parseDOM(Xml.parse(domXML));
		} else {
			haxe_Log.trace("Error: Could not open zip file!",{ fileName : "no/logic/kha/fox/fla/Fla.hx", lineNumber : 97, className : "no.logic.kha.fox.fla.Fla", methodName : "ready"});
		}
	}
	,parseDOM: function(domXML) {
		this.domXML = domXML;
		var x = domXML.firstElement();
		if(x.nodeType != Xml.Document && x.nodeType != Xml.Element) {
			throw haxe_Exception.thrown("Invalid nodeType " + (x.nodeType == null ? "null" : XmlType.toString(x.nodeType)));
		}
		var xa = x;
		this.set_width(Std.parseInt(haxe_xml__$Access_AttribAccess.resolve(xa,"width")));
		this.set_height(Std.parseInt(haxe_xml__$Access_AttribAccess.resolve(xa,"height")));
		this.frameRate = Std.parseInt(haxe_xml__$Access_AttribAccess.resolve(xa,"frameRate"));
		if(haxe_xml__$Access_HasNodeAccess.resolve(xa,"backgroundColor")) {
			this.fillColor = kha_Color.fromString(haxe_xml__$Access_AttribAccess.resolve(xa,"backgroundColor"));
		}
		this.library.preloadMedia(xa);
		this.library.parseSymbols(xa);
		this.checkMediaReady();
	}
	,checkMediaReady: function() {
		if(this.library.bitmapsReady == true) {
			this.flaTimeline = new no_logic_kha_fox_fla_FlaTimeline(this.domXML.firstElement(),this,"rootFLA_");
			no_logic_kha_fox_fla_Fla.flas.h["fla"] = this;
			if(this.onFlaReady != null) {
				this.onFlaReady(this);
			}
		} else {
			haxe_Timer.delay($bind(this,this.checkMediaReady),17);
		}
	}
	,getRoot: function(flaName) {
		if(this.flaTimeline != null) {
			this.setTimelineDataFromFLA(this.flaTimeline);
			return this;
		} else {
			return null;
		}
	}
	,getSymbol: function(symbolName) {
		if(this.l != null && Object.prototype.hasOwnProperty.call(this.l.symbols.h,symbolName)) {
			var fs = this.l.symbols.h[symbolName];
			if(fs != null) {
				return no_logic_kha_fox_fla_FlaSymbol.createNewFromSymbol(fs);
			} else {
				return null;
			}
		}
		return null;
	}
	,getSymbolList: function() {
		return this.l.getSymbolList();
	}
	,getImage: function(name) {
		return this.l.getImage(name);
	}
	,getBitmap: function(name) {
		return this.l.getBitmap(name);
	}
	,getImageList: function() {
		return this.l.getImageList();
	}
	,getDOMXml: function(symbolName) {
		if(symbolName == null) {
			return this.domXML;
		} else if(this.l != null && Object.prototype.hasOwnProperty.call(this.l.symbols.h,symbolName)) {
			var fs = this.l.symbols.h[symbolName];
			if(fs != null) {
				return fs.xml;
			} else {
				return null;
			}
		} else {
			return null;
		}
	}
	,dispose: function() {
		no_logic_kha_fox_displaylist_Sprite.prototype.dispose.call(this);
	}
	,__class__: no_logic_kha_fox_fla_Fla
});
var no_logic_kha_fox_fla_FlaElement = function(DOMElement,parentFrame,zIndex,ap) {
	this.alpha = 1;
	this.disposeOnRemove = true;
	this.scaleY = 1;
	this.scaleX = 1;
	this.scale = 1;
	this.d = 1;
	this.c = 1;
	this.b = 1;
	this.a = 1;
	this.centery = 0;
	this.centerx = 0;
	this.rotation = 0;
	this.zIndex = zIndex;
	this.parentFrame = parentFrame;
	if(DOMElement.nodeType != Xml.Document && DOMElement.nodeType != Xml.Element) {
		throw haxe_Exception.thrown("Invalid nodeType " + (DOMElement.nodeType == null ? "null" : XmlType.toString(DOMElement.nodeType)));
	}
	var xa = DOMElement;
	if(haxe_xml__$Access_HasAttribAccess.resolve(xa,"x")) {
		this.x = parseFloat(haxe_xml__$Access_AttribAccess.resolve(xa,"x"));
	} else if(haxe_xml__$Access_HasAttribAccess.resolve(xa,"left")) {
		this.x = parseFloat(haxe_xml__$Access_AttribAccess.resolve(xa,"left"));
	}
	if(haxe_xml__$Access_HasAttribAccess.resolve(xa,"y")) {
		this.y = parseFloat(haxe_xml__$Access_AttribAccess.resolve(xa,"y"));
	} else if(haxe_xml__$Access_HasAttribAccess.resolve(xa,"top")) {
		this.y = parseFloat(haxe_xml__$Access_AttribAccess.resolve(xa,"top"));
	}
	if(haxe_xml__$Access_HasAttribAccess.resolve(xa,"width")) {
		this.width = parseFloat(haxe_xml__$Access_AttribAccess.resolve(xa,"width"));
	} else if(haxe_xml__$Access_HasAttribAccess.resolve(xa,"objectWidth")) {
		this.width = parseFloat(haxe_xml__$Access_AttribAccess.resolve(xa,"objectWidth"));
	}
	if(haxe_xml__$Access_HasAttribAccess.resolve(xa,"height")) {
		this.height = parseFloat(haxe_xml__$Access_AttribAccess.resolve(xa,"height"));
	} else if(haxe_xml__$Access_HasAttribAccess.resolve(xa,"objectHeight")) {
		this.height = parseFloat(haxe_xml__$Access_AttribAccess.resolve(xa,"objectHeight"));
	}
	if(haxe_xml__$Access_HasNodeAccess.resolve(xa,"matrix")) {
		if(haxe_xml__$Access_HasAttribAccess.resolve(haxe_xml__$Access_NodeAccess.resolve(haxe_xml__$Access_NodeAccess.resolve(xa,"matrix"),"Matrix"),"tx")) {
			this.tx = parseFloat(haxe_xml__$Access_AttribAccess.resolve(haxe_xml__$Access_NodeAccess.resolve(haxe_xml__$Access_NodeAccess.resolve(xa,"matrix"),"Matrix"),"tx"));
		}
		if(haxe_xml__$Access_HasAttribAccess.resolve(haxe_xml__$Access_NodeAccess.resolve(haxe_xml__$Access_NodeAccess.resolve(xa,"matrix"),"Matrix"),"ty")) {
			this.ty = parseFloat(haxe_xml__$Access_AttribAccess.resolve(haxe_xml__$Access_NodeAccess.resolve(haxe_xml__$Access_NodeAccess.resolve(xa,"matrix"),"Matrix"),"ty"));
		}
		if(haxe_xml__$Access_HasAttribAccess.resolve(haxe_xml__$Access_NodeAccess.resolve(haxe_xml__$Access_NodeAccess.resolve(xa,"matrix"),"Matrix"),"a")) {
			this.a = parseFloat(haxe_xml__$Access_AttribAccess.resolve(haxe_xml__$Access_NodeAccess.resolve(haxe_xml__$Access_NodeAccess.resolve(xa,"matrix"),"Matrix"),"a"));
		}
		if(haxe_xml__$Access_HasAttribAccess.resolve(haxe_xml__$Access_NodeAccess.resolve(haxe_xml__$Access_NodeAccess.resolve(xa,"matrix"),"Matrix"),"b")) {
			this.b = parseFloat(haxe_xml__$Access_AttribAccess.resolve(haxe_xml__$Access_NodeAccess.resolve(haxe_xml__$Access_NodeAccess.resolve(xa,"matrix"),"Matrix"),"b"));
		}
		if(haxe_xml__$Access_HasAttribAccess.resolve(haxe_xml__$Access_NodeAccess.resolve(haxe_xml__$Access_NodeAccess.resolve(xa,"matrix"),"Matrix"),"c")) {
			this.c = parseFloat(haxe_xml__$Access_AttribAccess.resolve(haxe_xml__$Access_NodeAccess.resolve(haxe_xml__$Access_NodeAccess.resolve(xa,"matrix"),"Matrix"),"c"));
		}
		if(haxe_xml__$Access_HasAttribAccess.resolve(haxe_xml__$Access_NodeAccess.resolve(haxe_xml__$Access_NodeAccess.resolve(xa,"matrix"),"Matrix"),"d")) {
			this.d = parseFloat(haxe_xml__$Access_AttribAccess.resolve(haxe_xml__$Access_NodeAccess.resolve(haxe_xml__$Access_NodeAccess.resolve(xa,"matrix"),"Matrix"),"d"));
		}
		this.scaleX = this.a;
		this.scaleY = this.a;
	}
	if(haxe_xml__$Access_HasNodeAccess.resolve(xa,"transformationPoint")) {
		if(haxe_xml__$Access_HasAttribAccess.resolve(haxe_xml__$Access_NodeAccess.resolve(haxe_xml__$Access_NodeAccess.resolve(xa,"transformationPoint"),"Point"),"x")) {
			this.centerx = parseFloat(haxe_xml__$Access_AttribAccess.resolve(haxe_xml__$Access_NodeAccess.resolve(haxe_xml__$Access_NodeAccess.resolve(xa,"transformationPoint"),"Point"),"x"));
		}
		if(haxe_xml__$Access_HasAttribAccess.resolve(haxe_xml__$Access_NodeAccess.resolve(haxe_xml__$Access_NodeAccess.resolve(xa,"transformationPoint"),"Point"),"y")) {
			this.centery = parseFloat(haxe_xml__$Access_AttribAccess.resolve(haxe_xml__$Access_NodeAccess.resolve(haxe_xml__$Access_NodeAccess.resolve(xa,"transformationPoint"),"Point"),"y"));
		}
	}
	if(haxe_xml__$Access_HasAttribAccess.resolve(xa,"libraryItemName")) {
		this.libraryItemName = haxe_xml__$Access_AttribAccess.resolve(xa,"libraryItemName");
	}
	var tmp;
	if(xa.nodeType == Xml.Document) {
		tmp = "Document";
	} else {
		if(xa.nodeType != Xml.Element) {
			throw haxe_Exception.thrown("Bad node type, expected Element but found " + (xa.nodeType == null ? "null" : XmlType.toString(xa.nodeType)));
		}
		tmp = xa.nodeName;
	}
	this.type = tmp;
	if(haxe_xml__$Access_HasAttribAccess.resolve(xa,"name")) {
		this.name = haxe_xml__$Access_AttribAccess.resolve(xa,"name");
		var dispObjName = this.name;
		if(dispObjName == null ? false : dispObjName.indexOf("_UIX_") != -1) {
			var spx = this.name.split("_UIX_").join("").split("_");
			spx.splice(0,1);
			var jstr = Std.string(haxe_crypto_Base64.decode(spx.join("").split("_").join("+").split("$").join("/")));
			var rawUIXData = null;
			try {
				rawUIXData = JSON.parse(jstr);
			} catch( _g ) {
				haxe_Log.trace("Error decoding UIX data",{ fileName : "no/logic/kha/fox/displaylist/uixcomp/UIXGComponentManager.hx", lineNumber : 129, className : "no.logic.kha.fox.displaylist.uixcomp.UIXGComponentManager", methodName : "constructUIXData"});
			}
			this.uixData = rawUIXData;
		}
	} else {
		this.name = this.generateName();
	}
	this.uuid = ap + " elName:" + this.name;
	if(haxe_xml__$Access_HasNodeAccess.resolve(xa,"color")) {
		var xaCol = haxe_xml__$Access_NodeAccess.resolve(xa,"color");
		if(xaCol != null) {
			if(haxe_xml__$Access_HasNodeAccess.resolve(xaCol,"Color")) {
				if(haxe_xml__$Access_HasAttribAccess.resolve(haxe_xml__$Access_NodeAccess.resolve(xaCol,"Color"),"alphaMultiplier")) {
					this.alpha = parseFloat(haxe_xml__$Access_AttribAccess.resolve(haxe_xml__$Access_NodeAccess.resolve(xaCol,"Color"),"alphaMultiplier"));
				}
				if(haxe_xml__$Access_HasAttribAccess.resolve(haxe_xml__$Access_NodeAccess.resolve(xaCol,"Color"),"tintMultiplier")) {
					this.tintMultiplier = parseFloat(haxe_xml__$Access_AttribAccess.resolve(haxe_xml__$Access_NodeAccess.resolve(xaCol,"Color"),"tintMultiplier"));
				}
				if(haxe_xml__$Access_HasAttribAccess.resolve(haxe_xml__$Access_NodeAccess.resolve(xaCol,"Color"),"tintColor")) {
					var tstr = haxe_xml__$Access_AttribAccess.resolve(haxe_xml__$Access_NodeAccess.resolve(xaCol,"Color"),"tintColor");
					tstr = tstr.split("#").join("#FF");
					this.color = kha_Color.fromString(tstr);
				}
			}
		}
	}
	if(haxe_xml__$Access_HasAttribAccess.resolve(xa,"isVisible")) {
		this.visible = no_logic_fox_utils_Convert.toBool(haxe_xml__$Access_AttribAccess.resolve(xa,"isVisible"));
	} else {
		this.visible = true;
	}
	switch(this.type) {
	case "DOMBitmapInstance":
		if(this.x != null && this.tx != null) {
			this.x += this.tx;
		} else if(this.x == null && this.tx != null) {
			this.x = this.tx;
		}
		if(this.y != null && this.ty != null) {
			this.y += this.ty;
		} else if(this.y == null && this.ty != null) {
			this.y = this.ty;
		}
		this.parseBitmapInstance(xa);
		if(this.x == null) {
			this.x = 0;
		}
		if(this.y == null) {
			this.y = 0;
		}
		if(this.width == null) {
			this.width = 64;
		}
		if(this.height == null) {
			this.height = 64;
		}
		break;
	case "DOMDynamicText":case "DOMStaticText":
		if(this.x != null && this.tx != null) {
			this.x += this.tx;
		} else if(this.x == null && this.tx != null) {
			this.x = this.tx;
		}
		if(this.y != null && this.ty != null) {
			this.y += this.ty;
		} else if(this.y == null && this.ty != null) {
			this.y = this.ty;
		}
		this.parseText(xa,true);
		break;
	case "DOMOvalObject":case "DOMRectangleObject":case "DOMShape":
		if(this.x != null && this.tx != null) {
			this.x += this.tx;
		} else if(this.x == null && this.tx != null) {
			this.x = this.tx;
		}
		if(this.y != null && this.ty != null) {
			this.y += this.ty;
		} else if(this.y == null && this.ty != null) {
			this.y = this.ty;
		}
		this.parseShape(xa);
		break;
	case "DOMSymbolInstance":
		if(this.x != null && this.tx != null) {
			this.x += this.tx;
		} else if(this.x == null && this.tx != null) {
			this.x = this.tx;
		}
		if(this.y != null && this.ty != null) {
			this.y += this.ty;
		} else if(this.y == null && this.ty != null) {
			this.y = this.ty;
		}
		this.parseSymbolInstance(xa);
		break;
	default:
	}
};
$hxClasses["no.logic.kha.fox.fla.FlaElement"] = no_logic_kha_fox_fla_FlaElement;
no_logic_kha_fox_fla_FlaElement.__name__ = "no.logic.kha.fox.fla.FlaElement";
no_logic_kha_fox_fla_FlaElement.prototype = {
	parentFrame: null
	,type: null
	,uuid: null
	,zIndex: null
	,name: null
	,align: null
	,x: null
	,y: null
	,tx: null
	,ty: null
	,width: null
	,height: null
	,rotation: null
	,centerx: null
	,centery: null
	,a: null
	,b: null
	,c: null
	,d: null
	,scale: null
	,scaleX: null
	,scaleY: null
	,libraryItemName: null
	,disposeOnRemove: null
	,tintMultiplier: null
	,tintColor: null
	,uixData: null
	,text: null
	,aliasText: null
	,autoKern: null
	,lineHeight: null
	,lineSpacing: null
	,letterSpacing: null
	,lineType: null
	,fontSize: null
	,bitmapSize: null
	,face: null
	,font: null
	,fillColor: null
	,color: null
	,alpha: null
	,visible: null
	,dynamicText: null
	,shapeData: null
	,symbolType: null
	,loop: null
	,timeline: null
	,parseText: function(xa,isDynamicText) {
		this.dynamicText = isDynamicText;
		if(haxe_xml__$Access_HasAttribAccess.resolve(xa,"lineType")) {
			this.lineType = haxe_xml__$Access_AttribAccess.resolve(xa,"lineType");
		}
		if(haxe_xml__$Access_HasNodeAccess.resolve(xa,"textRuns") && haxe_xml__$Access_HasNodeAccess.resolve(haxe_xml__$Access_NodeAccess.resolve(xa,"textRuns"),"DOMTextRun")) {
			var tn = haxe_xml__$Access_NodeAccess.resolve(haxe_xml__$Access_NodeAccess.resolve(xa,"textRuns"),"DOMTextRun");
			if(haxe_xml__$Access_HasNodeAccess.resolve(tn,"characters")) {
				this.text = haxe_xml_Access.get_innerData(haxe_xml__$Access_NodeAccess.resolve(tn,"characters"));
			}
			if(haxe_xml__$Access_HasNodeAccess.resolve(tn,"textAttrs") && haxe_xml__$Access_HasNodeAccess.resolve(haxe_xml__$Access_NodeAccess.resolve(tn,"textAttrs"),"DOMTextAttrs")) {
				var ta = haxe_xml__$Access_NodeAccess.resolve(haxe_xml__$Access_NodeAccess.resolve(tn,"textAttrs"),"DOMTextAttrs");
				if(haxe_xml__$Access_HasAttribAccess.resolve(ta,"aliasText")) {
					this.aliasText = no_logic_fox_utils_Convert.toBool(haxe_xml__$Access_AttribAccess.resolve(ta,"aliasText"));
				}
				if(haxe_xml__$Access_HasAttribAccess.resolve(ta,"autoKern")) {
					this.autoKern = no_logic_fox_utils_Convert.toBool(haxe_xml__$Access_AttribAccess.resolve(ta,"autoKern"));
				}
				if(haxe_xml__$Access_HasAttribAccess.resolve(ta,"lineType")) {
					this.lineType = haxe_xml__$Access_AttribAccess.resolve(ta,"lineType");
				}
				if(haxe_xml__$Access_HasAttribAccess.resolve(ta,"alignment")) {
					switch(haxe_xml__$Access_AttribAccess.resolve(ta,"alignment")) {
					case "center":
						this.align = no_logic_kha_fox_displaylist_layout_Align.center;
						break;
					case "justify":
						this.align = no_logic_kha_fox_displaylist_layout_Align.justify;
						break;
					case "left":
						this.align = no_logic_kha_fox_displaylist_layout_Align.left;
						break;
					case "right":
						this.align = no_logic_kha_fox_displaylist_layout_Align.right;
						break;
					default:
					}
				}
				if(haxe_xml__$Access_HasAttribAccess.resolve(ta,"size")) {
					this.fontSize = Math.floor(Std.parseInt(haxe_xml__$Access_AttribAccess.resolve(ta,"size")) * 1.0);
				}
				if(haxe_xml__$Access_HasAttribAccess.resolve(ta,"lineHeight")) {
					this.lineHeight = parseFloat(haxe_xml__$Access_AttribAccess.resolve(ta,"lineHeight"));
				}
				if(haxe_xml__$Access_HasAttribAccess.resolve(ta,"letterSpacing")) {
					this.letterSpacing = parseFloat(haxe_xml__$Access_AttribAccess.resolve(ta,"letterSpacing"));
				}
				if(haxe_xml__$Access_HasAttribAccess.resolve(ta,"lineSpacing")) {
					this.lineSpacing = parseFloat(haxe_xml__$Access_AttribAccess.resolve(ta,"lineSpacing"));
				}
				if(haxe_xml__$Access_HasAttribAccess.resolve(ta,"bitmapSize")) {
					this.bitmapSize = Std.parseInt(haxe_xml__$Access_AttribAccess.resolve(ta,"bitmapSize"));
				}
				if(haxe_xml__$Access_HasAttribAccess.resolve(ta,"face")) {
					this.face = haxe_xml__$Access_AttribAccess.resolve(ta,"face");
					if(this.face != null) {
						this.face = this.face.split(" ").join("_").split("-").join("_");
					}
					if(kha_Assets.fonts.get(this.face) != null) {
						this.font = kha_Assets.fonts.get(this.face);
					}
				}
				if(haxe_xml__$Access_HasAttribAccess.resolve(ta,"fillColor")) {
					this.color = kha_Color.fromString(haxe_xml__$Access_AttribAccess.resolve(ta,"fillColor"));
				}
			}
		}
	}
	,parseSymbolInstance: function(xa) {
		if(this.libraryItemName != null) {
			var l = this.parentFrame.parentLayer.parentTimeline.fla.l;
			if(Object.prototype.hasOwnProperty.call(l.symbols.h,this.libraryItemName)) {
				var fs = l.symbols.h[this.libraryItemName];
				if(fs != null) {
					this.timeline = fs.timeline;
				}
			} else {
				l.setSymbolData(this.libraryItemName);
				var fs = l.symbols.h[this.libraryItemName];
				if(fs != null) {
					this.timeline = fs.timeline;
				} else {
					haxe_Log.trace("lib item not found: " + this.libraryItemName,{ fileName : "no/logic/kha/fox/fla/FlaElement.hx", lineNumber : 373, className : "no.logic.kha.fox.fla.FlaElement", methodName : "parseSymbolInstance"});
				}
			}
		}
		if(haxe_xml__$Access_HasAttribAccess.resolve(xa,"symbolType")) {
			this.symbolType = haxe_xml__$Access_AttribAccess.resolve(xa,"symbolType");
		}
		if(haxe_xml__$Access_HasAttribAccess.resolve(xa,"loop")) {
			this.loop = haxe_xml__$Access_AttribAccess.resolve(xa,"loop");
		}
	}
	,parseShape: function(xa) {
		this.shapeData = no_logic_kha_fox_displaylist_functional_ShapeParser.parse(xa);
	}
	,parseBitmapInstance: function(xa) {
		if(haxe_xml__$Access_HasAttribAccess.resolve(xa,"libraryItemName")) {
			this.libraryItemName = haxe_xml__$Access_AttribAccess.resolve(xa,"libraryItemName");
		}
	}
	,instantiateDisplayObject: function(parentUUID) {
		if(parentUUID == null) {
			parentUUID = "";
		}
		switch(this.type) {
		case "DOMBitmapInstance":
			return new no_logic_kha_fox_displaylist_Bitmap(this.copyParameters(this.type,parentUUID));
		case "DOMDynamicText":case "DOMStaticText":
			return new no_logic_kha_fox_displaylist_Text(this.copyParameters(this.type,parentUUID));
		case "DOMOvalObject":case "DOMRectangleObject":case "DOMShape":
			return new no_logic_kha_fox_displaylist_Shape(this.copyParameters(this.type,parentUUID));
		case "DOMSymbolInstance":
			return no_logic_kha_fox_fla_FlaSymbol.createNewFromElement(this,parentUUID);
		default:
			return null;
		}
	}
	,copyParameters: function(pType,parentUUID) {
		if(parentUUID == null) {
			parentUUID = "";
		}
		var r = { };
		if(this.x != null) {
			r.x = this.x;
		}
		if(this.y != null) {
			r.y = this.y;
		}
		if(this.width != null) {
			r.width = this.width;
		}
		if(this.height != null) {
			r.height = this.height;
		}
		r.rotation = this.rotation;
		r.type = this.type;
		r.uuid = parentUUID + "/" + this.uuid;
		r.scaleX = this.scaleX;
		r.scaleY = this.scaleY;
		r.libraryItemName = this.libraryItemName;
		r.disposeOnRemove = this.disposeOnRemove;
		r.visible = this.visible;
		r.uixData = this.uixData;
		if(this.alpha != null) {
			r.alpha = this.alpha;
		}
		if(this.color != null) {
			r.color = this.color;
		}
		if(this.tintColor != null) {
			r.tintColor = this.tintColor;
		}
		switch(this.type) {
		case "DOMBitmapInstance":
			r.libraryItemName = this.libraryItemName;
			r.fillColor = this.fillColor;
			r.color = this.color;
			break;
		case "DOMDynamicText":case "DOMStaticText":
			r.text = this.text;
			r.fontSize = this.fontSize;
			r.face = this.face;
			r.fillColor = this.fillColor;
			r.color = this.color;
			r.lineType = this.lineType;
			r.lineHeight = this.lineHeight;
			r.letterSpacing = this.letterSpacing;
			r.lineSpacing = this.lineSpacing;
			r.textAlign = this.align;
			if(this.lineType == "multiline") {
				r.isMultiline = true;
			}
			break;
		case "DOMOvalObject":case "DOMRectangleObject":case "DOMShape":
			r.fillColor = this.fillColor;
			r.color = this.color;
			r.shapeData = this.shapeData;
			break;
		case "DOMSymbolInstance":
			r.fillColor = this.fillColor;
			r.color = this.color;
			break;
		default:
			return null;
		}
		return r;
	}
	,generateName: function() {
		if(this.type == "DOMSymbolInstance") {
			return this.type + "_" + this.libraryItemName;
		} else {
			return this.type + no_logic_kha_fox_fla_FlaElement.elementCount++;
		}
	}
	,__class__: no_logic_kha_fox_fla_FlaElement
};
var no_logic_kha_fox_fla_FlaFrame = function(DOMFrame,parentLayer,ap) {
	this.alpha = 1;
	this.duration = 1;
	this.parentLayer = parentLayer;
	this.elements = [];
	if(DOMFrame.nodeType != Xml.Document && DOMFrame.nodeType != Xml.Element) {
		throw haxe_Exception.thrown("Invalid nodeType " + (DOMFrame.nodeType == null ? "null" : XmlType.toString(DOMFrame.nodeType)));
	}
	var xa = DOMFrame;
	this.index = Std.parseInt(haxe_xml__$Access_AttribAccess.resolve(xa,"index")) + 1;
	if(haxe_xml__$Access_HasAttribAccess.resolve(xa,"duration")) {
		this.duration = Std.parseInt(haxe_xml__$Access_AttribAccess.resolve(xa,"duration"));
	}
	if(haxe_xml__$Access_HasAttribAccess.resolve(xa,"name")) {
		this.name = haxe_xml__$Access_AttribAccess.resolve(xa,"name");
	}
	if(haxe_xml__$Access_HasAttribAccess.resolve(xa,"labelType")) {
		this.labelType = haxe_xml__$Access_AttribAccess.resolve(xa,"labelType");
	}
	if(haxe_xml__$Access_HasAttribAccess.resolve(xa,"keyMode")) {
		this.keyMode = Std.parseInt(haxe_xml__$Access_AttribAccess.resolve(xa,"keyMode"));
	}
	if(haxe_xml__$Access_HasAttribAccess.resolve(xa,"tweenType")) {
		this.tweenType = haxe_xml__$Access_AttribAccess.resolve(xa,"tweenType");
	}
	if(haxe_xml__$Access_HasAttribAccess.resolve(xa,"easeMethodName")) {
		this.easeMethodName = haxe_xml__$Access_AttribAccess.resolve(xa,"easeMethodName");
	}
	if(haxe_xml__$Access_HasAttribAccess.resolve(xa,"motionTweenSnap")) {
		this.motionTweenSnap = no_logic_fox_utils_Convert.toBool(haxe_xml__$Access_AttribAccess.resolve(xa,"motionTweenSnap"));
	}
	ap += " frIndex:" + this.index;
	if(haxe_xml__$Access_HasNodeAccess.resolve(xa,"Actionscript") && haxe_xml__$Access_HasNodeAccess.resolve(haxe_xml__$Access_NodeAccess.resolve(xa,"Actionscript"),"script")) {
		this.actionScript = Std.string(haxe_xml_Access.get_innerData(haxe_xml__$Access_NodeAccess.resolve(haxe_xml__$Access_NodeAccess.resolve(xa,"Actionscript"),"script")));
	}
	if(haxe_xml__$Access_HasNodeAccess.resolve(xa,"frameColor")) {
		var xaCol = haxe_xml__$Access_NodeAccess.resolve(xa,"frameColor");
		if(xaCol != null) {
			if(haxe_xml__$Access_HasNodeAccess.resolve(xaCol,"Color")) {
				if(haxe_xml__$Access_HasAttribAccess.resolve(haxe_xml__$Access_NodeAccess.resolve(xaCol,"Color"),"alphaMultiplier")) {
					this.alpha = parseFloat(haxe_xml__$Access_AttribAccess.resolve(haxe_xml__$Access_NodeAccess.resolve(xaCol,"Color"),"alphaMultiplier"));
				}
			}
		}
	}
	if(this.labelType == "name" && this.name != null) {
		parentLayer.parentTimeline.frameLabels.h[this.name] = this.index;
	}
	var elNr = 0;
	var e = haxe_xml__$Access_NodeAccess.resolve(xa,"elements").elements();
	while(e.hasNext()) {
		var e1 = e.next();
		this.elements.push(new no_logic_kha_fox_fla_FlaElement(e1,this,elNr,ap + " elNr:" + elNr));
		++elNr;
	}
};
$hxClasses["no.logic.kha.fox.fla.FlaFrame"] = no_logic_kha_fox_fla_FlaFrame;
no_logic_kha_fox_fla_FlaFrame.__name__ = "no.logic.kha.fox.fla.FlaFrame";
no_logic_kha_fox_fla_FlaFrame.prototype = {
	parentLayer: null
	,index: null
	,duration: null
	,name: null
	,labelType: null
	,tweenType: null
	,easeMethodName: null
	,motionTweenSnap: null
	,keyMode: null
	,actionScript: null
	,alpha: null
	,elements: null
	,__class__: no_logic_kha_fox_fla_FlaFrame
};
var no_logic_kha_fox_fla_FlaLayer = function(DOMLayer,parentTimeline,zIndex,ap) {
	this.visible = true;
	this.parentTimeline = parentTimeline;
	this.zIndex = zIndex;
	this.keyFrames = [];
	if(DOMLayer.nodeType != Xml.Document && DOMLayer.nodeType != Xml.Element) {
		throw haxe_Exception.thrown("Invalid nodeType " + (DOMLayer.nodeType == null ? "null" : XmlType.toString(DOMLayer.nodeType)));
	}
	var xa = DOMLayer;
	this.name = haxe_xml__$Access_AttribAccess.resolve(xa,"name");
	this.color = kha_Color.fromString(haxe_xml__$Access_AttribAccess.resolve(xa,"color"));
	var v = DOMLayer.get("visible");
	if(v != null) {
		this.visible = no_logic_fox_utils_Convert.toBool(v);
	}
	if(this.visible == false) {
		return;
	}
	ap += " layerName:" + this.name + " layerIndex:" + zIndex;
	var _g = 0;
	var _g1 = haxe_xml__$Access_NodeListAccess.resolve(haxe_xml__$Access_NodeAccess.resolve(xa,"frames"),"DOMFrame");
	while(_g < _g1.length) {
		var nf = new no_logic_kha_fox_fla_FlaFrame(_g1[_g++],this,ap);
		this.numFrames = nf.index + nf.duration - 1;
		this.keyFrames.push(nf);
	}
};
$hxClasses["no.logic.kha.fox.fla.FlaLayer"] = no_logic_kha_fox_fla_FlaLayer;
no_logic_kha_fox_fla_FlaLayer.__name__ = "no.logic.kha.fox.fla.FlaLayer";
no_logic_kha_fox_fla_FlaLayer.prototype = {
	parentTimeline: null
	,name: null
	,numFrames: null
	,color: null
	,visible: null
	,keyFrames: null
	,zIndex: null
	,__class__: no_logic_kha_fox_fla_FlaLayer
};
var no_logic_kha_fox_fla_FlaLibrary = function(flaZip,parent) {
	this.symbols = new haxe_ds_StringMap();
	this.bitmaps = new haxe_ds_StringMap();
	this.flaZip = flaZip;
	this.parent = parent;
	this.bitmapsReady = true;
};
$hxClasses["no.logic.kha.fox.fla.FlaLibrary"] = no_logic_kha_fox_fla_FlaLibrary;
no_logic_kha_fox_fla_FlaLibrary.__name__ = "no.logic.kha.fox.fla.FlaLibrary";
no_logic_kha_fox_fla_FlaLibrary.cleanTags = function(domXML) {
	domXML = domXML.split("&#xD;").join("\n");
	domXML = domXML.split("\r").join("").split("\t").join("");
	domXML = domXML.split("<DOMGroup selected=\"true\">").join("");
	domXML = domXML.split("<DOMGroup selected=\"false\">").join("");
	domXML = domXML.split("<DOMGroup>").join("");
	domXML = domXML.split("</DOMGroup>").join("");
	domXML = domXML.split("<members>").join("");
	domXML = domXML.split("</members>").join("");
	return domXML;
};
no_logic_kha_fox_fla_FlaLibrary.prototype = {
	bitmaps: null
	,symbols: null
	,bitmapsReady: null
	,parent: null
	,loadItems: null
	,flaZip: null
	,setSymbolData: function(symbName) {
		if(!Object.prototype.hasOwnProperty.call(this.symbols.h,symbName)) {
			var s = this.flaZip.getTextFile("LIBRARY/" + symbName + ".xml");
			if(s != null) {
				s = no_logic_kha_fox_fla_FlaLibrary.cleanTags(s);
				var ns = new no_logic_kha_fox_fla_FlaSymbol(Xml.parse(s),this);
				this.symbols.h[symbName] = ns;
			}
		}
	}
	,getSymbolList: function() {
		var a = [];
		var k = haxe_ds_StringMap.keysIterator(this.symbols.h);
		while(k.hasNext()) a.push(k.next());
		return a;
	}
	,getImage: function(name) {
		if(!Object.prototype.hasOwnProperty.call(this.bitmaps.h,name)) {
			return null;
		} else {
			return this.bitmaps.h[name];
		}
	}
	,getBitmap: function(name) {
		if(!Object.prototype.hasOwnProperty.call(this.bitmaps.h,name)) {
			return null;
		} else {
			return no_logic_kha_fox_displaylist_Bitmap.from(this.bitmaps.h[name]);
		}
	}
	,getImageList: function() {
		var a = [];
		var k = haxe_ds_StringMap.keysIterator(this.bitmaps.h);
		while(k.hasNext()) a.push(k.next());
		return a;
	}
	,preloadMedia: function(xa) {
		var _gthis = this;
		if(haxe_xml__$Access_HasNodeAccess.resolve(xa,"media")) {
			this.loadItems = [];
			this.bitmapsReady = false;
			var noItems = true;
			var _g = 0;
			var _g1 = haxe_xml__$Access_NodeListAccess.resolve(haxe_xml__$Access_NodeAccess.resolve(xa,"media"),"DOMBitmapItem");
			while(_g < _g1.length) {
				var m = [_g1[_g]];
				++_g;
				if(haxe_xml__$Access_HasAttribAccess.resolve(m[0],"name")) {
					noItems = false;
					this.loadItems.push(haxe_xml__$Access_AttribAccess.resolve(m[0],"name"));
					this.flaZip.getImage("LIBRARY/" + haxe_xml__$Access_AttribAccess.resolve(m[0],"name"),(function(m) {
						return function(i) {
							if(i != null) {
								var this1 = _gthis.bitmaps;
								var key = haxe_xml__$Access_AttribAccess.resolve(m[0],"name");
								this1.h[key] = i;
							}
							HxOverrides.remove(_gthis.loadItems,haxe_xml__$Access_AttribAccess.resolve(m[0],"name"));
							if(_gthis.loadItems.length == 0) {
								_gthis.bitmapsReady = true;
							}
						};
					})(m));
				}
			}
			if(noItems) {
				this.bitmapsReady = true;
			}
		} else {
			this.bitmapsReady = true;
		}
	}
	,parseSymbols: function(xa) {
		var e = haxe_ds_StringMap.valueIterator(this.flaZip.entries.h);
		while(e.hasNext()) {
			var fn = e.next().fileName;
			if(fn.indexOf("LIBRARY/") != -1 && fn.indexOf(".xml") != -1) {
				var symbName = fn.split("LIBRARY/").join("").split(".xml").join("");
				if(!Object.prototype.hasOwnProperty.call(this.symbols.h,symbName)) {
					var s = this.flaZip.getTextFile(fn);
					if(s != null) {
						s = no_logic_kha_fox_fla_FlaLibrary.cleanTags(s);
						var ns = new no_logic_kha_fox_fla_FlaSymbol(Xml.parse(s),this);
						this.symbols.h[symbName] = ns;
					}
				}
			}
		}
	}
	,__class__: no_logic_kha_fox_fla_FlaLibrary
};
var no_logic_kha_fox_fla_FlaSymbol = function(symbolXML,fl) {
	this.type = "movieclip";
	this.xml = symbolXML;
	this.flaLibrary = fl;
	var absPath = "";
	if(this.xml != null) {
		var x = this.xml;
		if(x.nodeType != Xml.Document && x.nodeType != Xml.Element) {
			throw haxe_Exception.thrown("Invalid nodeType " + (x.nodeType == null ? "null" : XmlType.toString(x.nodeType)));
		}
		var si = haxe_xml__$Access_NodeAccess.resolve(x,"DOMSymbolItem");
		if(haxe_xml__$Access_HasAttribAccess.resolve(si,"name")) {
			this.name = haxe_xml__$Access_AttribAccess.resolve(si,"name");
		}
		if(haxe_xml__$Access_HasAttribAccess.resolve(si,"linkageExportForAS")) {
			this.linkageExportForAS = no_logic_fox_utils_Convert.toBool(haxe_xml__$Access_AttribAccess.resolve(si,"linkageExportForAS"));
		}
		if(haxe_xml__$Access_HasAttribAccess.resolve(si,"linkageClassName")) {
			this.linkageClassName = haxe_xml__$Access_AttribAccess.resolve(si,"linkageClassName");
		}
		absPath = "symbName:" + this.name;
		if(haxe_xml__$Access_HasAttribAccess.resolve(si,"symbolType")) {
			var st = haxe_xml__$Access_AttribAccess.resolve(si,"symbolType");
			absPath += " type: " + st;
			switch(st) {
			case "button":
				this.type = "button";
				this.parseTimeline(si,absPath);
				break;
			case "graphic":
				this.type = "graphic";
				this.parseTimeline(si,absPath);
				break;
			default:
				this.type = "movieclip";
				this.parseTimeline(si,absPath);
			}
		} else {
			this.type = "movieclip";
			this.parseTimeline(si,absPath);
		}
	}
};
$hxClasses["no.logic.kha.fox.fla.FlaSymbol"] = no_logic_kha_fox_fla_FlaSymbol;
no_logic_kha_fox_fla_FlaSymbol.__name__ = "no.logic.kha.fox.fla.FlaSymbol";
no_logic_kha_fox_fla_FlaSymbol.createNewFromSymbol = function(fs) {
	if(fs != null) {
		switch(fs.type) {
		case "button":
			return no_logic_kha_fox_fla_FlaSymbol.createButton(null,fs);
		case "graphic":case "movieclip":
			return no_logic_kha_fox_fla_FlaSymbol.createMovieClip(null,fs);
		case "shape":
			return no_logic_kha_fox_fla_FlaSymbol.createShape(null,fs);
		default:
			return no_logic_kha_fox_fla_FlaSymbol.createMovieClip(null,fs);
		}
	}
	return null;
};
no_logic_kha_fox_fla_FlaSymbol.createNewFromElement = function(fe,parentUUID) {
	if(parentUUID == null) {
		parentUUID = "";
	}
	var libName = fe.libraryItemName;
	if(libName != null) {
		var fs = no_logic_kha_fox_fla_Fla.get().l.symbols.h[libName];
		if(fs != null) {
			switch(fs.type) {
			case "button":
				return no_logic_kha_fox_fla_FlaSymbol.createButton(fe,fs,parentUUID);
			case "graphic":case "movieclip":
				return no_logic_kha_fox_fla_FlaSymbol.createMovieClip(fe,fs,parentUUID);
			case "shape":
				return no_logic_kha_fox_fla_FlaSymbol.createShape(fe,fs,parentUUID);
			default:
				return no_logic_kha_fox_fla_FlaSymbol.createMovieClip(fe,fs,parentUUID);
			}
		}
	}
	return null;
};
no_logic_kha_fox_fla_FlaSymbol.createMovieClip = function(fe,fs,parentUUID) {
	if(parentUUID == null) {
		parentUUID = "";
	}
	var mc = new no_logic_kha_fox_displaylist_Sprite(null);
	if(fe != null) {
		if(fe.tintColor != null) {
			mc.set_color(fe.tintColor);
		} else if(fe.color != null) {
			mc.set_color(fe.color);
		}
		mc.set_name(fe.name);
		mc.set_rotation(fe.rotation);
		mc.set_scale(fe.scale);
		mc.set_scaleX(fe.scaleX);
		mc.set_scaleY(fe.scaleY);
		if(fe.x != null) {
			mc.set_x(fe.x);
		}
		if(fe.y != null) {
			mc.set_y(fe.y);
		}
		if(fe.width != null) {
			mc.set_width(fe.width);
		}
		if(fe.height != null) {
			mc.set_height(fe.height);
		}
		mc.uuid = parentUUID + "/" + fe.uuid;
		mc.set_visible(fe.visible);
		mc.uixData = fe.uixData;
		if(fe.alpha != null) {
			mc.set_alpha(fe.alpha);
		}
		mc.setTimelineDataFromFLA(fe.timeline);
	} else if(fs != null) {
		if(fs.linkageExportForAS && fs.linkageClassName != null) {
			if(fs.linkageClassName.indexOf("$") != -1) {
				var name = mc.name;
				var className = fs.linkageClassName.split("$").join("");
				var rawUIXData = { };
				if(name != null) {
					rawUIXData.name = name;
				}
				if(className != null) {
					rawUIXData.className = className;
				}
				rawUIXData.type = "custom";
				mc.uixData = rawUIXData;
			} else {
				var name = fs.linkageClassName.split(" ").join("");
				mc = Type.createInstance($hxClasses[name],[]);
			}
		}
		if(mc != null) {
			mc.type = fs.type;
			mc.setTimelineDataFromFLA(fs.timeline);
		}
	}
	mc.disposeOnRemove = true;
	if(mc.uixData != null) {
		mc.set_name(mc.uixData.name);
	}
	return mc;
};
no_logic_kha_fox_fla_FlaSymbol.createShape = function(fe,fs,parentUUID) {
	if(parentUUID == null) {
		parentUUID = "";
	}
	var sh = new no_logic_kha_fox_displaylist_Shape(null);
	if(fe.tintColor != null) {
		sh.set_color(fe.tintColor);
	} else if(fe.color != null) {
		sh.set_color(fe.color);
	}
	sh.type = fs.type;
	sh.set_name(fe.name);
	sh.set_rotation(fe.rotation);
	sh.set_scale(fe.scale);
	sh.set_scaleX(fe.scaleX);
	sh.set_scaleY(fe.scaleY);
	if(fe.x != null) {
		sh.set_x(fe.x);
	}
	if(fe.y != null) {
		sh.set_y(fe.y);
	}
	if(fe.width != null) {
		sh.set_width(fe.width);
	}
	if(fe.height != null) {
		sh.set_height(fe.height);
	}
	sh.uuid = parentUUID + "/" + fe.uuid;
	sh.disposeOnRemove = true;
	sh.set_visible(fe.visible);
	if(fe.shapeData != null) {
		sh.shapeData = fe.shapeData;
		sh.set_width(fe.shapeData.width);
		sh.set_height(fe.shapeData.height);
	}
	if(fe.alpha != null) {
		sh.set_alpha(fe.alpha);
	}
	return sh;
};
no_logic_kha_fox_fla_FlaSymbol.createButton = function(fe,fs,parentUUID) {
	if(parentUUID == null) {
		parentUUID = "";
	}
	var btn = new no_logic_kha_fox_displaylist_Button(null);
	if(fe.tintColor != null) {
		btn.set_color(fe.tintColor);
	} else if(fe.color != null) {
		btn.set_color(fe.color);
	}
	btn.type = fs.type;
	btn.set_name(fe.name);
	btn.set_rotation(fe.rotation);
	btn.set_scale(fe.scale);
	btn.set_scaleX(fe.scaleX);
	btn.set_scaleY(fe.scaleY);
	btn.set_mouseEnabled(true);
	btn.buttonMode = true;
	if(fe.x != null) {
		btn.set_x(fe.x);
	}
	if(fe.y != null) {
		btn.set_y(fe.y);
	}
	if(fe.width != null) {
		btn.set_width(fe.width);
	}
	if(fe.height != null) {
		btn.set_height(fe.height);
	}
	btn.uuid = parentUUID + "/" + fe.uuid;
	btn.disposeOnRemove = true;
	btn.set_visible(fe.visible);
	btn.uixData = fe.uixData;
	if(btn.uixData != null) {
		btn.set_name(btn.uixData.name);
	}
	if(fe.alpha != null) {
		btn.set_alpha(fe.alpha);
	}
	btn.setTimelineDataFromFLA(fe.timeline);
	return btn;
};
no_logic_kha_fox_fla_FlaSymbol.prototype = {
	xml: null
	,name: null
	,type: null
	,timeline: null
	,linkageExportForAS: null
	,linkageClassName: null
	,flaLibrary: null
	,parseTimeline: function(xa,ap) {
		this.timeline = new no_logic_kha_fox_fla_FlaTimeline(xa,this.flaLibrary.parent,ap);
	}
	,__class__: no_logic_kha_fox_fla_FlaSymbol
};
var no_logic_kha_fox_fla_FlaTimeline = function(domXML,fla,ap) {
	this.frameLabels = new haxe_ds_StringMap();
	this.numFrames = 0;
	this.layers = [];
	this.fla = fla;
	var t1 = null;
	if(domXML.nodeType != Xml.Document && domXML.nodeType != Xml.Element) {
		throw haxe_Exception.thrown("Invalid nodeType " + (domXML.nodeType == null ? "null" : XmlType.toString(domXML.nodeType)));
	}
	var xa = domXML;
	if(haxe_xml__$Access_HasNodeAccess.resolve(xa,"timeline")) {
		var x = haxe_xml__$Access_NodeAccess.resolve(xa,"timeline").firstElement();
		if(x.nodeType != Xml.Document && x.nodeType != Xml.Element) {
			throw haxe_Exception.thrown("Invalid nodeType " + (x.nodeType == null ? "null" : XmlType.toString(x.nodeType)));
		}
		t1 = x;
	} else {
		var x = haxe_xml__$Access_NodeAccess.resolve(xa,"timelines").firstElement();
		if(x.nodeType != Xml.Document && x.nodeType != Xml.Element) {
			throw haxe_Exception.thrown("Invalid nodeType " + (x.nodeType == null ? "null" : XmlType.toString(x.nodeType)));
		}
		t1 = x;
	}
	this.name = haxe_xml__$Access_AttribAccess.resolve(t1,"name");
	var layNum = haxe_xml__$Access_NodeListAccess.resolve(haxe_xml__$Access_NodeAccess.resolve(t1,"layers"),"DOMLayer").length;
	var layNumInv = 0;
	var visibleLayers = [];
	var _g = 0;
	while(_g < layNum) {
		var i = _g++;
		var v = haxe_xml__$Access_NodeListAccess.resolve(haxe_xml__$Access_NodeAccess.resolve(t1,"layers"),"DOMLayer")[i].get("visible");
		if(v == null || v != "false") {
			visibleLayers.push(haxe_xml__$Access_NodeListAccess.resolve(haxe_xml__$Access_NodeAccess.resolve(t1,"layers"),"DOMLayer")[i]);
		}
	}
	ap += " timeline: " + this.name;
	visibleLayers.reverse();
	var _g = 0;
	var _g1 = visibleLayers.length;
	while(_g < _g1) {
		var fl = new no_logic_kha_fox_fla_FlaLayer(visibleLayers[layNumInv],this,_g++,ap);
		if(fl.numFrames > this.numFrames) {
			this.numFrames = fl.numFrames;
		}
		this.layers.push(fl);
		++layNumInv;
	}
};
$hxClasses["no.logic.kha.fox.fla.FlaTimeline"] = no_logic_kha_fox_fla_FlaTimeline;
no_logic_kha_fox_fla_FlaTimeline.__name__ = "no.logic.kha.fox.fla.FlaTimeline";
no_logic_kha_fox_fla_FlaTimeline.prototype = {
	name: null
	,numFrames: null
	,frameLabels: null
	,layers: null
	,fla: null
	,__class__: no_logic_kha_fox_fla_FlaTimeline
};
var no_logic_kha_fox_fla_GuiRoot = function(stage) {
	this.stage = stage;
};
$hxClasses["no.logic.kha.fox.fla.GuiRoot"] = no_logic_kha_fox_fla_GuiRoot;
no_logic_kha_fox_fla_GuiRoot.__name__ = "no.logic.kha.fox.fla.GuiRoot";
no_logic_kha_fox_fla_GuiRoot.prototype = {
	stage: null
	,__class__: no_logic_kha_fox_fla_GuiRoot
};
var no_logic_kha_fox_fla_frames_Frame = function(frameData) {
	this.duration = 1;
	if(frameData != null) {
		this.index = frameData.index;
		this.duration = frameData.duration;
		this.name = frameData.name;
		this.labelType = frameData.labelType;
		this.keyMode = frameData.keyMode;
		if(frameData.actionScript != null) {
			this.actionScript = frameData.actionScript;
		}
		if(frameData.elements != null) {
			this.elements = [];
			var _g = 0;
			var _g1 = frameData.elements.length;
			while(_g < _g1) this.getFrameElementInfo(frameData.elements[_g++]);
		}
	}
};
$hxClasses["no.logic.kha.fox.fla.frames.Frame"] = no_logic_kha_fox_fla_frames_Frame;
no_logic_kha_fox_fla_frames_Frame.__name__ = "no.logic.kha.fox.fla.frames.Frame";
no_logic_kha_fox_fla_frames_Frame.prototype = {
	index: null
	,duration: null
	,name: null
	,labelType: null
	,keyMode: null
	,actionScript: null
	,elements: null
	,getFrameElementInfo: function(flaElement) {
		this.elements.push(flaElement);
	}
	,__class__: no_logic_kha_fox_fla_frames_Frame
};
var no_logic_kha_fox_fla_frames_Timeline = function(parent) {
	this.isPlaying = false;
	this.prevFrameNr = 0;
	this.currentFrame = 1;
	this.numFrames = 0;
	this.parent = parent;
};
$hxClasses["no.logic.kha.fox.fla.frames.Timeline"] = no_logic_kha_fox_fla_frames_Timeline;
no_logic_kha_fox_fla_frames_Timeline.__name__ = "no.logic.kha.fox.fla.frames.Timeline";
no_logic_kha_fox_fla_frames_Timeline.prototype = {
	numFrames: null
	,name: null
	,currentFrame: null
	,prevFrameNr: null
	,isPlaying: null
	,layers: null
	,prevkeyFramesInLayer: null
	,parent: null
	,frameLabels: null
	,flaTimeline: null
	,lastFrame: null
	,setFLAtimelineData: function(flaTimeline) {
		if(flaTimeline != null) {
			this.flaTimeline = flaTimeline;
			this.initTimeline();
			this.checkCurrent();
		}
	}
	,initTimeline: function() {
		this.name = this.flaTimeline.name;
		this.layers = [];
		this.prevkeyFramesInLayer = [];
		this.frameLabels = this.flaTimeline.frameLabels;
		var kf;
		var numLayers = this.flaTimeline.layers.length;
		var _g = 0;
		while(_g < numLayers) {
			var lNri = _g++;
			var layer = [];
			layer.length = this.flaTimeline.layers[lNri].numFrames;
			this.prevkeyFramesInLayer.push(null);
			var _g1 = 0;
			var _g2 = this.flaTimeline.layers[lNri].keyFrames.length;
			while(_g1 < _g2) {
				var kfNr = _g1++;
				kf = this.flaTimeline.layers[lNri].keyFrames[kfNr];
				layer[kf.index] = { keyFrame : new no_logic_kha_fox_fla_frames_Frame(kf)};
				if(layer[kf.index].keyFrame.name != null) {
					this.frameLabels.h[layer[kf.index].keyFrame.name] = layer[kf.index].keyFrame.index;
				}
				if(kf.tweenType == "motion") {
					if(this.flaTimeline.layers[lNri].keyFrames.length >= kfNr) {
						var tweenTargetFrame = this.flaTimeline.layers[lNri].keyFrames[kfNr + 1];
						if(tweenTargetFrame != null && tweenTargetFrame.elements.length == 1 && kf.elements.length == 1) {
							var tweenNumF = kf.duration - 2;
							var tx = tweenTargetFrame.elements[0].x - kf.elements[0].x;
							var ty = tweenTargetFrame.elements[0].y - kf.elements[0].y;
							var sx = kf.elements[0].x;
							var sy = kf.elements[0].y;
							var sAlpha = kf.elements[0].alpha;
							var tAlpha = tweenTargetFrame.elements[0].alpha;
							if(isNaN(sAlpha)) {
								sAlpha = 1;
							}
							if(isNaN(tAlpha)) {
								tAlpha = 1;
							}
							var aX = tAlpha - sAlpha;
							var easeMethod;
							if(kf.easeMethodName == null || !Object.prototype.hasOwnProperty.call(no_logic_fox_utils_Ease.method.h,kf.easeMethodName)) {
								easeMethod = no_logic_fox_utils_Ease.method.h["none"];
							} else {
								easeMethod = no_logic_fox_utils_Ease.method.h[kf.easeMethodName];
							}
							var _g3 = 1;
							var _g4 = kf.duration;
							while(_g3 < _g4) {
								var dr = _g3++;
								layer[kf.index + dr] = { kfPointer : kf.index, tweenType : kf.tweenType, x : easeMethod(dr - 1,sx,tx,tweenNumF), y : easeMethod(dr - 1,sy,ty,tweenNumF), alpha : easeMethod(dr - 1,sAlpha,aX,tweenNumF)};
							}
						}
					}
				} else {
					var _g5 = 1;
					var _g6 = kf.duration;
					while(_g5 < _g6) layer[kf.index + _g5++] = { kfPointer : kf.index};
				}
			}
			this.layers.push(layer);
		}
		this.numFrames = this.flaTimeline.numFrames;
		this.set_currentFrame(1);
		this.prevFrameNr = 0;
		this.play();
	}
	,update: function() {
		if(this.isPlaying) {
			this.nextFrame();
		}
		this.lastFrame = this.currentFrame;
	}
	,play: function() {
		if(this.numFrames > 1) {
			this.isPlaying = true;
			no_logic_fox_utils_Bits.set(this.parent.flags,6);
		}
	}
	,stop: function() {
		this.isPlaying = false;
		no_logic_fox_utils_Bits.set(this.parent.flags,6);
	}
	,gotoAndPlay: function(frameNrOrLabel) {
		if(frameNrOrLabel == null || frameNrOrLabel == "" || frameNrOrLabel == " " || frameNrOrLabel < 1) {
			return this.currentFrame;
		}
		if(this.numFrames < 2) {
			return this.currentFrame;
		}
		this.play();
		var tmp;
		if(typeof(frameNrOrLabel) == "number" && ((frameNrOrLabel | 0) === frameNrOrLabel)) {
			var ifr = frameNrOrLabel;
			if(ifr < 1) {
				ifr = 0;
			}
			tmp = ifr;
		} else if(no_logic_fox_utils_StringUtils.isNumeric(frameNrOrLabel)) {
			var ifr = Std.parseInt(frameNrOrLabel);
			if(ifr < 1) {
				ifr = 0;
			}
			tmp = ifr;
		} else {
			var frameLabel = frameNrOrLabel;
			if(this.frameLabels != null && Object.prototype.hasOwnProperty.call(this.frameLabels.h,frameLabel)) {
				tmp = this.frameLabels.h[frameLabel];
			} else {
				haxe_Log.trace("Frame " + Std.string(frameNrOrLabel) + " not found.",{ fileName : "no/logic/kha/fox/fla/frames/Timeline.hx", lineNumber : 378, className : "no.logic.kha.fox.fla.frames.Timeline", methodName : "findFrameNr"});
				tmp = 0;
			}
		}
		this.set_currentFrame(tmp);
		this.checkCurrent();
		return this.currentFrame;
	}
	,gotoAndStop: function(frameNrOrLabel) {
		if(frameNrOrLabel == null || frameNrOrLabel == "" || frameNrOrLabel == " ") {
			return this.currentFrame;
		}
		if(this.numFrames < 2) {
			return this.currentFrame;
		}
		this.stop();
		var tmp;
		if(typeof(frameNrOrLabel) == "number" && ((frameNrOrLabel | 0) === frameNrOrLabel)) {
			var ifr = frameNrOrLabel;
			if(ifr < 1) {
				ifr = 0;
			}
			tmp = ifr;
		} else if(no_logic_fox_utils_StringUtils.isNumeric(frameNrOrLabel)) {
			var ifr = Std.parseInt(frameNrOrLabel);
			if(ifr < 1) {
				ifr = 0;
			}
			tmp = ifr;
		} else {
			var frameLabel = frameNrOrLabel;
			if(this.frameLabels != null && Object.prototype.hasOwnProperty.call(this.frameLabels.h,frameLabel)) {
				tmp = this.frameLabels.h[frameLabel];
			} else {
				haxe_Log.trace("Frame " + Std.string(frameNrOrLabel) + " not found.",{ fileName : "no/logic/kha/fox/fla/frames/Timeline.hx", lineNumber : 378, className : "no.logic.kha.fox.fla.frames.Timeline", methodName : "findFrameNr"});
				tmp = 0;
			}
		}
		this.set_currentFrame(tmp);
		this.checkCurrent();
		return this.currentFrame;
	}
	,nextFrame: function() {
		if(this.numFrames < 2) {
			return this.currentFrame;
		}
		no_logic_fox_utils_Bits.set(this.parent.flags,6);
		var _g = this;
		_g.set_currentFrame(_g.currentFrame + 1);
		this.checkCurrent();
		return this.currentFrame;
	}
	,previousFrame: function() {
		if(this.numFrames < 2) {
			return this.currentFrame;
		}
		no_logic_fox_utils_Bits.set(this.parent.flags,6);
		var _g = this;
		_g.set_currentFrame(_g.currentFrame - 1);
		this.checkCurrent();
		return this.currentFrame;
	}
	,gotoAndPlayRandom: function() {
		this.gotoAndPlay(1 + Math.floor(Math.random() * this.numFrames));
	}
	,gotoAndStopRandom: function() {
		this.gotoAndStop(1 + Math.floor(Math.random() * this.numFrames));
	}
	,checkCurrent: function() {
		if(this.prevFrameNr != this.currentFrame) {
			if(this.currentFrame - 1 >= this.numFrames) {
				this.set_currentFrame(1);
			} else if(this.currentFrame <= 0) {
				this.set_currentFrame(1);
			}
			this.processFrame();
			this.prevFrameNr = this.currentFrame;
		}
	}
	,processFrame: function() {
		if(this.currentFrame < 1) {
			return;
		}
		var _g = 0;
		var _g1 = this.layers.length;
		while(_g < _g1) {
			var lNr = _g++;
			var ll = this.layers[lNr];
			if(this.currentFrame - 1 < ll.length) {
				var mkf = ll[this.currentFrame];
				if(mkf != null) {
					var nkd = null;
					if(Object.prototype.hasOwnProperty.call(mkf,"keyFrame") && mkf.keyFrame != null) {
						nkd = mkf.keyFrame;
						if(nkd != null && nkd.actionScript != null) {
							no_logic_kha_fox_fla_As3Interpreter.frameScriptEval(nkd.actionScript,this.parent);
						}
					} else if(Object.prototype.hasOwnProperty.call(mkf,"kfPointer") && mkf.kfPointer != null) {
						nkd = ll[mkf.kfPointer].keyFrame;
						if(mkf.tweenType == "motion") {
							var elm = this.parent.getChildByUUID(nkd.elements[0].uuid);
							if(elm != null) {
								if(Object.prototype.hasOwnProperty.call(mkf,"x")) {
									elm.set_x(mkf.x);
								}
								if(Object.prototype.hasOwnProperty.call(mkf,"y")) {
									elm.set_y(mkf.y);
								}
								if(Object.prototype.hasOwnProperty.call(mkf,"alpha")) {
									elm.set_alpha(mkf.alpha);
								}
							}
						}
					}
					if(nkd != null) {
						if(this.prevkeyFramesInLayer == null) {
							this.populateFromKeyframe(nkd,null);
						} else if(this.prevkeyFramesInLayer[lNr] == null || this.prevkeyFramesInLayer[lNr].index != nkd.index) {
							this.populateFromKeyframe(nkd,this.prevkeyFramesInLayer[lNr]);
						}
						if(this.prevkeyFramesInLayer != null) {
							this.prevkeyFramesInLayer[lNr] = nkd;
						}
					}
				}
			}
		}
	}
	,populateFromKeyframe: function(newFrame,oldFrame) {
		var notRemoved = [];
		if(oldFrame != null && oldFrame.elements != null && this.parent != null) {
			if(newFrame.elements.length > 0) {
				var _g = 0;
				var _g1 = oldFrame.elements.length;
				while(_g < _g1) {
					var ofNr = _g++;
					if(oldFrame.elements[ofNr] != null) {
						var ud = oldFrame.elements[ofNr].uuid;
						var _g2 = 0;
						var _g3 = newFrame.elements;
						while(_g2 < _g3.length) if(_g3[_g2++].uuid == ud) {
							notRemoved.push(ud);
						} else if(oldFrame.elements[ofNr] != null) {
							var key = oldFrame.elements[ofNr].uuid;
							var _this = no_logic_kha_fox_displaylist_DisplayList.currentItems;
							if(Object.prototype.hasOwnProperty.call(_this.h,key)) {
								delete(_this.h[key]);
							}
							this.parent.removeChildByUUID(this.parent.uuid + "/" + oldFrame.elements[ofNr].uuid);
						}
					}
				}
			} else {
				var _g = 0;
				var _g1 = oldFrame.elements.length;
				while(_g < _g1) {
					var ofNr = _g++;
					if(oldFrame.elements[ofNr] != null) {
						var key = this.parent.uuid + "/" + oldFrame.elements[ofNr].uuid;
						var _this = no_logic_kha_fox_displaylist_DisplayList.currentItems;
						if(Object.prototype.hasOwnProperty.call(_this.h,key)) {
							delete(_this.h[key]);
						}
						this.parent.removeChildByUUID(this.parent.uuid + "/" + oldFrame.elements[ofNr].uuid);
					}
				}
			}
		}
		var flaEl = null;
		var _g = 0;
		var _g1 = newFrame.elements.length;
		while(_g < _g1) {
			flaEl = newFrame.elements[_g++];
			if(flaEl != null) {
				if(notRemoved.indexOf(flaEl.uuid) == -1) {
					var dispObj = flaEl.instantiateDisplayObject(this.parent.uuid);
					if(dispObj != null) {
						this.parent.addChild(dispObj);
						no_logic_kha_fox_displaylist_DisplayList.currentItems.h[dispObj.uuid] = null;
					}
				} else {
					var dpo = this.parent.getChildByUUID(this.parent.uuid + "/" + flaEl.uuid);
					if(dpo != null) {
						dpo.set_x(flaEl.x);
						dpo.set_y(flaEl.y);
						if(flaEl.alpha == null) {
							dpo.set_alpha(1);
						} else {
							dpo.set_alpha(flaEl.alpha);
						}
					}
				}
			}
		}
	}
	,set_currentFrame: function(value) {
		this.currentFrame = value;
		return this.currentFrame;
	}
	,dispose: function() {
		this.flaTimeline = null;
		this.name = null;
		this.layers = null;
		this.prevkeyFramesInLayer = null;
		this.parent = null;
		this.frameLabels = null;
	}
	,__class__: no_logic_kha_fox_fla_frames_Timeline
	,__properties__: {set_currentFrame:"set_currentFrame"}
};
var no_logic_kha_fox_gl_PipelineTools = function() { };
$hxClasses["no.logic.kha.fox.gl.PipelineTools"] = no_logic_kha_fox_gl_PipelineTools;
no_logic_kha_fox_gl_PipelineTools.__name__ = "no.logic.kha.fox.gl.PipelineTools";
no_logic_kha_fox_gl_PipelineTools.setBlendmode = function(blendMode,pipeline) {
	if(pipeline != null) {
		switch(blendMode._hx_index) {
		case 0:
			pipeline.blendSource = 1;
			pipeline.blendDestination = 5;
			pipeline.alphaBlendSource = 1;
			pipeline.alphaBlendDestination = 5;
			break;
		case 1:
			pipeline.blendSource = 1;
			pipeline.blendDestination = 1;
			pipeline.alphaBlendSource = 3;
			pipeline.alphaBlendDestination = 5;
			break;
		}
	}
};
no_logic_kha_fox_gl_PipelineTools.createPipeline = function(fragmentShader,vertexShader) {
	var pipeline = new kha_graphics4_PipelineState();
	var structure = new kha_graphics4_VertexStructure();
	structure.add("vertexPosition",2);
	structure.add("texPosition",1);
	structure.add("vertexColor",3);
	pipeline.inputLayout = [structure];
	if(vertexShader == null) {
		pipeline.vertexShader = kha_Shaders.painter_image_vert;
	} else {
		pipeline.vertexShader = vertexShader;
	}
	if(fragmentShader == null) {
		pipeline.fragmentShader = kha_Shaders.painter_image_frag;
	} else {
		pipeline.fragmentShader = fragmentShader;
	}
	pipeline.blendSource = 1;
	pipeline.blendDestination = 5;
	pipeline.alphaBlendSource = 3;
	pipeline.alphaBlendDestination = 5;
	pipeline.compile();
	return pipeline;
};
no_logic_kha_fox_gl_PipelineTools.matchBuffer = function(targetBuffer,sourceBuffer) {
	if(targetBuffer == null || targetBuffer.get_width() != sourceBuffer.get_width() || targetBuffer.get_height() != sourceBuffer.get_height()) {
		if(targetBuffer != null) {
			targetBuffer.unload();
		}
		targetBuffer = kha_Image.createRenderTarget(sourceBuffer.get_width(),sourceBuffer.get_height(),0,2,0);
	}
	return targetBuffer;
};
var no_logic_kha_fox_gl_Blendmode = $hxEnums["no.logic.kha.fox.gl.Blendmode"] = { __ename__ : true, __constructs__ : ["Normal","Multiply"]
	,Normal: {_hx_index:0,__enum__:"no.logic.kha.fox.gl.Blendmode",toString:$estr}
	,Multiply: {_hx_index:1,__enum__:"no.logic.kha.fox.gl.Blendmode",toString:$estr}
};
var no_logic_kha_fox_gl_utils_GLShaderUniforms = function() { };
$hxClasses["no.logic.kha.fox.gl.utils.GLShaderUniforms"] = no_logic_kha_fox_gl_utils_GLShaderUniforms;
no_logic_kha_fox_gl_utils_GLShaderUniforms.__name__ = "no.logic.kha.fox.gl.utils.GLShaderUniforms";
no_logic_kha_fox_gl_utils_GLShaderUniforms.setUniforms = function(g4,uniforms,p) {
	if(uniforms == null || p == null) {
		return;
	}
	var _g = 0;
	var _g1 = Reflect.fields(uniforms);
	while(_g < _g1.length) {
		var n = _g1[_g];
		++_g;
		var v = Reflect.field(uniforms,n);
		if(typeof(v) == "number") {
			var cl = p.getConstantLocation(n);
			if(cl != null) {
				g4.setFloat(cl,v);
			}
		} else if(typeof(v) == "number" && ((v | 0) === v)) {
			var cl1 = p.getConstantLocation(n);
			if(cl1 != null) {
				g4.setInt(cl1,v);
			}
		} else if(((v) instanceof kha_math_FastVector2)) {
			var cl2 = p.getConstantLocation(n);
			if(cl2 != null) {
				g4.setVector2(cl2,v);
			}
		} else if(((v) instanceof kha_math_FastVector3)) {
			var cl3 = p.getConstantLocation(n);
			if(cl3 != null) {
				g4.setVector3(cl3,v);
			}
		} else if(((v) instanceof kha_math_FastVector4)) {
			var cl4 = p.getConstantLocation(n);
			if(cl4 != null) {
				g4.setVector4(cl4,v);
			}
		} else if(((v) instanceof kha_Image)) {
			var texUnit = p.getTextureUnit(n);
			if(texUnit != null) {
				g4.setTexture(texUnit,v);
				g4.setTextureParameters(texUnit,2,2,1,1,0);
			}
		}
	}
};
var no_logic_kha_fox_input_KhaInput = function() { };
$hxClasses["no.logic.kha.fox.input.KhaInput"] = no_logic_kha_fox_input_KhaInput;
no_logic_kha_fox_input_KhaInput.__name__ = "no.logic.kha.fox.input.KhaInput";
no_logic_kha_fox_input_KhaInput.init = function() {
	kha_input_Mouse.get().notify(no_logic_kha_fox_input_KhaInput.onMouseDown,no_logic_kha_fox_input_KhaInput.onMouseUp,no_logic_kha_fox_input_KhaInput.onMouseMove,no_logic_kha_fox_input_KhaInput.onMouseWheel,no_logic_kha_fox_input_KhaInput.onMouseLeave);
	kha_input_Keyboard.get().notify(no_logic_kha_fox_input_KhaInput.onKeyDown,no_logic_kha_fox_input_KhaInput.onKeyUp,no_logic_kha_fox_input_KhaInput.onKeyPress);
	if(kha_input_Surface.get() != null) {
		kha_input_Surface.get().notify(no_logic_kha_fox_input_KhaInput.onTouchDown,no_logic_kha_fox_input_KhaInput.onTouchUp,no_logic_kha_fox_input_KhaInput.onTouchMove);
	}
	no_logic_kha_fox_input_KhaInput.addKeyCombo(function() {
		return no_logic_kha_fox_input_KhaInput.mouseBlocked = !no_logic_kha_fox_input_KhaInput.mouseBlocked;
	},17,16,73);
};
no_logic_kha_fox_input_KhaInput.onMouseDown = function(button,x,y) {
	if(no_logic_kha_fox_input_KhaInput.mouseBlocked == true) {
		return;
	}
	no_logic_kha_fox_input_KhaInput.rawMouseX = x;
	no_logic_kha_fox_input_KhaInput.rawMouseY = y;
	no_logic_kha_fox_input_KhaInput.mouseX = x;
	no_logic_kha_fox_input_KhaInput.mouseY = y;
	if(no_logic_kha_fox_application_App.settings.scaleToFit) {
		no_logic_kha_fox_input_KhaInput.mouseX = kha_Scaler.transformXDirectly(no_logic_kha_fox_input_KhaInput.rawMouseX,no_logic_kha_fox_input_KhaInput.rawMouseY,no_logic_kha_fox_application_App.i.width,no_logic_kha_fox_application_App.i.height,no_logic_kha_fox_application_App.settings.windowWidth,no_logic_kha_fox_application_App.settings.windowHeight,kha_System.get_screenRotation());
		no_logic_kha_fox_input_KhaInput.mouseY = kha_Scaler.transformYDirectly(no_logic_kha_fox_input_KhaInput.rawMouseX,no_logic_kha_fox_input_KhaInput.rawMouseY,no_logic_kha_fox_application_App.i.width,no_logic_kha_fox_application_App.i.height,no_logic_kha_fox_application_App.settings.windowWidth,no_logic_kha_fox_application_App.settings.windowHeight,kha_System.get_screenRotation());
		no_logic_kha_fox_input_KhaInput.moveX = kha_Scaler.transformXDirectly(no_logic_kha_fox_input_KhaInput.rawMoveX,no_logic_kha_fox_input_KhaInput.rawMoveY,no_logic_kha_fox_application_App.i.width,no_logic_kha_fox_application_App.i.height,no_logic_kha_fox_application_App.settings.windowWidth,no_logic_kha_fox_application_App.settings.windowHeight,kha_System.get_screenRotation());
		no_logic_kha_fox_input_KhaInput.moveX = kha_Scaler.transformYDirectly(no_logic_kha_fox_input_KhaInput.rawMoveX,no_logic_kha_fox_input_KhaInput.rawMoveY,no_logic_kha_fox_application_App.i.width,no_logic_kha_fox_application_App.i.height,no_logic_kha_fox_application_App.settings.windowWidth,no_logic_kha_fox_application_App.settings.windowHeight,kha_System.get_screenRotation());
	}
	if(button == 0) {
		if(no_logic_kha_fox_input_KhaInput.isLMBDown) {
			return;
		}
		no_logic_kha_fox_input_KhaInput.isLMBDown = true;
		no_logic_kha_fox_input_KhaInput.triggerMouseListeners(no_logic_kha_fox_input_KhaInput.event_MLD,{ x : no_logic_kha_fox_input_KhaInput.mouseX, y : no_logic_kha_fox_input_KhaInput.mouseY});
	} else if(button == 1) {
		if(no_logic_kha_fox_input_KhaInput.isRMBDown) {
			return;
		}
		no_logic_kha_fox_input_KhaInput.isRMBDown = true;
		no_logic_kha_fox_input_KhaInput.triggerMouseListeners(no_logic_kha_fox_input_KhaInput.event_MRD,{ x : no_logic_kha_fox_input_KhaInput.mouseX, y : no_logic_kha_fox_input_KhaInput.mouseY});
	}
};
no_logic_kha_fox_input_KhaInput.onMouseUp = function(button,x,y) {
	if(no_logic_kha_fox_input_KhaInput.mouseBlocked == true) {
		return;
	}
	no_logic_kha_fox_input_KhaInput.rawMouseX = x;
	no_logic_kha_fox_input_KhaInput.rawMouseY = y;
	no_logic_kha_fox_input_KhaInput.mouseX = x;
	no_logic_kha_fox_input_KhaInput.mouseY = y;
	if(no_logic_kha_fox_application_App.settings.scaleToFit) {
		no_logic_kha_fox_input_KhaInput.mouseX = kha_Scaler.transformXDirectly(no_logic_kha_fox_input_KhaInput.rawMouseX,no_logic_kha_fox_input_KhaInput.rawMouseY,no_logic_kha_fox_application_App.i.width,no_logic_kha_fox_application_App.i.height,no_logic_kha_fox_application_App.settings.windowWidth,no_logic_kha_fox_application_App.settings.windowHeight,kha_System.get_screenRotation());
		no_logic_kha_fox_input_KhaInput.mouseY = kha_Scaler.transformYDirectly(no_logic_kha_fox_input_KhaInput.rawMouseX,no_logic_kha_fox_input_KhaInput.rawMouseY,no_logic_kha_fox_application_App.i.width,no_logic_kha_fox_application_App.i.height,no_logic_kha_fox_application_App.settings.windowWidth,no_logic_kha_fox_application_App.settings.windowHeight,kha_System.get_screenRotation());
		no_logic_kha_fox_input_KhaInput.moveX = kha_Scaler.transformXDirectly(no_logic_kha_fox_input_KhaInput.rawMoveX,no_logic_kha_fox_input_KhaInput.rawMoveY,no_logic_kha_fox_application_App.i.width,no_logic_kha_fox_application_App.i.height,no_logic_kha_fox_application_App.settings.windowWidth,no_logic_kha_fox_application_App.settings.windowHeight,kha_System.get_screenRotation());
		no_logic_kha_fox_input_KhaInput.moveX = kha_Scaler.transformYDirectly(no_logic_kha_fox_input_KhaInput.rawMoveX,no_logic_kha_fox_input_KhaInput.rawMoveY,no_logic_kha_fox_application_App.i.width,no_logic_kha_fox_application_App.i.height,no_logic_kha_fox_application_App.settings.windowWidth,no_logic_kha_fox_application_App.settings.windowHeight,kha_System.get_screenRotation());
	}
	if(button == 0) {
		if(!no_logic_kha_fox_input_KhaInput.isLMBDown) {
			return;
		}
		no_logic_kha_fox_input_KhaInput.isLMBDown = false;
		no_logic_kha_fox_input_KhaInput.triggerMouseListeners(no_logic_kha_fox_input_KhaInput.event_MLU,{ x : no_logic_kha_fox_input_KhaInput.mouseX, y : no_logic_kha_fox_input_KhaInput.mouseY});
	} else if(button == 1) {
		if(!no_logic_kha_fox_input_KhaInput.isRMBDown) {
			return;
		}
		no_logic_kha_fox_input_KhaInput.isRMBDown = false;
		no_logic_kha_fox_input_KhaInput.triggerMouseListeners(no_logic_kha_fox_input_KhaInput.event_MRU,{ x : no_logic_kha_fox_input_KhaInput.mouseX, y : no_logic_kha_fox_input_KhaInput.mouseY});
	}
};
no_logic_kha_fox_input_KhaInput.onMouseMove = function(x,y,moveX,moveY) {
	if(no_logic_kha_fox_input_KhaInput.mouseBlocked == true) {
		return;
	}
	no_logic_kha_fox_input_KhaInput.rawMouseX = x;
	no_logic_kha_fox_input_KhaInput.rawMouseY = y;
	no_logic_kha_fox_input_KhaInput.mouseX = x;
	no_logic_kha_fox_input_KhaInput.mouseY = y;
	if(moveX != null) {
		no_logic_kha_fox_input_KhaInput.rawMoveX = moveX;
		no_logic_kha_fox_input_KhaInput.moveX = moveX;
	}
	if(moveY != null) {
		no_logic_kha_fox_input_KhaInput.rawMoveY = moveY;
		no_logic_kha_fox_input_KhaInput.moveY = moveY;
	}
	if(no_logic_kha_fox_application_App.settings.scaleToFit) {
		no_logic_kha_fox_input_KhaInput.mouseX = kha_Scaler.transformXDirectly(no_logic_kha_fox_input_KhaInput.rawMouseX,no_logic_kha_fox_input_KhaInput.rawMouseY,no_logic_kha_fox_application_App.i.width,no_logic_kha_fox_application_App.i.height,no_logic_kha_fox_application_App.settings.windowWidth,no_logic_kha_fox_application_App.settings.windowHeight,kha_System.get_screenRotation());
		no_logic_kha_fox_input_KhaInput.mouseY = kha_Scaler.transformYDirectly(no_logic_kha_fox_input_KhaInput.rawMouseX,no_logic_kha_fox_input_KhaInput.rawMouseY,no_logic_kha_fox_application_App.i.width,no_logic_kha_fox_application_App.i.height,no_logic_kha_fox_application_App.settings.windowWidth,no_logic_kha_fox_application_App.settings.windowHeight,kha_System.get_screenRotation());
		no_logic_kha_fox_input_KhaInput.moveX = kha_Scaler.transformXDirectly(no_logic_kha_fox_input_KhaInput.rawMoveX,no_logic_kha_fox_input_KhaInput.rawMoveY,no_logic_kha_fox_application_App.i.width,no_logic_kha_fox_application_App.i.height,no_logic_kha_fox_application_App.settings.windowWidth,no_logic_kha_fox_application_App.settings.windowHeight,kha_System.get_screenRotation());
		no_logic_kha_fox_input_KhaInput.moveX = kha_Scaler.transformYDirectly(no_logic_kha_fox_input_KhaInput.rawMoveX,no_logic_kha_fox_input_KhaInput.rawMoveY,no_logic_kha_fox_application_App.i.width,no_logic_kha_fox_application_App.i.height,no_logic_kha_fox_application_App.settings.windowWidth,no_logic_kha_fox_application_App.settings.windowHeight,kha_System.get_screenRotation());
	}
	no_logic_kha_fox_input_KhaInput.triggerMouseListeners(no_logic_kha_fox_input_KhaInput.event_MM,{ x : no_logic_kha_fox_input_KhaInput.mouseX, y : no_logic_kha_fox_input_KhaInput.mouseY, moveX : no_logic_kha_fox_input_KhaInput.moveX, moveY : no_logic_kha_fox_input_KhaInput.moveY});
};
no_logic_kha_fox_input_KhaInput.onMouseWheel = function(delta) {
	if(no_logic_kha_fox_input_KhaInput.mouseBlocked == true) {
		return;
	}
	no_logic_kha_fox_input_KhaInput.triggerMouseListeners(no_logic_kha_fox_input_KhaInput.event_MW,{ delta : delta});
};
no_logic_kha_fox_input_KhaInput.onMouseLeave = function() {
	if(no_logic_kha_fox_input_KhaInput.mouseBlocked == true) {
		return;
	}
	no_logic_kha_fox_input_KhaInput.triggerMouseListeners(no_logic_kha_fox_input_KhaInput.event_ML);
};
no_logic_kha_fox_input_KhaInput.triggerMouseListeners = function(fList,data) {
	var _g = 0;
	while(_g < fList.length) {
		var f = fList[_g];
		++_g;
		if(f != null) {
			f.trigger(data);
		}
		if(f.disposed) {
			HxOverrides.remove(fList,f);
		}
	}
};
no_logic_kha_fox_input_KhaInput.onKeyDown = function(code) {
	if(no_logic_kha_fox_input_KhaInput.keyBlocked == true) {
		return;
	}
	no_logic_kha_fox_input_KhaInput.keysPressed.h[code] = true;
	no_logic_kha_fox_input_KhaInput.lastKeyPressed = code;
	switch(code) {
	case 8:
		no_logic_kha_fox_input_KhaInput.isBackspaceDown = true;
		break;
	case 13:
		no_logic_kha_fox_input_KhaInput.isReturnDown = true;
		break;
	case 16:
		no_logic_kha_fox_input_KhaInput.isShiftDown = true;
		break;
	case 17:
		no_logic_kha_fox_input_KhaInput.isCtrlDown = true;
		break;
	case 18:
		no_logic_kha_fox_input_KhaInput.isAltDown = true;
		break;
	case 27:
		no_logic_kha_fox_input_KhaInput.isEscapeDown = true;
		break;
	case 32:
		no_logic_kha_fox_input_KhaInput.isSpaceDown = true;
		break;
	case 46:
		no_logic_kha_fox_input_KhaInput.isDeleteDown = true;
		break;
	default:
	}
	var this1 = no_logic_kha_fox_input_KhaInput.keysDown;
	var value = String.fromCodePoint(code);
	this1.h[code] = value;
	no_logic_kha_fox_input_KhaInput.triggerKeyListeners(no_logic_kha_fox_input_KhaInput.event_KD,{ code : code, char : String.fromCodePoint(code), isShiftDown : no_logic_kha_fox_input_KhaInput.isShiftDown, isCtrlDown : no_logic_kha_fox_input_KhaInput.isCtrlDown, isAltDown : no_logic_kha_fox_input_KhaInput.isAltDown, isBackspaceDown : no_logic_kha_fox_input_KhaInput.isBackspaceDown, isDeleteDown : no_logic_kha_fox_input_KhaInput.isDeleteDown, isEscapeDown : no_logic_kha_fox_input_KhaInput.isEscapeDown, isReturnDown : no_logic_kha_fox_input_KhaInput.isReturnDown, isSpaceDown : no_logic_kha_fox_input_KhaInput.isSpaceDown});
	if(no_logic_kha_fox_input_KhaInput.keyCombos.length > 0) {
		no_logic_kha_fox_input_KhaInput.checkKeyCombos();
	}
};
no_logic_kha_fox_input_KhaInput.onKeyUp = function(code) {
	if(no_logic_kha_fox_input_KhaInput.keyBlocked == true) {
		return;
	}
	if(no_logic_kha_fox_input_KhaInput.keysPressed.h.hasOwnProperty(code)) {
		no_logic_kha_fox_input_KhaInput.keysPressed.remove(code);
	}
	no_logic_kha_fox_input_KhaInput.isKeyDown = false;
	switch(code) {
	case 8:
		no_logic_kha_fox_input_KhaInput.isBackspaceDown = false;
		break;
	case 13:
		no_logic_kha_fox_input_KhaInput.isReturnDown = false;
		break;
	case 16:
		no_logic_kha_fox_input_KhaInput.isShiftDown = false;
		break;
	case 17:
		no_logic_kha_fox_input_KhaInput.isCtrlDown = false;
		break;
	case 18:
		no_logic_kha_fox_input_KhaInput.isAltDown = false;
		break;
	case 27:
		no_logic_kha_fox_input_KhaInput.isEscapeDown = false;
		break;
	case 32:
		no_logic_kha_fox_input_KhaInput.isSpaceDown = false;
		break;
	case 46:
		no_logic_kha_fox_input_KhaInput.isDeleteDown = false;
		break;
	default:
	}
	if(no_logic_kha_fox_input_KhaInput.keysDown.h.hasOwnProperty(code)) {
		no_logic_kha_fox_input_KhaInput.keysDown.remove(code);
	}
	no_logic_kha_fox_input_KhaInput.triggerKeyListeners(no_logic_kha_fox_input_KhaInput.event_KU,{ code : code, char : String.fromCodePoint(code), isShiftDown : no_logic_kha_fox_input_KhaInput.isShiftDown, isCtrlDown : no_logic_kha_fox_input_KhaInput.isCtrlDown, isAltDown : no_logic_kha_fox_input_KhaInput.isAltDown, isBackspaceDown : no_logic_kha_fox_input_KhaInput.isBackspaceDown, isDeleteDown : no_logic_kha_fox_input_KhaInput.isDeleteDown, isEscapeDown : no_logic_kha_fox_input_KhaInput.isEscapeDown, isReturnDown : no_logic_kha_fox_input_KhaInput.isReturnDown, isSpaceDown : no_logic_kha_fox_input_KhaInput.isSpaceDown});
};
no_logic_kha_fox_input_KhaInput.onKeyPress = function(char) {
	if(no_logic_kha_fox_input_KhaInput.keyBlocked == true) {
		return;
	}
	no_logic_kha_fox_input_KhaInput.keyPressChar = char;
	no_logic_kha_fox_input_KhaInput.isKeyDown = true;
	no_logic_kha_fox_input_KhaInput.triggerKeyListeners(no_logic_kha_fox_input_KhaInput.event_KP,{ char : char, code : char.charCodeAt(0), isShiftDown : no_logic_kha_fox_input_KhaInput.isShiftDown, isCtrlDown : no_logic_kha_fox_input_KhaInput.isCtrlDown, isAltDown : no_logic_kha_fox_input_KhaInput.isAltDown, isBackspaceDown : no_logic_kha_fox_input_KhaInput.isBackspaceDown, isDeleteDown : no_logic_kha_fox_input_KhaInput.isDeleteDown, isEscapeDown : no_logic_kha_fox_input_KhaInput.isEscapeDown, isReturnDown : no_logic_kha_fox_input_KhaInput.isReturnDown, isSpaceDown : no_logic_kha_fox_input_KhaInput.isSpaceDown});
};
no_logic_kha_fox_input_KhaInput.triggerKeyListeners = function(eList,data) {
	var _g = 0;
	while(_g < eList.length) {
		var e = eList[_g];
		++_g;
		if(e != null) {
			e.trigger(data);
		}
		if(e.disposed) {
			HxOverrides.remove(eList,e);
		}
	}
};
no_logic_kha_fox_input_KhaInput.onTouchDown = function(index,x,y) {
	if(no_logic_kha_fox_input_KhaInput.touchEmulatesMouse) {
		no_logic_kha_fox_input_KhaInput.onMouseDown(0,x,y);
	}
};
no_logic_kha_fox_input_KhaInput.onTouchUp = function(index,x,y) {
	if(no_logic_kha_fox_input_KhaInput.touchEmulatesMouse) {
		no_logic_kha_fox_input_KhaInput.onMouseUp(0,x,y);
	}
};
no_logic_kha_fox_input_KhaInput.onTouchMove = function(index,x,y) {
	if(no_logic_kha_fox_input_KhaInput.touchEmulatesMouse) {
		no_logic_kha_fox_input_KhaInput.onMouseMove(x,y,0,0);
	}
};
no_logic_kha_fox_input_KhaInput.addOnMouseLeftDown = function(callback,replies,scope,delay) {
	if(delay == null) {
		delay = 0;
	}
	if(replies == null) {
		replies = 0;
	}
	no_logic_kha_fox_input_KhaInput.event_MLD.push(new no_logic_kha_fox_input_MouseEventData(null,null,no_logic_kha_fox_input_MouseEventAction.MouseLeftButtonDown,no_logic_kha_fox_input_EventType.MouseEvent,scope,callback,delay,false,0,replies));
};
no_logic_kha_fox_input_KhaInput.addOnKeyDown = function(callback,replies,scope,delay) {
	if(delay == null) {
		delay = 0;
	}
	if(replies == null) {
		replies = 0;
	}
	no_logic_kha_fox_input_KhaInput.event_KD.push(new no_logic_kha_fox_input_KeyboardEventData(null,null,no_logic_kha_fox_input_KeyboardEventAction.KeyDown,no_logic_kha_fox_input_EventType.KeyboardEvent,scope,callback,delay,false,0,replies));
};
no_logic_kha_fox_input_KhaInput.addOnKeyUp = function(callback,replies,scope,delay) {
	if(delay == null) {
		delay = 0;
	}
	if(replies == null) {
		replies = 0;
	}
	no_logic_kha_fox_input_KhaInput.event_KU.push(new no_logic_kha_fox_input_KeyboardEventData(null,null,no_logic_kha_fox_input_KeyboardEventAction.KeyUp,no_logic_kha_fox_input_EventType.KeyboardEvent,scope,callback,delay,false,0,replies));
};
no_logic_kha_fox_input_KhaInput.addOnKeyPress = function(callback,replies,scope,delay) {
	if(delay == null) {
		delay = 0;
	}
	if(replies == null) {
		replies = 0;
	}
	no_logic_kha_fox_input_KhaInput.event_KP.push(new no_logic_kha_fox_input_KeyboardEventData(null,null,no_logic_kha_fox_input_KeyboardEventAction.KeyPress,no_logic_kha_fox_input_EventType.KeyboardEvent,scope,callback,delay,false,0,replies));
};
no_logic_kha_fox_input_KhaInput.removeOnKeyDown = function(callback,scope,delay) {
	if(delay == null) {
		delay = 0;
	}
	no_logic_kha_fox_input_KhaInput.removeEvent(no_logic_kha_fox_input_KhaInput.event_KD,callback,scope,delay);
};
no_logic_kha_fox_input_KhaInput.removeOnKeyUp = function(callback,scope,delay) {
	if(delay == null) {
		delay = 0;
	}
	no_logic_kha_fox_input_KhaInput.removeEvent(no_logic_kha_fox_input_KhaInput.event_KU,callback,scope,delay);
};
no_logic_kha_fox_input_KhaInput.removeOnKeyPress = function(callback,scope,delay) {
	if(delay == null) {
		delay = 0;
	}
	no_logic_kha_fox_input_KhaInput.removeEvent(no_logic_kha_fox_input_KhaInput.event_KP,callback,scope,delay);
};
no_logic_kha_fox_input_KhaInput.addKeyCombo = function(callback,key1,key2,key3) {
	var _g = 0;
	var _g1 = no_logic_kha_fox_input_KhaInput.keyCombos;
	while(_g < _g1.length) {
		var k = _g1[_g];
		++_g;
		if(k.callback == callback && k.key1 == key1 && k.key2 == key2 && k.key3 == key3) {
			return;
		}
	}
	no_logic_kha_fox_input_KhaInput.keyCombos.push({ callback : callback, key1 : key1, key2 : key2, key3 : key3});
};
no_logic_kha_fox_input_KhaInput.checkKeyCombos = function() {
	var _g = 0;
	var _g1 = no_logic_kha_fox_input_KhaInput.keyCombos;
	while(_g < _g1.length) {
		var k = _g1[_g];
		++_g;
		if(!(k.key1 == null && k.key2 == null && k.key3 == null)) {
			if(k.callback != null && no_logic_kha_fox_input_KhaInput.checkKeyDown(k.key1) && no_logic_kha_fox_input_KhaInput.checkKeyDown(k.key2) && no_logic_kha_fox_input_KhaInput.checkKeyDown(k.key3)) {
				k.callback();
			}
		}
	}
};
no_logic_kha_fox_input_KhaInput.checkKeyDown = function(code) {
	var k = no_logic_kha_fox_input_KhaInput.keysDown.keys();
	while(k.hasNext()) if(k.next() == code) {
		return true;
	}
	return false;
};
no_logic_kha_fox_input_KhaInput.removeEvent = function(eventArray,callback,scope,delay) {
	var ed;
	if(callback != null) {
		var _g = 0;
		while(_g < eventArray.length) {
			ed = eventArray[_g++];
			if(ed != null && callback == ed.callback) {
				ed.dispose();
				ed = null;
			}
		}
		var _g = 0;
		while(_g < eventArray.length) {
			var e = eventArray[_g];
			++_g;
			if(e == null) {
				HxOverrides.remove(eventArray,e);
			}
		}
	} else {
		var _g = 0;
		while(_g < eventArray.length) {
			ed = eventArray[_g++];
			if(ed != null && callback == ed.callback) {
				ed.dispose();
				ed = null;
			}
		}
		eventArray.length = 0;
	}
};
no_logic_kha_fox_input_KhaInput.setCursorType = function(cursorType) {
	kha_input_Mouse.get().setSystemCursor(cursorType);
};
var no_logic_kha_fox_input_EventType = $hxEnums["no.logic.kha.fox.input.EventType"] = { __ename__ : true, __constructs__ : ["Event","MouseEvent","KeyboardEvent","TouchEvent"]
	,Event: {_hx_index:0,__enum__:"no.logic.kha.fox.input.EventType",toString:$estr}
	,MouseEvent: {_hx_index:1,__enum__:"no.logic.kha.fox.input.EventType",toString:$estr}
	,KeyboardEvent: {_hx_index:2,__enum__:"no.logic.kha.fox.input.EventType",toString:$estr}
	,TouchEvent: {_hx_index:3,__enum__:"no.logic.kha.fox.input.EventType",toString:$estr}
};
var no_logic_kha_fox_input_MouseEventAction = $hxEnums["no.logic.kha.fox.input.MouseEventAction"] = { __ename__ : true, __constructs__ : ["MouseLeftButtonDown","MouseLeftButtonUp","MouseRightButtonDown","MouseRightButtonUp","MouseMove","MouseWheel","MouseLeave"]
	,MouseLeftButtonDown: {_hx_index:0,__enum__:"no.logic.kha.fox.input.MouseEventAction",toString:$estr}
	,MouseLeftButtonUp: {_hx_index:1,__enum__:"no.logic.kha.fox.input.MouseEventAction",toString:$estr}
	,MouseRightButtonDown: {_hx_index:2,__enum__:"no.logic.kha.fox.input.MouseEventAction",toString:$estr}
	,MouseRightButtonUp: {_hx_index:3,__enum__:"no.logic.kha.fox.input.MouseEventAction",toString:$estr}
	,MouseMove: {_hx_index:4,__enum__:"no.logic.kha.fox.input.MouseEventAction",toString:$estr}
	,MouseWheel: {_hx_index:5,__enum__:"no.logic.kha.fox.input.MouseEventAction",toString:$estr}
	,MouseLeave: {_hx_index:6,__enum__:"no.logic.kha.fox.input.MouseEventAction",toString:$estr}
};
var no_logic_kha_fox_input_KeyboardEventAction = $hxEnums["no.logic.kha.fox.input.KeyboardEventAction"] = { __ename__ : true, __constructs__ : ["KeyDown","KeyUp","KeyPress"]
	,KeyDown: {_hx_index:0,__enum__:"no.logic.kha.fox.input.KeyboardEventAction",toString:$estr}
	,KeyUp: {_hx_index:1,__enum__:"no.logic.kha.fox.input.KeyboardEventAction",toString:$estr}
	,KeyPress: {_hx_index:2,__enum__:"no.logic.kha.fox.input.KeyboardEventAction",toString:$estr}
};
var no_logic_kha_fox_input_EventData = function(type,scope,callback,delay,disposed,timesCalled,maxreplies) {
	this.maxreplies = 0;
	this.timesCalled = 0;
	this.disposed = false;
	this.delay = 0.0;
	this.type = type;
	this.scope = scope;
	this.callback = callback;
	if(delay != null) {
		this.delay = delay;
	}
	if(disposed != null) {
		this.disposed = disposed;
	}
	if(timesCalled != null) {
		this.timesCalled = timesCalled;
	}
	if(maxreplies != null) {
		this.maxreplies = maxreplies;
	}
};
$hxClasses["no.logic.kha.fox.input.EventData"] = no_logic_kha_fox_input_EventData;
no_logic_kha_fox_input_EventData.__name__ = "no.logic.kha.fox.input.EventData";
no_logic_kha_fox_input_EventData.prototype = {
	type: null
	,scope: null
	,callback: null
	,delay: null
	,disposed: null
	,timesCalled: null
	,maxreplies: null
	,dispose: function() {
		this.callback = null;
		this.scope = null;
		this.disposed = true;
	}
	,__class__: no_logic_kha_fox_input_EventData
};
var no_logic_kha_fox_input_MouseEventData = function(mouse,delta,action,type,scope,callback,delay,disposed,timesCalled,maxreplies) {
	this.delta = new kha_math_FastVector2();
	this.mouse = new kha_math_FastVector2();
	no_logic_kha_fox_input_EventData.call(this,type,scope,callback,delay,disposed,timesCalled,maxreplies);
	if(mouse != null) {
		this.mouse = mouse;
	}
	if(delta != null) {
		this.delta = delta;
	}
	this.action = action;
};
$hxClasses["no.logic.kha.fox.input.MouseEventData"] = no_logic_kha_fox_input_MouseEventData;
no_logic_kha_fox_input_MouseEventData.__name__ = "no.logic.kha.fox.input.MouseEventData";
no_logic_kha_fox_input_MouseEventData.__super__ = no_logic_kha_fox_input_EventData;
no_logic_kha_fox_input_MouseEventData.prototype = $extend(no_logic_kha_fox_input_EventData.prototype,{
	mouse: null
	,delta: null
	,action: null
	,trigger: function(data) {
		if(data != null) {
			if(Object.prototype.hasOwnProperty.call(data,"x")) {
				this.mouse.x = data.x;
			}
			if(Object.prototype.hasOwnProperty.call(data,"y")) {
				this.mouse.y = data.y;
			}
			if(Object.prototype.hasOwnProperty.call(data,"moveX")) {
				this.delta.x = data.moveX;
			}
			if(Object.prototype.hasOwnProperty.call(data,"moveY")) {
				this.delta.y = data.moveY;
			}
		}
		this.timesCalled++;
		if(this.callback != null) {
			this.callback.apply(this,[this]);
		}
		if(this.maxreplies > 0 && this.timesCalled >= this.maxreplies) {
			this.dispose();
		}
	}
	,__class__: no_logic_kha_fox_input_MouseEventData
});
var no_logic_kha_fox_input_KeyboardEventData = function(code,char,action,type,scope,callback,delay,disposed,timesCalled,maxreplies) {
	this.char = null;
	this.code = null;
	no_logic_kha_fox_input_EventData.call(this,type,scope,callback,delay,disposed,timesCalled,maxreplies);
	if(code != null) {
		this.code = code;
	}
	if(char != null) {
		this.char = char;
	}
	this.action = action;
};
$hxClasses["no.logic.kha.fox.input.KeyboardEventData"] = no_logic_kha_fox_input_KeyboardEventData;
no_logic_kha_fox_input_KeyboardEventData.__name__ = "no.logic.kha.fox.input.KeyboardEventData";
no_logic_kha_fox_input_KeyboardEventData.__super__ = no_logic_kha_fox_input_EventData;
no_logic_kha_fox_input_KeyboardEventData.prototype = $extend(no_logic_kha_fox_input_EventData.prototype,{
	code: null
	,char: null
	,action: null
	,trigger: function(data) {
		if(data != null) {
			if(Object.prototype.hasOwnProperty.call(data,"code")) {
				this.code = data.code;
			}
			if(Object.prototype.hasOwnProperty.call(data,"char")) {
				this.char = data.char;
			}
		}
		this.timesCalled++;
		if(this.callback != null) {
			this.callback.apply(this,[this]);
		}
		if(this.maxreplies > 0 && this.timesCalled >= this.maxreplies) {
			this.dispose();
		}
	}
	,dispose: function() {
		this.code = null;
		this.char = null;
		no_logic_kha_fox_input_EventData.prototype.dispose.call(this);
	}
	,__class__: no_logic_kha_fox_input_KeyboardEventData
});
var no_logic_kha_fox_input_StringKeyboardInput = function(initialValue) {
	if(initialValue == null) {
		initialValue = "";
	}
	this.caret = "|";
	this.value = "";
	this.value = initialValue;
	this.set_acceptInput(true);
};
$hxClasses["no.logic.kha.fox.input.StringKeyboardInput"] = no_logic_kha_fox_input_StringKeyboardInput;
no_logic_kha_fox_input_StringKeyboardInput.__name__ = "no.logic.kha.fox.input.StringKeyboardInput";
no_logic_kha_fox_input_StringKeyboardInput.prototype = {
	value: null
	,lastChar: null
	,repeatTimer: null
	,acceptInput: null
	,caretTimer: null
	,caret: null
	,onEnter: null
	,set_acceptInput: function(value) {
		if(value == this.acceptInput) {
			return value;
		}
		if(value) {
			this.addListeners();
		} else {
			this.removeListeners();
		}
		return this.acceptInput = value;
	}
	,addListeners: function() {
		no_logic_kha_fox_input_KhaInput.addOnKeyDown($bind(this,this.onKeyDown));
		no_logic_kha_fox_input_KhaInput.addOnKeyUp($bind(this,this.onKeyUp));
		no_logic_kha_fox_input_KhaInput.addOnKeyPress($bind(this,this.onKeyPress));
		if(this.caretTimer != null) {
			this.caretTimer.stop();
		}
		this.caretTimer = new haxe_Timer(500);
		this.caretTimer.run = $bind(this,this.setCaret);
	}
	,removeListeners: function() {
		if(this.caretTimer != null) {
			this.caretTimer.stop();
		}
		if(this.repeatTimer != null) {
			this.repeatTimer.stop();
		}
		no_logic_kha_fox_input_KhaInput.removeOnKeyDown($bind(this,this.onKeyDown));
		no_logic_kha_fox_input_KhaInput.removeOnKeyUp($bind(this,this.onKeyUp));
		no_logic_kha_fox_input_KhaInput.removeOnKeyPress($bind(this,this.onKeyPress));
	}
	,onKeyDown: function(e) {
		if(no_logic_kha_fox_input_KhaInput.isBackspaceDown) {
			this.value = this.value.substring(0,this.value.length - 1);
		}
		if(no_logic_kha_fox_input_KhaInput.isReturnDown) {
			if(this.onEnter != null) {
				this.onEnter(this);
			}
		}
		if(this.repeatTimer != null) {
			this.repeatTimer.stop();
		}
		this.repeatTimer = haxe_Timer.delay($bind(this,this.keyrepeat),700);
	}
	,onKeyUp: function(e) {
	}
	,onKeyPress: function(e) {
		this.lastChar = e.char;
		this.value += e.char;
	}
	,keyrepeat: function() {
		if(no_logic_kha_fox_input_KhaInput.isKeyDown && no_logic_kha_fox_input_KhaInput.keyPressChar == this.lastChar) {
			this.value += this.lastChar;
		} else if(no_logic_kha_fox_input_KhaInput.isBackspaceDown) {
			this.value = this.value.substring(0,this.value.length - 1);
		} else {
			return;
		}
		if(this.repeatTimer != null) {
			this.repeatTimer.stop();
		}
		this.repeatTimer = haxe_Timer.delay($bind(this,this.keyrepeat),50);
	}
	,clear: function() {
		var s = this.value;
		this.value = "";
		return s;
	}
	,drawString: function(g2,x,y,showCaret) {
		if(showCaret == null) {
			showCaret = false;
		}
		if(y == null) {
			y = 0;
		}
		if(x == null) {
			x = 0;
		}
		if(showCaret) {
			g2.drawString(this.value + this.caret,x,y);
		} else {
			g2.drawString(this.value,x,y);
		}
	}
	,setCaret: function() {
		if(this.caret == "") {
			this.caret = "|";
		} else {
			this.caret = "";
		}
	}
	,__class__: no_logic_kha_fox_input_StringKeyboardInput
	,__properties__: {set_acceptInput:"set_acceptInput"}
};
var no_logic_kha_fox_utils_ImageUtils = function() { };
$hxClasses["no.logic.kha.fox.utils.ImageUtils"] = no_logic_kha_fox_utils_ImageUtils;
no_logic_kha_fox_utils_ImageUtils.__name__ = "no.logic.kha.fox.utils.ImageUtils";
no_logic_kha_fox_utils_ImageUtils.imageFromFileBytes = function(bytes,onImageDecoded,fileNameIfYouHaveIt) {
	var fileExtension = "png";
	if(fileNameIfYouHaveIt != null) {
		if(fileNameIfYouHaveIt.toLowerCase().indexOf(".jpg") != -1 || fileNameIfYouHaveIt.toLowerCase().indexOf(".jpeg") != -1) {
			fileExtension = "jpg";
		}
	}
	try {
		kha_Image.fromEncodedBytes(bytes,fileExtension,function(i) {
			if(onImageDecoded != null) {
				onImageDecoded(i);
			}
		},function(error) {
			haxe_Log.trace("Error decoding image!",{ fileName : "no/logic/kha/fox/utils/ImageUtils.hx", lineNumber : 29, className : "no.logic.kha.fox.utils.ImageUtils", methodName : "imageFromFileBytes"});
			if(onImageDecoded != null) {
				onImageDecoded(null);
			}
		},false);
	} catch( _g ) {
		haxe_Log.trace("Error decoding image : " + fileNameIfYouHaveIt,{ fileName : "no/logic/kha/fox/utils/ImageUtils.hx", lineNumber : 37, className : "no.logic.kha.fox.utils.ImageUtils", methodName : "imageFromFileBytes"});
		if(onImageDecoded != null) {
			onImageDecoded(null);
		}
	}
};
var no_logic_kha_fox_utils_SimpleDraw = function() { };
$hxClasses["no.logic.kha.fox.utils.SimpleDraw"] = no_logic_kha_fox_utils_SimpleDraw;
no_logic_kha_fox_utils_SimpleDraw.__name__ = "no.logic.kha.fox.utils.SimpleDraw";
no_logic_kha_fox_utils_SimpleDraw.quadraticCurvePoints = function(x1,y1,x2,y2,x3,y3,segments) {
	if(segments == null) {
		segments = 25;
	}
	var points = [];
	points.push(new kha_math_Vector2(x1,y1));
	var deltaT = 1 / segments;
	var _g = 1;
	while(_g < segments) {
		var t = _g++ * deltaT;
		points.push(new kha_math_Vector2((1 - t) * (1 - t) * x1 + 2 * t * (1 - t) * x2 + t * t * x3,(1 - t) * (1 - t) * y1 + 2 * t * (1 - t) * y2 + t * t * y3));
	}
	points.push(new kha_math_Vector2(x3,y3));
	return points;
};
no_logic_kha_fox_utils_SimpleDraw.roundedRect = function(g2,x,y,width,height,radius,strength,segments) {
	if(segments == null) {
		segments = 0;
	}
	if(strength == null) {
		strength = 1.0;
	}
	if(radius == null) {
		radius = 5.0;
	}
	kha_graphics2_GraphicsExtension.drawPolygon(g2,0,0,no_logic_kha_fox_utils_SimpleDraw.roundedRectPoints(x,y,width,height,radius,segments),strength);
};
no_logic_kha_fox_utils_SimpleDraw.roundedRectFill = function(g2,x,y,width,height,radius,segments) {
	if(segments == null) {
		segments = 0;
	}
	if(radius == null) {
		radius = 5.0;
	}
	kha_graphics2_GraphicsExtension.fillPolygon(g2,0,0,no_logic_kha_fox_utils_SimpleDraw.roundedRectPoints(x,y,width,height,radius,segments));
};
no_logic_kha_fox_utils_SimpleDraw.roundedRectPoints = function(x,y,width,height,radius,segments) {
	if(segments == null) {
		segments = 0;
	}
	if(radius == null) {
		radius = 5.0;
	}
	var rad1 = 5.0;
	var rad2 = 5.0;
	var rad3 = 5.0;
	var rad4 = 5.0;
	if(radius != null) {
		if(typeof(radius) == "number") {
			rad4 = radius;
			rad3 = rad4;
			rad2 = rad3;
			rad1 = rad2;
		} else if(((radius) instanceof Array)) {
			if(radius.length == 4) {
				rad1 = radius[0];
				rad2 = radius[1];
				rad3 = radius[2];
				rad4 = radius[3];
			}
		}
	}
	if(width > height) {
		rad4 = no_logic_fox_utils_MathUtils.clamp(rad2 > rad4 ? rad2 : rad4,0,height * 0.5);
		rad3 = rad4;
		rad2 = rad3;
		rad1 = rad2;
	} else {
		rad4 = no_logic_fox_utils_MathUtils.clamp(rad1 > rad3 ? rad1 : rad3,0,width * 0.5);
		rad3 = rad4;
		rad2 = rad3;
		rad1 = rad2;
	}
	var points = [];
	points.push(new kha_math_Vector2(x + radius,y));
	var _g = 0;
	var _g1 = no_logic_kha_fox_utils_SimpleDraw.quadraticCurvePoints(x + width - rad2,y,x + width,y,x + width,y + rad2);
	while(_g < _g1.length) points.push(_g1[_g++]);
	var _g = 0;
	var _g1 = no_logic_kha_fox_utils_SimpleDraw.quadraticCurvePoints(x + width,y + height - rad3,x + width,y + height,x + width - rad3,y + height);
	while(_g < _g1.length) points.push(_g1[_g++]);
	var _g = 0;
	var _g1 = no_logic_kha_fox_utils_SimpleDraw.quadraticCurvePoints(x + rad4,y + height,x,y + height,x,y + height - rad4);
	while(_g < _g1.length) points.push(_g1[_g++]);
	var _g = 0;
	var _g1 = no_logic_kha_fox_utils_SimpleDraw.quadraticCurvePoints(x,y + rad1,x,y,x + rad1,y);
	while(_g < _g1.length) points.push(_g1[_g++]);
	return points;
};
no_logic_kha_fox_utils_SimpleDraw.drawLines = function(g2,x,y,vertices,strength) {
	if(strength == null) {
		strength = 1;
	}
	var iterator_current = 0;
	while(iterator_current < vertices.length) {
		var v1 = vertices[iterator_current++];
		g2.drawLine(v1.x + x,v1.y + y,v1.z + x,v1.w + y,strength);
	}
};
var no_logic_kha_fox_utils_TimeTrack = function() { };
$hxClasses["no.logic.kha.fox.utils.TimeTrack"] = no_logic_kha_fox_utils_TimeTrack;
no_logic_kha_fox_utils_TimeTrack.__name__ = "no.logic.kha.fox.utils.TimeTrack";
no_logic_kha_fox_utils_TimeTrack.start = function() {
	no_logic_kha_fox_utils_TimeTrack.time = kha_System.get_time();
};
no_logic_kha_fox_utils_TimeTrack.stop = function(returnAsSeconds) {
	if(returnAsSeconds == null) {
		returnAsSeconds = false;
	}
	if(returnAsSeconds) {
		return (kha_System.get_time() - no_logic_kha_fox_utils_TimeTrack.time) * 1000;
	} else {
		return kha_System.get_time() - no_logic_kha_fox_utils_TimeTrack.time;
	}
};
var no_logic_kha_fox_utils_ZipFile = function(bytesOrFile,autoLoad,onReady) {
	if(autoLoad == null) {
		autoLoad = false;
	}
	this.noCache = false;
	this.images = [];
	this.files = [];
	if(bytesOrFile != null) {
		if(onReady != null) {
			this.onReady = onReady;
		}
		if(((bytesOrFile) instanceof kha_internal_BytesBlob)) {
			bytesOrFile = (js_Boot.__cast(bytesOrFile , kha_internal_BytesBlob)).toBytes();
		}
		if(((bytesOrFile) instanceof haxe_io_Bytes)) {
			this.rawBytes = bytesOrFile;
			if(autoLoad) {
				this.parseZip();
				if(onReady != null) {
					onReady(this);
				}
			}
		} else if(typeof(bytesOrFile) == "string") {
			this.file = bytesOrFile;
			if(autoLoad) {
				this.load();
			}
		}
	}
};
$hxClasses["no.logic.kha.fox.utils.ZipFile"] = no_logic_kha_fox_utils_ZipFile;
no_logic_kha_fox_utils_ZipFile.__name__ = "no.logic.kha.fox.utils.ZipFile";
no_logic_kha_fox_utils_ZipFile.prototype = {
	rawBytes: null
	,file: null
	,loader: null
	,entries: null
	,files: null
	,images: null
	,noCache: null
	,onReady: null
	,load: function(file) {
		if(file != null) {
			this.file = file;
		} else if(this.file == null && this.rawBytes != null) {
			this.parseZip();
			if(this.onReady != null) {
				this.onReady(this);
			}
		} else {
			this.loader = new no_logic_fox_loader_Loader();
			this.loader.onComplete = $bind(this,this.onFileLoaded);
			this.loader.onError = $bind(this,this.onFileLoadError);
			this.loader.preventFileCaching = this.noCache;
			this.loader.load(this.file);
		}
	}
	,onFileLoaded: function(uxl) {
		this.rawBytes = uxl.contentRAW;
		this.parseZip();
		if(this.onReady != null) {
			this.onReady(this);
		}
	}
	,onFileLoadError: function(uxl) {
	}
	,parseZip: function() {
		this.files = [];
		this.images = [];
		this.entries = new haxe_ds_StringMap();
		var zip = new zip_ZipReader(this.rawBytes);
		var entry;
		while(true) {
			entry = zip.getNextEntry();
			if(!(entry != null)) {
				break;
			}
			var fn = entry.fileName;
			fn = fn.split("\\").join("/");
			this.entries.h[fn] = entry;
			this.files.push(fn);
			if(fn.indexOf(".png") != -1 || fn.indexOf(".jpg") != -1 || fn.indexOf(".gif") != -1) {
				this.images.push(fn);
			}
		}
	}
	,getFile: function(path) {
		if(this.entries == null) {
			haxe_Log.trace("zipfile is empty or not parsed yet!",{ fileName : "no/logic/kha/fox/utils/ZipFile.hx", lineNumber : 152, className : "no.logic.kha.fox.utils.ZipFile", methodName : "getFile"});
			return null;
		}
		var entry = this.entries.h[path];
		if(entry == null) {
			return null;
		}
		return zip_Zip.getBytes(entry);
	}
	,getTextFile: function(path) {
		if(this.entries == null) {
			haxe_Log.trace("zipfile is empty or not parsed yet!",{ fileName : "no/logic/kha/fox/utils/ZipFile.hx", lineNumber : 167, className : "no.logic.kha.fox.utils.ZipFile", methodName : "getTextFile"});
			return null;
		}
		var entry = this.entries.h[path];
		if(entry == null) {
			return null;
		}
		return zip_Zip.getString(entry);
	}
	,getImage: function(path,onImageLoaded) {
		if(onImageLoaded == null) {
			return;
		}
		no_logic_kha_fox_utils_ImageUtils.imageFromFileBytes(this.getFile(path),onImageLoaded,path);
	}
	,__class__: no_logic_kha_fox_utils_ZipFile
};
var tween_Tweenable = function() { };
$hxClasses["tween.Tweenable"] = tween_Tweenable;
tween_Tweenable.__name__ = "tween.Tweenable";
tween_Tweenable.__isInterface__ = true;
tween_Tweenable.prototype = {
	tweenFunc: null
	,step: null
	,check: null
	,hasUpdated: null
	,__class__: tween_Tweenable
};
var tween_TweenAction = function(target,channel) {
	this.time = this.totalDuration = 0.0;
	this.channel = channel;
	this.target = target;
};
$hxClasses["tween.TweenAction"] = tween_TweenAction;
tween_TweenAction.__name__ = "tween.TweenAction";
tween_TweenAction.prototype = {
	prev: null
	,next: null
	,tweens: null
	,time: null
	,totalDuration: null
	,prevCreated: null
	,triggeringID: null
	,triggerID: null
	,triggerOnActionComplete: null
	,onActionCompleteFunc: null
	,onStepFunc: null
	,channel: null
	,target: null
	,createTween: function(property,duration,tween) {
		if(this.tweens == null) {
			this.tweens = new haxe_ds_StringMap();
		}
		this.totalDuration = Math.max(this.totalDuration,duration);
		this.tweens.h[property] = this.prevCreated = tween;
		return this;
	}
	,append: function(t) {
		this.next = t;
		t.prev = this;
		return t;
	}
	,remove: function() {
		if(this.prev != null) {
			this.prev.next = this.next;
		}
		if(this.next != null) {
			this.next.prev = this.prev;
		}
	}
	,ease: function(func,all) {
		if(all == null) {
			all = true;
		}
		if(all) {
			if(this.tweens != null) {
				var p = haxe_ds_StringMap.valueIterator(this.tweens.h);
				while(p.hasNext()) p.next().tweenFunc = func;
			}
		} else if(this.prevCreated != null) {
			this.prevCreated.tweenFunc = func;
		}
		return this;
	}
	,wait: function(duration) {
		var step = this.createAction();
		step.totalDuration = duration;
		return step.createAction();
	}
	,createAction: function() {
		return this.append(new tween_TweenAction(this.target,this.channel));
	}
	,finish: function() {
		if(this.onActionCompleteFunc != null) {
			this.onActionCompleteFunc();
		}
		if(this.triggerID != null && this.triggerOnActionComplete) {
			this.channel.runTrigger(this.triggerID);
			this.triggerID = null;
		}
		this.remove();
	}
	,step: function(delta) {
		if(this.totalDuration == -1 || this.triggeringID != null) {
			return this;
		}
		if(!this.triggerOnActionComplete && this.triggerID != null) {
			this.channel.runTrigger(this.triggerID);
			this.triggerID = null;
		}
		if(this.tweens != null) {
			var p = haxe_ds_StringMap.valueIterator(this.tweens.h);
			while(p.hasNext()) {
				var p1 = p.next();
				if(!p1.hasUpdated) {
					p1.check();
				}
				p1.step(delta);
			}
		}
		this.time += delta;
		if(this.onStepFunc != null) {
			this.onStepFunc(this.time / this.totalDuration);
		}
		if(this.time >= this.totalDuration) {
			this.finish();
		}
		return this;
	}
	,prop: function(property,value,duration) {
		return this.createTween(property,duration,new tween_tweens_FloatTween(this,property,value,duration));
	}
	,propMultiple: function(tweens,duration) {
		var _g = 0;
		var _g1 = Reflect.fields(tweens);
		while(_g < _g1.length) {
			var p = _g1[_g];
			++_g;
			this.prop(p,Reflect.getProperty(tweens,p),duration);
		}
		return this;
	}
	,__class__: tween_TweenAction
};
var tween__$Delta_TweenSequence = function(target,channel) {
	tween_TweenAction.call(this,target,channel);
};
$hxClasses["tween._Delta.TweenSequence"] = tween__$Delta_TweenSequence;
tween__$Delta_TweenSequence.__name__ = "tween._Delta.TweenSequence";
tween__$Delta_TweenSequence.__super__ = tween_TweenAction;
tween__$Delta_TweenSequence.prototype = $extend(tween_TweenAction.prototype,{
	complete: null
	,step: function(delta) {
		if(this.complete) {
			return this;
		}
		if(this.next == null) {
			this.complete = true;
		} else {
			this.next.step(delta);
		}
		return this;
	}
	,removeTweensOf: function(target) {
		var removeList = [];
		var c = this.next;
		while(c != null) {
			if(c.target == target) {
				removeList.push(c);
			}
			c = c.next;
		}
		var _g = 0;
		while(_g < removeList.length) removeList[_g++].remove();
	}
	,runTrigger: function(t) {
		var n = this.next;
		while(n != null) {
			if(n.triggeringID == t) {
				n.triggeringID = null;
				return;
			}
			n = n.next;
		}
	}
	,__class__: tween__$Delta_TweenSequence
});
var tween_TweenChannel = function() {
	this.count = 0;
	this.sequences = [];
	this.timeScale = 1.0;
	this.time = 0.0;
};
$hxClasses["tween.TweenChannel"] = tween_TweenChannel;
tween_TweenChannel.__name__ = "tween.TweenChannel";
tween_TweenChannel.prototype = {
	time: null
	,timeScale: null
	,sequences: null
	,count: null
	,createSequence: function(target) {
		var s = new tween__$Delta_TweenSequence(target,this);
		this.sequences.push(s);
		return s;
	}
	,runTrigger: function(t) {
		var _g = 0;
		var _g1 = this.sequences;
		while(_g < _g1.length) _g1[_g++].runTrigger(t);
	}
	,tween: function(target) {
		return this.createSequence(target).createAction();
	}
	,removeTweensOf: function(target) {
		var _g = 0;
		var _g1 = this.sequences;
		while(_g < _g1.length) _g1[_g++].removeTweensOf(target);
	}
	,step: function(delta) {
		delta *= this.timeScale;
		this.time += delta;
		var n = this.sequences.length;
		while(n-- > 0) this.sequences[n].step(delta);
		this.count++;
		if(this.count > 60) {
			this.count = 0;
			n = this.sequences.length;
			while(n-- > 0) if(this.sequences[n].complete) {
				this.sequences.splice(n,1);
			}
		}
	}
	,__class__: tween_TweenChannel
};
var tween_easing_Linear = function() { };
$hxClasses["tween.easing.Linear"] = tween_easing_Linear;
tween_easing_Linear.__name__ = "tween.easing.Linear";
tween_easing_Linear.none = function(start,delta,time) {
	return start + delta * time;
};
var tween_Delta = function() { };
$hxClasses["tween.Delta"] = tween_Delta;
tween_Delta.__name__ = "tween.Delta";
var tween_easing_Cubic = function() { };
$hxClasses["tween.easing.Cubic"] = tween_easing_Cubic;
tween_easing_Cubic.__name__ = "tween.easing.Cubic";
tween_easing_Cubic.easeOut = function(start,delta,t) {
	return delta * (--t * t * t + 1) + start;
};
var tween_tweens_FloatTween = function(tween,name,to,duration) {
	this.tweenFunc = tween_Delta.defaultTweenFunc;
	this.duration = duration;
	this.durationR = 1 / duration;
	this.tween = tween;
	this.to = to;
	this.name = name;
	this.time = 0.0;
};
$hxClasses["tween.tweens.FloatTween"] = tween_tweens_FloatTween;
tween_tweens_FloatTween.__name__ = "tween.tweens.FloatTween";
tween_tweens_FloatTween.__interfaces__ = [tween_Tweenable];
tween_tweens_FloatTween.prototype = {
	tween: null
	,duration: null
	,durationR: null
	,time: null
	,from: null
	,to: null
	,difference: null
	,current: null
	,tweenFunc: null
	,complete: null
	,name: null
	,hasUpdated: null
	,init: function(from) {
		if(!this.hasUpdated) {
			this.from = from;
			this.difference = this.to - from;
			this.hasUpdated = true;
		}
	}
	,step: function(delta) {
		this.time += delta;
		var c = this.current;
		if(this.time > this.duration) {
			this.time = this.duration;
			c = this.from + this.difference;
			this.complete = true;
		} else {
			c = this.tweenFunc(this.from,this.difference,this.time * this.durationR);
		}
		this.set(c);
	}
	,set: function(val) {
		if(val != this.current) {
			this.apply(this.current = val);
		}
	}
	,check: function() {
		this.init(Reflect.getProperty(this.tween.target,this.name));
	}
	,apply: function(val) {
		Reflect.setProperty(this.tween.target,this.name,val);
	}
	,__class__: tween_tweens_FloatTween
};
var tween_utils_Stopwatch = function() { };
$hxClasses["tween.utils.Stopwatch"] = tween_utils_Stopwatch;
tween_utils_Stopwatch.__name__ = "tween.utils.Stopwatch";
var zip_Zip = function() { };
$hxClasses["zip.Zip"] = zip_Zip;
zip_Zip.__name__ = "zip.Zip";
zip_Zip.getBytes = function(f) {
	if(f.data == null) {
		f.input.set_position(f.position);
		if(f.compressed) {
			var input = new haxe_io_BytesInput(f.input.read(f.dataSize));
			var p = input.pos;
			if(zip_Zip.tmp == null) {
				zip_Zip.tmp = new haxe_io_Bytes(new ArrayBuffer(65536));
			}
			var out = new haxe_io_BytesBuffer();
			var z = new haxe_zip_InflateImpl(input,false,false);
			while(true) {
				var n = z.readBytes(zip_Zip.tmp,0,65536);
				out.addBytes(zip_Zip.tmp,0,n);
				if(n < 65536) {
					break;
				}
			}
			input.set_position(p);
			return out.getBytes();
		} else {
			return f.input.read(f.dataSize);
		}
	}
	return f.data;
};
zip_Zip.getString = function(f) {
	if(f.data == null) {
		f.input.set_position(f.position);
		if(f.compressed) {
			var input = new haxe_io_BytesInput(f.input.read(f.dataSize));
			var p = input.pos;
			if(zip_Zip.tmp == null) {
				zip_Zip.tmp = new haxe_io_Bytes(new ArrayBuffer(65536));
			}
			var out = new haxe_io_BytesBuffer();
			var z = new haxe_zip_InflateImpl(input,false,false);
			while(true) {
				var n = z.readBytes(zip_Zip.tmp,0,65536);
				out.addBytes(zip_Zip.tmp,0,n);
				if(n < 65536) {
					break;
				}
			}
			input.set_position(p);
			return out.getBytes().toString();
		} else {
			return f.input.readString(f.dataSize);
		}
	} else {
		return f.data.toString();
	}
};
var zip_ExtraField = $hxEnums["zip.ExtraField"] = { __ename__ : true, __constructs__ : ["FUnknown","FInfoZipUnicodePath","FUtf8"]
	,FUnknown: ($_=function(tag,bytes) { return {_hx_index:0,tag:tag,bytes:bytes,__enum__:"zip.ExtraField",toString:$estr}; },$_.__params__ = ["tag","bytes"],$_)
	,FInfoZipUnicodePath: ($_=function(name,crc) { return {_hx_index:1,name:name,crc:crc,__enum__:"zip.ExtraField",toString:$estr}; },$_.__params__ = ["name","crc"],$_)
	,FUtf8: {_hx_index:2,__enum__:"zip.ExtraField",toString:$estr}
};
var zip_ZipReader = function(bytes) {
	try {
		this.input = new haxe_io_BytesInput(bytes);
		this.bytes = bytes;
	} catch( _g ) {
		bytes = new haxe_io_Bytes(new ArrayBuffer(128));
		this.input = new haxe_io_BytesInput(bytes);
		this.bytes = bytes;
	}
	haxe_zip_Reader.call(this,this.input);
};
$hxClasses["zip.ZipReader"] = zip_ZipReader;
zip_ZipReader.__name__ = "zip.ZipReader";
zip_ZipReader.__super__ = haxe_zip_Reader;
zip_ZipReader.prototype = $extend(haxe_zip_Reader.prototype,{
	bytes: null
	,input: null
	,readExtra: function(length) {
		var fields = new haxe_ds_List();
		while(length > 0) {
			if(length < 4) {
				throw haxe_Exception.thrown("Invalid extra fields data");
			}
			var tag = this.i.readUInt16();
			var len = this.i.readUInt16();
			if(length < len) {
				throw haxe_Exception.thrown("Invalid extra fields data");
			}
			if(tag == 28789) {
				var version = this.i.readByte();
				if(version != 1) {
					var data = new haxe_io_BytesBuffer();
					data.addByte(version);
					data.add(this.i.read(len - 1));
					fields.add(zip_ExtraField.FUnknown(tag,data.getBytes()));
				} else {
					var crc = this.i.readInt32();
					fields.add(zip_ExtraField.FInfoZipUnicodePath(this.i.read(len - 5).toString(),crc));
				}
			} else {
				fields.add(zip_ExtraField.FUnknown(tag,this.i.read(len)));
			}
			length -= 4 + len;
		}
		return fields;
	}
	,getNextEntry: function() {
		var i = this.input;
		var h = i.readInt32();
		if(h == 33639248 || h == 101010256) {
			return null;
		}
		if(h != 67324752) {
			throw haxe_Exception.thrown("Invalid Zip Data");
		}
		i.readUInt16();
		var flags = i.readUInt16();
		if((flags & 63473) != 0) {
			throw haxe_Exception.thrown("Unsupported flags " + flags);
		}
		var compression = i.readUInt16();
		var compressed = compression != 0;
		if(compressed && compression != 8) {
			throw haxe_Exception.thrown("Unsupported compression " + compression);
		}
		var mtime = this.readZipDate();
		var crc32 = i.readInt32();
		var csize = i.readInt32();
		var usize = i.readInt32();
		var fnamelen = i.readInt16();
		var elen = i.readInt16();
		var fname = i.readString(fnamelen);
		var fields = this.readExtra(elen);
		if((flags & 2048) != 0) {
			fields.push(zip_ExtraField.FUtf8);
		}
		if((flags & 8) != 0) {
			crc32 = null;
		}
		var e = { fileName : fname, fileSize : usize, fileTime : mtime, input : i, bytes : this.bytes, position : i.pos, compressed : compressed, dataSize : csize, data : null, crc32 : crc32, extraFields : fields};
		if(e.crc32 == null) {
			haxe_Log.trace("CRC32 is NULL, this is not optimal, just saying...",{ fileName : "zip/ZipReader.hx", lineNumber : 150, className : "zip.ZipReader", methodName : "getNextEntry"});
			if(e.compressed) {
				var p = i.pos;
				if(zip_Zip.tmp == null) {
					zip_Zip.tmp = new haxe_io_Bytes(new ArrayBuffer(65536));
				}
				var out = new haxe_io_BytesBuffer();
				var z = new haxe_zip_InflateImpl(i,false,false);
				while(true) {
					var n = z.readBytes(zip_Zip.tmp,0,65536);
					out.addBytes(zip_Zip.tmp,0,n);
					if(n < 65536) {
						break;
					}
				}
				i.set_position(p);
				e.data = out.getBytes();
			} else {
				i.set_position(i.pos + e.dataSize);
			}
			e.crc32 = i.readInt32();
			if(e.crc32 == 134695760) {
				e.crc32 = i.readInt32();
			}
			e.dataSize = i.readInt32();
			e.fileSize = i.readInt32();
			e.dataSize = e.fileSize;
			e.compressed = false;
		} else {
			i.set_position(i.pos + e.dataSize);
		}
		if(StringTools.endsWith(e.fileName,"/")) {
			return this.getNextEntry();
		}
		return e;
	}
	,__class__: zip_ZipReader
});
var zui_Ext = function() { };
$hxClasses["zui.Ext"] = zui_Ext;
zui_Ext.__name__ = "zui.Ext";
zui_Ext.textArea = function(ui,handle,align,editable) {
	if(editable == null) {
		editable = true;
	}
	if(align == null) {
		align = 0;
	}
	handle.text = StringTools.replace(handle.text,"\t","    ");
	var lines = handle.text.split("\n");
	var selected = ui.textSelectedHandle == handle;
	var cursorStartX = ui.cursorX;
	var keyPressed = selected && ui.isKeyPressed;
	ui.highlightOnSelect = false;
	ui.tabSwitchEnabled = false;
	ui.g.set_color(ui.t.SEPARATOR_COL);
	var g = ui.g;
	var x = ui._x + ui.buttonOffsetY;
	var y = ui._y + ui.buttonOffsetY;
	var w = ui._w - ui.buttonOffsetY * 2;
	var h = lines.length * (ui.t.ELEMENT_H * ui.ops.scaleFactor) - ui.buttonOffsetY * 2;
	if(!ui.enabled) {
		ui.fadeColor();
	}
	g.fillRect(x,y - 1,w,h + 1);
	var _g = 0;
	var _g1 = lines.length;
	while(_g < _g1) {
		var i = _g++;
		if(!selected && ui.getHover() || selected && i == handle.position) {
			handle.position = i;
			handle.text = lines[i];
			ui.textInput(handle,"",align,editable);
			if(keyPressed && ui.key != 13) {
				lines[i] = ui.textSelected;
			}
		} else {
			ui.text(lines[i],align);
		}
		ui._y -= ui.t.ELEMENT_OFFSET * ui.ops.scaleFactor;
	}
	ui._y += ui.t.ELEMENT_OFFSET * ui.ops.scaleFactor;
	if(keyPressed) {
		if(ui.key == 40 && handle.position < lines.length - 1) {
			handle.position++;
		}
		if(ui.key == 38 && handle.position > 0) {
			handle.position--;
		}
		if(editable && ui.key == 13) {
			handle.position++;
			lines.splice(handle.position,0,HxOverrides.substr(lines[handle.position - 1],ui.cursorX,null));
			lines[handle.position - 1] = HxOverrides.substr(lines[handle.position - 1],0,ui.cursorX);
			ui.startTextEdit(handle);
			ui.cursorX = ui.highlightAnchor = 0;
		}
		if(editable && ui.key == 8 && cursorStartX == 0 && handle.position > 0) {
			handle.position--;
			ui.cursorX = ui.highlightAnchor = lines[handle.position].length;
			lines[handle.position] += lines[handle.position + 1];
			lines.splice(handle.position + 1,1);
		}
		ui.textSelected = lines[handle.position];
	}
	ui.highlightOnSelect = true;
	ui.tabSwitchEnabled = true;
	handle.text = lines.join("\n");
	return handle.text;
};
var zui_Handle = function(ops) {
	this.changed = false;
	this.dragY = 0;
	this.dragX = 0;
	this.dragEnabled = false;
	this.lastMaxY = 0.0;
	this.lastMaxX = 0.0;
	this.layout = 0;
	this.scrollEnabled = false;
	this.scrollOffset = 0.0;
	this.redraws = 2;
	this.texture = null;
	this.text = "";
	this.value = 0.0;
	this.color = -1;
	this.position = 0;
	this.selected = false;
	if(ops != null) {
		if(ops.selected != null) {
			this.selected = ops.selected;
		}
		if(ops.position != null) {
			this.position = ops.position;
		}
		if(ops.value != null) {
			this.value = ops.value;
		}
		if(ops.text != null) {
			this.text = ops.text;
		}
		if(ops.color != null) {
			this.color = ops.color;
		}
		if(ops.layout != null) {
			this.layout = ops.layout;
		}
	}
};
$hxClasses["zui.Handle"] = zui_Handle;
zui_Handle.__name__ = "zui.Handle";
zui_Handle.prototype = {
	selected: null
	,position: null
	,color: null
	,value: null
	,text: null
	,texture: null
	,redraws: null
	,scrollOffset: null
	,scrollEnabled: null
	,layout: null
	,lastMaxX: null
	,lastMaxY: null
	,dragEnabled: null
	,dragX: null
	,dragY: null
	,changed: null
	,children: null
	,nest: function(i,ops) {
		if(this.children == null) {
			this.children = new haxe_ds_IntMap();
		}
		var c = this.children.h[i];
		if(c == null) {
			c = new zui_Handle(ops);
			this.children.h[i] = c;
		}
		return c;
	}
	,__class__: zui_Handle
};
var zui_Themes = function() { };
$hxClasses["zui.Themes"] = zui_Themes;
zui_Themes.__name__ = "zui.Themes";
var zui_Zui = function(ops) {
	this.mouseOffsetY = 0;
	this.mouseOffsetX = 0;
	this.scaledDestHeight = 0;
	this.scaledDestWidth = 0;
	this.scaledSourceHeight = 0;
	this.scaledSourceWidth = 0;
	this.useScaled = false;
	this.checkSelectImage = null;
	this.elementsBaked = false;
	this.scissor = false;
	this.tabVertical = false;
	this.tabScroll = 0.0;
	this.tabHandle = null;
	this.tabColors = null;
	this.tabNames = null;
	this.tooltipTime = 0.0;
	this.tooltipWait = false;
	this.tooltipShown = false;
	this.tooltipY = 0.0;
	this.tooltipX = 0.0;
	this.tooltipInvertY = false;
	this.tooltipImgMaxWidth = null;
	this.tooltipImg = null;
	this.tooltipText = "";
	this.comboToSubmit = 0;
	this.submitComboHandle = null;
	this.comboSelectedWindow = null;
	this.comboSelectedHandle = null;
	this.tabPressedHandle = null;
	this.tabPressed = false;
	this.textToSubmit = "";
	this.submitTextHandle = null;
	this.textSelectedHandle = null;
	this.restoreY = -1.0;
	this.restoreX = -1.0;
	this.windowHeaderH = 0.0;
	this.windowHeaderW = 0.0;
	this.dragHandle = null;
	this.scrollHandle = null;
	this.windowEnded = true;
	this._windowY = 0.0;
	this._windowX = 0.0;
	this.scrollAlign = 0.0;
	this.curRatio = -1;
	this.highlightAnchor = 0;
	this.cursorX = 0;
	this.inputStartedTime = 0.0;
	this.key = null;
	this.isReturnDown = false;
	this.isEscapeDown = false;
	this.isDeleteDown = false;
	this.isBackspaceDown = false;
	this.isADown = false;
	this.isAltDown = false;
	this.isCtrlDown = false;
	this.isShiftDown = false;
	this.isKeyDown = false;
	this.isKeyPressed = false;
	this.inputWheelDelta = 0;
	this.inputEnabled = true;
	this.inputRegistered = false;
	this.touchHold = false;
	this.highlightFullRow = false;
	this.tabSwitchEnabled = true;
	this.highlightOnSelect = true;
	this.alwaysRedraw = false;
	this.scrollEnabled = true;
	this.changed = false;
	this.isReleased = false;
	this.isHovered = false;
	this.isPushed = false;
	this.isStarted = false;
	this.enabled = true;
	this.isTyping = false;
	this.isScrolling = false;
	if(ops.theme == null) {
		ops.theme = zui_Themes.dark;
	}
	this.t = ops.theme;
	if(ops.khaWindowId == null) {
		ops.khaWindowId = 0;
	}
	if(ops.scaleFactor == null) {
		ops.scaleFactor = 1.0;
	}
	if(ops.autoNotifyInput == null) {
		ops.autoNotifyInput = true;
	}
	this.ops = ops;
	this.setScale(ops.scaleFactor);
	if(ops.autoNotifyInput) {
		this.registerInput();
	}
	if(zui_Zui.copyReceiver == null) {
		zui_Zui.copyReceiver = this;
		kha_System.notifyOnCutCopyPaste($bind(this,this.onCut),$bind(this,this.onCopy),$bind(this,this.onPaste));
		kha_System.notifyOnFrames(function(frames) {
			if((zui_Zui.isCopy || zui_Zui.isPaste) && ++zui_Zui.copyFrame > 1) {
				zui_Zui.isCopy = zui_Zui.isCut = zui_Zui.isPaste = false;
				zui_Zui.copyFrame = 0;
			}
		});
	}
	this.rtTextPipeline = kha_graphics4_Graphics2.createTextPipeline(kha_graphics4_Graphics2.createTextVertexStructure());
	this.rtTextPipeline.alphaBlendSource = 1;
	this.rtTextPipeline.compile();
};
$hxClasses["zui.Zui"] = zui_Zui;
zui_Zui.__name__ = "zui.Zui";
zui_Zui.prototype = {
	isScrolling: null
	,isTyping: null
	,enabled: null
	,isStarted: null
	,isPushed: null
	,isHovered: null
	,isReleased: null
	,changed: null
	,scrollEnabled: null
	,alwaysRedraw: null
	,highlightOnSelect: null
	,tabSwitchEnabled: null
	,highlightFullRow: null
	,touchHold: null
	,inputRegistered: null
	,inputEnabled: null
	,inputX: null
	,inputY: null
	,inputStartedX: null
	,inputStartedY: null
	,inputDX: null
	,inputDY: null
	,inputWheelDelta: null
	,inputStarted: null
	,inputStartedR: null
	,inputReleased: null
	,inputReleasedR: null
	,inputDown: null
	,inputDownR: null
	,isKeyPressed: null
	,isKeyDown: null
	,isShiftDown: null
	,isCtrlDown: null
	,isAltDown: null
	,isADown: null
	,isBackspaceDown: null
	,isDeleteDown: null
	,isEscapeDown: null
	,isReturnDown: null
	,key: null
	,char: null
	,inputStartedTime: null
	,cursorX: null
	,highlightAnchor: null
	,ratios: null
	,curRatio: null
	,xBeforeSplit: null
	,wBeforeSplit: null
	,g: null
	,t: null
	,ops: null
	,globalG: null
	,rtTextPipeline: null
	,fontSize: null
	,fontOffsetY: null
	,arrowOffsetX: null
	,arrowOffsetY: null
	,titleOffsetX: null
	,buttonOffsetY: null
	,checkOffsetX: null
	,checkOffsetY: null
	,checkSelectOffsetX: null
	,checkSelectOffsetY: null
	,radioOffsetX: null
	,radioOffsetY: null
	,radioSelectOffsetX: null
	,radioSelectOffsetY: null
	,scrollAlign: null
	,_x: null
	,_y: null
	,_w: null
	,_h: null
	,_windowX: null
	,_windowY: null
	,_windowW: null
	,_windowH: null
	,currentWindow: null
	,windowEnded: null
	,scrollHandle: null
	,dragHandle: null
	,windowHeaderW: null
	,windowHeaderH: null
	,restoreX: null
	,restoreY: null
	,textSelectedHandle: null
	,textSelected: null
	,submitTextHandle: null
	,textToSubmit: null
	,tabPressed: null
	,tabPressedHandle: null
	,comboSelectedHandle: null
	,comboSelectedWindow: null
	,comboSelectedAlign: null
	,comboSelectedTexts: null
	,comboItemCount: null
	,comboItemOffset: null
	,comboSelectedLabel: null
	,comboSelectedX: null
	,comboSelectedY: null
	,comboSelectedW: null
	,submitComboHandle: null
	,comboToSubmit: null
	,tooltipText: null
	,tooltipImg: null
	,tooltipImgMaxWidth: null
	,tooltipInvertY: null
	,tooltipX: null
	,tooltipY: null
	,tooltipShown: null
	,tooltipWait: null
	,tooltipTime: null
	,tabNames: null
	,tabColors: null
	,tabHandle: null
	,tabScroll: null
	,tabVertical: null
	,scissor: null
	,elementsBaked: null
	,checkSelectImage: null
	,useScaled: null
	,scaledSourceWidth: null
	,scaledSourceHeight: null
	,scaledDestWidth: null
	,scaledDestHeight: null
	,mouseOffsetX: null
	,mouseOffsetY: null
	,setScale: function(factor) {
		this.ops.scaleFactor = factor;
		this.fontSize = this.t.FONT_SIZE * this.ops.scaleFactor | 0;
		var fontHeight = this.ops.font.height(this.fontSize);
		this.fontOffsetY = (this.t.ELEMENT_H * this.ops.scaleFactor - fontHeight) / 2;
		this.arrowOffsetY = (this.t.ELEMENT_H * this.ops.scaleFactor - this.t.ARROW_SIZE * this.ops.scaleFactor) / 2;
		this.arrowOffsetX = this.arrowOffsetY;
		this.titleOffsetX = (this.arrowOffsetX * 2 + this.t.ARROW_SIZE * this.ops.scaleFactor) / this.ops.scaleFactor;
		this.buttonOffsetY = (this.t.ELEMENT_H * this.ops.scaleFactor - this.t.BUTTON_H * this.ops.scaleFactor) / 2;
		this.checkOffsetY = (this.t.ELEMENT_H * this.ops.scaleFactor - this.t.CHECK_SIZE * this.ops.scaleFactor) / 2;
		this.checkOffsetX = this.checkOffsetY;
		this.checkSelectOffsetY = (this.t.CHECK_SIZE * this.ops.scaleFactor - this.t.CHECK_SELECT_SIZE * this.ops.scaleFactor) / 2;
		this.checkSelectOffsetX = this.checkSelectOffsetY;
		this.radioOffsetY = (this.t.ELEMENT_H * this.ops.scaleFactor - this.t.CHECK_SIZE * this.ops.scaleFactor) / 2;
		this.radioOffsetX = this.radioOffsetY;
		this.radioSelectOffsetY = (this.t.CHECK_SIZE * this.ops.scaleFactor - this.t.CHECK_SELECT_SIZE * this.ops.scaleFactor) / 2;
		this.radioSelectOffsetX = this.radioSelectOffsetY;
		this.elementsBaked = false;
	}
	,bakeElements: function() {
		if(this.checkSelectImage != null) {
			this.checkSelectImage.unload();
		}
		this.checkSelectImage = kha_Image.createRenderTarget(this.t.CHECK_SELECT_SIZE * this.ops.scaleFactor | 0,this.t.CHECK_SELECT_SIZE * this.ops.scaleFactor | 0,null,0,1,this.ops.khaWindowId);
		var g = this.checkSelectImage.get_g2();
		g.begin(true,0);
		g.set_color(this.t.ACCENT_SELECT_COL);
		g.drawLine(0,0,this.checkSelectImage.get_width(),this.checkSelectImage.get_height(),2 * this.ops.scaleFactor);
		g.drawLine(this.checkSelectImage.get_width(),0,0,this.checkSelectImage.get_height(),2 * this.ops.scaleFactor);
		g.end();
		this.elementsBaked = true;
	}
	,registerInput: function() {
		var _gthis = this;
		kha_input_Mouse.get().notifyWindowed(this.ops.khaWindowId,$bind(this,this.onMouseDown),$bind(this,this.onMouseUp),$bind(this,this.onMouseMove),$bind(this,this.onMouseWheel));
		kha_input_Keyboard.get().notify($bind(this,this.onKeyDown),$bind(this,this.onKeyUp),$bind(this,this.onKeyPress));
		kha_System.notifyOnApplicationState(function() {
			_gthis.inputDX = _gthis.inputDY = 0;
		},null,null,null,null);
		this.inputRegistered = true;
	}
	,begin: function(g) {
		if(!this.elementsBaked) {
			this.bakeElements();
		}
		this.changed = false;
		this.globalG = g;
		this._x = 0;
		this._y = 0;
		this._w = 0;
		this._h = 0;
	}
	,end: function(last) {
		if(last == null) {
			last = true;
		}
		if(!this.windowEnded) {
			this.endWindow();
		}
		this.drawCombo();
		this.drawTooltip();
		this.tabPressedHandle = null;
		if(last) {
			this.endInput();
		}
	}
	,beginRegion: function(g,x,y,w) {
		if(!this.elementsBaked) {
			g.end();
			this.bakeElements();
			g.begin(false);
		}
		this.changed = false;
		this.globalG = g;
		this.g = g;
		this.currentWindow = null;
		this.tooltipText = "";
		this.tooltipImg = null;
		this._windowX = 0;
		this._windowY = 0;
		this._windowW = w;
		this._x = x;
		this._y = y;
		this._w = w;
	}
	,endRegion: function(last) {
		if(last == null) {
			last = true;
		}
		this.drawTooltip();
		this.tabPressedHandle = null;
		if(last) {
			this.endInput();
		}
	}
	,endInput: function() {
		this.isKeyPressed = false;
		this.inputStarted = false;
		this.inputStartedR = false;
		this.inputReleased = false;
		this.inputReleasedR = false;
		this.inputDX = 0;
		this.inputDY = 0;
		this.inputWheelDelta = 0;
		zui_Zui.textToPaste = "";
		if(zui_Zui.keyRepeat && this.isKeyDown && kha_Scheduler.time() - zui_Zui.keyRepeatTime > 0.05) {
			if(this.key == 8 || this.key == 46 || this.key == 37 || this.key == 39 || this.key == 38 || this.key == 40) {
				zui_Zui.keyRepeatTime = kha_Scheduler.time();
				this.isKeyPressed = true;
			}
		}
		if(zui_Zui.touchControls && this.inputDown && this.inputX == this.inputStartedX && this.inputY == this.inputStartedY && this.inputStartedTime > 0 && kha_Scheduler.time() - this.inputStartedTime > 0.5) {
			this.touchHold = true;
			this.inputStartedTime = 0;
		}
	}
	,inputChanged: function() {
		if(!(this.inputDX != 0 || this.inputDY != 0 || this.inputWheelDelta != 0 || this.inputStarted || this.inputStartedR || this.inputReleased || this.inputReleasedR || this.inputDown || this.inputDownR)) {
			return this.isKeyPressed;
		} else {
			return true;
		}
	}
	,windowDirty: function(handle,x,y,w,h) {
		var inputChanged = this.getInputInRect(x + handle.dragX,y + handle.dragY,w,h) && this.inputChanged();
		if(!(this.alwaysRedraw || this.isScrolling || this.isTyping)) {
			return inputChanged;
		} else {
			return true;
		}
	}
	,window: function(handle,x,y,w,h,drag) {
		if(drag == null) {
			drag = false;
		}
		if(handle.texture == null || w != handle.texture.get_width() || h != handle.texture.get_height()) {
			this.resize(handle,w,h,this.ops.khaWindowId);
		}
		if(!this.windowEnded) {
			this.endWindow();
		}
		this.windowEnded = false;
		this.g = handle.texture.get_g2();
		this.currentWindow = handle;
		this._windowX = x + handle.dragX;
		this._windowY = y + handle.dragY;
		this._windowW = w;
		this._windowH = h;
		this.windowHeaderW = 0;
		this.windowHeaderH = 0;
		if(this.windowDirty(handle,x,y,w,h)) {
			handle.redraws = 2;
		}
		if(zui_Zui.onBorderHover != null) {
			if(this.getInputInRect(this._windowX - 4,this._windowY,8,this._windowH)) {
				zui_Zui.onBorderHover(handle,0);
			} else if(this.getInputInRect(this._windowX + this._windowW - 4,this._windowY,8,this._windowH)) {
				zui_Zui.onBorderHover(handle,1);
			} else if(this.getInputInRect(this._windowX,this._windowY - 4,this._windowW,8)) {
				zui_Zui.onBorderHover(handle,2);
			} else if(this.getInputInRect(this._windowX,this._windowY + this._windowH - 4,this._windowW,8)) {
				zui_Zui.onBorderHover(handle,3);
			}
		}
		if(handle.redraws <= 0) {
			return false;
		}
		this._x = 0;
		this._y = handle.scrollOffset;
		if(handle.layout == 1) {
			w = this.t.ELEMENT_W * this.ops.scaleFactor | 0;
		}
		this._w = !handle.scrollEnabled ? w : w - (this.t.SCROLL_W * this.ops.scaleFactor | 0);
		this._h = h;
		this.tooltipText = "";
		this.tooltipImg = null;
		this.tabNames = null;
		if(this.t.FILL_WINDOW_BG) {
			this.g.begin(true,this.t.WINDOW_BG_COL);
		} else {
			this.g.begin(true,0);
			this.g.set_color(this.t.WINDOW_BG_COL);
			this.g.fillRect(this._x,this._y - handle.scrollOffset,handle.lastMaxX,handle.lastMaxY);
		}
		handle.dragEnabled = drag;
		if(drag) {
			if(this.inputStarted && this.getInputInRect(this._windowX,this._windowY,this._windowW,15 * this.ops.scaleFactor | 0)) {
				this.dragHandle = handle;
			} else if(this.inputReleased) {
				this.dragHandle = null;
			}
			if(handle == this.dragHandle) {
				handle.redraws = 2;
				handle.dragX += this.inputDX | 0;
				handle.dragY += this.inputDY | 0;
			}
			this._y += 15 * this.ops.scaleFactor | 0;
			this.windowHeaderH += 15 * this.ops.scaleFactor | 0;
		}
		return true;
	}
	,endWindow: function(bindGlobalG) {
		if(bindGlobalG == null) {
			bindGlobalG = true;
		}
		var handle = this.currentWindow;
		if(handle == null) {
			return;
		}
		if(handle.redraws > 0 || this.isScrolling || this.isTyping) {
			if(this.scissor) {
				this.scissor = false;
				this.g.disableScissor();
			}
			if(this.tabNames != null) {
				this.drawTabs();
			}
			if(handle.dragEnabled) {
				this.g.set_color(this.t.SEPARATOR_COL);
				this.g.fillRect(0,0,this._windowW,15 * this.ops.scaleFactor | 0);
			}
			var wh = this._windowH - this.windowHeaderH;
			var fullHeight = this._y - handle.scrollOffset - this.windowHeaderH;
			if(fullHeight < wh || handle.layout == 1 || !this.scrollEnabled) {
				handle.scrollEnabled = false;
				handle.scrollOffset = 0;
			} else {
				handle.scrollEnabled = true;
				if(this.tabScroll < 0) {
					handle.scrollOffset = this.tabScroll;
					this.tabScroll = 0;
				}
				var wy = this._windowY + this.windowHeaderH;
				var amountToScroll = fullHeight - wh;
				var barH = wh * Math.abs(wh / fullHeight);
				barH = Math.max(barH,this.t.ELEMENT_H * this.ops.scaleFactor);
				var totalScrollableArea = wh - barH;
				var barY = totalScrollableArea * (-handle.scrollOffset / amountToScroll) + this.windowHeaderH;
				var barFocus = this.getInputInRect(this._windowX + this._windowW - (this.t.SCROLL_W * this.ops.scaleFactor | 0),barY + this._windowY,this.t.SCROLL_W * this.ops.scaleFactor | 0,barH);
				if(this.inputStarted && barFocus) {
					this.scrollHandle = handle;
					this.isScrolling = true;
				}
				var scrollDelta = this.inputWheelDelta;
				if(zui_Zui.touchControls && this.inputDownR && this.inputDY != 0) {
					this.isScrolling = true;
					scrollDelta = -this.inputDY / 20;
				}
				if(handle == this.scrollHandle) {
					this.scroll(this.inputDY * (amountToScroll / totalScrollableArea),fullHeight);
				} else if(scrollDelta != 0 && this.comboSelectedHandle == null && this.getInputInRect(this._windowX,wy,this._windowW,wh)) {
					this.scroll(scrollDelta * (this.t.ELEMENT_H * this.ops.scaleFactor),fullHeight);
				}
				if(handle.scrollOffset > 0) {
					handle.scrollOffset = 0;
				} else if(fullHeight + handle.scrollOffset < wh) {
					handle.scrollOffset = wh - fullHeight;
				}
				this.g.set_color(this.t.WINDOW_BG_COL);
				this.g.fillRect(this._windowW - (this.t.SCROLL_W * this.ops.scaleFactor | 0),wy,this.t.SCROLL_W * this.ops.scaleFactor | 0,wh);
				this.g.set_color(this.t.ACCENT_COL);
				var barW = this.getInputInRect(this._windowX + this._windowW - (this.t.SCROLL_W * this.ops.scaleFactor | 0),wy,this.t.SCROLL_W * this.ops.scaleFactor | 0,wh) || handle == this.scrollHandle ? this.t.SCROLL_W * this.ops.scaleFactor | 0 : (this.t.SCROLL_W * this.ops.scaleFactor | 0) / 3;
				this.g.fillRect(this._windowW - barW - this.scrollAlign,barY,barW,barH);
			}
			handle.lastMaxX = this._x;
			handle.lastMaxY = this._y;
			if(handle.layout == 0) {
				handle.lastMaxX += this._windowW;
			} else {
				handle.lastMaxY += this._windowH;
			}
			handle.redraws--;
			this.g.end();
		}
		this.windowEnded = true;
		if(zui_Zui.alwaysRedrawWindow || handle.redraws > -4) {
			if(bindGlobalG) {
				this.globalG.begin(false);
			}
			this.globalG.set_color(this.t.WINDOW_TINT_COL);
			this.globalG.drawImage(handle.texture,this._windowX,this._windowY);
			if(bindGlobalG) {
				this.globalG.end();
			}
			if(handle.redraws <= 0) {
				handle.redraws--;
			}
		}
	}
	,scroll: function(delta,fullHeight) {
		this.currentWindow.scrollOffset -= delta;
	}
	,drawTabs: function() {
		this.inputX = this.restoreX;
		this.inputY = this.restoreY;
		if(this.currentWindow == null) {
			return;
		}
		var tabX = 0.0;
		var tabY = 0.0;
		var tabH = this.t.BUTTON_H * this.ops.scaleFactor * 1.1 | 0;
		var origy = this._y;
		this._y = this.currentWindow.dragEnabled ? 15 * this.ops.scaleFactor | 0 : 0;
		this.tabHandle.changed = false;
		this.g.set_color(this.t.SEPARATOR_COL);
		if(this.tabVertical) {
			this.g.fillRect(0,this._y,this.t.ELEMENT_W * this.ops.scaleFactor,this._windowH);
		} else {
			this.g.fillRect(0,this._y,this._windowW,this.buttonOffsetY + tabH + 2);
		}
		this.g.set_color(this.t.ACCENT_COL);
		if(this.tabVertical) {
			this.g.fillRect(this.t.ELEMENT_W * this.ops.scaleFactor,this._y,1,this._windowH);
		} else {
			this.g.fillRect(this.buttonOffsetY,this._y + this.buttonOffsetY + tabH + 2,this._windowW - this.buttonOffsetY * 2,1);
		}
		var basey = this.tabVertical ? this._y : this._y + 2;
		var _g = 0;
		var _g1 = this.tabNames.length;
		while(_g < _g1) {
			var i = _g++;
			this._x = tabX;
			this._y = basey + tabY;
			this._w = this.tabVertical ? this.t.ELEMENT_W * this.ops.scaleFactor - this.ops.scaleFactor | 0 : this.ops.font.width(this.fontSize,this.tabNames[i]) + this.buttonOffsetY * 2 + 18 * this.ops.scaleFactor | 0;
			var released = this.getReleased();
			var pushed = this.getPushed();
			var hover = this.getHover();
			if(released) {
				var h = this.tabHandle.nest(this.tabHandle.position);
				h.scrollOffset = this.currentWindow.scrollOffset;
				h = this.tabHandle.nest(i);
				this.tabScroll = h.scrollOffset;
				this.tabHandle.position = i;
				this.currentWindow.redraws = 3;
				this.tabHandle.changed = true;
			}
			var selected = this.tabHandle.position == i;
			this.g.set_color(pushed || hover ? this.t.BUTTON_HOVER_COL : this.tabColors[i] != -1 ? this.tabColors[i] : selected ? this.t.WINDOW_BG_COL : this.t.SEPARATOR_COL);
			if(this.tabVertical) {
				tabY += tabH + 1;
			} else {
				tabX += this._w + 1;
			}
			var g = this.g;
			var x = this._x + this.buttonOffsetY;
			var y = this._y + this.buttonOffsetY;
			var w = this._w;
			if(!this.enabled) {
				this.fadeColor();
			}
			g.fillRect(x,y - 1,w,tabH + 1);
			this.g.set_color(selected ? this.t.BUTTON_TEXT_COL : this.t.LABEL_COL);
			this.drawString(this.g,this.tabNames[i],this.t.TEXT_OFFSET,0,0);
			if(selected && !this.tabVertical) {
				this.g.set_color(this.t.WINDOW_BG_COL);
				this.g.fillRect(this._x + this.buttonOffsetY + 1,this._y + this.buttonOffsetY + tabH,this._w - 1,1);
			}
		}
		this._x = 0;
		this._y = origy;
		this._w = (!this.currentWindow.scrollEnabled ? this._windowW : this._windowW - (this.t.SCROLL_W * this.ops.scaleFactor | 0)) | 0;
	}
	,panel: function(handle,text,isTree,filled,pack,noActive) {
		if(noActive == null) {
			noActive = false;
		}
		if(pack == null) {
			pack = true;
		}
		if(filled == null) {
			filled = true;
		}
		if(isTree == null) {
			isTree = false;
		}
		if(!this.isVisible(this.t.ELEMENT_H * this.ops.scaleFactor)) {
			this.endElement();
			return handle.selected;
		}
		if(!noActive && this.getReleased()) {
			handle.selected = !handle.selected;
			handle.changed = this.changed = true;
		}
		if(filled) {
			this.g.set_color(this.t.PANEL_BG_COL);
			var g = this.g;
			var x = this._x;
			var y = this._y;
			var w = this._w;
			var h = this.t.ELEMENT_H * this.ops.scaleFactor;
			if(!this.enabled) {
				this.fadeColor();
			}
			g.fillRect(x,y - 1,w,h + 1);
		}
		if(!noActive) {
			if(isTree) {
				this.drawTree(handle.selected);
			} else {
				this.drawArrow(handle.selected);
			}
		}
		this.g.set_color(this.t.LABEL_COL);
		this.g.set_opacity(1.0);
		this.drawString(this.g,text,this.titleOffsetX,0);
		this.endElement();
		if(pack && !handle.selected) {
			this._y -= this.t.ELEMENT_OFFSET * this.ops.scaleFactor;
		}
		return handle.selected;
	}
	,text: function(text,align,bg) {
		if(bg == null) {
			bg = 0;
		}
		if(align == null) {
			align = 0;
		}
		if(text.indexOf("\n") >= 0) {
			var align1 = align;
			var bg1 = bg;
			if(bg == null) {
				bg1 = 0;
			}
			if(align == null) {
				align1 = 0;
			}
			var _g = 0;
			var _g1 = text.split("\n");
			while(_g < _g1.length) this.text(_g1[_g++],align1,bg1);
			return 0;
		}
		var h = Math.max(this.t.ELEMENT_H * this.ops.scaleFactor,this.ops.font.height(this.fontSize));
		if(!this.isVisible(h)) {
			this.endElement(h + this.t.ELEMENT_OFFSET * this.ops.scaleFactor);
			return 0;
		}
		var started = this.getStarted(h);
		var down = this.getPushed(h);
		var released = this.getReleased(h);
		this.getHover(h);
		if(bg != 0) {
			this.g.set_color(bg);
			this.g.fillRect(this._x + this.buttonOffsetY,this._y + this.buttonOffsetY,this._w - this.buttonOffsetY * 2,this.t.BUTTON_H * this.ops.scaleFactor);
		}
		this.g.set_color(this.t.TEXT_COL);
		this.drawString(this.g,text,this.t.TEXT_OFFSET * this.ops.scaleFactor,0,align);
		this.endElement(h + this.t.ELEMENT_OFFSET * this.ops.scaleFactor);
		if(started) {
			return 1;
		} else if(released) {
			return 3;
		} else if(down) {
			return 2;
		} else {
			return 0;
		}
	}
	,startTextEdit: function(handle) {
		this.isTyping = true;
		this.submitTextHandle = this.textSelectedHandle;
		this.textToSubmit = this.textSelected;
		this.textSelectedHandle = handle;
		this.textSelected = handle.text;
		this.cursorX = handle.text.length;
		if(this.tabPressed) {
			this.tabPressed = false;
			this.isKeyPressed = false;
		} else if(!this.highlightOnSelect) {
			var x = this.inputX - (this._windowX + this._x + this.t.TEXT_OFFSET * this.ops.scaleFactor);
			this.cursorX = 0;
			while(this.cursorX < this.textSelected.length && this.ops.font.width(this.fontSize,HxOverrides.substr(this.textSelected,0,this.cursorX)) < x) this.cursorX++;
		}
		this.tabPressedHandle = handle;
		this.highlightAnchor = this.highlightOnSelect ? 0 : this.cursorX;
		if(kha_input_Keyboard.get() != null) {
			kha_input_Keyboard.get().show();
		}
	}
	,submitTextEdit: function() {
		this.submitTextHandle.text = this.textToSubmit;
		this.submitTextHandle.changed = this.changed = true;
		this.submitTextHandle = null;
		this.textToSubmit = "";
		this.textSelected = "";
	}
	,updateTextEdit: function(align,editable) {
		if(editable == null) {
			editable = true;
		}
		if(align == null) {
			align = 0;
		}
		var text = this.textSelected;
		if(this.isKeyPressed) {
			if(this.key == 37) {
				if(this.cursorX > 0) {
					this.cursorX--;
				}
			} else if(this.key == 39) {
				if(this.cursorX < text.length) {
					this.cursorX++;
				}
			} else if(editable && this.key == 8) {
				if(this.cursorX > 0 && this.highlightAnchor == this.cursorX) {
					text = HxOverrides.substr(text,0,this.cursorX - 1) + HxOverrides.substr(text,this.cursorX,text.length);
					this.cursorX--;
				} else if(this.highlightAnchor < this.cursorX) {
					text = HxOverrides.substr(text,0,this.highlightAnchor) + HxOverrides.substr(text,this.cursorX,text.length);
					this.cursorX = this.highlightAnchor;
				} else {
					text = HxOverrides.substr(text,0,this.cursorX) + HxOverrides.substr(text,this.highlightAnchor,text.length);
				}
			} else if(editable && this.key == 46) {
				if(this.highlightAnchor == this.cursorX) {
					text = HxOverrides.substr(text,0,this.cursorX) + HxOverrides.substr(text,this.cursorX + 1,null);
				} else if(this.highlightAnchor < this.cursorX) {
					text = HxOverrides.substr(text,0,this.highlightAnchor) + HxOverrides.substr(text,this.cursorX,text.length);
					this.cursorX = this.highlightAnchor;
				} else {
					text = HxOverrides.substr(text,0,this.cursorX) + HxOverrides.substr(text,this.highlightAnchor,text.length);
				}
			} else if(this.key == 13) {
				this.deselectText();
			} else if(this.key == 27) {
				this.textSelected = this.textSelectedHandle.text;
				this.deselectText();
			} else if(this.key == 9 && this.tabSwitchEnabled) {
				this.tabPressed = true;
				this.deselectText();
				this.key = null;
			} else if(this.key == 36) {
				this.cursorX = 0;
			} else if(this.key == 35) {
				this.cursorX = text.length;
			} else if(this.isCtrlDown && this.isADown) {
				this.cursorX = text.length;
				this.highlightAnchor = 0;
			} else if(editable && this.key != 16 && this.key != 20 && this.key != 17 && this.key != 224 && this.key != 18 && this.key != 38 && this.key != 40 && this.char != null && this.char != "" && HxOverrides.cca(this.char,0) >= 32) {
				text = HxOverrides.substr(text,0,this.highlightAnchor) + this.char + HxOverrides.substr(text,this.cursorX,null);
				this.cursorX = this.cursorX + 1 > text.length ? text.length : this.cursorX + 1;
			}
			if(!(this.isShiftDown && (this.key == 37 || this.key == 39 || this.key == 16)) && !this.isCtrlDown) {
				this.highlightAnchor = this.cursorX;
			}
		}
		if(zui_Zui.textToPaste != "") {
			text = HxOverrides.substr(text,0,this.highlightAnchor) + zui_Zui.textToPaste + HxOverrides.substr(text,this.cursorX,null);
			this.cursorX += zui_Zui.textToPaste.length;
			this.highlightAnchor = this.cursorX;
			zui_Zui.textToPaste = "";
		}
		if(this.highlightAnchor == this.cursorX) {
			zui_Zui.textToCopy = text;
		} else if(this.highlightAnchor < this.cursorX) {
			zui_Zui.textToCopy = text.substring(this.highlightAnchor,this.cursorX);
		} else {
			zui_Zui.textToCopy = text.substring(this.cursorX,this.highlightAnchor);
		}
		if(zui_Zui.isCut) {
			if(this.highlightAnchor == this.cursorX) {
				text = "";
			} else if(this.highlightAnchor < this.cursorX) {
				text = HxOverrides.substr(text,0,this.highlightAnchor) + HxOverrides.substr(text,this.cursorX,text.length);
				this.cursorX = this.highlightAnchor;
			} else {
				text = HxOverrides.substr(text,0,this.cursorX) + HxOverrides.substr(text,this.highlightAnchor,text.length);
			}
		}
		var off = this.t.TEXT_OFFSET * this.ops.scaleFactor;
		var cursorHeight = this.t.ELEMENT_H * this.ops.scaleFactor - this.buttonOffsetY * 3.0;
		if(this.highlightAnchor != this.cursorX) {
			var istart = this.cursorX;
			var iend = this.highlightAnchor;
			if(this.highlightAnchor < this.cursorX) {
				istart = this.highlightAnchor;
				iend = this.cursorX;
			}
			var hlstrw = this.ops.font.width(this.fontSize,HxOverrides.substr(text,istart,iend - istart));
			var startoff = this.ops.font.width(this.fontSize,HxOverrides.substr(text,0,istart));
			var hlStart = align == 0 ? this._x + startoff + off : this._x + this._w - hlstrw - off;
			if(align == 2) {
				hlStart -= this.ops.font.width(this.fontSize,HxOverrides.substr(text,iend,text.length));
			}
			this.g.set_color(this.t.ACCENT_SELECT_COL);
			this.g.fillRect(hlStart,this._y + this.buttonOffsetY * 1.5,hlstrw,cursorHeight);
		}
		if(this.isKeyDown || kha_Scheduler.time() % 1. < 0.5) {
			var strw = this.ops.font.width(this.fontSize,align == 0 ? HxOverrides.substr(text,0,this.cursorX) : text.substring(this.cursorX,text.length));
			var cursorX = align == 0 ? this._x + strw + off : this._x + this._w - strw - off;
			this.g.set_color(this.t.TEXT_COL);
			this.g.fillRect(cursorX,this._y + this.buttonOffsetY * 1.5,this.ops.scaleFactor,cursorHeight);
		}
		this.textSelected = text;
	}
	,textInput: function(handle,label,align,editable) {
		if(editable == null) {
			editable = true;
		}
		if(align == null) {
			align = 0;
		}
		if(label == null) {
			label = "";
		}
		if(!this.isVisible(this.t.ELEMENT_H * this.ops.scaleFactor)) {
			this.endElement();
			return handle.text;
		}
		var hover = this.getHover();
		if(hover && zui_Zui.onTextHover != null) {
			zui_Zui.onTextHover();
		}
		this.g.set_color(hover ? this.t.ACCENT_HOVER_COL : this.t.ACCENT_COL);
		var g = this.g;
		var fill = this.t.FILL_ACCENT_BG;
		var x = this._x + this.buttonOffsetY;
		var y = this._y + this.buttonOffsetY;
		var w = this._w - this.buttonOffsetY * 2;
		var h = this.t.BUTTON_H * this.ops.scaleFactor;
		var strength = 0.0;
		strength = 1;
		if(!this.enabled) {
			this.fadeColor();
		}
		if(fill) {
			g.fillRect(x,y - 1,w,h + 1);
		} else {
			g.drawRect(x,y,w,h,strength);
		}
		var startEdit = this.getReleased() || this.tabPressed;
		if(this.textSelectedHandle != handle && startEdit) {
			this.startTextEdit(handle);
		}
		if(this.textSelectedHandle == handle) {
			this.updateTextEdit(align,editable);
		}
		if(this.submitTextHandle == handle) {
			this.submitTextEdit();
		} else {
			handle.changed = false;
		}
		if(label != "") {
			this.g.set_color(this.t.LABEL_COL);
			var labelAlign = align == 2 ? 0 : 2;
			this.drawString(this.g,label,labelAlign == 0 ? 7 : 0,0,labelAlign);
		}
		this.g.set_color(this.t.TEXT_COL);
		if(this.textSelectedHandle != handle) {
			this.drawString(this.g,handle.text,null,0,align);
		} else {
			this.drawString(this.g,this.textSelected,null,0,align);
		}
		this.endElement();
		return handle.text;
	}
	,deselectText: function() {
		if(this.textSelectedHandle == null) {
			return;
		}
		this.submitTextHandle = this.textSelectedHandle;
		this.textToSubmit = this.textSelected;
		this.textSelectedHandle = null;
		this.isTyping = false;
		if(this.currentWindow != null) {
			this.currentWindow.redraws = 2;
		}
		if(kha_input_Keyboard.get() != null) {
			kha_input_Keyboard.get().hide();
		}
		this.highlightAnchor = this.cursorX;
	}
	,button: function(text,align,label,color,bgColor) {
		if(label == null) {
			label = "";
		}
		if(align == null) {
			align = 1;
		}
		if(!this.isVisible(this.t.ELEMENT_H * this.ops.scaleFactor)) {
			this.endElement();
			return false;
		}
		var released = this.getReleased();
		var pushed = this.getPushed();
		var hover = this.getHover();
		if(released) {
			this.changed = true;
		}
		this.g.set_color(pushed ? this.t.BUTTON_PRESSED_COL : hover ? this.t.BUTTON_HOVER_COL : color == null ? this.t.BUTTON_COL : bgColor);
		var g = this.g;
		var fill = this.t.FILL_BUTTON_BG;
		var x = this._x + this.buttonOffsetY;
		var y = this._y + this.buttonOffsetY;
		var w = this._w - this.buttonOffsetY * 2;
		var h = this.t.BUTTON_H * this.ops.scaleFactor;
		var strength = 0.0;
		strength = 1;
		if(!this.enabled) {
			this.fadeColor();
		}
		if(fill) {
			g.fillRect(x,y - 1,w,h + 1);
		} else {
			g.drawRect(x,y,w,h,strength);
		}
		this.g.set_color(color == null ? this.t.BUTTON_TEXT_COL : color);
		this.drawString(this.g,text,this.t.TEXT_OFFSET * this.ops.scaleFactor,0,align);
		if(label != "") {
			this.g.set_color(this.t.LABEL_COL);
			this.drawString(this.g,label,this.t.TEXT_OFFSET * this.ops.scaleFactor,0,align == 2 ? 0 : 2);
		}
		this.endElement();
		return released;
	}
	,slider: function(handle,text,from,to,filled,precision,displayValue,align,textEdit) {
		if(textEdit == null) {
			textEdit = true;
		}
		if(align == null) {
			align = 2;
		}
		if(displayValue == null) {
			displayValue = true;
		}
		if(precision == null) {
			precision = 100.0;
		}
		if(filled == null) {
			filled = false;
		}
		if(to == null) {
			to = 1.0;
		}
		if(from == null) {
			from = 0.0;
		}
		if(!this.isVisible(this.t.ELEMENT_H * this.ops.scaleFactor)) {
			this.endElement();
			return handle.value;
		}
		if(this.getStarted()) {
			this.scrollHandle = handle;
			this.isScrolling = true;
		}
		handle.changed = false;
		if(handle == this.scrollHandle) {
			handle.value = Math.round((from + (this.inputX - (this._x + this._windowX + this.buttonOffsetY)) * ((to - from) / (this._w - this.buttonOffsetY * 2))) * precision) / precision;
			if(handle.value < from) {
				handle.value = from;
			} else if(handle.value > to) {
				handle.value = to;
			}
			handle.changed = this.changed = true;
		}
		var hover = this.getHover();
		this.drawSlider(handle.value,from,to,filled,hover);
		if((this.getReleased() || this.tabPressed) && textEdit) {
			handle.text = handle.value + "";
			this.startTextEdit(handle);
			handle.changed = this.changed = true;
		}
		var lalign = align == 0 ? 2 : 0;
		if(this.textSelectedHandle == handle) {
			this.updateTextEdit(lalign);
		}
		if(this.submitTextHandle == handle) {
			this.submitTextEdit();
			var code = handle.text;
			handle.value = eval(code);
			handle.changed = this.changed = true;
		}
		this.g.set_color(this.t.LABEL_COL);
		this.drawString(this.g,text,null,0,align);
		if(displayValue) {
			this.g.set_color(this.t.TEXT_COL);
			if(this.textSelectedHandle != handle) {
				this.drawString(this.g,Math.round(handle.value * precision) / precision + "",null,0,lalign);
			} else {
				this.drawString(this.g,this.textSelected,null,0,lalign);
			}
		}
		this.endElement();
		return handle.value;
	}
	,drawArrow: function(selected) {
		var x = this._x + this.arrowOffsetX;
		var y = this._y + this.arrowOffsetY;
		this.g.set_color(this.t.TEXT_COL);
		if(selected) {
			this.g.fillTriangle(x,y,x + this.t.ARROW_SIZE * this.ops.scaleFactor,y,x + this.t.ARROW_SIZE * this.ops.scaleFactor / 2,y + this.t.ARROW_SIZE * this.ops.scaleFactor);
		} else {
			this.g.fillTriangle(x,y,x,y + this.t.ARROW_SIZE * this.ops.scaleFactor,x + this.t.ARROW_SIZE * this.ops.scaleFactor,y + this.t.ARROW_SIZE * this.ops.scaleFactor / 2);
		}
	}
	,drawTree: function(selected) {
		var SIGN_W = 7 * this.ops.scaleFactor;
		var x = this._x + this.arrowOffsetX + 1;
		var y = this._y + this.arrowOffsetY + 1;
		this.g.set_color(this.t.TEXT_COL);
		if(selected) {
			this.g.fillRect(x,y + SIGN_W / 2 - 1,SIGN_W,SIGN_W / 8);
		} else {
			this.g.fillRect(x,y + SIGN_W / 2 - 1,SIGN_W,SIGN_W / 8);
			this.g.fillRect(x + SIGN_W / 2 - 1,y,SIGN_W / 8,SIGN_W);
		}
	}
	,drawSlider: function(value,from,to,filled,hover) {
		var x = this._x + this.buttonOffsetY;
		var y = this._y + this.buttonOffsetY;
		var w = this._w - this.buttonOffsetY * 2;
		this.g.set_color(hover ? this.t.ACCENT_HOVER_COL : this.t.ACCENT_COL);
		var g = this.g;
		var fill = this.t.FILL_ACCENT_BG;
		var h = this.t.BUTTON_H * this.ops.scaleFactor;
		var strength = 0.0;
		strength = 1;
		if(!this.enabled) {
			this.fadeColor();
		}
		if(fill) {
			g.fillRect(x,y - 1,w,h + 1);
		} else {
			g.drawRect(x,y,w,h,strength);
		}
		this.g.set_color(hover ? this.t.ACCENT_HOVER_COL : this.t.ACCENT_COL);
		var offset = (value - from) / (to - from);
		var barW = 8 * this.ops.scaleFactor;
		var sliderW = filled ? w * offset : barW;
		sliderW = Math.max(Math.min(sliderW,w),0);
		var g = this.g;
		var h = this.t.BUTTON_H * this.ops.scaleFactor;
		if(!this.enabled) {
			this.fadeColor();
		}
		g.fillRect(filled ? x : x + (w - barW) * offset,y - 1,sliderW,h + 1);
	}
	,drawCombo: function() {
		if(this.comboSelectedHandle == null) {
			return;
		}
		var _g = this.g;
		this.globalG.set_color(this.t.SEPARATOR_COL);
		var elementSize = this.t.ELEMENT_H * this.ops.scaleFactor + this.t.ELEMENT_OFFSET * this.ops.scaleFactor | 0;
		var maxItemCount = Math.min(this.comboSelectedTexts.length,this.comboItemCount) | 0;
		var comboH = (maxItemCount + 1) * elementSize;
		this.globalG.begin(false);
		var distTop = this.comboSelectedY - comboH - (this.t.ELEMENT_H * this.ops.scaleFactor | 0);
		var distBottom = kha_System.windowHeight() - (this.comboSelectedY + comboH);
		var outOfScreen = distBottom < 0 && distBottom < distTop;
		var comboY = outOfScreen ? this.comboSelectedY - comboH - (this.t.ELEMENT_H * this.ops.scaleFactor | 0) : this.comboSelectedY;
		this.globalG.fillRect(this.comboSelectedX,comboY,this.comboSelectedW,comboH);
		this.beginRegion(this.globalG,this.comboSelectedX,comboY,this.comboSelectedW);
		if(this.comboItemOffset == -1) {
			if(outOfScreen) {
				this.comboItemOffset = this.comboSelectedTexts.length - 1 - this.comboSelectedHandle.position;
			} else {
				this.comboItemOffset = this.comboSelectedHandle.position;
			}
			var value = this.comboItemOffset;
			var max = this.comboSelectedTexts.length - maxItemCount;
			this.comboItemOffset = value < 0 ? 0 : value > max ? max : value;
		}
		if(outOfScreen) {
			this.g.set_color(this.t.LABEL_COL);
			this.drawString(this.g,this.comboSelectedLabel,null,0,2);
			this._y += elementSize;
			this.fill(0,0,this._w / this.ops.scaleFactor,this.ops.scaleFactor,this.t.ACCENT_SELECT_COL);
		}
		this.inputEnabled = true;
		var BUTTON_COL = this.t.BUTTON_COL;
		var _g1 = this.comboItemOffset;
		var _g2 = this.comboItemOffset + maxItemCount;
		while(_g1 < _g2) {
			var i = _g1++;
			var j = outOfScreen ? this.comboSelectedTexts.length - 1 - i : i;
			this.t.BUTTON_COL = j == this.comboSelectedHandle.position ? this.t.ACCENT_SELECT_COL : this.t.SEPARATOR_COL;
			if(this.button(this.comboSelectedTexts[j],this.comboSelectedAlign)) {
				this.comboToSubmit = j;
				this.submitComboHandle = this.comboSelectedHandle;
				if(this.comboSelectedWindow != null) {
					this.comboSelectedWindow.redraws = 2;
				}
				break;
			}
		}
		this.t.BUTTON_COL = BUTTON_COL;
		if(!outOfScreen) {
			this.fill(0,0,this._w / this.ops.scaleFactor,this.ops.scaleFactor,this.t.ACCENT_SELECT_COL);
			this.g.set_color(this.t.LABEL_COL);
			this.drawString(this.g,this.comboSelectedLabel,null,0,2);
		}
		var maxOffset = this.comboSelectedTexts.length - this.comboItemCount;
		if(maxOffset > 0) {
			var barH = Math.max(this.comboItemCount / this.comboSelectedTexts.length * (this.t.ELEMENT_H * this.ops.scaleFactor) * 16,this.t.ELEMENT_H * this.ops.scaleFactor);
			var off = (comboH - barH - elementSize) * this.comboItemOffset / maxOffset;
			this.g.set_color(this.t.ACCENT_COL);
			this.g.fillRect(this._x + this._w - (this.t.SCROLL_W * this.ops.scaleFactor | 0) / 3,comboY + off,(this.t.SCROLL_W * this.ops.scaleFactor | 0) / 3,barH);
		}
		if((this.inputReleased || this.isEscapeDown) && !zui_Zui.comboFirst) {
			this.comboSelectedHandle = null;
			zui_Zui.comboFirst = true;
		} else {
			zui_Zui.comboFirst = false;
		}
		this.inputEnabled = this.comboSelectedHandle == null;
		this.endRegion(false);
		this.globalG.end();
		this.g = _g;
	}
	,drawTooltip: function() {
		if(this.tooltipText != "" || this.tooltipImg != null) {
			if(this.inputChanged()) {
				this.tooltipShown = false;
				this.tooltipWait = this.inputDX == 0 && this.inputDY == 0;
			}
			if(!this.tooltipShown) {
				this.tooltipShown = true;
				this.tooltipX = this.inputX;
				this.tooltipTime = kha_Scheduler.time();
			}
			if(!this.tooltipWait && kha_Scheduler.time() - this.tooltipTime > 1.0) {
				if(this.tooltipText != "") {
					this.drawTooltipText();
				} else {
					this.drawTooltipImage();
				}
			}
		} else {
			this.tooltipShown = false;
		}
	}
	,drawTooltipText: function() {
		this.globalG.set_color(this.t.TEXT_COL);
		var lines = this.tooltipText.split("\n");
		var tooltipW = 0.0;
		var _g = 0;
		while(_g < lines.length) {
			var lineTooltipW = this.ops.font.width(this.fontSize,lines[_g++]);
			if(lineTooltipW > tooltipW) {
				tooltipW = lineTooltipW;
			}
		}
		this.tooltipX = Math.min(this.tooltipX,kha_System.windowWidth() - tooltipW - 20);
		this.globalG.begin(false);
		this.globalG.fillRect(this.tooltipX,this.tooltipY,tooltipW + 20,this.t.ELEMENT_H * this.ops.scaleFactor * lines.length * 0.6);
		this.globalG.set_font(this.ops.font);
		this.globalG.set_fontSize(this.fontSize);
		this.globalG.set_color(this.t.ACCENT_COL);
		var _g = 0;
		var _g1 = lines.length;
		while(_g < _g1) {
			var i = _g++;
			this.globalG.drawString(lines[i],this.tooltipX + 5,this.tooltipY + i * this.fontSize);
		}
		this.globalG.end();
	}
	,drawTooltipImage: function() {
		var w = this.tooltipImg.get_width();
		if(this.tooltipImgMaxWidth != null && w > this.tooltipImgMaxWidth) {
			w = this.tooltipImgMaxWidth;
		}
		var h = this.tooltipImg.get_height() * (w / this.tooltipImg.get_width());
		this.tooltipX = Math.min(this.tooltipX,kha_System.windowWidth() - w - 20);
		this.tooltipY = Math.min(this.tooltipY,kha_System.windowHeight() - h - 20);
		this.globalG.set_color(-16777216);
		this.globalG.begin(false);
		this.globalG.fillRect(this.tooltipX,this.tooltipY,w,h);
		this.globalG.set_color(-1);
		if(this.tooltipInvertY) {
			this.globalG.drawScaledImage(this.tooltipImg,this.tooltipX,this.tooltipY + h,w,-h);
		} else {
			this.globalG.drawScaledImage(this.tooltipImg,this.tooltipX,this.tooltipY,w,h);
		}
		this.globalG.end();
	}
	,drawString: function(g,text,xOffset,yOffset,align) {
		if(align == null) {
			align = 0;
		}
		if(yOffset == null) {
			yOffset = 0;
		}
		var fullLength = text.length;
		while(text.length > 0 && this.ops.font.width(this.fontSize,text) > this._w) text = HxOverrides.substr(text,0,text.length - 1);
		if(text.length < fullLength) {
			text += "..";
		}
		if(xOffset == null) {
			xOffset = this.t.TEXT_OFFSET;
		}
		xOffset *= this.ops.scaleFactor;
		g.set_font(this.ops.font);
		g.set_fontSize(this.fontSize);
		if(align == 1) {
			xOffset = this._w / 2 - this.ops.font.width(this.fontSize,text) / 2;
		} else if(align == 2) {
			xOffset = this._w - this.ops.font.width(this.fontSize,text) - this.t.TEXT_OFFSET * this.ops.scaleFactor;
		}
		if(!this.enabled) {
			this.fadeColor();
		}
		g.set_pipeline(this.rtTextPipeline);
		g.drawString(text,this._x + xOffset,this._y + this.fontOffsetY + yOffset);
		g.set_pipeline(null);
	}
	,endElement: function(elementSize) {
		if(elementSize == null) {
			elementSize = this.t.ELEMENT_H * this.ops.scaleFactor + this.t.ELEMENT_OFFSET * this.ops.scaleFactor;
		}
		if(this.currentWindow == null || this.currentWindow.layout == 0) {
			if(this.curRatio == -1 || this.ratios != null && this.curRatio == this.ratios.length - 1) {
				this._y += elementSize;
				if(this.ratios != null && this.curRatio == this.ratios.length - 1) {
					this.curRatio = -1;
					this.ratios = null;
					this._x = this.xBeforeSplit;
					this._w = this.wBeforeSplit;
					this.highlightFullRow = false;
				}
			} else {
				this.curRatio++;
				this._x += this._w;
				var ratio = this.ratios[this.curRatio];
				this._w = (ratio < 0 ? -ratio : ratio * this.wBeforeSplit) | 0;
			}
		} else {
			this._x += this._w + this.t.ELEMENT_OFFSET * this.ops.scaleFactor;
		}
	}
	,fadeColor: function() {
		this.g.set_color(kha_Color.fromFloats(((this.g.get_color() & 16711680) >>> 16) * 0.00392156862745098,((this.g.get_color() & 65280) >>> 8) * 0.00392156862745098,(this.g.get_color() & 255) * 0.00392156862745098,0.25));
	}
	,fill: function(x,y,w,h,color) {
		this.g.set_color(color);
		if(!this.enabled) {
			this.fadeColor();
		}
		this.g.fillRect(this._x + x * this.ops.scaleFactor,this._y + y * this.ops.scaleFactor - 1,w * this.ops.scaleFactor,h * this.ops.scaleFactor);
		this.g.set_color(-1);
	}
	,isVisible: function(elemH) {
		if(this.currentWindow == null) {
			return true;
		}
		if(this._y + elemH > this.windowHeaderH) {
			return this._y < this.currentWindow.texture.get_height();
		} else {
			return false;
		}
	}
	,getReleased: function(elemH) {
		if(elemH == null) {
			elemH = -1.0;
		}
		this.isReleased = this.enabled && this.inputEnabled && this.inputReleased && this.getHover(elemH) && this.getInitialHover(elemH);
		return this.isReleased;
	}
	,getPushed: function(elemH) {
		if(elemH == null) {
			elemH = -1.0;
		}
		this.isPushed = this.enabled && this.inputEnabled && this.inputDown && this.getHover(elemH) && this.getInitialHover(elemH);
		return this.isPushed;
	}
	,getStarted: function(elemH) {
		if(elemH == null) {
			elemH = -1.0;
		}
		this.isStarted = this.enabled && this.inputEnabled && this.inputStarted && this.getHover(elemH);
		return this.isStarted;
	}
	,getInitialHover: function(elemH) {
		if(elemH == null) {
			elemH = -1.0;
		}
		if(this.scissor && this.inputY < this._windowY + this.windowHeaderH) {
			return false;
		}
		if(elemH == -1.0) {
			elemH = this.t.ELEMENT_H * this.ops.scaleFactor;
		}
		if(this.enabled && this.inputEnabled && this.inputStartedX >= this._windowX + this._x && this.inputStartedX < this._windowX + this._x + this._w && this.inputStartedY >= this._windowY + this._y) {
			return this.inputStartedY < this._windowY + this._y + elemH;
		} else {
			return false;
		}
	}
	,getHover: function(elemH) {
		if(elemH == null) {
			elemH = -1.0;
		}
		if(this.scissor && this.inputY < this._windowY + this.windowHeaderH) {
			return false;
		}
		if(elemH == -1.0) {
			elemH = this.t.ELEMENT_H * this.ops.scaleFactor;
		}
		this.isHovered = this.enabled && this.inputEnabled && this.inputX >= this._windowX + (this.highlightFullRow ? 0 : this._x) && this.inputX < this._windowX + this._x + (this.highlightFullRow ? this._windowW : this._w) && this.inputY >= this._windowY + this._y && this.inputY < this._windowY + this._y + elemH;
		return this.isHovered;
	}
	,getInputInRect: function(x,y,w,h,scale) {
		if(scale == null) {
			scale = 1.0;
		}
		if(this.enabled && this.inputEnabled && this.inputX >= x * scale && this.inputX < (x + w) * scale && this.inputY >= y * scale) {
			return this.inputY < (y + h) * scale;
		} else {
			return false;
		}
	}
	,onMouseDown: function(button,x,y) {
		if(button == 0) {
			this.inputStarted = true;
		} else {
			this.inputStartedR = true;
		}
		if(button == 0) {
			this.inputDown = true;
		} else {
			this.inputDownR = true;
		}
		this.inputStartedTime = kha_Scheduler.time();
		if(this.useScaled) {
			x = kha_Scaler.transformXDirectly(x,y,this.scaledSourceWidth,this.scaledSourceHeight,this.scaledDestWidth,this.scaledDestHeight,kha_System.get_screenRotation());
			y = kha_Scaler.transformYDirectly(x,y,this.scaledSourceWidth,this.scaledSourceHeight,this.scaledDestWidth,this.scaledDestHeight,kha_System.get_screenRotation());
		}
		x -= this.mouseOffsetX;
		y -= this.mouseOffsetY;
		this.setInputPosition(x,y);
		this.inputStartedX = x;
		this.inputStartedY = y;
	}
	,onMouseUp: function(button,x,y) {
		if(this.useScaled) {
			x = kha_Scaler.transformXDirectly(x,y,this.scaledSourceWidth,this.scaledSourceHeight,this.scaledDestWidth,this.scaledDestHeight,kha_System.get_screenRotation());
			y = kha_Scaler.transformYDirectly(x,y,this.scaledSourceWidth,this.scaledSourceHeight,this.scaledDestWidth,this.scaledDestHeight,kha_System.get_screenRotation());
		}
		x -= this.mouseOffsetX;
		y -= this.mouseOffsetY;
		if(this.isScrolling) {
			this.isScrolling = false;
			this.scrollHandle = null;
			if(x == this.inputStartedX && y == this.inputStartedY) {
				if(button == 0) {
					this.inputReleased = true;
				} else {
					this.inputReleasedR = true;
				}
			}
		} else if(button == 0) {
			this.inputReleased = true;
		} else {
			this.inputReleasedR = true;
		}
		if(button == 0) {
			this.inputDown = false;
		} else {
			this.inputDownR = false;
		}
		this.setInputPosition(x,y);
		this.deselectText();
		if(this.touchHold) {
			this.touchHold = false;
			this.inputReleased = false;
			this.inputReleasedR = true;
		}
	}
	,onMouseMove: function(x,y,movementX,movementY) {
		x -= this.mouseOffsetX;
		y -= this.mouseOffsetY;
		if(this.useScaled) {
			x = kha_Scaler.transformXDirectly(x,y,this.scaledSourceWidth,this.scaledSourceHeight,this.scaledDestWidth,this.scaledDestHeight,kha_System.get_screenRotation());
			y = kha_Scaler.transformYDirectly(x,y,this.scaledSourceWidth,this.scaledSourceHeight,this.scaledDestWidth,this.scaledDestHeight,kha_System.get_screenRotation());
		}
		this.setInputPosition(x,y);
	}
	,onMouseWheel: function(delta) {
		this.inputWheelDelta = delta;
	}
	,setInputPosition: function(x,y) {
		this.inputDX += x - this.inputX;
		this.inputDY += y - this.inputY;
		this.inputX = x;
		this.inputY = y;
	}
	,onKeyDown: function(code) {
		this.key = code;
		this.isKeyPressed = true;
		this.isKeyDown = true;
		zui_Zui.keyRepeatTime = kha_Scheduler.time() + 0.4;
		switch(code) {
		case 8:
			this.isBackspaceDown = true;
			break;
		case 13:
			this.isReturnDown = true;
			break;
		case 16:
			this.isShiftDown = true;
			break;
		case 17:
			this.isCtrlDown = true;
			break;
		case 18:
			this.isAltDown = true;
			break;
		case 27:
			this.isEscapeDown = true;
			break;
		case 32:
			this.char = " ";
			break;
		case 46:
			this.isDeleteDown = true;
			break;
		case 65:
			this.isADown = true;
			break;
		default:
		}
	}
	,onKeyUp: function(code) {
		this.isKeyDown = false;
		switch(code) {
		case 8:
			this.isBackspaceDown = false;
			break;
		case 13:
			this.isReturnDown = false;
			break;
		case 16:
			this.isShiftDown = false;
			break;
		case 17:
			this.isCtrlDown = false;
			break;
		case 18:
			this.isAltDown = false;
			break;
		case 27:
			this.isEscapeDown = false;
			break;
		case 46:
			this.isDeleteDown = false;
			break;
		case 65:
			this.isADown = false;
			break;
		default:
		}
	}
	,onKeyPress: function(char) {
		this.char = char;
		this.isKeyPressed = true;
	}
	,onCut: function() {
		zui_Zui.isCut = true;
		return this.onCopy();
	}
	,onCopy: function() {
		zui_Zui.isCopy = true;
		return zui_Zui.textToCopy;
	}
	,onPaste: function(s) {
		zui_Zui.isPaste = true;
		zui_Zui.textToPaste = s;
	}
	,resize: function(handle,w,h,khaWindowId) {
		if(khaWindowId == null) {
			khaWindowId = 0;
		}
		handle.redraws = 2;
		if(handle.texture != null) {
			handle.texture.unload();
		}
		if(w < 1) {
			w = 1;
		}
		if(h < 1) {
			h = 1;
		}
		handle.texture = kha_Image.createRenderTarget(w,h,0,0,1,khaWindowId);
		handle.texture.get_g2().set_imageScaleQuality(1);
	}
	,__class__: zui_Zui
};
function $iterator(o) { if( o instanceof Array ) return function() { return new haxe_iterators_ArrayIterator(o); }; return typeof(o.iterator) == 'function' ? $bind(o,o.iterator) : o.iterator; }
function $bind(o,m) { if( m == null ) return null; if( m.__id__ == null ) m.__id__ = $global.$haxeUID++; var f; if( o.hx__closures__ == null ) o.hx__closures__ = {}; else f = o.hx__closures__[m.__id__]; if( f == null ) { f = m.bind(o); o.hx__closures__[m.__id__] = f; } return f; }
$global.$haxeUID |= 0;
if(typeof(performance) != "undefined" ? typeof(performance.now) == "function" : false) {
	HxOverrides.now = performance.now.bind(performance);
}
$hxClasses["Math"] = Math;
if( String.fromCodePoint == null ) String.fromCodePoint = function(c) { return c < 0x10000 ? String.fromCharCode(c) : String.fromCharCode((c>>10)+0xD7C0)+String.fromCharCode((c&0x3FF)+0xDC00); }
String.prototype.__class__ = $hxClasses["String"] = String;
String.__name__ = "String";
$hxClasses["Array"] = Array;
Array.__name__ = "Array";
Date.prototype.__class__ = $hxClasses["Date"] = Date;
Date.__name__ = "Date";
var Int = { };
var Dynamic = { };
var Float = Number;
var Bool = Boolean;
var Class = { };
var Enum = { };
haxe_Resource.content = [];
haxe_ds_ObjectMap.count = 0;
js_Boot.__toStr = ({ }).toString;
if(ArrayBuffer.prototype.slice == null) {
	ArrayBuffer.prototype.slice = js_lib__$ArrayBuffer_ArrayBufferCompat.sliceImpl;
}
kha_Display.instance = new kha_Display();
no_logic_kha_fox_application_App.settings = no_logic_kha_fox_application_App.createDefaultSettings();
no_logic_kha_fox_application_App.system = new no_logic_kha_fox_application_AppSystem();
Xml.Element = 0;
Xml.PCData = 1;
Xml.CData = 2;
Xml.Comment = 3;
Xml.DocType = 4;
Xml.ProcessingInstruction = 5;
Xml.Document = 6;
no_logic_kha_fox_displaylist_DisplayObject.liveInstances = 0;
no_logic_kha_fox_displaylist_DisplayObject.instanceCounter = 0;
haxe_Unserializer.DEFAULT_RESOLVER = new haxe__$Unserializer_DefaultResolver();
haxe_Unserializer.BASE64 = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789%:";
haxe_crypto_Base64.CHARS = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";
haxe_crypto_Base64.BYTES = haxe_io_Bytes.ofString(haxe_crypto_Base64.CHARS);
haxe_io_FPHelper.helper = new DataView(new ArrayBuffer(8));
haxe_xml_Parser.escapes = (function($this) {
	var $r;
	var h = new haxe_ds_StringMap();
	h.h["lt"] = "<";
	h.h["gt"] = ">";
	h.h["amp"] = "&";
	h.h["quot"] = "\"";
	h.h["apos"] = "'";
	$r = h;
	return $r;
}(this));
haxe_zip_InflateImpl.LEN_EXTRA_BITS_TBL = [0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0,-1,-1];
haxe_zip_InflateImpl.LEN_BASE_VAL_TBL = [3,4,5,6,7,8,9,10,11,13,15,17,19,23,27,31,35,43,51,59,67,83,99,115,131,163,195,227,258];
haxe_zip_InflateImpl.DIST_EXTRA_BITS_TBL = [0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13,-1,-1];
haxe_zip_InflateImpl.DIST_BASE_VAL_TBL = [1,2,3,4,5,7,9,13,17,25,33,49,65,97,129,193,257,385,513,769,1025,1537,2049,3073,4097,6145,8193,12289,16385,24577];
haxe_zip_InflateImpl.CODE_LENGTHS_POS = [16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15];
kha_Assets.images = new kha__$Assets_ImageList();
kha_Assets.sounds = new kha__$Assets_SoundList();
kha_Assets.blobs = new kha__$Assets_BlobList();
kha_Assets.fonts = new kha__$Assets_FontList();
kha_Scheduler.DIF_COUNT = 3;
kha_Scheduler.maxframetime = 0.5;
kha_Scheduler.startTime = 0;
kha_Shaders.badTV_fragData0 = "s6551:I3ZlcnNpb24gMTAwCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gaGlnaHAgaW50OwoKdW5pZm9ybSBoaWdocCBmbG9hdCBpVGltZTsKdW5pZm9ybSBoaWdocCBzYW1wbGVyMkQgdGV4Owp1bmlmb3JtIGhpZ2hwIHZlYzIgaVJlc29sdXRpb247CnVuaWZvcm0gaGlnaHAgZmxvYXQgdV9kaXN0b3J0Q3VydmU7CnVuaWZvcm0gaGlnaHAgZmxvYXQgdV92aWduZXR0ZVN0cmVuZ3RoOwp1bmlmb3JtIGhpZ2hwIGZsb2F0IHVfYmxlbmQ7Cgp2YXJ5aW5nIGhpZ2hwIHZlYzIgdGV4Q29vcmQ7CnZhcnlpbmcgaGlnaHAgdmVjNCBjb2xvcjsKCmhpZ2hwIHZlYzIgY3VydmUoaW5vdXQgaGlnaHAgdmVjMiB1diwgaGlnaHAgZmxvYXQgY3VydmVTdHJlbmd0aCkKewogICAgdXYgPSAodXYgLSB2ZWMyKDAuNSkpICogMi4wOwogICAgdXYgKj0gMS4xMDAwMDAwMjM4NDE4NTc5MTAxNTYyNTsKICAgIHV2LnggKj0gKDEuMCArIChwb3coYWJzKHV2LnkpIC8gNS4wLCAyLjApICogY3VydmVTdHJlbmd0aCkpOwogICAgdXYueSAqPSAoMS4wICsgKHBvdyhhYnModXYueCkgLyA0LjAsIDIuMCkgKiBjdXJ2ZVN0cmVuZ3RoKSk7CiAgICB1diA9ICh1diAvIHZlYzIoMi4wKSkgKyB2ZWMyKDAuNSk7CiAgICB1diA9ICh1diAqIDAuOTIwMDAwMDE2Njg5MzAwNTM3MTA5Mzc1KSArIHZlYzIoMC4wMzk5OTk5OTkxMDU5MzAzMjgzNjkxNDA2MjUpOwogICAgcmV0dXJuIHV2Owp9CgpoaWdocCBmbG9hdCByYW5kKCkKewogICAgcmV0dXJuIGZyYWN0KHNpbihpVGltZSkgKiAxMDAwMC4wKTsKfQoKaGlnaHAgdmVjMyBHbGl0Y2gxKGlub3V0IGhpZ2hwIHZlYzIgdXYpCnsKICAgIGhpZ2hwIHZlYzIgdXZSID0gdXY7CiAgICBoaWdocCB2ZWMyIHV2QiA9IHV2OwogICAgdXZSLnggPSAodXYueCAqIDEuMCkgLSAoKHJhbmQoKSAqIDAuMDE5OTk5OTk5NTUyOTY1MTY0MTg0NTcwMzEyNSkgKiAwLjgwMDAwMDAxMTkyMDkyODk1NTA3ODEyNSk7CiAgICB1dkIueSA9ICh1di55ICogMS4wKSArICgocmFuZCgpICogMC4wMTk5OTk5OTk1NTI5NjUxNjQxODQ1NzAzMTI1KSAqIDAuODAwMDAwMDExOTIwOTI4OTU1MDc4MTI1KTsKICAgIGJvb2wgXzMwNiA9IHV2LnkgPCByYW5kKCk7CiAgICBib29sIF8zMTQ7CiAgICBpZiAoXzMwNikKICAgIHsKICAgICAgICBfMzE0ID0gdXYueSA%IChyYW5kKCkgLSAwLjEwMDAwMDAwMTQ5MDExNjExOTM4NDc2NTYyNSk7CiAgICB9CiAgICBlbHNlCiAgICB7CiAgICAgICAgXzMxNCA9IF8zMDY7CiAgICB9CiAgICBib29sIF8zMjA7CiAgICBpZiAoXzMxNCkKICAgIHsKICAgICAgICBfMzIwID0gc2luKGlUaW1lKSA8IDAuMDsKICAgIH0KICAgIGVsc2UKICAgIHsKICAgICAgICBfMzIwID0gXzMxNDsKICAgIH0KICAgIGlmIChfMzIwKQogICAgewogICAgICAgIHV2LnggPSAodXYgKyB2ZWMyKDAuMDE5OTk5OTk5NTUyOTY1MTY0MTg0NTcwMzEyNSAqIHJhbmQoKSkpLng7CiAgICB9CiAgICBoaWdocCB2ZWMzIGMgPSB2ZWMzKDAuMCk7CiAgICBjLnggPSB0ZXh0dXJlMkQodGV4LCB1dlIpLng7CiAgICBjLnkgPSB0ZXh0dXJlMkQodGV4LCB1dikueTsKICAgIGMueiA9IHRleHR1cmUyRCh0ZXgsIHV2QikuejsKICAgIGhpZ2hwIGZsb2F0IHNjYW5saW5lID0gc2luKCh1di55ICogODAwLjApICogcmFuZCgpKSAvIDMwLjA7CiAgICBjICo9ICgxLjAgLSBzY2FubGluZSk7CiAgICBoaWdocCBmbG9hdCB2ZWdEaXN0ID0gbGVuZ3RoKHZlYzIoMC41KSAtIHV2KTsKICAgIGMgKj0gKDEuMCAtICh2ZWdEaXN0ICogMC44MDAwMDAwMTE5MjA5Mjg5NTUwNzgxMjUpKTsKICAgIHJldHVybiBjOwp9CgpoaWdocCB2ZWMzIENSVDEoaGlnaHAgdmVjMiB1dikKewogICAgaGlnaHAgdmVjMyBjb2wgPSB2ZWMzKDAuMCk7CiAgICBjb2wueCA9IHRleHR1cmUyRCh0ZXgsIHZlYzIodXYueCArIDAuMDAxMDAwMDAwMDQ3NDk3NDUxMzA1Mzg5NDA0Mjk2ODc1LCB1di55ICsgMC4wMDEwMDAwMDAwNDc0OTc0NTEzMDUzODk0MDQyOTY4NzUpKS54ICsgMC4wNTAwMDAwMDA3NDUwNTgwNTk2OTIzODI4MTI1OwogICAgY29sLnkgPSB0ZXh0dXJlMkQodGV4LCB2ZWMyKHV2LnggKyAwLjAsIHV2LnkgLSAwLjAwMjAwMDAwMDA5NDk5NDkwMjYxMDc3ODgwODU5Mzc1KSkueSArIDAuMDUwMDAwMDAwNzQ1MDU4MDU5NjkyMzgyODEyNTsKICAgIGNvbC56ID0gdGV4dHVyZTJEKHRleCwgdmVjMih1di54IC0gMC4wMDIwMDAwMDAwOTQ5OTQ5MDI2MTA3Nzg4MDg1OTM3NSwgdXYueSArIDAuMCkpLnogKyAwLjA1MDAwMDAwMDc0NTA1ODA1OTY5MjM4MjgxMjU7CiAgICBjb2wueCArPSAoMC4wMzk5OTk5OTkxMDU5MzAzMjgzNjkxNDA2MjUgKiB0ZXh0dXJlMkQodGV4LCB2ZWMyKDAuMDE4NzUwMDAwNzQ1MDU4MDU5NjkyMzgyODEyNSwgLTAuMDIwMjUwMDAwMDU5NjA0NjQ0Nzc1MzkwNjI1KSArIHZlYzIodXYueCArIDAuMDAxMDAwMDAwMDQ3NDk3NDUxMzA1Mzg5NDA0Mjk2ODc1LCB1di55ICsgMC4wMDEwMDAwMDAwNDc0OTc0NTEzMDUzODk0MDQyOTY4NzUpKS54KTsKICAgIGNvbC55ICs9ICgwLjAxOTk5OTk5OTU1Mjk2NTE2NDE4NDU3MDMxMjUgKiB0ZXh0dXJlMkQodGV4LCB2ZWMyKC0wLjAxNjQ5OTk5OTkxMDU5MzAzMjgzNjkxNDA2MjUsIC0wLjAxNDk5OTk5OTY2NDcyMzg3MzEzODQyNzczNDM3NSkgKyB2ZWMyKHV2LnggKyAwLjAsIHV2LnkgLSAwLjAwMjAwMDAwMDA5NDk5NDkwMjYxMDc3ODgwODU5Mzc1KSkueSk7CiAgICBjb2wueiArPSAoMC4wMjk5OTk5OTkzMjk0NDc3NDYyNzY4NTU0Njg3NSAqIHRleHR1cmUyRCh0ZXgsIHZlYzIoLTAuMDE0OTk5OTk5NjY0NzIzODczMTM4NDI3NzM0Mzc1LCAtMC4wMTM1MDAwMDAzNTAxNzcyODgwNTU0MTk5MjE4NzUpICsgdmVjMih1di54IC0gMC4wMDIwMDAwMDAwOTQ5OTQ5MDI2MTA3Nzg4MDg1OTM3NSwgdXYueSArIDAuMCkpLnopOwogICAgY29sICo9IDAuODk5OTk5OTc2MTU4MTQyMDg5ODQzNzU7CiAgICBjb2wgKz0gdmVjMygwLjEwMDAwMDAwMTQ5MDExNjExOTM4NDc2NTYyNSk7CiAgICBjb2wgPSBjbGFtcCgoY29sICogMC42MDAwMDAwMjM4NDE4NTc5MTAxNTYyNSkgKyAoKChjb2wgKiAwLjQwMDAwMDAwNTk2MDQ2NDQ3NzUzOTA2MjUpICogY29sKSAqIDEuMCksIHZlYzMoMC4wKSwgdmVjMygxLjApKTsKICAgIGNvbCAqPSB2ZWMzKDAuOTQ5OTk5OTg4MDc5MDcxMDQ0OTIxODc1LCAxLjA0OTk5OTk1MjMxNjI4NDE3OTY4NzUsIDAuOTQ5OTk5OTg4MDc5MDcxMDQ0OTIxODc1KTsKICAgIGNvbCAqPSAyLjc5OTk5OTk1MjMxNjI4NDE3OTY4NzU7CiAgICBoaWdocCBmbG9hdCBzY2FucyA9IGNsYW1wKDAuMzQ5OTk5OTk0MDM5NTM1NTIyNDYwOTM3NSArICgwLjM0OTk5OTk5NDAzOTUzNTUyMjQ2MDkzNzUgKiBzaW4oKDMuNSAqIGlUaW1lKSArICgodXYueSAqIGlSZXNvbHV0aW9uLnkpICogMS41KSkpLCAwLjAsIDEuMCk7CiAgICBoaWdocCBmbG9hdCBzID0gcG93KHNjYW5zLCAxLjcwMDAwMDA0NzY4MzcxNTgyMDMxMjUpOwogICAgY29sICo9IHZlYzMoMC40MDAwMDAwMDU5NjA0NjQ0Nzc1MzkwNjI1ICsgKDAuNjk5OTk5OTg4MDc5MDcxMDQ0OTIxODc1ICogcykpOwogICAgY29sICo9ICgxLjAgKyAoMC4wMDk5OTk5OTk3NzY0ODI1ODIwOTIyODUxNTYyNSAqIHNpbigxMTAuMCAqIGlUaW1lKSkpOwogICAgY29sICo9ICh2ZWMzKDEuMCkgLSAodmVjMyhjbGFtcCgobW9kKHRleENvb3JkLngsIDIuMCkgLSAxLjApICogMi4wLCAwLjAsIDEuMCkpICogMC42NDk5OTk5NzYxNTgxNDIwODk4NDM3NSkpOwogICAgcmV0dXJuIGNvbDsKfQoKdm9pZCBtYWluKCkKewogICAgaGlnaHAgdmVjMiBwYXJhbSA9IHRleENvb3JkOwogICAgaGlnaHAgZmxvYXQgcGFyYW1fMSA9IHVfZGlzdG9ydEN1cnZlOwogICAgaGlnaHAgdmVjMiBfMzc5ID0gY3VydmUocGFyYW0sIHBhcmFtXzEpOwogICAgaGlnaHAgdmVjMiB1diA9IF8zNzk7CiAgICBoaWdocCB2ZWMzIGZ4Q29sb3IgPSB2ZWMzKDAuMCk7CiAgICBib29sIF8zODMgPSB1di54ID4gMC4wOwogICAgYm9vbCBfMzg5OwogICAgaWYgKF8zODMpCiAgICB7CiAgICAgICAgXzM4OSA9IHV2LnggPCAxLjA7CiAgICB9CiAgICBlbHNlCiAgICB7CiAgICAgICAgXzM4OSA9IF8zODM7CiAgICB9CiAgICBib29sIF8zOTU7CiAgICBpZiAoXzM4OSkKICAgIHsKICAgICAgICBfMzk1ID0gdXYueSA%IDAuMDsKICAgIH0KICAgIGVsc2UKICAgIHsKICAgICAgICBfMzk1ID0gXzM4OTsKICAgIH0KICAgIGJvb2wgXzQwMTsKICAgIGlmIChfMzk1KQogICAgewogICAgICAgIF80MDEgPSB1di55IDwgMS4wOwogICAgfQogICAgZWxzZQogICAgewogICAgICAgIF80MDEgPSBfMzk1OwogICAgfQogICAgaWYgKF80MDEpCiAgICB7CiAgICAgICAgaGlnaHAgdmVjMiBwYXJhbV8yID0gdXY7CiAgICAgICAgaGlnaHAgdmVjMyBfNDA2ID0gR2xpdGNoMShwYXJhbV8yKTsKICAgICAgICBoaWdocCB2ZWMyIHBhcmFtXzMgPSB1djsKICAgICAgICBmeENvbG9yID0gbWl4KF80MDYsIENSVDEocGFyYW1fMyksIHZlYzMoMS4wIC0gdV92aWduZXR0ZVN0cmVuZ3RoKSkgKiBjb2xvci54eXo7CiAgICAgICAgaGlnaHAgZmxvYXQgdmlnID0gMC4wICsgKCgoKDE2LjAgKiB1di54KSAqIHV2LnkpICogKDEuMCAtIHV2LngpKSAqICgxLjAgLSB1di55KSk7CiAgICAgICAgZnhDb2xvciAqPSB2ZWMzKHBvdyh2aWcsIDAuNSkpOwogICAgfQogICAgaGlnaHAgdmVjNCBvdXRDb2xvciA9IHZlYzQobWl4KHRleHR1cmUyRCh0ZXgsIHRleENvb3JkKS54eXosIGZ4Q29sb3IsIHZlYzModV9ibGVuZCkpLCBjb2xvci53KTsKICAgIGhpZ2hwIHZlYzMgXzQ2NCA9IG91dENvbG9yLnh5eiAqIGNvbG9yLnc7CiAgICBvdXRDb2xvciA9IHZlYzQoXzQ2NC54LCBfNDY0LnksIF80NjQueiwgb3V0Q29sb3Iudyk7CiAgICBnbF9GcmFnRGF0YVswXSA9IG91dENvbG9yOwp9Cgo";
kha_Shaders.badTV_fragData1 = "s6543:I3ZlcnNpb24gMzAwIGVzCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gaGlnaHAgaW50OwoKdW5pZm9ybSBoaWdocCBmbG9hdCBpVGltZTsKdW5pZm9ybSBoaWdocCBzYW1wbGVyMkQgdGV4Owp1bmlmb3JtIGhpZ2hwIHZlYzIgaVJlc29sdXRpb247CnVuaWZvcm0gaGlnaHAgZmxvYXQgdV9kaXN0b3J0Q3VydmU7CnVuaWZvcm0gaGlnaHAgZmxvYXQgdV92aWduZXR0ZVN0cmVuZ3RoOwp1bmlmb3JtIGhpZ2hwIGZsb2F0IHVfYmxlbmQ7CgppbiBoaWdocCB2ZWMyIHRleENvb3JkOwppbiBoaWdocCB2ZWM0IGNvbG9yOwpvdXQgaGlnaHAgdmVjNCBmcmFnQ29sb3I7CgpoaWdocCB2ZWMyIGN1cnZlKGlub3V0IGhpZ2hwIHZlYzIgdXYsIGhpZ2hwIGZsb2F0IGN1cnZlU3RyZW5ndGgpCnsKICAgIHV2ID0gKHV2IC0gdmVjMigwLjUpKSAqIDIuMDsKICAgIHV2ICo9IDEuMTAwMDAwMDIzODQxODU3OTEwMTU2MjU7CiAgICB1di54ICo9ICgxLjAgKyAocG93KGFicyh1di55KSAvIDUuMCwgMi4wKSAqIGN1cnZlU3RyZW5ndGgpKTsKICAgIHV2LnkgKj0gKDEuMCArIChwb3coYWJzKHV2LngpIC8gNC4wLCAyLjApICogY3VydmVTdHJlbmd0aCkpOwogICAgdXYgPSAodXYgLyB2ZWMyKDIuMCkpICsgdmVjMigwLjUpOwogICAgdXYgPSAodXYgKiAwLjkyMDAwMDAxNjY4OTMwMDUzNzEwOTM3NSkgKyB2ZWMyKDAuMDM5OTk5OTk5MTA1OTMwMzI4MzY5MTQwNjI1KTsKICAgIHJldHVybiB1djsKfQoKaGlnaHAgZmxvYXQgcmFuZCgpCnsKICAgIHJldHVybiBmcmFjdChzaW4oaVRpbWUpICogMTAwMDAuMCk7Cn0KCmhpZ2hwIHZlYzMgR2xpdGNoMShpbm91dCBoaWdocCB2ZWMyIHV2KQp7CiAgICBoaWdocCB2ZWMyIHV2UiA9IHV2OwogICAgaGlnaHAgdmVjMiB1dkIgPSB1djsKICAgIHV2Ui54ID0gKHV2LnggKiAxLjApIC0gKChyYW5kKCkgKiAwLjAxOTk5OTk5OTU1Mjk2NTE2NDE4NDU3MDMxMjUpICogMC44MDAwMDAwMTE5MjA5Mjg5NTUwNzgxMjUpOwogICAgdXZCLnkgPSAodXYueSAqIDEuMCkgKyAoKHJhbmQoKSAqIDAuMDE5OTk5OTk5NTUyOTY1MTY0MTg0NTcwMzEyNSkgKiAwLjgwMDAwMDAxMTkyMDkyODk1NTA3ODEyNSk7CiAgICBib29sIF8zMDYgPSB1di55IDwgcmFuZCgpOwogICAgYm9vbCBfMzE0OwogICAgaWYgKF8zMDYpCiAgICB7CiAgICAgICAgXzMxNCA9IHV2LnkgPiAocmFuZCgpIC0gMC4xMDAwMDAwMDE0OTAxMTYxMTkzODQ3NjU2MjUpOwogICAgfQogICAgZWxzZQogICAgewogICAgICAgIF8zMTQgPSBfMzA2OwogICAgfQogICAgYm9vbCBfMzIwOwogICAgaWYgKF8zMTQpCiAgICB7CiAgICAgICAgXzMyMCA9IHNpbihpVGltZSkgPCAwLjA7CiAgICB9CiAgICBlbHNlCiAgICB7CiAgICAgICAgXzMyMCA9IF8zMTQ7CiAgICB9CiAgICBpZiAoXzMyMCkKICAgIHsKICAgICAgICB1di54ID0gKHV2ICsgdmVjMigwLjAxOTk5OTk5OTU1Mjk2NTE2NDE4NDU3MDMxMjUgKiByYW5kKCkpKS54OwogICAgfQogICAgaGlnaHAgdmVjMyBjID0gdmVjMygwLjApOwogICAgYy54ID0gdGV4dHVyZSh0ZXgsIHV2UikueDsKICAgIGMueSA9IHRleHR1cmUodGV4LCB1dikueTsKICAgIGMueiA9IHRleHR1cmUodGV4LCB1dkIpLno7CiAgICBoaWdocCBmbG9hdCBzY2FubGluZSA9IHNpbigodXYueSAqIDgwMC4wKSAqIHJhbmQoKSkgLyAzMC4wOwogICAgYyAqPSAoMS4wIC0gc2NhbmxpbmUpOwogICAgaGlnaHAgZmxvYXQgdmVnRGlzdCA9IGxlbmd0aCh2ZWMyKDAuNSkgLSB1dik7CiAgICBjICo9ICgxLjAgLSAodmVnRGlzdCAqIDAuODAwMDAwMDExOTIwOTI4OTU1MDc4MTI1KSk7CiAgICByZXR1cm4gYzsKfQoKaGlnaHAgdmVjMyBDUlQxKGhpZ2hwIHZlYzIgdXYpCnsKICAgIGhpZ2hwIHZlYzMgY29sID0gdmVjMygwLjApOwogICAgY29sLnggPSB0ZXh0dXJlKHRleCwgdmVjMih1di54ICsgMC4wMDEwMDAwMDAwNDc0OTc0NTEzMDUzODk0MDQyOTY4NzUsIHV2LnkgKyAwLjAwMTAwMDAwMDA0NzQ5NzQ1MTMwNTM4OTQwNDI5Njg3NSkpLnggKyAwLjA1MDAwMDAwMDc0NTA1ODA1OTY5MjM4MjgxMjU7CiAgICBjb2wueSA9IHRleHR1cmUodGV4LCB2ZWMyKHV2LnggKyAwLjAsIHV2LnkgLSAwLjAwMjAwMDAwMDA5NDk5NDkwMjYxMDc3ODgwODU5Mzc1KSkueSArIDAuMDUwMDAwMDAwNzQ1MDU4MDU5NjkyMzgyODEyNTsKICAgIGNvbC56ID0gdGV4dHVyZSh0ZXgsIHZlYzIodXYueCAtIDAuMDAyMDAwMDAwMDk0OTk0OTAyNjEwNzc4ODA4NTkzNzUsIHV2LnkgKyAwLjApKS56ICsgMC4wNTAwMDAwMDA3NDUwNTgwNTk2OTIzODI4MTI1OwogICAgY29sLnggKz0gKDAuMDM5OTk5OTk5MTA1OTMwMzI4MzY5MTQwNjI1ICogdGV4dHVyZSh0ZXgsIHZlYzIoMC4wMTg3NTAwMDA3NDUwNTgwNTk2OTIzODI4MTI1LCAtMC4wMjAyNTAwMDAwNTk2MDQ2NDQ3NzUzOTA2MjUpICsgdmVjMih1di54ICsgMC4wMDEwMDAwMDAwNDc0OTc0NTEzMDUzODk0MDQyOTY4NzUsIHV2LnkgKyAwLjAwMTAwMDAwMDA0NzQ5NzQ1MTMwNTM4OTQwNDI5Njg3NSkpLngpOwogICAgY29sLnkgKz0gKDAuMDE5OTk5OTk5NTUyOTY1MTY0MTg0NTcwMzEyNSAqIHRleHR1cmUodGV4LCB2ZWMyKC0wLjAxNjQ5OTk5OTkxMDU5MzAzMjgzNjkxNDA2MjUsIC0wLjAxNDk5OTk5OTY2NDcyMzg3MzEzODQyNzczNDM3NSkgKyB2ZWMyKHV2LnggKyAwLjAsIHV2LnkgLSAwLjAwMjAwMDAwMDA5NDk5NDkwMjYxMDc3ODgwODU5Mzc1KSkueSk7CiAgICBjb2wueiArPSAoMC4wMjk5OTk5OTkzMjk0NDc3NDYyNzY4NTU0Njg3NSAqIHRleHR1cmUodGV4LCB2ZWMyKC0wLjAxNDk5OTk5OTY2NDcyMzg3MzEzODQyNzczNDM3NSwgLTAuMDEzNTAwMDAwMzUwMTc3Mjg4MDU1NDE5OTIxODc1KSArIHZlYzIodXYueCAtIDAuMDAyMDAwMDAwMDk0OTk0OTAyNjEwNzc4ODA4NTkzNzUsIHV2LnkgKyAwLjApKS56KTsKICAgIGNvbCAqPSAwLjg5OTk5OTk3NjE1ODE0MjA4OTg0Mzc1OwogICAgY29sICs9IHZlYzMoMC4xMDAwMDAwMDE0OTAxMTYxMTkzODQ3NjU2MjUpOwogICAgY29sID0gY2xhbXAoKGNvbCAqIDAuNjAwMDAwMDIzODQxODU3OTEwMTU2MjUpICsgKCgoY29sICogMC40MDAwMDAwMDU5NjA0NjQ0Nzc1MzkwNjI1KSAqIGNvbCkgKiAxLjApLCB2ZWMzKDAuMCksIHZlYzMoMS4wKSk7CiAgICBjb2wgKj0gdmVjMygwLjk0OTk5OTk4ODA3OTA3MTA0NDkyMTg3NSwgMS4wNDk5OTk5NTIzMTYyODQxNzk2ODc1LCAwLjk0OTk5OTk4ODA3OTA3MTA0NDkyMTg3NSk7CiAgICBjb2wgKj0gMi43OTk5OTk5NTIzMTYyODQxNzk2ODc1OwogICAgaGlnaHAgZmxvYXQgc2NhbnMgPSBjbGFtcCgwLjM0OTk5OTk5NDAzOTUzNTUyMjQ2MDkzNzUgKyAoMC4zNDk5OTk5OTQwMzk1MzU1MjI0NjA5Mzc1ICogc2luKCgzLjUgKiBpVGltZSkgKyAoKHV2LnkgKiBpUmVzb2x1dGlvbi55KSAqIDEuNSkpKSwgMC4wLCAxLjApOwogICAgaGlnaHAgZmxvYXQgcyA9IHBvdyhzY2FucywgMS43MDAwMDAwNDc2ODM3MTU4MjAzMTI1KTsKICAgIGNvbCAqPSB2ZWMzKDAuNDAwMDAwMDA1OTYwNDY0NDc3NTM5MDYyNSArICgwLjY5OTk5OTk4ODA3OTA3MTA0NDkyMTg3NSAqIHMpKTsKICAgIGNvbCAqPSAoMS4wICsgKDAuMDA5OTk5OTk5Nzc2NDgyNTgyMDkyMjg1MTU2MjUgKiBzaW4oMTEwLjAgKiBpVGltZSkpKTsKICAgIGNvbCAqPSAodmVjMygxLjApIC0gKHZlYzMoY2xhbXAoKG1vZCh0ZXhDb29yZC54LCAyLjApIC0gMS4wKSAqIDIuMCwgMC4wLCAxLjApKSAqIDAuNjQ5OTk5OTc2MTU4MTQyMDg5ODQzNzUpKTsKICAgIHJldHVybiBjb2w7Cn0KCnZvaWQgbWFpbigpCnsKICAgIGhpZ2hwIHZlYzIgcGFyYW0gPSB0ZXhDb29yZDsKICAgIGhpZ2hwIGZsb2F0IHBhcmFtXzEgPSB1X2Rpc3RvcnRDdXJ2ZTsKICAgIGhpZ2hwIHZlYzIgXzM3OSA9IGN1cnZlKHBhcmFtLCBwYXJhbV8xKTsKICAgIGhpZ2hwIHZlYzIgdXYgPSBfMzc5OwogICAgaGlnaHAgdmVjMyBmeENvbG9yID0gdmVjMygwLjApOwogICAgYm9vbCBfMzgzID0gdXYueCA%IDAuMDsKICAgIGJvb2wgXzM4OTsKICAgIGlmIChfMzgzKQogICAgewogICAgICAgIF8zODkgPSB1di54IDwgMS4wOwogICAgfQogICAgZWxzZQogICAgewogICAgICAgIF8zODkgPSBfMzgzOwogICAgfQogICAgYm9vbCBfMzk1OwogICAgaWYgKF8zODkpCiAgICB7CiAgICAgICAgXzM5NSA9IHV2LnkgPiAwLjA7CiAgICB9CiAgICBlbHNlCiAgICB7CiAgICAgICAgXzM5NSA9IF8zODk7CiAgICB9CiAgICBib29sIF80MDE7CiAgICBpZiAoXzM5NSkKICAgIHsKICAgICAgICBfNDAxID0gdXYueSA8IDEuMDsKICAgIH0KICAgIGVsc2UKICAgIHsKICAgICAgICBfNDAxID0gXzM5NTsKICAgIH0KICAgIGlmIChfNDAxKQogICAgewogICAgICAgIGhpZ2hwIHZlYzIgcGFyYW1fMiA9IHV2OwogICAgICAgIGhpZ2hwIHZlYzMgXzQwNiA9IEdsaXRjaDEocGFyYW1fMik7CiAgICAgICAgaGlnaHAgdmVjMiBwYXJhbV8zID0gdXY7CiAgICAgICAgZnhDb2xvciA9IG1peChfNDA2LCBDUlQxKHBhcmFtXzMpLCB2ZWMzKDEuMCAtIHVfdmlnbmV0dGVTdHJlbmd0aCkpICogY29sb3IueHl6OwogICAgICAgIGhpZ2hwIGZsb2F0IHZpZyA9IDAuMCArICgoKCgxNi4wICogdXYueCkgKiB1di55KSAqICgxLjAgLSB1di54KSkgKiAoMS4wIC0gdXYueSkpOwogICAgICAgIGZ4Q29sb3IgKj0gdmVjMyhwb3codmlnLCAwLjUpKTsKICAgIH0KICAgIGhpZ2hwIHZlYzQgb3V0Q29sb3IgPSB2ZWM0KG1peCh0ZXh0dXJlKHRleCwgdGV4Q29vcmQpLnh5eiwgZnhDb2xvciwgdmVjMyh1X2JsZW5kKSksIGNvbG9yLncpOwogICAgaGlnaHAgdmVjMyBfNDY0ID0gb3V0Q29sb3IueHl6ICogY29sb3IudzsKICAgIG91dENvbG9yID0gdmVjNChfNDY0LngsIF80NjQueSwgXzQ2NC56LCBvdXRDb2xvci53KTsKICAgIGZyYWdDb2xvciA9IG91dENvbG9yOwp9Cgo";
kha_Shaders.badTV_fragData2 = "s6284:I3ZlcnNpb24gMTAwCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gbWVkaXVtcCBpbnQ7Cgp1bmlmb3JtIGZsb2F0IGlUaW1lOwp1bmlmb3JtIG1lZGl1bXAgc2FtcGxlcjJEIHRleDsKdW5pZm9ybSB2ZWMyIGlSZXNvbHV0aW9uOwp1bmlmb3JtIGZsb2F0IHVfZGlzdG9ydEN1cnZlOwp1bmlmb3JtIGZsb2F0IHVfdmlnbmV0dGVTdHJlbmd0aDsKdW5pZm9ybSBmbG9hdCB1X2JsZW5kOwoKdmFyeWluZyB2ZWMyIHRleENvb3JkOwp2YXJ5aW5nIHZlYzQgY29sb3I7Cgp2ZWMyIGN1cnZlKGlub3V0IHZlYzIgdXYsIGZsb2F0IGN1cnZlU3RyZW5ndGgpCnsKICAgIHV2ID0gKHV2IC0gdmVjMigwLjUpKSAqIDIuMDsKICAgIHV2ICo9IDEuMTAwMDAwMDIzODQxODU3OTEwMTU2MjU7CiAgICB1di54ICo9ICgxLjAgKyAocG93KGFicyh1di55KSAvIDUuMCwgMi4wKSAqIGN1cnZlU3RyZW5ndGgpKTsKICAgIHV2LnkgKj0gKDEuMCArIChwb3coYWJzKHV2LngpIC8gNC4wLCAyLjApICogY3VydmVTdHJlbmd0aCkpOwogICAgdXYgPSAodXYgLyB2ZWMyKDIuMCkpICsgdmVjMigwLjUpOwogICAgdXYgPSAodXYgKiAwLjkyMDAwMDAxNjY4OTMwMDUzNzEwOTM3NSkgKyB2ZWMyKDAuMDM5OTk5OTk5MTA1OTMwMzI4MzY5MTQwNjI1KTsKICAgIHJldHVybiB1djsKfQoKZmxvYXQgcmFuZCgpCnsKICAgIHJldHVybiBmcmFjdChzaW4oaVRpbWUpICogMTAwMDAuMCk7Cn0KCnZlYzMgR2xpdGNoMShpbm91dCB2ZWMyIHV2KQp7CiAgICB2ZWMyIHV2UiA9IHV2OwogICAgdmVjMiB1dkIgPSB1djsKICAgIHV2Ui54ID0gKHV2LnggKiAxLjApIC0gKChyYW5kKCkgKiAwLjAxOTk5OTk5OTU1Mjk2NTE2NDE4NDU3MDMxMjUpICogMC44MDAwMDAwMTE5MjA5Mjg5NTUwNzgxMjUpOwogICAgdXZCLnkgPSAodXYueSAqIDEuMCkgKyAoKHJhbmQoKSAqIDAuMDE5OTk5OTk5NTUyOTY1MTY0MTg0NTcwMzEyNSkgKiAwLjgwMDAwMDAxMTkyMDkyODk1NTA3ODEyNSk7CiAgICBib29sIF8zMDYgPSB1di55IDwgcmFuZCgpOwogICAgYm9vbCBfMzE0OwogICAgaWYgKF8zMDYpCiAgICB7CiAgICAgICAgXzMxNCA9IHV2LnkgPiAocmFuZCgpIC0gMC4xMDAwMDAwMDE0OTAxMTYxMTkzODQ3NjU2MjUpOwogICAgfQogICAgZWxzZQogICAgewogICAgICAgIF8zMTQgPSBfMzA2OwogICAgfQogICAgYm9vbCBfMzIwOwogICAgaWYgKF8zMTQpCiAgICB7CiAgICAgICAgXzMyMCA9IHNpbihpVGltZSkgPCAwLjA7CiAgICB9CiAgICBlbHNlCiAgICB7CiAgICAgICAgXzMyMCA9IF8zMTQ7CiAgICB9CiAgICBpZiAoXzMyMCkKICAgIHsKICAgICAgICB1di54ID0gKHV2ICsgdmVjMigwLjAxOTk5OTk5OTU1Mjk2NTE2NDE4NDU3MDMxMjUgKiByYW5kKCkpKS54OwogICAgfQogICAgdmVjMyBjID0gdmVjMygwLjApOwogICAgYy54ID0gdGV4dHVyZTJEKHRleCwgdXZSKS54OwogICAgYy55ID0gdGV4dHVyZTJEKHRleCwgdXYpLnk7CiAgICBjLnogPSB0ZXh0dXJlMkQodGV4LCB1dkIpLno7CiAgICBmbG9hdCBzY2FubGluZSA9IHNpbigodXYueSAqIDgwMC4wKSAqIHJhbmQoKSkgLyAzMC4wOwogICAgYyAqPSAoMS4wIC0gc2NhbmxpbmUpOwogICAgZmxvYXQgdmVnRGlzdCA9IGxlbmd0aCh2ZWMyKDAuNSkgLSB1dik7CiAgICBjICo9ICgxLjAgLSAodmVnRGlzdCAqIDAuODAwMDAwMDExOTIwOTI4OTU1MDc4MTI1KSk7CiAgICByZXR1cm4gYzsKfQoKdmVjMyBDUlQxKHZlYzIgdXYpCnsKICAgIHZlYzMgY29sID0gdmVjMygwLjApOwogICAgY29sLnggPSB0ZXh0dXJlMkQodGV4LCB2ZWMyKHV2LnggKyAwLjAwMTAwMDAwMDA0NzQ5NzQ1MTMwNTM4OTQwNDI5Njg3NSwgdXYueSArIDAuMDAxMDAwMDAwMDQ3NDk3NDUxMzA1Mzg5NDA0Mjk2ODc1KSkueCArIDAuMDUwMDAwMDAwNzQ1MDU4MDU5NjkyMzgyODEyNTsKICAgIGNvbC55ID0gdGV4dHVyZTJEKHRleCwgdmVjMih1di54ICsgMC4wLCB1di55IC0gMC4wMDIwMDAwMDAwOTQ5OTQ5MDI2MTA3Nzg4MDg1OTM3NSkpLnkgKyAwLjA1MDAwMDAwMDc0NTA1ODA1OTY5MjM4MjgxMjU7CiAgICBjb2wueiA9IHRleHR1cmUyRCh0ZXgsIHZlYzIodXYueCAtIDAuMDAyMDAwMDAwMDk0OTk0OTAyNjEwNzc4ODA4NTkzNzUsIHV2LnkgKyAwLjApKS56ICsgMC4wNTAwMDAwMDA3NDUwNTgwNTk2OTIzODI4MTI1OwogICAgY29sLnggKz0gKDAuMDM5OTk5OTk5MTA1OTMwMzI4MzY5MTQwNjI1ICogdGV4dHVyZTJEKHRleCwgdmVjMigwLjAxODc1MDAwMDc0NTA1ODA1OTY5MjM4MjgxMjUsIC0wLjAyMDI1MDAwMDA1OTYwNDY0NDc3NTM5MDYyNSkgKyB2ZWMyKHV2LnggKyAwLjAwMTAwMDAwMDA0NzQ5NzQ1MTMwNTM4OTQwNDI5Njg3NSwgdXYueSArIDAuMDAxMDAwMDAwMDQ3NDk3NDUxMzA1Mzg5NDA0Mjk2ODc1KSkueCk7CiAgICBjb2wueSArPSAoMC4wMTk5OTk5OTk1NTI5NjUxNjQxODQ1NzAzMTI1ICogdGV4dHVyZTJEKHRleCwgdmVjMigtMC4wMTY0OTk5OTk5MTA1OTMwMzI4MzY5MTQwNjI1LCAtMC4wMTQ5OTk5OTk2NjQ3MjM4NzMxMzg0Mjc3MzQzNzUpICsgdmVjMih1di54ICsgMC4wLCB1di55IC0gMC4wMDIwMDAwMDAwOTQ5OTQ5MDI2MTA3Nzg4MDg1OTM3NSkpLnkpOwogICAgY29sLnogKz0gKDAuMDI5OTk5OTk5MzI5NDQ3NzQ2Mjc2ODU1NDY4NzUgKiB0ZXh0dXJlMkQodGV4LCB2ZWMyKC0wLjAxNDk5OTk5OTY2NDcyMzg3MzEzODQyNzczNDM3NSwgLTAuMDEzNTAwMDAwMzUwMTc3Mjg4MDU1NDE5OTIxODc1KSArIHZlYzIodXYueCAtIDAuMDAyMDAwMDAwMDk0OTk0OTAyNjEwNzc4ODA4NTkzNzUsIHV2LnkgKyAwLjApKS56KTsKICAgIGNvbCAqPSAwLjg5OTk5OTk3NjE1ODE0MjA4OTg0Mzc1OwogICAgY29sICs9IHZlYzMoMC4xMDAwMDAwMDE0OTAxMTYxMTkzODQ3NjU2MjUpOwogICAgY29sID0gY2xhbXAoKGNvbCAqIDAuNjAwMDAwMDIzODQxODU3OTEwMTU2MjUpICsgKCgoY29sICogMC40MDAwMDAwMDU5NjA0NjQ0Nzc1MzkwNjI1KSAqIGNvbCkgKiAxLjApLCB2ZWMzKDAuMCksIHZlYzMoMS4wKSk7CiAgICBjb2wgKj0gdmVjMygwLjk0OTk5OTk4ODA3OTA3MTA0NDkyMTg3NSwgMS4wNDk5OTk5NTIzMTYyODQxNzk2ODc1LCAwLjk0OTk5OTk4ODA3OTA3MTA0NDkyMTg3NSk7CiAgICBjb2wgKj0gMi43OTk5OTk5NTIzMTYyODQxNzk2ODc1OwogICAgZmxvYXQgc2NhbnMgPSBjbGFtcCgwLjM0OTk5OTk5NDAzOTUzNTUyMjQ2MDkzNzUgKyAoMC4zNDk5OTk5OTQwMzk1MzU1MjI0NjA5Mzc1ICogc2luKCgzLjUgKiBpVGltZSkgKyAoKHV2LnkgKiBpUmVzb2x1dGlvbi55KSAqIDEuNSkpKSwgMC4wLCAxLjApOwogICAgZmxvYXQgcyA9IHBvdyhzY2FucywgMS43MDAwMDAwNDc2ODM3MTU4MjAzMTI1KTsKICAgIGNvbCAqPSB2ZWMzKDAuNDAwMDAwMDA1OTYwNDY0NDc3NTM5MDYyNSArICgwLjY5OTk5OTk4ODA3OTA3MTA0NDkyMTg3NSAqIHMpKTsKICAgIGNvbCAqPSAoMS4wICsgKDAuMDA5OTk5OTk5Nzc2NDgyNTgyMDkyMjg1MTU2MjUgKiBzaW4oMTEwLjAgKiBpVGltZSkpKTsKICAgIGNvbCAqPSAodmVjMygxLjApIC0gKHZlYzMoY2xhbXAoKG1vZCh0ZXhDb29yZC54LCAyLjApIC0gMS4wKSAqIDIuMCwgMC4wLCAxLjApKSAqIDAuNjQ5OTk5OTc2MTU4MTQyMDg5ODQzNzUpKTsKICAgIHJldHVybiBjb2w7Cn0KCnZvaWQgbWFpbigpCnsKICAgIHZlYzIgcGFyYW0gPSB0ZXhDb29yZDsKICAgIGZsb2F0IHBhcmFtXzEgPSB1X2Rpc3RvcnRDdXJ2ZTsKICAgIHZlYzIgXzM3OSA9IGN1cnZlKHBhcmFtLCBwYXJhbV8xKTsKICAgIHZlYzIgdXYgPSBfMzc5OwogICAgdmVjMyBmeENvbG9yID0gdmVjMygwLjApOwogICAgYm9vbCBfMzgzID0gdXYueCA%IDAuMDsKICAgIGJvb2wgXzM4OTsKICAgIGlmIChfMzgzKQogICAgewogICAgICAgIF8zODkgPSB1di54IDwgMS4wOwogICAgfQogICAgZWxzZQogICAgewogICAgICAgIF8zODkgPSBfMzgzOwogICAgfQogICAgYm9vbCBfMzk1OwogICAgaWYgKF8zODkpCiAgICB7CiAgICAgICAgXzM5NSA9IHV2LnkgPiAwLjA7CiAgICB9CiAgICBlbHNlCiAgICB7CiAgICAgICAgXzM5NSA9IF8zODk7CiAgICB9CiAgICBib29sIF80MDE7CiAgICBpZiAoXzM5NSkKICAgIHsKICAgICAgICBfNDAxID0gdXYueSA8IDEuMDsKICAgIH0KICAgIGVsc2UKICAgIHsKICAgICAgICBfNDAxID0gXzM5NTsKICAgIH0KICAgIGlmIChfNDAxKQogICAgewogICAgICAgIHZlYzIgcGFyYW1fMiA9IHV2OwogICAgICAgIHZlYzMgXzQwNiA9IEdsaXRjaDEocGFyYW1fMik7CiAgICAgICAgdmVjMiBwYXJhbV8zID0gdXY7CiAgICAgICAgZnhDb2xvciA9IG1peChfNDA2LCBDUlQxKHBhcmFtXzMpLCB2ZWMzKDEuMCAtIHVfdmlnbmV0dGVTdHJlbmd0aCkpICogY29sb3IueHl6OwogICAgICAgIGZsb2F0IHZpZyA9IDAuMCArICgoKCgxNi4wICogdXYueCkgKiB1di55KSAqICgxLjAgLSB1di54KSkgKiAoMS4wIC0gdXYueSkpOwogICAgICAgIGZ4Q29sb3IgKj0gdmVjMyhwb3codmlnLCAwLjUpKTsKICAgIH0KICAgIHZlYzQgb3V0Q29sb3IgPSB2ZWM0KG1peCh0ZXh0dXJlMkQodGV4LCB0ZXhDb29yZCkueHl6LCBmeENvbG9yLCB2ZWMzKHVfYmxlbmQpKSwgY29sb3Iudyk7CiAgICB2ZWMzIF80NjQgPSBvdXRDb2xvci54eXogKiBjb2xvci53OwogICAgb3V0Q29sb3IgPSB2ZWM0KF80NjQueCwgXzQ2NC55LCBfNDY0LnosIG91dENvbG9yLncpOwogICAgZ2xfRnJhZ0RhdGFbMF0gPSBvdXRDb2xvcjsKfQoK";
kha_Shaders.blurFilter_fragData0 = "s3282:I3ZlcnNpb24gMTAwCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gaGlnaHAgaW50OwoKdW5pZm9ybSBoaWdocCB2ZWMyIGlSZXNvbHV0aW9uOwp1bmlmb3JtIGhpZ2hwIHNhbXBsZXIyRCB0ZXg7CnVuaWZvcm0gaGlnaHAgZmxvYXQgYmx1ckFtb3VudDsKdW5pZm9ybSBib29sIGlubmVyOwp1bmlmb3JtIGJvb2wga25vY2tvdXQ7CnVuaWZvcm0gaGlnaHAgdmVjNCBnbG93Y29sb3I7CnVuaWZvcm0gaGlnaHAgZmxvYXQgZ2xvd2FscGhhOwp1bmlmb3JtIGhpZ2hwIGZsb2F0IGlUaW1lOwoKdmFyeWluZyBoaWdocCB2ZWMyIHRleENvb3JkOwp2YXJ5aW5nIGhpZ2hwIHZlYzQgY29sb3I7CgpoaWdocCB2ZWM0IGJsdXIoaGlnaHAgdmVjMiB1dmQsIGhpZ2hwIGZsb2F0IGFtb3VudCwgaGlnaHAgZmxvYXQgcG93ZXIpCnsKICAgIGhpZ2hwIHZlYzIgcGl4ZWwgPSB2ZWMyKDEuMCkgLyBpUmVzb2x1dGlvbjsKICAgIGhpZ2hwIGZsb2F0IGNvdW50ID0gMS4wOwogICAgaGlnaHAgdmVjNCBjb2xvcl8xID0gdGV4dHVyZTJEKHRleCwgdXZkKSAqIGNvdW50OwogICAgaGlnaHAgZmxvYXQgcnIgPSAyLjAgKiBhbW91bnQ7CiAgICBmb3IgKGhpZ2hwIGZsb2F0IGRpcmVjdGlvblN0ZXAgPSAwLjE1NzA3OTYzNzA1MDYyODY2MjEwOTM3NSwgZCA9IDAuMDsgZCA8IDYuMjgzMTg1NDgyMDI1MTQ2NDg0Mzc1OyBkICs9IGRpcmVjdGlvblN0ZXApCiAgICB7CiAgICAgICAgaGlnaHAgZmxvYXQgYyA9IGNvcyhkKTsKICAgICAgICBoaWdocCBmbG9hdCBzID0gc2luKGQpOwogICAgICAgIGhpZ2hwIGZsb2F0IGRpc3QgPSAwLjEwMDAwMDAwMTQ5MDExNjExOTM4NDc2NTYyNSAvIG1heChhYnMoYyksIGFicyhzKSk7CiAgICAgICAgaGlnaHAgdmVjMiBvZmYgPSB2ZWMyKGMsIHMpOwogICAgICAgIGZvciAoaGlnaHAgZmxvYXQgZGlzdDIgPSBkaXN0ICogMi4wLCBpID0gZGlzdCAqIDEuNTsgaSA8PSBycjsgaSArPSBkaXN0MikKICAgICAgICB7CiAgICAgICAgICAgIGhpZ2hwIGZsb2F0IHdlaWdodCA9IGkgLyBycjsKICAgICAgICAgICAgY291bnQgKz0gd2VpZ2h0OwogICAgICAgICAgICBjb2xvcl8xICs9ICgodGV4dHVyZTJEKHRleCwgdXZkICsgKChvZmYgKiBwaXhlbCkgKiBpKSkgKiB3ZWlnaHQpICogcG93ZXIpOwogICAgICAgIH0KICAgIH0KICAgIHJldHVybiBjb2xvcl8xIC8gdmVjNChjb3VudCk7Cn0KCnZvaWQgbWFpbigpCnsKICAgIGhpZ2hwIGZsb2F0IGJsdXJBbSA9IGJsdXJBbW91bnQ7CiAgICBoaWdocCB2ZWM0IG9yZyA9IHRleHR1cmUyRCh0ZXgsIHRleENvb3JkKTsKICAgIGhpZ2hwIGZsb2F0IGdsb3dBbHBoYTIgPSAxLjA7CiAgICBpZiAoYmx1ckFtIDwgMC4yMDAwMDAwMDI5ODAyMzIyMzg3Njk1MzEyNSkKICAgIHsKICAgICAgICBibHVyQW0gPSAwLjIwMDAwMDAwMjk4MDIzMjIzODc2OTUzMTI1OwogICAgICAgIGdsb3dBbHBoYTIgPSBibHVyQW1vdW50IC8gMC4yMDAwMDAwMDI5ODAyMzIyMzg3Njk1MzEyNTsKICAgIH0KICAgIGhpZ2hwIHZlYzIgcGFyYW0gPSB0ZXhDb29yZDsKICAgIGhpZ2hwIGZsb2F0IHBhcmFtXzEgPSBibHVyQW07CiAgICBoaWdocCBmbG9hdCBwYXJhbV8yID0gMS41OwogICAgaGlnaHAgdmVjNCBiQ29sID0gYmx1cihwYXJhbSwgcGFyYW1fMSwgcGFyYW1fMik7CiAgICBoaWdocCB2ZWM0IGdsb3cgPSB2ZWM0KDAuMCk7CiAgICBoaWdocCB2ZWM0IGZpbkNvbCA9IHZlYzQoMC4wKTsKICAgIGhpZ2hwIGZsb2F0IG9yZ0FscGhhID0gb3JnLnc7CiAgICBpZiAoaW5uZXIpCiAgICB7CiAgICAgICAgZ2xvdyA9IHZlYzQodmVjMygxLjApIC0gYkNvbC54eXosIDEuMCk7CiAgICAgICAgZ2xvdyAqPSBvcmcudzsKICAgICAgICBnbG93LncgKj0gZ2xvdy54OwogICAgfQogICAgZWxzZQogICAgewogICAgICAgIGlmICgha25vY2tvdXQpCiAgICAgICAgewogICAgICAgICAgICBnbG93ID0gKGJDb2wgKiBnbG93Y29sb3IpICogZ2xvd2FscGhhOwogICAgICAgICAgICBmaW5Db2wgPSBnbG93ICsgKG9yZyAqIGNvbG9yKTsKICAgICAgICB9CiAgICB9CiAgICBpZiAoa25vY2tvdXQpCiAgICB7CiAgICAgICAgZmluQ29sID0gdmVjNCh2ZWMzKDEuMCkgLSBiQ29sLnh5eiwgMS4wKTsKICAgICAgICBmaW5Db2wgKj0gKDEuMCAtIG9yZ0FscGhhKTsKICAgICAgICBmaW5Db2wgKj0gYkNvbC53OwogICAgICAgIGZpbkNvbCAqPSAoZ2xvd2NvbG9yICogZ2xvd2FscGhhKTsKICAgICAgICBmaW5Db2wgKz0gKG9yZyAqIGNvbG9yKTsKICAgIH0KICAgIGVsc2UKICAgIHsKICAgICAgICBpZiAoaW5uZXIpCiAgICAgICAgewogICAgICAgICAgICBmaW5Db2wgPSBvcmcgKiBjb2xvcjsKICAgICAgICAgICAgZmluQ29sICo9IGNvbG9yLnc7CiAgICAgICAgICAgIGZpbkNvbCArPSAoKGdsb3cgKiBnbG93Y29sb3IpICogZ2xvd0FscGhhMik7CiAgICAgICAgfQogICAgfQogICAgZ2xfRnJhZ0RhdGFbMF0gPSBmaW5Db2w7Cn0KCg";
kha_Shaders.blurFilter_fragData1 = "s3292:I3ZlcnNpb24gMzAwIGVzCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gaGlnaHAgaW50OwoKdW5pZm9ybSBoaWdocCB2ZWMyIGlSZXNvbHV0aW9uOwp1bmlmb3JtIGhpZ2hwIHNhbXBsZXIyRCB0ZXg7CnVuaWZvcm0gaGlnaHAgZmxvYXQgYmx1ckFtb3VudDsKdW5pZm9ybSBib29sIGlubmVyOwp1bmlmb3JtIGJvb2wga25vY2tvdXQ7CnVuaWZvcm0gaGlnaHAgdmVjNCBnbG93Y29sb3I7CnVuaWZvcm0gaGlnaHAgZmxvYXQgZ2xvd2FscGhhOwp1bmlmb3JtIGhpZ2hwIGZsb2F0IGlUaW1lOwoKaW4gaGlnaHAgdmVjMiB0ZXhDb29yZDsKaW4gaGlnaHAgdmVjNCBjb2xvcjsKb3V0IGhpZ2hwIHZlYzQgZnJhZ0NvbG9yOwoKaGlnaHAgdmVjNCBibHVyKGhpZ2hwIHZlYzIgdXZkLCBoaWdocCBmbG9hdCBhbW91bnQsIGhpZ2hwIGZsb2F0IHBvd2VyKQp7CiAgICBoaWdocCB2ZWMyIHBpeGVsID0gdmVjMigxLjApIC8gaVJlc29sdXRpb247CiAgICBoaWdocCBmbG9hdCBjb3VudCA9IDEuMDsKICAgIGhpZ2hwIHZlYzQgY29sb3JfMSA9IHRleHR1cmUodGV4LCB1dmQpICogY291bnQ7CiAgICBoaWdocCBmbG9hdCByciA9IDIuMCAqIGFtb3VudDsKICAgIGZvciAoaGlnaHAgZmxvYXQgZGlyZWN0aW9uU3RlcCA9IDAuMTU3MDc5NjM3MDUwNjI4NjYyMTA5Mzc1LCBkID0gMC4wOyBkIDwgNi4yODMxODU0ODIwMjUxNDY0ODQzNzU7IGQgKz0gZGlyZWN0aW9uU3RlcCkKICAgIHsKICAgICAgICBoaWdocCBmbG9hdCBjID0gY29zKGQpOwogICAgICAgIGhpZ2hwIGZsb2F0IHMgPSBzaW4oZCk7CiAgICAgICAgaGlnaHAgZmxvYXQgZGlzdCA9IDAuMTAwMDAwMDAxNDkwMTE2MTE5Mzg0NzY1NjI1IC8gbWF4KGFicyhjKSwgYWJzKHMpKTsKICAgICAgICBoaWdocCB2ZWMyIG9mZiA9IHZlYzIoYywgcyk7CiAgICAgICAgZm9yIChoaWdocCBmbG9hdCBkaXN0MiA9IGRpc3QgKiAyLjAsIGkgPSBkaXN0ICogMS41OyBpIDw9IHJyOyBpICs9IGRpc3QyKQogICAgICAgIHsKICAgICAgICAgICAgaGlnaHAgZmxvYXQgd2VpZ2h0ID0gaSAvIHJyOwogICAgICAgICAgICBjb3VudCArPSB3ZWlnaHQ7CiAgICAgICAgICAgIGNvbG9yXzEgKz0gKCh0ZXh0dXJlKHRleCwgdXZkICsgKChvZmYgKiBwaXhlbCkgKiBpKSkgKiB3ZWlnaHQpICogcG93ZXIpOwogICAgICAgIH0KICAgIH0KICAgIHJldHVybiBjb2xvcl8xIC8gdmVjNChjb3VudCk7Cn0KCnZvaWQgbWFpbigpCnsKICAgIGhpZ2hwIGZsb2F0IGJsdXJBbSA9IGJsdXJBbW91bnQ7CiAgICBoaWdocCB2ZWM0IG9yZyA9IHRleHR1cmUodGV4LCB0ZXhDb29yZCk7CiAgICBoaWdocCBmbG9hdCBnbG93QWxwaGEyID0gMS4wOwogICAgaWYgKGJsdXJBbSA8IDAuMjAwMDAwMDAyOTgwMjMyMjM4NzY5NTMxMjUpCiAgICB7CiAgICAgICAgYmx1ckFtID0gMC4yMDAwMDAwMDI5ODAyMzIyMzg3Njk1MzEyNTsKICAgICAgICBnbG93QWxwaGEyID0gYmx1ckFtb3VudCAvIDAuMjAwMDAwMDAyOTgwMjMyMjM4NzY5NTMxMjU7CiAgICB9CiAgICBoaWdocCB2ZWMyIHBhcmFtID0gdGV4Q29vcmQ7CiAgICBoaWdocCBmbG9hdCBwYXJhbV8xID0gYmx1ckFtOwogICAgaGlnaHAgZmxvYXQgcGFyYW1fMiA9IDEuNTsKICAgIGhpZ2hwIHZlYzQgYkNvbCA9IGJsdXIocGFyYW0sIHBhcmFtXzEsIHBhcmFtXzIpOwogICAgaGlnaHAgdmVjNCBnbG93ID0gdmVjNCgwLjApOwogICAgaGlnaHAgdmVjNCBmaW5Db2wgPSB2ZWM0KDAuMCk7CiAgICBoaWdocCBmbG9hdCBvcmdBbHBoYSA9IG9yZy53OwogICAgaWYgKGlubmVyKQogICAgewogICAgICAgIGdsb3cgPSB2ZWM0KHZlYzMoMS4wKSAtIGJDb2wueHl6LCAxLjApOwogICAgICAgIGdsb3cgKj0gb3JnLnc7CiAgICAgICAgZ2xvdy53ICo9IGdsb3cueDsKICAgIH0KICAgIGVsc2UKICAgIHsKICAgICAgICBpZiAoIWtub2Nrb3V0KQogICAgICAgIHsKICAgICAgICAgICAgZ2xvdyA9IChiQ29sICogZ2xvd2NvbG9yKSAqIGdsb3dhbHBoYTsKICAgICAgICAgICAgZmluQ29sID0gZ2xvdyArIChvcmcgKiBjb2xvcik7CiAgICAgICAgfQogICAgfQogICAgaWYgKGtub2Nrb3V0KQogICAgewogICAgICAgIGZpbkNvbCA9IHZlYzQodmVjMygxLjApIC0gYkNvbC54eXosIDEuMCk7CiAgICAgICAgZmluQ29sICo9ICgxLjAgLSBvcmdBbHBoYSk7CiAgICAgICAgZmluQ29sICo9IGJDb2wudzsKICAgICAgICBmaW5Db2wgKj0gKGdsb3djb2xvciAqIGdsb3dhbHBoYSk7CiAgICAgICAgZmluQ29sICs9IChvcmcgKiBjb2xvcik7CiAgICB9CiAgICBlbHNlCiAgICB7CiAgICAgICAgaWYgKGlubmVyKQogICAgICAgIHsKICAgICAgICAgICAgZmluQ29sID0gb3JnICogY29sb3I7CiAgICAgICAgICAgIGZpbkNvbCAqPSBjb2xvci53OwogICAgICAgICAgICBmaW5Db2wgKz0gKChnbG93ICogZ2xvd2NvbG9yKSAqIGdsb3dBbHBoYTIpOwogICAgICAgIH0KICAgIH0KICAgIGZyYWdDb2xvciA9IGZpbkNvbDsKfQoK";
kha_Shaders.blurFilter_fragData2 = "s3031:I3ZlcnNpb24gMTAwCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gbWVkaXVtcCBpbnQ7Cgp1bmlmb3JtIHZlYzIgaVJlc29sdXRpb247CnVuaWZvcm0gbWVkaXVtcCBzYW1wbGVyMkQgdGV4Owp1bmlmb3JtIGZsb2F0IGJsdXJBbW91bnQ7CnVuaWZvcm0gYm9vbCBpbm5lcjsKdW5pZm9ybSBib29sIGtub2Nrb3V0Owp1bmlmb3JtIHZlYzQgZ2xvd2NvbG9yOwp1bmlmb3JtIGZsb2F0IGdsb3dhbHBoYTsKdW5pZm9ybSBmbG9hdCBpVGltZTsKCnZhcnlpbmcgdmVjMiB0ZXhDb29yZDsKdmFyeWluZyB2ZWM0IGNvbG9yOwoKdmVjNCBibHVyKHZlYzIgdXZkLCBmbG9hdCBhbW91bnQsIGZsb2F0IHBvd2VyKQp7CiAgICB2ZWMyIHBpeGVsID0gdmVjMigxLjApIC8gaVJlc29sdXRpb247CiAgICBmbG9hdCBjb3VudCA9IDEuMDsKICAgIHZlYzQgY29sb3JfMSA9IHRleHR1cmUyRCh0ZXgsIHV2ZCkgKiBjb3VudDsKICAgIGZsb2F0IHJyID0gMi4wICogYW1vdW50OwogICAgZm9yIChmbG9hdCBkaXJlY3Rpb25TdGVwID0gMC4xNTcwNzk2MzcwNTA2Mjg2NjIxMDkzNzUsIGQgPSAwLjA7IGQgPCA2LjI4MzE4NTQ4MjAyNTE0NjQ4NDM3NTsgZCArPSBkaXJlY3Rpb25TdGVwKQogICAgewogICAgICAgIGZsb2F0IGMgPSBjb3MoZCk7CiAgICAgICAgZmxvYXQgcyA9IHNpbihkKTsKICAgICAgICBmbG9hdCBkaXN0ID0gMC4xMDAwMDAwMDE0OTAxMTYxMTkzODQ3NjU2MjUgLyBtYXgoYWJzKGMpLCBhYnMocykpOwogICAgICAgIHZlYzIgb2ZmID0gdmVjMihjLCBzKTsKICAgICAgICBmb3IgKGZsb2F0IGRpc3QyID0gZGlzdCAqIDIuMCwgaSA9IGRpc3QgKiAxLjU7IGkgPD0gcnI7IGkgKz0gZGlzdDIpCiAgICAgICAgewogICAgICAgICAgICBmbG9hdCB3ZWlnaHQgPSBpIC8gcnI7CiAgICAgICAgICAgIGNvdW50ICs9IHdlaWdodDsKICAgICAgICAgICAgY29sb3JfMSArPSAoKHRleHR1cmUyRCh0ZXgsIHV2ZCArICgob2ZmICogcGl4ZWwpICogaSkpICogd2VpZ2h0KSAqIHBvd2VyKTsKICAgICAgICB9CiAgICB9CiAgICByZXR1cm4gY29sb3JfMSAvIHZlYzQoY291bnQpOwp9Cgp2b2lkIG1haW4oKQp7CiAgICBmbG9hdCBibHVyQW0gPSBibHVyQW1vdW50OwogICAgdmVjNCBvcmcgPSB0ZXh0dXJlMkQodGV4LCB0ZXhDb29yZCk7CiAgICBmbG9hdCBnbG93QWxwaGEyID0gMS4wOwogICAgaWYgKGJsdXJBbSA8IDAuMjAwMDAwMDAyOTgwMjMyMjM4NzY5NTMxMjUpCiAgICB7CiAgICAgICAgYmx1ckFtID0gMC4yMDAwMDAwMDI5ODAyMzIyMzg3Njk1MzEyNTsKICAgICAgICBnbG93QWxwaGEyID0gYmx1ckFtb3VudCAvIDAuMjAwMDAwMDAyOTgwMjMyMjM4NzY5NTMxMjU7CiAgICB9CiAgICB2ZWMyIHBhcmFtID0gdGV4Q29vcmQ7CiAgICBmbG9hdCBwYXJhbV8xID0gYmx1ckFtOwogICAgZmxvYXQgcGFyYW1fMiA9IDEuNTsKICAgIHZlYzQgYkNvbCA9IGJsdXIocGFyYW0sIHBhcmFtXzEsIHBhcmFtXzIpOwogICAgdmVjNCBnbG93ID0gdmVjNCgwLjApOwogICAgdmVjNCBmaW5Db2wgPSB2ZWM0KDAuMCk7CiAgICBmbG9hdCBvcmdBbHBoYSA9IG9yZy53OwogICAgaWYgKGlubmVyKQogICAgewogICAgICAgIGdsb3cgPSB2ZWM0KHZlYzMoMS4wKSAtIGJDb2wueHl6LCAxLjApOwogICAgICAgIGdsb3cgKj0gb3JnLnc7CiAgICAgICAgZ2xvdy53ICo9IGdsb3cueDsKICAgIH0KICAgIGVsc2UKICAgIHsKICAgICAgICBpZiAoIWtub2Nrb3V0KQogICAgICAgIHsKICAgICAgICAgICAgZ2xvdyA9IChiQ29sICogZ2xvd2NvbG9yKSAqIGdsb3dhbHBoYTsKICAgICAgICAgICAgZmluQ29sID0gZ2xvdyArIChvcmcgKiBjb2xvcik7CiAgICAgICAgfQogICAgfQogICAgaWYgKGtub2Nrb3V0KQogICAgewogICAgICAgIGZpbkNvbCA9IHZlYzQodmVjMygxLjApIC0gYkNvbC54eXosIDEuMCk7CiAgICAgICAgZmluQ29sICo9ICgxLjAgLSBvcmdBbHBoYSk7CiAgICAgICAgZmluQ29sICo9IGJDb2wudzsKICAgICAgICBmaW5Db2wgKj0gKGdsb3djb2xvciAqIGdsb3dhbHBoYSk7CiAgICAgICAgZmluQ29sICs9IChvcmcgKiBjb2xvcik7CiAgICB9CiAgICBlbHNlCiAgICB7CiAgICAgICAgaWYgKGlubmVyKQogICAgICAgIHsKICAgICAgICAgICAgZmluQ29sID0gb3JnICogY29sb3I7CiAgICAgICAgICAgIGZpbkNvbCAqPSBjb2xvci53OwogICAgICAgICAgICBmaW5Db2wgKz0gKChnbG93ICogZ2xvd2NvbG9yKSAqIGdsb3dBbHBoYTIpOwogICAgICAgIH0KICAgIH0KICAgIGdsX0ZyYWdEYXRhWzBdID0gZmluQ29sOwp9Cgo";
kha_Shaders.genericPostprocessPass2_fragData0 = "s1555:I3ZlcnNpb24gMTAwCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gaGlnaHAgaW50OwoKdW5pZm9ybSBoaWdocCB2ZWMyIGlSZXNvbHV0aW9uOwp1bmlmb3JtIGJvb2wgdV9mbGlwWTsKdW5pZm9ybSBoaWdocCBzYW1wbGVyMkQgdGV4Owp1bmlmb3JtIGhpZ2hwIGZsb2F0IHVfY2hyb21hYmJyX2Ftb3VudDsKdW5pZm9ybSBoaWdocCB2ZWMyIHVfY2hyb21hYmJyX2NlbnRlcjsKdW5pZm9ybSBoaWdocCBmbG9hdCBpVGltZTsKCnZhcnlpbmcgaGlnaHAgdmVjMiB0ZXhDb29yZDsKdmFyeWluZyBoaWdocCB2ZWM0IGNvbG9yOwoKaGlnaHAgdmVjNCBjcm9tQWJicihoaWdocCB2ZWMyIHV2LCBoaWdocCBzYW1wbGVyMkQgdGV4XzEsIGhpZ2hwIGZsb2F0IGFtb3VudCwgaGlnaHAgdmVjMiBjZW50ZXJwKQp7CiAgICBoaWdocCB2ZWM0IGNvbG9yXzEgPSB0ZXh0dXJlMkQodGV4XzEsIHV2KTsKICAgIGhpZ2hwIHZlYzIgZGlyZWN0aW9uID0gbm9ybWFsaXplKHV2IC0gY2VudGVycCk7CiAgICBkaXJlY3Rpb24gKj0gZGlzdGFuY2UodXYsIGNlbnRlcnApOwogICAgZGlyZWN0aW9uICo9ICh2ZWMyKDEuMCkgLyBpUmVzb2x1dGlvbik7CiAgICBkaXJlY3Rpb24gKj0gYW1vdW50OwogICAgY29sb3JfMS54ID0gdGV4dHVyZTJEKHRleF8xLCB1diArIGRpcmVjdGlvbikueDsKICAgIGNvbG9yXzEueiA9IHRleHR1cmUyRCh0ZXhfMSwgdXYgLSBkaXJlY3Rpb24pLno7CiAgICByZXR1cm4gY29sb3JfMTsKfQoKdm9pZCBtYWluKCkKewogICAgaGlnaHAgdmVjMiBmdXYgPSB0ZXhDb29yZDsKICAgIGlmICh1X2ZsaXBZKQogICAgewogICAgICAgIGZ1di55ID0gMS4wIC0gZnV2Lnk7CiAgICB9CiAgICBoaWdocCB2ZWMyIHBhcmFtID0gZnV2OwogICAgaGlnaHAgZmxvYXQgcGFyYW1fMSA9IHVfY2hyb21hYmJyX2Ftb3VudDsKICAgIGhpZ2hwIHZlYzIgcGFyYW1fMiA9IHVfY2hyb21hYmJyX2NlbnRlcjsKICAgIGhpZ2hwIHZlYzQgdGV4Y29sb3IgPSBjcm9tQWJicihwYXJhbSwgdGV4LCBwYXJhbV8xLCBwYXJhbV8yKTsKICAgIGhpZ2hwIHZlYzMgXzEwMyA9IHRleGNvbG9yLnh5eiAqIGNvbG9yLnc7CiAgICB0ZXhjb2xvciA9IHZlYzQoXzEwMy54LCBfMTAzLnksIF8xMDMueiwgdGV4Y29sb3Iudyk7CiAgICBnbF9GcmFnRGF0YVswXSA9IHRleGNvbG9yOwp9Cgo";
kha_Shaders.genericPostprocessPass2_fragData1 = "s1566:I3ZlcnNpb24gMzAwIGVzCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gaGlnaHAgaW50OwoKdW5pZm9ybSBoaWdocCB2ZWMyIGlSZXNvbHV0aW9uOwp1bmlmb3JtIGJvb2wgdV9mbGlwWTsKdW5pZm9ybSBoaWdocCBzYW1wbGVyMkQgdGV4Owp1bmlmb3JtIGhpZ2hwIGZsb2F0IHVfY2hyb21hYmJyX2Ftb3VudDsKdW5pZm9ybSBoaWdocCB2ZWMyIHVfY2hyb21hYmJyX2NlbnRlcjsKdW5pZm9ybSBoaWdocCBmbG9hdCBpVGltZTsKCmluIGhpZ2hwIHZlYzIgdGV4Q29vcmQ7CmluIGhpZ2hwIHZlYzQgY29sb3I7Cm91dCBoaWdocCB2ZWM0IGZyYWdDb2xvcjsKCmhpZ2hwIHZlYzQgY3JvbUFiYnIoaGlnaHAgdmVjMiB1diwgaGlnaHAgc2FtcGxlcjJEIHRleF8xLCBoaWdocCBmbG9hdCBhbW91bnQsIGhpZ2hwIHZlYzIgY2VudGVycCkKewogICAgaGlnaHAgdmVjNCBjb2xvcl8xID0gdGV4dHVyZSh0ZXhfMSwgdXYpOwogICAgaGlnaHAgdmVjMiBkaXJlY3Rpb24gPSBub3JtYWxpemUodXYgLSBjZW50ZXJwKTsKICAgIGRpcmVjdGlvbiAqPSBkaXN0YW5jZSh1diwgY2VudGVycCk7CiAgICBkaXJlY3Rpb24gKj0gKHZlYzIoMS4wKSAvIGlSZXNvbHV0aW9uKTsKICAgIGRpcmVjdGlvbiAqPSBhbW91bnQ7CiAgICBjb2xvcl8xLnggPSB0ZXh0dXJlKHRleF8xLCB1diArIGRpcmVjdGlvbikueDsKICAgIGNvbG9yXzEueiA9IHRleHR1cmUodGV4XzEsIHV2IC0gZGlyZWN0aW9uKS56OwogICAgcmV0dXJuIGNvbG9yXzE7Cn0KCnZvaWQgbWFpbigpCnsKICAgIGhpZ2hwIHZlYzIgZnV2ID0gdGV4Q29vcmQ7CiAgICBpZiAodV9mbGlwWSkKICAgIHsKICAgICAgICBmdXYueSA9IDEuMCAtIGZ1di55OwogICAgfQogICAgaGlnaHAgdmVjMiBwYXJhbSA9IGZ1djsKICAgIGhpZ2hwIGZsb2F0IHBhcmFtXzEgPSB1X2Nocm9tYWJicl9hbW91bnQ7CiAgICBoaWdocCB2ZWMyIHBhcmFtXzIgPSB1X2Nocm9tYWJicl9jZW50ZXI7CiAgICBoaWdocCB2ZWM0IHRleGNvbG9yID0gY3JvbUFiYnIocGFyYW0sIHRleCwgcGFyYW1fMSwgcGFyYW1fMik7CiAgICBoaWdocCB2ZWMzIF8xMDMgPSB0ZXhjb2xvci54eXogKiBjb2xvci53OwogICAgdGV4Y29sb3IgPSB2ZWM0KF8xMDMueCwgXzEwMy55LCBfMTAzLnosIHRleGNvbG9yLncpOwogICAgZnJhZ0NvbG9yID0gdGV4Y29sb3I7Cn0KCg";
kha_Shaders.genericPostprocessPass2_fragData2 = "s1419:I3ZlcnNpb24gMTAwCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gbWVkaXVtcCBpbnQ7Cgp1bmlmb3JtIHZlYzIgaVJlc29sdXRpb247CnVuaWZvcm0gYm9vbCB1X2ZsaXBZOwp1bmlmb3JtIG1lZGl1bXAgc2FtcGxlcjJEIHRleDsKdW5pZm9ybSBmbG9hdCB1X2Nocm9tYWJicl9hbW91bnQ7CnVuaWZvcm0gdmVjMiB1X2Nocm9tYWJicl9jZW50ZXI7CnVuaWZvcm0gZmxvYXQgaVRpbWU7Cgp2YXJ5aW5nIHZlYzIgdGV4Q29vcmQ7CnZhcnlpbmcgdmVjNCBjb2xvcjsKCnZlYzQgY3JvbUFiYnIodmVjMiB1diwgbWVkaXVtcCBzYW1wbGVyMkQgdGV4XzEsIGZsb2F0IGFtb3VudCwgdmVjMiBjZW50ZXJwKQp7CiAgICB2ZWM0IGNvbG9yXzEgPSB0ZXh0dXJlMkQodGV4XzEsIHV2KTsKICAgIHZlYzIgZGlyZWN0aW9uID0gbm9ybWFsaXplKHV2IC0gY2VudGVycCk7CiAgICBkaXJlY3Rpb24gKj0gZGlzdGFuY2UodXYsIGNlbnRlcnApOwogICAgZGlyZWN0aW9uICo9ICh2ZWMyKDEuMCkgLyBpUmVzb2x1dGlvbik7CiAgICBkaXJlY3Rpb24gKj0gYW1vdW50OwogICAgY29sb3JfMS54ID0gdGV4dHVyZTJEKHRleF8xLCB1diArIGRpcmVjdGlvbikueDsKICAgIGNvbG9yXzEueiA9IHRleHR1cmUyRCh0ZXhfMSwgdXYgLSBkaXJlY3Rpb24pLno7CiAgICByZXR1cm4gY29sb3JfMTsKfQoKdm9pZCBtYWluKCkKewogICAgdmVjMiBmdXYgPSB0ZXhDb29yZDsKICAgIGlmICh1X2ZsaXBZKQogICAgewogICAgICAgIGZ1di55ID0gMS4wIC0gZnV2Lnk7CiAgICB9CiAgICB2ZWMyIHBhcmFtID0gZnV2OwogICAgZmxvYXQgcGFyYW1fMSA9IHVfY2hyb21hYmJyX2Ftb3VudDsKICAgIHZlYzIgcGFyYW1fMiA9IHVfY2hyb21hYmJyX2NlbnRlcjsKICAgIHZlYzQgdGV4Y29sb3IgPSBjcm9tQWJicihwYXJhbSwgdGV4LCBwYXJhbV8xLCBwYXJhbV8yKTsKICAgIHZlYzMgXzEwMyA9IHRleGNvbG9yLnh5eiAqIGNvbG9yLnc7CiAgICB0ZXhjb2xvciA9IHZlYzQoXzEwMy54LCBfMTAzLnksIF8xMDMueiwgdGV4Y29sb3Iudyk7CiAgICBnbF9GcmFnRGF0YVswXSA9IHRleGNvbG9yOwp9Cgo";
kha_Shaders.genericPostprocess_fragData0 = "s7194:I3ZlcnNpb24gMTAwCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gaGlnaHAgaW50OwoKdW5pZm9ybSBoaWdocCBmbG9hdCB1X3NoYXJwZW47CnVuaWZvcm0gaGlnaHAgc2FtcGxlcjJEIHRleDsKdW5pZm9ybSBoaWdocCB2ZWMyIGlSZXNvbHV0aW9uOwp1bmlmb3JtIGhpZ2hwIGZsb2F0IHVfc2hhcnBlbl9zaXplOwp1bmlmb3JtIGhpZ2hwIGZsb2F0IHVfZ2FtbWE7CnVuaWZvcm0gaGlnaHAgZmxvYXQgdV9icmlnaHRuZXNzOwp1bmlmb3JtIGhpZ2hwIGZsb2F0IHVfY29udHJhc3Q7CnVuaWZvcm0gaGlnaHAgZmxvYXQgdV9zYXR1cmF0aW9uOwp1bmlmb3JtIGhpZ2hwIHZlYzMgdV9yZ2JfYWRqdXN0Owp1bmlmb3JtIGhpZ2hwIGZsb2F0IHVfdmlnbmV0dGVfc3RyZW5ndGg7CnVuaWZvcm0gaGlnaHAgZmxvYXQgdV92aWduZXR0ZV9icmlnaHRuZXNzOwp1bmlmb3JtIGhpZ2hwIGZsb2F0IHVfdmlnbmV0dGVfZXh0ZW5kOwp1bmlmb3JtIGhpZ2hwIGZsb2F0IHVfZmlsbWdyYWluOwp1bmlmb3JtIGhpZ2hwIGZsb2F0IGlUaW1lOwp1bmlmb3JtIGhpZ2hwIGZsb2F0IHVfZmlsbWdyYWluX3NwZWVkOwoKdmFyeWluZyBoaWdocCB2ZWMyIHRleENvb3JkOwp2YXJ5aW5nIGhpZ2hwIHZlYzQgY29sb3I7CgpoaWdocCB2ZWM0IHNoYXJwZW5GaWx0ZXIoaGlnaHAgc2FtcGxlcjJEIHREaWZmdXNlLCBoaWdocCB2ZWMyIHZVdiwgaGlnaHAgdmVjMiByZXNvbHV0aW9uLCBoaWdocCBmbG9hdCBpbnRlbnNpdHksIGhpZ2hwIGZsb2F0IHNpemUpCnsKICAgIGhpZ2hwIHZlYzIgcmVzID0gKHZlYzIoMS4wKSAvIHJlc29sdXRpb24pICogc2l6ZTsKICAgIGhpZ2hwIHZlYzQgY3VyciA9IHRleHR1cmUyRCh0RGlmZnVzZSwgdlV2KTsKICAgIGhpZ2hwIHZlYzQgczEgPSB0ZXh0dXJlMkQodERpZmZ1c2UsIHZVdiArIHZlYzIocmVzLngsIDAuMCkpOwogICAgaGlnaHAgdmVjNCBzMiA9IHRleHR1cmUyRCh0RGlmZnVzZSwgdlV2ICsgdmVjMigtcmVzLngsIDAuMCkpOwogICAgaGlnaHAgdmVjNCBzMyA9IHRleHR1cmUyRCh0RGlmZnVzZSwgdlV2ICsgdmVjMigwLjAsIHJlcy55KSk7CiAgICBoaWdocCB2ZWM0IHM0ID0gdGV4dHVyZTJEKHREaWZmdXNlLCB2VXYgKyB2ZWMyKDAuMCwgLXJlcy55KSk7CiAgICBoaWdocCB2ZWM0IHM1ID0gdGV4dHVyZTJEKHREaWZmdXNlLCB2VXYgKyB2ZWMyKHJlcy54LCByZXMueSkpOwogICAgaGlnaHAgdmVjNCBzNiA9IHRleHR1cmUyRCh0RGlmZnVzZSwgdlV2ICsgdmVjMigtcmVzLngsIHJlcy55KSk7CiAgICBoaWdocCB2ZWM0IHM3ID0gdGV4dHVyZTJEKHREaWZmdXNlLCB2VXYgKyB2ZWMyKC1yZXMueCwgLXJlcy55KSk7CiAgICBoaWdocCB2ZWM0IHM4ID0gdGV4dHVyZTJEKHREaWZmdXNlLCB2VXYgKyB2ZWMyKHJlcy54LCAtcmVzLnkpKTsKICAgIGhpZ2hwIHZlYzQgYmx1cnJlZCA9ICgoKCgoczUgKyBzNikgKyBzNykgKyBzOCkgKiAxLjApICsgKCgoKHMxICsgczIpICsgczMpICsgczQpICogMi4wKSkgKyAoY3VyciAqIDQuMCk7CiAgICBibHVycmVkIC89IHZlYzQoMTYuMCk7CiAgICBoaWdocCB2ZWM0IG91dENvbCA9IHZlYzQoaW50ZW5zaXR5LCAwLjAsIDAuMCwgMS4wKTsKICAgIG91dENvbCA9IChjdXJyICogKDEuMCArIGludGVuc2l0eSkpIC0gKGJsdXJyZWQgKiBpbnRlbnNpdHkpOwogICAgcmV0dXJuIG91dENvbDsKfQoKaGlnaHAgdmVjNCBnYW1tYShoaWdocCB2ZWM0IGluQ29sb3IsIGhpZ2hwIGZsb2F0IGcpCnsKICAgIHJldHVybiB2ZWM0KHBvdyhhYnMoaW5Db2xvci54eXopLCB2ZWMzKDEuMCAvIGcpKSwgaW5Db2xvci53KTsKfQoKaGlnaHAgdmVjNCBicmlnaHRuZXNzQ29udHJhc3QoaGlnaHAgdmVjNCBpbkNvbG9yLCBoaWdocCBmbG9hdCBicmlnaHRuZXNzLCBoaWdocCBmbG9hdCBjb250cmFzdCkKewogICAgcmV0dXJuIHZlYzQoKCgoaW5Db2xvci54eXogLSB2ZWMzKDAuNSkpICogY29udHJhc3QpICsgdmVjMygwLjUpKSArIHZlYzMoYnJpZ2h0bmVzcyksIGluQ29sb3Iudyk7Cn0KCmhpZ2hwIG1hdDQgc2F0dXJhdGlvbk1hdHJpeChoaWdocCBmbG9hdCBzYXR1cmF0aW9uKQp7CiAgICBoaWdocCB2ZWMzIGx1bWluYW5jZSA9IHZlYzMoMC4zMDg2MDAwMDg0ODc3MDE0MTYwMTU2MjUsIDAuNjA5Mzk5OTc0MzQ2MTYwODg4NjcxODc1LCAwLjA4MjAwMDAwMjI2NDk3NjUwMTQ2NDg0Mzc1KTsKICAgIGhpZ2hwIGZsb2F0IG9uZU1pbnVzU2F0ID0gMS4wIC0gc2F0dXJhdGlvbjsKICAgIGhpZ2hwIHZlYzMgcmVkID0gdmVjMyhsdW1pbmFuY2UueCAqIG9uZU1pbnVzU2F0KTsKICAgIHJlZC54ICs9IHNhdHVyYXRpb247CiAgICBoaWdocCB2ZWMzIGdyZWVuID0gdmVjMyhsdW1pbmFuY2UueSAqIG9uZU1pbnVzU2F0KTsKICAgIGdyZWVuLnkgKz0gc2F0dXJhdGlvbjsKICAgIGhpZ2hwIHZlYzMgYmx1ZSA9IHZlYzMobHVtaW5hbmNlLnogKiBvbmVNaW51c1NhdCk7CiAgICBibHVlLnogKz0gc2F0dXJhdGlvbjsKICAgIHJldHVybiBtYXQ0KHZlYzQocmVkLCAwLjApLCB2ZWM0KGdyZWVuLCAwLjApLCB2ZWM0KGJsdWUsIDAuMCksIHZlYzQoMC4wLCAwLjAsIDAuMCwgMS4wKSk7Cn0KCmhpZ2hwIGZsb2F0IHZpZ25ldHRlKGlub3V0IGhpZ2hwIHZlYzIgdXYsIGhpZ2hwIGZsb2F0IHN0cmVuZ3RoLCBoaWdocCBmbG9hdCBleHRlbmQpCnsKICAgIHV2ICo9ICh2ZWMyKDEuMCkgLSB1di55eCk7CiAgICBoaWdocCBmbG9hdCB2aWcgPSAodXYueCAqIHV2LnkpICogc3RyZW5ndGg7CiAgICB2aWcgPSBwb3codmlnLCBleHRlbmQpOwogICAgcmV0dXJuIHZpZzsKfQoKaGlnaHAgZmxvYXQgZ2F1c3NpYW4oaGlnaHAgZmxvYXQgeiwgaGlnaHAgZmxvYXQgdSwgaGlnaHAgZmxvYXQgbykKewogICAgcmV0dXJuICgxLjAgLyAobyAqIDIuNTA2NTkxMzIwMDM3ODQxNzk2ODc1KSkgKiBleHAoLSgoKHogLSB1KSAqICh6IC0gdSkpIC8gKDIuMCAqIChvICogbykpKSk7Cn0KCmhpZ2hwIHZlYzMgZmlsbUdyYWluKGhpZ2hwIHZlYzIgdlV2LCBoaWdocCBmbG9hdCBpbnRlbnNpdHksIGhpZ2hwIGZsb2F0IG5vaXNlT2Zmc2V0KQp7CiAgICBoaWdocCBmbG9hdCBzZWVkID0gZG90KHZVdiwgdmVjMigxMi45ODk4MDA0NTMxODYwMzUxNTYyNSwgNzguMjMzMDAxNzA4OTg0Mzc1KSk7CiAgICBoaWdocCBmbG9hdCBfbm9pc2UgPSBmcmFjdCgoc2luKHNlZWQpICogNDM3NTguNTQ2ODc1KSArIG5vaXNlT2Zmc2V0KTsKICAgIGhpZ2hwIGZsb2F0IHBhcmFtID0gX25vaXNlOwogICAgaGlnaHAgZmxvYXQgcGFyYW1fMSA9IDAuNTsKICAgIGhpZ2hwIGZsb2F0IHBhcmFtXzIgPSAwLjI1OwogICAgX25vaXNlID0gZ2F1c3NpYW4ocGFyYW0sIHBhcmFtXzEsIHBhcmFtXzIpOwogICAgcmV0dXJuIHZlYzMoX25vaXNlKSAqIGludGVuc2l0eTsKfQoKdm9pZCBtYWluKCkKewogICAgaGlnaHAgdmVjNCBzb3VyY2VDb2wgPSB2ZWM0KDAuMCk7CiAgICBpZiAodV9zaGFycGVuID4gMC4wKQogICAgewogICAgICAgIGhpZ2hwIHZlYzIgcGFyYW0gPSB0ZXhDb29yZDsKICAgICAgICBoaWdocCB2ZWMyIHBhcmFtXzEgPSBpUmVzb2x1dGlvbjsKICAgICAgICBoaWdocCBmbG9hdCBwYXJhbV8yID0gdV9zaGFycGVuOwogICAgICAgIGhpZ2hwIGZsb2F0IHBhcmFtXzMgPSB1X3NoYXJwZW5fc2l6ZTsKICAgICAgICBzb3VyY2VDb2wgPSBzaGFycGVuRmlsdGVyKHRleCwgcGFyYW0sIHBhcmFtXzEsIHBhcmFtXzIsIHBhcmFtXzMpOwogICAgfQogICAgZWxzZQogICAgewogICAgICAgIHNvdXJjZUNvbCA9IHRleHR1cmUyRCh0ZXgsIHRleENvb3JkKSAqIGNvbG9yOwogICAgfQogICAgaGlnaHAgdmVjNCB0ZXhjb2xvciA9IHNvdXJjZUNvbDsKICAgIGlmICh1X2dhbW1hICE9IDEuMCkKICAgIHsKICAgICAgICBoaWdocCB2ZWM0IHBhcmFtXzQgPSB0ZXhjb2xvcjsKICAgICAgICBoaWdocCBmbG9hdCBwYXJhbV81ID0gdV9nYW1tYTsKICAgICAgICB0ZXhjb2xvciA9IGdhbW1hKHBhcmFtXzQsIHBhcmFtXzUpOwogICAgfQogICAgaWYgKCh1X2JyaWdodG5lc3MgIT0gMC4wKSB8fCAodV9jb250cmFzdCAhPSAxLjApKQogICAgewogICAgICAgIGhpZ2hwIHZlYzQgcGFyYW1fNiA9IHRleGNvbG9yOwogICAgICAgIGhpZ2hwIGZsb2F0IHBhcmFtXzcgPSBjbGFtcCh1X2JyaWdodG5lc3MsIC0xLjAsIDEuMCk7CiAgICAgICAgaGlnaHAgZmxvYXQgcGFyYW1fOCA9IHVfY29udHJhc3Q7CiAgICAgICAgdGV4Y29sb3IgPSBicmlnaHRuZXNzQ29udHJhc3QocGFyYW1fNiwgcGFyYW1fNywgcGFyYW1fOCk7CiAgICB9CiAgICBpZiAodV9zYXR1cmF0aW9uICE9IDEuMCkKICAgIHsKICAgICAgICBoaWdocCBmbG9hdCBwYXJhbV85ID0gdV9zYXR1cmF0aW9uOwogICAgICAgIHRleGNvbG9yID0gc2F0dXJhdGlvbk1hdHJpeChwYXJhbV85KSAqIHRleGNvbG9yOwogICAgfQogICAgaGlnaHAgdmVjMyBfNDM0ID0gdGV4Y29sb3IueHl6ICogdV9yZ2JfYWRqdXN0OwogICAgdGV4Y29sb3IgPSB2ZWM0KF80MzQueCwgXzQzNC55LCBfNDM0LnosIHRleGNvbG9yLncpOwogICAgaWYgKHVfdmlnbmV0dGVfc3RyZW5ndGggPiAwLjApCiAgICB7CiAgICAgICAgaGlnaHAgdmVjMiBwYXJhbV8xMCA9IHRleENvb3JkOwogICAgICAgIGhpZ2hwIGZsb2F0IHBhcmFtXzExID0gdV92aWduZXR0ZV9icmlnaHRuZXNzOwogICAgICAgIGhpZ2hwIGZsb2F0IHBhcmFtXzEyID0gdV92aWduZXR0ZV9leHRlbmQ7CiAgICAgICAgaGlnaHAgZmxvYXQgXzQ1MiA9IHZpZ25ldHRlKHBhcmFtXzEwLCBwYXJhbV8xMSwgcGFyYW1fMTIpOwogICAgICAgIHRleGNvbG9yID0gbWl4KHRleGNvbG9yLCBjbGFtcCh0ZXhjb2xvciAtIHZlYzQoMS4wIC0gY2xhbXAoXzQ1MiwgMC4wLCAxLjApKSwgdmVjNCgwLjApLCB2ZWM0KDEuMCkpLCB2ZWM0KHVfdmlnbmV0dGVfc3RyZW5ndGgpKTsKICAgIH0KICAgIGlmICh1X2ZpbG1ncmFpbiA%IDAuMCkKICAgIHsKICAgICAgICBoaWdocCB2ZWMyIHBhcmFtXzEzID0gdmVjMigxLjApIC8gdGV4Q29vcmQ7CiAgICAgICAgaGlnaHAgZmxvYXQgcGFyYW1fMTQgPSB1X2ZpbG1ncmFpbjsKICAgICAgICBoaWdocCBmbG9hdCBwYXJhbV8xNSA9IG1vZCgoaVRpbWUgKiA1LjApICogdV9maWxtZ3JhaW5fc3BlZWQsIDEuMCk7CiAgICAgICAgaGlnaHAgdmVjMyBfNDg4ID0gdGV4Y29sb3IueHl6ICogKHZlYzMoMS4wKSAtIGZpbG1HcmFpbihwYXJhbV8xMywgcGFyYW1fMTQsIHBhcmFtXzE1KSk7CiAgICAgICAgdGV4Y29sb3IgPSB2ZWM0KF80ODgueCwgXzQ4OC55LCBfNDg4LnosIHRleGNvbG9yLncpOwogICAgfQogICAgaGlnaHAgdmVjMyBfNDk2ID0gdGV4Y29sb3IueHl6ICogY29sb3IudzsKICAgIHRleGNvbG9yID0gdmVjNChfNDk2LngsIF80OTYueSwgXzQ5Ni56LCB0ZXhjb2xvci53KTsKICAgIGdsX0ZyYWdEYXRhWzBdID0gdGV4Y29sb3I7Cn0KCg";
kha_Shaders.genericPostprocess_fragData1 = "s7186:I3ZlcnNpb24gMzAwIGVzCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gaGlnaHAgaW50OwoKdW5pZm9ybSBoaWdocCBmbG9hdCB1X3NoYXJwZW47CnVuaWZvcm0gaGlnaHAgc2FtcGxlcjJEIHRleDsKdW5pZm9ybSBoaWdocCB2ZWMyIGlSZXNvbHV0aW9uOwp1bmlmb3JtIGhpZ2hwIGZsb2F0IHVfc2hhcnBlbl9zaXplOwp1bmlmb3JtIGhpZ2hwIGZsb2F0IHVfZ2FtbWE7CnVuaWZvcm0gaGlnaHAgZmxvYXQgdV9icmlnaHRuZXNzOwp1bmlmb3JtIGhpZ2hwIGZsb2F0IHVfY29udHJhc3Q7CnVuaWZvcm0gaGlnaHAgZmxvYXQgdV9zYXR1cmF0aW9uOwp1bmlmb3JtIGhpZ2hwIHZlYzMgdV9yZ2JfYWRqdXN0Owp1bmlmb3JtIGhpZ2hwIGZsb2F0IHVfdmlnbmV0dGVfc3RyZW5ndGg7CnVuaWZvcm0gaGlnaHAgZmxvYXQgdV92aWduZXR0ZV9icmlnaHRuZXNzOwp1bmlmb3JtIGhpZ2hwIGZsb2F0IHVfdmlnbmV0dGVfZXh0ZW5kOwp1bmlmb3JtIGhpZ2hwIGZsb2F0IHVfZmlsbWdyYWluOwp1bmlmb3JtIGhpZ2hwIGZsb2F0IGlUaW1lOwp1bmlmb3JtIGhpZ2hwIGZsb2F0IHVfZmlsbWdyYWluX3NwZWVkOwoKaW4gaGlnaHAgdmVjMiB0ZXhDb29yZDsKaW4gaGlnaHAgdmVjNCBjb2xvcjsKb3V0IGhpZ2hwIHZlYzQgZnJhZ0NvbG9yOwoKaGlnaHAgdmVjNCBzaGFycGVuRmlsdGVyKGhpZ2hwIHNhbXBsZXIyRCB0RGlmZnVzZSwgaGlnaHAgdmVjMiB2VXYsIGhpZ2hwIHZlYzIgcmVzb2x1dGlvbiwgaGlnaHAgZmxvYXQgaW50ZW5zaXR5LCBoaWdocCBmbG9hdCBzaXplKQp7CiAgICBoaWdocCB2ZWMyIHJlcyA9ICh2ZWMyKDEuMCkgLyByZXNvbHV0aW9uKSAqIHNpemU7CiAgICBoaWdocCB2ZWM0IGN1cnIgPSB0ZXh0dXJlKHREaWZmdXNlLCB2VXYpOwogICAgaGlnaHAgdmVjNCBzMSA9IHRleHR1cmUodERpZmZ1c2UsIHZVdiArIHZlYzIocmVzLngsIDAuMCkpOwogICAgaGlnaHAgdmVjNCBzMiA9IHRleHR1cmUodERpZmZ1c2UsIHZVdiArIHZlYzIoLXJlcy54LCAwLjApKTsKICAgIGhpZ2hwIHZlYzQgczMgPSB0ZXh0dXJlKHREaWZmdXNlLCB2VXYgKyB2ZWMyKDAuMCwgcmVzLnkpKTsKICAgIGhpZ2hwIHZlYzQgczQgPSB0ZXh0dXJlKHREaWZmdXNlLCB2VXYgKyB2ZWMyKDAuMCwgLXJlcy55KSk7CiAgICBoaWdocCB2ZWM0IHM1ID0gdGV4dHVyZSh0RGlmZnVzZSwgdlV2ICsgdmVjMihyZXMueCwgcmVzLnkpKTsKICAgIGhpZ2hwIHZlYzQgczYgPSB0ZXh0dXJlKHREaWZmdXNlLCB2VXYgKyB2ZWMyKC1yZXMueCwgcmVzLnkpKTsKICAgIGhpZ2hwIHZlYzQgczcgPSB0ZXh0dXJlKHREaWZmdXNlLCB2VXYgKyB2ZWMyKC1yZXMueCwgLXJlcy55KSk7CiAgICBoaWdocCB2ZWM0IHM4ID0gdGV4dHVyZSh0RGlmZnVzZSwgdlV2ICsgdmVjMihyZXMueCwgLXJlcy55KSk7CiAgICBoaWdocCB2ZWM0IGJsdXJyZWQgPSAoKCgoKHM1ICsgczYpICsgczcpICsgczgpICogMS4wKSArICgoKChzMSArIHMyKSArIHMzKSArIHM0KSAqIDIuMCkpICsgKGN1cnIgKiA0LjApOwogICAgYmx1cnJlZCAvPSB2ZWM0KDE2LjApOwogICAgaGlnaHAgdmVjNCBvdXRDb2wgPSB2ZWM0KGludGVuc2l0eSwgMC4wLCAwLjAsIDEuMCk7CiAgICBvdXRDb2wgPSAoY3VyciAqICgxLjAgKyBpbnRlbnNpdHkpKSAtIChibHVycmVkICogaW50ZW5zaXR5KTsKICAgIHJldHVybiBvdXRDb2w7Cn0KCmhpZ2hwIHZlYzQgZ2FtbWEoaGlnaHAgdmVjNCBpbkNvbG9yLCBoaWdocCBmbG9hdCBnKQp7CiAgICByZXR1cm4gdmVjNChwb3coYWJzKGluQ29sb3IueHl6KSwgdmVjMygxLjAgLyBnKSksIGluQ29sb3Iudyk7Cn0KCmhpZ2hwIHZlYzQgYnJpZ2h0bmVzc0NvbnRyYXN0KGhpZ2hwIHZlYzQgaW5Db2xvciwgaGlnaHAgZmxvYXQgYnJpZ2h0bmVzcywgaGlnaHAgZmxvYXQgY29udHJhc3QpCnsKICAgIHJldHVybiB2ZWM0KCgoKGluQ29sb3IueHl6IC0gdmVjMygwLjUpKSAqIGNvbnRyYXN0KSArIHZlYzMoMC41KSkgKyB2ZWMzKGJyaWdodG5lc3MpLCBpbkNvbG9yLncpOwp9CgpoaWdocCBtYXQ0IHNhdHVyYXRpb25NYXRyaXgoaGlnaHAgZmxvYXQgc2F0dXJhdGlvbikKewogICAgaGlnaHAgdmVjMyBsdW1pbmFuY2UgPSB2ZWMzKDAuMzA4NjAwMDA4NDg3NzAxNDE2MDE1NjI1LCAwLjYwOTM5OTk3NDM0NjE2MDg4ODY3MTg3NSwgMC4wODIwMDAwMDIyNjQ5NzY1MDE0NjQ4NDM3NSk7CiAgICBoaWdocCBmbG9hdCBvbmVNaW51c1NhdCA9IDEuMCAtIHNhdHVyYXRpb247CiAgICBoaWdocCB2ZWMzIHJlZCA9IHZlYzMobHVtaW5hbmNlLnggKiBvbmVNaW51c1NhdCk7CiAgICByZWQueCArPSBzYXR1cmF0aW9uOwogICAgaGlnaHAgdmVjMyBncmVlbiA9IHZlYzMobHVtaW5hbmNlLnkgKiBvbmVNaW51c1NhdCk7CiAgICBncmVlbi55ICs9IHNhdHVyYXRpb247CiAgICBoaWdocCB2ZWMzIGJsdWUgPSB2ZWMzKGx1bWluYW5jZS56ICogb25lTWludXNTYXQpOwogICAgYmx1ZS56ICs9IHNhdHVyYXRpb247CiAgICByZXR1cm4gbWF0NCh2ZWM0KHJlZCwgMC4wKSwgdmVjNChncmVlbiwgMC4wKSwgdmVjNChibHVlLCAwLjApLCB2ZWM0KDAuMCwgMC4wLCAwLjAsIDEuMCkpOwp9CgpoaWdocCBmbG9hdCB2aWduZXR0ZShpbm91dCBoaWdocCB2ZWMyIHV2LCBoaWdocCBmbG9hdCBzdHJlbmd0aCwgaGlnaHAgZmxvYXQgZXh0ZW5kKQp7CiAgICB1diAqPSAodmVjMigxLjApIC0gdXYueXgpOwogICAgaGlnaHAgZmxvYXQgdmlnID0gKHV2LnggKiB1di55KSAqIHN0cmVuZ3RoOwogICAgdmlnID0gcG93KHZpZywgZXh0ZW5kKTsKICAgIHJldHVybiB2aWc7Cn0KCmhpZ2hwIGZsb2F0IGdhdXNzaWFuKGhpZ2hwIGZsb2F0IHosIGhpZ2hwIGZsb2F0IHUsIGhpZ2hwIGZsb2F0IG8pCnsKICAgIHJldHVybiAoMS4wIC8gKG8gKiAyLjUwNjU5MTMyMDAzNzg0MTc5Njg3NSkpICogZXhwKC0oKCh6IC0gdSkgKiAoeiAtIHUpKSAvICgyLjAgKiAobyAqIG8pKSkpOwp9CgpoaWdocCB2ZWMzIGZpbG1HcmFpbihoaWdocCB2ZWMyIHZVdiwgaGlnaHAgZmxvYXQgaW50ZW5zaXR5LCBoaWdocCBmbG9hdCBub2lzZU9mZnNldCkKewogICAgaGlnaHAgZmxvYXQgc2VlZCA9IGRvdCh2VXYsIHZlYzIoMTIuOTg5ODAwNDUzMTg2MDM1MTU2MjUsIDc4LjIzMzAwMTcwODk4NDM3NSkpOwogICAgaGlnaHAgZmxvYXQgX25vaXNlID0gZnJhY3QoKHNpbihzZWVkKSAqIDQzNzU4LjU0Njg3NSkgKyBub2lzZU9mZnNldCk7CiAgICBoaWdocCBmbG9hdCBwYXJhbSA9IF9ub2lzZTsKICAgIGhpZ2hwIGZsb2F0IHBhcmFtXzEgPSAwLjU7CiAgICBoaWdocCBmbG9hdCBwYXJhbV8yID0gMC4yNTsKICAgIF9ub2lzZSA9IGdhdXNzaWFuKHBhcmFtLCBwYXJhbV8xLCBwYXJhbV8yKTsKICAgIHJldHVybiB2ZWMzKF9ub2lzZSkgKiBpbnRlbnNpdHk7Cn0KCnZvaWQgbWFpbigpCnsKICAgIGhpZ2hwIHZlYzQgc291cmNlQ29sID0gdmVjNCgwLjApOwogICAgaWYgKHVfc2hhcnBlbiA%IDAuMCkKICAgIHsKICAgICAgICBoaWdocCB2ZWMyIHBhcmFtID0gdGV4Q29vcmQ7CiAgICAgICAgaGlnaHAgdmVjMiBwYXJhbV8xID0gaVJlc29sdXRpb247CiAgICAgICAgaGlnaHAgZmxvYXQgcGFyYW1fMiA9IHVfc2hhcnBlbjsKICAgICAgICBoaWdocCBmbG9hdCBwYXJhbV8zID0gdV9zaGFycGVuX3NpemU7CiAgICAgICAgc291cmNlQ29sID0gc2hhcnBlbkZpbHRlcih0ZXgsIHBhcmFtLCBwYXJhbV8xLCBwYXJhbV8yLCBwYXJhbV8zKTsKICAgIH0KICAgIGVsc2UKICAgIHsKICAgICAgICBzb3VyY2VDb2wgPSB0ZXh0dXJlKHRleCwgdGV4Q29vcmQpICogY29sb3I7CiAgICB9CiAgICBoaWdocCB2ZWM0IHRleGNvbG9yID0gc291cmNlQ29sOwogICAgaWYgKHVfZ2FtbWEgIT0gMS4wKQogICAgewogICAgICAgIGhpZ2hwIHZlYzQgcGFyYW1fNCA9IHRleGNvbG9yOwogICAgICAgIGhpZ2hwIGZsb2F0IHBhcmFtXzUgPSB1X2dhbW1hOwogICAgICAgIHRleGNvbG9yID0gZ2FtbWEocGFyYW1fNCwgcGFyYW1fNSk7CiAgICB9CiAgICBpZiAoKHVfYnJpZ2h0bmVzcyAhPSAwLjApIHx8ICh1X2NvbnRyYXN0ICE9IDEuMCkpCiAgICB7CiAgICAgICAgaGlnaHAgdmVjNCBwYXJhbV82ID0gdGV4Y29sb3I7CiAgICAgICAgaGlnaHAgZmxvYXQgcGFyYW1fNyA9IGNsYW1wKHVfYnJpZ2h0bmVzcywgLTEuMCwgMS4wKTsKICAgICAgICBoaWdocCBmbG9hdCBwYXJhbV84ID0gdV9jb250cmFzdDsKICAgICAgICB0ZXhjb2xvciA9IGJyaWdodG5lc3NDb250cmFzdChwYXJhbV82LCBwYXJhbV83LCBwYXJhbV84KTsKICAgIH0KICAgIGlmICh1X3NhdHVyYXRpb24gIT0gMS4wKQogICAgewogICAgICAgIGhpZ2hwIGZsb2F0IHBhcmFtXzkgPSB1X3NhdHVyYXRpb247CiAgICAgICAgdGV4Y29sb3IgPSBzYXR1cmF0aW9uTWF0cml4KHBhcmFtXzkpICogdGV4Y29sb3I7CiAgICB9CiAgICBoaWdocCB2ZWMzIF80MzQgPSB0ZXhjb2xvci54eXogKiB1X3JnYl9hZGp1c3Q7CiAgICB0ZXhjb2xvciA9IHZlYzQoXzQzNC54LCBfNDM0LnksIF80MzQueiwgdGV4Y29sb3Iudyk7CiAgICBpZiAodV92aWduZXR0ZV9zdHJlbmd0aCA%IDAuMCkKICAgIHsKICAgICAgICBoaWdocCB2ZWMyIHBhcmFtXzEwID0gdGV4Q29vcmQ7CiAgICAgICAgaGlnaHAgZmxvYXQgcGFyYW1fMTEgPSB1X3ZpZ25ldHRlX2JyaWdodG5lc3M7CiAgICAgICAgaGlnaHAgZmxvYXQgcGFyYW1fMTIgPSB1X3ZpZ25ldHRlX2V4dGVuZDsKICAgICAgICBoaWdocCBmbG9hdCBfNDUyID0gdmlnbmV0dGUocGFyYW1fMTAsIHBhcmFtXzExLCBwYXJhbV8xMik7CiAgICAgICAgdGV4Y29sb3IgPSBtaXgodGV4Y29sb3IsIGNsYW1wKHRleGNvbG9yIC0gdmVjNCgxLjAgLSBjbGFtcChfNDUyLCAwLjAsIDEuMCkpLCB2ZWM0KDAuMCksIHZlYzQoMS4wKSksIHZlYzQodV92aWduZXR0ZV9zdHJlbmd0aCkpOwogICAgfQogICAgaWYgKHVfZmlsbWdyYWluID4gMC4wKQogICAgewogICAgICAgIGhpZ2hwIHZlYzIgcGFyYW1fMTMgPSB2ZWMyKDEuMCkgLyB0ZXhDb29yZDsKICAgICAgICBoaWdocCBmbG9hdCBwYXJhbV8xNCA9IHVfZmlsbWdyYWluOwogICAgICAgIGhpZ2hwIGZsb2F0IHBhcmFtXzE1ID0gbW9kKChpVGltZSAqIDUuMCkgKiB1X2ZpbG1ncmFpbl9zcGVlZCwgMS4wKTsKICAgICAgICBoaWdocCB2ZWMzIF80ODggPSB0ZXhjb2xvci54eXogKiAodmVjMygxLjApIC0gZmlsbUdyYWluKHBhcmFtXzEzLCBwYXJhbV8xNCwgcGFyYW1fMTUpKTsKICAgICAgICB0ZXhjb2xvciA9IHZlYzQoXzQ4OC54LCBfNDg4LnksIF80ODgueiwgdGV4Y29sb3Iudyk7CiAgICB9CiAgICBoaWdocCB2ZWMzIF80OTYgPSB0ZXhjb2xvci54eXogKiBjb2xvci53OwogICAgdGV4Y29sb3IgPSB2ZWM0KF80OTYueCwgXzQ5Ni55LCBfNDk2LnosIHRleGNvbG9yLncpOwogICAgZnJhZ0NvbG9yID0gdGV4Y29sb3I7Cn0KCg";
kha_Shaders.genericPostprocess_fragData2 = "s6506:I3ZlcnNpb24gMTAwCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gbWVkaXVtcCBpbnQ7Cgp1bmlmb3JtIGZsb2F0IHVfc2hhcnBlbjsKdW5pZm9ybSBtZWRpdW1wIHNhbXBsZXIyRCB0ZXg7CnVuaWZvcm0gdmVjMiBpUmVzb2x1dGlvbjsKdW5pZm9ybSBmbG9hdCB1X3NoYXJwZW5fc2l6ZTsKdW5pZm9ybSBmbG9hdCB1X2dhbW1hOwp1bmlmb3JtIGZsb2F0IHVfYnJpZ2h0bmVzczsKdW5pZm9ybSBmbG9hdCB1X2NvbnRyYXN0Owp1bmlmb3JtIGZsb2F0IHVfc2F0dXJhdGlvbjsKdW5pZm9ybSB2ZWMzIHVfcmdiX2FkanVzdDsKdW5pZm9ybSBmbG9hdCB1X3ZpZ25ldHRlX3N0cmVuZ3RoOwp1bmlmb3JtIGZsb2F0IHVfdmlnbmV0dGVfYnJpZ2h0bmVzczsKdW5pZm9ybSBmbG9hdCB1X3ZpZ25ldHRlX2V4dGVuZDsKdW5pZm9ybSBmbG9hdCB1X2ZpbG1ncmFpbjsKdW5pZm9ybSBmbG9hdCBpVGltZTsKdW5pZm9ybSBmbG9hdCB1X2ZpbG1ncmFpbl9zcGVlZDsKCnZhcnlpbmcgdmVjMiB0ZXhDb29yZDsKdmFyeWluZyB2ZWM0IGNvbG9yOwoKdmVjNCBzaGFycGVuRmlsdGVyKG1lZGl1bXAgc2FtcGxlcjJEIHREaWZmdXNlLCB2ZWMyIHZVdiwgdmVjMiByZXNvbHV0aW9uLCBmbG9hdCBpbnRlbnNpdHksIGZsb2F0IHNpemUpCnsKICAgIHZlYzIgcmVzID0gKHZlYzIoMS4wKSAvIHJlc29sdXRpb24pICogc2l6ZTsKICAgIHZlYzQgY3VyciA9IHRleHR1cmUyRCh0RGlmZnVzZSwgdlV2KTsKICAgIHZlYzQgczEgPSB0ZXh0dXJlMkQodERpZmZ1c2UsIHZVdiArIHZlYzIocmVzLngsIDAuMCkpOwogICAgdmVjNCBzMiA9IHRleHR1cmUyRCh0RGlmZnVzZSwgdlV2ICsgdmVjMigtcmVzLngsIDAuMCkpOwogICAgdmVjNCBzMyA9IHRleHR1cmUyRCh0RGlmZnVzZSwgdlV2ICsgdmVjMigwLjAsIHJlcy55KSk7CiAgICB2ZWM0IHM0ID0gdGV4dHVyZTJEKHREaWZmdXNlLCB2VXYgKyB2ZWMyKDAuMCwgLXJlcy55KSk7CiAgICB2ZWM0IHM1ID0gdGV4dHVyZTJEKHREaWZmdXNlLCB2VXYgKyB2ZWMyKHJlcy54LCByZXMueSkpOwogICAgdmVjNCBzNiA9IHRleHR1cmUyRCh0RGlmZnVzZSwgdlV2ICsgdmVjMigtcmVzLngsIHJlcy55KSk7CiAgICB2ZWM0IHM3ID0gdGV4dHVyZTJEKHREaWZmdXNlLCB2VXYgKyB2ZWMyKC1yZXMueCwgLXJlcy55KSk7CiAgICB2ZWM0IHM4ID0gdGV4dHVyZTJEKHREaWZmdXNlLCB2VXYgKyB2ZWMyKHJlcy54LCAtcmVzLnkpKTsKICAgIHZlYzQgYmx1cnJlZCA9ICgoKCgoczUgKyBzNikgKyBzNykgKyBzOCkgKiAxLjApICsgKCgoKHMxICsgczIpICsgczMpICsgczQpICogMi4wKSkgKyAoY3VyciAqIDQuMCk7CiAgICBibHVycmVkIC89IHZlYzQoMTYuMCk7CiAgICB2ZWM0IG91dENvbCA9IHZlYzQoaW50ZW5zaXR5LCAwLjAsIDAuMCwgMS4wKTsKICAgIG91dENvbCA9IChjdXJyICogKDEuMCArIGludGVuc2l0eSkpIC0gKGJsdXJyZWQgKiBpbnRlbnNpdHkpOwogICAgcmV0dXJuIG91dENvbDsKfQoKdmVjNCBnYW1tYSh2ZWM0IGluQ29sb3IsIGZsb2F0IGcpCnsKICAgIHJldHVybiB2ZWM0KHBvdyhhYnMoaW5Db2xvci54eXopLCB2ZWMzKDEuMCAvIGcpKSwgaW5Db2xvci53KTsKfQoKdmVjNCBicmlnaHRuZXNzQ29udHJhc3QodmVjNCBpbkNvbG9yLCBmbG9hdCBicmlnaHRuZXNzLCBmbG9hdCBjb250cmFzdCkKewogICAgcmV0dXJuIHZlYzQoKCgoaW5Db2xvci54eXogLSB2ZWMzKDAuNSkpICogY29udHJhc3QpICsgdmVjMygwLjUpKSArIHZlYzMoYnJpZ2h0bmVzcyksIGluQ29sb3Iudyk7Cn0KCm1hdDQgc2F0dXJhdGlvbk1hdHJpeChmbG9hdCBzYXR1cmF0aW9uKQp7CiAgICB2ZWMzIGx1bWluYW5jZSA9IHZlYzMoMC4zMDg2MDAwMDg0ODc3MDE0MTYwMTU2MjUsIDAuNjA5Mzk5OTc0MzQ2MTYwODg4NjcxODc1LCAwLjA4MjAwMDAwMjI2NDk3NjUwMTQ2NDg0Mzc1KTsKICAgIGZsb2F0IG9uZU1pbnVzU2F0ID0gMS4wIC0gc2F0dXJhdGlvbjsKICAgIHZlYzMgcmVkID0gdmVjMyhsdW1pbmFuY2UueCAqIG9uZU1pbnVzU2F0KTsKICAgIHJlZC54ICs9IHNhdHVyYXRpb247CiAgICB2ZWMzIGdyZWVuID0gdmVjMyhsdW1pbmFuY2UueSAqIG9uZU1pbnVzU2F0KTsKICAgIGdyZWVuLnkgKz0gc2F0dXJhdGlvbjsKICAgIHZlYzMgYmx1ZSA9IHZlYzMobHVtaW5hbmNlLnogKiBvbmVNaW51c1NhdCk7CiAgICBibHVlLnogKz0gc2F0dXJhdGlvbjsKICAgIHJldHVybiBtYXQ0KHZlYzQocmVkLCAwLjApLCB2ZWM0KGdyZWVuLCAwLjApLCB2ZWM0KGJsdWUsIDAuMCksIHZlYzQoMC4wLCAwLjAsIDAuMCwgMS4wKSk7Cn0KCmZsb2F0IHZpZ25ldHRlKGlub3V0IHZlYzIgdXYsIGZsb2F0IHN0cmVuZ3RoLCBmbG9hdCBleHRlbmQpCnsKICAgIHV2ICo9ICh2ZWMyKDEuMCkgLSB1di55eCk7CiAgICBmbG9hdCB2aWcgPSAodXYueCAqIHV2LnkpICogc3RyZW5ndGg7CiAgICB2aWcgPSBwb3codmlnLCBleHRlbmQpOwogICAgcmV0dXJuIHZpZzsKfQoKZmxvYXQgZ2F1c3NpYW4oZmxvYXQgeiwgZmxvYXQgdSwgZmxvYXQgbykKewogICAgcmV0dXJuICgxLjAgLyAobyAqIDIuNTA2NTkxMzIwMDM3ODQxNzk2ODc1KSkgKiBleHAoLSgoKHogLSB1KSAqICh6IC0gdSkpIC8gKDIuMCAqIChvICogbykpKSk7Cn0KCnZlYzMgZmlsbUdyYWluKHZlYzIgdlV2LCBmbG9hdCBpbnRlbnNpdHksIGZsb2F0IG5vaXNlT2Zmc2V0KQp7CiAgICBmbG9hdCBzZWVkID0gZG90KHZVdiwgdmVjMigxMi45ODk4MDA0NTMxODYwMzUxNTYyNSwgNzguMjMzMDAxNzA4OTg0Mzc1KSk7CiAgICBmbG9hdCBfbm9pc2UgPSBmcmFjdCgoc2luKHNlZWQpICogNDM3NTguNTQ2ODc1KSArIG5vaXNlT2Zmc2V0KTsKICAgIGZsb2F0IHBhcmFtID0gX25vaXNlOwogICAgZmxvYXQgcGFyYW1fMSA9IDAuNTsKICAgIGZsb2F0IHBhcmFtXzIgPSAwLjI1OwogICAgX25vaXNlID0gZ2F1c3NpYW4ocGFyYW0sIHBhcmFtXzEsIHBhcmFtXzIpOwogICAgcmV0dXJuIHZlYzMoX25vaXNlKSAqIGludGVuc2l0eTsKfQoKdm9pZCBtYWluKCkKewogICAgdmVjNCBzb3VyY2VDb2wgPSB2ZWM0KDAuMCk7CiAgICBpZiAodV9zaGFycGVuID4gMC4wKQogICAgewogICAgICAgIHZlYzIgcGFyYW0gPSB0ZXhDb29yZDsKICAgICAgICB2ZWMyIHBhcmFtXzEgPSBpUmVzb2x1dGlvbjsKICAgICAgICBmbG9hdCBwYXJhbV8yID0gdV9zaGFycGVuOwogICAgICAgIGZsb2F0IHBhcmFtXzMgPSB1X3NoYXJwZW5fc2l6ZTsKICAgICAgICBzb3VyY2VDb2wgPSBzaGFycGVuRmlsdGVyKHRleCwgcGFyYW0sIHBhcmFtXzEsIHBhcmFtXzIsIHBhcmFtXzMpOwogICAgfQogICAgZWxzZQogICAgewogICAgICAgIHNvdXJjZUNvbCA9IHRleHR1cmUyRCh0ZXgsIHRleENvb3JkKSAqIGNvbG9yOwogICAgfQogICAgdmVjNCB0ZXhjb2xvciA9IHNvdXJjZUNvbDsKICAgIGlmICh1X2dhbW1hICE9IDEuMCkKICAgIHsKICAgICAgICB2ZWM0IHBhcmFtXzQgPSB0ZXhjb2xvcjsKICAgICAgICBmbG9hdCBwYXJhbV81ID0gdV9nYW1tYTsKICAgICAgICB0ZXhjb2xvciA9IGdhbW1hKHBhcmFtXzQsIHBhcmFtXzUpOwogICAgfQogICAgaWYgKCh1X2JyaWdodG5lc3MgIT0gMC4wKSB8fCAodV9jb250cmFzdCAhPSAxLjApKQogICAgewogICAgICAgIHZlYzQgcGFyYW1fNiA9IHRleGNvbG9yOwogICAgICAgIGZsb2F0IHBhcmFtXzcgPSBjbGFtcCh1X2JyaWdodG5lc3MsIC0xLjAsIDEuMCk7CiAgICAgICAgZmxvYXQgcGFyYW1fOCA9IHVfY29udHJhc3Q7CiAgICAgICAgdGV4Y29sb3IgPSBicmlnaHRuZXNzQ29udHJhc3QocGFyYW1fNiwgcGFyYW1fNywgcGFyYW1fOCk7CiAgICB9CiAgICBpZiAodV9zYXR1cmF0aW9uICE9IDEuMCkKICAgIHsKICAgICAgICBmbG9hdCBwYXJhbV85ID0gdV9zYXR1cmF0aW9uOwogICAgICAgIHRleGNvbG9yID0gc2F0dXJhdGlvbk1hdHJpeChwYXJhbV85KSAqIHRleGNvbG9yOwogICAgfQogICAgdmVjMyBfNDM0ID0gdGV4Y29sb3IueHl6ICogdV9yZ2JfYWRqdXN0OwogICAgdGV4Y29sb3IgPSB2ZWM0KF80MzQueCwgXzQzNC55LCBfNDM0LnosIHRleGNvbG9yLncpOwogICAgaWYgKHVfdmlnbmV0dGVfc3RyZW5ndGggPiAwLjApCiAgICB7CiAgICAgICAgdmVjMiBwYXJhbV8xMCA9IHRleENvb3JkOwogICAgICAgIGZsb2F0IHBhcmFtXzExID0gdV92aWduZXR0ZV9icmlnaHRuZXNzOwogICAgICAgIGZsb2F0IHBhcmFtXzEyID0gdV92aWduZXR0ZV9leHRlbmQ7CiAgICAgICAgZmxvYXQgXzQ1MiA9IHZpZ25ldHRlKHBhcmFtXzEwLCBwYXJhbV8xMSwgcGFyYW1fMTIpOwogICAgICAgIHRleGNvbG9yID0gbWl4KHRleGNvbG9yLCBjbGFtcCh0ZXhjb2xvciAtIHZlYzQoMS4wIC0gY2xhbXAoXzQ1MiwgMC4wLCAxLjApKSwgdmVjNCgwLjApLCB2ZWM0KDEuMCkpLCB2ZWM0KHVfdmlnbmV0dGVfc3RyZW5ndGgpKTsKICAgIH0KICAgIGlmICh1X2ZpbG1ncmFpbiA%IDAuMCkKICAgIHsKICAgICAgICB2ZWMyIHBhcmFtXzEzID0gdmVjMigxLjApIC8gdGV4Q29vcmQ7CiAgICAgICAgZmxvYXQgcGFyYW1fMTQgPSB1X2ZpbG1ncmFpbjsKICAgICAgICBmbG9hdCBwYXJhbV8xNSA9IG1vZCgoaVRpbWUgKiA1LjApICogdV9maWxtZ3JhaW5fc3BlZWQsIDEuMCk7CiAgICAgICAgdmVjMyBfNDg4ID0gdGV4Y29sb3IueHl6ICogKHZlYzMoMS4wKSAtIGZpbG1HcmFpbihwYXJhbV8xMywgcGFyYW1fMTQsIHBhcmFtXzE1KSk7CiAgICAgICAgdGV4Y29sb3IgPSB2ZWM0KF80ODgueCwgXzQ4OC55LCBfNDg4LnosIHRleGNvbG9yLncpOwogICAgfQogICAgdmVjMyBfNDk2ID0gdGV4Y29sb3IueHl6ICogY29sb3IudzsKICAgIHRleGNvbG9yID0gdmVjNChfNDk2LngsIF80OTYueSwgXzQ5Ni56LCB0ZXhjb2xvci53KTsKICAgIGdsX0ZyYWdEYXRhWzBdID0gdGV4Y29sb3I7Cn0KCg";
kha_Shaders.halftone1_fragData0 = "s530:I3ZlcnNpb24gMTAwCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gaGlnaHAgaW50OwoKdW5pZm9ybSBoaWdocCBzYW1wbGVyMkQgdGV4Owp1bmlmb3JtIGhpZ2hwIGZsb2F0IGlUaW1lOwp1bmlmb3JtIGhpZ2hwIHZlYzIgaVJlc29sdXRpb247Cgp2YXJ5aW5nIGhpZ2hwIHZlYzQgY29sb3I7CnZhcnlpbmcgaGlnaHAgdmVjMiB0ZXhDb29yZDsKCnZvaWQgbWFpbigpCnsKICAgIGhpZ2hwIHZlYzQgb3V0Q29sb3IgPSB2ZWM0KDEuMCkgKiBjb2xvcjsKICAgIGhpZ2hwIHZlYzMgXzI0ID0gb3V0Q29sb3IueHl6ICogY29sb3IudzsKICAgIG91dENvbG9yID0gdmVjNChfMjQueCwgXzI0LnksIF8yNC56LCBvdXRDb2xvci53KTsKICAgIGdsX0ZyYWdEYXRhWzBdID0gb3V0Q29sb3I7Cn0KCg";
kha_Shaders.halftone1_fragData1 = "s548:I3ZlcnNpb24gMzAwIGVzCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gaGlnaHAgaW50OwoKdW5pZm9ybSBoaWdocCBzYW1wbGVyMkQgdGV4Owp1bmlmb3JtIGhpZ2hwIGZsb2F0IGlUaW1lOwp1bmlmb3JtIGhpZ2hwIHZlYzIgaVJlc29sdXRpb247CgppbiBoaWdocCB2ZWM0IGNvbG9yOwpvdXQgaGlnaHAgdmVjNCBmcmFnQ29sb3I7CmluIGhpZ2hwIHZlYzIgdGV4Q29vcmQ7Cgp2b2lkIG1haW4oKQp7CiAgICBoaWdocCB2ZWM0IG91dENvbG9yID0gdmVjNCgxLjApICogY29sb3I7CiAgICBoaWdocCB2ZWMzIF8yNCA9IG91dENvbG9yLnh5eiAqIGNvbG9yLnc7CiAgICBvdXRDb2xvciA9IHZlYzQoXzI0LngsIF8yNC55LCBfMjQueiwgb3V0Q29sb3Iudyk7CiAgICBmcmFnQ29sb3IgPSBvdXRDb2xvcjsKfQoK";
kha_Shaders.halftone1_fragData2 = "s487:I3ZlcnNpb24gMTAwCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gbWVkaXVtcCBpbnQ7Cgp1bmlmb3JtIG1lZGl1bXAgc2FtcGxlcjJEIHRleDsKdW5pZm9ybSBmbG9hdCBpVGltZTsKdW5pZm9ybSB2ZWMyIGlSZXNvbHV0aW9uOwoKdmFyeWluZyB2ZWM0IGNvbG9yOwp2YXJ5aW5nIHZlYzIgdGV4Q29vcmQ7Cgp2b2lkIG1haW4oKQp7CiAgICB2ZWM0IG91dENvbG9yID0gdmVjNCgxLjApICogY29sb3I7CiAgICB2ZWMzIF8yNCA9IG91dENvbG9yLnh5eiAqIGNvbG9yLnc7CiAgICBvdXRDb2xvciA9IHZlYzQoXzI0LngsIF8yNC55LCBfMjQueiwgb3V0Q29sb3Iudyk7CiAgICBnbF9GcmFnRGF0YVswXSA9IG91dENvbG9yOwp9Cgo";
kha_Shaders.painter_colored_fragData0 = "s198:I3ZlcnNpb24gMTAwCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gaGlnaHAgaW50OwoKdmFyeWluZyBoaWdocCB2ZWM0IGZyYWdtZW50Q29sb3I7Cgp2b2lkIG1haW4oKQp7CiAgICBnbF9GcmFnRGF0YVswXSA9IGZyYWdtZW50Q29sb3I7Cn0KCg";
kha_Shaders.painter_colored_fragData1 = "s223:I3ZlcnNpb24gMzAwIGVzCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gaGlnaHAgaW50OwoKb3V0IGhpZ2hwIHZlYzQgRnJhZ0NvbG9yOwppbiBoaWdocCB2ZWM0IGZyYWdtZW50Q29sb3I7Cgp2b2lkIG1haW4oKQp7CiAgICBGcmFnQ29sb3IgPSBmcmFnbWVudENvbG9yOwp9Cgo";
kha_Shaders.painter_colored_fragData2 = "s192:I3ZlcnNpb24gMTAwCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gbWVkaXVtcCBpbnQ7Cgp2YXJ5aW5nIHZlYzQgZnJhZ21lbnRDb2xvcjsKCnZvaWQgbWFpbigpCnsKICAgIGdsX0ZyYWdEYXRhWzBdID0gZnJhZ21lbnRDb2xvcjsKfQoK";
kha_Shaders.painter_colored_vertData0 = "s331:I3ZlcnNpb24gMTAwCgp1bmlmb3JtIG1hdDQgcHJvamVjdGlvbk1hdHJpeDsKCmF0dHJpYnV0ZSB2ZWMzIHZlcnRleFBvc2l0aW9uOwp2YXJ5aW5nIHZlYzQgZnJhZ21lbnRDb2xvcjsKYXR0cmlidXRlIHZlYzQgdmVydGV4Q29sb3I7Cgp2b2lkIG1haW4oKQp7CiAgICBnbF9Qb3NpdGlvbiA9IHByb2plY3Rpb25NYXRyaXggKiB2ZWM0KHZlcnRleFBvc2l0aW9uLCAxLjApOwogICAgZnJhZ21lbnRDb2xvciA9IHZlcnRleENvbG9yOwp9Cgo";
kha_Shaders.painter_colored_vertData1 = "s311:I3ZlcnNpb24gMzAwIGVzCgp1bmlmb3JtIG1hdDQgcHJvamVjdGlvbk1hdHJpeDsKCmluIHZlYzMgdmVydGV4UG9zaXRpb247Cm91dCB2ZWM0IGZyYWdtZW50Q29sb3I7CmluIHZlYzQgdmVydGV4Q29sb3I7Cgp2b2lkIG1haW4oKQp7CiAgICBnbF9Qb3NpdGlvbiA9IHByb2plY3Rpb25NYXRyaXggKiB2ZWM0KHZlcnRleFBvc2l0aW9uLCAxLjApOwogICAgZnJhZ21lbnRDb2xvciA9IHZlcnRleENvbG9yOwp9Cgo";
kha_Shaders.painter_colored_vertData2 = "s374:I3ZlcnNpb24gMTAwCgp1bmlmb3JtIG1lZGl1bXAgbWF0NCBwcm9qZWN0aW9uTWF0cml4OwoKYXR0cmlidXRlIG1lZGl1bXAgdmVjMyB2ZXJ0ZXhQb3NpdGlvbjsKdmFyeWluZyBtZWRpdW1wIHZlYzQgZnJhZ21lbnRDb2xvcjsKYXR0cmlidXRlIG1lZGl1bXAgdmVjNCB2ZXJ0ZXhDb2xvcjsKCnZvaWQgbWFpbigpCnsKICAgIGdsX1Bvc2l0aW9uID0gcHJvamVjdGlvbk1hdHJpeCAqIHZlYzQodmVydGV4UG9zaXRpb24sIDEuMCk7CiAgICBmcmFnbWVudENvbG9yID0gdmVydGV4Q29sb3I7Cn0KCg";
kha_Shaders.painter_image_fragData0 = "s471:I3ZlcnNpb24gMTAwCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gaGlnaHAgaW50OwoKdW5pZm9ybSBoaWdocCBzYW1wbGVyMkQgdGV4OwoKdmFyeWluZyBoaWdocCB2ZWMyIHRleENvb3JkOwp2YXJ5aW5nIGhpZ2hwIHZlYzQgY29sb3I7Cgp2b2lkIG1haW4oKQp7CiAgICBoaWdocCB2ZWM0IHRleGNvbG9yID0gdGV4dHVyZTJEKHRleCwgdGV4Q29vcmQpICogY29sb3I7CiAgICBoaWdocCB2ZWMzIF8zMiA9IHRleGNvbG9yLnh5eiAqIGNvbG9yLnc7CiAgICB0ZXhjb2xvciA9IHZlYzQoXzMyLngsIF8zMi55LCBfMzIueiwgdGV4Y29sb3Iudyk7CiAgICBnbF9GcmFnRGF0YVswXSA9IHRleGNvbG9yOwp9Cgo";
kha_Shaders.painter_image_fragData1 = "s487:I3ZlcnNpb24gMzAwIGVzCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gaGlnaHAgaW50OwoKdW5pZm9ybSBoaWdocCBzYW1wbGVyMkQgdGV4OwoKaW4gaGlnaHAgdmVjMiB0ZXhDb29yZDsKaW4gaGlnaHAgdmVjNCBjb2xvcjsKb3V0IGhpZ2hwIHZlYzQgRnJhZ0NvbG9yOwoKdm9pZCBtYWluKCkKewogICAgaGlnaHAgdmVjNCB0ZXhjb2xvciA9IHRleHR1cmUodGV4LCB0ZXhDb29yZCkgKiBjb2xvcjsKICAgIGhpZ2hwIHZlYzMgXzMyID0gdGV4Y29sb3IueHl6ICogY29sb3IudzsKICAgIHRleGNvbG9yID0gdmVjNChfMzIueCwgXzMyLnksIF8zMi56LCB0ZXhjb2xvci53KTsKICAgIEZyYWdDb2xvciA9IHRleGNvbG9yOwp9Cgo";
kha_Shaders.painter_image_fragData2 = "s444:I3ZlcnNpb24gMTAwCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gbWVkaXVtcCBpbnQ7Cgp1bmlmb3JtIG1lZGl1bXAgc2FtcGxlcjJEIHRleDsKCnZhcnlpbmcgdmVjMiB0ZXhDb29yZDsKdmFyeWluZyB2ZWM0IGNvbG9yOwoKdm9pZCBtYWluKCkKewogICAgdmVjNCB0ZXhjb2xvciA9IHRleHR1cmUyRCh0ZXgsIHRleENvb3JkKSAqIGNvbG9yOwogICAgdmVjMyBfMzIgPSB0ZXhjb2xvci54eXogKiBjb2xvci53OwogICAgdGV4Y29sb3IgPSB2ZWM0KF8zMi54LCBfMzIueSwgXzMyLnosIHRleGNvbG9yLncpOwogICAgZ2xfRnJhZ0RhdGFbMF0gPSB0ZXhjb2xvcjsKfQoK";
kha_Shaders.painter_image_vertData0 = "s415:I3ZlcnNpb24gMTAwCgp1bmlmb3JtIG1hdDQgcHJvamVjdGlvbk1hdHJpeDsKCmF0dHJpYnV0ZSB2ZWMzIHZlcnRleFBvc2l0aW9uOwp2YXJ5aW5nIHZlYzIgdGV4Q29vcmQ7CmF0dHJpYnV0ZSB2ZWMyIHRleFBvc2l0aW9uOwp2YXJ5aW5nIHZlYzQgY29sb3I7CmF0dHJpYnV0ZSB2ZWM0IHZlcnRleENvbG9yOwoKdm9pZCBtYWluKCkKewogICAgZ2xfUG9zaXRpb24gPSBwcm9qZWN0aW9uTWF0cml4ICogdmVjNCh2ZXJ0ZXhQb3NpdGlvbiwgMS4wKTsKICAgIHRleENvb3JkID0gdGV4UG9zaXRpb247CiAgICBjb2xvciA9IHZlcnRleENvbG9yOwp9Cgo";
kha_Shaders.painter_image_vertData1 = "s380:I3ZlcnNpb24gMzAwIGVzCgp1bmlmb3JtIG1hdDQgcHJvamVjdGlvbk1hdHJpeDsKCmluIHZlYzMgdmVydGV4UG9zaXRpb247Cm91dCB2ZWMyIHRleENvb3JkOwppbiB2ZWMyIHRleFBvc2l0aW9uOwpvdXQgdmVjNCBjb2xvcjsKaW4gdmVjNCB2ZXJ0ZXhDb2xvcjsKCnZvaWQgbWFpbigpCnsKICAgIGdsX1Bvc2l0aW9uID0gcHJvamVjdGlvbk1hdHJpeCAqIHZlYzQodmVydGV4UG9zaXRpb24sIDEuMCk7CiAgICB0ZXhDb29yZCA9IHRleFBvc2l0aW9uOwogICAgY29sb3IgPSB2ZXJ0ZXhDb2xvcjsKfQoK";
kha_Shaders.painter_image_vertData2 = "s479:I3ZlcnNpb24gMTAwCgp1bmlmb3JtIG1lZGl1bXAgbWF0NCBwcm9qZWN0aW9uTWF0cml4OwoKYXR0cmlidXRlIG1lZGl1bXAgdmVjMyB2ZXJ0ZXhQb3NpdGlvbjsKdmFyeWluZyBtZWRpdW1wIHZlYzIgdGV4Q29vcmQ7CmF0dHJpYnV0ZSBtZWRpdW1wIHZlYzIgdGV4UG9zaXRpb247CnZhcnlpbmcgbWVkaXVtcCB2ZWM0IGNvbG9yOwphdHRyaWJ1dGUgbWVkaXVtcCB2ZWM0IHZlcnRleENvbG9yOwoKdm9pZCBtYWluKCkKewogICAgZ2xfUG9zaXRpb24gPSBwcm9qZWN0aW9uTWF0cml4ICogdmVjNCh2ZXJ0ZXhQb3NpdGlvbiwgMS4wKTsKICAgIHRleENvb3JkID0gdGV4UG9zaXRpb247CiAgICBjb2xvciA9IHZlcnRleENvbG9yOwp9Cgo";
kha_Shaders.painter_text_fragData0 = "s351:I3ZlcnNpb24gMTAwCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gaGlnaHAgaW50OwoKdW5pZm9ybSBoaWdocCBzYW1wbGVyMkQgdGV4OwoKdmFyeWluZyBoaWdocCB2ZWM0IGZyYWdtZW50Q29sb3I7CnZhcnlpbmcgaGlnaHAgdmVjMiB0ZXhDb29yZDsKCnZvaWQgbWFpbigpCnsKICAgIGdsX0ZyYWdEYXRhWzBdID0gdmVjNChmcmFnbWVudENvbG9yLnh5eiwgdGV4dHVyZTJEKHRleCwgdGV4Q29vcmQpLnggKiBmcmFnbWVudENvbG9yLncpOwp9Cgo";
kha_Shaders.painter_text_fragData1 = "s367:I3ZlcnNpb24gMzAwIGVzCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gaGlnaHAgaW50OwoKdW5pZm9ybSBoaWdocCBzYW1wbGVyMkQgdGV4OwoKb3V0IGhpZ2hwIHZlYzQgRnJhZ0NvbG9yOwppbiBoaWdocCB2ZWM0IGZyYWdtZW50Q29sb3I7CmluIGhpZ2hwIHZlYzIgdGV4Q29vcmQ7Cgp2b2lkIG1haW4oKQp7CiAgICBGcmFnQ29sb3IgPSB2ZWM0KGZyYWdtZW50Q29sb3IueHl6LCB0ZXh0dXJlKHRleCwgdGV4Q29vcmQpLnggKiBmcmFnbWVudENvbG9yLncpOwp9Cgo";
kha_Shaders.painter_text_fragData2 = "s340:I3ZlcnNpb24gMTAwCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gbWVkaXVtcCBpbnQ7Cgp1bmlmb3JtIG1lZGl1bXAgc2FtcGxlcjJEIHRleDsKCnZhcnlpbmcgdmVjNCBmcmFnbWVudENvbG9yOwp2YXJ5aW5nIHZlYzIgdGV4Q29vcmQ7Cgp2b2lkIG1haW4oKQp7CiAgICBnbF9GcmFnRGF0YVswXSA9IHZlYzQoZnJhZ21lbnRDb2xvci54eXosIHRleHR1cmUyRCh0ZXgsIHRleENvb3JkKS54ICogZnJhZ21lbnRDb2xvci53KTsKfQoK";
kha_Shaders.painter_text_vertData0 = "s436:I3ZlcnNpb24gMTAwCgp1bmlmb3JtIG1hdDQgcHJvamVjdGlvbk1hdHJpeDsKCmF0dHJpYnV0ZSB2ZWMzIHZlcnRleFBvc2l0aW9uOwp2YXJ5aW5nIHZlYzIgdGV4Q29vcmQ7CmF0dHJpYnV0ZSB2ZWMyIHRleFBvc2l0aW9uOwp2YXJ5aW5nIHZlYzQgZnJhZ21lbnRDb2xvcjsKYXR0cmlidXRlIHZlYzQgdmVydGV4Q29sb3I7Cgp2b2lkIG1haW4oKQp7CiAgICBnbF9Qb3NpdGlvbiA9IHByb2plY3Rpb25NYXRyaXggKiB2ZWM0KHZlcnRleFBvc2l0aW9uLCAxLjApOwogICAgdGV4Q29vcmQgPSB0ZXhQb3NpdGlvbjsKICAgIGZyYWdtZW50Q29sb3IgPSB2ZXJ0ZXhDb2xvcjsKfQoK";
kha_Shaders.painter_text_vertData1 = "s402:I3ZlcnNpb24gMzAwIGVzCgp1bmlmb3JtIG1hdDQgcHJvamVjdGlvbk1hdHJpeDsKCmluIHZlYzMgdmVydGV4UG9zaXRpb247Cm91dCB2ZWMyIHRleENvb3JkOwppbiB2ZWMyIHRleFBvc2l0aW9uOwpvdXQgdmVjNCBmcmFnbWVudENvbG9yOwppbiB2ZWM0IHZlcnRleENvbG9yOwoKdm9pZCBtYWluKCkKewogICAgZ2xfUG9zaXRpb24gPSBwcm9qZWN0aW9uTWF0cml4ICogdmVjNCh2ZXJ0ZXhQb3NpdGlvbiwgMS4wKTsKICAgIHRleENvb3JkID0gdGV4UG9zaXRpb247CiAgICBmcmFnbWVudENvbG9yID0gdmVydGV4Q29sb3I7Cn0KCg";
kha_Shaders.painter_text_vertData2 = "s500:I3ZlcnNpb24gMTAwCgp1bmlmb3JtIG1lZGl1bXAgbWF0NCBwcm9qZWN0aW9uTWF0cml4OwoKYXR0cmlidXRlIG1lZGl1bXAgdmVjMyB2ZXJ0ZXhQb3NpdGlvbjsKdmFyeWluZyBtZWRpdW1wIHZlYzIgdGV4Q29vcmQ7CmF0dHJpYnV0ZSBtZWRpdW1wIHZlYzIgdGV4UG9zaXRpb247CnZhcnlpbmcgbWVkaXVtcCB2ZWM0IGZyYWdtZW50Q29sb3I7CmF0dHJpYnV0ZSBtZWRpdW1wIHZlYzQgdmVydGV4Q29sb3I7Cgp2b2lkIG1haW4oKQp7CiAgICBnbF9Qb3NpdGlvbiA9IHByb2plY3Rpb25NYXRyaXggKiB2ZWM0KHZlcnRleFBvc2l0aW9uLCAxLjApOwogICAgdGV4Q29vcmQgPSB0ZXhQb3NpdGlvbjsKICAgIGZyYWdtZW50Q29sb3IgPSB2ZXJ0ZXhDb2xvcjsKfQoK";
kha_Shaders.painter_video_fragData0 = "s471:I3ZlcnNpb24gMTAwCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gaGlnaHAgaW50OwoKdW5pZm9ybSBoaWdocCBzYW1wbGVyMkQgdGV4OwoKdmFyeWluZyBoaWdocCB2ZWMyIHRleENvb3JkOwp2YXJ5aW5nIGhpZ2hwIHZlYzQgY29sb3I7Cgp2b2lkIG1haW4oKQp7CiAgICBoaWdocCB2ZWM0IHRleGNvbG9yID0gdGV4dHVyZTJEKHRleCwgdGV4Q29vcmQpICogY29sb3I7CiAgICBoaWdocCB2ZWMzIF8zMiA9IHRleGNvbG9yLnh5eiAqIGNvbG9yLnc7CiAgICB0ZXhjb2xvciA9IHZlYzQoXzMyLngsIF8zMi55LCBfMzIueiwgdGV4Y29sb3Iudyk7CiAgICBnbF9GcmFnRGF0YVswXSA9IHRleGNvbG9yOwp9Cgo";
kha_Shaders.painter_video_fragData1 = "s487:I3ZlcnNpb24gMzAwIGVzCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gaGlnaHAgaW50OwoKdW5pZm9ybSBoaWdocCBzYW1wbGVyMkQgdGV4OwoKaW4gaGlnaHAgdmVjMiB0ZXhDb29yZDsKaW4gaGlnaHAgdmVjNCBjb2xvcjsKb3V0IGhpZ2hwIHZlYzQgRnJhZ0NvbG9yOwoKdm9pZCBtYWluKCkKewogICAgaGlnaHAgdmVjNCB0ZXhjb2xvciA9IHRleHR1cmUodGV4LCB0ZXhDb29yZCkgKiBjb2xvcjsKICAgIGhpZ2hwIHZlYzMgXzMyID0gdGV4Y29sb3IueHl6ICogY29sb3IudzsKICAgIHRleGNvbG9yID0gdmVjNChfMzIueCwgXzMyLnksIF8zMi56LCB0ZXhjb2xvci53KTsKICAgIEZyYWdDb2xvciA9IHRleGNvbG9yOwp9Cgo";
kha_Shaders.painter_video_fragData2 = "s444:I3ZlcnNpb24gMTAwCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gbWVkaXVtcCBpbnQ7Cgp1bmlmb3JtIG1lZGl1bXAgc2FtcGxlcjJEIHRleDsKCnZhcnlpbmcgdmVjMiB0ZXhDb29yZDsKdmFyeWluZyB2ZWM0IGNvbG9yOwoKdm9pZCBtYWluKCkKewogICAgdmVjNCB0ZXhjb2xvciA9IHRleHR1cmUyRCh0ZXgsIHRleENvb3JkKSAqIGNvbG9yOwogICAgdmVjMyBfMzIgPSB0ZXhjb2xvci54eXogKiBjb2xvci53OwogICAgdGV4Y29sb3IgPSB2ZWM0KF8zMi54LCBfMzIueSwgXzMyLnosIHRleGNvbG9yLncpOwogICAgZ2xfRnJhZ0RhdGFbMF0gPSB0ZXhjb2xvcjsKfQoK";
kha_Shaders.painter_video_vertData0 = "s415:I3ZlcnNpb24gMTAwCgp1bmlmb3JtIG1hdDQgcHJvamVjdGlvbk1hdHJpeDsKCmF0dHJpYnV0ZSB2ZWMzIHZlcnRleFBvc2l0aW9uOwp2YXJ5aW5nIHZlYzIgdGV4Q29vcmQ7CmF0dHJpYnV0ZSB2ZWMyIHRleFBvc2l0aW9uOwp2YXJ5aW5nIHZlYzQgY29sb3I7CmF0dHJpYnV0ZSB2ZWM0IHZlcnRleENvbG9yOwoKdm9pZCBtYWluKCkKewogICAgZ2xfUG9zaXRpb24gPSBwcm9qZWN0aW9uTWF0cml4ICogdmVjNCh2ZXJ0ZXhQb3NpdGlvbiwgMS4wKTsKICAgIHRleENvb3JkID0gdGV4UG9zaXRpb247CiAgICBjb2xvciA9IHZlcnRleENvbG9yOwp9Cgo";
kha_Shaders.painter_video_vertData1 = "s380:I3ZlcnNpb24gMzAwIGVzCgp1bmlmb3JtIG1hdDQgcHJvamVjdGlvbk1hdHJpeDsKCmluIHZlYzMgdmVydGV4UG9zaXRpb247Cm91dCB2ZWMyIHRleENvb3JkOwppbiB2ZWMyIHRleFBvc2l0aW9uOwpvdXQgdmVjNCBjb2xvcjsKaW4gdmVjNCB2ZXJ0ZXhDb2xvcjsKCnZvaWQgbWFpbigpCnsKICAgIGdsX1Bvc2l0aW9uID0gcHJvamVjdGlvbk1hdHJpeCAqIHZlYzQodmVydGV4UG9zaXRpb24sIDEuMCk7CiAgICB0ZXhDb29yZCA9IHRleFBvc2l0aW9uOwogICAgY29sb3IgPSB2ZXJ0ZXhDb2xvcjsKfQoK";
kha_Shaders.painter_video_vertData2 = "s479:I3ZlcnNpb24gMTAwCgp1bmlmb3JtIG1lZGl1bXAgbWF0NCBwcm9qZWN0aW9uTWF0cml4OwoKYXR0cmlidXRlIG1lZGl1bXAgdmVjMyB2ZXJ0ZXhQb3NpdGlvbjsKdmFyeWluZyBtZWRpdW1wIHZlYzIgdGV4Q29vcmQ7CmF0dHJpYnV0ZSBtZWRpdW1wIHZlYzIgdGV4UG9zaXRpb247CnZhcnlpbmcgbWVkaXVtcCB2ZWM0IGNvbG9yOwphdHRyaWJ1dGUgbWVkaXVtcCB2ZWM0IHZlcnRleENvbG9yOwoKdm9pZCBtYWluKCkKewogICAgZ2xfUG9zaXRpb24gPSBwcm9qZWN0aW9uTWF0cml4ICogdmVjNCh2ZXJ0ZXhQb3NpdGlvbiwgMS4wKTsKICAgIHRleENvb3JkID0gdGV4UG9zaXRpb247CiAgICBjb2xvciA9IHZlcnRleENvbG9yOwp9Cgo";
kha_Shaders.postprocess_fragData0 = "s5092:I3ZlcnNpb24gMTAwCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gaGlnaHAgaW50OwoKdW5pZm9ybSBoaWdocCBzYW1wbGVyMkQgdGV4Owp1bmlmb3JtIGhpZ2hwIGZsb2F0IGlUaW1lOwp1bmlmb3JtIGhpZ2hwIHZlYzIgaVJlc29sdXRpb247Cgp2YXJ5aW5nIGhpZ2hwIHZlYzIgdGV4Q29vcmQ7CnZhcnlpbmcgaGlnaHAgdmVjNCBjb2xvcjsKCmhpZ2hwIHZlYzIgY3VydmUoaW5vdXQgaGlnaHAgdmVjMiB1dikKewogICAgdXYgPSAodXYgLSB2ZWMyKDAuNSkpICogMi4wOwogICAgdXYgKj0gMS4xMDAwMDAwMjM4NDE4NTc5MTAxNTYyNTsKICAgIHV2LnggKj0gKDEuMCArIHBvdyhhYnModXYueSkgLyA1LjAsIDIuMCkpOwogICAgdXYueSAqPSAoMS4wICsgcG93KGFicyh1di54KSAvIDQuMCwgMi4wKSk7CiAgICB1diA9ICh1diAvIHZlYzIoMi4wKSkgKyB2ZWMyKDAuNSk7CiAgICB1diA9ICh1diAqIDAuOTIwMDAwMDE2Njg5MzAwNTM3MTA5Mzc1KSArIHZlYzIoMC4wMzk5OTk5OTkxMDU5MzAzMjgzNjkxNDA2MjUpOwogICAgcmV0dXJuIHV2Owp9CgpoaWdocCB2ZWM0IENSVDEoKQp7CiAgICBoaWdocCB2ZWMyIHEgPSB0ZXhDb29yZDsKICAgIGhpZ2hwIHZlYzIgdXYgPSBxOwogICAgaGlnaHAgdmVjMiBwYXJhbSA9IHV2OwogICAgaGlnaHAgdmVjMiBfNzUgPSBjdXJ2ZShwYXJhbSk7CiAgICB1diA9IF83NTsKICAgIGhpZ2hwIHZlYzMgb3JpY29sID0gdGV4dHVyZTJEKHRleCwgdmVjMihxLngsIHEueSkpLnh5ejsKICAgIGhpZ2hwIGZsb2F0IHggPSAoKHNpbigoMC4zMDAwMDAwMTE5MjA5Mjg5NTUwNzgxMjUgKiBpVGltZSkgKyAodXYueSAqIDIxLjApKSAqIHNpbigoMC42OTk5OTk5ODgwNzkwNzEwNDQ5MjE4NzUgKiBpVGltZSkgKyAodXYueSAqIDI5LjApKSkgKiBzaW4oKDAuMzAwMDAwMDExOTIwOTI4OTU1MDc4MTI1ICsgKDAuMzMwMDAwMDEzMTEzMDIxODUwNTg1OTM3NSAqIGlUaW1lKSkgKyAodXYueSAqIDMxLjApKSkgKiAwLjAwMTcwMDAwMDAyMjUzODAwNjMwNTY5NDU4MDA3ODEyNTsKICAgIGhpZ2hwIHZlYzMgY29sOwogICAgY29sLnggPSB0ZXh0dXJlMkQodGV4LCB2ZWMyKCh4ICsgdXYueCkgKyAwLjAwMTAwMDAwMDA0NzQ5NzQ1MTMwNTM4OTQwNDI5Njg3NSwgdXYueSArIDAuMDAxMDAwMDAwMDQ3NDk3NDUxMzA1Mzg5NDA0Mjk2ODc1KSkueCArIDAuMDUwMDAwMDAwNzQ1MDU4MDU5NjkyMzgyODEyNTsKICAgIGNvbC55ID0gdGV4dHVyZTJEKHRleCwgdmVjMigoeCArIHV2LngpICsgMC4wLCB1di55IC0gMC4wMDIwMDAwMDAwOTQ5OTQ5MDI2MTA3Nzg4MDg1OTM3NSkpLnkgKyAwLjA1MDAwMDAwMDc0NTA1ODA1OTY5MjM4MjgxMjU7CiAgICBjb2wueiA9IHRleHR1cmUyRCh0ZXgsIHZlYzIoKHggKyB1di54KSAtIDAuMDAyMDAwMDAwMDk0OTk0OTAyNjEwNzc4ODA4NTkzNzUsIHV2LnkgKyAwLjApKS56ICsgMC4wNTAwMDAwMDA3NDUwNTgwNTk2OTIzODI4MTI1OwogICAgY29sLnggKz0gKDAuMDM5OTk5OTk5MTA1OTMwMzI4MzY5MTQwNjI1ICogdGV4dHVyZTJEKHRleCwgKHZlYzIoeCArIDAuMDI1MDAwMDAwMzcyNTI5MDI5ODQ2MTkxNDA2MjUsIC0wLjAyNzAwMDAwMDcwMDM1NDU3NjExMDgzOTg0Mzc1KSAqIDAuNzUpICsgdmVjMih1di54ICsgMC4wMDEwMDAwMDAwNDc0OTc0NTEzMDUzODk0MDQyOTY4NzUsIHV2LnkgKyAwLjAwMTAwMDAwMDA0NzQ5NzQ1MTMwNTM4OTQwNDI5Njg3NSkpLngpOwogICAgY29sLnkgKz0gKDAuMDE5OTk5OTk5NTUyOTY1MTY0MTg0NTcwMzEyNSAqIHRleHR1cmUyRCh0ZXgsICh2ZWMyKHggKyAoLTAuMDIxOTk5OTk5ODgwNzkwNzEwNDQ5MjE4NzUpLCAtMC4wMTk5OTk5OTk1NTI5NjUxNjQxODQ1NzAzMTI1KSAqIDAuNzUpICsgdmVjMih1di54ICsgMC4wLCB1di55IC0gMC4wMDIwMDAwMDAwOTQ5OTQ5MDI2MTA3Nzg4MDg1OTM3NSkpLnkpOwogICAgY29sLnogKz0gKDAuMDI5OTk5OTk5MzI5NDQ3NzQ2Mjc2ODU1NDY4NzUgKiB0ZXh0dXJlMkQodGV4LCAodmVjMih4ICsgKC0wLjAxOTk5OTk5OTU1Mjk2NTE2NDE4NDU3MDMxMjUpLCAtMC4wMTc5OTk5OTkyMjUxMzk2MTc5MTk5MjE4NzUpICogMC43NSkgKyB2ZWMyKHV2LnggLSAwLjAwMjAwMDAwMDA5NDk5NDkwMjYxMDc3ODgwODU5Mzc1LCB1di55ICsgMC4wKSkueik7CiAgICBjb2wgKj0gMC44OTk5OTk5NzYxNTgxNDIwODk4NDM3NTsKICAgIGNvbCArPSB2ZWMzKDAuMTAwMDAwMDAxNDkwMTE2MTE5Mzg0NzY1NjI1KTsKICAgIGNvbCA9IGNsYW1wKChjb2wgKiAwLjYwMDAwMDAyMzg0MTg1NzkxMDE1NjI1KSArICgoKGNvbCAqIDAuNDAwMDAwMDA1OTYwNDY0NDc3NTM5MDYyNSkgKiBjb2wpICogMS4wKSwgdmVjMygwLjApLCB2ZWMzKDEuMCkpOwogICAgaGlnaHAgZmxvYXQgdmlnID0gMC4wICsgKCgoKDE2LjAgKiB1di54KSAqIHV2LnkpICogKDEuMCAtIHV2LngpKSAqICgxLjAgLSB1di55KSk7CiAgICBjb2wgKj0gdmVjMyhwb3codmlnLCAwLjMwMDAwMDAxMTkyMDkyODk1NTA3ODEyNSkpOwogICAgY29sICo9IHZlYzMoMC45NDk5OTk5ODgwNzkwNzEwNDQ5MjE4NzUsIDEuMDQ5OTk5OTUyMzE2Mjg0MTc5Njg3NSwgMC45NDk5OTk5ODgwNzkwNzEwNDQ5MjE4NzUpOwogICAgY29sICo9IDIuNzk5OTk5OTUyMzE2Mjg0MTc5Njg3NTsKICAgIGhpZ2hwIGZsb2F0IHNjYW5zID0gY2xhbXAoMC4zNDk5OTk5OTQwMzk1MzU1MjI0NjA5Mzc1ICsgKDAuMzQ5OTk5OTk0MDM5NTM1NTIyNDYwOTM3NSAqIHNpbigoMy41ICogaVRpbWUpICsgKCh1di55ICogaVJlc29sdXRpb24ueSkgKiAxLjUpKSksIDAuMCwgMS4wKTsKICAgIGhpZ2hwIGZsb2F0IHMgPSBwb3coc2NhbnMsIDEuNzAwMDAwMDQ3NjgzNzE1ODIwMzEyNSk7CiAgICBjb2wgKj0gdmVjMygwLjQwMDAwMDAwNTk2MDQ2NDQ3NzUzOTA2MjUgKyAoMC42OTk5OTk5ODgwNzkwNzEwNDQ5MjE4NzUgKiBzKSk7CiAgICBjb2wgKj0gKDEuMCArICgwLjAwOTk5OTk5OTc3NjQ4MjU4MjA5MjI4NTE1NjI1ICogc2luKDExMC4wICogaVRpbWUpKSk7CiAgICBib29sIF8zMzMgPSB1di54IDwgMC4wOwogICAgYm9vbCBfMzQwOwogICAgaWYgKCFfMzMzKQogICAgewogICAgICAgIF8zNDAgPSB1di54ID4gMS4wOwogICAgfQogICAgZWxzZQogICAgewogICAgICAgIF8zNDAgPSBfMzMzOwogICAgfQogICAgaWYgKF8zNDApCiAgICB7CiAgICAgICAgY29sICo9IDAuMDsKICAgIH0KICAgIGJvb2wgXzM0NyA9IHV2LnkgPCAwLjA7CiAgICBib29sIF8zNTQ7CiAgICBpZiAoIV8zNDcpCiAgICB7CiAgICAgICAgXzM1NCA9IHV2LnkgPiAxLjA7CiAgICB9CiAgICBlbHNlCiAgICB7CiAgICAgICAgXzM1NCA9IF8zNDc7CiAgICB9CiAgICBpZiAoXzM1NCkKICAgIHsKICAgICAgICBjb2wgKj0gMC4wOwogICAgfQogICAgY29sICo9ICh2ZWMzKDEuMCkgLSAodmVjMyhjbGFtcCgobW9kKHRleENvb3JkLngsIDIuMCkgLSAxLjApICogMi4wLCAwLjAsIDEuMCkpICogMC42NDk5OTk5NzYxNTgxNDIwODk4NDM3NSkpOwogICAgaGlnaHAgZmxvYXQgY29tcCA9IHNtb290aHN0ZXAoMC4xMDAwMDAwMDE0OTAxMTYxMTkzODQ3NjU2MjUsIDAuODk5OTk5OTc2MTU4MTQyMDg5ODQzNzUsIHNpbihpVGltZSkpOwogICAgcmV0dXJuIHZlYzQoY29sLCAxLjApOwp9Cgp2b2lkIG1haW4oKQp7CiAgICBoaWdocCB2ZWM0IG91dENvbG9yID0gQ1JUMSgpICogY29sb3I7CiAgICBoaWdocCB2ZWMzIF8zOTYgPSBvdXRDb2xvci54eXogKiBjb2xvci53OwogICAgb3V0Q29sb3IgPSB2ZWM0KF8zOTYueCwgXzM5Ni55LCBfMzk2LnosIG91dENvbG9yLncpOwogICAgZ2xfRnJhZ0RhdGFbMF0gPSBvdXRDb2xvcjsKfQoK";
kha_Shaders.postprocess_fragData1 = "s5092:I3ZlcnNpb24gMzAwIGVzCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gaGlnaHAgaW50OwoKdW5pZm9ybSBoaWdocCBzYW1wbGVyMkQgdGV4Owp1bmlmb3JtIGhpZ2hwIGZsb2F0IGlUaW1lOwp1bmlmb3JtIGhpZ2hwIHZlYzIgaVJlc29sdXRpb247CgppbiBoaWdocCB2ZWMyIHRleENvb3JkOwppbiBoaWdocCB2ZWM0IGNvbG9yOwpvdXQgaGlnaHAgdmVjNCBmcmFnQ29sb3I7CgpoaWdocCB2ZWMyIGN1cnZlKGlub3V0IGhpZ2hwIHZlYzIgdXYpCnsKICAgIHV2ID0gKHV2IC0gdmVjMigwLjUpKSAqIDIuMDsKICAgIHV2ICo9IDEuMTAwMDAwMDIzODQxODU3OTEwMTU2MjU7CiAgICB1di54ICo9ICgxLjAgKyBwb3coYWJzKHV2LnkpIC8gNS4wLCAyLjApKTsKICAgIHV2LnkgKj0gKDEuMCArIHBvdyhhYnModXYueCkgLyA0LjAsIDIuMCkpOwogICAgdXYgPSAodXYgLyB2ZWMyKDIuMCkpICsgdmVjMigwLjUpOwogICAgdXYgPSAodXYgKiAwLjkyMDAwMDAxNjY4OTMwMDUzNzEwOTM3NSkgKyB2ZWMyKDAuMDM5OTk5OTk5MTA1OTMwMzI4MzY5MTQwNjI1KTsKICAgIHJldHVybiB1djsKfQoKaGlnaHAgdmVjNCBDUlQxKCkKewogICAgaGlnaHAgdmVjMiBxID0gdGV4Q29vcmQ7CiAgICBoaWdocCB2ZWMyIHV2ID0gcTsKICAgIGhpZ2hwIHZlYzIgcGFyYW0gPSB1djsKICAgIGhpZ2hwIHZlYzIgXzc1ID0gY3VydmUocGFyYW0pOwogICAgdXYgPSBfNzU7CiAgICBoaWdocCB2ZWMzIG9yaWNvbCA9IHRleHR1cmUodGV4LCB2ZWMyKHEueCwgcS55KSkueHl6OwogICAgaGlnaHAgZmxvYXQgeCA9ICgoc2luKCgwLjMwMDAwMDAxMTkyMDkyODk1NTA3ODEyNSAqIGlUaW1lKSArICh1di55ICogMjEuMCkpICogc2luKCgwLjY5OTk5OTk4ODA3OTA3MTA0NDkyMTg3NSAqIGlUaW1lKSArICh1di55ICogMjkuMCkpKSAqIHNpbigoMC4zMDAwMDAwMTE5MjA5Mjg5NTUwNzgxMjUgKyAoMC4zMzAwMDAwMTMxMTMwMjE4NTA1ODU5Mzc1ICogaVRpbWUpKSArICh1di55ICogMzEuMCkpKSAqIDAuMDAxNzAwMDAwMDIyNTM4MDA2MzA1Njk0NTgwMDc4MTI1OwogICAgaGlnaHAgdmVjMyBjb2w7CiAgICBjb2wueCA9IHRleHR1cmUodGV4LCB2ZWMyKCh4ICsgdXYueCkgKyAwLjAwMTAwMDAwMDA0NzQ5NzQ1MTMwNTM4OTQwNDI5Njg3NSwgdXYueSArIDAuMDAxMDAwMDAwMDQ3NDk3NDUxMzA1Mzg5NDA0Mjk2ODc1KSkueCArIDAuMDUwMDAwMDAwNzQ1MDU4MDU5NjkyMzgyODEyNTsKICAgIGNvbC55ID0gdGV4dHVyZSh0ZXgsIHZlYzIoKHggKyB1di54KSArIDAuMCwgdXYueSAtIDAuMDAyMDAwMDAwMDk0OTk0OTAyNjEwNzc4ODA4NTkzNzUpKS55ICsgMC4wNTAwMDAwMDA3NDUwNTgwNTk2OTIzODI4MTI1OwogICAgY29sLnogPSB0ZXh0dXJlKHRleCwgdmVjMigoeCArIHV2LngpIC0gMC4wMDIwMDAwMDAwOTQ5OTQ5MDI2MTA3Nzg4MDg1OTM3NSwgdXYueSArIDAuMCkpLnogKyAwLjA1MDAwMDAwMDc0NTA1ODA1OTY5MjM4MjgxMjU7CiAgICBjb2wueCArPSAoMC4wMzk5OTk5OTkxMDU5MzAzMjgzNjkxNDA2MjUgKiB0ZXh0dXJlKHRleCwgKHZlYzIoeCArIDAuMDI1MDAwMDAwMzcyNTI5MDI5ODQ2MTkxNDA2MjUsIC0wLjAyNzAwMDAwMDcwMDM1NDU3NjExMDgzOTg0Mzc1KSAqIDAuNzUpICsgdmVjMih1di54ICsgMC4wMDEwMDAwMDAwNDc0OTc0NTEzMDUzODk0MDQyOTY4NzUsIHV2LnkgKyAwLjAwMTAwMDAwMDA0NzQ5NzQ1MTMwNTM4OTQwNDI5Njg3NSkpLngpOwogICAgY29sLnkgKz0gKDAuMDE5OTk5OTk5NTUyOTY1MTY0MTg0NTcwMzEyNSAqIHRleHR1cmUodGV4LCAodmVjMih4ICsgKC0wLjAyMTk5OTk5OTg4MDc5MDcxMDQ0OTIxODc1KSwgLTAuMDE5OTk5OTk5NTUyOTY1MTY0MTg0NTcwMzEyNSkgKiAwLjc1KSArIHZlYzIodXYueCArIDAuMCwgdXYueSAtIDAuMDAyMDAwMDAwMDk0OTk0OTAyNjEwNzc4ODA4NTkzNzUpKS55KTsKICAgIGNvbC56ICs9ICgwLjAyOTk5OTk5OTMyOTQ0Nzc0NjI3Njg1NTQ2ODc1ICogdGV4dHVyZSh0ZXgsICh2ZWMyKHggKyAoLTAuMDE5OTk5OTk5NTUyOTY1MTY0MTg0NTcwMzEyNSksIC0wLjAxNzk5OTk5OTIyNTEzOTYxNzkxOTkyMTg3NSkgKiAwLjc1KSArIHZlYzIodXYueCAtIDAuMDAyMDAwMDAwMDk0OTk0OTAyNjEwNzc4ODA4NTkzNzUsIHV2LnkgKyAwLjApKS56KTsKICAgIGNvbCAqPSAwLjg5OTk5OTk3NjE1ODE0MjA4OTg0Mzc1OwogICAgY29sICs9IHZlYzMoMC4xMDAwMDAwMDE0OTAxMTYxMTkzODQ3NjU2MjUpOwogICAgY29sID0gY2xhbXAoKGNvbCAqIDAuNjAwMDAwMDIzODQxODU3OTEwMTU2MjUpICsgKCgoY29sICogMC40MDAwMDAwMDU5NjA0NjQ0Nzc1MzkwNjI1KSAqIGNvbCkgKiAxLjApLCB2ZWMzKDAuMCksIHZlYzMoMS4wKSk7CiAgICBoaWdocCBmbG9hdCB2aWcgPSAwLjAgKyAoKCgoMTYuMCAqIHV2LngpICogdXYueSkgKiAoMS4wIC0gdXYueCkpICogKDEuMCAtIHV2LnkpKTsKICAgIGNvbCAqPSB2ZWMzKHBvdyh2aWcsIDAuMzAwMDAwMDExOTIwOTI4OTU1MDc4MTI1KSk7CiAgICBjb2wgKj0gdmVjMygwLjk0OTk5OTk4ODA3OTA3MTA0NDkyMTg3NSwgMS4wNDk5OTk5NTIzMTYyODQxNzk2ODc1LCAwLjk0OTk5OTk4ODA3OTA3MTA0NDkyMTg3NSk7CiAgICBjb2wgKj0gMi43OTk5OTk5NTIzMTYyODQxNzk2ODc1OwogICAgaGlnaHAgZmxvYXQgc2NhbnMgPSBjbGFtcCgwLjM0OTk5OTk5NDAzOTUzNTUyMjQ2MDkzNzUgKyAoMC4zNDk5OTk5OTQwMzk1MzU1MjI0NjA5Mzc1ICogc2luKCgzLjUgKiBpVGltZSkgKyAoKHV2LnkgKiBpUmVzb2x1dGlvbi55KSAqIDEuNSkpKSwgMC4wLCAxLjApOwogICAgaGlnaHAgZmxvYXQgcyA9IHBvdyhzY2FucywgMS43MDAwMDAwNDc2ODM3MTU4MjAzMTI1KTsKICAgIGNvbCAqPSB2ZWMzKDAuNDAwMDAwMDA1OTYwNDY0NDc3NTM5MDYyNSArICgwLjY5OTk5OTk4ODA3OTA3MTA0NDkyMTg3NSAqIHMpKTsKICAgIGNvbCAqPSAoMS4wICsgKDAuMDA5OTk5OTk5Nzc2NDgyNTgyMDkyMjg1MTU2MjUgKiBzaW4oMTEwLjAgKiBpVGltZSkpKTsKICAgIGJvb2wgXzMzMyA9IHV2LnggPCAwLjA7CiAgICBib29sIF8zNDA7CiAgICBpZiAoIV8zMzMpCiAgICB7CiAgICAgICAgXzM0MCA9IHV2LnggPiAxLjA7CiAgICB9CiAgICBlbHNlCiAgICB7CiAgICAgICAgXzM0MCA9IF8zMzM7CiAgICB9CiAgICBpZiAoXzM0MCkKICAgIHsKICAgICAgICBjb2wgKj0gMC4wOwogICAgfQogICAgYm9vbCBfMzQ3ID0gdXYueSA8IDAuMDsKICAgIGJvb2wgXzM1NDsKICAgIGlmICghXzM0NykKICAgIHsKICAgICAgICBfMzU0ID0gdXYueSA%IDEuMDsKICAgIH0KICAgIGVsc2UKICAgIHsKICAgICAgICBfMzU0ID0gXzM0NzsKICAgIH0KICAgIGlmIChfMzU0KQogICAgewogICAgICAgIGNvbCAqPSAwLjA7CiAgICB9CiAgICBjb2wgKj0gKHZlYzMoMS4wKSAtICh2ZWMzKGNsYW1wKChtb2QodGV4Q29vcmQueCwgMi4wKSAtIDEuMCkgKiAyLjAsIDAuMCwgMS4wKSkgKiAwLjY0OTk5OTk3NjE1ODE0MjA4OTg0Mzc1KSk7CiAgICBoaWdocCBmbG9hdCBjb21wID0gc21vb3Roc3RlcCgwLjEwMDAwMDAwMTQ5MDExNjExOTM4NDc2NTYyNSwgMC44OTk5OTk5NzYxNTgxNDIwODk4NDM3NSwgc2luKGlUaW1lKSk7CiAgICByZXR1cm4gdmVjNChjb2wsIDEuMCk7Cn0KCnZvaWQgbWFpbigpCnsKICAgIGhpZ2hwIHZlYzQgb3V0Q29sb3IgPSBDUlQxKCkgKiBjb2xvcjsKICAgIGhpZ2hwIHZlYzMgXzM5NiA9IG91dENvbG9yLnh5eiAqIGNvbG9yLnc7CiAgICBvdXRDb2xvciA9IHZlYzQoXzM5Ni54LCBfMzk2LnksIF8zOTYueiwgb3V0Q29sb3Iudyk7CiAgICBmcmFnQ29sb3IgPSBvdXRDb2xvcjsKfQoK";
kha_Shaders.postprocess_fragData2 = "s4938:I3ZlcnNpb24gMTAwCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gbWVkaXVtcCBpbnQ7Cgp1bmlmb3JtIG1lZGl1bXAgc2FtcGxlcjJEIHRleDsKdW5pZm9ybSBmbG9hdCBpVGltZTsKdW5pZm9ybSB2ZWMyIGlSZXNvbHV0aW9uOwoKdmFyeWluZyB2ZWMyIHRleENvb3JkOwp2YXJ5aW5nIHZlYzQgY29sb3I7Cgp2ZWMyIGN1cnZlKGlub3V0IHZlYzIgdXYpCnsKICAgIHV2ID0gKHV2IC0gdmVjMigwLjUpKSAqIDIuMDsKICAgIHV2ICo9IDEuMTAwMDAwMDIzODQxODU3OTEwMTU2MjU7CiAgICB1di54ICo9ICgxLjAgKyBwb3coYWJzKHV2LnkpIC8gNS4wLCAyLjApKTsKICAgIHV2LnkgKj0gKDEuMCArIHBvdyhhYnModXYueCkgLyA0LjAsIDIuMCkpOwogICAgdXYgPSAodXYgLyB2ZWMyKDIuMCkpICsgdmVjMigwLjUpOwogICAgdXYgPSAodXYgKiAwLjkyMDAwMDAxNjY4OTMwMDUzNzEwOTM3NSkgKyB2ZWMyKDAuMDM5OTk5OTk5MTA1OTMwMzI4MzY5MTQwNjI1KTsKICAgIHJldHVybiB1djsKfQoKdmVjNCBDUlQxKCkKewogICAgdmVjMiBxID0gdGV4Q29vcmQ7CiAgICB2ZWMyIHV2ID0gcTsKICAgIHZlYzIgcGFyYW0gPSB1djsKICAgIHZlYzIgXzc1ID0gY3VydmUocGFyYW0pOwogICAgdXYgPSBfNzU7CiAgICB2ZWMzIG9yaWNvbCA9IHRleHR1cmUyRCh0ZXgsIHZlYzIocS54LCBxLnkpKS54eXo7CiAgICBmbG9hdCB4ID0gKChzaW4oKDAuMzAwMDAwMDExOTIwOTI4OTU1MDc4MTI1ICogaVRpbWUpICsgKHV2LnkgKiAyMS4wKSkgKiBzaW4oKDAuNjk5OTk5OTg4MDc5MDcxMDQ0OTIxODc1ICogaVRpbWUpICsgKHV2LnkgKiAyOS4wKSkpICogc2luKCgwLjMwMDAwMDAxMTkyMDkyODk1NTA3ODEyNSArICgwLjMzMDAwMDAxMzExMzAyMTg1MDU4NTkzNzUgKiBpVGltZSkpICsgKHV2LnkgKiAzMS4wKSkpICogMC4wMDE3MDAwMDAwMjI1MzgwMDYzMDU2OTQ1ODAwNzgxMjU7CiAgICB2ZWMzIGNvbDsKICAgIGNvbC54ID0gdGV4dHVyZTJEKHRleCwgdmVjMigoeCArIHV2LngpICsgMC4wMDEwMDAwMDAwNDc0OTc0NTEzMDUzODk0MDQyOTY4NzUsIHV2LnkgKyAwLjAwMTAwMDAwMDA0NzQ5NzQ1MTMwNTM4OTQwNDI5Njg3NSkpLnggKyAwLjA1MDAwMDAwMDc0NTA1ODA1OTY5MjM4MjgxMjU7CiAgICBjb2wueSA9IHRleHR1cmUyRCh0ZXgsIHZlYzIoKHggKyB1di54KSArIDAuMCwgdXYueSAtIDAuMDAyMDAwMDAwMDk0OTk0OTAyNjEwNzc4ODA4NTkzNzUpKS55ICsgMC4wNTAwMDAwMDA3NDUwNTgwNTk2OTIzODI4MTI1OwogICAgY29sLnogPSB0ZXh0dXJlMkQodGV4LCB2ZWMyKCh4ICsgdXYueCkgLSAwLjAwMjAwMDAwMDA5NDk5NDkwMjYxMDc3ODgwODU5Mzc1LCB1di55ICsgMC4wKSkueiArIDAuMDUwMDAwMDAwNzQ1MDU4MDU5NjkyMzgyODEyNTsKICAgIGNvbC54ICs9ICgwLjAzOTk5OTk5OTEwNTkzMDMyODM2OTE0MDYyNSAqIHRleHR1cmUyRCh0ZXgsICh2ZWMyKHggKyAwLjAyNTAwMDAwMDM3MjUyOTAyOTg0NjE5MTQwNjI1LCAtMC4wMjcwMDAwMDA3MDAzNTQ1NzYxMTA4Mzk4NDM3NSkgKiAwLjc1KSArIHZlYzIodXYueCArIDAuMDAxMDAwMDAwMDQ3NDk3NDUxMzA1Mzg5NDA0Mjk2ODc1LCB1di55ICsgMC4wMDEwMDAwMDAwNDc0OTc0NTEzMDUzODk0MDQyOTY4NzUpKS54KTsKICAgIGNvbC55ICs9ICgwLjAxOTk5OTk5OTU1Mjk2NTE2NDE4NDU3MDMxMjUgKiB0ZXh0dXJlMkQodGV4LCAodmVjMih4ICsgKC0wLjAyMTk5OTk5OTg4MDc5MDcxMDQ0OTIxODc1KSwgLTAuMDE5OTk5OTk5NTUyOTY1MTY0MTg0NTcwMzEyNSkgKiAwLjc1KSArIHZlYzIodXYueCArIDAuMCwgdXYueSAtIDAuMDAyMDAwMDAwMDk0OTk0OTAyNjEwNzc4ODA4NTkzNzUpKS55KTsKICAgIGNvbC56ICs9ICgwLjAyOTk5OTk5OTMyOTQ0Nzc0NjI3Njg1NTQ2ODc1ICogdGV4dHVyZTJEKHRleCwgKHZlYzIoeCArICgtMC4wMTk5OTk5OTk1NTI5NjUxNjQxODQ1NzAzMTI1KSwgLTAuMDE3OTk5OTk5MjI1MTM5NjE3OTE5OTIxODc1KSAqIDAuNzUpICsgdmVjMih1di54IC0gMC4wMDIwMDAwMDAwOTQ5OTQ5MDI2MTA3Nzg4MDg1OTM3NSwgdXYueSArIDAuMCkpLnopOwogICAgY29sICo9IDAuODk5OTk5OTc2MTU4MTQyMDg5ODQzNzU7CiAgICBjb2wgKz0gdmVjMygwLjEwMDAwMDAwMTQ5MDExNjExOTM4NDc2NTYyNSk7CiAgICBjb2wgPSBjbGFtcCgoY29sICogMC42MDAwMDAwMjM4NDE4NTc5MTAxNTYyNSkgKyAoKChjb2wgKiAwLjQwMDAwMDAwNTk2MDQ2NDQ3NzUzOTA2MjUpICogY29sKSAqIDEuMCksIHZlYzMoMC4wKSwgdmVjMygxLjApKTsKICAgIGZsb2F0IHZpZyA9IDAuMCArICgoKCgxNi4wICogdXYueCkgKiB1di55KSAqICgxLjAgLSB1di54KSkgKiAoMS4wIC0gdXYueSkpOwogICAgY29sICo9IHZlYzMocG93KHZpZywgMC4zMDAwMDAwMTE5MjA5Mjg5NTUwNzgxMjUpKTsKICAgIGNvbCAqPSB2ZWMzKDAuOTQ5OTk5OTg4MDc5MDcxMDQ0OTIxODc1LCAxLjA0OTk5OTk1MjMxNjI4NDE3OTY4NzUsIDAuOTQ5OTk5OTg4MDc5MDcxMDQ0OTIxODc1KTsKICAgIGNvbCAqPSAyLjc5OTk5OTk1MjMxNjI4NDE3OTY4NzU7CiAgICBmbG9hdCBzY2FucyA9IGNsYW1wKDAuMzQ5OTk5OTk0MDM5NTM1NTIyNDYwOTM3NSArICgwLjM0OTk5OTk5NDAzOTUzNTUyMjQ2MDkzNzUgKiBzaW4oKDMuNSAqIGlUaW1lKSArICgodXYueSAqIGlSZXNvbHV0aW9uLnkpICogMS41KSkpLCAwLjAsIDEuMCk7CiAgICBmbG9hdCBzID0gcG93KHNjYW5zLCAxLjcwMDAwMDA0NzY4MzcxNTgyMDMxMjUpOwogICAgY29sICo9IHZlYzMoMC40MDAwMDAwMDU5NjA0NjQ0Nzc1MzkwNjI1ICsgKDAuNjk5OTk5OTg4MDc5MDcxMDQ0OTIxODc1ICogcykpOwogICAgY29sICo9ICgxLjAgKyAoMC4wMDk5OTk5OTk3NzY0ODI1ODIwOTIyODUxNTYyNSAqIHNpbigxMTAuMCAqIGlUaW1lKSkpOwogICAgYm9vbCBfMzMzID0gdXYueCA8IDAuMDsKICAgIGJvb2wgXzM0MDsKICAgIGlmICghXzMzMykKICAgIHsKICAgICAgICBfMzQwID0gdXYueCA%IDEuMDsKICAgIH0KICAgIGVsc2UKICAgIHsKICAgICAgICBfMzQwID0gXzMzMzsKICAgIH0KICAgIGlmIChfMzQwKQogICAgewogICAgICAgIGNvbCAqPSAwLjA7CiAgICB9CiAgICBib29sIF8zNDcgPSB1di55IDwgMC4wOwogICAgYm9vbCBfMzU0OwogICAgaWYgKCFfMzQ3KQogICAgewogICAgICAgIF8zNTQgPSB1di55ID4gMS4wOwogICAgfQogICAgZWxzZQogICAgewogICAgICAgIF8zNTQgPSBfMzQ3OwogICAgfQogICAgaWYgKF8zNTQpCiAgICB7CiAgICAgICAgY29sICo9IDAuMDsKICAgIH0KICAgIGNvbCAqPSAodmVjMygxLjApIC0gKHZlYzMoY2xhbXAoKG1vZCh0ZXhDb29yZC54LCAyLjApIC0gMS4wKSAqIDIuMCwgMC4wLCAxLjApKSAqIDAuNjQ5OTk5OTc2MTU4MTQyMDg5ODQzNzUpKTsKICAgIGZsb2F0IGNvbXAgPSBzbW9vdGhzdGVwKDAuMTAwMDAwMDAxNDkwMTE2MTE5Mzg0NzY1NjI1LCAwLjg5OTk5OTk3NjE1ODE0MjA4OTg0Mzc1LCBzaW4oaVRpbWUpKTsKICAgIHJldHVybiB2ZWM0KGNvbCwgMS4wKTsKfQoKdm9pZCBtYWluKCkKewogICAgdmVjNCBvdXRDb2xvciA9IENSVDEoKSAqIGNvbG9yOwogICAgdmVjMyBfMzk2ID0gb3V0Q29sb3IueHl6ICogY29sb3IudzsKICAgIG91dENvbG9yID0gdmVjNChfMzk2LngsIF8zOTYueSwgXzM5Ni56LCBvdXRDb2xvci53KTsKICAgIGdsX0ZyYWdEYXRhWzBdID0gb3V0Q29sb3I7Cn0KCg";
kha_Shaders.quad_vertData0 = "s214:I3ZlcnNpb24gMTAwCgp2YXJ5aW5nIHZlYzIgdGV4Q29vcmQ7CmF0dHJpYnV0ZSB2ZWMyIHBvczsKCnZvaWQgbWFpbigpCnsKICAgIHRleENvb3JkID0gKHBvcyAqIHZlYzIoMC41KSkgKyB2ZWMyKDAuNSk7CiAgICBnbF9Qb3NpdGlvbiA9IHZlYzQocG9zLCAwLjAsIDEuMCk7Cn0KCg";
kha_Shaders.quad_vertData1 = "s203:I3ZlcnNpb24gMzAwIGVzCgpvdXQgdmVjMiB0ZXhDb29yZDsKaW4gdmVjMiBwb3M7Cgp2b2lkIG1haW4oKQp7CiAgICB0ZXhDb29yZCA9IChwb3MgKiB2ZWMyKDAuNSkpICsgdmVjMigwLjUpOwogICAgZ2xfUG9zaXRpb24gPSB2ZWM0KHBvcywgMC4wLCAxLjApOwp9Cgo";
kha_Shaders.quad_vertData2 = "s235:I3ZlcnNpb24gMTAwCgp2YXJ5aW5nIG1lZGl1bXAgdmVjMiB0ZXhDb29yZDsKYXR0cmlidXRlIG1lZGl1bXAgdmVjMiBwb3M7Cgp2b2lkIG1haW4oKQp7CiAgICB0ZXhDb29yZCA9IChwb3MgKiB2ZWMyKDAuNSkpICsgdmVjMigwLjUpOwogICAgZ2xfUG9zaXRpb24gPSB2ZWM0KHBvcywgMC4wLCAxLjApOwp9Cgo";
kha_Shaders.screenfilter_fragData0 = "s972:I3ZlcnNpb24gMTAwCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gaGlnaHAgaW50OwoKdW5pZm9ybSBoaWdocCBzYW1wbGVyMkQgdGV4OwoKdmFyeWluZyBoaWdocCB2ZWMyIHRleENvb3JkOwp2YXJ5aW5nIGhpZ2hwIHZlYzQgY29sb3I7Cgp2b2lkIG1haW4oKQp7CiAgICBoaWdocCB2ZWMyIGlSZXNvbHV0aW9uID0gdmVjMigxOTIwLjAsIDEwODAuMCk7CiAgICBoaWdocCB2ZWMyIHBpeGVsID0gdGV4Q29vcmQ7CiAgICBoaWdocCBmbG9hdCB0aW1lID0gMC4xMDAwMDAwMDE0OTAxMTYxMTkzODQ3NjU2MjU7CiAgICBoaWdocCBmbG9hdCBzY2FsZSA9IDAuNDc5OTk5OTg5MjcxMTYzOTQwNDI5Njg3NTsKICAgIGhpZ2hwIHZlYzIgY2VudGVyID0gdmVjMigtNC4wLCAxNi4wKSArIChpUmVzb2x1dGlvbiAvIHZlYzIoMi4wKSk7CiAgICBoaWdocCB2ZWMyIG9mZnNldCA9IHZlYzIoY29zKHRpbWUpLCBzaW4odGltZSkpICogMTI4LjA7CiAgICBwaXhlbCA9ICgoKHBpeGVsICsgb2Zmc2V0KSAtIGNlbnRlcikgLyB2ZWMyKHNjYWxlKSkgKyBjZW50ZXI7CiAgICBoaWdocCB2ZWMyIHV2ID0gZmxvb3IodGV4Q29vcmQpICsgdmVjMigwLjUpOwogICAgdXYgKz0gKHZlYzIoMS4wKSAtIGNsYW1wKCh2ZWMyKDEuMCkgLSBmcmFjdChwaXhlbCkpICogc2NhbGUsIHZlYzIoMC4wKSwgdmVjMigxLjApKSk7CiAgICBnbF9GcmFnRGF0YVswXSA9IHRleHR1cmUyRCh0ZXgsIHV2KTsKfQoK";
kha_Shaders.screenfilter_fragData1 = "s988:I3ZlcnNpb24gMzAwIGVzCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gaGlnaHAgaW50OwoKdW5pZm9ybSBoaWdocCBzYW1wbGVyMkQgdGV4OwoKaW4gaGlnaHAgdmVjMiB0ZXhDb29yZDsKb3V0IGhpZ2hwIHZlYzQgZnJhZ0NvbG9yOwppbiBoaWdocCB2ZWM0IGNvbG9yOwoKdm9pZCBtYWluKCkKewogICAgaGlnaHAgdmVjMiBpUmVzb2x1dGlvbiA9IHZlYzIoMTkyMC4wLCAxMDgwLjApOwogICAgaGlnaHAgdmVjMiBwaXhlbCA9IHRleENvb3JkOwogICAgaGlnaHAgZmxvYXQgdGltZSA9IDAuMTAwMDAwMDAxNDkwMTE2MTE5Mzg0NzY1NjI1OwogICAgaGlnaHAgZmxvYXQgc2NhbGUgPSAwLjQ3OTk5OTk4OTI3MTE2Mzk0MDQyOTY4NzU7CiAgICBoaWdocCB2ZWMyIGNlbnRlciA9IHZlYzIoLTQuMCwgMTYuMCkgKyAoaVJlc29sdXRpb24gLyB2ZWMyKDIuMCkpOwogICAgaGlnaHAgdmVjMiBvZmZzZXQgPSB2ZWMyKGNvcyh0aW1lKSwgc2luKHRpbWUpKSAqIDEyOC4wOwogICAgcGl4ZWwgPSAoKChwaXhlbCArIG9mZnNldCkgLSBjZW50ZXIpIC8gdmVjMihzY2FsZSkpICsgY2VudGVyOwogICAgaGlnaHAgdmVjMiB1diA9IGZsb29yKHRleENvb3JkKSArIHZlYzIoMC41KTsKICAgIHV2ICs9ICh2ZWMyKDEuMCkgLSBjbGFtcCgodmVjMigxLjApIC0gZnJhY3QocGl4ZWwpKSAqIHNjYWxlLCB2ZWMyKDAuMCksIHZlYzIoMS4wKSkpOwogICAgZnJhZ0NvbG9yID0gdGV4dHVyZSh0ZXgsIHV2KTsKfQoK";
kha_Shaders.screenfilter_fragData2 = "s906:I3ZlcnNpb24gMTAwCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gbWVkaXVtcCBpbnQ7Cgp1bmlmb3JtIG1lZGl1bXAgc2FtcGxlcjJEIHRleDsKCnZhcnlpbmcgdmVjMiB0ZXhDb29yZDsKdmFyeWluZyB2ZWM0IGNvbG9yOwoKdm9pZCBtYWluKCkKewogICAgdmVjMiBpUmVzb2x1dGlvbiA9IHZlYzIoMTkyMC4wLCAxMDgwLjApOwogICAgdmVjMiBwaXhlbCA9IHRleENvb3JkOwogICAgZmxvYXQgdGltZSA9IDAuMTAwMDAwMDAxNDkwMTE2MTE5Mzg0NzY1NjI1OwogICAgZmxvYXQgc2NhbGUgPSAwLjQ3OTk5OTk4OTI3MTE2Mzk0MDQyOTY4NzU7CiAgICB2ZWMyIGNlbnRlciA9IHZlYzIoLTQuMCwgMTYuMCkgKyAoaVJlc29sdXRpb24gLyB2ZWMyKDIuMCkpOwogICAgdmVjMiBvZmZzZXQgPSB2ZWMyKGNvcyh0aW1lKSwgc2luKHRpbWUpKSAqIDEyOC4wOwogICAgcGl4ZWwgPSAoKChwaXhlbCArIG9mZnNldCkgLSBjZW50ZXIpIC8gdmVjMihzY2FsZSkpICsgY2VudGVyOwogICAgdmVjMiB1diA9IGZsb29yKHRleENvb3JkKSArIHZlYzIoMC41KTsKICAgIHV2ICs9ICh2ZWMyKDEuMCkgLSBjbGFtcCgodmVjMigxLjApIC0gZnJhY3QocGl4ZWwpKSAqIHNjYWxlLCB2ZWMyKDAuMCksIHZlYzIoMS4wKSkpOwogICAgZ2xfRnJhZ0RhdGFbMF0gPSB0ZXh0dXJlMkQodGV4LCB1dik7Cn0KCg";
kha_Shaders.sh_fragData0 = "s21619:";
kha_Shaders.sh_fragData1 = "s21644:";
kha_Shaders.sh_fragData2 = "s19326:";
kha_Shaders.sh_vertData0 = "s682:I3ZlcnNpb24gMTAwCgp1bmlmb3JtIHZlYzIgaVJlc29sdXRpb247CnVuaWZvcm0gdmVjMiBpVmlld3BvcnRSZXNvbHV0aW9uOwp1bmlmb3JtIHZlYzIgaVBvczsKdW5pZm9ybSBmbG9hdCBpVGltZTsKCnZhcnlpbmcgdmVjMiBmcmFnQ29vcmQ7CmF0dHJpYnV0ZSB2ZWMyIHBvczsKCnZvaWQgbWFpbigpCnsKICAgIGZyYWdDb29yZCA9ICgocG9zICogdmVjMigwLjUpKSArIHZlYzIoMC41KSkgKiBpUmVzb2x1dGlvbjsKICAgIHZlYzIgb2YgPSB2ZWMyKGlSZXNvbHV0aW9uLnggLyBpVmlld3BvcnRSZXNvbHV0aW9uLngsIGlSZXNvbHV0aW9uLnkgLyBpVmlld3BvcnRSZXNvbHV0aW9uLnkpOwogICAgZ2xfUG9zaXRpb24gPSB2ZWM0KCgocG9zLnggKiBvZi54KSAtICgxLjAgLSBvZi54KSkgKyAoaVBvcy54IC8gaVZpZXdwb3J0UmVzb2x1dGlvbi54KSwgKCgoLXBvcy55KSAqIG9mLnkpIC0gKDEuMCAtIG9mLnkpKSArIChpUG9zLnkgLyBpVmlld3BvcnRSZXNvbHV0aW9uLnkpLCAwLjAsIDEuMCk7Cn0KCg";
kha_Shaders.sh_vertData1 = "s671:I3ZlcnNpb24gMzAwIGVzCgp1bmlmb3JtIHZlYzIgaVJlc29sdXRpb247CnVuaWZvcm0gdmVjMiBpVmlld3BvcnRSZXNvbHV0aW9uOwp1bmlmb3JtIHZlYzIgaVBvczsKdW5pZm9ybSBmbG9hdCBpVGltZTsKCm91dCB2ZWMyIGZyYWdDb29yZDsKaW4gdmVjMiBwb3M7Cgp2b2lkIG1haW4oKQp7CiAgICBmcmFnQ29vcmQgPSAoKHBvcyAqIHZlYzIoMC41KSkgKyB2ZWMyKDAuNSkpICogaVJlc29sdXRpb247CiAgICB2ZWMyIG9mID0gdmVjMihpUmVzb2x1dGlvbi54IC8gaVZpZXdwb3J0UmVzb2x1dGlvbi54LCBpUmVzb2x1dGlvbi55IC8gaVZpZXdwb3J0UmVzb2x1dGlvbi55KTsKICAgIGdsX1Bvc2l0aW9uID0gdmVjNCgoKHBvcy54ICogb2YueCkgLSAoMS4wIC0gb2YueCkpICsgKGlQb3MueCAvIGlWaWV3cG9ydFJlc29sdXRpb24ueCksICgoKC1wb3MueSkgKiBvZi55KSAtICgxLjAgLSBvZi55KSkgKyAoaVBvcy55IC8gaVZpZXdwb3J0UmVzb2x1dGlvbi55KSwgMC4wLCAxLjApOwp9Cgo";
kha_Shaders.sh_vertData2 = "s756:I3ZlcnNpb24gMTAwCgp1bmlmb3JtIG1lZGl1bXAgdmVjMiBpUmVzb2x1dGlvbjsKdW5pZm9ybSBtZWRpdW1wIHZlYzIgaVZpZXdwb3J0UmVzb2x1dGlvbjsKdW5pZm9ybSBtZWRpdW1wIHZlYzIgaVBvczsKdW5pZm9ybSBtZWRpdW1wIGZsb2F0IGlUaW1lOwoKdmFyeWluZyBtZWRpdW1wIHZlYzIgZnJhZ0Nvb3JkOwphdHRyaWJ1dGUgbWVkaXVtcCB2ZWMyIHBvczsKCnZvaWQgbWFpbigpCnsKICAgIGZyYWdDb29yZCA9ICgocG9zICogdmVjMigwLjUpKSArIHZlYzIoMC41KSkgKiBpUmVzb2x1dGlvbjsKICAgIG1lZGl1bXAgdmVjMiBvZiA9IHZlYzIoaVJlc29sdXRpb24ueCAvIGlWaWV3cG9ydFJlc29sdXRpb24ueCwgaVJlc29sdXRpb24ueSAvIGlWaWV3cG9ydFJlc29sdXRpb24ueSk7CiAgICBnbF9Qb3NpdGlvbiA9IHZlYzQoKChwb3MueCAqIG9mLngpIC0gKDEuMCAtIG9mLngpKSArIChpUG9zLnggLyBpVmlld3BvcnRSZXNvbHV0aW9uLngpLCAoKCgtcG9zLnkpICogb2YueSkgLSAoMS4wIC0gb2YueSkpICsgKGlQb3MueSAvIGlWaWV3cG9ydFJlc29sdXRpb24ueSksIDAuMCwgMS4wKTsKfQoK";
kha_Shaders.simple_fragData0 = "s212:I3ZlcnNpb24gMTAwCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gaGlnaHAgaW50OwoKdmFyeWluZyBoaWdocCB2ZWMzIGZyYWdtZW50Q29sb3I7Cgp2b2lkIG1haW4oKQp7CiAgICBnbF9GcmFnRGF0YVswXSA9IHZlYzQoZnJhZ21lbnRDb2xvciwgMS4wKTsKfQoK";
kha_Shaders.simple_fragData1 = "s224:I3ZlcnNpb24gMzAwIGVzCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gaGlnaHAgaW50OwoKb3V0IGhpZ2hwIHZlYzQgZnJhZzsKaW4gaGlnaHAgdmVjMyBmcmFnbWVudENvbG9yOwoKdm9pZCBtYWluKCkKewogICAgZnJhZyA9IHZlYzQoZnJhZ21lbnRDb2xvciwgMS4wKTsKfQoK";
kha_Shaders.simple_fragData2 = "s207:I3ZlcnNpb24gMTAwCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gbWVkaXVtcCBpbnQ7Cgp2YXJ5aW5nIHZlYzMgZnJhZ21lbnRDb2xvcjsKCnZvaWQgbWFpbigpCnsKICAgIGdsX0ZyYWdEYXRhWzBdID0gdmVjNChmcmFnbWVudENvbG9yLCAxLjApOwp9Cgo";
kha_Shaders.simple_vertData0 = "s242:I3ZlcnNpb24gMTAwCgphdHRyaWJ1dGUgbWF0NCBtOwphdHRyaWJ1dGUgdmVjMyBwb3M7CnZhcnlpbmcgdmVjMyBmcmFnbWVudENvbG9yOwphdHRyaWJ1dGUgdmVjMyBjb2w7Cgp2b2lkIG1haW4oKQp7CiAgICBnbF9Qb3NpdGlvbiA9IG0gKiB2ZWM0KHBvcywgMS4wKTsKICAgIGZyYWdtZW50Q29sb3IgPSBjb2w7Cn0KCg";
kha_Shaders.simple_vertData1 = "s212:I3ZlcnNpb24gMzAwIGVzCgppbiBtYXQ0IG07CmluIHZlYzMgcG9zOwpvdXQgdmVjMyBmcmFnbWVudENvbG9yOwppbiB2ZWMzIGNvbDsKCnZvaWQgbWFpbigpCnsKICAgIGdsX1Bvc2l0aW9uID0gbSAqIHZlYzQocG9zLCAxLjApOwogICAgZnJhZ21lbnRDb2xvciA9IGNvbDsKfQoK";
kha_Shaders.simple_vertData2 = "s284:I3ZlcnNpb24gMTAwCgphdHRyaWJ1dGUgbWVkaXVtcCBtYXQ0IG07CmF0dHJpYnV0ZSBtZWRpdW1wIHZlYzMgcG9zOwp2YXJ5aW5nIG1lZGl1bXAgdmVjMyBmcmFnbWVudENvbG9yOwphdHRyaWJ1dGUgbWVkaXVtcCB2ZWMzIGNvbDsKCnZvaWQgbWFpbigpCnsKICAgIGdsX1Bvc2l0aW9uID0gbSAqIHZlYzQocG9zLCAxLjApOwogICAgZnJhZ21lbnRDb2xvciA9IGNvbDsKfQoK";
kha_Shaders.sinescroll_fragData0 = "s960:I3ZlcnNpb24gMTAwCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gaGlnaHAgaW50OwoKdW5pZm9ybSBoaWdocCB2ZWMyIHJlc29sdXRpb247CnVuaWZvcm0gaGlnaHAgdmVjMiBzY3JvbGxSZXM7CnVuaWZvcm0gaGlnaHAgZmxvYXQgdGltZTsKdW5pZm9ybSBoaWdocCBmbG9hdCBmcmVxdWVuY3k7CnVuaWZvcm0gaGlnaHAgZmxvYXQgYW1wbGl0dWRlOwp1bmlmb3JtIGhpZ2hwIHNhbXBsZXIyRCB0ZXg7CnVuaWZvcm0gaGlnaHAgZmxvYXQgeW9mZnNldDsKCnZhcnlpbmcgaGlnaHAgdmVjMiB0ZXhDb29yZDsKdmFyeWluZyBoaWdocCB2ZWM0IGNvbG9yOwoKdm9pZCBtYWluKCkKewogICAgaGlnaHAgdmVjMiBzZiA9IHJlc29sdXRpb24gLyBzY3JvbGxSZXM7CiAgICBoaWdocCB2ZWMyIHlwb3MgPSB2ZWMyKHRleENvb3JkLngsIHRleENvb3JkLnkpICogc2Y7CiAgICB5cG9zLnkgLT0gKCgwLjUgKiBzZi55KSArIChzaW4odGltZSArICgodGV4Q29vcmQueCAqIHNmLngpICogZnJlcXVlbmN5KSkgKiBhbXBsaXR1ZGUpKTsKICAgIGhpZ2hwIHZlYzQgdGV4Y29sb3IgPSB0ZXh0dXJlMkQodGV4LCB5cG9zKSAqIGNvbG9yOwogICAgaGlnaHAgdmVjMyBfNzYgPSB0ZXhjb2xvci54eXogKiBjb2xvci53OwogICAgdGV4Y29sb3IgPSB2ZWM0KF83Ni54LCBfNzYueSwgXzc2LnosIHRleGNvbG9yLncpOwogICAgZ2xfRnJhZ0RhdGFbMF0gPSB0ZXhjb2xvcjsKfQoK";
kha_Shaders.sinescroll_fragData1 = "s976:I3ZlcnNpb24gMzAwIGVzCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gaGlnaHAgaW50OwoKdW5pZm9ybSBoaWdocCB2ZWMyIHJlc29sdXRpb247CnVuaWZvcm0gaGlnaHAgdmVjMiBzY3JvbGxSZXM7CnVuaWZvcm0gaGlnaHAgZmxvYXQgdGltZTsKdW5pZm9ybSBoaWdocCBmbG9hdCBmcmVxdWVuY3k7CnVuaWZvcm0gaGlnaHAgZmxvYXQgYW1wbGl0dWRlOwp1bmlmb3JtIGhpZ2hwIHNhbXBsZXIyRCB0ZXg7CnVuaWZvcm0gaGlnaHAgZmxvYXQgeW9mZnNldDsKCmluIGhpZ2hwIHZlYzIgdGV4Q29vcmQ7CmluIGhpZ2hwIHZlYzQgY29sb3I7Cm91dCBoaWdocCB2ZWM0IGZyYWdDb2xvcjsKCnZvaWQgbWFpbigpCnsKICAgIGhpZ2hwIHZlYzIgc2YgPSByZXNvbHV0aW9uIC8gc2Nyb2xsUmVzOwogICAgaGlnaHAgdmVjMiB5cG9zID0gdmVjMih0ZXhDb29yZC54LCB0ZXhDb29yZC55KSAqIHNmOwogICAgeXBvcy55IC09ICgoMC41ICogc2YueSkgKyAoc2luKHRpbWUgKyAoKHRleENvb3JkLnggKiBzZi54KSAqIGZyZXF1ZW5jeSkpICogYW1wbGl0dWRlKSk7CiAgICBoaWdocCB2ZWM0IHRleGNvbG9yID0gdGV4dHVyZSh0ZXgsIHlwb3MpICogY29sb3I7CiAgICBoaWdocCB2ZWMzIF83NiA9IHRleGNvbG9yLnh5eiAqIGNvbG9yLnc7CiAgICB0ZXhjb2xvciA9IHZlYzQoXzc2LngsIF83Ni55LCBfNzYueiwgdGV4Y29sb3Iudyk7CiAgICBmcmFnQ29sb3IgPSB0ZXhjb2xvcjsKfQoK";
kha_Shaders.sinescroll_fragData2 = "s870:I3ZlcnNpb24gMTAwCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gbWVkaXVtcCBpbnQ7Cgp1bmlmb3JtIHZlYzIgcmVzb2x1dGlvbjsKdW5pZm9ybSB2ZWMyIHNjcm9sbFJlczsKdW5pZm9ybSBmbG9hdCB0aW1lOwp1bmlmb3JtIGZsb2F0IGZyZXF1ZW5jeTsKdW5pZm9ybSBmbG9hdCBhbXBsaXR1ZGU7CnVuaWZvcm0gbWVkaXVtcCBzYW1wbGVyMkQgdGV4Owp1bmlmb3JtIGZsb2F0IHlvZmZzZXQ7Cgp2YXJ5aW5nIHZlYzIgdGV4Q29vcmQ7CnZhcnlpbmcgdmVjNCBjb2xvcjsKCnZvaWQgbWFpbigpCnsKICAgIHZlYzIgc2YgPSByZXNvbHV0aW9uIC8gc2Nyb2xsUmVzOwogICAgdmVjMiB5cG9zID0gdmVjMih0ZXhDb29yZC54LCB0ZXhDb29yZC55KSAqIHNmOwogICAgeXBvcy55IC09ICgoMC41ICogc2YueSkgKyAoc2luKHRpbWUgKyAoKHRleENvb3JkLnggKiBzZi54KSAqIGZyZXF1ZW5jeSkpICogYW1wbGl0dWRlKSk7CiAgICB2ZWM0IHRleGNvbG9yID0gdGV4dHVyZTJEKHRleCwgeXBvcykgKiBjb2xvcjsKICAgIHZlYzMgXzc2ID0gdGV4Y29sb3IueHl6ICogY29sb3IudzsKICAgIHRleGNvbG9yID0gdmVjNChfNzYueCwgXzc2LnksIF83Ni56LCB0ZXhjb2xvci53KTsKICAgIGdsX0ZyYWdEYXRhWzBdID0gdGV4Y29sb3I7Cn0KCg";
kha_Shaders.standard_fragData0 = "s471:I3ZlcnNpb24gMTAwCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gaGlnaHAgaW50OwoKdW5pZm9ybSBoaWdocCBzYW1wbGVyMkQgdGV4OwoKdmFyeWluZyBoaWdocCB2ZWMyIHRleENvb3JkOwp2YXJ5aW5nIGhpZ2hwIHZlYzQgY29sb3I7Cgp2b2lkIG1haW4oKQp7CiAgICBoaWdocCB2ZWM0IHRleGNvbG9yID0gdGV4dHVyZTJEKHRleCwgdGV4Q29vcmQpICogY29sb3I7CiAgICBoaWdocCB2ZWMzIF8zMiA9IHRleGNvbG9yLnh5eiAqIGNvbG9yLnc7CiAgICB0ZXhjb2xvciA9IHZlYzQoXzMyLngsIF8zMi55LCBfMzIueiwgdGV4Y29sb3Iudyk7CiAgICBnbF9GcmFnRGF0YVswXSA9IHRleGNvbG9yOwp9Cgo";
kha_Shaders.standard_fragData1 = "s487:I3ZlcnNpb24gMzAwIGVzCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gaGlnaHAgaW50OwoKdW5pZm9ybSBoaWdocCBzYW1wbGVyMkQgdGV4OwoKaW4gaGlnaHAgdmVjMiB0ZXhDb29yZDsKaW4gaGlnaHAgdmVjNCBjb2xvcjsKb3V0IGhpZ2hwIHZlYzQgZnJhZ0NvbG9yOwoKdm9pZCBtYWluKCkKewogICAgaGlnaHAgdmVjNCB0ZXhjb2xvciA9IHRleHR1cmUodGV4LCB0ZXhDb29yZCkgKiBjb2xvcjsKICAgIGhpZ2hwIHZlYzMgXzMyID0gdGV4Y29sb3IueHl6ICogY29sb3IudzsKICAgIHRleGNvbG9yID0gdmVjNChfMzIueCwgXzMyLnksIF8zMi56LCB0ZXhjb2xvci53KTsKICAgIGZyYWdDb2xvciA9IHRleGNvbG9yOwp9Cgo";
kha_Shaders.standard_fragData2 = "s444:I3ZlcnNpb24gMTAwCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gbWVkaXVtcCBpbnQ7Cgp1bmlmb3JtIG1lZGl1bXAgc2FtcGxlcjJEIHRleDsKCnZhcnlpbmcgdmVjMiB0ZXhDb29yZDsKdmFyeWluZyB2ZWM0IGNvbG9yOwoKdm9pZCBtYWluKCkKewogICAgdmVjNCB0ZXhjb2xvciA9IHRleHR1cmUyRCh0ZXgsIHRleENvb3JkKSAqIGNvbG9yOwogICAgdmVjMyBfMzIgPSB0ZXhjb2xvci54eXogKiBjb2xvci53OwogICAgdGV4Y29sb3IgPSB2ZWM0KF8zMi54LCBfMzIueSwgXzMyLnosIHRleGNvbG9yLncpOwogICAgZ2xfRnJhZ0RhdGFbMF0gPSB0ZXhjb2xvcjsKfQoK";
kha_Shaders.test2_fragData0 = "s2131:I3ZlcnNpb24gMTAwCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gaGlnaHAgaW50OwoKdW5pZm9ybSBoaWdocCB2ZWMyIGlSZXNvbHV0aW9uOwp1bmlmb3JtIGhpZ2hwIHNhbXBsZXIyRCB0ZXg7CnVuaWZvcm0gaGlnaHAgZmxvYXQgaVRpbWU7CnVuaWZvcm0gaGlnaHAgdmVjMiBwb3NpdGlvbjsKdW5pZm9ybSBoaWdocCBmbG9hdCB0aW1lb2Zmc2V0OwoKdmFyeWluZyBoaWdocCB2ZWMyIHRleENvb3JkOwp2YXJ5aW5nIGhpZ2hwIHZlYzQgY29sb3I7CgpoaWdocCB2ZWM0IGJsdXIoaGlnaHAgdmVjMiB1dmQsIGhpZ2hwIGZsb2F0IGJsdXJBbW91bnQsIGhpZ2hwIGZsb2F0IHBvd2VyKQp7CiAgICBoaWdocCB2ZWMyIHBpeGVsID0gdmVjMigxLjApIC8gaVJlc29sdXRpb247CiAgICBoaWdocCBmbG9hdCBjb3VudCA9IDEuMDsKICAgIGhpZ2hwIHZlYzQgY29sb3JfMSA9IHRleHR1cmUyRCh0ZXgsIHV2ZCkgKiBjb3VudDsKICAgIGhpZ2hwIGZsb2F0IHJyID0gNS4wICogYmx1ckFtb3VudDsKICAgIGZvciAoaGlnaHAgZmxvYXQgZGlyZWN0aW9uU3RlcCA9IDAuMzE0MTU5Mjc0MTAxMjU3MzI0MjE4NzUsIGQgPSAwLjA7IGQgPCA2LjI4MzE4NTQ4MjAyNTE0NjQ4NDM3NTsgZCArPSBkaXJlY3Rpb25TdGVwKQogICAgewogICAgICAgIGhpZ2hwIGZsb2F0IGMgPSBjb3MoZCk7CiAgICAgICAgaGlnaHAgZmxvYXQgcyA9IHNpbihkKTsKICAgICAgICBoaWdocCBmbG9hdCBkaXN0ID0gMC4xMDAwMDAwMDE0OTAxMTYxMTkzODQ3NjU2MjUgLyBtYXgoYWJzKGMpLCBhYnMocykpOwogICAgICAgIGhpZ2hwIHZlYzIgb2ZmID0gdmVjMihjLCBzKTsKICAgICAgICBmb3IgKGhpZ2hwIGZsb2F0IGRpc3QyID0gZGlzdCAqIDIuMCwgaSA9IGRpc3QgKiAxLjU7IGkgPD0gcnI7IGkgKz0gZGlzdDIpCiAgICAgICAgewogICAgICAgICAgICBoaWdocCBmbG9hdCB3ZWlnaHQgPSBpIC8gcnI7CiAgICAgICAgICAgIGNvdW50ICs9IHdlaWdodDsKICAgICAgICAgICAgY29sb3JfMSArPSAoKHRleHR1cmUyRCh0ZXgsIHV2ZCArICgob2ZmICogcGl4ZWwpICogaSkpICogd2VpZ2h0KSAqIHBvd2VyKTsKICAgICAgICB9CiAgICB9CiAgICByZXR1cm4gY29sb3JfMSAvIHZlYzQoY291bnQpOwp9Cgp2b2lkIG1haW4oKQp7CiAgICBoaWdocCB2ZWM0IGZpbmNvbCA9IHRleHR1cmUyRCh0ZXgsIHRleENvb3JkKTsKICAgIGhpZ2hwIHZlYzMgXzEzNyA9IGZpbmNvbC54eXogKiBjb2xvci53OwogICAgZmluY29sID0gdmVjNChfMTM3LngsIF8xMzcueSwgXzEzNy56LCBmaW5jb2wudyk7CiAgICBnbF9GcmFnRGF0YVswXSA9IGZpbmNvbDsKICAgIGhpZ2hwIHZlYzIgdXYgPSB0ZXhDb29yZDsKICAgIGhpZ2hwIGZsb2F0IGJsdXJBbW91bnQgPSAyLjAgKyAoc2luKGlUaW1lKSAqIDQuMCk7CiAgICBoaWdocCB2ZWMyIHBhcmFtID0gdXY7CiAgICBoaWdocCBmbG9hdCBwYXJhbV8xID0gYmx1ckFtb3VudDsKICAgIGhpZ2hwIGZsb2F0IHBhcmFtXzIgPSAxLjU7CiAgICBoaWdocCB2ZWM0IGIgPSBibHVyKHBhcmFtLCBwYXJhbV8xLCBwYXJhbV8yKSAqIGNvbG9yOwogICAgYiAqPSBjb2xvci53OwogICAgZ2xfRnJhZ0RhdGFbMF0gPSBiOwp9Cgo";
kha_Shaders.test2_fragData1 = "s2135:I3ZlcnNpb24gMzAwIGVzCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gaGlnaHAgaW50OwoKdW5pZm9ybSBoaWdocCB2ZWMyIGlSZXNvbHV0aW9uOwp1bmlmb3JtIGhpZ2hwIHNhbXBsZXIyRCB0ZXg7CnVuaWZvcm0gaGlnaHAgZmxvYXQgaVRpbWU7CnVuaWZvcm0gaGlnaHAgdmVjMiBwb3NpdGlvbjsKdW5pZm9ybSBoaWdocCBmbG9hdCB0aW1lb2Zmc2V0OwoKaW4gaGlnaHAgdmVjMiB0ZXhDb29yZDsKaW4gaGlnaHAgdmVjNCBjb2xvcjsKb3V0IGhpZ2hwIHZlYzQgZnJhZ0NvbG9yOwoKaGlnaHAgdmVjNCBibHVyKGhpZ2hwIHZlYzIgdXZkLCBoaWdocCBmbG9hdCBibHVyQW1vdW50LCBoaWdocCBmbG9hdCBwb3dlcikKewogICAgaGlnaHAgdmVjMiBwaXhlbCA9IHZlYzIoMS4wKSAvIGlSZXNvbHV0aW9uOwogICAgaGlnaHAgZmxvYXQgY291bnQgPSAxLjA7CiAgICBoaWdocCB2ZWM0IGNvbG9yXzEgPSB0ZXh0dXJlKHRleCwgdXZkKSAqIGNvdW50OwogICAgaGlnaHAgZmxvYXQgcnIgPSA1LjAgKiBibHVyQW1vdW50OwogICAgZm9yIChoaWdocCBmbG9hdCBkaXJlY3Rpb25TdGVwID0gMC4zMTQxNTkyNzQxMDEyNTczMjQyMTg3NSwgZCA9IDAuMDsgZCA8IDYuMjgzMTg1NDgyMDI1MTQ2NDg0Mzc1OyBkICs9IGRpcmVjdGlvblN0ZXApCiAgICB7CiAgICAgICAgaGlnaHAgZmxvYXQgYyA9IGNvcyhkKTsKICAgICAgICBoaWdocCBmbG9hdCBzID0gc2luKGQpOwogICAgICAgIGhpZ2hwIGZsb2F0IGRpc3QgPSAwLjEwMDAwMDAwMTQ5MDExNjExOTM4NDc2NTYyNSAvIG1heChhYnMoYyksIGFicyhzKSk7CiAgICAgICAgaGlnaHAgdmVjMiBvZmYgPSB2ZWMyKGMsIHMpOwogICAgICAgIGZvciAoaGlnaHAgZmxvYXQgZGlzdDIgPSBkaXN0ICogMi4wLCBpID0gZGlzdCAqIDEuNTsgaSA8PSBycjsgaSArPSBkaXN0MikKICAgICAgICB7CiAgICAgICAgICAgIGhpZ2hwIGZsb2F0IHdlaWdodCA9IGkgLyBycjsKICAgICAgICAgICAgY291bnQgKz0gd2VpZ2h0OwogICAgICAgICAgICBjb2xvcl8xICs9ICgodGV4dHVyZSh0ZXgsIHV2ZCArICgob2ZmICogcGl4ZWwpICogaSkpICogd2VpZ2h0KSAqIHBvd2VyKTsKICAgICAgICB9CiAgICB9CiAgICByZXR1cm4gY29sb3JfMSAvIHZlYzQoY291bnQpOwp9Cgp2b2lkIG1haW4oKQp7CiAgICBoaWdocCB2ZWM0IGZpbmNvbCA9IHRleHR1cmUodGV4LCB0ZXhDb29yZCk7CiAgICBoaWdocCB2ZWMzIF8xMzcgPSBmaW5jb2wueHl6ICogY29sb3IudzsKICAgIGZpbmNvbCA9IHZlYzQoXzEzNy54LCBfMTM3LnksIF8xMzcueiwgZmluY29sLncpOwogICAgZnJhZ0NvbG9yID0gZmluY29sOwogICAgaGlnaHAgdmVjMiB1diA9IHRleENvb3JkOwogICAgaGlnaHAgZmxvYXQgYmx1ckFtb3VudCA9IDIuMCArIChzaW4oaVRpbWUpICogNC4wKTsKICAgIGhpZ2hwIHZlYzIgcGFyYW0gPSB1djsKICAgIGhpZ2hwIGZsb2F0IHBhcmFtXzEgPSBibHVyQW1vdW50OwogICAgaGlnaHAgZmxvYXQgcGFyYW1fMiA9IDEuNTsKICAgIGhpZ2hwIHZlYzQgYiA9IGJsdXIocGFyYW0sIHBhcmFtXzEsIHBhcmFtXzIpICogY29sb3I7CiAgICBiICo9IGNvbG9yLnc7CiAgICBmcmFnQ29sb3IgPSBiOwp9Cgo";
kha_Shaders.test2_fragData2 = "s1904:I3ZlcnNpb24gMTAwCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gbWVkaXVtcCBpbnQ7Cgp1bmlmb3JtIHZlYzIgaVJlc29sdXRpb247CnVuaWZvcm0gbWVkaXVtcCBzYW1wbGVyMkQgdGV4Owp1bmlmb3JtIGZsb2F0IGlUaW1lOwp1bmlmb3JtIHZlYzIgcG9zaXRpb247CnVuaWZvcm0gZmxvYXQgdGltZW9mZnNldDsKCnZhcnlpbmcgdmVjMiB0ZXhDb29yZDsKdmFyeWluZyB2ZWM0IGNvbG9yOwoKdmVjNCBibHVyKHZlYzIgdXZkLCBmbG9hdCBibHVyQW1vdW50LCBmbG9hdCBwb3dlcikKewogICAgdmVjMiBwaXhlbCA9IHZlYzIoMS4wKSAvIGlSZXNvbHV0aW9uOwogICAgZmxvYXQgY291bnQgPSAxLjA7CiAgICB2ZWM0IGNvbG9yXzEgPSB0ZXh0dXJlMkQodGV4LCB1dmQpICogY291bnQ7CiAgICBmbG9hdCByciA9IDUuMCAqIGJsdXJBbW91bnQ7CiAgICBmb3IgKGZsb2F0IGRpcmVjdGlvblN0ZXAgPSAwLjMxNDE1OTI3NDEwMTI1NzMyNDIxODc1LCBkID0gMC4wOyBkIDwgNi4yODMxODU0ODIwMjUxNDY0ODQzNzU7IGQgKz0gZGlyZWN0aW9uU3RlcCkKICAgIHsKICAgICAgICBmbG9hdCBjID0gY29zKGQpOwogICAgICAgIGZsb2F0IHMgPSBzaW4oZCk7CiAgICAgICAgZmxvYXQgZGlzdCA9IDAuMTAwMDAwMDAxNDkwMTE2MTE5Mzg0NzY1NjI1IC8gbWF4KGFicyhjKSwgYWJzKHMpKTsKICAgICAgICB2ZWMyIG9mZiA9IHZlYzIoYywgcyk7CiAgICAgICAgZm9yIChmbG9hdCBkaXN0MiA9IGRpc3QgKiAyLjAsIGkgPSBkaXN0ICogMS41OyBpIDw9IHJyOyBpICs9IGRpc3QyKQogICAgICAgIHsKICAgICAgICAgICAgZmxvYXQgd2VpZ2h0ID0gaSAvIHJyOwogICAgICAgICAgICBjb3VudCArPSB3ZWlnaHQ7CiAgICAgICAgICAgIGNvbG9yXzEgKz0gKCh0ZXh0dXJlMkQodGV4LCB1dmQgKyAoKG9mZiAqIHBpeGVsKSAqIGkpKSAqIHdlaWdodCkgKiBwb3dlcik7CiAgICAgICAgfQogICAgfQogICAgcmV0dXJuIGNvbG9yXzEgLyB2ZWM0KGNvdW50KTsKfQoKdm9pZCBtYWluKCkKewogICAgdmVjNCBmaW5jb2wgPSB0ZXh0dXJlMkQodGV4LCB0ZXhDb29yZCk7CiAgICB2ZWMzIF8xMzcgPSBmaW5jb2wueHl6ICogY29sb3IudzsKICAgIGZpbmNvbCA9IHZlYzQoXzEzNy54LCBfMTM3LnksIF8xMzcueiwgZmluY29sLncpOwogICAgZ2xfRnJhZ0RhdGFbMF0gPSBmaW5jb2w7CiAgICB2ZWMyIHV2ID0gdGV4Q29vcmQ7CiAgICBmbG9hdCBibHVyQW1vdW50ID0gMi4wICsgKHNpbihpVGltZSkgKiA0LjApOwogICAgdmVjMiBwYXJhbSA9IHV2OwogICAgZmxvYXQgcGFyYW1fMSA9IGJsdXJBbW91bnQ7CiAgICBmbG9hdCBwYXJhbV8yID0gMS41OwogICAgdmVjNCBiID0gYmx1cihwYXJhbSwgcGFyYW1fMSwgcGFyYW1fMikgKiBjb2xvcjsKICAgIGIgKj0gY29sb3IudzsKICAgIGdsX0ZyYWdEYXRhWzBdID0gYjsKfQoK";
kha_Shaders.test_fragData0 = "s698:I3ZlcnNpb24gMTAwCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gaGlnaHAgaW50OwoKdW5pZm9ybSBoaWdocCBzYW1wbGVyMkQgdGV4Owp1bmlmb3JtIGhpZ2hwIGZsb2F0IGlUaW1lOwp1bmlmb3JtIGhpZ2hwIHZlYzIgaVJlc29sdXRpb247Cgp2YXJ5aW5nIGhpZ2hwIHZlYzIgdGV4Q29vcmQ7CnZhcnlpbmcgaGlnaHAgdmVjNCBjb2xvcjsKCnZvaWQgbWFpbigpCnsKICAgIGhpZ2hwIHZlYzQgb3V0Q29sb3IgPSB0ZXh0dXJlMkQodGV4LCB0ZXhDb29yZCkgKiBjb2xvcjsKICAgIGhpZ2hwIHZlYzMgXzMwID0gb3V0Q29sb3IueHl6ICsgdmVjMygwLjUsIDAuMCwgMC4wKTsKICAgIG91dENvbG9yID0gdmVjNChfMzAueCwgXzMwLnksIF8zMC56LCBvdXRDb2xvci53KTsKICAgIGhpZ2hwIHZlYzMgXzQwID0gb3V0Q29sb3IueHl6ICogY29sb3IudzsKICAgIG91dENvbG9yID0gdmVjNChfNDAueCwgXzQwLnksIF80MC56LCBvdXRDb2xvci53KTsKICAgIGdsX0ZyYWdEYXRhWzBdID0gb3V0Q29sb3I7Cn0KCg";
kha_Shaders.test_fragData1 = "s714:I3ZlcnNpb24gMzAwIGVzCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gaGlnaHAgaW50OwoKdW5pZm9ybSBoaWdocCBzYW1wbGVyMkQgdGV4Owp1bmlmb3JtIGhpZ2hwIGZsb2F0IGlUaW1lOwp1bmlmb3JtIGhpZ2hwIHZlYzIgaVJlc29sdXRpb247CgppbiBoaWdocCB2ZWMyIHRleENvb3JkOwppbiBoaWdocCB2ZWM0IGNvbG9yOwpvdXQgaGlnaHAgdmVjNCBmcmFnQ29sb3I7Cgp2b2lkIG1haW4oKQp7CiAgICBoaWdocCB2ZWM0IG91dENvbG9yID0gdGV4dHVyZSh0ZXgsIHRleENvb3JkKSAqIGNvbG9yOwogICAgaGlnaHAgdmVjMyBfMzAgPSBvdXRDb2xvci54eXogKyB2ZWMzKDAuNSwgMC4wLCAwLjApOwogICAgb3V0Q29sb3IgPSB2ZWM0KF8zMC54LCBfMzAueSwgXzMwLnosIG91dENvbG9yLncpOwogICAgaGlnaHAgdmVjMyBfNDAgPSBvdXRDb2xvci54eXogKiBjb2xvci53OwogICAgb3V0Q29sb3IgPSB2ZWM0KF80MC54LCBfNDAueSwgXzQwLnosIG91dENvbG9yLncpOwogICAgZnJhZ0NvbG9yID0gb3V0Q29sb3I7Cn0KCg";
kha_Shaders.test_fragData2 = "s647:I3ZlcnNpb24gMTAwCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gbWVkaXVtcCBpbnQ7Cgp1bmlmb3JtIG1lZGl1bXAgc2FtcGxlcjJEIHRleDsKdW5pZm9ybSBmbG9hdCBpVGltZTsKdW5pZm9ybSB2ZWMyIGlSZXNvbHV0aW9uOwoKdmFyeWluZyB2ZWMyIHRleENvb3JkOwp2YXJ5aW5nIHZlYzQgY29sb3I7Cgp2b2lkIG1haW4oKQp7CiAgICB2ZWM0IG91dENvbG9yID0gdGV4dHVyZTJEKHRleCwgdGV4Q29vcmQpICogY29sb3I7CiAgICB2ZWMzIF8zMCA9IG91dENvbG9yLnh5eiArIHZlYzMoMC41LCAwLjAsIDAuMCk7CiAgICBvdXRDb2xvciA9IHZlYzQoXzMwLngsIF8zMC55LCBfMzAueiwgb3V0Q29sb3Iudyk7CiAgICB2ZWMzIF80MCA9IG91dENvbG9yLnh5eiAqIGNvbG9yLnc7CiAgICBvdXRDb2xvciA9IHZlYzQoXzQwLngsIF80MC55LCBfNDAueiwgb3V0Q29sb3Iudyk7CiAgICBnbF9GcmFnRGF0YVswXSA9IG91dENvbG9yOwp9Cgo";
kha_Shaders.vlcvideo_fragData0 = "s464:I3ZlcnNpb24gMTAwCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gaGlnaHAgaW50OwoKdW5pZm9ybSBoaWdocCBzYW1wbGVyMkQgdGV4OwoKdmFyeWluZyBoaWdocCB2ZWMyIHRleENvb3JkOwp2YXJ5aW5nIGhpZ2hwIHZlYzQgY29sb3I7Cgp2b2lkIG1haW4oKQp7CiAgICBoaWdocCB2ZWM0IG91dGNvbCA9IHRleHR1cmUyRCh0ZXgsIHRleENvb3JkKS56eXh3ICogY29sb3I7CiAgICBoaWdocCB2ZWMzIF8zMyA9IG91dGNvbC54eXogKiBjb2xvci53OwogICAgb3V0Y29sID0gdmVjNChfMzMueCwgXzMzLnksIF8zMy56LCBvdXRjb2wudyk7CiAgICBnbF9GcmFnRGF0YVswXSA9IG91dGNvbDsKfQoK";
kha_Shaders.vlcvideo_fragData1 = "s480:I3ZlcnNpb24gMzAwIGVzCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gaGlnaHAgaW50OwoKdW5pZm9ybSBoaWdocCBzYW1wbGVyMkQgdGV4OwoKaW4gaGlnaHAgdmVjMiB0ZXhDb29yZDsKaW4gaGlnaHAgdmVjNCBjb2xvcjsKb3V0IGhpZ2hwIHZlYzQgZnJhZ0NvbG9yOwoKdm9pZCBtYWluKCkKewogICAgaGlnaHAgdmVjNCBvdXRjb2wgPSB0ZXh0dXJlKHRleCwgdGV4Q29vcmQpLnp5eHcgKiBjb2xvcjsKICAgIGhpZ2hwIHZlYzMgXzMzID0gb3V0Y29sLnh5eiAqIGNvbG9yLnc7CiAgICBvdXRjb2wgPSB2ZWM0KF8zMy54LCBfMzMueSwgXzMzLnosIG91dGNvbC53KTsKICAgIGZyYWdDb2xvciA9IG91dGNvbDsKfQoK";
kha_Shaders.vlcvideo_fragData2 = "s438:I3ZlcnNpb24gMTAwCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gbWVkaXVtcCBpbnQ7Cgp1bmlmb3JtIG1lZGl1bXAgc2FtcGxlcjJEIHRleDsKCnZhcnlpbmcgdmVjMiB0ZXhDb29yZDsKdmFyeWluZyB2ZWM0IGNvbG9yOwoKdm9pZCBtYWluKCkKewogICAgdmVjNCBvdXRjb2wgPSB0ZXh0dXJlMkQodGV4LCB0ZXhDb29yZCkuenl4dyAqIGNvbG9yOwogICAgdmVjMyBfMzMgPSBvdXRjb2wueHl6ICogY29sb3IudzsKICAgIG91dGNvbCA9IHZlYzQoXzMzLngsIF8zMy55LCBfMzMueiwgb3V0Y29sLncpOwogICAgZ2xfRnJhZ0RhdGFbMF0gPSBvdXRjb2w7Cn0KCg";
kha_System.renderListeners = [];
kha_System.foregroundListeners = [];
kha_System.resumeListeners = [];
kha_System.pauseListeners = [];
kha_System.backgroundListeners = [];
kha_System.shutdownListeners = [];
kha_SystemImpl.mobile = false;
kha_SystemImpl.ios = false;
kha_SystemImpl.mobileAudioPlaying = false;
kha_SystemImpl.chrome = false;
kha_SystemImpl.firefox = false;
kha_SystemImpl.ie = false;
kha_SystemImpl.insideInputEvent = false;
kha_SystemImpl.estimatedRefreshRate = 60;
kha_SystemImpl.minimumScroll = 999;
kha_SystemImpl.lastFirstTouchX = 0;
kha_SystemImpl.lastFirstTouchY = 0;
kha_SystemImpl.iosSoundEnabled = false;
kha_SystemImpl.soundEnabled = false;
kha_SystemImpl.iosTouchs = [];
kha_Window.windows = [];
kha_Window.resizeCallbacks = [];
kha_arrays_ByteArray.LITTLE_ENDIAN = new Uint8Array(new Uint32Array([0x12345678]).buffer)[0] === 0x78;
kha_audio2_Audio.disableGcInteractions = false;
kha_audio2_Audio.intBox = new kha_internal_IntBox(0);
kha_audio2_Audio.virtualChannels = [];
kha_audio2_Audio1.lastAllocationCount = 0;
kha_audio2_ogg_vorbis_VorbisTools.INVERSE_DB_TABLE = [1.0649863e-07,1.1341951e-07,1.2079015e-07,1.2863978e-07,1.3699951e-07,1.4590251e-07,1.5538408e-07,1.6548181e-07,1.7623575e-07,1.8768855e-07,1.9988561e-07,2.1287530e-07,2.2670913e-07,2.4144197e-07,2.5713223e-07,2.7384213e-07,2.9163793e-07,3.1059021e-07,3.3077411e-07,3.5226968e-07,3.7516214e-07,3.9954229e-07,4.2550680e-07,4.5315863e-07,4.8260743e-07,5.1396998e-07,5.4737065e-07,5.8294187e-07,6.2082472e-07,6.6116941e-07,7.0413592e-07,7.4989464e-07,7.9862701e-07,8.5052630e-07,9.0579828e-07,9.6466216e-07,1.0273513e-06,1.0941144e-06,1.1652161e-06,1.2409384e-06,1.3215816e-06,1.4074654e-06,1.4989305e-06,1.5963394e-06,1.7000785e-06,1.8105592e-06,1.9282195e-06,2.0535261e-06,2.1869758e-06,2.3290978e-06,2.4804557e-06,2.6416497e-06,2.8133190e-06,2.9961443e-06,3.1908506e-06,3.3982101e-06,3.6190449e-06,3.8542308e-06,4.1047004e-06,4.3714470e-06,4.6555282e-06,4.9580707e-06,5.2802740e-06,5.6234160e-06,5.9888572e-06,6.3780469e-06,6.7925283e-06,7.2339451e-06,7.7040476e-06,8.2047000e-06,8.7378876e-06,9.3057248e-06,9.9104632e-06,1.0554501e-05,1.1240392e-05,1.1970856e-05,1.2748789e-05,1.3577278e-05,1.4459606e-05,1.5399272e-05,1.6400004e-05,1.7465768e-05,1.8600792e-05,1.9809576e-05,2.1096914e-05,2.2467911e-05,2.3928002e-05,2.5482978e-05,2.7139006e-05,2.8902651e-05,3.0780908e-05,3.2781225e-05,3.4911534e-05,3.7180282e-05,3.9596466e-05,4.2169667e-05,4.4910090e-05,4.7828601e-05,5.0936773e-05,5.4246931e-05,5.7772202e-05,6.1526565e-05,6.5524908e-05,6.9783085e-05,7.4317983e-05,7.9147585e-05,8.4291040e-05,8.9768747e-05,9.5602426e-05,0.00010181521,0.00010843174,0.00011547824,0.00012298267,0.00013097477,0.00013948625,0.00014855085,0.00015820453,0.00016848555,0.00017943469,0.00019109536,0.00020351382,0.00021673929,0.00023082423,0.00024582449,0.00026179955,0.00027881276,0.00029693158,0.00031622787,0.00033677814,0.00035866388,0.00038197188,0.00040679456,0.00043323036,0.00046138411,0.00049136745,0.00052329927,0.00055730621,0.00059352311,0.00063209358,0.00067317058,0.00071691700,0.00076350630,0.00081312324,0.00086596457,0.00092223983,0.00098217216,0.0010459992,0.0011139742,0.0011863665,0.0012634633,0.0013455702,0.0014330129,0.0015261382,0.0016253153,0.0017309374,0.0018434235,0.0019632195,0.0020908006,0.0022266726,0.0023713743,0.0025254795,0.0026895994,0.0028643847,0.0030505286,0.0032487691,0.0034598925,0.0036847358,0.0039241906,0.0041792066,0.0044507950,0.0047400328,0.0050480668,0.0053761186,0.0057254891,0.0060975636,0.0064938176,0.0069158225,0.0073652516,0.0078438871,0.0083536271,0.0088964928,0.009474637,0.010090352,0.010746080,0.011444421,0.012188144,0.012980198,0.013823725,0.014722068,0.015678791,0.016697687,0.017782797,0.018938423,0.020169149,0.021479854,0.022875735,0.024362330,0.025945531,0.027631618,0.029427276,0.031339626,0.033376252,0.035545228,0.037855157,0.040315199,0.042935108,0.045725273,0.048696758,0.051861348,0.055231591,0.058820850,0.062643361,0.066714279,0.071049749,0.075666962,0.080584227,0.085821044,0.091398179,0.097337747,0.10366330,0.11039993,0.11757434,0.12521498,0.13335215,0.14201813,0.15124727,0.16107617,0.17154380,0.18269168,0.19456402,0.20720788,0.22067342,0.23501402,0.25028656,0.26655159,0.28387361,0.30232132,0.32196786,0.34289114,0.36517414,0.38890521,0.41417847,0.44109412,0.46975890,0.50028648,0.53279791,0.56742212,0.60429640,0.64356699,0.68538959,0.72993007,0.77736504,0.82788260,0.88168307,0.9389798,1.0];
kha_graphics2_Graphics.fontGlyphs = (function($this) {
	var $r;
	var _g = [];
	{
		var _g1 = 32;
		while(_g1 < 256) _g.push(_g1++);
	}
	$r = _g;
	return $r;
}(this));
kha_input_Gamepad.__meta__ = { statics : { sendConnectEvent : { input : null}, sendDisconnectEvent : { input : null}}, fields : { sendAxisEvent : { input : null}, sendButtonEvent : { input : null}}};
kha_input_Gamepad.instances = [];
kha_input_Gamepad.connectListeners = [];
kha_input_Gamepad.disconnectListeners = [];
kha_input_Keyboard.__meta__ = { fields : { sendDownEvent : { input : null}, sendUpEvent : { input : null}, sendPressEvent : { input : null}}};
kha_input_Keyboard.keyBehavior = kha_input_BlockInterventions.Default;
kha_input_Mouse.__meta__ = { fields : { sendLeaveEvent : { input : null}, sendDownEvent : { input : null}, sendUpEvent : { input : null}, sendMoveEvent : { input : null}, sendWheelEvent : { input : null}}};
kha_input_Mouse.wheelEventBlockBehavior = kha_input_MouseEventBlockBehavior.Full;
kha_input_Surface.touchDownEventBlockBehavior = kha_input_TouchDownEventBlockBehavior.Full;
kha_internal_HdrFormat.exposurePattern = new EReg("EXPOSURE=\\s*([0-9]*[.][0-9]*)","i");
kha_internal_HdrFormat.formatPattern = new EReg("FORMAT=32-bit_rle_rgbe","i");
kha_internal_HdrFormat.widthHeightPattern = new EReg("-Y ([0-9]+) \\+X ([0-9]+)","i");
kha_js_Sound.loading = [];
kha_netsync_ControllerBuilder.nextId = 0;
no_logic_fox_Fox.variables = new no_logic_fox_core_BindData();
no_logic_fox_Fox.trackedAssetCodes = new haxe_ds_StringMap();
no_logic_fox_Fox.trackedElements = new haxe_ds_StringMap();
no_logic_fox_Fox.eventPool = new haxe_ds_StringMap();
no_logic_fox_Fox.eventPoolScoped = new haxe_ds_StringMap();
no_logic_fox_Fox.assets = new no_logic_fox_core_FoxAssets();
no_logic_fox_Fox.cache = new no_logic_fox_loader_FileCache();
no_logic_fox_Fox._intCount = 0;
no_logic_fox_Fox.bindCodeCount = 0;
no_logic_fox_Fox.initiated = false;
no_logic_fox_kontentum_Kontentum.rest_ip = "";
no_logic_fox_kontentum_Kontentum.rest_path = "rest/getExhibit";
no_logic_fox_kontentum_Kontentum.rest_ping = "rest/pingExhibit";
no_logic_fox_kontentum_Kontentum.remoteFilePath = "filevault";
no_logic_fox_kontentum_Kontentum.localFileDir = "";
no_logic_fox_kontentum_Kontentum.exhibitToken = "";
no_logic_fox_kontentum_Kontentum.pingTime = 1000;
no_logic_fox_utils_Ease.method = (function($this) {
	var $r;
	var _g = new haxe_ds_StringMap();
	_g.h["none"] = no_logic_fox_utils_Ease.easeLinear;
	_g.h["quadIn"] = no_logic_fox_utils_Ease.easeInQuad;
	_g.h["quadOut"] = no_logic_fox_utils_Ease.easeOutQuad;
	_g.h["quadInOut"] = no_logic_fox_utils_Ease.easeInOutQuad;
	_g.h["cubicIn"] = no_logic_fox_utils_Ease.easeInCubic;
	_g.h["cubicOut"] = no_logic_fox_utils_Ease.easeOutCubic;
	_g.h["cubicInOut"] = no_logic_fox_utils_Ease.easeInOutCubic;
	_g.h["quartIn"] = no_logic_fox_utils_Ease.easeInQuart;
	_g.h["quartOut"] = no_logic_fox_utils_Ease.easeOutQuart;
	_g.h["quartInOut"] = no_logic_fox_utils_Ease.easeInOutQuart;
	_g.h["quintIn"] = no_logic_fox_utils_Ease.easeInQuint;
	_g.h["quintOut"] = no_logic_fox_utils_Ease.easeOutQuint;
	_g.h["quintInOut"] = no_logic_fox_utils_Ease.easeInOutQuint;
	_g.h["sineIn"] = no_logic_fox_utils_Ease.easeInSine;
	_g.h["sineOut"] = no_logic_fox_utils_Ease.easeOutSine;
	_g.h["sineInOut"] = no_logic_fox_utils_Ease.easeInOutSine;
	_g.h["backIn"] = no_logic_fox_utils_Ease.easeInBack;
	_g.h["backOut"] = no_logic_fox_utils_Ease.easeOutBack;
	_g.h["backInOut"] = no_logic_fox_utils_Ease.easeInOutBack;
	_g.h["circIn"] = no_logic_fox_utils_Ease.easeInCircular;
	_g.h["circOut"] = no_logic_fox_utils_Ease.easeOutCircular;
	_g.h["circInOut"] = no_logic_fox_utils_Ease.easeInOutCircular;
	_g.h["bounceIn"] = no_logic_fox_utils_Ease.easeInBounce;
	_g.h["bounceOut"] = no_logic_fox_utils_Ease.easeOutBounce;
	_g.h["bounceInOut"] = no_logic_fox_utils_Ease.easeInOutBounce;
	_g.h["elasticIn"] = no_logic_fox_utils_Ease.easeInElastic;
	_g.h["elasticOut"] = no_logic_fox_utils_Ease.easeOutElastic;
	_g.h["elasticInOut"] = no_logic_fox_utils_Ease.easeInOutElastic;
	$r = _g;
	return $r;
}(this));
no_logic_kha_fox_assets_EmbeddedAssets.fonts = { "cft" : no_logic_kha_fox_utils_FontUtils.fontFromBase64("")};
no_logic_kha_fox_debug_Debug.updateTime = 0;
no_logic_kha_fox_debug_Debug.renderTime = 0;
no_logic_kha_fox_debug_Debug.totalFrameTime = 0;
no_logic_kha_fox_debug_Debug.profileData = new haxe_ds_StringMap();
no_logic_kha_fox_debug_Fps.times = no_logic_kha_fox_debug_Fps.initT();
no_logic_kha_fox_debug_Fps.smoothFps = new no_logic_fox_utils_FFloat(60,0.0);
no_logic_kha_fox_debug_Fps.smoothFrame = new no_logic_fox_utils_FFloat(60,0.0);
no_logic_kha_fox_debug_Fps.smoothMaxFps = new no_logic_fox_utils_FFloat(60,0.0);
no_logic_kha_fox_debug_Fps.bitmapCacheMs = new no_logic_fox_utils_FFloat(60,0.0);
no_logic_kha_fox_debug_Fps.x = 0;
no_logic_kha_fox_debug_Fps.y = 0;
no_logic_kha_fox_debug_Fps.width = 128;
no_logic_kha_fox_debug_Fps.height = 128;
no_logic_kha_fox_displaylist_DisplayList.currentItems = new haxe_ds_StringMap();
no_logic_kha_fox_displaylist_Text.defaultFontSize = 20;
no_logic_kha_fox_displaylist_uixcomp_UIXGComponent.namedInstances = new haxe_ds_StringMap();
no_logic_kha_fox_displaylist_uixcomp_UIXGComponentManager.trackedVariables = new haxe_ds_StringMap();
no_logic_kha_fox_displaylist_uixcomp_UIXGComponentManager.trackedAssetCodes = new haxe_ds_StringMap();
no_logic_kha_fox_fla_Fla.flas = new haxe_ds_StringMap();
no_logic_kha_fox_fla_FlaElement.elementCount = 0;
no_logic_kha_fox_input_KhaInput.keysPressed = new haxe_ds_IntMap();
no_logic_kha_fox_input_KhaInput.touchEmulatesMouse = true;
no_logic_kha_fox_input_KhaInput.mouseBlocked = false;
no_logic_kha_fox_input_KhaInput.keyBlocked = false;
no_logic_kha_fox_input_KhaInput.mouseX = 0;
no_logic_kha_fox_input_KhaInput.mouseY = 0;
no_logic_kha_fox_input_KhaInput.rawMouseX = 0;
no_logic_kha_fox_input_KhaInput.rawMouseY = 0;
no_logic_kha_fox_input_KhaInput.rawMoveX = 0;
no_logic_kha_fox_input_KhaInput.rawMoveY = 0;
no_logic_kha_fox_input_KhaInput.moveX = 0;
no_logic_kha_fox_input_KhaInput.moveY = 0;
no_logic_kha_fox_input_KhaInput.event_MLD = [];
no_logic_kha_fox_input_KhaInput.event_MLU = [];
no_logic_kha_fox_input_KhaInput.event_MRD = [];
no_logic_kha_fox_input_KhaInput.event_MRU = [];
no_logic_kha_fox_input_KhaInput.event_MM = [];
no_logic_kha_fox_input_KhaInput.event_MW = [];
no_logic_kha_fox_input_KhaInput.event_ML = [];
no_logic_kha_fox_input_KhaInput.event_KD = [];
no_logic_kha_fox_input_KhaInput.event_KU = [];
no_logic_kha_fox_input_KhaInput.event_KP = [];
no_logic_kha_fox_input_KhaInput.keyCombos = [];
no_logic_kha_fox_input_KhaInput.keysDown = new haxe_ds_IntMap();
tween_Delta.defaultChannel = new tween_TweenChannel();
tween_Delta.defaultTweenFunc = tween_easing_Linear.none;
tween_utils_Stopwatch.sample = 0.0;
tween_utils_Stopwatch.time = 0.0;
zui_Handle.global = new zui_Handle();
zui_Themes.dark = { NAME : "Default Dark", WINDOW_BG_COL : -13421773, WINDOW_TINT_COL : -1, ACCENT_COL : -12303292, ACCENT_HOVER_COL : -11974327, ACCENT_SELECT_COL : -10461088, BUTTON_COL : -12171706, BUTTON_TEXT_COL : -1513499, BUTTON_HOVER_COL : -11974327, BUTTON_PRESSED_COL : -15000805, TEXT_COL : -1513499, LABEL_COL : -3618616, SEPARATOR_COL : -14211289, HIGHLIGHT_COL : -14656100, CONTEXT_COL : -14540254, PANEL_BG_COL : -12895429, FONT_SIZE : 13, ELEMENT_W : 100, ELEMENT_H : 24, ELEMENT_OFFSET : 4, ARROW_SIZE : 5, BUTTON_H : 22, CHECK_SIZE : 15, CHECK_SELECT_SIZE : 8, SCROLL_W : 6, TEXT_OFFSET : 8, TAB_W : 6, FILL_WINDOW_BG : true, FILL_BUTTON_BG : true, FILL_ACCENT_BG : false, LINK_STYLE : 0};
zui_Zui.alwaysRedrawWindow = true;
zui_Zui.keyRepeat = true;
zui_Zui.touchControls = false;
zui_Zui.keyRepeatTime = 0.0;
zui_Zui.textToPaste = "";
zui_Zui.textToCopy = "";
zui_Zui.isCut = false;
zui_Zui.isCopy = false;
zui_Zui.isPaste = false;
zui_Zui.copyFrame = 0;
zui_Zui.comboFirst = true;
Main.main();
})(typeof exports != "undefined" ? exports : typeof window != "undefined" ? window : typeof self != "undefined" ? self : this, typeof window != "undefined" ? window : typeof global != "undefined" ? global : typeof self != "undefined" ? self : this);

//# sourceMappingURL=fox.js.map